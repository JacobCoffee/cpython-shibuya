Search.setIndex({"docnames": ["about", "bugs", "c-api/abstract", "c-api/allocation", "c-api/apiabiversion", "c-api/arg", "c-api/bool", "c-api/buffer", "c-api/bytearray", "c-api/bytes", "c-api/call", "c-api/capsule", "c-api/cell", "c-api/code", "c-api/codec", "c-api/complex", "c-api/concrete", "c-api/contextvars", "c-api/conversion", "c-api/coro", "c-api/datetime", "c-api/descriptor", "c-api/dict", "c-api/exceptions", "c-api/file", "c-api/float", "c-api/frame", "c-api/function", "c-api/gcsupport", "c-api/gen", "c-api/import", "c-api/index", "c-api/init", "c-api/init_config", "c-api/intro", "c-api/iter", "c-api/iterator", "c-api/list", "c-api/long", "c-api/mapping", "c-api/marshal", "c-api/memory", "c-api/memoryview", "c-api/method", "c-api/module", "c-api/none", "c-api/number", "c-api/object", "c-api/objimpl", "c-api/perfmaps", "c-api/refcounting", "c-api/reflection", "c-api/sequence", "c-api/set", "c-api/slice", "c-api/stable", "c-api/structures", "c-api/sys", "c-api/tuple", "c-api/type", "c-api/typehints", "c-api/typeobj", "c-api/unicode", "c-api/utilities", "c-api/veryhigh", "c-api/weakref", "contents", "copyright", "distributing/index", "extending/building", "extending/embedding", "extending/extending", "extending/index", "extending/newtypes", "extending/newtypes_tutorial", "extending/windows", "faq/design", "faq/extending", "faq/general", "faq/gui", "faq/index", "faq/installed", "faq/library", "faq/programming", "faq/windows", "glossary", "howto/annotations", "howto/argparse", "howto/clinic", "howto/cporting", "howto/curses", "howto/descriptor", "howto/enum", "howto/functional", "howto/index", "howto/instrumentation", "howto/ipaddress", "howto/isolating-extensions", "howto/logging", "howto/logging-cookbook", "howto/perf_profiling", "howto/pyporting", "howto/regex", "howto/sockets", "howto/sorting", "howto/unicode", "howto/urllib2", "installing/index", "library/__future__", "library/__main__", "library/_thread", "library/abc", "library/allos", "library/archiving", "library/argparse", "library/array", "library/ast", "library/asyncio", "library/asyncio-api-index", "library/asyncio-dev", "library/asyncio-eventloop", "library/asyncio-exceptions", "library/asyncio-extending", "library/asyncio-future", "library/asyncio-llapi-index", "library/asyncio-platforms", "library/asyncio-policy", "library/asyncio-protocol", "library/asyncio-queue", "library/asyncio-runner", "library/asyncio-stream", "library/asyncio-subprocess", "library/asyncio-sync", "library/asyncio-task", "library/atexit", "library/audit_events", "library/base64", "library/bdb", "library/binary", "library/binascii", "library/bisect", "library/builtins", "library/bz2", "library/calendar", "library/cmath", "library/cmd", "library/cmdline", "library/code", "library/codecs", "library/codeop", "library/collections", "library/collections.abc", "library/colorsys", "library/compileall", "library/concurrency", "library/concurrent", "library/concurrent.futures", "library/configparser", "library/constants", "library/contextlib", "library/contextvars", "library/copy", "library/copyreg", "library/crypto", "library/csv", "library/ctypes", "library/curses", "library/curses.ascii", "library/curses.panel", "library/custominterp", "library/dataclasses", "library/datatypes", "library/datetime", "library/dbm", "library/debug", "library/decimal", "library/development", "library/devmode", "library/dialog", "library/difflib", "library/dis", "library/distribution", "library/doctest", "library/email", "library/email.charset", "library/email.compat32-message", "library/email.contentmanager", "library/email.encoders", "library/email.errors", "library/email.examples", "library/email.generator", "library/email.header", "library/email.headerregistry", "library/email.iterators", "library/email.message", "library/email.mime", "library/email.parser", "library/email.policy", "library/email.utils", "library/ensurepip", "library/enum", "library/errno", "library/exceptions", "library/faulthandler", "library/fcntl", "library/filecmp", "library/fileformats", "library/fileinput", "library/filesys", "library/fnmatch", "library/fractions", "library/frameworks", "library/ftplib", "library/functional", "library/functions", "library/functools", "library/gc", "library/getopt", "library/getpass", "library/gettext", "library/glob", "library/graphlib", "library/grp", "library/gzip", "library/hashlib", "library/heapq", "library/hmac", "library/html", "library/html.entities", "library/html.parser", "library/http", "library/http.client", "library/http.cookiejar", "library/http.cookies", "library/http.server", "library/i18n", "library/idle", "library/imaplib", "library/importlib", "library/importlib.metadata", "library/importlib.resources", "library/importlib.resources.abc", "library/index", "library/inspect", "library/internet", "library/intro", "library/io", "library/ipaddress", "library/ipc", "library/itertools", "library/json", "library/keyword", "library/language", "library/linecache", "library/locale", "library/logging", "library/logging.config", "library/logging.handlers", "library/lzma", "library/mailbox", "library/markup", "library/marshal", "library/math", "library/mimetypes", "library/mm", "library/mmap", "library/modulefinder", "library/modules", "library/msvcrt", "library/multiprocessing", "library/multiprocessing.shared_memory", "library/netdata", "library/netrc", "library/numbers", "library/numeric", "library/operator", "library/optparse", "library/os", "library/os.path", "library/pathlib", "library/pdb", "library/persistence", "library/pickle", "library/pickletools", "library/pkgutil", "library/platform", "library/plistlib", "library/poplib", "library/posix", "library/pprint", "library/profile", "library/pty", "library/pwd", "library/py_compile", "library/pyclbr", "library/pydoc", "library/pyexpat", "library/python", "library/queue", "library/quopri", "library/random", "library/re", "library/readline", "library/reprlib", "library/resource", "library/rlcompleter", "library/runpy", "library/sched", "library/secrets", "library/security_warnings", "library/select", "library/selectors", "library/shelve", "library/shlex", "library/shutil", "library/signal", "library/site", "library/smtplib", "library/socket", "library/socketserver", "library/sqlite3", "library/ssl", "library/stat", "library/statistics", "library/stdtypes", "library/string", "library/stringprep", "library/struct", "library/subprocess", "library/superseded", "library/symtable", "library/sys", "library/sys.monitoring", "library/sys_path_init", "library/sysconfig", "library/syslog", "library/tabnanny", "library/tarfile", "library/tempfile", "library/termios", "library/test", "library/text", "library/textwrap", "library/threading", "library/time", "library/timeit", "library/tk", "library/tkinter", "library/tkinter.colorchooser", "library/tkinter.dnd", "library/tkinter.font", "library/tkinter.messagebox", "library/tkinter.scrolledtext", "library/tkinter.ttk", "library/token", "library/tokenize", "library/tomllib", "library/trace", "library/traceback", "library/tracemalloc", "library/tty", "library/turtle", "library/types", "library/typing", "library/unicodedata", "library/unittest", "library/unittest.mock", "library/unittest.mock-examples", "library/unix", "library/urllib", "library/urllib.error", "library/urllib.parse", "library/urllib.request", "library/urllib.robotparser", "library/uuid", "library/venv", "library/warnings", "library/wave", "library/weakref", "library/webbrowser", "library/windows", "library/winreg", "library/winsound", "library/wsgiref", "library/xml", "library/xml.dom", "library/xml.dom.minidom", "library/xml.dom.pulldom", "library/xml.etree.elementtree", "library/xml.sax", "library/xml.sax.handler", "library/xml.sax.reader", "library/xml.sax.utils", "library/xmlrpc", "library/xmlrpc.client", "library/xmlrpc.server", "library/zipapp", "library/zipfile", "library/zipimport", "library/zlib", "library/zoneinfo", "license", "reference/compound_stmts", "reference/datamodel", "reference/executionmodel", "reference/expressions", "reference/grammar", "reference/import", "reference/index", "reference/introduction", "reference/lexical_analysis", "reference/simple_stmts", "reference/toplevel_components", "tutorial/appendix", "tutorial/appetite", "tutorial/classes", "tutorial/controlflow", "tutorial/datastructures", "tutorial/errors", "tutorial/floatingpoint", "tutorial/index", "tutorial/inputoutput", "tutorial/interactive", "tutorial/interpreter", "tutorial/introduction", "tutorial/modules", "tutorial/stdlib", "tutorial/stdlib2", "tutorial/venv", "tutorial/whatnow", "using/cmdline", "using/configure", "using/editors", "using/index", "using/mac", "using/unix", "using/windows", "whatsnew/2.0", "whatsnew/2.1", "whatsnew/2.2", "whatsnew/2.3", "whatsnew/2.4", "whatsnew/2.5", "whatsnew/2.6", "whatsnew/2.7", "whatsnew/3.0", "whatsnew/3.1", "whatsnew/3.10", "whatsnew/3.11", "whatsnew/3.12", "whatsnew/3.13", "whatsnew/3.2", "whatsnew/3.3", "whatsnew/3.4", "whatsnew/3.5", "whatsnew/3.6", "whatsnew/3.7", "whatsnew/3.8", "whatsnew/3.9", "whatsnew/changelog", "whatsnew/index"], "filenames": ["about.rst", "bugs.rst", "c-api/abstract.rst", "c-api/allocation.rst", "c-api/apiabiversion.rst", "c-api/arg.rst", "c-api/bool.rst", "c-api/buffer.rst", "c-api/bytearray.rst", "c-api/bytes.rst", "c-api/call.rst", "c-api/capsule.rst", "c-api/cell.rst", "c-api/code.rst", "c-api/codec.rst", "c-api/complex.rst", "c-api/concrete.rst", "c-api/contextvars.rst", "c-api/conversion.rst", "c-api/coro.rst", "c-api/datetime.rst", "c-api/descriptor.rst", "c-api/dict.rst", "c-api/exceptions.rst", "c-api/file.rst", "c-api/float.rst", "c-api/frame.rst", "c-api/function.rst", "c-api/gcsupport.rst", "c-api/gen.rst", "c-api/import.rst", "c-api/index.rst", "c-api/init.rst", "c-api/init_config.rst", "c-api/intro.rst", "c-api/iter.rst", "c-api/iterator.rst", "c-api/list.rst", "c-api/long.rst", "c-api/mapping.rst", "c-api/marshal.rst", "c-api/memory.rst", "c-api/memoryview.rst", "c-api/method.rst", "c-api/module.rst", "c-api/none.rst", "c-api/number.rst", "c-api/object.rst", "c-api/objimpl.rst", "c-api/perfmaps.rst", "c-api/refcounting.rst", "c-api/reflection.rst", "c-api/sequence.rst", "c-api/set.rst", "c-api/slice.rst", "c-api/stable.rst", "c-api/structures.rst", "c-api/sys.rst", "c-api/tuple.rst", "c-api/type.rst", "c-api/typehints.rst", "c-api/typeobj.rst", "c-api/unicode.rst", "c-api/utilities.rst", "c-api/veryhigh.rst", "c-api/weakref.rst", "contents.rst", "copyright.rst", "distributing/index.rst", "extending/building.rst", "extending/embedding.rst", "extending/extending.rst", "extending/index.rst", "extending/newtypes.rst", "extending/newtypes_tutorial.rst", "extending/windows.rst", "faq/design.rst", "faq/extending.rst", "faq/general.rst", "faq/gui.rst", "faq/index.rst", "faq/installed.rst", "faq/library.rst", "faq/programming.rst", "faq/windows.rst", "glossary.rst", "howto/annotations.rst", "howto/argparse.rst", "howto/clinic.rst", "howto/cporting.rst", "howto/curses.rst", "howto/descriptor.rst", "howto/enum.rst", "howto/functional.rst", "howto/index.rst", "howto/instrumentation.rst", "howto/ipaddress.rst", "howto/isolating-extensions.rst", "howto/logging.rst", "howto/logging-cookbook.rst", "howto/perf_profiling.rst", "howto/pyporting.rst", "howto/regex.rst", "howto/sockets.rst", "howto/sorting.rst", "howto/unicode.rst", "howto/urllib2.rst", "installing/index.rst", "library/__future__.rst", "library/__main__.rst", "library/_thread.rst", "library/abc.rst", "library/allos.rst", "library/archiving.rst", "library/argparse.rst", "library/array.rst", "library/ast.rst", "library/asyncio.rst", "library/asyncio-api-index.rst", "library/asyncio-dev.rst", "library/asyncio-eventloop.rst", "library/asyncio-exceptions.rst", "library/asyncio-extending.rst", "library/asyncio-future.rst", "library/asyncio-llapi-index.rst", "library/asyncio-platforms.rst", "library/asyncio-policy.rst", "library/asyncio-protocol.rst", "library/asyncio-queue.rst", "library/asyncio-runner.rst", "library/asyncio-stream.rst", "library/asyncio-subprocess.rst", "library/asyncio-sync.rst", "library/asyncio-task.rst", "library/atexit.rst", "library/audit_events.rst", "library/base64.rst", "library/bdb.rst", "library/binary.rst", "library/binascii.rst", "library/bisect.rst", "library/builtins.rst", "library/bz2.rst", "library/calendar.rst", "library/cmath.rst", "library/cmd.rst", "library/cmdline.rst", "library/code.rst", "library/codecs.rst", "library/codeop.rst", "library/collections.rst", "library/collections.abc.rst", "library/colorsys.rst", "library/compileall.rst", "library/concurrency.rst", "library/concurrent.rst", "library/concurrent.futures.rst", "library/configparser.rst", "library/constants.rst", "library/contextlib.rst", "library/contextvars.rst", "library/copy.rst", "library/copyreg.rst", "library/crypto.rst", "library/csv.rst", "library/ctypes.rst", "library/curses.rst", "library/curses.ascii.rst", "library/curses.panel.rst", "library/custominterp.rst", "library/dataclasses.rst", "library/datatypes.rst", "library/datetime.rst", "library/dbm.rst", "library/debug.rst", "library/decimal.rst", "library/development.rst", "library/devmode.rst", "library/dialog.rst", "library/difflib.rst", "library/dis.rst", "library/distribution.rst", "library/doctest.rst", "library/email.rst", "library/email.charset.rst", "library/email.compat32-message.rst", "library/email.contentmanager.rst", "library/email.encoders.rst", "library/email.errors.rst", "library/email.examples.rst", "library/email.generator.rst", "library/email.header.rst", "library/email.headerregistry.rst", "library/email.iterators.rst", "library/email.message.rst", "library/email.mime.rst", "library/email.parser.rst", "library/email.policy.rst", "library/email.utils.rst", "library/ensurepip.rst", "library/enum.rst", "library/errno.rst", "library/exceptions.rst", "library/faulthandler.rst", "library/fcntl.rst", "library/filecmp.rst", "library/fileformats.rst", "library/fileinput.rst", "library/filesys.rst", "library/fnmatch.rst", "library/fractions.rst", "library/frameworks.rst", "library/ftplib.rst", "library/functional.rst", "library/functions.rst", "library/functools.rst", "library/gc.rst", "library/getopt.rst", "library/getpass.rst", "library/gettext.rst", "library/glob.rst", "library/graphlib.rst", "library/grp.rst", "library/gzip.rst", "library/hashlib.rst", "library/heapq.rst", "library/hmac.rst", "library/html.rst", "library/html.entities.rst", "library/html.parser.rst", "library/http.rst", "library/http.client.rst", "library/http.cookiejar.rst", "library/http.cookies.rst", "library/http.server.rst", "library/i18n.rst", "library/idle.rst", "library/imaplib.rst", "library/importlib.rst", "library/importlib.metadata.rst", "library/importlib.resources.rst", "library/importlib.resources.abc.rst", "library/index.rst", "library/inspect.rst", "library/internet.rst", "library/intro.rst", "library/io.rst", "library/ipaddress.rst", "library/ipc.rst", "library/itertools.rst", "library/json.rst", "library/keyword.rst", "library/language.rst", "library/linecache.rst", "library/locale.rst", "library/logging.rst", "library/logging.config.rst", "library/logging.handlers.rst", "library/lzma.rst", "library/mailbox.rst", "library/markup.rst", "library/marshal.rst", "library/math.rst", "library/mimetypes.rst", "library/mm.rst", "library/mmap.rst", "library/modulefinder.rst", "library/modules.rst", "library/msvcrt.rst", "library/multiprocessing.rst", "library/multiprocessing.shared_memory.rst", "library/netdata.rst", "library/netrc.rst", "library/numbers.rst", "library/numeric.rst", "library/operator.rst", "library/optparse.rst", "library/os.rst", "library/os.path.rst", "library/pathlib.rst", "library/pdb.rst", "library/persistence.rst", "library/pickle.rst", "library/pickletools.rst", "library/pkgutil.rst", "library/platform.rst", "library/plistlib.rst", "library/poplib.rst", "library/posix.rst", "library/pprint.rst", "library/profile.rst", "library/pty.rst", "library/pwd.rst", "library/py_compile.rst", "library/pyclbr.rst", "library/pydoc.rst", "library/pyexpat.rst", "library/python.rst", "library/queue.rst", "library/quopri.rst", "library/random.rst", "library/re.rst", "library/readline.rst", "library/reprlib.rst", "library/resource.rst", "library/rlcompleter.rst", "library/runpy.rst", "library/sched.rst", "library/secrets.rst", "library/security_warnings.rst", "library/select.rst", "library/selectors.rst", "library/shelve.rst", "library/shlex.rst", "library/shutil.rst", "library/signal.rst", "library/site.rst", "library/smtplib.rst", "library/socket.rst", "library/socketserver.rst", "library/sqlite3.rst", "library/ssl.rst", "library/stat.rst", "library/statistics.rst", "library/stdtypes.rst", "library/string.rst", "library/stringprep.rst", "library/struct.rst", "library/subprocess.rst", "library/superseded.rst", "library/symtable.rst", "library/sys.rst", "library/sys.monitoring.rst", "library/sys_path_init.rst", "library/sysconfig.rst", "library/syslog.rst", "library/tabnanny.rst", "library/tarfile.rst", "library/tempfile.rst", "library/termios.rst", "library/test.rst", "library/text.rst", "library/textwrap.rst", "library/threading.rst", "library/time.rst", "library/timeit.rst", "library/tk.rst", "library/tkinter.rst", "library/tkinter.colorchooser.rst", "library/tkinter.dnd.rst", "library/tkinter.font.rst", "library/tkinter.messagebox.rst", "library/tkinter.scrolledtext.rst", "library/tkinter.ttk.rst", "library/token.rst", "library/tokenize.rst", "library/tomllib.rst", "library/trace.rst", "library/traceback.rst", "library/tracemalloc.rst", "library/tty.rst", "library/turtle.rst", "library/types.rst", "library/typing.rst", "library/unicodedata.rst", "library/unittest.rst", "library/unittest.mock.rst", "library/unittest.mock-examples.rst", "library/unix.rst", "library/urllib.rst", "library/urllib.error.rst", "library/urllib.parse.rst", "library/urllib.request.rst", "library/urllib.robotparser.rst", "library/uuid.rst", "library/venv.rst", "library/warnings.rst", "library/wave.rst", "library/weakref.rst", "library/webbrowser.rst", "library/windows.rst", "library/winreg.rst", "library/winsound.rst", "library/wsgiref.rst", "library/xml.rst", "library/xml.dom.rst", "library/xml.dom.minidom.rst", "library/xml.dom.pulldom.rst", "library/xml.etree.elementtree.rst", "library/xml.sax.rst", "library/xml.sax.handler.rst", "library/xml.sax.reader.rst", "library/xml.sax.utils.rst", "library/xmlrpc.rst", "library/xmlrpc.client.rst", "library/xmlrpc.server.rst", "library/zipapp.rst", "library/zipfile.rst", "library/zipimport.rst", "library/zlib.rst", "library/zoneinfo.rst", "license.rst", "reference/compound_stmts.rst", "reference/datamodel.rst", "reference/executionmodel.rst", "reference/expressions.rst", "reference/grammar.rst", "reference/import.rst", "reference/index.rst", "reference/introduction.rst", "reference/lexical_analysis.rst", "reference/simple_stmts.rst", "reference/toplevel_components.rst", "tutorial/appendix.rst", "tutorial/appetite.rst", "tutorial/classes.rst", "tutorial/controlflow.rst", "tutorial/datastructures.rst", "tutorial/errors.rst", "tutorial/floatingpoint.rst", "tutorial/index.rst", "tutorial/inputoutput.rst", "tutorial/interactive.rst", "tutorial/interpreter.rst", "tutorial/introduction.rst", "tutorial/modules.rst", "tutorial/stdlib.rst", "tutorial/stdlib2.rst", "tutorial/venv.rst", "tutorial/whatnow.rst", "using/cmdline.rst", "using/configure.rst", "using/editors.rst", "using/index.rst", "using/mac.rst", "using/unix.rst", "using/windows.rst", "whatsnew/2.0.rst", "whatsnew/2.1.rst", "whatsnew/2.2.rst", "whatsnew/2.3.rst", "whatsnew/2.4.rst", "whatsnew/2.5.rst", "whatsnew/2.6.rst", "whatsnew/2.7.rst", "whatsnew/3.0.rst", "whatsnew/3.1.rst", "whatsnew/3.10.rst", "whatsnew/3.11.rst", "whatsnew/3.12.rst", "whatsnew/3.13.rst", "whatsnew/3.2.rst", "whatsnew/3.3.rst", "whatsnew/3.4.rst", "whatsnew/3.5.rst", "whatsnew/3.6.rst", "whatsnew/3.7.rst", "whatsnew/3.8.rst", "whatsnew/3.9.rst", "whatsnew/changelog.rst", "whatsnew/index.rst"], "titles": ["About these documents", "Dealing with Bugs", "Abstract Objects Layer", "Allocating Objects on the Heap", "API and ABI Versioning", "Parsing arguments and building values", "Boolean Objects", "Buffer Protocol", "Byte Array Objects", "Bytes Objects", "Call Protocol", "Capsules", "Cell Objects", "Code Objects", "Codec registry and support functions", "Complex Number Objects", "Concrete Objects Layer", "Context Variables Objects", "String conversion and formatting", "Coroutine Objects", "DateTime Objects", "Descriptor Objects", "Dictionary Objects", "Exception Handling", "File Objects", "Floating Point Objects", "Frame Objects", "Function Objects", "Supporting Cyclic Garbage Collection", "Generator Objects", "Importing Modules", "Python/C API Reference Manual", "Initialization, Finalization, and Threads", "Python Initialization Configuration", "Introduction", "Iterator Protocol", "Iterator Objects", "List Objects", "Integer Objects", "Mapping Protocol", "Data marshalling support", "Memory Management", "MemoryView objects", "Instance Method Objects", "Module Objects", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> Object", "Number Protocol", "Object Protocol", "Object Implementation Support", "Support for Perf Maps", "Reference Counting", "Reflection", "Sequence Protocol", "Set Objects", "Slice Objects", "C API Stability", "Common Object Structures", "Operating System Utilities", "Tuple Objects", "Type Objects", "Objects for Type Hinting", "Type Objects", "Unicode Objects and Codecs", "Utilities", "The Very High Level Layer", "Weak Reference Objects", "Python Documentation contents", "Copyright", "Distributing Python Modules", "<span class=\"section-number\">4. </span>Building C and C++ Extensions", "<span class=\"section-number\">1. </span>Embedding Python in Another Application", "<span class=\"section-number\">1. </span>Extending Python with C or C++", "Extending and Embedding the Python Interpreter", "<span class=\"section-number\">3. </span>Defining Extension Types: Assorted Topics", "<span class=\"section-number\">2. </span>Defining Extension Types: Tutorial", "<span class=\"section-number\">5. </span>Building C and C++ Extensions on Windows", "Design and History FAQ", "Extending/Embedding FAQ", "General Python FAQ", "Graphic User Interface FAQ", "Python Frequently Asked Questions", "\u201cWhy is Python Installed on my Computer?\u201d FAQ", "Library and Extension FAQ", "Programming FAQ", "Python on Windows FAQ", "Glossary", "Annotations Best Practices", "Argparse Tutorial", "Argument Clinic How-To", "Porting Extension Modules to Python 3", "Curses Programming with Python", "Descriptor HowTo Guide", "Enum HOWTO", "Functional Programming HOWTO", "Python HOWTOs", "Instrumenting CPython with DTrace and SystemTap", "An introduction to the ipaddress module", "Isolating Extension Modules", "Logging HOWTO", "Logging Cookbook", "Python support for the Linux <code class=\"docutils literal notranslate\"><span class=\"pre\">perf</span></code> profiler", "How to port Python 2 Code to Python 3", "Regular Expression HOWTO", "Socket Programming HOWTO", "Sorting HOW TO", "Unicode HOWTO", "HOWTO Fetch Internet Resources Using The urllib Package", "Installing Python Modules", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">__future__</span></code> \u2014 Future statement definitions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">__main__</span></code> \u2014 Top-level code environment", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">_thread</span></code> \u2014 Low-level threading API", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">abc</span></code> \u2014 Abstract Base Classes", "Generic Operating System Services", "Data Compression and Archiving", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">argparse</span></code> \u2014 Parser for command-line options, arguments and sub-commands", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">array</span></code> \u2014 Efficient arrays of numeric values", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ast</span></code> \u2014 Abstract Syntax Trees", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">asyncio</span></code> \u2014 Asynchronous I/O", "High-level API Index", "Developing with asyncio", "Event Loop", "Exceptions", "Extending", "Futures", "Low-level API Index", "Platform Support", "Policies", "Transports and Protocols", "Queues", "Runners", "Streams", "Subprocesses", "Synchronization Primitives", "Coroutines and Tasks", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">atexit</span></code> \u2014 Exit handlers", "Audit events table", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">base64</span></code> \u2014 Base16, Base32, Base64, Base85 Data Encodings", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bdb</span></code> \u2014 Debugger framework", "Binary Data Services", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">binascii</span></code> \u2014 Convert between binary and ASCII", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bisect</span></code> \u2014 Array bisection algorithm", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">builtins</span></code> \u2014 Built-in objects", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">bz2</span></code> \u2014 Support for <strong class=\"program\">bzip2</strong> compression", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">calendar</span></code> \u2014 General calendar-related functions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cmath</span></code> \u2014 Mathematical functions for complex numbers", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">cmd</span></code> \u2014 Support for line-oriented command interpreters", "Modules command-line interface (CLI)", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">code</span></code> \u2014 Interpreter base classes", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">codecs</span></code> \u2014 Codec registry and base classes", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">codeop</span></code> \u2014 Compile Python code", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">collections</span></code> \u2014 Container datatypes", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">collections.abc</span></code> \u2014 Abstract Base Classes for Containers", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">colorsys</span></code> \u2014 Conversions between color systems", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">compileall</span></code> \u2014 Byte-compile Python libraries", "Concurrent Execution", "The <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">concurrent</span></code> package", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">concurrent.futures</span></code> \u2014 Launching parallel tasks", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">configparser</span></code> \u2014 Configuration file parser", "Built-in Constants", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">contextlib</span></code> \u2014 Utilities for <code class=\"xref std std-keyword docutils literal notranslate\"><span class=\"pre\">with</span></code>-statement contexts", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">contextvars</span></code> \u2014 Context Variables", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">copy</span></code> \u2014 Shallow and deep copy operations", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">copyreg</span></code> \u2014 Register <code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pickle</span></code> support functions", "Cryptographic Services", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">csv</span></code> \u2014 CSV File Reading and Writing", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ctypes</span></code> \u2014 A foreign function library for Python", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">curses</span></code> \u2014 Terminal handling for character-cell displays", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">curses.ascii</span></code> \u2014 Utilities for ASCII characters", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">curses.panel</span></code> \u2014 A panel stack extension for curses", "Custom Python Interpreters", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dataclasses</span></code> \u2014 Data Classes", "Data Types", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">datetime</span></code> \u2014 Basic date and time types", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dbm</span></code> \u2014 Interfaces to Unix \u201cdatabases\u201d", "Debugging and Profiling", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">decimal</span></code> \u2014 Decimal fixed point and floating point arithmetic", "Development Tools", "Python Development Mode", "Tkinter Dialogs", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">difflib</span></code> \u2014 Helpers for computing deltas", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">dis</span></code> \u2014 Disassembler for Python bytecode", "Software Packaging and Distribution", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">doctest</span></code> \u2014 Test interactive Python examples", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">email</span></code> \u2014 An email and MIME handling package", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">email.charset</span></code>: Representing character sets", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">email.message.Message</span></code>: Representing an email message using the <code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">compat32</span></code> API", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">email.contentmanager</span></code>: Managing MIME Content", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">email.encoders</span></code>: Encoders", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">email.errors</span></code>: Exception and Defect classes", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">email</span></code>: Examples", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">email.generator</span></code>: Generating MIME documents", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">email.header</span></code>: Internationalized headers", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">email.headerregistry</span></code>: Custom Header Objects", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">email.iterators</span></code>: Iterators", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">email.message</span></code>: Representing an email message", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">email.mime</span></code>: Creating email and MIME objects from scratch", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">email.parser</span></code>: Parsing email messages", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">email.policy</span></code>: Policy Objects", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">email.utils</span></code>: Miscellaneous utilities", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ensurepip</span></code> \u2014 Bootstrapping the <code class=\"docutils literal notranslate\"><span class=\"pre\">pip</span></code> installer", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">enum</span></code> \u2014 Support for enumerations", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">errno</span></code> \u2014 Standard errno system symbols", "Built-in Exceptions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">faulthandler</span></code> \u2014 Dump the Python traceback", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">fcntl</span></code> \u2014 The <code class=\"docutils literal notranslate\"><span class=\"pre\">fcntl</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">ioctl</span></code> system calls", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">filecmp</span></code> \u2014 File and Directory Comparisons", "File Formats", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">fileinput</span></code> \u2014 Iterate over lines from multiple input streams", "File and Directory Access", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">fnmatch</span></code> \u2014 Unix filename pattern matching", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">fractions</span></code> \u2014 Rational numbers", "Program Frameworks", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ftplib</span></code> \u2014 FTP protocol client", "Functional Programming Modules", "Built-in Functions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">functools</span></code> \u2014 Higher-order functions and operations on callable objects", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gc</span></code> \u2014 Garbage Collector interface", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">getopt</span></code> \u2014 C-style parser for command line options", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">getpass</span></code> \u2014 Portable password input", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gettext</span></code> \u2014 Multilingual internationalization services", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">glob</span></code> \u2014 Unix style pathname pattern expansion", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">graphlib</span></code> \u2014 Functionality to operate with graph-like structures", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">grp</span></code> \u2014 The group database", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">gzip</span></code> \u2014 Support for <strong class=\"program\">gzip</strong> files", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">hashlib</span></code> \u2014 Secure hashes and message digests", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">heapq</span></code> \u2014 Heap queue algorithm", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">hmac</span></code> \u2014 Keyed-Hashing for Message Authentication", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">html</span></code> \u2014 HyperText Markup Language support", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">html.entities</span></code> \u2014 Definitions of HTML general entities", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">html.parser</span></code> \u2014 Simple HTML and XHTML parser", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">http</span></code> \u2014 HTTP modules", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">http.client</span></code> \u2014 HTTP protocol client", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">http.cookiejar</span></code> \u2014 Cookie handling for HTTP clients", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">http.cookies</span></code> \u2014 HTTP state management", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">http.server</span></code> \u2014 HTTP servers", "Internationalization", "IDLE", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">imaplib</span></code> \u2014 IMAP4 protocol client", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">importlib</span></code> \u2014 The implementation of <code class=\"xref std std-keyword docutils literal notranslate\"><span class=\"pre\">import</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">importlib.metadata</span></code> \u2013 Accessing package metadata", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">importlib.resources</span></code> \u2013 Package resource reading, opening and access", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">importlib.resources.abc</span></code> \u2013 Abstract base classes for resources", "The Python Standard Library", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">inspect</span></code> \u2014 Inspect live objects", "Internet Protocols and Support", "Introduction", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">io</span></code> \u2014 Core tools for working with streams", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ipaddress</span></code> \u2014 IPv4/IPv6 manipulation library", "Networking and Interprocess Communication", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">itertools</span></code> \u2014 Functions creating iterators for efficient looping", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">json</span></code> \u2014 JSON encoder and decoder", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">keyword</span></code> \u2014 Testing for Python keywords", "Python Language Services", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">linecache</span></code> \u2014 Random access to text lines", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">locale</span></code> \u2014 Internationalization services", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">logging</span></code> \u2014 Logging facility for Python", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">logging.config</span></code> \u2014 Logging configuration", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">logging.handlers</span></code> \u2014 Logging handlers", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">lzma</span></code> \u2014 Compression using the LZMA algorithm", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mailbox</span></code> \u2014 Manipulate mailboxes in various formats", "Structured Markup Processing Tools", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">marshal</span></code> \u2014 Internal Python object serialization", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">math</span></code> \u2014 Mathematical functions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mimetypes</span></code> \u2014 Map filenames to MIME types", "Multimedia Services", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mmap</span></code> \u2014 Memory-mapped file support", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">modulefinder</span></code> \u2014 Find modules used by a script", "Importing Modules", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">msvcrt</span></code> \u2014 Useful routines from the MS VC++ runtime", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">multiprocessing</span></code> \u2014 Process-based parallelism", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">multiprocessing.shared_memory</span></code> \u2014 Shared memory for direct access across processes", "Internet Data Handling", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">netrc</span></code> \u2014 netrc file processing", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">numbers</span></code> \u2014 Numeric abstract base classes", "Numeric and Mathematical Modules", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">operator</span></code> \u2014 Standard operators as functions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">optparse</span></code> \u2014 Parser for command line options", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">os</span></code> \u2014 Miscellaneous operating system interfaces", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">os.path</span></code> \u2014 Common pathname manipulations", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pathlib</span></code> \u2014 Object-oriented filesystem paths", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pdb</span></code> \u2014 The Python Debugger", "Data Persistence", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pickle</span></code> \u2014 Python object serialization", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pickletools</span></code> \u2014 Tools for pickle developers", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pkgutil</span></code> \u2014 Package extension utility", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">platform</span></code> \u2014  Access to underlying platform\u2019s identifying data", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">plistlib</span></code> \u2014 Generate and parse Apple <code class=\"docutils literal notranslate\"><span class=\"pre\">.plist</span></code> files", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">poplib</span></code> \u2014 POP3 protocol client", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">posix</span></code> \u2014 The most common POSIX system calls", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pprint</span></code> \u2014 Data pretty printer", "The Python Profilers", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pty</span></code> \u2014 Pseudo-terminal utilities", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pwd</span></code> \u2014 The password database", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">py_compile</span></code> \u2014 Compile Python source files", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pyclbr</span></code> \u2014 Python module browser support", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">pydoc</span></code> \u2014 Documentation generator and online help system", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">xml.parsers.expat</span></code> \u2014 Fast XML parsing using Expat", "Python Runtime Services", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">queue</span></code> \u2014 A synchronized queue class", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">quopri</span></code> \u2014 Encode and decode MIME quoted-printable data", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">random</span></code> \u2014 Generate pseudo-random numbers", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">re</span></code> \u2014 Regular expression operations", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">readline</span></code> \u2014 GNU readline interface", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">reprlib</span></code> \u2014 Alternate <code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">repr()</span></code> implementation", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">resource</span></code> \u2014 Resource usage information", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">rlcompleter</span></code> \u2014 Completion function for GNU readline", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">runpy</span></code> \u2014 Locating and executing Python modules", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sched</span></code> \u2014 Event scheduler", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">secrets</span></code> \u2014 Generate secure random numbers for managing secrets", "Security Considerations", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">select</span></code> \u2014 Waiting for I/O completion", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">selectors</span></code> \u2014 High-level I/O multiplexing", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">shelve</span></code> \u2014 Python object persistence", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">shlex</span></code> \u2014 Simple lexical analysis", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">shutil</span></code> \u2014 High-level file operations", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">signal</span></code> \u2014 Set handlers for asynchronous events", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">site</span></code> \u2014 Site-specific configuration hook", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">smtplib</span></code> \u2014 SMTP protocol client", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">socket</span></code> \u2014 Low-level networking interface", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">socketserver</span></code> \u2014 A framework for network servers", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sqlite3</span></code> \u2014 DB-API 2.0 interface for SQLite databases", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ssl</span></code> \u2014 TLS/SSL wrapper for socket objects", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stat</span></code> \u2014 Interpreting <code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">stat()</span></code> results", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">statistics</span></code> \u2014 Mathematical statistics functions", "Built-in Types", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">string</span></code> \u2014 Common string operations", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">stringprep</span></code> \u2014 Internet String Preparation", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">struct</span></code> \u2014 Interpret bytes as packed binary data", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">subprocess</span></code> \u2014 Subprocess management", "Superseded Modules", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">symtable</span></code> \u2014 Access to the compiler\u2019s symbol tables", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sys</span></code> \u2014 System-specific parameters and functions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sys.monitoring</span></code> \u2014 Execution event monitoring", "The initialization of the <code class=\"xref py py-data docutils literal notranslate\"><span class=\"pre\">sys.path</span></code> module search path", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">sysconfig</span></code> \u2014 Provide access to Python\u2019s configuration information", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">syslog</span></code> \u2014 Unix syslog library routines", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tabnanny</span></code> \u2014 Detection of ambiguous indentation", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tarfile</span></code> \u2014 Read and write tar archive files", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tempfile</span></code> \u2014 Generate temporary files and directories", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">termios</span></code> \u2014 POSIX style tty control", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">test</span></code> \u2014 Regression tests package for Python", "Text Processing Services", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">textwrap</span></code> \u2014 Text wrapping and filling", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">threading</span></code> \u2014 Thread-based parallelism", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">time</span></code> \u2014 Time access and conversions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">timeit</span></code> \u2014 Measure execution time of small code snippets", "Graphical User Interfaces with Tk", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tkinter</span></code> \u2014 Python interface to Tcl/Tk", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tkinter.colorchooser</span></code> \u2014 Color choosing dialog", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tkinter.dnd</span></code> \u2014 Drag and drop support", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tkinter.font</span></code> \u2014 Tkinter font wrapper", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tkinter.messagebox</span></code> \u2014 Tkinter message prompts", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tkinter.scrolledtext</span></code> \u2014 Scrolled Text Widget", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tkinter.ttk</span></code> \u2014 Tk themed widgets", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">token</span></code> \u2014 Constants used with Python parse trees", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tokenize</span></code> \u2014 Tokenizer for Python source", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tomllib</span></code> \u2014 Parse TOML files", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">trace</span></code> \u2014 Trace or track Python statement execution", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">traceback</span></code> \u2014 Print or retrieve a stack traceback", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tracemalloc</span></code> \u2014 Trace memory allocations", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">tty</span></code> \u2014 Terminal control functions", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">turtle</span></code> \u2014 Turtle graphics", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">types</span></code> \u2014 Dynamic type creation and names for built-in types", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">typing</span></code> \u2014 Support for type hints", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">unicodedata</span></code> \u2014 Unicode Database", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">unittest</span></code> \u2014 Unit testing framework", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">unittest.mock</span></code> \u2014 mock object library", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">unittest.mock</span></code> \u2014 getting started", "Unix Specific Services", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">urllib</span></code> \u2014 URL handling modules", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">urllib.error</span></code> \u2014 Exception classes raised by urllib.request", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">urllib.parse</span></code> \u2014 Parse URLs into components", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">urllib.request</span></code> \u2014 Extensible library for opening URLs", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">urllib.robotparser</span></code> \u2014  Parser for robots.txt", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">uuid</span></code> \u2014 UUID objects according to <strong>RFC 4122</strong>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">venv</span></code> \u2014 Creation of virtual environments", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">warnings</span></code> \u2014 Warning control", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wave</span></code> \u2014 Read and write WAV files", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">weakref</span></code> \u2014 Weak references", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">webbrowser</span></code> \u2014 Convenient web-browser controller", "MS Windows Specific Services", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">winreg</span></code> \u2014 Windows registry access", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">winsound</span></code> \u2014 Sound-playing interface for Windows", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">wsgiref</span></code> \u2014 WSGI Utilities and Reference Implementation", "XML Processing Modules", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">xml.dom</span></code> \u2014 The Document Object Model API", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">xml.dom.minidom</span></code> \u2014 Minimal DOM implementation", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">xml.dom.pulldom</span></code> \u2014 Support for building partial DOM trees", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">xml.etree.ElementTree</span></code> \u2014 The ElementTree XML API", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">xml.sax</span></code> \u2014 Support for SAX2 parsers", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">xml.sax.handler</span></code> \u2014 Base classes for SAX handlers", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">xml.sax.xmlreader</span></code> \u2014 Interface for XML parsers", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">xml.sax.saxutils</span></code> \u2014 SAX Utilities", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">xmlrpc</span></code> \u2014 XMLRPC server and client modules", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">xmlrpc.client</span></code> \u2014 XML-RPC client access", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">xmlrpc.server</span></code> \u2014 Basic XML-RPC servers", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">zipapp</span></code> \u2014 Manage executable Python zip archives", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">zipfile</span></code> \u2014 Work with ZIP archives", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">zipimport</span></code> \u2014 Import modules from Zip archives", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">zlib</span></code> \u2014 Compression compatible with <strong class=\"program\">gzip</strong>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">zoneinfo</span></code> \u2014 IANA time zone support", "History and License", "<span class=\"section-number\">8. </span>Compound statements", "<span class=\"section-number\">3. </span>Data model", "<span class=\"section-number\">4. </span>Execution model", "<span class=\"section-number\">6. </span>Expressions", "<span class=\"section-number\">10. </span>Full Grammar specification", "<span class=\"section-number\">5. </span>The import system", "The Python Language Reference", "<span class=\"section-number\">1. </span>Introduction", "<span class=\"section-number\">2. </span>Lexical analysis", "<span class=\"section-number\">7. </span>Simple statements", "<span class=\"section-number\">9. </span>Top-level components", "<span class=\"section-number\">16. </span>Appendix", "<span class=\"section-number\">1. </span>Whetting Your Appetite", "<span class=\"section-number\">9. </span>Classes", "<span class=\"section-number\">4. </span>More Control Flow Tools", "<span class=\"section-number\">5. </span>Data Structures", "<span class=\"section-number\">8. </span>Errors and Exceptions", "<span class=\"section-number\">15. </span>Floating Point Arithmetic:  Issues and Limitations", "The Python Tutorial", "<span class=\"section-number\">7. </span>Input and Output", "<span class=\"section-number\">14. </span>Interactive Input Editing and History Substitution", "<span class=\"section-number\">2. </span>Using the Python Interpreter", "<span class=\"section-number\">3. </span>An Informal Introduction to Python", "<span class=\"section-number\">6. </span>Modules", "<span class=\"section-number\">10. </span>Brief Tour of the Standard Library", "<span class=\"section-number\">11. </span>Brief Tour of the Standard Library \u2014 Part II", "<span class=\"section-number\">12. </span>Virtual Environments and Packages", "<span class=\"section-number\">13. </span>What Now?", "<span class=\"section-number\">1. </span>Command line and environment", "<span class=\"section-number\">3. </span>Configure Python", "<span class=\"section-number\">6. </span>Editors and IDEs", "Python Setup and Usage", "<span class=\"section-number\">5. </span>Using Python on a Mac", "<span class=\"section-number\">2. </span>Using Python on Unix platforms", "<span class=\"section-number\">4. </span>Using Python on Windows", "What\u2019s New in Python 2.0", "What\u2019s New in Python 2.1", "What\u2019s New in Python 2.2", "What\u2019s New in Python 2.3", "What\u2019s New in Python 2.4", "What\u2019s New in Python 2.5", "What\u2019s New in Python 2.6", "What\u2019s New in Python 2.7", "What\u2019s New In Python 3.0", "What\u2019s New In Python 3.1", "What\u2019s New In Python 3.10", "What\u2019s New In Python 3.11", "What\u2019s New In Python 3.12", "What\u2019s New In Python 3.13", "What\u2019s New In Python 3.2", "What\u2019s New In Python 3.3", "What\u2019s New In Python 3.4", "What\u2019s New In Python 3.5", "What\u2019s New In Python 3.6", "What\u2019s New In Python 3.7", "What\u2019s New In Python 3.8", "What\u2019s New In Python 3.9", "Changelog", "What\u2019s New in Python"], "terms": {"These": [0, 5, 8, 9, 10, 13, 23, 24, 32, 33, 34, 40, 41, 44, 55, 56, 57, 61, 62, 64, 70, 71, 73, 74, 75, 76, 78, 82, 83, 85, 87, 88, 90, 93, 97, 98, 99, 101, 102, 103, 105, 106, 107, 114, 127, 135, 137, 139, 142, 145, 148, 151, 153, 157, 159, 164, 165, 166, 167, 170, 172, 173, 174, 175, 178, 179, 180, 181, 182, 185, 187, 191, 194, 196, 197, 200, 212, 214, 216, 224, 225, 232, 236, 239, 243, 246, 247, 249, 252, 254, 255, 256, 257, 258, 259, 262, 263, 265, 268, 269, 273, 275, 276, 277, 278, 279, 282, 290, 296, 300, 301, 302, 304, 317, 318, 319, 320, 321, 322, 323, 324, 325, 328, 330, 331, 332, 334, 340, 343, 344, 347, 357, 361, 363, 365, 366, 367, 371, 372, 375, 381, 383, 385, 386, 388, 389, 395, 397, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 415, 416, 417, 419, 421, 423, 425, 426, 427, 430, 435, 436, 437, 439, 441, 443, 444, 447, 448, 449, 450, 451, 452, 453, 457, 458], "argener": [0, 1, 7, 12, 13, 14, 16, 23, 26, 30, 31, 32, 34, 36, 39, 41, 47, 49, 52, 55, 56, 59, 60, 61, 64, 66, 69, 70, 71, 74, 75, 77, 80, 84, 85, 89, 91, 92, 95, 96, 97, 98, 99, 100, 102, 103, 105, 108, 111, 114, 116, 120, 124, 127, 128, 129, 131, 133, 135, 136, 137, 139, 145, 148, 150, 151, 153, 156, 157, 159, 161, 163, 164, 165, 166, 170, 171, 172, 173, 175, 176, 179, 180, 182, 183, 185, 189, 192, 194, 197, 198, 200, 202, 206, 208, 212, 213, 214, 215, 216, 218, 219, 221, 224, 225, 229, 231, 232, 233, 234, 236, 237, 238, 242, 246, 249, 254, 255, 256, 257, 258, 259, 260, 261, 262, 268, 269, 270, 271, 273, 274, 275, 277, 282, 287, 289, 291, 293, 296, 301, 302, 303, 305, 307, 312, 313, 317, 318, 320, 322, 323, 325, 326, 327, 328, 331, 332, 336, 337, 342, 343, 344, 347, 353, 354, 355, 357, 358, 361, 362, 364, 365, 366, 371, 372, 374, 375, 378, 381, 383, 384, 385, 386, 387, 388, 389, 390, 392, 394, 395, 396, 399, 400, 401, 404, 406, 407, 409, 410, 411, 414, 416, 417, 418, 419, 421, 425, 429, 433, 436, 437, 438, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 457], "from": [0, 1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 20, 22, 23, 24, 25, 26, 27, 28, 30, 33, 34, 35, 37, 38, 40, 41, 42, 44, 45, 46, 47, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 72, 73, 74, 75, 76, 78, 79, 81, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 114, 115, 116, 118, 119, 120, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 139, 140, 142, 143, 145, 147, 148, 150, 151, 152, 153, 156, 157, 160, 161, 164, 166, 167, 168, 170, 172, 173, 175, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 204, 205, 208, 209, 210, 212, 214, 215, 216, 218, 219, 221, 223, 224, 225, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 249, 250, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 265, 266, 267, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 330, 331, 332, 334, 337, 338, 339, 340, 342, 343, 344, 345, 347, 348, 352, 353, 354, 355, 356, 357, 358, 359, 362, 363, 364, 365, 366, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 394, 395, 396, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 434, 435, 437, 438, 439, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460], "restructuredtext": [0, 78, 182], "sourc": [0, 5, 13, 20, 22, 23, 30, 32, 33, 34, 55, 64, 66, 70, 71, 73, 74, 76, 77, 79, 85, 87, 88, 90, 91, 92, 93, 99, 107, 108, 111, 114, 116, 117, 120, 121, 123, 125, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 140, 142, 143, 145, 147, 148, 149, 150, 151, 152, 153, 156, 157, 159, 161, 162, 164, 165, 166, 167, 170, 172, 173, 175, 178, 179, 180, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 205, 207, 209, 210, 212, 214, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 237, 239, 240, 241, 242, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 263, 266, 269, 270, 272, 273, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 289, 290, 291, 294, 295, 298, 299, 300, 301, 303, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 334, 336, 337, 338, 340, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 401, 402, 403, 407, 409, 410, 411, 412, 413, 417, 418, 420, 421, 425, 428, 430, 431, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "sphinx": [0, 78, 82, 99, 449], "processor": [0, 25, 34, 55, 71, 76, 85, 91, 103, 105, 156, 269, 276, 285, 296, 304, 318, 372, 384, 390, 403, 437, 441, 442, 457, 458], "specif": [0, 1, 10, 16, 23, 27, 33, 34, 35, 41, 44, 47, 49, 55, 56, 58, 59, 61, 64, 65, 66, 71, 74, 75, 78, 79, 83, 84, 85, 86, 87, 88, 91, 94, 95, 96, 97, 98, 99, 101, 102, 105, 106, 107, 110, 114, 116, 118, 120, 125, 126, 127, 128, 135, 138, 140, 144, 145, 151, 157, 159, 161, 162, 164, 165, 166, 170, 172, 173, 175, 182, 183, 184, 185, 191, 192, 194, 195, 197, 199, 200, 201, 202, 204, 210, 212, 214, 215, 216, 217, 219, 220, 221, 224, 229, 231, 232, 233, 234, 236, 238, 239, 240, 241, 242, 243, 245, 246, 247, 249, 250, 254, 255, 256, 257, 259, 261, 262, 268, 269, 272, 275, 277, 278, 279, 280, 282, 285, 290, 296, 297, 298, 300, 303, 304, 309, 310, 311, 313, 314, 317, 318, 319, 320, 321, 322, 324, 327, 332, 333, 334, 337, 338, 340, 342, 343, 344, 347, 350, 352, 354, 362, 363, 364, 365, 366, 367, 371, 372, 374, 375, 376, 377, 378, 383, 385, 386, 388, 392, 394, 397, 398, 399, 400, 401, 402, 403, 407, 408, 409, 410, 411, 412, 414, 415, 416, 418, 421, 427, 428, 430, 435, 436, 437, 438, 439, 445, 446, 448, 449, 451, 452, 453, 455, 456, 457, 458], "written": [0, 7, 9, 18, 23, 24, 33, 34, 41, 44, 47, 50, 56, 57, 62, 70, 71, 72, 74, 76, 78, 81, 82, 83, 85, 87, 88, 89, 90, 91, 93, 97, 99, 100, 101, 102, 103, 105, 109, 115, 120, 127, 130, 131, 133, 139, 147, 148, 151, 153, 157, 159, 164, 165, 166, 173, 180, 182, 185, 191, 194, 202, 203, 214, 216, 218, 219, 223, 224, 230, 234, 236, 242, 243, 245, 246, 257, 259, 261, 265, 269, 276, 277, 282, 283, 286, 289, 290, 293, 295, 302, 306, 310, 312, 314, 315, 318, 319, 320, 321, 323, 324, 331, 336, 337, 338, 339, 340, 357, 359, 361, 362, 363, 365, 367, 376, 377, 378, 381, 383, 385, 388, 394, 395, 396, 397, 398, 401, 403, 406, 409, 410, 411, 413, 414, 415, 416, 417, 419, 421, 424, 425, 428, 429, 430, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458], "develop": [0, 1, 32, 33, 34, 55, 66, 73, 75, 76, 81, 83, 84, 85, 88, 90, 95, 97, 98, 99, 102, 105, 107, 117, 120, 151, 154, 159, 165, 174, 175, 202, 203, 217, 224, 238, 242, 246, 252, 255, 256, 257, 276, 277, 278, 289, 295, 320, 324, 328, 331, 340, 347, 361, 363, 376, 394, 397, 400, 401, 414, 416, 420, 426, 430, 431, 432, 434, 435, 436, 438, 439, 440, 441, 442, 444, 445, 448, 449, 450, 451, 452, 453, 454, 457, 458], "its": [0, 3, 4, 5, 7, 8, 9, 10, 11, 15, 23, 24, 25, 28, 30, 32, 33, 34, 38, 41, 42, 44, 46, 47, 50, 53, 55, 58, 59, 61, 62, 64, 70, 71, 72, 73, 74, 76, 77, 78, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 119, 120, 123, 124, 127, 128, 129, 130, 131, 132, 133, 136, 137, 140, 142, 144, 145, 148, 150, 153, 156, 157, 159, 160, 161, 164, 165, 166, 167, 170, 172, 173, 175, 180, 182, 183, 184, 185, 186, 187, 188, 191, 192, 194, 196, 197, 198, 199, 200, 202, 203, 207, 212, 214, 215, 217, 219, 221, 224, 225, 226, 229, 231, 232, 234, 236, 237, 238, 239, 240, 241, 243, 245, 246, 249, 250, 253, 255, 256, 257, 259, 262, 263, 265, 266, 269, 270, 275, 276, 277, 279, 280, 282, 284, 286, 287, 289, 290, 291, 293, 295, 296, 297, 300, 301, 302, 303, 304, 305, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 327, 328, 330, 331, 334, 337, 338, 340, 342, 343, 344, 345, 346, 347, 350, 353, 355, 357, 358, 361, 362, 363, 364, 365, 366, 367, 371, 372, 374, 375, 376, 377, 378, 379, 381, 383, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 399, 401, 402, 403, 404, 405, 407, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "toolchain": [0, 443, 455], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 80, 85, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 108, 110, 111, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 173, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 265, 266, 267, 269, 270, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 442, 444, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460], "an": [0, 1, 3, 5, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 69, 72, 73, 74, 75, 78, 79, 81, 85, 87, 88, 89, 90, 92, 93, 94, 95, 97, 98, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 131, 132, 133, 134, 136, 137, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 154, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 170, 173, 175, 177, 178, 179, 180, 182, 184, 186, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 210, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 368, 370, 371, 372, 374, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460], "entir": [0, 5, 34, 41, 61, 71, 73, 82, 83, 85, 88, 90, 91, 96, 97, 101, 102, 103, 105, 109, 120, 140, 143, 150, 156, 159, 161, 166, 173, 185, 189, 194, 196, 202, 205, 219, 224, 225, 229, 231, 236, 242, 246, 247, 249, 254, 255, 257, 258, 259, 261, 265, 276, 277, 301, 304, 313, 314, 320, 321, 323, 324, 325, 331, 337, 342, 343, 345, 347, 353, 361, 364, 365, 375, 376, 381, 385, 388, 391, 401, 402, 404, 407, 410, 411, 416, 417, 421, 424, 430, 436, 438, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 452, 453, 456], "volunt": [0, 1, 401, 409, 443, 448], "effort": [0, 32, 55, 77, 83, 85, 88, 94, 99, 102, 215, 262, 289, 323, 338, 415, 421, 437, 439, 440, 441, 443, 444, 446, 447, 448, 451, 456], "just": [0, 1, 9, 10, 13, 28, 32, 34, 38, 49, 50, 61, 62, 64, 70, 71, 73, 74, 75, 76, 77, 78, 82, 83, 84, 85, 87, 88, 90, 91, 92, 93, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 114, 116, 122, 123, 132, 133, 142, 143, 145, 147, 148, 149, 150, 151, 157, 159, 165, 166, 168, 170, 172, 175, 179, 182, 183, 189, 190, 200, 202, 207, 212, 214, 215, 219, 221, 223, 224, 232, 236, 238, 240, 241, 249, 254, 255, 256, 257, 259, 269, 270, 273, 276, 277, 279, 280, 282, 290, 295, 296, 300, 301, 302, 310, 312, 313, 315, 318, 319, 320, 321, 324, 325, 328, 330, 331, 334, 337, 338, 340, 342, 343, 347, 353, 358, 361, 363, 365, 366, 367, 372, 375, 378, 383, 384, 385, 388, 389, 390, 395, 396, 397, 398, 402, 403, 405, 407, 409, 411, 414, 415, 416, 417, 418, 419, 421, 424, 425, 427, 431, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457], "like": [0, 1, 3, 5, 7, 10, 12, 13, 16, 18, 23, 25, 28, 30, 32, 33, 34, 35, 41, 42, 44, 47, 49, 53, 54, 55, 56, 58, 59, 61, 62, 64, 66, 71, 72, 73, 74, 75, 76, 77, 82, 83, 84, 85, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 101, 102, 103, 105, 106, 109, 114, 115, 116, 118, 120, 121, 123, 124, 127, 130, 132, 133, 136, 137, 139, 142, 143, 145, 148, 149, 150, 151, 153, 157, 158, 159, 161, 162, 164, 165, 166, 170, 171, 172, 173, 175, 179, 180, 182, 185, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 202, 203, 204, 207, 212, 214, 215, 217, 218, 219, 220, 222, 223, 224, 225, 226, 231, 232, 233, 234, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 249, 250, 254, 255, 256, 257, 258, 259, 261, 262, 263, 265, 269, 270, 272, 276, 277, 278, 279, 280, 282, 283, 285, 286, 288, 289, 290, 291, 292, 293, 295, 296, 298, 299, 300, 301, 303, 306, 308, 310, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 330, 331, 332, 334, 336, 337, 338, 339, 340, 343, 344, 347, 353, 355, 358, 359, 360, 361, 362, 363, 365, 366, 367, 370, 371, 372, 376, 377, 378, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 396, 397, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 421, 423, 424, 425, 426, 427, 429, 430, 431, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "itself": [0, 1, 12, 32, 41, 44, 47, 49, 59, 61, 62, 65, 70, 71, 73, 74, 76, 83, 85, 86, 88, 91, 92, 93, 97, 98, 99, 102, 106, 109, 110, 111, 114, 116, 120, 127, 133, 137, 143, 144, 145, 150, 153, 165, 166, 167, 170, 172, 177, 180, 182, 184, 186, 192, 194, 202, 204, 214, 215, 218, 232, 234, 236, 237, 238, 243, 245, 247, 249, 250, 255, 256, 257, 259, 268, 269, 270, 276, 277, 279, 282, 290, 296, 301, 313, 314, 318, 320, 321, 324, 325, 326, 328, 331, 334, 337, 339, 340, 343, 353, 358, 361, 362, 363, 365, 366, 371, 372, 375, 376, 389, 390, 391, 394, 403, 404, 405, 407, 409, 410, 411, 415, 416, 418, 424, 429, 430, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 451, 452, 453, 456, 458], "Ifyou": [0, 1, 5, 10, 13, 16, 22, 23, 25, 26, 30, 32, 33, 34, 37, 38, 40, 41, 42, 44, 47, 50, 54, 55, 56, 57, 58, 61, 62, 64, 65, 70, 71, 73, 74, 75, 77, 78, 79, 81, 84, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 109, 110, 111, 114, 116, 117, 120, 127, 134, 136, 139, 142, 143, 144, 145, 148, 149, 150, 151, 156, 157, 159, 160, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 179, 181, 182, 184, 185, 187, 189, 190, 191, 194, 195, 196, 197, 200, 202, 203, 204, 207, 210, 212, 214, 215, 216, 218, 219, 220, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 243, 245, 246, 247, 250, 253, 254, 255, 256, 257, 258, 259, 261, 262, 265, 268, 269, 273, 276, 277, 278, 279, 280, 282, 283, 287, 288, 289, 290, 295, 296, 300, 301, 302, 308, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 331, 334, 337, 338, 340, 342, 343, 345, 346, 347, 349, 353, 357, 358, 359, 361, 362, 363, 365, 366, 367, 371, 372, 374, 375, 376, 377, 378, 379, 381, 383, 384, 385, 386, 387, 388, 389, 390, 392, 394, 395, 396, 397, 399, 400, 401, 402, 403, 405, 406, 407, 409, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 428, 429, 431, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457], "want": [0, 5, 7, 23, 25, 31, 32, 33, 34, 54, 61, 70, 71, 73, 74, 75, 76, 78, 81, 82, 84, 87, 88, 90, 91, 92, 93, 96, 97, 98, 99, 101, 102, 103, 105, 106, 110, 111, 114, 116, 120, 126, 130, 136, 137, 141, 145, 147, 149, 157, 159, 165, 166, 169, 172, 179, 182, 185, 189, 190, 191, 194, 197, 200, 204, 207, 214, 215, 217, 219, 220, 224, 231, 232, 234, 236, 237, 238, 239, 243, 246, 254, 255, 256, 257, 262, 263, 265, 268, 269, 273, 276, 277, 278, 279, 280, 282, 283, 284, 290, 295, 300, 301, 308, 310, 311, 314, 315, 317, 318, 319, 320, 321, 324, 325, 328, 331, 337, 338, 342, 343, 347, 358, 361, 363, 365, 366, 367, 371, 372, 374, 376, 378, 383, 388, 396, 397, 400, 401, 403, 404, 407, 413, 414, 415, 416, 417, 418, 419, 421, 424, 425, 427, 428, 430, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 453, 455, 457, 458], "contribut": [0, 34, 76, 78, 85, 107, 170, 219, 224, 290, 301, 401, 407, 429, 435, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "pleas": [0, 1, 10, 24, 32, 34, 69, 76, 78, 86, 88, 97, 98, 99, 101, 102, 103, 106, 107, 114, 115, 122, 131, 150, 157, 165, 173, 212, 219, 231, 237, 238, 246, 255, 256, 257, 277, 287, 301, 304, 314, 317, 318, 320, 321, 328, 331, 337, 338, 339, 361, 363, 366, 376, 383, 403, 405, 409, 416, 418, 432, 436, 437, 438, 440, 442, 445, 447, 449, 450, 452, 453, 454, 455, 456, 457, 458], "take": [0, 1, 5, 9, 13, 22, 23, 27, 32, 34, 47, 49, 50, 56, 58, 61, 62, 64, 71, 73, 74, 76, 77, 82, 83, 85, 88, 90, 91, 92, 93, 98, 99, 100, 101, 102, 103, 104, 105, 107, 114, 116, 119, 120, 129, 133, 137, 143, 148, 150, 157, 159, 164, 165, 166, 167, 170, 175, 176, 179, 180, 182, 183, 187, 190, 191, 192, 195, 196, 197, 198, 204, 207, 212, 214, 215, 216, 219, 221, 224, 232, 233, 234, 236, 238, 239, 246, 249, 250, 254, 255, 256, 258, 259, 262, 263, 269, 276, 277, 279, 282, 283, 289, 290, 300, 301, 306, 307, 309, 310, 312, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324, 325, 327, 328, 331, 334, 337, 338, 339, 340, 342, 345, 347, 353, 359, 361, 362, 363, 365, 366, 367, 371, 372, 375, 376, 383, 385, 386, 387, 388, 390, 392, 394, 396, 397, 399, 402, 403, 405, 407, 411, 414, 416, 419, 421, 423, 424, 425, 426, 430, 431, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458, 460], "look": [0, 14, 18, 28, 32, 34, 35, 41, 44, 47, 49, 55, 61, 62, 70, 71, 73, 74, 75, 76, 77, 78, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 95, 98, 99, 101, 102, 103, 105, 106, 109, 111, 114, 116, 120, 121, 133, 136, 140, 144, 148, 150, 157, 159, 165, 166, 169, 170, 172, 175, 178, 179, 180, 182, 185, 186, 188, 192, 194, 200, 202, 214, 215, 219, 223, 232, 234, 236, 238, 239, 245, 247, 253, 255, 256, 257, 259, 276, 277, 278, 279, 284, 285, 290, 295, 301, 306, 314, 319, 320, 321, 324, 325, 328, 331, 333, 334, 340, 345, 346, 347, 353, 355, 358, 359, 362, 363, 364, 365, 366, 367, 372, 378, 383, 385, 388, 398, 400, 402, 403, 404, 405, 407, 410, 411, 416, 418, 419, 421, 422, 423, 424, 425, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 451, 452, 453, 455, 457], "deal": [0, 15, 16, 34, 41, 61, 62, 66, 70, 85, 101, 102, 103, 105, 114, 119, 147, 148, 183, 185, 186, 194, 208, 214, 229, 246, 254, 268, 269, 276, 282, 300, 307, 309, 318, 344, 361, 367, 371, 388, 401, 406, 415, 421, 437, 439, 440, 441, 442, 445, 447, 448, 452, 454], "bug": [0, 34, 55, 57, 61, 66, 70, 71, 76, 77, 82, 84, 87, 91, 93, 99, 101, 105, 119, 166, 197, 214, 231, 232, 246, 259, 270, 277, 279, 282, 290, 320, 321, 328, 340, 343, 363, 366, 383, 419, 421, 428, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457], "page": [0, 1, 18, 62, 78, 79, 82, 83, 84, 85, 90, 93, 98, 99, 103, 106, 110, 114, 118, 119, 120, 124, 127, 130, 143, 148, 156, 159, 166, 179, 200, 204, 214, 216, 236, 239, 245, 246, 254, 255, 256, 257, 259, 265, 270, 277, 286, 295, 296, 304, 310, 315, 318, 320, 322, 327, 335, 339, 340, 343, 344, 347, 361, 372, 379, 383, 388, 395, 397, 399, 401, 409, 415, 426, 428, 429, 430, 436, 437, 439, 441, 442, 443, 444, 451, 452, 455, 456, 457], "inform": [0, 1, 3, 4, 5, 7, 11, 14, 16, 23, 25, 28, 31, 32, 33, 34, 41, 44, 49, 56, 58, 61, 62, 64, 66, 67, 68, 70, 71, 72, 73, 75, 76, 83, 84, 85, 86, 87, 88, 91, 93, 95, 96, 98, 100, 102, 105, 106, 107, 110, 114, 115, 116, 117, 120, 124, 127, 130, 134, 135, 136, 137, 144, 148, 150, 152, 153, 156, 159, 161, 162, 164, 165, 166, 170, 172, 175, 177, 179, 180, 182, 184, 185, 186, 190, 192, 194, 196, 198, 199, 200, 202, 204, 205, 212, 214, 215, 216, 217, 218, 222, 224, 226, 229, 231, 232, 234, 236, 237, 238, 239, 240, 242, 243, 245, 246, 247, 249, 250, 254, 255, 256, 257, 258, 259, 263, 265, 268, 269, 272, 275, 276, 278, 279, 282, 284, 285, 287, 289, 290, 292, 293, 294, 295, 296, 297, 298, 301, 302, 303, 310, 311, 313, 314, 315, 317, 318, 319, 320, 321, 322, 324, 327, 328, 331, 335, 337, 339, 340, 343, 344, 347, 351, 353, 357, 358, 359, 361, 363, 365, 366, 368, 371, 372, 374, 375, 378, 379, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 414, 416, 418, 420, 421, 423, 425, 427, 428, 430, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458], "how": [0, 1, 5, 7, 11, 32, 34, 41, 50, 56, 59, 60, 61, 62, 66, 69, 70, 71, 72, 73, 74, 75, 85, 86, 90, 91, 93, 94, 95, 96, 97, 98, 102, 103, 105, 106, 108, 109, 114, 116, 119, 120, 126, 127, 131, 133, 134, 137, 140, 142, 143, 144, 145, 148, 150, 153, 157, 162, 164, 165, 170, 172, 173, 175, 178, 179, 183, 184, 189, 190, 191, 196, 200, 202, 207, 212, 214, 215, 216, 219, 220, 223, 224, 225, 231, 232, 233, 236, 238, 239, 241, 243, 246, 247, 249, 250, 255, 256, 257, 262, 265, 269, 270, 275, 277, 278, 279, 282, 285, 290, 293, 298, 300, 301, 302, 303, 304, 313, 314, 315, 318, 319, 321, 323, 324, 325, 326, 328, 331, 337, 338, 342, 343, 344, 345, 353, 357, 359, 363, 365, 366, 367, 371, 372, 378, 383, 385, 394, 396, 400, 402, 403, 404, 405, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 424, 427, 429, 430, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 449, 451, 452, 453, 454, 455, 456, 457, 458], "do": [0, 1, 2, 5, 7, 10, 14, 15, 16, 18, 22, 23, 27, 28, 32, 33, 34, 35, 41, 42, 50, 54, 57, 58, 59, 61, 62, 70, 71, 72, 73, 74, 75, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 110, 114, 116, 119, 120, 123, 125, 126, 127, 128, 131, 132, 133, 134, 135, 140, 143, 148, 149, 150, 151, 153, 157, 159, 161, 165, 166, 167, 168, 170, 173, 175, 178, 179, 180, 182, 183, 184, 185, 186, 190, 191, 194, 196, 197, 200, 202, 203, 205, 212, 214, 215, 216, 217, 219, 221, 224, 225, 226, 229, 232, 233, 234, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 253, 254, 255, 256, 257, 259, 262, 265, 266, 269, 270, 273, 275, 276, 277, 278, 279, 280, 282, 285, 287, 288, 290, 296, 298, 301, 302, 304, 310, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 331, 332, 334, 335, 337, 338, 340, 342, 343, 344, 345, 352, 353, 355, 357, 359, 361, 363, 365, 366, 367, 371, 372, 375, 376, 377, 378, 379, 382, 383, 385, 386, 388, 389, 390, 392, 394, 396, 397, 400, 401, 402, 403, 404, 405, 407, 410, 411, 413, 414, 415, 416, 417, 418, 419, 421, 424, 425, 427, 428, 430, 431, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "so": [0, 1, 5, 7, 10, 11, 13, 15, 20, 22, 23, 25, 27, 28, 30, 32, 33, 34, 40, 41, 44, 47, 50, 52, 55, 57, 60, 61, 62, 64, 69, 70, 71, 72, 73, 74, 75, 77, 78, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 111, 114, 115, 116, 120, 125, 131, 133, 134, 136, 140, 143, 144, 147, 148, 149, 150, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 170, 172, 175, 179, 180, 182, 185, 188, 189, 190, 191, 192, 194, 196, 197, 198, 200, 202, 203, 204, 205, 207, 210, 214, 215, 216, 217, 219, 221, 223, 224, 225, 226, 229, 231, 232, 233, 234, 236, 237, 238, 241, 242, 246, 247, 249, 250, 254, 255, 256, 257, 258, 259, 262, 265, 269, 270, 273, 275, 276, 277, 278, 279, 280, 282, 284, 290, 292, 294, 296, 300, 301, 307, 308, 310, 311, 313, 314, 315, 316, 317, 318, 320, 321, 323, 324, 325, 327, 328, 331, 332, 333, 334, 337, 338, 340, 342, 343, 344, 345, 347, 353, 355, 361, 362, 363, 365, 366, 367, 372, 375, 377, 378, 381, 382, 383, 384, 385, 386, 388, 390, 391, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 411, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458], "new": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 70, 71, 72, 73, 74, 76, 77, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 95, 97, 98, 99, 101, 102, 103, 104, 105, 106, 109, 110, 111, 114, 115, 116, 120, 122, 123, 124, 126, 127, 129, 130, 132, 133, 134, 136, 137, 142, 143, 144, 145, 147, 148, 150, 151, 153, 156, 157, 159, 160, 161, 164, 165, 166, 167, 170, 172, 173, 175, 177, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 210, 212, 214, 215, 216, 219, 220, 221, 223, 224, 225, 226, 227, 228, 230, 231, 234, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 262, 263, 265, 267, 269, 270, 275, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 294, 296, 298, 300, 301, 302, 303, 304, 306, 307, 308, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 330, 331, 334, 337, 338, 339, 340, 342, 343, 344, 345, 347, 350, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 370, 371, 372, 373, 374, 375, 378, 379, 381, 383, 385, 386, 387, 388, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 407, 409, 410, 411, 414, 415, 416, 417, 418, 419, 420, 421, 424, 425, 426, 427, 429, 430, 431, 434, 436, 459], "alwai": [0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 22, 23, 25, 27, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 46, 47, 52, 53, 54, 56, 57, 58, 59, 61, 62, 65, 71, 73, 74, 76, 77, 78, 83, 85, 86, 87, 88, 90, 91, 92, 93, 97, 98, 99, 101, 102, 103, 106, 110, 114, 116, 120, 127, 128, 133, 136, 137, 139, 142, 144, 147, 148, 150, 153, 156, 157, 164, 165, 166, 168, 170, 172, 173, 175, 179, 180, 182, 184, 185, 192, 194, 195, 196, 197, 199, 200, 202, 203, 205, 210, 212, 214, 215, 219, 223, 224, 225, 226, 229, 231, 233, 234, 236, 237, 238, 239, 243, 245, 246, 247, 250, 254, 255, 257, 258, 259, 262, 269, 270, 275, 276, 277, 278, 279, 282, 285, 288, 289, 291, 298, 299, 301, 306, 312, 313, 315, 316, 318, 319, 320, 321, 323, 324, 325, 327, 328, 331, 333, 337, 338, 340, 342, 343, 344, 345, 347, 353, 354, 361, 363, 365, 366, 371, 372, 375, 376, 378, 381, 383, 384, 385, 388, 390, 392, 397, 399, 400, 402, 403, 404, 405, 407, 410, 411, 415, 416, 417, 418, 421, 424, 425, 427, 430, 431, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "welcom": [0, 1, 70, 88, 90, 145, 212, 269, 361, 401, 423, 442, 451], "mani": [0, 7, 13, 16, 18, 32, 33, 34, 50, 55, 61, 62, 70, 71, 73, 74, 76, 77, 81, 82, 84, 85, 88, 90, 92, 93, 96, 97, 98, 99, 102, 103, 105, 106, 107, 114, 116, 119, 122, 127, 131, 133, 136, 144, 148, 150, 153, 156, 157, 159, 164, 165, 166, 167, 170, 172, 175, 179, 180, 182, 183, 192, 197, 201, 212, 214, 216, 219, 221, 224, 225, 231, 232, 233, 236, 238, 242, 245, 246, 247, 249, 250, 253, 255, 262, 265, 269, 270, 275, 276, 277, 279, 281, 282, 285, 287, 288, 289, 290, 296, 299, 300, 301, 307, 310, 312, 314, 315, 317, 318, 319, 320, 321, 323, 324, 325, 327, 328, 331, 337, 340, 342, 343, 344, 345, 346, 347, 357, 358, 361, 362, 363, 365, 366, 367, 368, 372, 378, 379, 381, 382, 383, 385, 390, 399, 401, 402, 403, 407, 409, 411, 414, 415, 416, 417, 418, 419, 420, 421, 424, 425, 426, 427, 428, 429, 430, 432, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "thank": [0, 75, 93, 97, 102, 105, 145, 189, 224, 269, 320, 340, 363, 401, 437, 438, 439, 440, 441, 442, 443, 444, 451, 452, 455, 456], "go": [0, 32, 41, 71, 73, 74, 76, 77, 82, 83, 87, 88, 90, 91, 92, 93, 95, 98, 99, 101, 102, 103, 106, 110, 120, 127, 131, 132, 133, 137, 166, 172, 175, 178, 182, 185, 189, 225, 236, 238, 266, 270, 276, 277, 279, 290, 295, 301, 316, 320, 321, 328, 331, 337, 340, 343, 344, 357, 366, 367, 371, 372, 383, 388, 394, 402, 403, 415, 420, 421, 428, 429, 432, 436, 437, 438, 439, 440, 442, 443, 444, 445, 448, 452], "fred": [0, 99, 296, 347, 410, 437, 438, 439, 440, 442, 443, 455], "l": [0, 5, 33, 62, 70, 71, 74, 76, 78, 82, 83, 87, 88, 93, 95, 99, 102, 103, 104, 115, 116, 131, 133, 136, 143, 150, 152, 153, 165, 166, 179, 182, 214, 233, 236, 256, 257, 259, 269, 270, 275, 277, 278, 280, 283, 301, 313, 314, 324, 326, 327, 328, 337, 345, 357, 361, 363, 364, 397, 398, 410, 415, 416, 417, 426, 431, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 451, 454, 457], "drake": [0, 437, 438, 439, 440, 442, 443], "jr": [0, 438, 439, 440, 442, 443], "creator": [0, 72, 85, 99, 269, 277, 314, 375, 386, 397, 398, 403, 409], "origin": [0, 5, 7, 9, 14, 23, 32, 33, 41, 42, 58, 60, 61, 65, 71, 78, 83, 88, 90, 92, 98, 102, 104, 105, 107, 114, 116, 120, 137, 142, 144, 148, 150, 156, 157, 159, 161, 164, 165, 166, 170, 175, 177, 179, 180, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 197, 199, 202, 210, 214, 215, 216, 219, 223, 225, 232, 236, 238, 243, 246, 249, 250, 254, 255, 257, 259, 262, 265, 269, 270, 276, 277, 279, 280, 282, 290, 294, 300, 301, 306, 310, 313, 314, 318, 320, 321, 323, 324, 325, 328, 331, 337, 340, 343, 344, 347, 358, 359, 361, 362, 363, 365, 366, 367, 371, 372, 375, 376, 378, 383, 388, 390, 391, 392, 396, 397, 398, 399, 400, 401, 402, 403, 405, 407, 409, 411, 415, 416, 419, 430, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 455, 456, 457], "toolset": [0, 91, 249, 276, 426, 443], "writer": [0, 34, 41, 71, 74, 105, 120, 130, 142, 148, 160, 182, 239, 246, 277, 301, 356, 386, 388, 391, 430, 440, 447, 449, 454, 456], "much": [0, 18, 23, 34, 53, 59, 61, 65, 71, 73, 74, 76, 82, 83, 85, 86, 88, 90, 93, 99, 101, 102, 103, 105, 106, 114, 115, 120, 131, 144, 148, 150, 157, 161, 165, 175, 182, 183, 192, 196, 214, 225, 243, 246, 249, 257, 258, 259, 262, 269, 276, 277, 282, 285, 290, 301, 308, 312, 318, 323, 328, 334, 347, 353, 359, 361, 363, 365, 366, 367, 385, 386, 394, 399, 402, 407, 414, 415, 421, 426, 427, 437, 438, 439, 440, 441, 442, 443, 444, 445, 451, 452, 453, 454, 455, 457, 458], "content": [0, 5, 7, 8, 9, 12, 25, 32, 37, 41, 44, 52, 56, 59, 62, 64, 70, 86, 87, 88, 90, 93, 98, 99, 102, 105, 106, 108, 109, 115, 116, 120, 127, 136, 142, 147, 148, 150, 153, 156, 165, 166, 168, 173, 176, 180, 182, 183, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 204, 205, 212, 214, 215, 216, 219, 223, 224, 226, 229, 230, 231, 234, 236, 238, 239, 241, 242, 243, 245, 246, 250, 256, 259, 263, 265, 266, 270, 271, 277, 279, 282, 283, 284, 289, 293, 299, 302, 314, 320, 321, 324, 325, 327, 331, 333, 337, 338, 340, 342, 347, 355, 362, 370, 371, 372, 373, 375, 378, 383, 384, 386, 388, 390, 391, 392, 394, 395, 396, 397, 399, 400, 401, 404, 405, 407, 410, 415, 416, 418, 421, 424, 425, 430, 436, 437, 438, 439, 440, 441, 442, 443, 444, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 460], "docutil": [0, 443], "project": [0, 1, 55, 68, 73, 74, 75, 82, 83, 84, 89, 94, 99, 101, 107, 116, 157, 172, 182, 199, 212, 219, 224, 238, 239, 249, 276, 289, 296, 363, 365, 366, 375, 396, 397, 400, 401, 409, 416, 419, 426, 429, 431, 434, 436, 437, 440, 443, 444, 445, 448, 449, 450, 451, 452, 453, 455, 458], "creat": [0, 1, 2, 3, 5, 7, 8, 9, 11, 12, 13, 15, 17, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 33, 34, 38, 39, 41, 42, 44, 47, 49, 50, 53, 56, 57, 58, 60, 61, 64, 65, 66, 71, 73, 74, 75, 76, 79, 84, 85, 86, 88, 90, 91, 97, 98, 101, 102, 104, 105, 106, 107, 109, 110, 111, 115, 116, 117, 118, 119, 122, 123, 124, 126, 127, 128, 129, 130, 132, 137, 142, 143, 147, 148, 150, 151, 153, 156, 157, 159, 160, 161, 164, 165, 166, 170, 172, 173, 175, 178, 179, 180, 182, 183, 187, 188, 189, 190, 191, 192, 194, 196, 197, 199, 200, 202, 204, 207, 208, 210, 212, 213, 214, 215, 216, 219, 221, 223, 225, 229, 230, 231, 234, 236, 237, 238, 239, 240, 242, 243, 246, 247, 255, 256, 257, 258, 259, 265, 268, 269, 270, 271, 277, 278, 279, 280, 282, 283, 284, 287, 289, 290, 294, 296, 301, 304, 305, 310, 312, 314, 316, 317, 319, 321, 322, 323, 324, 325, 327, 328, 330, 331, 333, 337, 338, 340, 342, 343, 345, 347, 348, 349, 350, 351, 353, 355, 357, 358, 359, 361, 362, 363, 365, 366, 372, 374, 378, 379, 381, 383, 385, 386, 388, 389, 390, 391, 392, 394, 395, 397, 398, 400, 401, 402, 404, 405, 407, 409, 410, 411, 413, 415, 416, 417, 418, 421, 424, 425, 426, 427, 429, 430, 431, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458], "suit": [0, 61, 66, 73, 76, 82, 83, 85, 88, 93, 98, 99, 101, 151, 176, 182, 214, 219, 242, 246, 269, 276, 320, 321, 323, 337, 359, 365, 366, 376, 397, 402, 414, 421, 425, 427, 431, 436, 442, 443, 444, 445, 447, 448, 449, 451, 453, 455, 456, 458], "fredrik": [0, 83, 93, 401, 437, 438, 439, 441, 442, 444, 446, 451], "lundh": [0, 83, 93, 401, 437, 438, 439, 441, 442, 444, 451], "hi": [0, 71, 82, 99, 140, 165, 219, 286, 324, 347, 363, 401, 410, 437, 439, 443, 444, 453, 455], "altern": [0, 10, 18, 23, 30, 32, 44, 61, 66, 71, 79, 82, 83, 85, 88, 91, 93, 102, 105, 106, 107, 111, 114, 116, 120, 123, 126, 131, 132, 133, 136, 140, 141, 144, 148, 150, 151, 157, 164, 165, 166, 167, 170, 171, 175, 182, 185, 188, 189, 194, 199, 200, 203, 204, 207, 210, 214, 217, 231, 239, 242, 249, 255, 256, 257, 262, 269, 276, 277, 280, 282, 288, 296, 298, 306, 314, 317, 318, 319, 320, 321, 324, 325, 327, 328, 331, 337, 343, 345, 346, 347, 353, 358, 361, 363, 365, 366, 367, 371, 375, 376, 378, 381, 383, 400, 401, 405, 406, 407, 419, 421, 423, 424, 425, 427, 428, 430, 437, 438, 439, 440, 441, 442, 443, 444, 446, 448, 450, 451, 453, 454, 455, 456, 457, 458], "refer": [0, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 51, 52, 53, 54, 56, 57, 58, 59, 62, 64, 66, 69, 70, 72, 74, 75, 76, 82, 84, 85, 91, 94, 96, 97, 98, 99, 102, 106, 107, 109, 110, 114, 116, 117, 120, 123, 127, 130, 131, 133, 134, 135, 137, 144, 148, 150, 157, 160, 161, 166, 171, 172, 180, 194, 199, 200, 201, 202, 204, 214, 215, 216, 217, 219, 222, 224, 227, 228, 229, 232, 234, 236, 238, 239, 241, 242, 243, 244, 246, 247, 250, 255, 256, 257, 259, 265, 270, 273, 277, 278, 280, 282, 284, 285, 288, 289, 295, 296, 301, 303, 306, 311, 314, 315, 316, 318, 321, 324, 325, 327, 330, 331, 335, 339, 340, 343, 344, 346, 353, 354, 358, 362, 363, 365, 366, 367, 371, 372, 373, 376, 381, 384, 385, 386, 390, 392, 396, 397, 400, 402, 403, 404, 409, 410, 411, 414, 415, 416, 417, 419, 420, 421, 429, 430, 431, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "which": [0, 1, 2, 3, 5, 7, 9, 10, 12, 13, 14, 15, 16, 18, 20, 22, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 52, 54, 56, 57, 58, 59, 61, 62, 64, 65, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 115, 116, 117, 119, 120, 123, 125, 126, 127, 129, 131, 132, 133, 134, 136, 137, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 153, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 172, 173, 175, 177, 179, 180, 183, 184, 185, 186, 189, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 207, 209, 210, 212, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 229, 232, 233, 234, 236, 237, 238, 239, 241, 243, 244, 245, 246, 247, 249, 250, 254, 255, 256, 257, 258, 259, 262, 263, 265, 266, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 335, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460], "got": [0, 71, 87, 88, 106, 108, 120, 130, 132, 182, 255, 269, 317, 320, 363, 372, 405, 416, 424, 430, 442, 446, 449, 450, 457], "good": [0, 1, 16, 34, 50, 61, 73, 76, 77, 82, 83, 84, 85, 87, 91, 92, 97, 98, 99, 102, 103, 105, 106, 114, 116, 133, 144, 145, 150, 157, 160, 165, 166, 172, 179, 182, 187, 196, 200, 214, 224, 225, 234, 238, 269, 276, 277, 282, 289, 301, 321, 340, 342, 345, 346, 361, 363, 365, 367, 386, 394, 401, 403, 415, 416, 418, 420, 421, 434, 435, 437, 438, 440, 441, 443, 444, 448], "idea": [0, 16, 34, 50, 76, 77, 78, 82, 83, 84, 85, 87, 90, 91, 92, 97, 98, 99, 103, 114, 172, 179, 182, 200, 249, 254, 289, 323, 353, 361, 403, 416, 420, 429, 437, 439, 440, 441, 444, 445, 446, 447, 448, 451, 455], "peopl": [0, 1, 34, 76, 84, 85, 88, 91, 93, 96, 101, 105, 166, 175, 179, 182, 219, 224, 276, 323, 388, 416, 419, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 452, 455, 457], "have": [0, 1, 2, 5, 7, 10, 11, 18, 22, 23, 24, 27, 28, 30, 32, 33, 34, 41, 44, 46, 47, 50, 56, 57, 58, 61, 62, 65, 70, 71, 73, 74, 75, 77, 81, 82, 84, 85, 86, 87, 88, 90, 91, 92, 93, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 120, 123, 125, 126, 128, 131, 132, 133, 134, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 156, 157, 158, 159, 160, 164, 165, 166, 167, 168, 170, 172, 173, 175, 178, 179, 180, 182, 183, 184, 185, 186, 188, 190, 191, 192, 194, 195, 196, 197, 200, 202, 204, 207, 210, 212, 214, 215, 216, 219, 220, 221, 223, 224, 225, 226, 229, 230, 231, 232, 233, 236, 237, 238, 239, 240, 243, 245, 246, 247, 249, 250, 253, 254, 255, 256, 257, 258, 259, 262, 263, 265, 268, 269, 270, 272, 275, 276, 277, 278, 279, 280, 282, 284, 285, 287, 289, 290, 293, 294, 296, 298, 300, 301, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 334, 335, 337, 338, 339, 340, 342, 343, 344, 346, 347, 349, 353, 358, 359, 361, 362, 363, 365, 366, 367, 371, 372, 374, 375, 376, 377, 378, 381, 383, 385, 386, 387, 388, 389, 390, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 427, 428, 430, 431, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "languag": [0, 1, 16, 34, 55, 59, 62, 66, 70, 71, 72, 81, 82, 85, 87, 91, 92, 93, 95, 97, 99, 101, 102, 104, 105, 106, 108, 116, 148, 150, 157, 165, 169, 180, 185, 191, 194, 198, 206, 210, 214, 229, 235, 236, 238, 242, 245, 254, 260, 282, 289, 301, 320, 324, 331, 334, 342, 347, 354, 356, 362, 363, 365, 378, 385, 386, 394, 401, 403, 405, 409, 410, 411, 412, 414, 415, 416, 417, 419, 420, 421, 423, 424, 425, 429, 432, 436, 438, 439, 445], "standard": [0, 7, 18, 24, 30, 32, 33, 41, 57, 59, 61, 62, 64, 66, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 84, 85, 86, 87, 92, 93, 98, 99, 101, 102, 104, 105, 106, 107, 109, 110, 111, 112, 114, 120, 127, 128, 131, 135, 136, 137, 140, 143, 144, 147, 150, 153, 156, 157, 164, 165, 166, 167, 172, 175, 180, 182, 183, 184, 185, 186, 188, 190, 191, 192, 194, 196, 197, 198, 200, 202, 203, 207, 208, 209, 212, 213, 214, 219, 224, 227, 228, 232, 234, 236, 237, 238, 243, 245, 246, 249, 254, 255, 256, 257, 259, 260, 262, 263, 265, 266, 268, 269, 277, 278, 280, 282, 284, 285, 287, 288, 290, 291, 293, 294, 296, 300, 301, 303, 306, 308, 310, 313, 314, 315, 316, 317, 318, 319, 323, 325, 328, 331, 333, 334, 336, 337, 338, 340, 343, 344, 345, 346, 347, 348, 356, 358, 361, 363, 364, 365, 366, 367, 371, 372, 374, 376, 378, 383, 385, 388, 394, 396, 397, 400, 401, 402, 404, 405, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 428, 429, 430, 431, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457], "librari": [0, 7, 18, 23, 24, 32, 33, 34, 41, 44, 49, 55, 57, 61, 64, 66, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 93, 94, 95, 97, 101, 102, 103, 104, 105, 106, 107, 109, 112, 114, 117, 120, 127, 128, 133, 135, 138, 156, 157, 159, 166, 167, 172, 173, 174, 175, 176, 181, 182, 183, 192, 197, 201, 208, 217, 219, 224, 232, 236, 239, 244, 245, 246, 250, 252, 254, 255, 257, 262, 269, 276, 277, 278, 279, 282, 284, 290, 295, 296, 301, 302, 310, 312, 313, 315, 316, 318, 320, 321, 323, 324, 325, 331, 333, 334, 337, 340, 343, 344, 346, 347, 355, 356, 361, 363, 365, 367, 368, 371, 375, 376, 383, 384, 385, 397, 399, 400, 401, 402, 403, 405, 407, 408, 409, 410, 411, 414, 417, 420, 421, 422, 423, 425, 428, 429, 430, 434, 436, 437, 438, 439, 440, 441, 442, 444, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "see": [0, 4, 5, 7, 10, 11, 14, 17, 18, 22, 23, 26, 30, 32, 33, 34, 39, 41, 44, 46, 50, 51, 55, 56, 57, 59, 60, 61, 62, 64, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 102, 104, 105, 106, 108, 109, 111, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 126, 127, 128, 130, 131, 133, 135, 136, 137, 138, 141, 143, 145, 146, 148, 150, 151, 153, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 170, 172, 175, 177, 179, 180, 182, 184, 185, 186, 189, 190, 191, 192, 194, 195, 196, 197, 199, 200, 202, 203, 204, 205, 207, 209, 210, 212, 214, 215, 216, 218, 219, 222, 223, 224, 225, 228, 231, 232, 234, 236, 237, 238, 239, 243, 245, 246, 247, 249, 250, 254, 255, 256, 257, 258, 261, 262, 265, 266, 269, 270, 275, 276, 277, 278, 280, 282, 283, 284, 286, 287, 290, 292, 293, 295, 296, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 349, 353, 357, 358, 359, 361, 362, 363, 365, 366, 367, 371, 372, 373, 375, 376, 378, 379, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 430, 431, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "misc": [0, 34, 78, 212, 324, 353, 431, 437, 440, 441, 442, 443, 444, 445, 451, 453, 460], "ack": [0, 167, 443], "distribut": [0, 30, 32, 34, 55, 64, 66, 69, 71, 73, 78, 79, 81, 82, 83, 84, 85, 107, 109, 117, 118, 120, 128, 175, 198, 219, 224, 238, 242, 259, 262, 269, 270, 284, 285, 320, 334, 337, 347, 354, 365, 389, 396, 401, 420, 425, 429, 431, 435, 436, 437, 438, 440, 442, 443, 444, 445, 447, 448, 451, 453, 454, 455, 456, 457, 458], "partial": [0, 24, 33, 66, 86, 88, 93, 105, 106, 109, 120, 121, 123, 130, 150, 166, 170, 186, 195, 196, 214, 237, 242, 243, 249, 257, 258, 260, 262, 270, 304, 306, 318, 319, 324, 328, 337, 384, 388, 402, 437, 440, 441, 443, 444, 445, 446, 448, 450, 452, 453, 454, 455, 456, 457], "list": [0, 1, 2, 5, 7, 14, 16, 18, 23, 30, 31, 32, 33, 34, 39, 41, 47, 50, 52, 53, 55, 56, 57, 58, 61, 62, 64, 66, 71, 73, 74, 75, 77, 79, 82, 84, 85, 87, 88, 90, 91, 92, 95, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 110, 111, 114, 115, 116, 118, 119, 120, 122, 123, 124, 127, 130, 133, 134, 137, 143, 145, 148, 150, 151, 153, 157, 159, 160, 161, 164, 165, 166, 169, 170, 171, 172, 173, 175, 176, 178, 179, 180, 182, 185, 186, 188, 189, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 205, 207, 208, 209, 211, 212, 214, 215, 216, 217, 219, 220, 221, 222, 224, 225, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 242, 243, 245, 246, 247, 248, 249, 250, 254, 255, 256, 257, 259, 261, 263, 265, 266, 267, 268, 269, 270, 272, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 289, 290, 292, 293, 294, 296, 300, 301, 303, 304, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 325, 326, 328, 330, 331, 334, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 371, 372, 373, 376, 378, 379, 381, 383, 384, 385, 386, 388, 389, 390, 391, 394, 395, 396, 397, 398, 401, 403, 404, 406, 407, 410, 411, 415, 418, 421, 423, 425, 426, 428, 429, 430, 431, 432, 434, 436, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "It": [0, 1, 2, 5, 7, 9, 10, 11, 13, 15, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 38, 41, 42, 43, 44, 47, 49, 50, 53, 55, 56, 59, 61, 62, 64, 65, 69, 70, 71, 72, 73, 74, 76, 77, 78, 81, 82, 83, 84, 85, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 114, 115, 116, 119, 120, 124, 126, 127, 129, 130, 131, 132, 133, 134, 136, 139, 142, 144, 145, 148, 149, 150, 153, 156, 157, 158, 159, 160, 161, 164, 165, 166, 170, 172, 173, 175, 177, 179, 180, 183, 184, 185, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 202, 203, 204, 207, 209, 212, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 229, 231, 232, 233, 234, 236, 237, 238, 242, 243, 245, 246, 247, 249, 250, 254, 255, 256, 257, 258, 259, 262, 265, 269, 270, 273, 276, 277, 278, 279, 280, 282, 284, 285, 286, 288, 289, 290, 291, 292, 294, 296, 298, 300, 301, 302, 303, 304, 306, 307, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 331, 334, 335, 337, 338, 339, 340, 343, 344, 345, 346, 347, 353, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 370, 371, 372, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 388, 389, 391, 394, 396, 397, 398, 399, 400, 401, 402, 403, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 428, 429, 430, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "onli": [0, 3, 5, 6, 7, 9, 10, 13, 22, 23, 24, 26, 28, 30, 32, 33, 34, 37, 38, 40, 41, 42, 44, 47, 49, 50, 52, 55, 56, 57, 58, 59, 60, 61, 62, 64, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 114, 115, 116, 120, 123, 125, 126, 129, 131, 132, 133, 134, 136, 137, 139, 140, 142, 143, 144, 145, 148, 150, 151, 153, 155, 156, 157, 159, 160, 161, 164, 165, 166, 168, 172, 173, 175, 177, 178, 179, 180, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 207, 210, 212, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 231, 232, 233, 234, 237, 238, 239, 241, 243, 245, 246, 247, 248, 249, 250, 251, 254, 255, 256, 257, 258, 259, 261, 262, 263, 265, 268, 269, 270, 275, 276, 277, 278, 279, 280, 282, 284, 285, 286, 287, 290, 292, 293, 294, 295, 296, 298, 300, 301, 302, 304, 307, 309, 310, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 347, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 383, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 414, 415, 417, 418, 419, 421, 423, 424, 425, 426, 427, 430, 431, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 458], "input": [0, 5, 9, 14, 15, 33, 34, 61, 62, 64, 66, 71, 73, 76, 83, 85, 87, 88, 91, 93, 96, 98, 104, 105, 106, 109, 112, 114, 116, 127, 131, 135, 136, 137, 139, 142, 145, 147, 148, 149, 150, 157, 159, 164, 165, 172, 175, 179, 180, 182, 183, 184, 185, 186, 189, 190, 192, 196, 197, 198, 202, 208, 210, 214, 223, 224, 225, 229, 233, 234, 236, 242, 246, 249, 250, 255, 257, 258, 259, 261, 262, 269, 270, 275, 276, 277, 278, 280, 284, 289, 291, 293, 296, 299, 301, 302, 304, 310, 313, 317, 318, 320, 321, 324, 328, 331, 333, 339, 340, 342, 344, 347, 353, 354, 358, 365, 366, 371, 372, 377, 383, 386, 387, 388, 389, 390, 391, 392, 396, 399, 402, 403, 404, 405, 406, 407, 409, 410, 413, 416, 417, 418, 419, 420, 423, 424, 425, 427, 430, 431, 437, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457], "commun": [0, 32, 66, 78, 83, 85, 99, 103, 107, 119, 120, 124, 127, 131, 182, 201, 231, 234, 236, 242, 245, 257, 269, 270, 277, 282, 287, 291, 315, 318, 319, 321, 327, 328, 343, 353, 363, 383, 394, 401, 421, 427, 434, 437, 438, 441, 442, 443, 448, 451, 454, 456, 457], "ha": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 13, 15, 16, 17, 22, 23, 24, 25, 26, 27, 28, 30, 32, 33, 34, 35, 39, 41, 42, 43, 44, 45, 46, 47, 50, 54, 56, 57, 59, 61, 62, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 82, 84, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134, 137, 140, 142, 143, 144, 145, 147, 148, 149, 150, 151, 156, 157, 159, 160, 164, 165, 166, 167, 170, 172, 173, 175, 177, 179, 180, 182, 183, 185, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 205, 207, 210, 212, 214, 215, 216, 217, 219, 220, 221, 224, 225, 226, 230, 231, 232, 233, 234, 236, 237, 238, 239, 243, 246, 247, 249, 250, 254, 255, 256, 257, 258, 259, 261, 262, 263, 269, 270, 272, 275, 276, 277, 278, 279, 280, 282, 284, 285, 286, 287, 289, 290, 293, 294, 295, 296, 298, 300, 301, 302, 304, 306, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 352, 353, 355, 356, 358, 359, 361, 362, 363, 364, 365, 366, 367, 370, 371, 372, 373, 375, 376, 377, 378, 379, 381, 383, 384, 385, 387, 388, 390, 391, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "wonder": [0, 76, 83, 88, 91, 104, 164, 290, 409, 437, 440, 451], "matur": 1, "program": [1, 5, 15, 16, 30, 32, 33, 41, 43, 44, 64, 66, 70, 71, 75, 76, 80, 81, 85, 87, 91, 92, 94, 98, 99, 101, 102, 106, 107, 109, 112, 114, 116, 118, 119, 120, 127, 130, 131, 134, 136, 139, 143, 145, 147, 148, 149, 150, 156, 157, 158, 159, 164, 165, 172, 174, 175, 182, 189, 190, 192, 197, 202, 203, 205, 212, 214, 215, 216, 217, 223, 235, 236, 237, 238, 242, 243, 251, 255, 257, 259, 263, 268, 272, 276, 277, 278, 279, 280, 282, 285, 288, 289, 290, 291, 293, 295, 296, 298, 301, 304, 310, 312, 315, 318, 319, 320, 321, 324, 327, 328, 331, 332, 333, 338, 340, 343, 345, 353, 357, 358, 361, 363, 365, 371, 372, 374, 376, 378, 379, 381, 383, 385, 386, 394, 396, 397, 401, 402, 403, 405, 409, 410, 411, 413, 414, 415, 416, 417, 418, 420, 421, 425, 427, 428, 430, 431, 432, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457], "establish": [1, 88, 98, 118, 120, 130, 182, 212, 225, 236, 237, 257, 269, 282, 284, 287, 301, 310, 317, 321, 372, 381, 402, 403, 404, 444, 451], "reput": 1, "stabil": [1, 4, 31, 66, 78, 214, 225, 249, 447, 448], "In": [1, 5, 7, 10, 11, 13, 14, 17, 18, 22, 23, 24, 27, 28, 30, 32, 33, 34, 41, 44, 47, 49, 55, 56, 57, 59, 61, 62, 64, 66, 69, 70, 71, 73, 74, 75, 76, 77, 78, 82, 83, 84, 85, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 114, 116, 119, 120, 121, 122, 126, 127, 132, 133, 138, 142, 143, 144, 148, 149, 150, 151, 152, 157, 159, 160, 161, 164, 165, 166, 170, 172, 173, 175, 177, 179, 180, 182, 183, 184, 185, 187, 189, 190, 191, 192, 194, 195, 197, 199, 200, 202, 204, 207, 210, 214, 215, 216, 217, 218, 219, 221, 223, 224, 225, 230, 232, 233, 236, 237, 238, 239, 240, 242, 243, 246, 247, 249, 250, 254, 255, 256, 257, 258, 259, 261, 262, 265, 269, 270, 273, 276, 277, 278, 279, 280, 282, 284, 288, 289, 290, 291, 292, 295, 298, 301, 303, 307, 308, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 327, 328, 331, 332, 333, 335, 337, 340, 341, 342, 343, 344, 345, 347, 353, 358, 359, 361, 362, 363, 364, 365, 366, 367, 371, 372, 375, 376, 377, 378, 381, 383, 385, 386, 387, 388, 389, 390, 391, 392, 394, 396, 397, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 421, 423, 424, 425, 426, 427, 430, 431, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 460], "order": [1, 4, 7, 10, 13, 24, 28, 30, 32, 33, 42, 44, 56, 61, 62, 66, 70, 71, 73, 74, 76, 84, 85, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 99, 102, 103, 104, 105, 106, 111, 114, 115, 116, 119, 120, 127, 128, 133, 134, 140, 142, 145, 148, 150, 156, 157, 159, 161, 164, 166, 167, 168, 172, 173, 175, 179, 180, 182, 185, 189, 191, 192, 194, 197, 200, 202, 203, 207, 213, 214, 216, 217, 218, 219, 220, 221, 222, 225, 230, 234, 236, 237, 238, 242, 243, 245, 246, 247, 249, 250, 254, 255, 257, 259, 262, 269, 270, 275, 277, 279, 282, 284, 285, 286, 289, 290, 291, 292, 295, 296, 298, 300, 301, 307, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 328, 331, 332, 337, 338, 340, 342, 343, 344, 347, 353, 358, 359, 361, 362, 363, 365, 366, 371, 372, 374, 375, 376, 378, 383, 385, 386, 388, 390, 396, 397, 399, 402, 403, 404, 406, 407, 410, 415, 416, 417, 418, 419, 427, 430, 431, 436, 437, 438, 439, 440, 441, 442, 443, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458], "maintain": [1, 22, 32, 34, 71, 78, 82, 85, 88, 90, 92, 97, 99, 104, 107, 114, 115, 140, 148, 150, 157, 159, 165, 170, 175, 185, 196, 197, 202, 214, 216, 225, 237, 238, 239, 243, 254, 261, 276, 289, 290, 307, 319, 327, 331, 338, 344, 365, 376, 378, 379, 383, 387, 400, 405, 407, 409, 415, 416, 425, 426, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 452, 453, 454, 456, 457, 458], "thiwould": [1, 5, 7, 10, 18, 23, 30, 32, 33, 34, 46, 56, 57, 59, 62, 70, 71, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 97, 98, 99, 101, 102, 103, 105, 109, 111, 114, 115, 116, 119, 120, 123, 132, 133, 144, 148, 150, 151, 156, 157, 159, 160, 162, 165, 166, 170, 172, 173, 174, 175, 177, 179, 182, 185, 188, 189, 191, 192, 194, 196, 197, 201, 202, 214, 215, 217, 219, 221, 223, 224, 225, 229, 231, 232, 234, 236, 238, 241, 242, 243, 245, 246, 249, 250, 255, 256, 257, 261, 262, 263, 269, 273, 276, 277, 279, 285, 287, 289, 290, 295, 298, 300, 301, 302, 304, 312, 313, 314, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 331, 332, 335, 337, 338, 340, 343, 347, 350, 353, 358, 359, 361, 363, 364, 365, 366, 367, 371, 372, 375, 376, 378, 379, 381, 385, 387, 388, 396, 397, 398, 400, 401, 402, 403, 405, 407, 409, 410, 411, 415, 416, 417, 418, 419, 421, 422, 424, 425, 430, 431, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458], "know": [1, 30, 32, 34, 57, 61, 71, 74, 75, 76, 78, 83, 84, 85, 87, 88, 91, 93, 96, 98, 99, 100, 101, 102, 103, 105, 106, 114, 126, 133, 144, 151, 164, 165, 167, 170, 179, 182, 184, 189, 190, 197, 212, 225, 232, 234, 238, 247, 254, 256, 257, 259, 269, 276, 277, 312, 314, 318, 321, 323, 324, 331, 347, 353, 359, 361, 366, 372, 376, 381, 383, 391, 394, 397, 400, 407, 409, 411, 414, 415, 418, 419, 421, 422, 424, 425, 426, 436, 437, 438, 439, 442, 443, 444, 449, 452, 453, 455], "anidefici": [1, 377], "find": [1, 30, 32, 59, 61, 66, 70, 71, 73, 75, 76, 78, 81, 84, 85, 87, 88, 91, 92, 93, 95, 96, 98, 99, 101, 102, 105, 106, 108, 114, 116, 132, 140, 148, 150, 166, 170, 172, 179, 180, 182, 184, 185, 186, 188, 194, 196, 200, 202, 210, 214, 215, 219, 220, 224, 225, 236, 238, 239, 242, 243, 246, 254, 255, 265, 267, 272, 276, 277, 282, 283, 284, 295, 305, 318, 321, 323, 324, 328, 331, 333, 338, 340, 343, 345, 347, 363, 365, 366, 367, 371, 372, 378, 385, 404, 405, 407, 409, 411, 413, 414, 415, 416, 417, 419, 425, 429, 430, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 451, 452, 453, 454, 455, 456, 457], "can": [1, 4, 5, 7, 10, 11, 13, 14, 16, 18, 22, 23, 24, 25, 26, 27, 28, 30, 32, 33, 34, 35, 36, 38, 40, 41, 42, 44, 46, 47, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 70, 71, 72, 73, 74, 75, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 172, 173, 175, 177, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 207, 209, 210, 212, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 229, 231, 232, 233, 234, 236, 237, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 254, 255, 256, 257, 258, 259, 261, 262, 263, 265, 266, 268, 269, 270, 272, 273, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 289, 290, 291, 293, 294, 295, 296, 298, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 342, 343, 344, 345, 347, 350, 353, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "sometim": [1, 34, 71, 72, 76, 77, 82, 83, 85, 90, 91, 92, 93, 96, 97, 99, 101, 102, 103, 105, 106, 107, 109, 111, 114, 129, 133, 148, 157, 159, 161, 165, 166, 175, 177, 179, 182, 192, 202, 212, 214, 215, 224, 229, 236, 243, 247, 249, 256, 259, 276, 277, 282, 288, 290, 300, 301, 321, 322, 344, 347, 361, 363, 366, 367, 372, 388, 403, 405, 409, 411, 415, 416, 417, 423, 427, 428, 437, 440, 441, 442, 444, 445, 446, 447, 448, 451, 452, 453, 454, 455, 458], "faster": [1, 10, 52, 55, 61, 82, 83, 85, 91, 102, 103, 104, 120, 133, 150, 165, 166, 175, 196, 215, 223, 224, 226, 236, 249, 269, 277, 278, 290, 300, 321, 323, 324, 361, 366, 399, 401, 425, 427, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 449, 450, 451, 452, 453, 455, 456, 457, 458], "fix": [1, 20, 34, 41, 53, 55, 59, 61, 66, 75, 76, 77, 78, 81, 82, 83, 85, 87, 88, 90, 91, 93, 101, 102, 103, 107, 109, 114, 116, 119, 120, 149, 150, 151, 165, 166, 171, 172, 177, 182, 190, 212, 214, 225, 232, 236, 242, 249, 269, 274, 277, 282, 301, 320, 323, 324, 325, 327, 328, 343, 350, 363, 366, 383, 402, 428, 430, 437, 441, 442, 443, 445, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457], "patch": [1, 55, 76, 82, 87, 90, 95, 102, 114, 166, 174, 230, 231, 324, 340, 363, 435, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 449, 451, 452, 454, 455, 457, 458], "streamlin": [1, 448, 454], "process": [1, 5, 7, 23, 31, 33, 34, 38, 44, 49, 56, 61, 63, 64, 66, 70, 71, 73, 75, 76, 77, 78, 82, 84, 85, 88, 90, 93, 95, 96, 98, 102, 103, 105, 106, 107, 109, 110, 114, 116, 119, 124, 125, 127, 128, 130, 131, 134, 138, 142, 143, 145, 148, 154, 156, 159, 164, 165, 166, 172, 175, 182, 189, 190, 192, 199, 201, 202, 203, 206, 207, 214, 215, 216, 217, 219, 221, 224, 229, 230, 234, 236, 237, 238, 242, 243, 245, 248, 249, 254, 255, 256, 257, 258, 259, 261, 265, 267, 276, 279, 282, 290, 291, 296, 298, 301, 304, 306, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 322, 324, 326, 327, 328, 331, 333, 335, 336, 337, 338, 340, 342, 343, 344, 345, 347, 349, 355, 357, 358, 361, 362, 363, 365, 371, 372, 374, 375, 376, 378, 379, 381, 383, 385, 386, 387, 388, 389, 390, 391, 394, 395, 396, 397, 399, 400, 402, 403, 405, 407, 410, 411, 416, 418, 421, 423, 425, 426, 430, 431, 435, 436, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "involv": [1, 28, 41, 44, 61, 71, 72, 74, 76, 97, 116, 144, 157, 159, 166, 175, 182, 202, 215, 216, 221, 232, 269, 273, 276, 282, 290, 314, 320, 321, 324, 327, 340, 358, 365, 367, 372, 387, 403, 405, 406, 407, 411, 415, 425, 437, 444, 447, 453, 454, 456, 457], "less": [1, 24, 25, 32, 33, 34, 38, 54, 57, 62, 71, 74, 76, 78, 83, 85, 88, 97, 99, 102, 104, 105, 108, 115, 127, 128, 132, 133, 140, 142, 148, 150, 156, 166, 172, 175, 182, 185, 204, 214, 215, 217, 221, 223, 224, 225, 233, 236, 239, 246, 247, 249, 255, 258, 262, 265, 269, 270, 277, 280, 282, 283, 289, 290, 298, 301, 314, 315, 318, 320, 321, 323, 324, 325, 328, 331, 337, 340, 343, 344, 347, 353, 354, 358, 365, 370, 372, 376, 385, 402, 403, 405, 411, 415, 416, 417, 421, 424, 438, 439, 440, 441, 442, 443, 446, 447, 448, 449, 451, 453, 454, 455, 457, 458], "learn": [1, 69, 71, 73, 75, 76, 77, 78, 81, 82, 85, 87, 88, 90, 91, 93, 101, 102, 105, 165, 175, 182, 236, 245, 262, 282, 313, 320, 323, 347, 361, 386, 414, 415, 417, 418, 420, 429, 439, 440, 442, 443, 444, 451, 455, 456], "propos": [1, 34, 76, 85, 156, 164, 215, 255, 321, 324, 328, 378, 385, 402, 405, 407, 410, 411, 437, 438, 440, 441, 442, 443, 444, 451, 455, 457], "improv": [1, 3, 23, 55, 71, 76, 78, 83, 85, 87, 91, 97, 99, 102, 109, 114, 127, 133, 140, 148, 156, 157, 223, 237, 238, 262, 279, 282, 296, 320, 321, 328, 346, 353, 385, 401, 403, 405, 426, 427, 431, 445], "submit": [1, 90, 99, 106, 133, 156, 236, 269, 401, 437, 444, 451, 452, 454, 455, 456, 457], "report": [1, 7, 22, 24, 32, 34, 44, 59, 70, 71, 83, 84, 95, 96, 98, 100, 101, 102, 105, 114, 116, 127, 156, 164, 165, 166, 179, 180, 182, 185, 192, 194, 202, 205, 214, 221, 222, 230, 243, 247, 249, 266, 268, 269, 276, 277, 285, 288, 290, 292, 296, 301, 310, 311, 315, 321, 322, 324, 331, 340, 345, 347, 357, 363, 365, 372, 376, 388, 390, 406, 418, 427, 429, 430, 436, 437, 439, 440, 441, 442, 443, 444, 447, 451, 452, 453, 455, 457], "suggest": [1, 59, 76, 78, 82, 83, 89, 93, 99, 102, 105, 110, 127, 150, 175, 214, 219, 224, 238, 282, 289, 302, 320, 343, 344, 359, 422, 429, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 449, 450, 451, 453, 455, 457, 458], "includ": [1, 4, 5, 7, 9, 10, 13, 18, 20, 22, 23, 26, 27, 28, 30, 32, 33, 44, 47, 51, 53, 54, 55, 56, 58, 59, 61, 62, 64, 70, 71, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 90, 91, 92, 93, 96, 97, 98, 99, 101, 102, 104, 105, 106, 107, 109, 114, 116, 123, 127, 130, 131, 133, 136, 139, 143, 144, 145, 147, 148, 149, 150, 151, 153, 157, 165, 166, 167, 170, 172, 175, 179, 180, 182, 185, 189, 191, 192, 194, 195, 196, 197, 199, 200, 201, 202, 208, 212, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263, 265, 269, 272, 273, 275, 276, 277, 278, 279, 280, 282, 285, 287, 288, 289, 290, 293, 294, 296, 300, 301, 304, 305, 308, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 327, 328, 331, 334, 335, 337, 338, 340, 342, 343, 344, 346, 347, 350, 351, 353, 355, 357, 358, 359, 361, 362, 363, 365, 366, 367, 371, 372, 375, 376, 378, 379, 381, 382, 383, 384, 385, 386, 388, 390, 391, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 415, 416, 417, 418, 419, 421, 423, 424, 425, 427, 429, 430, 431, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "well": [1, 5, 23, 34, 47, 50, 61, 62, 71, 73, 74, 75, 76, 77, 78, 82, 83, 84, 85, 86, 87, 91, 92, 93, 97, 98, 99, 101, 102, 103, 105, 106, 107, 109, 112, 114, 126, 127, 131, 136, 137, 139, 144, 147, 148, 150, 156, 157, 159, 164, 165, 166, 173, 175, 180, 182, 183, 184, 186, 189, 192, 193, 197, 200, 202, 204, 207, 212, 214, 215, 216, 217, 219, 223, 224, 232, 234, 236, 239, 242, 245, 246, 247, 249, 251, 255, 256, 257, 258, 259, 261, 263, 266, 270, 273, 275, 276, 277, 282, 289, 301, 303, 306, 311, 314, 317, 320, 321, 322, 323, 324, 325, 328, 331, 333, 337, 339, 340, 342, 345, 347, 351, 355, 358, 359, 361, 362, 363, 365, 366, 367, 371, 374, 378, 385, 388, 389, 390, 391, 394, 400, 402, 403, 405, 407, 411, 414, 415, 416, 417, 418, 420, 424, 425, 427, 430, 431, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458], "also": [1, 3, 4, 5, 7, 10, 11, 12, 13, 22, 23, 26, 27, 28, 30, 32, 33, 34, 39, 41, 44, 47, 50, 51, 52, 53, 55, 56, 57, 58, 59, 61, 62, 64, 65, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 84, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 118, 119, 120, 123, 124, 125, 126, 127, 128, 130, 131, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 153, 156, 157, 158, 159, 160, 162, 164, 165, 166, 170, 171, 172, 173, 175, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 200, 202, 203, 204, 205, 207, 209, 210, 212, 214, 215, 216, 217, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 245, 246, 247, 249, 250, 254, 255, 256, 257, 258, 259, 261, 262, 263, 265, 266, 269, 270, 273, 275, 276, 277, 278, 279, 280, 282, 284, 285, 287, 288, 289, 290, 291, 293, 295, 296, 298, 300, 301, 303, 304, 306, 307, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 353, 354, 355, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 370, 371, 372, 374, 375, 376, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 400, 401, 402, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "open": [1, 24, 32, 33, 40, 49, 64, 66, 71, 76, 78, 82, 84, 85, 88, 90, 93, 98, 101, 102, 105, 107, 114, 124, 127, 134, 135, 141, 142, 145, 148, 150, 157, 159, 164, 166, 172, 173, 177, 178, 179, 189, 196, 197, 201, 202, 203, 204, 207, 208, 212, 214, 219, 223, 224, 229, 230, 231, 232, 234, 236, 237, 238, 241, 242, 243, 244, 246, 253, 254, 255, 256, 257, 258, 259, 261, 263, 265, 267, 269, 277, 278, 279, 282, 284, 287, 291, 295, 296, 300, 302, 304, 308, 310, 312, 313, 315, 317, 318, 320, 321, 322, 323, 324, 328, 331, 335, 337, 338, 340, 343, 347, 353, 355, 356, 358, 361, 363, 366, 367, 369, 377, 379, 381, 383, 386, 388, 389, 391, 394, 396, 397, 400, 401, 402, 403, 410, 413, 415, 416, 418, 421, 425, 426, 427, 430, 434, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "discuss": [1, 4, 16, 32, 34, 55, 70, 71, 72, 78, 83, 93, 97, 99, 102, 105, 106, 161, 170, 179, 192, 197, 200, 219, 246, 255, 256, 262, 277, 301, 312, 315, 321, 323, 331, 353, 363, 365, 367, 372, 385, 394, 399, 401, 402, 404, 405, 407, 410, 415, 416, 417, 418, 421, 437, 438, 439, 442, 443, 444, 446, 447, 448, 449, 453, 455, 458], "item": [1, 2, 5, 7, 14, 22, 23, 30, 32, 33, 34, 35, 36, 37, 39, 47, 52, 55, 58, 61, 62, 71, 74, 76, 77, 82, 85, 88, 92, 93, 99, 101, 104, 114, 115, 116, 128, 140, 143, 147, 148, 150, 151, 157, 160, 161, 165, 170, 173, 178, 179, 180, 182, 185, 186, 189, 194, 198, 200, 202, 212, 214, 215, 216, 221, 222, 223, 224, 225, 233, 236, 237, 238, 241, 249, 250, 256, 257, 259, 262, 263, 266, 269, 275, 277, 278, 282, 284, 288, 289, 290, 292, 295, 298, 301, 302, 306, 314, 316, 318, 320, 321, 324, 325, 327, 328, 331, 333, 338, 339, 340, 343, 347, 355, 358, 361, 362, 363, 366, 371, 378, 381, 383, 384, 385, 387, 388, 391, 394, 397, 398, 402, 403, 405, 406, 407, 409, 410, 411, 415, 416, 417, 421, 424, 425, 427, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 456, 457], "our": [1, 30, 34, 71, 74, 83, 87, 88, 91, 92, 99, 102, 103, 105, 106, 109, 128, 157, 159, 165, 185, 189, 194, 225, 247, 276, 282, 301, 317, 319, 320, 321, 340, 363, 366, 367, 378, 383, 388, 397, 415, 439, 442, 443, 447], "discours": 1, "forum": 1, "re": [1, 7, 32, 33, 34, 41, 44, 55, 61, 66, 70, 71, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 101, 103, 105, 108, 109, 116, 121, 132, 133, 134, 137, 138, 145, 150, 153, 157, 159, 165, 166, 172, 175, 179, 180, 182, 185, 190, 194, 196, 200, 209, 225, 229, 231, 232, 236, 237, 238, 242, 246, 247, 254, 255, 256, 257, 259, 261, 265, 266, 269, 276, 277, 279, 280, 290, 318, 319, 320, 321, 323, 324, 325, 328, 331, 332, 341, 342, 343, 345, 347, 354, 355, 361, 363, 367, 371, 372, 375, 376, 383, 388, 390, 394, 401, 402, 403, 404, 407, 409, 410, 411, 414, 416, 418, 419, 421, 425, 426, 428, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 457], "short": [1, 5, 7, 40, 41, 56, 61, 78, 82, 84, 85, 88, 92, 93, 97, 99, 102, 103, 109, 114, 115, 136, 149, 150, 164, 165, 166, 182, 217, 226, 234, 246, 247, 259, 269, 273, 276, 277, 283, 313, 324, 327, 328, 331, 340, 344, 345, 361, 363, 365, 386, 388, 396, 409, 416, 417, 421, 430, 436, 437, 439, 440, 442, 444, 447, 448, 451, 452, 453, 455, 456, 458], "time": [1, 3, 4, 5, 13, 20, 22, 23, 27, 28, 30, 32, 33, 40, 41, 44, 52, 61, 62, 66, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 83, 84, 85, 87, 88, 90, 91, 92, 93, 95, 101, 102, 103, 106, 107, 110, 112, 114, 115, 116, 119, 120, 123, 124, 126, 127, 128, 130, 132, 133, 134, 135, 137, 139, 140, 143, 147, 150, 153, 156, 157, 158, 159, 164, 165, 166, 171, 174, 175, 179, 182, 191, 192, 197, 198, 201, 202, 203, 205, 207, 214, 215, 216, 219, 220, 221, 223, 224, 225, 226, 229, 232, 234, 236, 237, 238, 242, 243, 245, 247, 249, 254, 255, 256, 257, 259, 263, 268, 269, 270, 276, 277, 278, 279, 280, 282, 283, 288, 290, 291, 296, 298, 300, 301, 302, 304, 307, 308, 310, 311, 312, 313, 314, 315, 318, 319, 320, 321, 322, 323, 324, 328, 331, 332, 336, 337, 338, 340, 342, 343, 347, 350, 353, 356, 357, 361, 363, 365, 366, 367, 372, 373, 374, 375, 376, 378, 381, 383, 384, 385, 390, 391, 394, 395, 397, 398, 401, 402, 403, 404, 405, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 422, 424, 425, 427, 430, 431, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 449, 450, 453], "email": [1, 66, 85, 98, 107, 136, 139, 224, 226, 231, 232, 234, 239, 242, 256, 257, 259, 271, 277, 301, 317, 321, 331, 344, 372, 401, 407, 426, 427, 428, 439, 441, 442, 443, 444, 449, 450], "doc": [1, 23, 56, 58, 73, 74, 77, 78, 87, 91, 101, 102, 106, 120, 165, 183, 194, 212, 214, 231, 236, 239, 243, 246, 250, 277, 279, 295, 320, 321, 331, 340, 345, 362, 363, 371, 379, 381, 387, 427, 429, 431, 435, 436, 437, 439, 440, 442, 443, 444, 447, 449, 450, 451, 455, 456, 457], "org": [1, 55, 73, 76, 77, 82, 85, 93, 99, 103, 105, 106, 107, 120, 150, 156, 157, 159, 173, 212, 215, 224, 228, 229, 231, 232, 236, 237, 269, 285, 289, 295, 296, 301, 310, 317, 318, 320, 321, 331, 334, 364, 371, 372, 373, 374, 379, 386, 388, 390, 394, 401, 403, 410, 415, 419, 420, 426, 428, 429, 430, 434, 435, 437, 438, 440, 441, 442, 443, 444, 447, 448, 451, 452, 454, 456, 457, 458], "behavior": [1, 18, 22, 23, 24, 27, 28, 32, 33, 34, 41, 55, 56, 59, 61, 71, 76, 77, 83, 85, 88, 90, 91, 92, 97, 98, 99, 103, 109, 111, 114, 115, 120, 124, 126, 133, 142, 147, 150, 156, 157, 164, 165, 166, 170, 174, 175, 179, 182, 183, 185, 190, 192, 194, 195, 197, 200, 202, 204, 207, 214, 223, 225, 229, 231, 234, 236, 238, 243, 245, 246, 249, 250, 254, 255, 257, 258, 259, 262, 263, 269, 270, 272, 276, 277, 279, 282, 284, 291, 296, 310, 313, 314, 315, 316, 317, 318, 319, 321, 323, 324, 325, 327, 328, 331, 337, 338, 340, 343, 344, 345, 347, 352, 353, 355, 358, 363, 365, 371, 372, 376, 383, 385, 400, 402, 403, 404, 405, 407, 410, 411, 415, 424, 430, 431, 436, 440, 441, 442, 443, 444, 445, 446, 448, 449, 451, 452, 458], "sent": [1, 23, 88, 90, 93, 98, 103, 105, 106, 116, 120, 127, 130, 131, 136, 159, 166, 189, 212, 224, 229, 231, 233, 234, 236, 237, 247, 255, 256, 257, 269, 277, 280, 287, 304, 315, 317, 318, 319, 320, 321, 328, 344, 345, 363, 372, 383, 394, 395, 401, 421, 427, 436, 437, 440, 441, 442, 443, 444, 451, 452, 453, 454, 455, 457], "mail": [1, 76, 93, 97, 99, 101, 102, 107, 136, 183, 184, 185, 187, 189, 191, 194, 206, 237, 257, 259, 277, 299, 317, 321, 335, 365, 383, 401, 426, 427, 429, 434, 437, 438, 439, 440, 441, 442, 443, 451, 454], "run": [1, 4, 23, 28, 32, 33, 34, 41, 44, 49, 55, 57, 62, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 83, 85, 86, 87, 88, 90, 91, 93, 95, 97, 98, 100, 101, 102, 103, 105, 107, 108, 109, 110, 114, 117, 118, 123, 124, 126, 127, 128, 130, 131, 132, 134, 137, 140, 147, 150, 153, 156, 157, 159, 160, 165, 166, 170, 174, 175, 182, 189, 192, 197, 202, 203, 215, 216, 217, 219, 224, 225, 231, 232, 233, 234, 238, 239, 243, 249, 254, 255, 256, 257, 259, 266, 269, 272, 276, 277, 278, 279, 280, 290, 295, 300, 302, 304, 305, 306, 307, 309, 313, 314, 315, 316, 318, 319, 320, 321, 323, 324, 325, 327, 328, 331, 332, 333, 334, 335, 342, 343, 344, 345, 347, 353, 357, 359, 361, 363, 366, 367, 370, 372, 373, 374, 375, 376, 378, 379, 381, 383, 395, 396, 399, 402, 403, 404, 405, 406, 407, 410, 413, 415, 416, 418, 419, 423, 425, 426, 427, 428, 430, 431, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "your": [1, 5, 20, 22, 32, 34, 55, 57, 61, 66, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 92, 93, 97, 98, 100, 102, 103, 105, 106, 107, 109, 114, 116, 127, 135, 149, 150, 156, 157, 166, 170, 172, 174, 180, 182, 185, 187, 189, 190, 191, 194, 196, 200, 202, 211, 212, 214, 215, 216, 223, 224, 231, 232, 233, 234, 236, 238, 243, 246, 250, 254, 255, 256, 257, 259, 265, 268, 269, 277, 279, 280, 282, 287, 288, 290, 295, 300, 301, 302, 308, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 333, 338, 339, 340, 342, 343, 344, 345, 347, 349, 359, 361, 363, 365, 366, 371, 372, 375, 376, 378, 383, 385, 386, 388, 390, 395, 396, 397, 400, 401, 409, 411, 413, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 428, 429, 430, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457], "request": [1, 5, 23, 30, 32, 41, 44, 47, 59, 61, 66, 74, 83, 86, 92, 93, 96, 97, 99, 103, 105, 106, 107, 114, 118, 121, 124, 127, 133, 135, 136, 148, 150, 156, 159, 165, 166, 175, 186, 197, 199, 201, 202, 204, 212, 214, 215, 219, 223, 230, 231, 232, 233, 234, 236, 237, 238, 242, 243, 244, 246, 259, 269, 270, 275, 276, 277, 278, 282, 287, 289, 296, 298, 304, 310, 313, 315, 316, 321, 324, 328, 331, 338, 340, 344, 353, 361, 366, 369, 371, 373, 375, 381, 383, 385, 391, 392, 394, 395, 398, 403, 407, 411, 415, 416, 424, 426, 427, 428, 436, 437, 438, 440, 441, 442, 443, 444, 447, 448, 450, 451, 452, 453, 454, 456, 457, 458], "notic": [1, 34, 55, 71, 74, 76, 87, 88, 97, 98, 99, 102, 103, 104, 106, 126, 127, 148, 157, 173, 175, 191, 207, 216, 220, 238, 246, 257, 269, 285, 314, 318, 320, 334, 340, 347, 361, 363, 401, 403, 405, 415, 417, 423, 428, 436, 438, 440, 444, 447, 448, 451, 452, 456, 457], "though": [1, 9, 11, 30, 32, 34, 55, 56, 61, 62, 71, 73, 74, 78, 82, 83, 84, 85, 88, 90, 92, 93, 99, 101, 102, 105, 106, 109, 110, 111, 114, 120, 126, 127, 130, 144, 145, 148, 150, 151, 158, 166, 175, 182, 185, 188, 189, 194, 195, 197, 200, 202, 214, 219, 224, 232, 236, 238, 239, 240, 243, 246, 250, 255, 257, 259, 262, 269, 270, 276, 277, 287, 293, 296, 301, 310, 313, 321, 324, 327, 340, 343, 344, 347, 359, 361, 363, 365, 366, 367, 370, 372, 383, 385, 386, 390, 400, 401, 403, 404, 405, 407, 409, 410, 411, 415, 417, 419, 424, 429, 430, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 449, 451, 452], "maiwhile": [1, 7, 13, 16, 22, 23, 28, 32, 34, 35, 39, 44, 47, 50, 55, 61, 62, 70, 71, 73, 74, 78, 82, 83, 84, 85, 88, 90, 91, 92, 93, 96, 97, 98, 99, 101, 102, 103, 105, 107, 110, 111, 114, 116, 119, 120, 121, 127, 128, 130, 132, 133, 134, 140, 142, 144, 148, 150, 157, 158, 159, 160, 162, 164, 165, 166, 168, 172, 173, 175, 179, 180, 181, 182, 185, 188, 197, 198, 200, 202, 214, 215, 216, 219, 221, 223, 224, 225, 231, 232, 234, 236, 238, 239, 242, 246, 247, 249, 253, 254, 255, 256, 257, 258, 259, 262, 269, 270, 276, 277, 279, 280, 282, 284, 288, 290, 293, 296, 298, 300, 301, 308, 310, 311, 313, 315, 317, 318, 319, 320, 321, 324, 325, 327, 328, 331, 337, 338, 340, 342, 343, 344, 347, 349, 357, 358, 361, 363, 365, 371, 372, 374, 375, 376, 377, 385, 388, 397, 399, 401, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 421, 424, 425, 426, 427, 428, 430, 436, 437, 438, 439, 440, 441, 442, 443, 444, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458], "A": [1, 5, 7, 9, 10, 11, 19, 23, 29, 30, 33, 34, 38, 41, 42, 44, 47, 49, 50, 55, 56, 59, 61, 62, 66, 69, 70, 73, 74, 76, 77, 78, 79, 81, 82, 83, 85, 87, 88, 90, 92, 93, 97, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 114, 115, 116, 118, 120, 121, 122, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 136, 137, 140, 143, 144, 145, 147, 148, 150, 151, 154, 156, 157, 158, 159, 160, 161, 164, 166, 167, 170, 172, 173, 175, 177, 178, 180, 182, 185, 186, 188, 189, 191, 192, 194, 195, 197, 200, 202, 203, 205, 207, 210, 212, 214, 215, 216, 218, 219, 221, 224, 225, 226, 228, 229, 230, 231, 232, 234, 236, 237, 238, 239, 240, 242, 243, 244, 246, 247, 249, 250, 254, 255, 256, 257, 258, 259, 262, 265, 266, 269, 270, 272, 273, 276, 277, 278, 279, 280, 282, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 296, 300, 301, 304, 306, 307, 308, 310, 311, 312, 313, 315, 316, 317, 318, 320, 321, 323, 324, 325, 327, 328, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 343, 344, 345, 348, 353, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 370, 371, 372, 374, 375, 376, 377, 378, 379, 381, 383, 384, 385, 388, 389, 390, 391, 394, 396, 397, 399, 400, 401, 402, 403, 404, 405, 407, 409, 410, 411, 412, 413, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 436, 437, 438, 439, 441, 442, 444, 446, 447, 448, 450, 451, 455, 456, 457, 458], "been": [1, 2, 5, 7, 13, 18, 22, 23, 24, 27, 28, 30, 32, 33, 34, 41, 42, 44, 46, 47, 56, 57, 58, 61, 62, 65, 68, 71, 73, 76, 77, 81, 82, 83, 84, 85, 87, 88, 90, 91, 92, 93, 96, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 110, 111, 114, 115, 116, 120, 121, 123, 127, 128, 130, 133, 134, 137, 140, 142, 145, 148, 150, 151, 156, 157, 159, 165, 166, 168, 170, 172, 173, 175, 179, 180, 182, 185, 188, 190, 191, 193, 196, 201, 202, 207, 212, 214, 215, 216, 219, 221, 224, 225, 229, 231, 232, 233, 234, 236, 237, 238, 239, 243, 246, 247, 249, 250, 254, 255, 256, 257, 258, 259, 263, 268, 269, 270, 275, 276, 277, 278, 279, 280, 282, 284, 287, 289, 290, 291, 296, 298, 300, 301, 302, 304, 310, 311, 313, 315, 316, 317, 318, 319, 320, 321, 323, 324, 327, 328, 329, 331, 333, 335, 337, 338, 339, 340, 342, 343, 344, 346, 347, 358, 359, 361, 362, 363, 364, 365, 366, 367, 370, 371, 372, 375, 376, 377, 378, 379, 381, 383, 386, 387, 388, 391, 394, 395, 396, 397, 399, 401, 402, 403, 404, 405, 407, 410, 411, 412, 417, 418, 419, 421, 422, 425, 426, 427, 428, 430, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "track": [1, 23, 28, 34, 41, 61, 66, 76, 83, 85, 92, 98, 101, 102, 120, 148, 150, 157, 159, 170, 174, 175, 182, 216, 225, 242, 257, 262, 269, 270, 276, 277, 279, 282, 298, 301, 310, 331, 343, 344, 347, 349, 365, 366, 372, 385, 401, 419, 427, 437, 438, 441, 444, 446, 449, 451, 453, 454, 455, 456, 457, 458], "overview": [1, 76, 103, 105, 112, 154, 163, 214, 244, 245, 247, 264, 276, 289, 290, 297, 363, 368, 384, 421, 436, 437, 438, 439, 440, 442, 443, 444, 449, 451, 454, 456], "help": [1, 23, 32, 34, 44, 47, 56, 59, 63, 64, 66, 73, 76, 78, 84, 85, 87, 88, 91, 92, 98, 99, 101, 102, 103, 105, 106, 107, 116, 117, 143, 145, 148, 150, 159, 165, 166, 174, 176, 179, 181, 182, 189, 212, 214, 215, 217, 219, 223, 224, 227, 230, 233, 235, 238, 241, 242, 243, 245, 246, 249, 250, 277, 279, 280, 290, 317, 318, 320, 321, 324, 331, 340, 344, 345, 347, 355, 357, 363, 366, 367, 371, 372, 374, 375, 381, 388, 396, 403, 407, 410, 412, 414, 415, 416, 419, 420, 423, 425, 426, 427, 430, 431, 434, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458], "comprehens": [1, 24, 82, 83, 85, 88, 97, 106, 142, 180, 214, 224, 243, 282, 324, 347, 404, 405, 406, 410, 415, 420, 426, 432, 441, 442, 444, 445, 447, 448, 450, 452, 453, 454, 456, 457, 458], "guid": [1, 66, 68, 72, 78, 81, 84, 85, 89, 90, 94, 97, 101, 105, 107, 109, 172, 175, 179, 199, 214, 239, 277, 367, 375, 416, 421, 428, 429, 431, 434, 435, 439, 443, 444, 449, 451, 453], "individu": [1, 5, 10, 13, 41, 44, 56, 59, 61, 90, 92, 96, 97, 98, 99, 102, 114, 148, 164, 166, 173, 175, 179, 180, 182, 185, 187, 192, 195, 219, 237, 242, 249, 255, 259, 268, 269, 277, 278, 295, 301, 314, 324, 325, 332, 335, 337, 340, 342, 344, 345, 347, 353, 361, 363, 365, 366, 367, 371, 374, 376, 388, 394, 395, 397, 401, 403, 407, 409, 411, 415, 417, 418, 424, 425, 430, 438, 441, 442, 444, 446, 447, 452, 453, 458], "interest": [1, 22, 61, 70, 71, 73, 75, 78, 82, 83, 91, 92, 93, 95, 98, 99, 102, 103, 105, 114, 132, 144, 150, 157, 172, 179, 182, 183, 189, 196, 204, 205, 214, 225, 236, 249, 255, 259, 263, 272, 276, 280, 290, 296, 310, 332, 343, 345, 346, 363, 365, 366, 367, 372, 376, 377, 390, 403, 409, 411, 426, 429, 437, 438, 439, 440, 442, 444], "translat": [1, 62, 71, 101, 102, 104, 105, 148, 165, 166, 201, 202, 209, 214, 227, 229, 234, 238, 246, 250, 268, 277, 315, 318, 323, 324, 325, 328, 364, 388, 392, 394, 401, 402, 403, 437, 440, 441, 443, 444, 445, 446, 448, 451, 454, 457], "github": [1, 73, 78, 107, 237, 289, 365, 401, 449, 455, 456], "primari": [1, 13, 74, 76, 83, 85, 91, 92, 104, 109, 147, 159, 182, 183, 185, 194, 195, 207, 216, 249, 255, 263, 277, 282, 290, 316, 318, 320, 321, 325, 331, 355, 378, 394, 400, 406, 407, 411, 413, 423, 424, 425, 427, 437, 438, 440, 441, 443, 444, 445, 447, 448, 451, 452, 453], "contact": [1, 91, 372, 383], "should": [1, 3, 5, 7, 10, 11, 13, 14, 18, 22, 23, 24, 25, 27, 28, 30, 32, 33, 34, 35, 36, 41, 43, 44, 47, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 70, 71, 73, 74, 75, 76, 77, 81, 83, 84, 85, 86, 87, 88, 90, 92, 93, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 114, 115, 116, 118, 119, 120, 122, 126, 127, 129, 130, 131, 132, 133, 136, 137, 139, 140, 142, 143, 144, 145, 147, 148, 149, 150, 151, 153, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 169, 170, 172, 173, 175, 177, 178, 179, 180, 182, 183, 184, 185, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 210, 212, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 249, 250, 254, 255, 256, 257, 258, 259, 261, 262, 263, 265, 268, 269, 270, 273, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 296, 300, 301, 302, 303, 304, 306, 307, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 331, 332, 334, 337, 338, 340, 342, 343, 344, 345, 347, 349, 352, 353, 355, 356, 357, 358, 359, 361, 362, 363, 365, 366, 371, 372, 374, 375, 376, 377, 378, 381, 382, 383, 385, 386, 388, 389, 390, 391, 392, 394, 395, 396, 397, 399, 400, 402, 403, 404, 405, 407, 409, 410, 411, 415, 416, 417, 418, 419, 421, 423, 424, 425, 428, 429, 430, 431, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457], "via": [1, 4, 7, 32, 35, 41, 44, 59, 61, 62, 71, 74, 78, 82, 83, 85, 87, 88, 93, 95, 98, 106, 108, 110, 111, 114, 116, 117, 119, 124, 133, 134, 137, 150, 157, 160, 172, 179, 182, 185, 189, 190, 191, 194, 195, 196, 197, 202, 205, 207, 210, 214, 217, 221, 222, 224, 225, 231, 236, 239, 243, 249, 250, 253, 254, 255, 256, 257, 265, 269, 270, 276, 277, 280, 282, 284, 287, 290, 296, 299, 301, 302, 303, 305, 317, 318, 319, 321, 324, 325, 328, 331, 334, 338, 340, 361, 363, 365, 366, 372, 375, 376, 381, 383, 385, 388, 393, 394, 400, 402, 403, 405, 415, 417, 429, 430, 437, 442, 443, 444, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458], "http": [1, 66, 69, 73, 76, 77, 78, 82, 83, 93, 98, 99, 101, 103, 105, 106, 120, 127, 135, 136, 143, 146, 148, 150, 152, 156, 159, 172, 189, 197, 198, 215, 224, 228, 229, 237, 239, 242, 244, 249, 257, 289, 295, 296, 300, 301, 308, 309, 310, 315, 318, 319, 320, 321, 331, 340, 356, 359, 364, 365, 370, 371, 372, 373, 375, 379, 384, 386, 388, 390, 393, 394, 395, 399, 401, 403, 407, 410, 415, 419, 420, 426, 427, 428, 429, 430, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 449, 450, 457], "com": [1, 67, 71, 73, 78, 82, 83, 91, 98, 99, 101, 102, 106, 130, 152, 156, 165, 172, 173, 189, 232, 237, 249, 280, 289, 300, 301, 308, 320, 321, 324, 365, 372, 373, 374, 381, 388, 394, 428, 429, 434, 436, 439, 441, 442, 443, 444, 449, 451, 452, 453, 454, 457], "cpython": [1, 4, 10, 13, 32, 34, 52, 55, 61, 66, 69, 71, 73, 74, 78, 83, 85, 87, 88, 94, 97, 135, 148, 151, 175, 177, 180, 199, 202, 203, 214, 224, 226, 238, 243, 245, 262, 269, 277, 279, 285, 293, 298, 302, 306, 314, 323, 324, 328, 331, 332, 340, 343, 356, 362, 378, 383, 400, 402, 403, 404, 405, 406, 409, 411, 425, 430, 431, 435, 436, 438, 439, 440, 442, 443, 444, 450, 451, 452, 454], "The": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 43, 44, 46, 47, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 69, 70, 72, 73, 75, 76, 77, 78, 79, 82, 83, 84, 85, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 103, 104, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 223, 224, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 272, 274, 275, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 289, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 364, 365, 367, 368, 370, 371, 372, 373, 374, 375, 377, 378, 379, 381, 382, 383, 386, 387, 389, 390, 392, 393, 394, 395, 397, 398, 399, 401, 404, 406, 409, 410, 412, 414, 415, 418, 419, 422, 424, 426, 427, 428, 429, 430, 431, 435, 437, 438, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 460], "offer": [1, 32, 61, 71, 72, 82, 87, 89, 90, 91, 92, 93, 96, 98, 99, 105, 106, 147, 150, 151, 162, 175, 205, 212, 214, 220, 224, 225, 242, 246, 249, 255, 256, 257, 259, 269, 278, 279, 280, 298, 300, 301, 302, 306, 314, 318, 320, 324, 328, 333, 343, 344, 366, 372, 381, 391, 401, 414, 418, 421, 426, 427, 436, 437, 438, 439, 440, 441, 442, 443, 444, 447, 451, 453, 457, 458], "web": [1, 66, 82, 83, 93, 101, 103, 105, 106, 117, 215, 224, 233, 234, 236, 242, 244, 245, 257, 295, 320, 321, 371, 372, 373, 383, 385, 395, 401, 407, 420, 427, 428, 429, 436, 437, 438, 439, 440, 441, 442, 443, 444, 450, 453], "form": [1, 5, 7, 23, 30, 32, 33, 36, 37, 52, 53, 61, 70, 71, 76, 77, 78, 83, 85, 87, 88, 90, 93, 96, 98, 99, 102, 103, 105, 106, 108, 114, 116, 120, 128, 137, 148, 151, 157, 159, 164, 165, 166, 167, 170, 172, 175, 179, 180, 182, 185, 186, 187, 189, 192, 194, 195, 197, 198, 202, 210, 214, 215, 217, 219, 229, 230, 231, 233, 234, 237, 239, 243, 245, 247, 249, 254, 255, 256, 257, 259, 260, 261, 263, 269, 277, 278, 279, 281, 284, 286, 287, 289, 298, 301, 316, 318, 320, 321, 322, 324, 325, 326, 327, 331, 337, 340, 342, 343, 344, 345, 347, 353, 361, 364, 365, 366, 367, 371, 372, 373, 374, 376, 381, 383, 385, 388, 394, 396, 399, 400, 401, 402, 403, 404, 406, 407, 410, 411, 412, 414, 415, 416, 418, 419, 420, 421, 425, 427, 430, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "allow": [1, 3, 5, 7, 9, 10, 16, 22, 23, 27, 32, 33, 34, 40, 41, 42, 44, 47, 55, 56, 57, 59, 61, 62, 69, 70, 71, 73, 74, 77, 79, 82, 83, 85, 87, 88, 90, 91, 93, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 114, 116, 120, 123, 126, 127, 128, 129, 130, 131, 132, 133, 136, 143, 144, 147, 148, 150, 151, 153, 156, 157, 159, 164, 165, 166, 169, 170, 172, 174, 175, 178, 179, 180, 182, 183, 184, 185, 191, 192, 194, 197, 199, 200, 202, 203, 204, 207, 210, 212, 214, 215, 216, 217, 219, 223, 224, 231, 232, 233, 234, 236, 237, 238, 241, 243, 246, 249, 250, 251, 253, 254, 255, 256, 257, 259, 262, 263, 265, 266, 269, 276, 277, 279, 280, 282, 284, 287, 289, 290, 293, 295, 296, 300, 301, 302, 303, 304, 306, 307, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 324, 325, 326, 328, 331, 332, 333, 335, 337, 338, 340, 342, 343, 344, 347, 352, 353, 354, 357, 359, 361, 362, 363, 365, 366, 367, 371, 372, 373, 375, 376, 377, 378, 379, 381, 382, 383, 385, 386, 388, 390, 391, 394, 395, 396, 397, 398, 399, 402, 403, 404, 405, 406, 407, 410, 411, 414, 415, 416, 417, 418, 421, 424, 425, 426, 427, 430, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "pertin": [1, 255, 307], "enter": [1, 32, 33, 34, 76, 77, 78, 82, 83, 84, 85, 88, 90, 93, 95, 103, 105, 129, 137, 145, 147, 149, 159, 166, 178, 214, 236, 246, 268, 276, 277, 280, 294, 307, 317, 320, 321, 324, 331, 343, 347, 361, 365, 376, 402, 403, 404, 412, 415, 416, 418, 419, 423, 424, 425, 427, 429, 430, 439, 440, 442, 451, 452, 453, 456, 457], "first": [1, 5, 13, 14, 15, 16, 18, 22, 23, 25, 27, 30, 32, 33, 34, 36, 38, 40, 41, 44, 46, 47, 49, 52, 56, 57, 58, 59, 61, 62, 65, 70, 71, 72, 73, 74, 75, 76, 77, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 114, 115, 116, 120, 126, 128, 129, 132, 133, 134, 137, 140, 143, 145, 147, 148, 150, 156, 157, 159, 161, 164, 165, 166, 167, 172, 173, 175, 177, 179, 180, 182, 184, 185, 186, 188, 189, 190, 191, 192, 194, 196, 197, 198, 200, 202, 203, 204, 207, 210, 212, 214, 215, 217, 218, 219, 221, 224, 225, 231, 232, 233, 236, 237, 243, 245, 246, 247, 249, 253, 254, 255, 256, 257, 259, 262, 263, 265, 269, 270, 275, 276, 277, 278, 279, 280, 282, 284, 285, 289, 290, 295, 296, 298, 301, 302, 306, 307, 310, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 330, 331, 333, 335, 337, 338, 339, 340, 342, 344, 345, 347, 353, 354, 355, 356, 358, 359, 361, 362, 363, 364, 365, 366, 367, 371, 372, 374, 376, 377, 378, 381, 383, 385, 388, 389, 394, 397, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 421, 423, 425, 427, 430, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "step": [1, 54, 61, 70, 71, 75, 82, 84, 88, 91, 93, 97, 100, 101, 102, 103, 104, 106, 114, 116, 137, 140, 145, 148, 150, 156, 159, 165, 174, 175, 180, 182, 214, 219, 221, 225, 231, 236, 238, 249, 255, 262, 269, 275, 276, 277, 280, 300, 301, 319, 320, 324, 331, 337, 338, 353, 361, 367, 375, 389, 396, 402, 403, 405, 411, 416, 419, 422, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 451, 452, 453, 454], "file": [1, 7, 16, 20, 23, 25, 30, 31, 32, 33, 40, 44, 47, 49, 55, 57, 61, 64, 66, 69, 70, 71, 73, 74, 75, 76, 78, 79, 85, 87, 91, 92, 93, 95, 97, 100, 102, 103, 106, 107, 109, 110, 112, 113, 115, 116, 119, 121, 124, 125, 126, 127, 130, 131, 133, 134, 136, 137, 138, 139, 141, 143, 145, 147, 148, 150, 153, 159, 161, 165, 166, 167, 172, 173, 175, 179, 180, 185, 189, 190, 193, 195, 196, 197, 201, 202, 204, 207, 209, 212, 214, 217, 218, 219, 220, 225, 229, 231, 232, 234, 237, 240, 241, 242, 243, 245, 247, 248, 250, 252, 253, 254, 255, 257, 259, 261, 263, 264, 266, 269, 276, 278, 279, 280, 281, 282, 283, 284, 285, 289, 290, 291, 292, 294, 295, 296, 299, 301, 303, 304, 306, 308, 309, 310, 311, 312, 313, 315, 316, 318, 319, 320, 321, 322, 324, 327, 328, 330, 331, 334, 336, 339, 340, 343, 344, 345, 354, 355, 357, 358, 359, 360, 361, 363, 364, 365, 366, 369, 370, 371, 372, 373, 375, 376, 378, 379, 381, 382, 383, 384, 386, 387, 389, 391, 392, 394, 396, 398, 399, 400, 401, 402, 404, 405, 406, 407, 410, 411, 414, 415, 416, 417, 418, 422, 423, 424, 427, 428, 430, 434, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 458, 459, 460], "determin": [1, 3, 5, 7, 10, 11, 18, 22, 23, 32, 33, 34, 38, 39, 44, 47, 52, 58, 61, 71, 73, 74, 83, 85, 88, 90, 92, 96, 98, 99, 101, 102, 103, 104, 105, 114, 115, 120, 127, 130, 137, 140, 144, 147, 148, 149, 150, 151, 164, 165, 166, 168, 170, 173, 175, 178, 179, 180, 182, 186, 192, 197, 200, 202, 204, 214, 219, 221, 231, 236, 237, 238, 243, 247, 251, 253, 254, 255, 256, 257, 258, 259, 262, 266, 268, 269, 272, 276, 277, 278, 279, 280, 282, 285, 289, 290, 293, 296, 300, 301, 302, 303, 310, 312, 313, 314, 315, 316, 318, 320, 323, 324, 325, 326, 327, 328, 331, 333, 334, 335, 337, 338, 339, 340, 344, 345, 347, 353, 355, 361, 363, 365, 372, 374, 375, 376, 381, 385, 390, 396, 399, 400, 401, 402, 404, 405, 407, 409, 410, 411, 415, 416, 417, 418, 425, 430, 436, 439, 440, 442, 443, 444, 446, 447, 448, 449, 451, 452, 453, 454, 456], "whether": [1, 5, 7, 9, 10, 11, 13, 14, 17, 23, 30, 34, 44, 56, 57, 61, 62, 71, 76, 77, 83, 84, 87, 88, 90, 91, 93, 96, 97, 98, 101, 102, 103, 105, 109, 110, 111, 114, 127, 133, 136, 137, 140, 144, 145, 147, 148, 149, 150, 151, 157, 159, 165, 166, 170, 172, 175, 178, 180, 182, 185, 191, 196, 197, 199, 209, 214, 219, 220, 223, 224, 232, 233, 236, 238, 243, 246, 247, 249, 254, 255, 256, 257, 259, 262, 263, 269, 270, 276, 277, 278, 279, 280, 282, 284, 289, 290, 292, 293, 296, 298, 299, 301, 306, 308, 310, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 326, 327, 328, 331, 336, 337, 338, 340, 343, 344, 347, 353, 357, 361, 363, 364, 365, 366, 367, 371, 372, 373, 374, 375, 376, 378, 381, 383, 384, 385, 390, 395, 396, 397, 399, 401, 402, 403, 404, 405, 407, 411, 415, 416, 417, 418, 423, 425, 430, 431, 436, 439, 440, 441, 442, 443, 444, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457], "problem": [1, 23, 25, 32, 34, 57, 61, 71, 74, 76, 78, 82, 83, 84, 85, 86, 88, 90, 91, 93, 97, 98, 99, 100, 101, 103, 105, 107, 109, 119, 120, 144, 148, 149, 157, 159, 161, 164, 172, 175, 179, 182, 185, 188, 192, 194, 196, 212, 219, 225, 234, 236, 238, 242, 250, 254, 255, 256, 268, 269, 270, 276, 277, 282, 290, 296, 315, 318, 320, 321, 324, 327, 336, 337, 340, 342, 363, 366, 367, 370, 378, 383, 385, 388, 402, 410, 413, 414, 417, 418, 419, 421, 426, 427, 428, 429, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 456, 457], "alreadi": [1, 5, 7, 9, 10, 13, 22, 23, 24, 27, 28, 30, 32, 33, 37, 41, 47, 49, 52, 58, 59, 61, 62, 64, 71, 73, 74, 75, 76, 78, 82, 83, 84, 85, 87, 90, 91, 92, 93, 96, 97, 99, 101, 102, 103, 104, 105, 107, 111, 114, 116, 120, 121, 123, 127, 133, 140, 150, 153, 156, 157, 159, 161, 165, 170, 172, 173, 178, 179, 185, 188, 189, 194, 197, 199, 200, 201, 202, 207, 212, 214, 216, 221, 225, 231, 232, 236, 237, 238, 243, 246, 249, 255, 256, 258, 259, 263, 268, 269, 270, 276, 277, 279, 282, 284, 287, 289, 290, 301, 302, 303, 310, 311, 314, 315, 318, 320, 321, 323, 324, 328, 331, 332, 335, 337, 340, 343, 347, 353, 356, 361, 365, 366, 367, 371, 372, 375, 376, 379, 381, 385, 386, 388, 392, 396, 402, 403, 405, 407, 411, 415, 416, 417, 418, 421, 425, 428, 429, 436, 437, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "advantag": [1, 32, 49, 71, 73, 76, 83, 88, 93, 98, 99, 104, 175, 186, 212, 238, 282, 290, 306, 313, 324, 345, 365, 378, 386, 388, 390, 421, 426, 437, 440, 441, 446, 449, 451, 452, 453, 454, 457], "asid": [1, 32, 103, 172, 214, 236, 290, 337, 367, 403, 405, 451, 456, 457], "save": [1, 13, 22, 23, 27, 32, 34, 41, 44, 61, 70, 71, 73, 83, 85, 88, 91, 92, 93, 97, 98, 99, 102, 114, 123, 133, 134, 140, 142, 145, 157, 159, 166, 172, 189, 198, 215, 216, 232, 236, 249, 254, 257, 258, 259, 276, 277, 282, 290, 295, 300, 301, 302, 316, 320, 331, 337, 340, 343, 344, 347, 358, 360, 361, 376, 381, 394, 399, 400, 402, 403, 414, 415, 416, 422, 425, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 453, 456, 458], "what": [1, 5, 9, 19, 23, 25, 26, 29, 30, 32, 33, 34, 38, 39, 41, 47, 49, 52, 56, 61, 62, 66, 70, 73, 74, 76, 77, 84, 85, 87, 88, 91, 92, 93, 95, 99, 101, 102, 103, 105, 106, 114, 116, 120, 127, 133, 144, 148, 153, 157, 160, 164, 165, 166, 172, 175, 188, 189, 190, 192, 196, 197, 202, 204, 212, 214, 219, 224, 225, 232, 233, 236, 237, 238, 239, 249, 254, 255, 256, 257, 258, 266, 273, 277, 279, 289, 293, 296, 300, 301, 302, 308, 310, 314, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 331, 337, 339, 340, 353, 357, 361, 363, 365, 366, 367, 371, 376, 385, 386, 388, 396, 399, 402, 404, 405, 407, 409, 410, 411, 415, 416, 417, 418, 419, 420, 425, 428, 434, 436], "done": [1, 5, 7, 10, 14, 30, 32, 33, 34, 35, 46, 47, 49, 50, 52, 53, 55, 56, 60, 61, 62, 64, 70, 71, 73, 74, 82, 83, 84, 87, 88, 90, 93, 95, 96, 98, 99, 102, 103, 105, 106, 107, 109, 114, 119, 120, 123, 127, 130, 133, 145, 148, 149, 156, 157, 164, 165, 166, 172, 173, 175, 180, 182, 185, 189, 193, 194, 197, 198, 205, 214, 218, 220, 221, 223, 224, 225, 234, 236, 238, 243, 246, 254, 255, 256, 257, 265, 269, 276, 277, 279, 282, 284, 290, 291, 296, 298, 301, 316, 319, 320, 321, 324, 325, 328, 331, 337, 338, 339, 340, 344, 345, 353, 361, 362, 363, 366, 367, 372, 375, 376, 378, 386, 387, 388, 389, 396, 403, 405, 407, 410, 411, 414, 415, 416, 417, 421, 423, 427, 436, 437, 438, 439, 440, 442, 443, 448, 449, 451, 452, 453, 454, 455, 457], "next": [1, 7, 23, 26, 32, 35, 36, 41, 61, 62, 70, 71, 73, 74, 76, 78, 83, 85, 88, 90, 91, 92, 93, 96, 99, 101, 102, 105, 109, 119, 120, 133, 137, 140, 142, 145, 147, 149, 150, 151, 157, 164, 165, 166, 175, 179, 180, 182, 183, 184, 185, 186, 194, 200, 202, 207, 210, 214, 215, 216, 219, 221, 225, 231, 232, 236, 238, 241, 243, 245, 249, 255, 257, 258, 259, 265, 268, 269, 276, 277, 279, 280, 289, 290, 296, 300, 301, 302, 307, 312, 313, 315, 318, 319, 320, 321, 323, 324, 325, 328, 332, 333, 337, 347, 353, 361, 366, 367, 372, 374, 376, 388, 400, 402, 403, 404, 405, 407, 409, 411, 412, 414, 415, 416, 417, 422, 423, 424, 425, 427, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 450, 451, 452, 454, 456, 457, 458], "releas": [1, 3, 4, 5, 7, 9, 12, 13, 23, 26, 28, 33, 34, 35, 38, 41, 44, 49, 50, 55, 56, 59, 61, 62, 70, 71, 73, 74, 75, 78, 82, 83, 85, 88, 90, 91, 93, 99, 101, 104, 105, 106, 108, 110, 116, 120, 126, 129, 132, 133, 140, 156, 159, 165, 166, 180, 199, 214, 223, 224, 225, 243, 246, 255, 259, 269, 270, 277, 279, 282, 285, 308, 315, 318, 320, 323, 324, 331, 336, 340, 343, 347, 349, 359, 361, 363, 376, 397, 401, 403, 411, 415, 418, 425, 429, 430, 431, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 451, 460], "addit": [1, 5, 7, 9, 10, 23, 30, 32, 34, 40, 41, 44, 56, 59, 61, 64, 71, 73, 74, 78, 82, 85, 88, 92, 93, 95, 96, 97, 98, 99, 102, 105, 107, 110, 111, 114, 116, 119, 133, 138, 143, 147, 148, 150, 157, 159, 160, 161, 164, 165, 166, 169, 170, 172, 173, 175, 177, 178, 179, 180, 182, 185, 186, 188, 191, 192, 194, 195, 197, 199, 202, 204, 207, 210, 212, 214, 215, 216, 219, 221, 223, 224, 229, 230, 231, 232, 234, 236, 238, 239, 242, 243, 245, 246, 247, 249, 250, 254, 255, 256, 258, 259, 261, 262, 263, 265, 269, 275, 276, 277, 278, 279, 282, 285, 287, 288, 289, 290, 296, 298, 301, 303, 308, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 325, 327, 328, 331, 337, 338, 340, 341, 342, 343, 344, 345, 347, 350, 353, 355, 361, 363, 364, 365, 366, 367, 371, 372, 375, 376, 378, 381, 383, 385, 386, 388, 389, 390, 391, 392, 394, 397, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 413, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 427, 428, 429, 430, 431, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458], "need": [1, 5, 7, 10, 11, 13, 18, 23, 26, 28, 30, 32, 33, 34, 41, 44, 47, 49, 50, 55, 56, 57, 59, 61, 62, 64, 70, 71, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 114, 116, 119, 120, 126, 131, 132, 133, 134, 137, 141, 142, 144, 145, 147, 148, 150, 151, 157, 159, 161, 165, 166, 168, 170, 172, 175, 179, 180, 182, 183, 185, 186, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 212, 214, 215, 218, 219, 223, 224, 225, 227, 229, 232, 234, 236, 237, 238, 239, 243, 245, 246, 247, 249, 253, 254, 255, 256, 257, 258, 259, 261, 265, 268, 269, 270, 272, 276, 277, 278, 279, 282, 284, 285, 287, 288, 289, 290, 293, 296, 300, 301, 302, 303, 304, 307, 308, 312, 313, 314, 317, 318, 319, 320, 321, 323, 324, 325, 327, 328, 331, 332, 337, 338, 339, 340, 342, 343, 344, 346, 347, 354, 355, 361, 362, 363, 365, 366, 367, 371, 372, 373, 375, 376, 378, 379, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 394, 395, 396, 397, 398, 399, 400, 403, 405, 406, 407, 409, 410, 411, 412, 413, 415, 416, 418, 419, 421, 423, 424, 425, 426, 427, 428, 430, 431, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "case": [1, 5, 7, 10, 13, 14, 18, 22, 23, 24, 25, 27, 30, 32, 33, 34, 38, 40, 44, 47, 50, 54, 55, 56, 57, 59, 61, 62, 64, 69, 70, 71, 73, 74, 78, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 96, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 111, 114, 115, 116, 118, 119, 120, 123, 127, 129, 132, 133, 137, 139, 142, 144, 145, 148, 149, 150, 153, 157, 159, 164, 165, 166, 167, 170, 172, 175, 177, 179, 180, 182, 184, 185, 190, 191, 192, 194, 196, 197, 198, 199, 200, 202, 203, 204, 209, 214, 216, 219, 221, 223, 224, 225, 228, 229, 232, 233, 234, 236, 237, 238, 239, 243, 246, 247, 249, 253, 254, 255, 256, 257, 258, 259, 262, 263, 265, 269, 273, 276, 277, 278, 279, 280, 282, 284, 285, 289, 290, 296, 298, 300, 301, 306, 307, 308, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 324, 325, 326, 327, 328, 331, 333, 337, 338, 340, 343, 344, 345, 347, 353, 355, 359, 361, 363, 364, 366, 367, 368, 371, 372, 375, 376, 377, 381, 383, 384, 385, 386, 388, 390, 391, 395, 396, 400, 403, 404, 405, 406, 407, 410, 411, 412, 413, 415, 416, 417, 418, 419, 423, 425, 427, 430, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "provid": [1, 5, 7, 10, 11, 15, 18, 23, 24, 25, 28, 30, 32, 33, 34, 35, 36, 39, 41, 42, 44, 46, 47, 49, 52, 55, 56, 59, 60, 61, 62, 64, 66, 70, 72, 73, 76, 77, 78, 82, 83, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 101, 102, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 123, 127, 130, 131, 133, 136, 138, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 156, 157, 159, 160, 161, 162, 164, 165, 166, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 207, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 252, 254, 255, 256, 257, 258, 259, 262, 263, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 279, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 296, 297, 298, 300, 301, 302, 303, 304, 306, 308, 310, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 368, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 407, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 425, 426, 427, 430, 432, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "To": [1, 3, 5, 10, 13, 22, 23, 28, 30, 32, 34, 35, 41, 44, 55, 58, 59, 61, 62, 66, 69, 70, 71, 74, 75, 76, 77, 78, 82, 83, 85, 86, 87, 90, 91, 92, 93, 94, 96, 97, 98, 99, 101, 102, 104, 105, 106, 108, 111, 114, 119, 120, 126, 129, 130, 133, 140, 147, 148, 149, 150, 151, 153, 157, 159, 160, 164, 165, 166, 170, 172, 175, 177, 179, 182, 186, 189, 190, 191, 192, 197, 198, 199, 201, 203, 207, 214, 215, 216, 217, 219, 223, 224, 225, 231, 232, 234, 236, 238, 239, 243, 246, 247, 249, 250, 254, 255, 256, 257, 258, 259, 262, 265, 268, 269, 270, 273, 276, 277, 278, 279, 280, 282, 285, 286, 289, 290, 296, 300, 301, 308, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 327, 328, 331, 332, 333, 337, 338, 340, 343, 344, 345, 346, 347, 349, 353, 355, 359, 361, 362, 363, 365, 366, 367, 371, 372, 376, 381, 386, 387, 388, 390, 394, 396, 400, 402, 403, 405, 407, 410, 413, 415, 416, 417, 418, 420, 421, 423, 424, 425, 426, 427, 428, 430, 431, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "search": [1, 14, 23, 30, 32, 33, 34, 62, 66, 73, 76, 78, 82, 83, 84, 85, 91, 97, 98, 105, 109, 115, 148, 150, 153, 165, 182, 185, 200, 205, 214, 219, 220, 237, 238, 242, 253, 254, 255, 256, 258, 265, 266, 267, 277, 279, 280, 282, 284, 290, 293, 294, 295, 313, 314, 316, 320, 324, 328, 331, 338, 347, 349, 361, 365, 372, 373, 379, 385, 387, 388, 390, 395, 397, 398, 400, 402, 403, 404, 405, 411, 414, 415, 416, 417, 423, 424, 426, 427, 430, 431, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 451, 452, 454, 455, 456, 457, 458], "box": [1, 78, 90, 99, 166, 236, 259, 268, 347, 351, 353, 363, 405, 424, 455, 456, 457], "top": [1, 30, 32, 34, 41, 66, 71, 76, 82, 83, 85, 88, 90, 92, 93, 95, 98, 99, 101, 102, 106, 110, 114, 116, 129, 130, 133, 135, 143, 148, 157, 160, 165, 166, 168, 178, 179, 180, 182, 196, 200, 202, 214, 215, 219, 225, 232, 236, 237, 238, 239, 242, 243, 245, 246, 254, 263, 277, 279, 282, 284, 286, 287, 290, 294, 295, 296, 297, 306, 321, 322, 330, 331, 337, 340, 343, 346, 347, 349, 353, 361, 362, 365, 366, 375, 388, 394, 395, 397, 402, 404, 407, 408, 410, 411, 415, 417, 425, 426, 430, 435, 437, 438, 439, 440, 442, 443, 444, 445, 447, 449, 451, 452, 453, 455, 456, 457, 458], "log": [1, 33, 57, 66, 78, 85, 91, 93, 94, 105, 112, 120, 133, 140, 144, 156, 159, 177, 182, 203, 212, 219, 225, 234, 242, 246, 262, 277, 287, 300, 309, 314, 317, 321, 324, 328, 331, 335, 337, 340, 363, 365, 376, 383, 395, 403, 418, 426, 430, 436, 437, 438, 439, 441, 442, 443, 446, 447, 450, 458], "don": [1, 5, 6, 8, 9, 18, 23, 28, 32, 33, 34, 47, 55, 56, 57, 61, 71, 73, 74, 77, 78, 79, 81, 85, 87, 88, 90, 91, 92, 93, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 114, 116, 120, 127, 128, 131, 133, 137, 144, 149, 150, 153, 157, 159, 161, 165, 168, 170, 172, 179, 180, 182, 189, 198, 205, 214, 215, 216, 219, 231, 232, 238, 245, 246, 247, 250, 255, 256, 257, 262, 269, 276, 277, 279, 280, 282, 289, 290, 300, 301, 310, 312, 314, 317, 318, 320, 321, 323, 324, 343, 345, 346, 347, 353, 363, 365, 366, 367, 372, 375, 377, 378, 381, 383, 388, 399, 401, 402, 403, 405, 406, 407, 414, 415, 416, 417, 418, 419, 421, 424, 425, 428, 430, 431, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 449, 450, 452, 453, 454, 455, 457, 458], "t": [1, 5, 6, 7, 8, 9, 13, 18, 22, 23, 25, 28, 30, 32, 33, 34, 39, 40, 42, 44, 47, 49, 50, 54, 55, 56, 57, 59, 61, 62, 70, 71, 73, 74, 75, 77, 78, 81, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 114, 115, 116, 119, 120, 123, 126, 127, 128, 129, 131, 133, 136, 137, 140, 143, 144, 147, 148, 149, 150, 153, 156, 157, 159, 161, 164, 165, 166, 168, 170, 172, 173, 175, 179, 180, 182, 185, 187, 189, 190, 191, 193, 194, 195, 198, 199, 202, 203, 205, 206, 210, 214, 215, 216, 219, 220, 221, 223, 224, 225, 231, 232, 233, 236, 237, 238, 239, 243, 245, 246, 247, 250, 254, 255, 256, 257, 259, 262, 263, 268, 269, 272, 273, 276, 277, 278, 279, 280, 282, 283, 284, 287, 289, 290, 296, 298, 300, 301, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 331, 334, 335, 337, 340, 342, 343, 344, 345, 346, 347, 353, 354, 355, 357, 361, 362, 363, 364, 365, 366, 367, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 386, 388, 391, 392, 394, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 410, 411, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 431, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "account": [1, 82, 102, 103, 107, 148, 150, 153, 157, 172, 175, 179, 191, 198, 212, 214, 224, 233, 254, 255, 256, 272, 277, 279, 289, 292, 308, 327, 331, 337, 340, 375, 419, 442, 446, 447, 451, 453, 454, 455, 457, 458], "sign": [1, 18, 34, 47, 62, 73, 83, 102, 115, 144, 148, 150, 157, 165, 166, 172, 175, 185, 190, 198, 210, 214, 217, 224, 254, 256, 257, 262, 269, 270, 276, 277, 280, 282, 301, 324, 325, 327, 343, 344, 371, 388, 403, 405, 410, 417, 421, 423, 424, 427, 436, 438, 439, 441, 442, 443, 444, 449, 451, 453, 455, 457], "up": [1, 7, 9, 14, 23, 32, 34, 35, 41, 44, 55, 59, 61, 62, 71, 73, 74, 75, 76, 78, 82, 84, 85, 88, 90, 91, 92, 93, 97, 98, 99, 100, 102, 103, 105, 111, 114, 116, 120, 126, 128, 130, 132, 133, 134, 140, 143, 148, 150, 153, 156, 157, 166, 168, 172, 175, 179, 180, 182, 183, 186, 189, 197, 198, 200, 202, 210, 212, 214, 215, 216, 219, 224, 229, 231, 232, 234, 236, 240, 243, 246, 249, 253, 254, 255, 256, 257, 258, 262, 263, 265, 268, 269, 270, 276, 277, 278, 279, 280, 290, 291, 293, 298, 301, 302, 305, 310, 313, 315, 316, 318, 319, 320, 321, 323, 324, 325, 327, 328, 331, 334, 335, 337, 338, 340, 342, 343, 347, 352, 353, 358, 361, 362, 363, 364, 365, 366, 367, 371, 372, 375, 378, 383, 385, 388, 391, 392, 396, 399, 400, 402, 403, 404, 405, 407, 409, 410, 411, 413, 414, 415, 416, 419, 421, 422, 425, 429, 430, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460], "link": [1, 33, 34, 55, 61, 64, 69, 71, 72, 75, 76, 77, 78, 82, 83, 84, 85, 98, 99, 103, 107, 116, 135, 150, 151, 153, 167, 172, 189, 201, 220, 224, 229, 232, 234, 245, 247, 249, 254, 255, 277, 278, 279, 285, 310, 314, 321, 322, 328, 331, 333, 336, 337, 340, 347, 353, 375, 378, 379, 381, 383, 388, 389, 401, 403, 407, 414, 429, 430, 431, 435, 437, 440, 441, 443, 444, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458], "possibl": [1, 2, 5, 7, 10, 13, 18, 22, 23, 27, 32, 33, 34, 38, 41, 46, 55, 56, 59, 61, 62, 64, 69, 70, 71, 74, 76, 77, 79, 81, 84, 85, 87, 88, 90, 91, 92, 93, 96, 97, 98, 99, 101, 102, 103, 105, 107, 109, 110, 111, 114, 116, 120, 132, 133, 134, 140, 142, 148, 149, 153, 157, 159, 160, 161, 164, 165, 166, 170, 172, 173, 175, 179, 180, 182, 183, 185, 186, 189, 190, 194, 195, 197, 199, 200, 202, 207, 214, 215, 221, 224, 225, 231, 234, 236, 238, 243, 246, 249, 250, 254, 255, 256, 257, 258, 259, 262, 263, 265, 268, 269, 273, 276, 277, 278, 279, 280, 282, 285, 286, 290, 291, 293, 294, 296, 300, 301, 302, 310, 313, 314, 315, 318, 320, 321, 323, 324, 325, 326, 327, 328, 330, 331, 335, 336, 337, 338, 340, 343, 344, 345, 347, 353, 359, 363, 365, 366, 367, 371, 372, 374, 376, 378, 379, 381, 382, 388, 394, 396, 397, 398, 399, 401, 402, 403, 405, 406, 409, 410, 411, 415, 416, 417, 418, 419, 421, 423, 424, 425, 427, 428, 430, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "anonym": [1, 85, 93, 165, 212, 256, 265, 272, 277, 361, 402, 405, 416, 437, 451], "Being": [1, 102, 149, 324, 451, 457], "now": [1, 10, 23, 28, 32, 33, 34, 38, 41, 47, 50, 55, 56, 57, 58, 59, 61, 62, 64, 66, 70, 71, 73, 74, 76, 78, 82, 83, 84, 85, 87, 88, 90, 91, 92, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 114, 115, 116, 120, 121, 125, 126, 127, 130, 131, 132, 133, 134, 136, 139, 142, 148, 150, 151, 153, 156, 157, 159, 160, 162, 164, 165, 166, 170, 172, 173, 175, 177, 180, 182, 189, 191, 194, 200, 201, 202, 203, 204, 205, 207, 210, 212, 214, 215, 219, 223, 224, 226, 229, 231, 232, 233, 234, 237, 238, 239, 240, 243, 246, 247, 250, 254, 255, 256, 257, 258, 259, 261, 262, 265, 268, 269, 270, 272, 276, 277, 278, 279, 280, 282, 285, 286, 287, 290, 291, 293, 295, 300, 301, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324, 325, 327, 328, 331, 338, 343, 344, 345, 354, 358, 359, 361, 362, 363, 365, 366, 367, 371, 372, 375, 376, 377, 381, 386, 388, 394, 395, 397, 398, 399, 401, 402, 403, 405, 407, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 424, 425, 426, 430, 431, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "click": [1, 79, 99, 103, 166, 178, 236, 277, 337, 361, 375, 401, 413, 424, 434, 436, 447, 452, 455, 456, 457], "button": [1, 84, 90, 99, 166, 178, 236, 268, 347, 353, 361, 401, 436, 455, 456, 457], "bar": [1, 28, 49, 83, 84, 85, 88, 92, 98, 99, 100, 102, 114, 116, 145, 157, 165, 166, 189, 217, 232, 236, 238, 250, 255, 256, 269, 275, 276, 277, 278, 279, 280, 284, 286, 290, 293, 295, 301, 316, 320, 324, 337, 340, 347, 352, 353, 362, 363, 365, 366, 367, 383, 397, 398, 400, 402, 407, 409, 410, 411, 416, 437, 443, 448], "submiss": [1, 106, 269, 296, 401, 437], "two": [1, 5, 6, 7, 9, 10, 14, 15, 20, 23, 25, 28, 30, 32, 33, 34, 35, 36, 40, 41, 44, 46, 55, 56, 60, 61, 62, 65, 70, 71, 73, 74, 75, 76, 78, 82, 83, 84, 85, 87, 88, 90, 91, 92, 93, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 109, 114, 116, 120, 126, 127, 130, 132, 133, 136, 137, 139, 140, 143, 144, 145, 147, 148, 149, 150, 153, 157, 161, 162, 164, 165, 166, 167, 170, 172, 175, 178, 179, 180, 182, 183, 184, 185, 189, 191, 196, 197, 198, 199, 200, 202, 205, 207, 210, 212, 214, 215, 216, 217, 218, 219, 224, 225, 232, 234, 236, 237, 238, 243, 245, 246, 247, 248, 249, 254, 255, 256, 259, 262, 263, 265, 269, 270, 273, 275, 276, 277, 278, 279, 280, 282, 285, 287, 290, 294, 296, 298, 299, 300, 301, 304, 306, 307, 308, 312, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325, 326, 327, 331, 337, 338, 339, 340, 342, 343, 344, 345, 350, 353, 355, 359, 361, 363, 364, 365, 366, 367, 371, 372, 374, 375, 376, 377, 378, 381, 383, 385, 388, 391, 396, 397, 399, 400, 402, 403, 405, 406, 407, 408, 409, 410, 411, 413, 415, 416, 417, 418, 419, 421, 424, 425, 426, 427, 434, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458], "field": [1, 3, 5, 13, 20, 27, 28, 30, 32, 33, 34, 41, 52, 53, 55, 56, 58, 59, 61, 62, 64, 71, 73, 74, 82, 85, 88, 91, 92, 98, 104, 116, 140, 148, 161, 164, 166, 172, 175, 180, 185, 188, 191, 192, 194, 197, 198, 202, 222, 223, 225, 231, 236, 247, 249, 255, 256, 275, 277, 285, 292, 296, 298, 304, 307, 317, 318, 320, 321, 322, 324, 325, 327, 328, 331, 335, 337, 339, 344, 345, 347, 353, 355, 358, 362, 371, 372, 374, 376, 381, 383, 386, 388, 397, 410, 421, 427, 430, 437, 438, 439, 440, 442, 443, 444, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "titl": [1, 62, 78, 82, 91, 93, 102, 105, 106, 114, 150, 173, 178, 229, 236, 250, 255, 269, 276, 318, 320, 324, 325, 347, 351, 361, 363, 372, 386, 387, 388, 395, 401, 429, 437, 439, 441, 448, 451, 457], "comment": [1, 9, 62, 71, 88, 93, 99, 102, 105, 116, 157, 165, 182, 192, 229, 232, 233, 236, 243, 272, 277, 282, 283, 292, 295, 296, 301, 313, 328, 340, 354, 355, 371, 387, 388, 390, 397, 398, 401, 406, 411, 413, 416, 423, 424, 437, 439, 440, 442, 444, 445, 448, 449, 451, 457], "For": [1, 5, 7, 9, 10, 12, 13, 18, 22, 23, 24, 28, 32, 33, 34, 38, 39, 41, 42, 44, 46, 47, 50, 55, 56, 59, 61, 62, 64, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 114, 116, 119, 120, 122, 126, 127, 128, 133, 136, 137, 140, 141, 142, 143, 144, 148, 149, 150, 151, 156, 157, 159, 160, 161, 164, 165, 166, 170, 172, 175, 176, 177, 179, 180, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 204, 205, 208, 209, 210, 212, 214, 215, 217, 219, 220, 221, 223, 224, 225, 229, 231, 232, 234, 236, 237, 238, 239, 241, 242, 243, 245, 246, 247, 249, 250, 255, 256, 257, 258, 259, 261, 262, 263, 265, 268, 269, 270, 273, 275, 276, 277, 278, 279, 280, 282, 283, 284, 288, 290, 293, 294, 295, 296, 298, 300, 301, 302, 303, 304, 306, 308, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 334, 335, 336, 337, 339, 340, 342, 343, 344, 345, 347, 353, 355, 358, 361, 362, 363, 364, 365, 366, 367, 371, 372, 373, 374, 377, 378, 379, 381, 382, 383, 384, 385, 386, 388, 389, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "veri": [1, 7, 10, 31, 32, 34, 50, 57, 61, 66, 71, 73, 76, 78, 82, 83, 84, 85, 87, 88, 90, 91, 92, 93, 97, 98, 99, 100, 102, 103, 104, 105, 106, 115, 122, 142, 148, 150, 156, 157, 159, 166, 172, 175, 179, 182, 185, 191, 192, 195, 196, 200, 214, 219, 225, 231, 234, 238, 242, 243, 254, 258, 259, 269, 270, 273, 276, 277, 282, 290, 301, 310, 312, 317, 318, 319, 321, 326, 328, 331, 332, 337, 345, 347, 361, 363, 365, 366, 367, 371, 401, 403, 405, 407, 411, 414, 416, 417, 419, 421, 434, 436, 437, 438, 439, 440, 441, 442, 444, 445, 447, 449, 450, 451, 452, 453, 454, 455, 457], "descript": [1, 5, 23, 24, 34, 51, 56, 57, 61, 62, 70, 71, 72, 87, 90, 91, 95, 97, 98, 99, 108, 116, 122, 133, 150, 156, 161, 164, 165, 166, 179, 180, 182, 185, 189, 190, 191, 194, 201, 204, 219, 230, 234, 238, 239, 243, 247, 254, 255, 256, 258, 265, 270, 276, 277, 280, 283, 289, 295, 304, 314, 315, 318, 320, 321, 324, 335, 338, 339, 340, 344, 347, 353, 359, 361, 363, 365, 375, 376, 377, 389, 390, 394, 395, 402, 403, 404, 405, 409, 411, 416, 420, 426, 430, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 449, 451, 453, 454, 456, 457, 458], "fewer": [1, 102, 116, 164, 236, 246, 249, 301, 320, 323, 353, 407, 416, 440, 442, 445, 447, 453, 455, 456, 457], "than": [1, 5, 10, 15, 18, 22, 23, 24, 25, 29, 30, 32, 33, 34, 37, 38, 39, 40, 41, 44, 47, 50, 53, 54, 55, 56, 59, 61, 62, 70, 71, 72, 73, 74, 76, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 115, 116, 119, 120, 121, 123, 127, 128, 131, 132, 133, 134, 137, 139, 140, 142, 143, 144, 148, 150, 151, 153, 156, 157, 159, 160, 161, 164, 165, 166, 170, 172, 175, 177, 179, 180, 182, 184, 185, 186, 187, 188, 190, 192, 194, 196, 197, 198, 199, 200, 202, 204, 207, 208, 214, 215, 216, 218, 219, 221, 223, 224, 225, 229, 231, 232, 236, 237, 238, 239, 243, 246, 247, 249, 250, 255, 256, 257, 258, 259, 261, 262, 263, 265, 269, 270, 272, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 288, 289, 290, 294, 295, 296, 298, 300, 301, 302, 304, 306, 307, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 330, 331, 333, 337, 338, 340, 342, 343, 344, 345, 347, 350, 352, 353, 355, 358, 359, 361, 363, 365, 366, 367, 370, 371, 372, 375, 376, 378, 381, 383, 384, 385, 386, 388, 390, 394, 397, 399, 400, 402, 403, 405, 407, 409, 410, 411, 414, 415, 416, 417, 418, 419, 421, 423, 424, 425, 427, 430, 431, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "ten": [1, 83, 91, 99, 150, 166, 175, 290, 300, 308, 327, 440], "word": [1, 5, 10, 11, 32, 61, 71, 76, 78, 83, 84, 85, 88, 90, 92, 95, 99, 102, 103, 104, 105, 114, 144, 148, 150, 157, 165, 172, 175, 179, 182, 190, 192, 197, 225, 236, 262, 276, 279, 280, 300, 301, 302, 308, 313, 320, 323, 324, 325, 332, 342, 343, 347, 363, 387, 388, 392, 405, 407, 409, 410, 411, 416, 417, 424, 425, 434, 437, 439, 441, 442, 443, 445, 448, 449, 454, 455, 456, 457], "describ": [1, 5, 7, 10, 13, 16, 21, 23, 24, 26, 30, 31, 34, 41, 44, 47, 48, 49, 56, 57, 58, 59, 61, 64, 70, 71, 72, 73, 75, 76, 78, 83, 85, 86, 88, 90, 91, 92, 93, 95, 96, 97, 98, 99, 105, 106, 107, 110, 112, 113, 114, 116, 120, 122, 131, 136, 137, 138, 143, 148, 150, 153, 154, 156, 157, 159, 163, 164, 165, 166, 169, 170, 171, 173, 175, 176, 177, 179, 180, 182, 183, 184, 185, 191, 192, 197, 202, 205, 206, 208, 211, 212, 213, 214, 219, 224, 226, 231, 233, 234, 235, 236, 237, 239, 242, 243, 244, 245, 246, 247, 248, 254, 255, 256, 257, 259, 263, 264, 267, 270, 271, 273, 274, 276, 277, 281, 282, 288, 289, 290, 294, 296, 297, 298, 299, 300, 301, 303, 304, 306, 310, 314, 317, 318, 320, 321, 322, 323, 324, 325, 327, 328, 329, 331, 333, 336, 337, 338, 341, 343, 347, 353, 361, 363, 365, 366, 368, 371, 372, 375, 380, 381, 382, 383, 385, 389, 390, 391, 394, 397, 398, 399, 401, 402, 403, 405, 407, 408, 409, 410, 411, 412, 415, 416, 417, 418, 420, 421, 423, 424, 425, 430, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "detail": [1, 10, 13, 17, 18, 26, 31, 32, 33, 38, 41, 44, 52, 53, 55, 57, 59, 61, 62, 64, 69, 70, 71, 72, 74, 75, 76, 77, 78, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 102, 105, 106, 109, 114, 116, 119, 120, 123, 124, 127, 130, 131, 133, 135, 137, 141, 148, 158, 159, 160, 162, 164, 165, 166, 170, 174, 175, 179, 180, 182, 183, 185, 190, 194, 196, 200, 202, 204, 214, 215, 219, 223, 224, 226, 230, 234, 236, 238, 239, 243, 246, 247, 250, 253, 255, 257, 258, 259, 261, 262, 269, 276, 277, 282, 283, 298, 300, 301, 302, 304, 306, 308, 313, 314, 317, 318, 319, 320, 322, 324, 325, 327, 328, 331, 333, 334, 335, 337, 340, 342, 343, 347, 358, 362, 363, 365, 366, 371, 372, 373, 375, 376, 378, 381, 383, 385, 388, 390, 394, 396, 397, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 421, 424, 425, 427, 429, 430, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "expect": [1, 5, 9, 23, 28, 34, 38, 44, 50, 55, 56, 61, 64, 71, 73, 74, 75, 76, 82, 83, 85, 87, 90, 91, 92, 93, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 109, 114, 116, 120, 121, 127, 128, 133, 148, 150, 157, 159, 165, 166, 170, 175, 176, 177, 179, 180, 182, 186, 192, 202, 210, 212, 214, 219, 224, 231, 232, 234, 238, 239, 241, 243, 246, 249, 250, 254, 255, 257, 259, 265, 269, 275, 276, 277, 282, 284, 291, 294, 308, 310, 312, 313, 315, 318, 320, 321, 323, 324, 328, 331, 333, 337, 338, 340, 344, 353, 355, 361, 362, 363, 366, 367, 370, 371, 372, 375, 383, 388, 390, 391, 394, 399, 400, 403, 404, 405, 406, 407, 415, 416, 419, 427, 428, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "happen": [1, 18, 23, 25, 32, 34, 57, 71, 74, 76, 82, 84, 87, 88, 90, 91, 93, 99, 101, 103, 106, 110, 120, 132, 133, 147, 159, 165, 166, 170, 172, 179, 196, 202, 212, 214, 215, 225, 236, 238, 243, 246, 254, 255, 256, 257, 270, 276, 277, 282, 296, 301, 310, 316, 318, 321, 324, 325, 331, 332, 338, 339, 340, 343, 347, 358, 365, 366, 367, 372, 383, 402, 403, 404, 405, 407, 410, 411, 415, 416, 418, 423, 425, 437, 439, 441, 442, 443, 444, 445, 447, 449, 453, 454, 457, 458], "did": [1, 74, 82, 85, 87, 88, 99, 102, 103, 106, 121, 133, 156, 157, 180, 182, 191, 232, 234, 269, 270, 272, 276, 277, 296, 301, 311, 321, 328, 331, 338, 359, 363, 365, 367, 372, 390, 397, 403, 406, 417, 424, 437, 438, 439, 447, 449, 450, 451, 452, 453, 456, 457], "Be": [1, 70, 74, 82, 98, 105, 157, 168, 170, 202, 214, 250, 259, 276, 277, 279, 290, 321, 333, 361, 421, 423, 425, 426, 443], "sure": [1, 14, 16, 23, 44, 50, 61, 62, 70, 73, 74, 76, 77, 82, 83, 84, 88, 90, 93, 98, 99, 102, 114, 145, 148, 157, 165, 175, 202, 214, 216, 224, 238, 254, 269, 276, 277, 279, 311, 320, 321, 338, 340, 343, 347, 372, 376, 377, 388, 396, 403, 415, 424, 426, 429, 434, 435, 436, 439, 440, 442, 443, 445, 450, 451, 452], "extens": [1, 3, 5, 7, 10, 11, 13, 23, 27, 31, 33, 34, 41, 44, 55, 59, 60, 61, 64, 66, 70, 76, 78, 80, 83, 84, 85, 88, 90, 92, 94, 101, 102, 109, 112, 133, 136, 157, 165, 166, 170, 172, 173, 178, 179, 182, 183, 189, 192, 197, 207, 209, 216, 224, 225, 230, 231, 234, 237, 238, 239, 242, 243, 244, 246, 250, 257, 259, 260, 263, 267, 273, 276, 277, 278, 279, 280, 282, 287, 290, 294, 296, 299, 300, 301, 312, 313, 314, 315, 317, 318, 320, 321, 324, 331, 333, 334, 337, 340, 343, 346, 347, 359, 361, 362, 363, 365, 378, 381, 385, 386, 389, 390, 394, 396, 397, 401, 403, 405, 407, 408, 413, 414, 415, 416, 420, 425, 426, 430, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 455, 456, 457, 458], "modul": [1, 3, 5, 7, 11, 16, 17, 20, 23, 24, 27, 31, 32, 33, 34, 40, 41, 56, 57, 59, 61, 63, 64, 66, 69, 70, 72, 73, 74, 75, 76, 78, 84, 85, 86, 87, 88, 92, 94, 95, 100, 101, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 123, 125, 128, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 268, 270, 271, 273, 275, 276, 277, 278, 280, 281, 283, 284, 286, 287, 289, 291, 292, 293, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 317, 319, 321, 322, 323, 325, 326, 327, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 364, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 399, 400, 401, 402, 404, 405, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 435, 445], "were": [1, 5, 7, 9, 10, 16, 17, 18, 23, 26, 32, 34, 56, 59, 61, 64, 71, 73, 74, 76, 81, 85, 88, 91, 93, 98, 99, 102, 103, 108, 114, 115, 116, 119, 120, 127, 128, 133, 134, 135, 137, 139, 142, 148, 150, 156, 157, 159, 166, 170, 172, 175, 177, 179, 180, 182, 185, 188, 189, 190, 192, 194, 196, 197, 202, 205, 212, 214, 216, 217, 221, 224, 225, 229, 231, 236, 238, 239, 243, 250, 255, 256, 262, 263, 265, 269, 273, 277, 282, 290, 296, 298, 301, 312, 315, 317, 318, 319, 320, 323, 324, 325, 327, 328, 331, 335, 337, 340, 347, 353, 357, 358, 359, 361, 363, 365, 366, 367, 371, 372, 376, 383, 387, 388, 398, 402, 403, 404, 405, 407, 409, 410, 411, 415, 416, 418, 419, 422, 425, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "hardwar": [1, 32, 76, 105, 125, 166, 175, 245, 277, 304, 318, 328, 344, 374, 381, 419, 444, 454], "softwar": [1, 32, 66, 67, 75, 81, 83, 84, 85, 93, 98, 99, 105, 107, 148, 166, 176, 182, 183, 199, 201, 217, 224, 234, 235, 236, 242, 254, 255, 277, 289, 300, 321, 344, 361, 375, 381, 383, 394, 414, 426, 434, 435, 436, 437, 438, 440, 441, 443, 444, 450], "platform": [1, 5, 9, 18, 25, 32, 33, 34, 49, 57, 59, 62, 63, 66, 70, 71, 73, 74, 76, 78, 79, 82, 83, 88, 99, 103, 110, 112, 115, 117, 120, 127, 143, 146, 148, 153, 156, 164, 165, 172, 175, 178, 182, 197, 199, 201, 202, 204, 212, 214, 218, 222, 224, 231, 234, 236, 237, 238, 239, 242, 244, 246, 254, 257, 259, 262, 265, 268, 269, 270, 276, 277, 278, 279, 287, 289, 290, 291, 292, 304, 305, 308, 310, 311, 315, 317, 318, 319, 320, 321, 322, 327, 328, 331, 333, 334, 335, 337, 338, 340, 343, 344, 345, 346, 347, 355, 365, 372, 374, 375, 379, 380, 382, 383, 394, 395, 400, 405, 410, 413, 419, 420, 421, 425, 430, 431, 433, 434, 437, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458], "version": [1, 5, 6, 7, 9, 10, 11, 13, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 71, 72, 73, 74, 75, 76, 77, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95, 98, 99, 102, 103, 105, 106, 110, 111, 114, 115, 116, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 142, 143, 144, 147, 148, 150, 151, 153, 156, 157, 158, 159, 160, 161, 164, 165, 166, 170, 172, 173, 175, 177, 179, 180, 182, 183, 185, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 210, 212, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 240, 241, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 265, 268, 269, 270, 272, 275, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 300, 301, 302, 303, 304, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 327, 328, 330, 331, 333, 334, 335, 338, 339, 340, 342, 343, 344, 345, 347, 350, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 370, 371, 372, 373, 374, 375, 377, 378, 379, 381, 383, 385, 386, 387, 388, 389, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 410, 411, 419, 422, 423, 425, 427, 428, 430, 431, 434, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 452, 453, 454, 455, 456, 457, 458, 460], "appropri": [1, 5, 9, 15, 18, 23, 24, 30, 40, 41, 47, 52, 59, 61, 62, 69, 71, 73, 74, 76, 79, 86, 88, 90, 92, 93, 98, 99, 101, 102, 103, 106, 107, 111, 114, 115, 120, 130, 131, 133, 140, 147, 148, 154, 158, 166, 172, 173, 175, 182, 184, 185, 187, 190, 191, 194, 195, 196, 197, 200, 212, 214, 215, 219, 224, 225, 226, 231, 232, 234, 237, 238, 246, 247, 254, 255, 256, 257, 259, 262, 269, 273, 276, 277, 279, 282, 289, 290, 296, 298, 301, 306, 310, 315, 317, 318, 319, 321, 323, 324, 325, 327, 328, 331, 337, 338, 343, 344, 358, 361, 362, 363, 366, 370, 371, 372, 375, 378, 379, 385, 386, 388, 390, 396, 397, 401, 404, 405, 407, 411, 417, 427, 430, 435, 436, 437, 438, 439, 440, 441, 443, 446, 447, 449, 451, 452, 453, 454, 455, 456, 457], "each": [1, 5, 7, 10, 12, 13, 22, 23, 28, 30, 32, 33, 34, 36, 39, 41, 44, 55, 57, 59, 61, 71, 73, 74, 75, 76, 77, 78, 82, 84, 85, 87, 88, 90, 91, 92, 93, 95, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 114, 116, 120, 126, 127, 128, 132, 133, 136, 140, 142, 143, 144, 145, 148, 149, 150, 153, 156, 157, 159, 164, 165, 166, 168, 170, 172, 173, 175, 179, 180, 182, 184, 185, 186, 191, 192, 193, 194, 197, 200, 201, 202, 203, 205, 207, 212, 214, 215, 216, 217, 219, 221, 224, 225, 231, 232, 233, 234, 236, 237, 238, 239, 243, 246, 247, 249, 250, 254, 255, 256, 257, 258, 259, 261, 262, 263, 269, 270, 276, 277, 278, 279, 280, 282, 283, 284, 287, 289, 290, 291, 294, 295, 296, 298, 300, 301, 302, 303, 304, 307, 308, 311, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 331, 332, 333, 334, 335, 337, 339, 340, 342, 343, 345, 347, 350, 353, 355, 357, 358, 361, 362, 363, 364, 365, 366, 367, 371, 372, 375, 376, 378, 381, 383, 384, 385, 386, 388, 390, 392, 394, 395, 397, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 415, 417, 418, 419, 421, 424, 425, 426, 430, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457, 458], "review": [1, 55, 106, 136, 159, 224, 320, 440, 445, 447, 451, 455, 457], "who": [1, 11, 31, 71, 78, 81, 96, 98, 99, 104, 105, 120, 153, 217, 219, 237, 255, 261, 277, 283, 304, 308, 321, 325, 337, 361, 386, 396, 398, 400, 401, 421, 436, 437, 439, 440, 441, 442, 444, 448, 452, 455, 457, 458], "correct": [1, 7, 32, 61, 62, 66, 69, 71, 75, 83, 88, 92, 93, 96, 105, 106, 109, 127, 159, 165, 176, 177, 180, 182, 185, 186, 188, 197, 200, 205, 229, 232, 236, 237, 242, 262, 265, 269, 273, 276, 277, 282, 296, 313, 314, 318, 321, 323, 324, 325, 327, 328, 331, 344, 361, 363, 365, 366, 367, 372, 375, 377, 383, 390, 396, 399, 400, 403, 405, 415, 416, 418, 419, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 453, 455, 456, 457, 458], "receiv": [1, 5, 16, 23, 32, 34, 44, 47, 65, 70, 71, 74, 78, 82, 88, 93, 98, 101, 103, 106, 109, 110, 114, 118, 120, 124, 126, 127, 128, 130, 132, 145, 148, 157, 165, 179, 180, 202, 212, 214, 224, 229, 231, 232, 233, 234, 236, 237, 247, 255, 256, 257, 261, 262, 268, 269, 282, 287, 291, 296, 298, 300, 304, 311, 314, 315, 317, 318, 319, 321, 323, 328, 332, 343, 353, 358, 363, 365, 372, 376, 378, 383, 385, 386, 388, 389, 390, 395, 401, 402, 404, 405, 416, 426, 437, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457], "updat": [1, 22, 32, 33, 41, 44, 50, 57, 61, 73, 74, 78, 82, 83, 84, 88, 90, 91, 93, 99, 105, 111, 114, 120, 124, 127, 129, 134, 150, 151, 153, 159, 166, 168, 172, 178, 180, 182, 185, 194, 196, 202, 214, 215, 224, 225, 226, 233, 236, 237, 238, 243, 246, 253, 259, 265, 269, 275, 276, 277, 279, 282, 284, 288, 300, 306, 312, 318, 320, 321, 324, 328, 334, 337, 344, 347, 353, 357, 361, 362, 366, 371, 372, 375, 377, 383, 388, 396, 403, 407, 411, 415, 426, 430, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457], "action": [1, 32, 41, 53, 71, 73, 74, 87, 90, 102, 110, 116, 137, 145, 150, 159, 164, 166, 179, 189, 204, 217, 225, 231, 237, 269, 277, 280, 290, 291, 307, 310, 315, 319, 320, 324, 331, 337, 338, 339, 343, 353, 361, 365, 366, 372, 375, 376, 383, 399, 401, 403, 416, 430, 436, 437, 438, 440, 441, 442, 443, 444, 446, 447, 451, 453, 458], "taken": [1, 5, 32, 33, 41, 44, 53, 61, 64, 71, 73, 85, 93, 99, 114, 137, 150, 153, 157, 172, 175, 180, 182, 185, 191, 194, 195, 200, 205, 214, 216, 219, 237, 249, 254, 256, 257, 263, 265, 269, 277, 278, 290, 293, 296, 304, 308, 313, 320, 321, 323, 324, 327, 332, 337, 338, 340, 342, 343, 345, 358, 359, 372, 376, 402, 403, 407, 411, 415, 425, 437, 439, 440, 442, 448, 449, 450, 451, 452, 453, 457], "effect": [1, 9, 11, 14, 22, 23, 27, 30, 32, 33, 44, 50, 56, 61, 62, 71, 73, 76, 82, 83, 85, 86, 90, 91, 93, 96, 98, 99, 101, 102, 103, 104, 106, 107, 108, 110, 114, 115, 116, 120, 126, 134, 137, 140, 149, 156, 157, 159, 165, 166, 170, 172, 175, 180, 182, 192, 197, 199, 202, 204, 207, 214, 215, 216, 220, 225, 232, 236, 238, 246, 249, 251, 254, 255, 256, 257, 269, 276, 277, 279, 280, 284, 290, 293, 296, 300, 301, 304, 305, 306, 307, 310, 312, 313, 314, 316, 320, 321, 322, 323, 324, 325, 328, 331, 337, 338, 340, 342, 343, 344, 353, 359, 361, 362, 363, 365, 366, 376, 381, 387, 395, 396, 397, 400, 402, 403, 405, 407, 410, 411, 415, 416, 417, 420, 425, 430, 431, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458], "articl": [1, 93, 105, 215, 224, 249, 259, 321, 361, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "goe": [1, 34, 75, 85, 87, 88, 91, 97, 102, 114, 116, 124, 127, 128, 157, 159, 166, 167, 182, 219, 232, 236, 256, 262, 269, 276, 296, 298, 323, 331, 358, 363, 402, 416, 419, 425, 439, 447, 451, 452], "some": [1, 2, 5, 7, 10, 21, 23, 28, 32, 33, 34, 41, 50, 55, 56, 57, 58, 59, 61, 62, 70, 71, 72, 73, 74, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 114, 115, 116, 120, 124, 125, 126, 127, 131, 132, 133, 138, 142, 144, 145, 147, 148, 150, 151, 153, 154, 156, 157, 158, 159, 164, 165, 166, 169, 170, 171, 172, 173, 175, 177, 179, 180, 182, 183, 184, 185, 187, 188, 192, 193, 194, 195, 196, 197, 198, 202, 204, 205, 207, 208, 210, 214, 215, 216, 219, 223, 224, 225, 228, 229, 232, 233, 236, 237, 238, 239, 242, 243, 245, 246, 247, 248, 249, 250, 254, 255, 256, 257, 258, 259, 261, 262, 263, 265, 268, 269, 270, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 288, 289, 290, 293, 296, 300, 301, 304, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 331, 332, 333, 334, 335, 337, 338, 340, 342, 343, 344, 347, 353, 354, 358, 359, 361, 362, 363, 365, 366, 367, 368, 371, 372, 374, 375, 376, 378, 379, 383, 384, 385, 386, 387, 388, 389, 390, 391, 394, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458], "about": [1, 5, 7, 10, 13, 14, 22, 23, 25, 27, 28, 34, 41, 49, 55, 61, 62, 64, 66, 69, 70, 71, 72, 73, 74, 75, 76, 79, 81, 84, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 109, 114, 116, 120, 122, 124, 127, 136, 137, 144, 145, 147, 148, 150, 151, 152, 159, 162, 164, 165, 167, 170, 172, 175, 179, 180, 183, 184, 186, 190, 192, 196, 198, 202, 205, 212, 214, 216, 224, 226, 232, 234, 236, 238, 243, 245, 246, 249, 253, 255, 256, 257, 258, 259, 262, 265, 266, 269, 273, 275, 276, 277, 279, 280, 282, 283, 285, 287, 289, 290, 294, 300, 301, 302, 303, 304, 310, 312, 314, 315, 317, 318, 320, 321, 322, 323, 324, 327, 328, 331, 332, 337, 340, 347, 353, 358, 361, 363, 365, 366, 367, 371, 372, 373, 374, 375, 376, 378, 381, 383, 384, 385, 387, 389, 390, 391, 397, 398, 399, 400, 402, 403, 404, 405, 407, 409, 411, 414, 416, 417, 418, 420, 421, 424, 425, 428, 429, 430, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "kind": [1, 16, 33, 34, 61, 62, 71, 74, 76, 77, 83, 85, 88, 96, 97, 99, 101, 103, 105, 114, 116, 127, 150, 165, 172, 182, 202, 214, 238, 239, 243, 245, 246, 269, 273, 277, 279, 282, 301, 310, 320, 321, 324, 326, 331, 343, 347, 363, 365, 372, 376, 384, 388, 389, 390, 401, 402, 403, 405, 406, 407, 415, 416, 418, 419, 431, 436, 439, 440, 445, 447, 449, 451, 452, 453, 454, 455, 456, 457], "why": [1, 34, 66, 71, 72, 73, 80, 88, 90, 91, 92, 93, 96, 98, 101, 105, 109, 111, 157, 165, 182, 190, 224, 238, 241, 249, 259, 262, 269, 276, 277, 282, 325, 365, 366, 367, 383, 403, 415, 419, 428, 436, 439, 442, 444, 449, 456], "write": [1, 5, 7, 18, 23, 24, 25, 28, 31, 32, 33, 34, 35, 40, 41, 42, 49, 56, 57, 61, 62, 66, 70, 72, 73, 74, 76, 78, 81, 84, 85, 86, 90, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 109, 111, 113, 114, 115, 117, 120, 124, 129, 130, 131, 133, 134, 136, 140, 142, 145, 147, 148, 150, 151, 153, 157, 159, 160, 165, 166, 169, 173, 176, 178, 179, 182, 185, 189, 190, 194, 197, 202, 204, 206, 207, 208, 211, 212, 214, 215, 216, 217, 219, 223, 225, 232, 234, 235, 236, 237, 238, 242, 243, 246, 247, 250, 255, 256, 257, 259, 261, 264, 265, 268, 269, 270, 272, 276, 277, 278, 279, 282, 286, 287, 289, 290, 291, 293, 299, 300, 302, 310, 311, 312, 313, 314, 315, 318, 319, 321, 322, 324, 327, 328, 331, 335, 338, 343, 346, 347, 349, 353, 355, 356, 357, 359, 361, 363, 365, 366, 367, 375, 376, 381, 383, 385, 386, 388, 390, 392, 394, 396, 397, 399, 401, 402, 403, 406, 407, 408, 411, 414, 415, 416, 418, 419, 420, 424, 425, 426, 427, 430, 436, 437, 438, 439, 440, 441, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "guidelin": [1, 34, 73, 86, 97, 236, 340, 437, 438, 442], "mozilla": [1, 106, 232, 321, 372, 379, 441], "practic": [1, 34, 41, 61, 66, 74, 78, 82, 85, 90, 93, 94, 96, 98, 99, 101, 106, 114, 166, 167, 175, 182, 183, 188, 212, 214, 224, 231, 234, 237, 239, 240, 243, 269, 270, 287, 300, 317, 320, 321, 324, 337, 344, 347, 363, 371, 386, 400, 403, 405, 415, 416, 418, 419, 421, 424, 425, 438, 439, 440, 445, 447, 448, 450, 451, 453, 456], "beyond": [1, 32, 78, 85, 87, 90, 96, 98, 102, 150, 172, 175, 186, 192, 243, 250, 256, 259, 268, 277, 301, 318, 320, 321, 324, 327, 363, 381, 402, 409, 416, 438, 449, 452], "them": [1, 5, 7, 15, 16, 22, 23, 24, 32, 33, 34, 44, 55, 57, 61, 62, 64, 69, 71, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 90, 92, 93, 95, 96, 97, 98, 102, 103, 104, 105, 106, 107, 109, 114, 115, 116, 119, 120, 122, 128, 133, 140, 145, 148, 149, 150, 151, 153, 156, 157, 158, 159, 160, 164, 165, 166, 170, 172, 173, 175, 177, 180, 182, 184, 185, 190, 195, 197, 203, 205, 214, 215, 216, 219, 220, 221, 224, 225, 229, 232, 233, 236, 237, 238, 239, 243, 245, 246, 254, 255, 256, 257, 259, 269, 270, 273, 275, 276, 277, 279, 282, 289, 290, 299, 301, 304, 306, 310, 312, 317, 318, 320, 321, 322, 323, 324, 327, 328, 331, 332, 337, 340, 342, 343, 345, 347, 353, 359, 361, 363, 365, 366, 367, 372, 376, 377, 381, 384, 385, 386, 387, 388, 397, 402, 403, 405, 406, 407, 409, 411, 416, 417, 418, 419, 421, 424, 425, 426, 427, 429, 430, 431, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458], "more": [1, 5, 10, 11, 13, 17, 18, 22, 23, 24, 25, 27, 32, 33, 34, 41, 44, 47, 49, 54, 55, 56, 58, 59, 61, 62, 63, 64, 66, 69, 70, 71, 72, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 91, 92, 93, 94, 95, 97, 98, 101, 103, 104, 105, 106, 107, 109, 110, 111, 114, 115, 116, 117, 119, 120, 123, 124, 127, 128, 131, 132, 133, 134, 136, 137, 139, 140, 142, 143, 145, 147, 148, 150, 151, 152, 153, 156, 157, 159, 160, 161, 162, 164, 165, 166, 170, 172, 173, 175, 177, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 194, 195, 196, 197, 199, 200, 202, 204, 207, 209, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 229, 231, 232, 234, 236, 237, 238, 239, 240, 243, 245, 246, 247, 248, 249, 250, 255, 256, 257, 258, 259, 262, 263, 265, 269, 270, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 287, 289, 290, 292, 293, 294, 296, 298, 299, 300, 301, 303, 304, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 330, 331, 332, 333, 334, 335, 337, 339, 340, 342, 343, 344, 345, 347, 352, 353, 354, 358, 359, 363, 365, 366, 371, 372, 373, 375, 376, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 390, 394, 395, 397, 399, 400, 401, 402, 403, 405, 406, 407, 409, 410, 411, 413, 414, 415, 418, 419, 420, 421, 423, 424, 426, 427, 428, 429, 430, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 450, 451, 452, 453, 454, 455, 456, 457, 458], "": [1, 3, 5, 7, 9, 10, 11, 14, 15, 18, 19, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 37, 41, 42, 44, 47, 49, 50, 51, 53, 55, 56, 57, 59, 60, 61, 62, 64, 66, 69, 70, 73, 74, 75, 76, 79, 81, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 109, 110, 111, 112, 114, 115, 116, 119, 120, 123, 124, 127, 129, 130, 131, 133, 134, 136, 137, 138, 139, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 172, 175, 176, 178, 179, 180, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 204, 205, 208, 209, 210, 212, 214, 215, 217, 219, 222, 223, 224, 225, 226, 227, 228, 229, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 261, 262, 264, 265, 266, 268, 269, 270, 272, 273, 275, 276, 277, 278, 279, 280, 282, 283, 284, 286, 287, 289, 291, 295, 296, 297, 299, 300, 301, 302, 304, 305, 306, 307, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 331, 332, 333, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 350, 351, 353, 355, 356, 357, 358, 359, 362, 363, 365, 366, 367, 368, 371, 372, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 388, 390, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 436], "question": [1, 56, 66, 71, 76, 77, 84, 85, 92, 93, 98, 99, 102, 105, 108, 116, 148, 182, 183, 224, 254, 255, 276, 287, 320, 347, 351, 373, 382, 383, 417, 426, 429, 437, 439, 440, 442, 456, 458], "core": [1, 23, 28, 32, 33, 57, 66, 71, 85, 98, 102, 112, 120, 153, 156, 157, 194, 224, 238, 239, 242, 245, 249, 254, 257, 275, 276, 277, 283, 290, 295, 300, 304, 315, 324, 340, 343, 347, 362, 366, 375, 385, 388, 400, 401, 403, 408, 411, 425, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 451, 452, 453, 454, 455, 457, 458], "mentorship": 1, "friendli": [1, 61, 90, 99, 114, 179, 183, 276, 318, 331, 365, 388, 400, 415, 437, 453, 456, 458], "place": [1, 13, 22, 23, 27, 32, 33, 34, 37, 41, 44, 46, 50, 52, 56, 58, 59, 61, 62, 71, 72, 73, 74, 75, 76, 77, 81, 82, 85, 88, 91, 92, 93, 95, 97, 98, 99, 104, 106, 114, 116, 128, 133, 148, 150, 157, 158, 159, 164, 165, 166, 170, 172, 175, 178, 179, 180, 182, 185, 194, 197, 200, 207, 214, 215, 216, 219, 221, 225, 232, 236, 238, 245, 246, 250, 255, 256, 257, 259, 262, 265, 269, 277, 279, 280, 282, 284, 290, 293, 296, 298, 300, 301, 303, 306, 319, 320, 321, 324, 325, 328, 334, 342, 347, 353, 357, 361, 362, 363, 365, 366, 367, 372, 375, 383, 396, 397, 401, 402, 403, 405, 407, 411, 415, 416, 417, 421, 423, 424, 425, 427, 428, 430, 434, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 451, 452, 454, 455, 456, 457], "answer": [1, 76, 83, 87, 91, 92, 107, 127, 144, 182, 215, 224, 256, 259, 290, 325, 344, 373, 415, 417, 419, 421, 426, 429, 437, 441, 445], "all": [1, 2, 4, 5, 7, 9, 14, 17, 22, 23, 25, 28, 30, 32, 33, 34, 37, 38, 41, 44, 46, 50, 53, 55, 56, 57, 58, 59, 61, 62, 65, 67, 70, 71, 73, 74, 75, 78, 82, 84, 85, 86, 87, 88, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 124, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 164, 165, 166, 167, 170, 172, 173, 175, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 209, 210, 211, 212, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 265, 270, 272, 273, 275, 277, 278, 279, 280, 282, 283, 284, 285, 287, 290, 291, 292, 293, 294, 295, 296, 298, 300, 304, 306, 307, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 347, 353, 355, 357, 358, 361, 362, 363, 364, 365, 366, 371, 372, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 430, 431, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 456, 457, 458, 460], "pertain": [1, 32, 34, 61, 71, 277, 331, 401, 445], "function": [2, 6, 9, 10, 11, 12, 13, 15, 17, 18, 19, 20, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 63, 64, 65, 66, 69, 70, 72, 73, 74, 75, 78, 79, 82, 84, 85, 86, 87, 90, 94, 95, 96, 98, 99, 100, 101, 105, 106, 108, 109, 110, 111, 112, 118, 119, 120, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 145, 147, 148, 149, 151, 152, 157, 158, 160, 161, 164, 167, 171, 172, 173, 175, 177, 178, 179, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 212, 216, 217, 218, 219, 220, 223, 224, 225, 226, 227, 231, 232, 234, 236, 237, 240, 242, 245, 246, 250, 253, 254, 257, 258, 261, 263, 265, 269, 273, 274, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 288, 289, 290, 291, 293, 295, 296, 297, 298, 299, 302, 303, 304, 306, 307, 310, 312, 313, 314, 315, 316, 319, 322, 326, 330, 335, 336, 337, 339, 340, 341, 342, 343, 345, 347, 349, 354, 355, 356, 357, 358, 364, 366, 368, 370, 371, 372, 374, 375, 377, 378, 379, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 395, 396, 397, 399, 404, 406, 407, 408, 410, 411, 412, 414, 415, 417, 418, 419, 420, 421, 422, 424, 426, 427, 429, 430, 431, 434, 436, 439, 440, 444, 446, 447, 449, 450, 451, 453, 457, 458], "chapter": [2, 16, 23, 34, 41, 48, 63, 64, 70, 71, 73, 74, 75, 76, 82, 89, 93, 112, 113, 138, 154, 163, 169, 171, 176, 206, 208, 211, 213, 235, 236, 244, 245, 248, 264, 267, 271, 274, 281, 297, 329, 331, 341, 345, 368, 380, 405, 409, 410, 412, 414, 416, 417, 421], "interact": [2, 23, 32, 33, 34, 41, 57, 61, 64, 66, 70, 77, 78, 82, 83, 84, 85, 91, 99, 102, 109, 110, 114, 116, 120, 130, 137, 143, 145, 156, 158, 166, 169, 175, 176, 180, 183, 196, 202, 203, 207, 214, 232, 236, 242, 243, 245, 246, 269, 270, 276, 277, 278, 280, 289, 290, 295, 297, 302, 305, 316, 321, 328, 331, 333, 337, 347, 353, 358, 361, 365, 372, 376, 388, 395, 397, 403, 406, 407, 409, 410, 411, 414, 415, 416, 420, 424, 425, 426, 430, 436, 439, 440, 441, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "python": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 69, 73, 74, 75, 85, 87, 92, 95, 97, 98, 99, 102, 103, 104, 106, 108, 110, 111, 112, 114, 115, 116, 117, 119, 120, 122, 126, 129, 130, 133, 134, 137, 138, 141, 142, 143, 144, 146, 147, 150, 156, 157, 158, 159, 161, 164, 166, 168, 170, 171, 172, 173, 174, 175, 176, 179, 181, 184, 185, 187, 188, 191, 193, 194, 196, 197, 198, 199, 200, 202, 204, 208, 210, 212, 214, 215, 216, 219, 220, 223, 224, 225, 226, 229, 231, 232, 234, 236, 237, 238, 239, 240, 243, 244, 245, 246, 247, 249, 250, 253, 256, 257, 259, 260, 262, 265, 266, 267, 268, 269, 270, 273, 275, 276, 278, 279, 281, 283, 284, 285, 287, 288, 289, 295, 296, 300, 301, 302, 303, 305, 309, 310, 313, 314, 316, 317, 318, 319, 321, 323, 324, 325, 327, 328, 330, 331, 332, 335, 336, 338, 341, 343, 344, 346, 353, 356, 358, 359, 362, 363, 365, 366, 367, 371, 372, 374, 375, 376, 377, 378, 379, 381, 383, 384, 385, 386, 388, 389, 390, 391, 394, 395, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 414, 416, 417, 418, 419, 421, 422, 426, 427, 428, 429, 430, 432], "regardless": [2, 9, 10, 24, 32, 33, 34, 40, 57, 62, 76, 92, 109, 114, 133, 156, 159, 164, 166, 172, 175, 197, 200, 209, 214, 236, 238, 245, 246, 249, 250, 279, 284, 296, 315, 316, 317, 318, 320, 321, 324, 325, 327, 328, 331, 332, 338, 353, 361, 365, 366, 367, 375, 376, 378, 379, 387, 400, 405, 407, 410, 418, 430, 436, 449, 451, 452, 453, 454, 456], "type": [2, 3, 5, 6, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57, 58, 65, 66, 71, 72, 75, 77, 78, 82, 83, 84, 85, 86, 87, 88, 90, 91, 96, 98, 99, 103, 106, 110, 111, 115, 117, 120, 121, 133, 135, 137, 138, 143, 145, 148, 150, 151, 157, 158, 159, 161, 162, 164, 166, 167, 173, 175, 176, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 201, 202, 205, 210, 212, 214, 215, 216, 219, 224, 225, 226, 229, 231, 232, 233, 234, 236, 237, 238, 239, 242, 245, 246, 249, 250, 254, 255, 256, 257, 258, 261, 262, 265, 266, 268, 269, 270, 271, 274, 275, 277, 278, 279, 280, 281, 285, 286, 288, 289, 290, 295, 296, 298, 300, 301, 302, 303, 306, 307, 310, 311, 312, 313, 314, 315, 318, 319, 321, 322, 323, 325, 327, 328, 330, 331, 337, 338, 340, 341, 343, 344, 353, 354, 355, 356, 358, 359, 361, 365, 366, 367, 371, 372, 375, 376, 377, 378, 379, 382, 384, 386, 387, 388, 390, 391, 394, 395, 397, 399, 400, 401, 404, 405, 406, 407, 408, 410, 412, 413, 414, 415, 416, 418, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 436, 437, 438, 444, 445, 446, 451], "wide": [2, 33, 57, 62, 72, 76, 78, 88, 90, 93, 97, 98, 101, 105, 107, 110, 114, 124, 126, 129, 143, 145, 157, 165, 166, 172, 175, 182, 183, 232, 236, 242, 243, 245, 254, 259, 268, 277, 282, 284, 287, 297, 312, 321, 323, 324, 327, 328, 337, 341, 343, 344, 385, 397, 400, 401, 421, 431, 436, 439, 442, 443, 444, 448, 449, 451, 452, 453], "class": [2, 10, 22, 28, 32, 39, 43, 44, 47, 50, 51, 52, 56, 59, 60, 61, 62, 65, 66, 71, 73, 74, 78, 82, 84, 85, 86, 90, 93, 96, 98, 101, 102, 103, 104, 105, 106, 108, 115, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 137, 138, 139, 140, 141, 142, 143, 145, 149, 150, 154, 157, 159, 160, 161, 162, 164, 165, 166, 167, 169, 171, 172, 173, 175, 178, 179, 180, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 194, 195, 196, 197, 200, 207, 208, 210, 212, 213, 214, 215, 216, 221, 223, 225, 229, 230, 231, 232, 233, 234, 236, 237, 239, 242, 244, 247, 249, 250, 254, 255, 256, 257, 258, 259, 260, 263, 265, 266, 267, 270, 271, 272, 274, 276, 277, 279, 280, 283, 284, 286, 287, 289, 293, 295, 297, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 312, 313, 315, 317, 318, 319, 320, 321, 323, 325, 328, 330, 331, 337, 338, 340, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 357, 358, 359, 364, 371, 373, 374, 375, 376, 377, 378, 379, 381, 384, 385, 386, 387, 388, 389, 391, 392, 394, 395, 396, 397, 398, 404, 405, 406, 407, 409, 411, 414, 416, 417, 418, 420, 421, 425, 426, 427, 430, 431, 436, 437, 438, 440, 441, 444, 445, 446, 449, 450, 451, 453, 454, 456, 457, 458], "e": [2, 3, 4, 5, 7, 9, 13, 17, 18, 22, 23, 27, 28, 32, 33, 34, 44, 47, 50, 55, 56, 57, 58, 59, 61, 62, 64, 69, 78, 82, 83, 85, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 109, 110, 114, 116, 119, 120, 123, 125, 126, 127, 130, 132, 133, 136, 142, 143, 144, 145, 148, 150, 151, 153, 156, 157, 158, 159, 160, 164, 165, 166, 170, 172, 175, 179, 180, 182, 184, 185, 188, 189, 191, 194, 195, 198, 200, 202, 203, 204, 205, 206, 207, 210, 212, 214, 215, 216, 217, 219, 220, 223, 224, 226, 227, 228, 229, 230, 231, 233, 234, 236, 237, 238, 240, 241, 243, 246, 247, 248, 249, 250, 254, 255, 256, 257, 258, 259, 261, 262, 263, 269, 270, 275, 276, 277, 278, 279, 280, 282, 284, 285, 290, 293, 295, 301, 304, 306, 310, 311, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 331, 333, 334, 335, 337, 338, 340, 343, 344, 347, 350, 353, 355, 356, 361, 362, 363, 364, 365, 366, 372, 374, 375, 376, 378, 381, 383, 385, 386, 387, 388, 389, 394, 396, 397, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 415, 416, 417, 418, 423, 424, 425, 427, 430, 431, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "g": [2, 4, 5, 13, 17, 18, 22, 23, 27, 28, 32, 34, 44, 47, 50, 55, 56, 57, 59, 61, 64, 69, 70, 71, 78, 82, 83, 85, 87, 88, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 102, 105, 106, 110, 114, 116, 119, 120, 123, 125, 126, 127, 130, 132, 136, 142, 143, 144, 145, 148, 150, 152, 157, 158, 159, 160, 165, 166, 167, 172, 175, 180, 182, 184, 185, 188, 191, 194, 195, 197, 198, 200, 202, 203, 204, 207, 210, 212, 214, 215, 216, 217, 219, 220, 223, 224, 226, 227, 228, 229, 234, 236, 237, 238, 240, 241, 243, 246, 247, 248, 249, 250, 254, 255, 256, 257, 258, 259, 261, 263, 269, 275, 276, 277, 278, 279, 280, 282, 285, 288, 290, 293, 295, 301, 304, 306, 310, 311, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 331, 334, 337, 338, 343, 344, 345, 347, 353, 355, 356, 357, 361, 363, 364, 365, 366, 372, 375, 376, 381, 383, 385, 386, 388, 394, 397, 400, 402, 403, 405, 407, 409, 410, 415, 416, 417, 423, 424, 425, 427, 430, 431, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "numer": [2, 4, 7, 40, 46, 61, 62, 66, 78, 83, 85, 88, 93, 98, 99, 102, 103, 105, 106, 137, 140, 144, 148, 164, 166, 171, 175, 180, 198, 200, 201, 202, 210, 214, 222, 223, 227, 229, 231, 234, 242, 249, 250, 254, 255, 262, 269, 275, 277, 284, 290, 292, 296, 300, 301, 307, 313, 317, 318, 320, 321, 323, 325, 331, 347, 353, 354, 361, 364, 365, 366, 370, 372, 388, 394, 397, 405, 417, 419, 421, 424, 426, 436, 438, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 457], "sequenc": [2, 5, 7, 14, 22, 31, 32, 34, 36, 38, 41, 47, 48, 54, 57, 62, 64, 66, 73, 76, 77, 82, 85, 88, 90, 92, 93, 97, 99, 102, 105, 114, 115, 116, 120, 130, 133, 136, 138, 147, 148, 149, 150, 151, 153, 164, 165, 166, 178, 179, 180, 182, 185, 191, 194, 195, 198, 201, 202, 207, 214, 219, 221, 225, 227, 232, 238, 243, 246, 247, 249, 250, 251, 254, 256, 258, 259, 262, 263, 269, 270, 275, 276, 277, 278, 279, 282, 283, 284, 289, 294, 296, 301, 303, 307, 308, 314, 318, 320, 321, 323, 325, 337, 340, 341, 344, 345, 347, 353, 355, 358, 359, 361, 363, 364, 365, 366, 367, 371, 372, 374, 376, 378, 381, 385, 388, 389, 394, 399, 400, 405, 409, 411, 415, 416, 424, 427, 437, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457], "when": [2, 5, 7, 9, 10, 11, 12, 13, 14, 15, 18, 22, 23, 27, 28, 30, 32, 33, 34, 35, 36, 38, 39, 41, 43, 44, 46, 47, 48, 50, 52, 55, 56, 57, 59, 61, 62, 64, 65, 69, 70, 71, 73, 74, 75, 77, 78, 79, 82, 84, 85, 86, 87, 88, 90, 91, 93, 95, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 140, 142, 143, 144, 145, 147, 148, 150, 156, 157, 158, 159, 160, 162, 164, 165, 166, 167, 170, 172, 173, 175, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 207, 210, 212, 214, 215, 216, 217, 218, 219, 221, 223, 224, 225, 226, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 249, 250, 251, 254, 255, 256, 257, 258, 259, 262, 263, 265, 269, 270, 272, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 290, 291, 293, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 331, 332, 333, 334, 335, 337, 338, 339, 340, 343, 344, 345, 347, 349, 350, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 365, 366, 367, 370, 371, 372, 374, 375, 376, 377, 378, 379, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 407, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 421, 423, 424, 425, 426, 427, 428, 430, 431, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "us": [2, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 79, 81, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 97, 100, 104, 105, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 136, 137, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 156, 157, 158, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 209, 210, 212, 214, 215, 216, 217, 218, 219, 220, 221, 223, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 330, 331, 333, 335, 336, 337, 338, 339, 342, 344, 345, 346, 347, 350, 351, 352, 355, 356, 357, 358, 359, 362, 363, 364, 366, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 402, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 425, 426, 427, 428, 429, 431, 433, 437, 438, 439, 440, 441, 444, 445, 446, 447, 450, 451, 453, 454, 455, 456, 458], "thei": [2, 5, 7, 8, 10, 18, 21, 23, 24, 28, 29, 32, 33, 34, 41, 44, 52, 53, 55, 56, 57, 59, 61, 62, 64, 71, 72, 73, 74, 76, 78, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 114, 116, 119, 120, 123, 127, 128, 129, 132, 133, 134, 137, 140, 143, 144, 145, 148, 150, 151, 153, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 172, 173, 175, 179, 180, 181, 182, 183, 184, 185, 186, 187, 191, 194, 196, 197, 198, 200, 202, 204, 205, 207, 214, 215, 216, 217, 219, 220, 221, 222, 224, 225, 229, 232, 236, 237, 238, 243, 244, 246, 247, 249, 250, 255, 256, 257, 258, 259, 262, 263, 264, 268, 269, 270, 275, 276, 277, 278, 279, 282, 284, 285, 286, 289, 290, 291, 294, 296, 298, 300, 301, 304, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 337, 338, 340, 342, 343, 344, 345, 347, 353, 354, 357, 358, 361, 363, 364, 365, 366, 367, 370, 371, 372, 375, 376, 378, 381, 383, 384, 385, 386, 388, 389, 390, 391, 392, 394, 397, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 415, 416, 417, 418, 419, 421, 424, 425, 426, 427, 430, 431, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460], "appli": [2, 6, 13, 18, 33, 34, 50, 61, 62, 71, 73, 76, 78, 79, 85, 86, 92, 93, 98, 99, 111, 114, 115, 116, 133, 140, 144, 148, 150, 159, 164, 165, 166, 167, 170, 172, 175, 179, 180, 182, 187, 194, 197, 198, 202, 209, 212, 214, 215, 219, 224, 232, 233, 234, 236, 243, 247, 249, 255, 256, 258, 259, 263, 269, 276, 277, 280, 282, 290, 296, 301, 303, 304, 306, 310, 314, 318, 321, 323, 324, 325, 328, 331, 333, 337, 340, 343, 344, 345, 347, 353, 355, 359, 363, 364, 365, 366, 371, 373, 376, 384, 386, 388, 394, 397, 401, 402, 403, 404, 405, 407, 411, 413, 415, 417, 421, 424, 425, 429, 430, 431, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458], "rais": [2, 5, 7, 9, 10, 13, 14, 18, 22, 24, 25, 26, 27, 28, 32, 33, 34, 35, 36, 38, 39, 44, 46, 47, 52, 53, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 71, 73, 74, 76, 84, 85, 86, 90, 91, 92, 93, 96, 99, 101, 103, 105, 106, 109, 110, 114, 115, 116, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 142, 143, 144, 147, 148, 149, 150, 153, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 170, 172, 173, 175, 180, 182, 183, 185, 186, 187, 188, 189, 191, 192, 194, 195, 197, 198, 199, 200, 202, 204, 207, 210, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 231, 232, 233, 234, 236, 237, 238, 240, 241, 242, 243, 244, 246, 247, 249, 250, 253, 254, 255, 256, 257, 258, 259, 261, 262, 265, 268, 269, 270, 272, 275, 277, 278, 279, 280, 282, 284, 285, 286, 287, 288, 289, 291, 292, 293, 296, 298, 300, 301, 304, 305, 307, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324, 325, 327, 328, 330, 331, 332, 334, 335, 336, 337, 338, 340, 343, 344, 347, 355, 356, 358, 359, 361, 362, 363, 364, 365, 366, 369, 371, 372, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 388, 389, 390, 391, 394, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 410, 413, 415, 416, 417, 421, 425, 427, 430, 431, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "except": [2, 5, 7, 9, 10, 11, 13, 14, 17, 18, 22, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 37, 38, 39, 40, 44, 46, 47, 49, 50, 52, 54, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 69, 70, 73, 74, 77, 78, 82, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 101, 102, 103, 105, 108, 109, 110, 115, 116, 117, 120, 123, 124, 127, 129, 130, 131, 132, 133, 134, 136, 137, 139, 142, 143, 144, 147, 148, 149, 150, 151, 158, 160, 161, 164, 165, 166, 167, 170, 172, 173, 175, 177, 179, 180, 183, 184, 185, 189, 190, 194, 195, 196, 197, 199, 201, 203, 204, 207, 212, 214, 215, 216, 217, 218, 223, 224, 226, 229, 231, 232, 233, 234, 236, 237, 238, 242, 243, 244, 245, 246, 249, 253, 254, 255, 256, 257, 258, 261, 262, 265, 266, 271, 272, 273, 277, 278, 280, 282, 284, 285, 286, 287, 288, 290, 293, 298, 299, 302, 304, 305, 307, 310, 311, 312, 313, 314, 316, 317, 319, 324, 325, 331, 332, 336, 337, 338, 339, 340, 342, 343, 344, 345, 347, 355, 356, 358, 359, 362, 363, 365, 366, 369, 371, 372, 375, 376, 377, 378, 379, 381, 383, 386, 389, 390, 391, 394, 395, 397, 398, 399, 401, 403, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 420, 421, 423, 425, 427, 430, 431, 436, 437, 438, 439, 440, 441, 446, 447, 449, 450, 451, 453, 454, 455, 456, 457, 458], "properli": [2, 23, 32, 33, 34, 44, 47, 57, 61, 71, 74, 76, 88, 99, 102, 103, 109, 120, 131, 159, 160, 179, 191, 192, 196, 198, 200, 202, 219, 238, 254, 261, 269, 277, 290, 296, 317, 321, 327, 328, 337, 338, 343, 347, 353, 363, 365, 366, 371, 372, 390, 399, 403, 421, 423, 436, 438, 439, 440, 444, 445, 452, 453, 455, 457], "initi": [2, 3, 5, 13, 18, 22, 23, 24, 27, 28, 30, 31, 34, 41, 47, 49, 56, 57, 58, 59, 61, 64, 66, 67, 69, 70, 74, 77, 83, 84, 88, 90, 91, 93, 97, 98, 99, 104, 105, 109, 110, 114, 115, 116, 120, 128, 129, 132, 133, 134, 135, 139, 145, 148, 150, 156, 157, 164, 165, 166, 170, 175, 178, 179, 180, 182, 184, 191, 192, 195, 202, 212, 214, 215, 216, 219, 221, 223, 224, 225, 226, 232, 236, 237, 238, 242, 246, 249, 250, 254, 255, 256, 257, 258, 259, 263, 265, 267, 269, 270, 272, 276, 277, 278, 282, 287, 290, 296, 300, 302, 303, 313, 316, 317, 318, 319, 320, 321, 324, 328, 331, 335, 338, 343, 344, 345, 347, 353, 361, 362, 363, 365, 372, 375, 376, 388, 394, 399, 400, 401, 402, 403, 406, 407, 411, 412, 415, 417, 418, 424, 425, 430, 436, 437, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 458], "pylist_new": [2, 34, 37, 55], "whose": [2, 5, 10, 23, 30, 34, 41, 44, 58, 59, 61, 71, 76, 83, 84, 85, 87, 88, 91, 99, 114, 115, 116, 150, 159, 164, 165, 166, 170, 172, 175, 182, 187, 189, 192, 194, 197, 200, 202, 204, 205, 210, 214, 215, 217, 222, 225, 231, 232, 233, 243, 246, 254, 255, 256, 257, 259, 261, 269, 273, 276, 277, 279, 280, 282, 289, 290, 292, 294, 298, 301, 304, 314, 315, 316, 318, 320, 323, 324, 325, 331, 337, 338, 340, 343, 344, 347, 353, 357, 358, 365, 366, 367, 372, 376, 378, 381, 388, 390, 402, 403, 405, 407, 410, 415, 417, 437, 438, 439, 441, 442, 443, 444, 449, 450, 452, 453, 454, 456, 457], "set": [2, 3, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 44, 47, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 70, 71, 73, 74, 75, 76, 77, 79, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 96, 97, 98, 99, 102, 103, 105, 106, 109, 110, 114, 116, 117, 119, 121, 123, 124, 127, 129, 130, 131, 132, 133, 137, 140, 142, 143, 144, 145, 147, 148, 150, 151, 153, 156, 157, 159, 160, 161, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 177, 178, 179, 180, 182, 183, 185, 186, 187, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 212, 214, 215, 216, 217, 218, 219, 221, 223, 224, 225, 229, 230, 231, 232, 233, 234, 237, 239, 242, 243, 246, 247, 248, 249, 250, 254, 255, 256, 257, 258, 259, 261, 262, 263, 265, 266, 268, 269, 270, 271, 275, 276, 277, 278, 279, 280, 282, 285, 287, 289, 290, 293, 295, 296, 298, 300, 301, 302, 303, 304, 305, 306, 310, 312, 313, 314, 316, 317, 318, 319, 320, 322, 323, 325, 326, 328, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 346, 352, 353, 354, 356, 357, 359, 360, 362, 363, 364, 365, 366, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 383, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 402, 404, 406, 407, 410, 411, 413, 415, 416, 421, 423, 425, 426, 427, 429, 430, 431, 434, 437, 438, 439, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "non": [2, 5, 7, 9, 10, 11, 12, 13, 18, 21, 22, 23, 25, 26, 28, 30, 33, 34, 35, 37, 38, 41, 44, 47, 56, 57, 58, 59, 61, 62, 65, 69, 71, 73, 74, 78, 82, 83, 85, 88, 90, 91, 92, 93, 95, 97, 98, 99, 105, 106, 110, 111, 114, 116, 119, 120, 126, 127, 133, 136, 137, 142, 145, 148, 156, 157, 159, 164, 165, 166, 167, 170, 172, 173, 175, 179, 180, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 212, 214, 215, 216, 217, 218, 219, 222, 223, 224, 225, 226, 231, 232, 234, 236, 237, 238, 240, 241, 245, 246, 247, 249, 253, 254, 255, 256, 257, 262, 263, 265, 269, 270, 272, 276, 277, 278, 279, 280, 282, 284, 285, 287, 288, 290, 293, 296, 298, 299, 300, 301, 302, 304, 308, 310, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 331, 334, 337, 340, 342, 343, 344, 354, 362, 363, 365, 366, 367, 370, 371, 372, 374, 375, 376, 377, 379, 390, 394, 397, 399, 400, 401, 402, 403, 404, 405, 407, 408, 410, 411, 412, 415, 416, 417, 418, 424, 425, 429, 430, 431, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458], "null": [2, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 70, 73, 74, 77, 91, 97, 99, 101, 105, 116, 164, 165, 180, 214, 216, 232, 250, 270, 277, 282, 300, 301, 318, 320, 321, 327, 328, 381, 385, 386, 397, 406, 410, 411, 437, 441, 444, 446, 447, 448, 449, 450, 453, 454, 455, 456, 457, 458], "valu": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 70, 73, 74, 76, 85, 86, 87, 90, 91, 96, 98, 99, 101, 102, 103, 104, 105, 106, 109, 110, 116, 120, 121, 123, 127, 131, 132, 133, 134, 135, 137, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 156, 158, 159, 160, 161, 164, 166, 167, 171, 172, 173, 177, 178, 179, 180, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 197, 198, 200, 201, 202, 204, 205, 207, 210, 212, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 242, 243, 245, 246, 247, 249, 254, 255, 256, 257, 258, 259, 261, 262, 263, 265, 266, 268, 269, 270, 272, 273, 275, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 298, 299, 301, 302, 303, 304, 306, 307, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 323, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 337, 338, 340, 342, 343, 344, 345, 347, 350, 353, 354, 355, 358, 359, 360, 361, 362, 363, 364, 365, 366, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 404, 406, 407, 410, 411, 415, 417, 418, 419, 421, 424, 425, 426, 427, 430, 431, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "yet": [2, 5, 13, 14, 23, 28, 30, 32, 33, 44, 61, 62, 71, 76, 77, 78, 82, 83, 84, 87, 88, 90, 92, 97, 101, 102, 107, 108, 118, 123, 127, 131, 133, 156, 159, 165, 166, 175, 185, 186, 194, 202, 216, 221, 225, 238, 245, 256, 257, 269, 277, 280, 290, 316, 317, 321, 324, 328, 343, 358, 363, 366, 385, 388, 399, 404, 406, 411, 414, 415, 421, 425, 437, 439, 440, 442, 444, 449, 450, 453, 455, 456, 458], "protocol": [2, 8, 9, 23, 28, 31, 53, 56, 59, 61, 64, 66, 77, 78, 82, 85, 88, 92, 93, 96, 99, 103, 105, 106, 111, 115, 117, 120, 123, 130, 131, 135, 138, 139, 148, 151, 159, 164, 165, 172, 173, 183, 192, 198, 201, 214, 224, 230, 232, 234, 238, 239, 242, 243, 246, 248, 250, 255, 256, 257, 259, 269, 277, 278, 282, 283, 310, 311, 312, 318, 319, 320, 324, 326, 327, 337, 340, 343, 347, 366, 367, 372, 381, 383, 391, 394, 395, 398, 402, 403, 405, 410, 415, 421, 426, 431, 437, 439, 440, 442, 444, 445, 446, 447, 448, 450, 451, 453, 456, 458], "call": [2, 3, 5, 7, 9, 11, 13, 14, 15, 17, 18, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 41, 43, 44, 46, 47, 49, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 70, 73, 74, 75, 79, 82, 84, 85, 86, 87, 90, 91, 92, 95, 96, 97, 98, 99, 102, 103, 104, 105, 106, 109, 110, 111, 114, 116, 118, 119, 120, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 140, 142, 145, 147, 148, 150, 151, 153, 156, 157, 158, 159, 160, 161, 164, 166, 168, 170, 172, 173, 175, 177, 178, 179, 180, 182, 184, 185, 186, 187, 188, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 205, 207, 212, 214, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 246, 247, 249, 250, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 265, 268, 269, 270, 273, 275, 277, 278, 279, 280, 282, 284, 287, 289, 290, 291, 292, 296, 298, 300, 301, 302, 303, 304, 305, 307, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 347, 348, 349, 353, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 368, 371, 372, 374, 375, 376, 377, 378, 379, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 399, 400, 402, 403, 404, 406, 407, 410, 411, 414, 415, 416, 417, 418, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 455, 456, 458], "number": [2, 3, 4, 7, 9, 10, 13, 16, 18, 20, 22, 23, 25, 26, 28, 30, 31, 32, 34, 38, 39, 40, 41, 48, 50, 52, 53, 56, 57, 58, 62, 64, 66, 70, 71, 73, 74, 75, 76, 77, 84, 85, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 107, 110, 111, 114, 115, 116, 118, 120, 121, 123, 126, 127, 128, 131, 132, 133, 137, 139, 142, 143, 145, 148, 150, 153, 156, 157, 158, 160, 163, 164, 165, 166, 172, 175, 177, 179, 180, 182, 184, 185, 188, 191, 192, 194, 197, 200, 201, 202, 203, 204, 205, 207, 212, 214, 215, 216, 219, 221, 223, 224, 225, 229, 231, 233, 234, 236, 237, 238, 239, 242, 243, 245, 246, 247, 249, 252, 254, 255, 257, 258, 259, 261, 263, 265, 269, 270, 272, 274, 275, 276, 278, 279, 280, 282, 283, 285, 286, 287, 289, 290, 294, 295, 296, 298, 301, 302, 303, 304, 306, 307, 310, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 330, 331, 332, 334, 337, 340, 342, 343, 344, 345, 347, 350, 353, 354, 355, 357, 358, 359, 361, 362, 363, 365, 366, 371, 372, 374, 376, 377, 378, 379, 381, 382, 383, 385, 388, 389, 391, 392, 394, 397, 400, 402, 405, 406, 407, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 421, 423, 425, 426, 427, 428, 429, 430, 431, 432, 434, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "map": [2, 22, 31, 32, 33, 41, 47, 48, 63, 64, 66, 73, 76, 77, 82, 83, 85, 88, 91, 92, 93, 99, 100, 105, 106, 111, 116, 136, 145, 148, 150, 151, 156, 159, 160, 164, 166, 170, 172, 173, 175, 179, 180, 182, 184, 185, 192, 194, 200, 201, 202, 205, 214, 215, 219, 225, 228, 231, 234, 236, 242, 243, 247, 248, 249, 255, 256, 257, 258, 259, 266, 269, 271, 272, 276, 277, 279, 281, 282, 290, 294, 296, 300, 301, 303, 304, 311, 318, 320, 321, 323, 325, 326, 327, 328, 331, 340, 343, 344, 345, 353, 354, 361, 362, 363, 364, 366, 371, 372, 378, 383, 386, 388, 390, 391, 405, 406, 407, 411, 415, 416, 417, 419, 425, 427, 430, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 453, 454, 455, 456, 458], "iter": [2, 13, 16, 22, 28, 29, 31, 32, 47, 52, 53, 61, 62, 65, 66, 73, 76, 85, 86, 91, 96, 102, 104, 111, 115, 116, 120, 127, 130, 133, 137, 142, 143, 148, 150, 151, 156, 157, 159, 160, 164, 165, 170, 180, 183, 184, 185, 186, 194, 200, 202, 208, 209, 213, 214, 215, 219, 220, 221, 223, 224, 225, 231, 232, 238, 239, 241, 242, 243, 246, 250, 254, 255, 258, 259, 262, 269, 271, 277, 279, 280, 282, 283, 286, 290, 300, 301, 310, 318, 320, 323, 325, 327, 331, 340, 355, 362, 363, 366, 371, 372, 375, 378, 383, 385, 388, 389, 390, 394, 400, 402, 406, 407, 411, 416, 417, 418, 425, 437, 438, 440, 442, 443, 444, 446, 447, 448, 449, 451, 452, 453, 455, 456, 457, 458], "buffer": [2, 8, 9, 18, 24, 31, 32, 33, 40, 41, 42, 48, 62, 64, 66, 70, 71, 73, 85, 88, 90, 98, 103, 114, 115, 120, 121, 124, 130, 131, 135, 139, 142, 147, 148, 151, 165, 166, 177, 201, 202, 203, 204, 214, 223, 224, 229, 231, 234, 257, 258, 261, 265, 268, 269, 270, 277, 279, 296, 304, 310, 313, 314, 315, 318, 321, 324, 327, 328, 331, 337, 338, 340, 343, 363, 365, 372, 383, 388, 389, 397, 399, 415, 430, 431, 439, 440, 441, 442, 444, 445, 447, 450, 451, 453, 454, 455, 456, 458], "pyobject": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 69, 70, 71, 73, 74, 75, 77, 88, 95, 97, 165, 301, 340, 439, 442, 443, 447, 448, 450, 456, 457], "_pyobject_new": 3, "pytypeobject": [3, 6, 8, 9, 12, 13, 15, 17, 19, 20, 21, 22, 25, 26, 27, 28, 29, 34, 36, 37, 38, 43, 44, 45, 47, 53, 54, 55, 56, 58, 59, 60, 62, 73, 74, 88, 97, 438, 448, 449, 454, 457, 458], "return": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 64, 65, 69, 70, 71, 73, 74, 77, 82, 84, 85, 86, 87, 90, 92, 93, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 114, 115, 116, 118, 119, 120, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 153, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 170, 172, 173, 175, 178, 179, 180, 182, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 207, 209, 210, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 265, 268, 269, 270, 272, 273, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 334, 335, 337, 338, 339, 340, 342, 343, 344, 345, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 410, 413, 415, 416, 417, 418, 421, 424, 425, 426, 427, 430, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "pyvarobject": [3, 28, 55, 56, 340, 448], "_pyobject_newvar": 3, "py_ssize_t": [3, 5, 7, 8, 9, 10, 13, 18, 22, 23, 28, 33, 34, 37, 38, 39, 40, 42, 44, 46, 47, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 70, 71, 73, 88, 97, 165, 331, 403, 442, 443, 448, 450, 457], "size": [3, 5, 7, 8, 9, 18, 28, 30, 33, 34, 38, 40, 41, 42, 47, 49, 52, 53, 56, 57, 58, 59, 61, 62, 71, 73, 74, 76, 84, 90, 91, 92, 95, 97, 98, 99, 103, 105, 110, 114, 115, 121, 124, 127, 128, 130, 131, 135, 137, 148, 150, 151, 153, 156, 164, 166, 175, 179, 180, 204, 205, 212, 214, 215, 225, 226, 231, 234, 236, 237, 238, 239, 246, 249, 250, 254, 257, 258, 265, 269, 270, 278, 282, 285, 287, 288, 290, 293, 296, 298, 300, 302, 303, 304, 317, 318, 319, 320, 322, 323, 324, 325, 328, 331, 337, 338, 339, 340, 342, 343, 347, 350, 353, 358, 361, 363, 365, 372, 385, 396, 397, 399, 403, 407, 421, 424, 425, 427, 431, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "pyobject_init": [3, 55, 457, 458], "op": [3, 10, 15, 27, 28, 32, 36, 38, 47, 61, 62, 73, 83, 98, 116, 132, 166, 180, 219, 257, 269, 277, 301, 318, 320, 321, 331, 343, 354, 355, 383, 440, 443, 447, 448, 449, 450, 456], "borrow": [3, 5, 12, 22, 23, 27, 30, 32, 34, 37, 43, 44, 50, 51, 52, 56, 57, 58, 61, 65, 71, 73, 76, 85, 93, 201, 416, 439, 440, 441, 450], "part": [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 18, 20, 21, 22, 23, 24, 25, 26, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 70, 71, 72, 73, 76, 78, 83, 85, 88, 90, 92, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 111, 116, 122, 136, 141, 144, 147, 148, 149, 151, 157, 159, 165, 166, 172, 175, 180, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 202, 214, 219, 224, 234, 236, 237, 238, 239, 245, 246, 247, 254, 255, 256, 257, 258, 262, 263, 268, 269, 277, 278, 282, 284, 289, 290, 296, 299, 300, 301, 305, 313, 316, 318, 319, 320, 321, 324, 325, 326, 331, 340, 343, 344, 346, 347, 358, 361, 362, 363, 365, 366, 367, 371, 374, 375, 378, 379, 385, 386, 388, 394, 399, 401, 402, 403, 404, 405, 407, 410, 411, 415, 416, 417, 418, 419, 420, 422, 424, 425, 428, 429, 430, 431, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458], "stabl": [3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 18, 21, 22, 23, 24, 25, 26, 28, 30, 32, 34, 35, 36, 37, 38, 39, 41, 42, 44, 46, 47, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 64, 65, 85, 104, 199, 214, 225, 240, 263, 276, 324, 331, 400, 440, 441, 444, 448, 449, 453, 454, 455, 457, 458], "abi": [3, 5, 6, 7, 8, 9, 10, 11, 14, 15, 18, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 44, 46, 47, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 95, 331, 431, 435, 444, 448, 449, 450, 453, 454, 456, 458], "newli": [3, 5, 34, 41, 57, 71, 83, 98, 133, 147, 151, 170, 180, 187, 214, 221, 232, 246, 269, 277, 284, 314, 316, 318, 338, 353, 361, 385, 402, 403, 415, 441, 443, 448, 449, 452, 455, 456], "indic": [3, 5, 7, 10, 30, 32, 34, 37, 40, 41, 47, 50, 52, 54, 56, 57, 59, 61, 62, 70, 71, 73, 74, 78, 82, 83, 85, 88, 95, 96, 98, 99, 102, 103, 104, 105, 106, 109, 111, 114, 116, 120, 128, 131, 133, 145, 147, 148, 156, 157, 158, 159, 164, 165, 166, 172, 175, 178, 180, 185, 191, 192, 194, 197, 198, 199, 202, 212, 214, 215, 217, 223, 224, 230, 231, 232, 234, 236, 237, 238, 239, 242, 243, 246, 249, 254, 255, 256, 258, 259, 261, 263, 265, 269, 276, 277, 280, 283, 285, 287, 289, 290, 293, 296, 298, 300, 301, 310, 311, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 331, 336, 337, 338, 339, 340, 343, 344, 347, 353, 354, 358, 363, 365, 366, 371, 372, 374, 375, 376, 381, 382, 383, 385, 388, 394, 397, 399, 401, 402, 403, 405, 406, 407, 410, 411, 415, 416, 418, 424, 425, 427, 430, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 453, 454, 455, 456, 457, 458], "particip": [3, 61, 73, 74, 172, 225, 232, 238, 255, 282, 301, 437, 439, 442, 444, 446], "cyclic": [3, 31, 44, 48, 61, 66, 83, 85, 221, 258, 276, 386, 399, 403, 451, 453], "garbag": [3, 31, 41, 44, 48, 50, 61, 62, 65, 66, 71, 73, 82, 83, 85, 93, 95, 99, 103, 119, 133, 149, 159, 160, 165, 168, 182, 202, 203, 242, 261, 269, 276, 277, 297, 318, 320, 331, 338, 340, 345, 365, 378, 386, 402, 403, 405, 427, 431, 439, 440, 441, 442, 443, 444, 446, 447, 449, 451, 452, 453, 455, 456, 457, 458], "detector": [3, 59, 71, 243, 431, 444], "ad": [3, 5, 13, 22, 23, 30, 32, 33, 34, 41, 44, 46, 55, 56, 57, 59, 61, 62, 64, 71, 73, 75, 76, 78, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 97, 98, 101, 102, 106, 107, 109, 110, 111, 115, 116, 120, 122, 123, 128, 129, 130, 133, 135, 136, 139, 140, 142, 143, 145, 147, 148, 150, 151, 153, 156, 157, 159, 164, 165, 166, 168, 170, 172, 173, 175, 179, 180, 182, 184, 185, 186, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 202, 203, 207, 212, 214, 215, 216, 219, 220, 221, 223, 224, 225, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 246, 247, 249, 250, 254, 255, 256, 257, 258, 259, 262, 263, 265, 269, 272, 277, 278, 279, 282, 284, 286, 287, 289, 290, 293, 295, 298, 300, 301, 303, 306, 307, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 327, 328, 330, 331, 332, 333, 335, 337, 338, 340, 342, 343, 344, 345, 347, 350, 353, 354, 355, 357, 358, 359, 361, 362, 363, 364, 365, 366, 371, 372, 375, 376, 377, 378, 379, 383, 385, 386, 388, 389, 391, 394, 395, 396, 397, 398, 399, 401, 402, 403, 405, 407, 410, 411, 416, 417, 418, 419, 421, 423, 424, 425, 430, 431, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 454, 456, 457, 458], "observ": [3, 13, 27, 83, 92, 95, 99, 172, 197, 300, 323, 328, 359, 361, 371, 411, 439, 448, 452], "other": [3, 7, 9, 10, 11, 13, 15, 18, 22, 23, 25, 27, 28, 32, 33, 34, 38, 39, 41, 42, 44, 47, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 70, 71, 73, 75, 78, 79, 84, 85, 86, 87, 88, 90, 91, 93, 95, 97, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 115, 116, 119, 120, 124, 126, 127, 131, 135, 137, 138, 139, 140, 143, 144, 148, 149, 150, 151, 152, 153, 157, 158, 159, 160, 161, 164, 165, 166, 168, 170, 172, 173, 175, 178, 179, 180, 182, 183, 184, 185, 186, 190, 191, 192, 194, 195, 196, 198, 199, 200, 202, 205, 212, 214, 215, 216, 219, 223, 224, 225, 226, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 243, 245, 246, 248, 249, 250, 252, 254, 255, 256, 257, 258, 259, 261, 262, 265, 267, 269, 270, 272, 273, 275, 277, 278, 279, 280, 281, 284, 285, 289, 290, 291, 292, 295, 296, 300, 301, 303, 306, 307, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 333, 335, 337, 338, 340, 341, 343, 344, 345, 346, 347, 353, 355, 357, 359, 361, 362, 364, 365, 366, 367, 371, 372, 374, 375, 376, 378, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 400, 401, 402, 403, 404, 405, 406, 407, 409, 411, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 435], "affect": [3, 32, 34, 37, 44, 58, 62, 71, 82, 91, 92, 93, 99, 102, 111, 115, 133, 137, 157, 166, 172, 175, 180, 182, 191, 194, 214, 219, 232, 236, 238, 246, 254, 257, 259, 265, 275, 277, 288, 289, 301, 302, 303, 304, 318, 320, 321, 323, 325, 328, 333, 335, 337, 340, 344, 345, 353, 361, 363, 365, 366, 367, 371, 376, 378, 381, 383, 385, 402, 403, 405, 407, 411, 413, 415, 419, 425, 428, 430, 431, 436, 437, 438, 439, 440, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "pyobject_initvar": [3, 55], "doe": [3, 5, 9, 10, 13, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 37, 41, 44, 47, 50, 52, 53, 55, 56, 57, 58, 59, 61, 62, 64, 65, 70, 71, 73, 74, 75, 82, 85, 87, 88, 90, 91, 92, 93, 96, 97, 98, 99, 101, 102, 103, 104, 106, 107, 109, 110, 111, 114, 116, 117, 120, 123, 125, 127, 133, 134, 136, 139, 142, 147, 148, 150, 151, 153, 156, 157, 159, 161, 164, 165, 166, 168, 170, 172, 173, 175, 177, 179, 180, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 194, 196, 197, 199, 200, 202, 204, 209, 210, 212, 214, 215, 216, 217, 218, 219, 222, 223, 224, 225, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 243, 245, 246, 247, 249, 250, 254, 255, 256, 257, 258, 259, 261, 263, 265, 269, 270, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 287, 288, 290, 291, 292, 293, 296, 300, 301, 304, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 330, 331, 332, 333, 335, 337, 338, 340, 342, 343, 344, 353, 355, 356, 357, 358, 359, 361, 362, 363, 365, 366, 367, 371, 372, 374, 375, 376, 377, 378, 379, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 410, 411, 412, 415, 416, 417, 418, 420, 423, 424, 425, 427, 430, 431, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "everyth": [3, 55, 61, 71, 74, 83, 84, 86, 87, 88, 90, 99, 101, 103, 106, 114, 161, 182, 197, 209, 214, 236, 256, 276, 277, 278, 279, 282, 301, 314, 315, 318, 347, 366, 376, 394, 409, 410, 418, 424, 443, 445, 447, 449, 452], "length": [3, 5, 7, 8, 9, 22, 23, 24, 33, 34, 37, 47, 52, 53, 54, 56, 57, 58, 61, 62, 71, 73, 76, 83, 85, 88, 90, 91, 92, 93, 95, 97, 99, 103, 105, 106, 114, 115, 116, 135, 136, 139, 143, 148, 150, 164, 165, 166, 173, 175, 179, 180, 184, 185, 190, 191, 194, 196, 197, 204, 214, 226, 231, 234, 237, 246, 247, 249, 250, 256, 257, 258, 259, 262, 265, 269, 270, 275, 276, 277, 290, 296, 300, 301, 302, 308, 310, 314, 317, 318, 320, 321, 323, 325, 327, 331, 337, 339, 342, 343, 344, 353, 362, 363, 365, 366, 370, 372, 376, 381, 383, 385, 390, 394, 397, 398, 399, 402, 403, 405, 410, 411, 416, 417, 423, 424, 427, 430, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 448, 451, 452, 453, 454, 455, 456, 457], "variabl": [3, 5, 9, 10, 12, 13, 16, 18, 20, 22, 23, 26, 27, 28, 30, 31, 33, 34, 41, 44, 50, 51, 53, 59, 61, 62, 64, 66, 70, 71, 73, 74, 76, 77, 79, 82, 84, 85, 87, 90, 91, 92, 93, 97, 99, 100, 102, 105, 106, 107, 109, 119, 120, 133, 144, 145, 150, 153, 154, 157, 166, 177, 180, 182, 198, 202, 203, 204, 212, 214, 216, 217, 218, 219, 220, 234, 236, 237, 238, 242, 243, 246, 249, 254, 255, 269, 272, 275, 278, 280, 282, 288, 293, 295, 300, 301, 302, 306, 309, 313, 314, 315, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 330, 331, 333, 337, 340, 343, 344, 345, 353, 358, 359, 361, 362, 363, 365, 366, 371, 372, 375, 376, 379, 381, 383, 385, 386, 387, 395, 400, 402, 403, 404, 405, 406, 407, 410, 411, 413, 414, 416, 417, 418, 421, 422, 423, 424, 425, 427, 428, 431, 434, 437, 438, 439, 440, 441, 442, 443, 445, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458], "pyobject_new": [3, 28, 41, 61, 440, 457, 458], "typeobj": [3, 28, 365], "c": [3, 4, 5, 7, 9, 10, 11, 12, 13, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 38, 40, 42, 45, 47, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 72, 73, 74, 78, 84, 85, 87, 89, 90, 91, 92, 93, 95, 97, 99, 100, 102, 103, 104, 105, 109, 111, 112, 114, 115, 116, 120, 127, 129, 131, 133, 134, 137, 139, 140, 142, 143, 144, 148, 150, 151, 162, 165, 166, 167, 170, 172, 173, 175, 177, 179, 180, 182, 202, 203, 204, 205, 214, 215, 216, 219, 220, 221, 224, 226, 229, 233, 236, 242, 243, 245, 249, 250, 254, 255, 262, 268, 269, 270, 275, 276, 277, 278, 279, 280, 282, 288, 290, 293, 296, 298, 300, 301, 302, 303, 304, 308, 312, 313, 314, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 333, 334, 337, 338, 339, 340, 343, 344, 347, 353, 354, 355, 357, 359, 361, 362, 363, 364, 365, 366, 367, 375, 376, 378, 381, 383, 386, 388, 396, 397, 398, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 423, 424, 425, 426, 427, 430, 434, 435, 436, 437, 438, 439], "structur": [3, 5, 10, 12, 13, 16, 17, 19, 20, 22, 26, 27, 29, 30, 31, 32, 33, 34, 41, 42, 44, 46, 48, 50, 53, 55, 57, 59, 64, 66, 71, 73, 74, 76, 77, 83, 84, 85, 88, 90, 91, 93, 97, 98, 102, 116, 117, 122, 129, 133, 137, 148, 166, 171, 183, 185, 190, 192, 193, 194, 195, 196, 201, 202, 204, 211, 212, 215, 219, 222, 225, 229, 234, 236, 237, 239, 242, 243, 246, 249, 250, 259, 263, 269, 277, 278, 279, 282, 287, 289, 292, 293, 301, 314, 315, 318, 321, 324, 326, 327, 328, 333, 340, 344, 347, 361, 362, 365, 366, 373, 378, 385, 388, 389, 393, 394, 397, 398, 402, 403, 407, 414, 416, 420, 425, 426, 427, 437, 438, 439, 440, 441, 442, 443, 444, 448, 451, 452, 453, 454, 455, 456, 457, 458], "defin": [3, 4, 5, 7, 11, 14, 15, 23, 24, 25, 28, 32, 33, 34, 41, 42, 43, 44, 48, 55, 57, 59, 61, 62, 66, 69, 70, 71, 72, 75, 76, 77, 78, 82, 84, 85, 86, 90, 91, 92, 93, 98, 99, 101, 102, 104, 105, 106, 109, 110, 111, 114, 115, 116, 119, 120, 126, 127, 134, 136, 137, 139, 143, 144, 145, 148, 150, 151, 152, 156, 157, 158, 159, 161, 162, 164, 165, 166, 168, 170, 172, 173, 175, 178, 180, 182, 183, 185, 188, 192, 194, 197, 200, 201, 202, 204, 205, 212, 214, 215, 216, 219, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 243, 245, 246, 247, 250, 251, 253, 254, 255, 257, 259, 261, 262, 263, 268, 269, 273, 274, 275, 277, 278, 279, 280, 282, 284, 285, 286, 287, 288, 289, 291, 292, 294, 296, 298, 299, 300, 301, 302, 304, 305, 306, 307, 310, 311, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 331, 332, 334, 335, 337, 338, 339, 340, 343, 344, 345, 347, 350, 353, 354, 356, 357, 358, 360, 361, 362, 364, 365, 366, 367, 370, 371, 372, 374, 375, 376, 377, 378, 379, 381, 383, 385, 386, 388, 389, 390, 394, 396, 397, 398, 400, 401, 402, 404, 405, 407, 409, 410, 411, 413, 414, 415, 417, 422, 424, 425, 427, 430, 431, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458], "header": [3, 20, 25, 28, 34, 56, 61, 66, 71, 82, 98, 102, 135, 139, 143, 145, 157, 159, 164, 165, 173, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 204, 219, 223, 231, 232, 233, 234, 236, 237, 238, 255, 257, 259, 263, 271, 277, 280, 287, 293, 299, 317, 318, 321, 331, 334, 337, 340, 354, 358, 362, 370, 372, 377, 386, 394, 397, 399, 402, 404, 415, 426, 427, 431, 436, 438, 440, 442, 443, 444, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458], "caller": [3, 5, 9, 10, 18, 23, 30, 32, 33, 34, 35, 44, 57, 59, 62, 71, 83, 85, 86, 91, 93, 133, 137, 147, 148, 159, 165, 170, 178, 180, 202, 212, 214, 224, 231, 239, 240, 243, 246, 255, 275, 277, 279, 284, 290, 314, 315, 317, 318, 321, 328, 331, 343, 348, 353, 357, 358, 363, 365, 372, 376, 377, 379, 381, 394, 396, 403, 404, 405, 415, 416, 418, 438, 439, 440, 441, 442, 443, 444, 448, 455, 458], "own": [3, 5, 7, 9, 22, 23, 24, 26, 28, 32, 34, 44, 57, 59, 61, 62, 70, 71, 72, 74, 75, 76, 78, 82, 83, 85, 87, 88, 90, 91, 92, 93, 97, 98, 99, 105, 106, 107, 109, 114, 120, 123, 127, 131, 133, 150, 157, 159, 161, 164, 170, 175, 182, 185, 189, 192, 194, 196, 199, 200, 214, 216, 219, 221, 232, 236, 238, 243, 246, 255, 256, 257, 259, 269, 270, 272, 276, 277, 279, 280, 282, 290, 300, 301, 303, 308, 313, 314, 315, 318, 320, 321, 324, 325, 328, 331, 337, 340, 342, 343, 347, 361, 365, 371, 372, 375, 378, 379, 383, 385, 388, 390, 395, 399, 401, 403, 405, 407, 410, 411, 415, 416, 418, 422, 425, 428, 430, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 448, 449, 451, 452, 454, 456, 458], "count": [3, 5, 7, 9, 12, 31, 32, 33, 44, 52, 56, 61, 62, 66, 73, 74, 76, 78, 82, 83, 85, 87, 88, 91, 92, 93, 97, 99, 102, 114, 115, 120, 128, 133, 137, 139, 141, 150, 151, 165, 166, 172, 177, 179, 180, 182, 185, 197, 200, 207, 214, 215, 216, 225, 236, 237, 238, 243, 246, 249, 255, 259, 265, 269, 270, 276, 277, 280, 282, 287, 290, 298, 300, 301, 310, 313, 318, 320, 321, 323, 324, 325, 327, 331, 340, 342, 343, 344, 345, 347, 357, 359, 365, 372, 376, 388, 403, 405, 410, 411, 417, 421, 424, 427, 430, 431, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 455, 457], "onememori": [3, 5, 7, 16, 18, 23, 28, 30, 31, 32, 33, 34, 40, 42, 44, 46, 47, 53, 56, 57, 59, 61, 62, 64, 66, 70, 71, 73, 74, 75, 83, 85, 91, 93, 97, 98, 99, 102, 103, 105, 110, 115, 116, 126, 131, 148, 150, 154, 165, 173, 174, 175, 177, 196, 201, 202, 203, 214, 216, 223, 224, 225, 226, 236, 238, 242, 243, 246, 248, 249, 250, 257, 259, 269, 277, 282, 296, 298, 304, 312, 314, 315, 318, 319, 320, 327, 328, 331, 337, 338, 340, 343, 363, 366, 378, 381, 382, 384, 386, 388, 396, 397, 399, 403, 410, 413, 415, 417, 421, 427, 430, 431, 437, 438, 440, 441, 442, 443, 444, 445, 446, 449, 451, 452, 455, 456, 457, 458], "tp_basics": [3, 28, 59, 61, 73, 74, 458], "pyobject_newvar": [3, 28, 41, 61, 440, 457, 458], "plu": [3, 10, 57, 61, 73, 82, 114, 150, 165, 166, 167, 175, 179, 183, 197, 200, 269, 276, 277, 287, 313, 322, 324, 331, 340, 342, 343, 354, 366, 367, 371, 383, 386, 405, 409, 410, 421, 428, 429, 436, 439, 440, 441, 442, 449, 452, 453], "given": [3, 4, 5, 7, 9, 10, 13, 14, 20, 22, 23, 24, 27, 30, 32, 34, 41, 42, 44, 47, 54, 56, 59, 61, 62, 64, 70, 71, 76, 79, 82, 85, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 99, 102, 103, 106, 110, 111, 114, 115, 116, 120, 121, 124, 127, 129, 132, 133, 137, 142, 143, 144, 145, 147, 148, 150, 153, 156, 157, 158, 159, 160, 164, 165, 166, 167, 168, 170, 172, 173, 175, 179, 180, 182, 184, 185, 189, 191, 192, 194, 195, 197, 198, 199, 200, 202, 205, 207, 210, 212, 214, 215, 216, 217, 219, 221, 222, 223, 224, 226, 231, 232, 233, 234, 236, 237, 238, 240, 243, 246, 247, 249, 250, 254, 255, 256, 257, 258, 259, 262, 263, 265, 269, 272, 273, 275, 276, 277, 279, 280, 282, 283, 284, 285, 288, 290, 292, 294, 295, 296, 300, 301, 304, 306, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 331, 332, 335, 337, 340, 342, 343, 344, 345, 347, 350, 353, 357, 358, 361, 362, 363, 364, 365, 366, 370, 371, 372, 374, 375, 376, 378, 379, 383, 385, 386, 387, 388, 389, 392, 395, 396, 397, 398, 399, 402, 403, 404, 405, 407, 409, 410, 411, 413, 415, 416, 417, 419, 421, 423, 424, 425, 427, 430, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458], "tp_items": [3, 28, 59, 61, 73, 74], "implement": [3, 5, 6, 8, 9, 10, 12, 13, 15, 20, 23, 28, 29, 30, 31, 32, 34, 38, 41, 44, 47, 52, 54, 55, 57, 58, 59, 61, 62, 64, 65, 66, 70, 71, 73, 74, 78, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 95, 97, 98, 102, 104, 105, 106, 109, 111, 114, 115, 116, 117, 118, 122, 123, 124, 125, 126, 127, 131, 132, 133, 135, 136, 137, 141, 145, 147, 148, 150, 151, 156, 157, 158, 160, 161, 163, 164, 165, 170, 171, 172, 175, 180, 182, 185, 192, 194, 196, 197, 200, 201, 202, 203, 207, 209, 210, 212, 214, 215, 216, 219, 223, 224, 226, 229, 230, 231, 232, 233, 234, 236, 237, 239, 240, 241, 242, 243, 244, 246, 247, 249, 254, 255, 256, 257, 259, 260, 262, 264, 267, 268, 269, 270, 272, 276, 277, 278, 279, 282, 283, 284, 285, 287, 288, 289, 290, 291, 294, 296, 298, 300, 301, 302, 306, 307, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 331, 332, 334, 335, 337, 338, 340, 343, 344, 346, 347, 348, 352, 353, 355, 356, 358, 361, 362, 363, 365, 366, 367, 371, 372, 375, 376, 377, 378, 379, 381, 384, 385, 388, 389, 390, 391, 392, 393, 394, 397, 398, 400, 401, 402, 404, 405, 407, 410, 411, 414, 415, 416, 417, 419, 420, 422, 425, 426, 427, 430, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 454, 457, 458], "tupl": [3, 5, 10, 14, 16, 20, 23, 27, 31, 34, 37, 39, 41, 47, 52, 53, 56, 57, 59, 60, 61, 64, 66, 70, 71, 73, 74, 85, 88, 92, 93, 95, 98, 99, 102, 104, 106, 108, 110, 111, 114, 115, 116, 120, 127, 128, 131, 137, 140, 143, 145, 148, 156, 160, 161, 162, 165, 166, 170, 171, 172, 173, 175, 178, 179, 180, 182, 185, 192, 194, 197, 198, 202, 210, 212, 214, 215, 216, 221, 222, 225, 231, 232, 233, 234, 237, 238, 243, 246, 247, 249, 250, 254, 255, 257, 259, 261, 263, 266, 269, 272, 273, 275, 276, 277, 278, 279, 282, 283, 285, 286, 287, 289, 290, 292, 296, 298, 300, 301, 304, 307, 310, 311, 313, 314, 315, 317, 318, 319, 320, 321, 322, 325, 327, 328, 330, 334, 338, 339, 340, 343, 344, 347, 350, 353, 355, 358, 359, 361, 362, 365, 366, 371, 372, 373, 374, 376, 377, 378, 381, 383, 387, 388, 390, 391, 394, 395, 397, 402, 403, 404, 405, 406, 407, 411, 415, 416, 418, 421, 425, 426, 431, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "abl": [3, 7, 32, 61, 71, 73, 74, 75, 76, 78, 82, 84, 85, 87, 88, 90, 92, 98, 99, 100, 101, 102, 103, 105, 107, 115, 116, 148, 149, 159, 165, 166, 170, 172, 183, 202, 224, 225, 229, 243, 255, 256, 257, 269, 276, 277, 278, 280, 282, 291, 296, 300, 301, 308, 314, 318, 320, 321, 323, 328, 337, 340, 343, 361, 366, 371, 376, 382, 383, 388, 396, 402, 403, 409, 419, 420, 423, 430, 431, 436, 437, 438, 439, 442, 444, 448, 449, 451, 452, 453, 456, 457], "construct": [3, 23, 52, 56, 57, 59, 60, 63, 64, 70, 71, 73, 76, 83, 85, 91, 92, 93, 96, 97, 98, 99, 109, 114, 120, 127, 131, 133, 142, 148, 151, 159, 161, 165, 172, 175, 178, 180, 182, 183, 186, 190, 192, 197, 198, 202, 205, 209, 210, 214, 216, 223, 224, 232, 234, 238, 247, 249, 255, 256, 258, 261, 269, 276, 277, 279, 282, 289, 290, 296, 301, 302, 313, 316, 317, 318, 320, 321, 324, 327, 343, 347, 358, 361, 363, 365, 366, 367, 371, 375, 378, 384, 386, 387, 388, 389, 394, 395, 397, 400, 402, 403, 404, 405, 410, 411, 415, 416, 417, 423, 426, 430, 436, 437, 438, 439, 441, 442, 444, 448, 449, 451, 452, 454, 455, 456, 457, 458], "embed": [3, 5, 7, 9, 31, 32, 44, 50, 55, 59, 62, 66, 71, 76, 80, 84, 88, 90, 91, 95, 97, 102, 103, 105, 122, 129, 153, 164, 166, 188, 191, 214, 247, 254, 277, 290, 299, 301, 324, 328, 340, 344, 347, 376, 390, 395, 396, 408, 410, 420, 422, 424, 426, 435, 438, 439, 442, 444, 447, 451, 453, 456, 457, 458], "arrai": [3, 5, 9, 10, 16, 30, 31, 38, 44, 52, 56, 58, 59, 61, 62, 64, 66, 70, 71, 73, 74, 76, 82, 85, 88, 91, 97, 99, 135, 143, 148, 167, 171, 204, 214, 225, 242, 266, 269, 270, 277, 282, 291, 318, 324, 327, 339, 356, 358, 362, 363, 378, 394, 402, 403, 414, 417, 427, 429, 440, 441, 442, 443, 444, 445, 448, 451, 454, 456, 458], "same": [3, 4, 5, 6, 7, 8, 9, 10, 13, 15, 20, 22, 23, 25, 26, 27, 28, 32, 33, 34, 37, 38, 39, 40, 41, 44, 45, 47, 49, 50, 52, 54, 55, 56, 57, 58, 59, 61, 62, 64, 70, 71, 73, 74, 76, 77, 78, 82, 85, 86, 87, 88, 90, 91, 92, 93, 95, 97, 98, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 114, 115, 116, 119, 120, 123, 126, 127, 129, 131, 132, 133, 134, 136, 137, 140, 141, 143, 144, 147, 148, 150, 153, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 170, 172, 173, 175, 179, 180, 182, 183, 184, 185, 190, 191, 192, 194, 196, 197, 198, 200, 202, 204, 205, 207, 209, 210, 212, 214, 215, 217, 219, 220, 221, 223, 224, 225, 226, 231, 232, 233, 234, 236, 237, 238, 240, 241, 243, 246, 247, 248, 249, 250, 254, 255, 256, 257, 258, 259, 262, 263, 265, 268, 269, 270, 273, 276, 277, 278, 279, 280, 282, 283, 285, 287, 289, 290, 291, 294, 295, 296, 298, 300, 301, 302, 303, 304, 307, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 331, 332, 333, 334, 337, 338, 339, 340, 342, 343, 344, 345, 347, 349, 352, 353, 355, 356, 358, 361, 362, 363, 364, 365, 366, 370, 371, 372, 374, 375, 376, 377, 378, 379, 381, 383, 385, 388, 390, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 424, 425, 426, 430, 431, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458], "decreas": [3, 7, 132, 172, 180, 225, 247, 344, 437, 441, 444, 448, 452, 455, 457], "manag": [3, 5, 17, 28, 31, 32, 33, 50, 61, 66, 74, 78, 85, 86, 98, 103, 106, 107, 114, 116, 117, 118, 120, 122, 131, 132, 133, 137, 140, 148, 154, 163, 165, 173, 175, 177, 180, 181, 183, 192, 202, 207, 214, 230, 232, 234, 236, 238, 240, 242, 244, 246, 255, 259, 265, 270, 271, 282, 290, 310, 311, 312, 318, 319, 321, 331, 334, 337, 338, 340, 343, 352, 353, 361, 365, 366, 372, 375, 378, 379, 394, 397, 402, 406, 409, 419, 422, 426, 427, 434, 435, 436, 437, 440, 441, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "effici": [3, 10, 13, 22, 25, 32, 47, 58, 61, 62, 66, 76, 85, 88, 90, 93, 96, 103, 104, 105, 117, 120, 127, 148, 150, 164, 171, 172, 175, 180, 202, 205, 209, 213, 214, 215, 224, 225, 226, 239, 242, 269, 270, 275, 277, 282, 283, 289, 300, 301, 310, 311, 321, 323, 324, 327, 342, 343, 381, 383, 384, 388, 399, 403, 416, 417, 420, 421, 425, 426, 439, 441, 443, 445, 448, 449, 451, 452, 453, 454, 457, 458], "void": [3, 5, 7, 9, 11, 12, 13, 17, 21, 22, 23, 24, 25, 27, 28, 30, 32, 33, 34, 37, 38, 40, 41, 44, 47, 49, 50, 51, 56, 57, 58, 59, 61, 62, 64, 65, 69, 70, 71, 73, 74, 75, 84, 95, 97, 165, 301, 327, 386, 406, 444, 447, 448, 449, 450, 457, 458], "pyobject_del": [3, 41, 61, 440], "normal": [3, 5, 6, 20, 22, 23, 24, 25, 27, 29, 30, 32, 33, 34, 37, 44, 47, 49, 54, 56, 61, 64, 70, 71, 73, 74, 76, 82, 83, 85, 88, 90, 91, 92, 98, 99, 102, 103, 105, 106, 107, 108, 111, 114, 116, 133, 134, 136, 137, 139, 141, 143, 145, 148, 150, 157, 159, 165, 166, 170, 172, 175, 177, 179, 182, 184, 185, 187, 189, 191, 194, 197, 198, 200, 202, 203, 207, 209, 210, 214, 215, 219, 223, 224, 229, 231, 236, 237, 242, 245, 246, 254, 255, 256, 257, 262, 263, 268, 269, 276, 277, 278, 279, 280, 282, 284, 290, 293, 296, 300, 301, 302, 303, 306, 313, 315, 317, 318, 321, 322, 323, 324, 325, 326, 327, 328, 331, 332, 333, 338, 340, 342, 343, 344, 347, 350, 352, 353, 358, 361, 362, 363, 364, 365, 366, 367, 371, 372, 376, 378, 383, 385, 386, 389, 390, 391, 394, 396, 397, 400, 401, 402, 403, 404, 405, 407, 409, 410, 411, 413, 415, 416, 421, 430, 436, 438, 443, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458], "tp_dealloc": [3, 28, 59, 61, 65, 73, 74, 448, 450, 457], "handler": [3, 23, 24, 28, 32, 33, 57, 59, 61, 62, 64, 65, 66, 71, 73, 74, 79, 85, 105, 110, 112, 114, 116, 119, 124, 126, 129, 156, 157, 166, 177, 178, 180, 185, 186, 190, 191, 202, 214, 218, 229, 234, 242, 246, 248, 254, 260, 269, 276, 277, 280, 290, 296, 297, 310, 311, 314, 318, 320, 324, 331, 335, 337, 340, 344, 365, 370, 372, 379, 386, 387, 389, 391, 392, 395, 402, 403, 404, 418, 430, 437, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457], "specifi": [3, 5, 7, 9, 11, 13, 14, 17, 18, 20, 22, 23, 25, 30, 33, 34, 38, 39, 41, 44, 47, 54, 55, 59, 61, 62, 64, 71, 73, 74, 75, 77, 85, 86, 88, 90, 91, 92, 93, 98, 99, 102, 103, 104, 105, 106, 107, 109, 110, 114, 115, 116, 120, 123, 126, 127, 129, 132, 133, 136, 137, 139, 140, 142, 143, 144, 145, 147, 148, 150, 151, 153, 156, 157, 158, 159, 164, 166, 170, 172, 173, 175, 177, 179, 180, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 207, 212, 214, 215, 216, 217, 219, 220, 223, 224, 225, 231, 232, 233, 234, 236, 237, 238, 240, 241, 243, 246, 247, 249, 250, 254, 255, 256, 257, 259, 262, 263, 265, 266, 268, 269, 270, 272, 275, 276, 277, 278, 279, 280, 282, 283, 284, 286, 287, 289, 290, 293, 295, 296, 299, 300, 301, 302, 304, 306, 308, 310, 311, 312, 313, 314, 315, 317, 318, 320, 321, 324, 325, 327, 328, 331, 332, 333, 334, 337, 338, 339, 340, 343, 344, 345, 347, 350, 353, 355, 357, 358, 361, 362, 365, 366, 367, 371, 372, 373, 374, 375, 376, 377, 378, 381, 382, 383, 385, 386, 388, 390, 391, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 410, 411, 415, 416, 417, 418, 419, 421, 425, 427, 428, 430, 431, 436, 437, 438, 439, 440, 441, 442, 443, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "access": [3, 5, 7, 11, 12, 16, 20, 23, 24, 27, 30, 32, 34, 44, 46, 47, 50, 52, 53, 57, 58, 59, 61, 66, 70, 71, 73, 74, 75, 78, 83, 84, 85, 88, 91, 95, 96, 98, 99, 101, 102, 104, 105, 106, 107, 111, 112, 115, 116, 119, 124, 130, 132, 133, 135, 139, 141, 142, 144, 148, 150, 151, 154, 159, 160, 164, 166, 170, 172, 175, 180, 182, 183, 185, 189, 192, 194, 196, 199, 201, 202, 207, 210, 214, 215, 216, 219, 221, 222, 224, 225, 231, 232, 233, 234, 236, 238, 241, 242, 243, 244, 245, 246, 247, 249, 252, 255, 257, 259, 262, 263, 265, 267, 268, 269, 272, 275, 276, 277, 278, 280, 282, 284, 288, 292, 294, 296, 297, 301, 302, 304, 306, 308, 310, 312, 314, 315, 317, 318, 319, 320, 321, 322, 324, 325, 328, 331, 332, 333, 337, 338, 340, 343, 345, 347, 353, 358, 361, 362, 363, 364, 365, 366, 367, 371, 372, 375, 378, 380, 382, 383, 384, 385, 386, 387, 388, 390, 395, 397, 400, 402, 404, 405, 407, 411, 415, 416, 417, 418, 421, 423, 424, 425, 427, 429, 434, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 457, 458], "after": [3, 5, 7, 8, 13, 18, 23, 26, 27, 28, 32, 33, 34, 38, 41, 44, 55, 56, 57, 59, 61, 62, 69, 70, 71, 74, 76, 78, 83, 84, 85, 86, 87, 88, 90, 92, 93, 95, 98, 99, 101, 102, 103, 104, 106, 108, 110, 111, 112, 114, 116, 120, 122, 124, 127, 129, 130, 132, 133, 134, 136, 137, 139, 140, 142, 143, 145, 147, 150, 156, 157, 159, 160, 164, 165, 166, 168, 170, 172, 175, 179, 180, 182, 184, 185, 194, 195, 196, 198, 199, 201, 202, 204, 205, 207, 212, 214, 216, 217, 221, 223, 224, 231, 234, 236, 237, 238, 243, 246, 249, 254, 255, 256, 257, 258, 259, 262, 265, 266, 268, 269, 270, 275, 276, 277, 278, 279, 280, 283, 287, 290, 291, 296, 300, 301, 302, 306, 307, 310, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 331, 332, 337, 338, 339, 340, 342, 343, 344, 345, 347, 353, 358, 359, 361, 363, 365, 366, 367, 372, 375, 376, 377, 378, 381, 383, 385, 388, 390, 391, 396, 397, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 427, 430, 431, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460], "longer": [3, 7, 22, 23, 30, 33, 34, 38, 43, 44, 50, 56, 57, 59, 61, 62, 65, 69, 71, 76, 81, 83, 85, 90, 92, 93, 97, 98, 101, 106, 108, 114, 119, 120, 148, 157, 165, 166, 173, 177, 179, 180, 188, 190, 197, 200, 214, 215, 224, 231, 234, 237, 238, 239, 243, 247, 249, 253, 256, 257, 259, 262, 269, 270, 272, 276, 277, 278, 289, 291, 293, 300, 301, 307, 310, 314, 318, 320, 321, 324, 325, 327, 328, 331, 332, 337, 340, 342, 343, 344, 353, 358, 359, 361, 363, 365, 366, 367, 375, 376, 378, 384, 385, 386, 387, 388, 389, 397, 399, 403, 405, 407, 416, 418, 425, 427, 430, 431, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458], "valid": [3, 5, 7, 11, 16, 18, 23, 28, 33, 41, 50, 59, 61, 62, 64, 70, 71, 83, 85, 86, 88, 90, 96, 102, 105, 114, 115, 116, 133, 136, 139, 147, 148, 149, 150, 153, 157, 159, 162, 164, 165, 166, 170, 172, 173, 175, 178, 180, 183, 184, 186, 192, 196, 198, 200, 214, 221, 227, 231, 233, 234, 236, 238, 243, 246, 247, 249, 250, 253, 255, 256, 258, 261, 265, 269, 277, 278, 284, 286, 290, 293, 296, 300, 301, 304, 305, 306, 313, 315, 317, 318, 320, 321, 323, 324, 325, 327, 328, 331, 337, 340, 343, 344, 353, 355, 361, 363, 364, 365, 366, 371, 372, 377, 381, 386, 388, 390, 391, 395, 397, 398, 399, 400, 402, 403, 406, 407, 410, 411, 415, 416, 417, 418, 421, 423, 425, 426, 427, 430, 431, 437, 443, 444, 445, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458], "_py_nonestruct": [3, 84], "visibl": [3, 34, 49, 58, 71, 83, 85, 88, 90, 93, 99, 103, 120, 122, 133, 148, 157, 166, 168, 174, 179, 185, 194, 236, 243, 249, 259, 318, 332, 338, 353, 366, 372, 376, 404, 426, 436, 438, 441, 442, 449, 451, 456, 457], "none": [3, 5, 16, 20, 23, 26, 30, 31, 32, 33, 44, 53, 54, 56, 61, 62, 65, 66, 71, 78, 83, 85, 86, 87, 88, 91, 93, 98, 99, 102, 103, 104, 106, 108, 109, 111, 114, 116, 120, 122, 123, 126, 127, 129, 130, 131, 132, 133, 136, 137, 140, 142, 143, 145, 147, 148, 149, 150, 151, 153, 156, 157, 158, 159, 160, 162, 164, 165, 166, 170, 172, 173, 175, 178, 179, 180, 182, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 205, 207, 212, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 243, 246, 247, 249, 250, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 265, 266, 269, 270, 272, 273, 275, 276, 277, 279, 280, 282, 283, 284, 285, 286, 287, 289, 290, 293, 294, 296, 298, 300, 301, 302, 303, 305, 306, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 327, 328, 331, 332, 334, 337, 338, 340, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 356, 357, 358, 359, 361, 362, 363, 365, 366, 367, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 400, 402, 405, 406, 407, 410, 411, 412, 416, 417, 418, 421, 425, 428, 431, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "py_non": [3, 23, 27, 32, 45, 46, 54, 65, 71, 84, 88, 406], "macro": [3, 4, 5, 6, 17, 20, 23, 28, 32, 33, 37, 41, 42, 43, 44, 48, 50, 53, 54, 55, 57, 61, 62, 70, 71, 74, 84, 88, 165, 272, 331, 340, 431, 440, 441, 442, 443, 444, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "evalu": [3, 13, 22, 32, 50, 54, 64, 71, 76, 83, 84, 85, 86, 88, 92, 93, 100, 108, 116, 137, 157, 158, 214, 219, 249, 255, 256, 262, 269, 277, 280, 305, 306, 323, 324, 331, 343, 347, 363, 371, 378, 402, 403, 410, 411, 416, 417, 421, 422, 424, 431, 437, 440, 441, 442, 443, 444, 446, 447, 448, 449, 451, 453, 457, 458], "pointer": [3, 5, 7, 8, 9, 10, 11, 13, 15, 17, 18, 20, 23, 24, 30, 32, 34, 38, 41, 42, 44, 47, 52, 53, 56, 57, 58, 59, 61, 62, 70, 73, 74, 76, 77, 79, 83, 84, 85, 88, 95, 97, 100, 135, 166, 168, 231, 265, 269, 277, 282, 285, 290, 331, 377, 405, 415, 420, 429, 439, 441, 442, 443, 444, 448, 449, 451, 453, 455, 456], "pymodule_cr": [3, 32, 34, 44, 70, 71, 74], "expos": [4, 7, 15, 27, 32, 37, 42, 43, 44, 45, 53, 55, 56, 59, 60, 61, 62, 70, 71, 74, 85, 87, 98, 106, 120, 123, 133, 165, 166, 170, 175, 199, 204, 238, 240, 243, 247, 250, 254, 255, 269, 277, 282, 289, 312, 313, 317, 324, 325, 326, 328, 331, 357, 361, 362, 364, 378, 381, 383, 395, 397, 400, 403, 407, 440, 443, 444, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "follow": [4, 5, 6, 7, 9, 10, 14, 18, 20, 23, 28, 32, 33, 34, 38, 40, 41, 44, 53, 55, 56, 59, 61, 62, 64, 70, 71, 73, 74, 75, 76, 77, 78, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 119, 120, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 159, 160, 164, 165, 166, 167, 168, 170, 171, 172, 173, 175, 177, 178, 179, 180, 182, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 196, 197, 198, 201, 202, 204, 205, 207, 209, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 243, 246, 247, 249, 250, 253, 254, 255, 256, 257, 258, 259, 261, 262, 265, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 284, 286, 287, 288, 289, 290, 291, 292, 294, 296, 298, 300, 301, 302, 303, 304, 305, 307, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 331, 332, 333, 334, 335, 337, 338, 339, 340, 342, 343, 344, 345, 347, 349, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 415, 416, 417, 418, 421, 423, 424, 425, 426, 427, 428, 430, 431, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "note": [4, 5, 7, 10, 15, 18, 20, 23, 25, 28, 30, 32, 33, 34, 39, 41, 44, 45, 49, 50, 52, 55, 57, 59, 61, 62, 64, 70, 71, 73, 74, 76, 77, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 95, 97, 98, 99, 101, 102, 103, 104, 105, 106, 109, 110, 111, 114, 115, 116, 120, 126, 128, 131, 133, 134, 136, 143, 144, 147, 148, 150, 151, 153, 156, 157, 159, 162, 164, 165, 166, 167, 170, 172, 173, 179, 180, 182, 185, 187, 188, 189, 190, 193, 194, 197, 198, 202, 203, 204, 205, 209, 210, 212, 214, 215, 216, 217, 219, 220, 222, 223, 224, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 243, 246, 247, 249, 250, 255, 256, 257, 258, 259, 262, 265, 269, 270, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 287, 288, 289, 290, 291, 298, 299, 301, 303, 304, 306, 310, 313, 314, 316, 317, 320, 323, 324, 325, 327, 330, 331, 332, 333, 337, 338, 339, 340, 342, 343, 344, 345, 347, 355, 358, 361, 362, 363, 365, 366, 367, 371, 372, 374, 375, 376, 377, 378, 379, 381, 383, 384, 385, 388, 389, 390, 391, 394, 395, 396, 397, 398, 400, 401, 402, 403, 405, 406, 407, 409, 410, 411, 412, 413, 415, 416, 417, 419, 421, 422, 424, 425, 426, 430, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 449, 450, 452, 453, 454, 455, 456, 457, 458], "correspond": [4, 5, 9, 12, 15, 18, 19, 22, 23, 29, 30, 32, 34, 39, 44, 47, 54, 55, 56, 59, 61, 62, 69, 71, 73, 74, 77, 83, 84, 85, 90, 92, 93, 96, 97, 98, 99, 100, 102, 103, 105, 106, 110, 114, 116, 120, 122, 127, 131, 133, 135, 139, 143, 145, 148, 150, 153, 157, 160, 164, 165, 166, 167, 172, 173, 175, 178, 180, 182, 188, 197, 198, 201, 202, 207, 212, 214, 215, 219, 222, 224, 227, 229, 232, 234, 236, 237, 238, 239, 243, 247, 249, 250, 254, 255, 256, 257, 259, 269, 275, 276, 277, 289, 290, 292, 296, 299, 300, 301, 311, 313, 314, 315, 316, 317, 318, 320, 321, 324, 325, 327, 328, 330, 331, 332, 334, 337, 342, 343, 344, 347, 353, 358, 363, 364, 365, 366, 370, 371, 372, 375, 378, 379, 382, 385, 386, 390, 392, 394, 397, 398, 399, 402, 403, 404, 405, 406, 407, 410, 411, 415, 416, 417, 418, 424, 430, 436, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458], "code": [4, 5, 7, 9, 10, 11, 12, 16, 18, 22, 23, 24, 26, 27, 30, 31, 33, 35, 37, 38, 40, 41, 44, 49, 50, 53, 54, 55, 57, 58, 61, 62, 63, 64, 66, 70, 71, 73, 74, 75, 77, 78, 79, 82, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 108, 111, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 139, 140, 142, 143, 145, 146, 148, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 209, 210, 212, 214, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 237, 239, 240, 241, 242, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 261, 263, 265, 266, 269, 270, 272, 273, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 330, 331, 333, 334, 335, 336, 337, 338, 340, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 367, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 400, 402, 404, 405, 406, 407, 409, 410, 411, 413, 414, 415, 417, 418, 419, 421, 422, 424, 425, 426, 427, 429, 430, 431, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 449, 450, 455, 456, 457], "built": [4, 7, 21, 23, 24, 30, 32, 33, 34, 36, 37, 41, 46, 47, 55, 56, 57, 58, 59, 60, 61, 66, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 85, 88, 91, 95, 98, 99, 101, 104, 105, 106, 107, 108, 110, 111, 114, 116, 122, 126, 129, 138, 144, 148, 149, 150, 151, 153, 167, 170, 171, 175, 179, 180, 184, 188, 191, 195, 200, 208, 210, 216, 219, 224, 225, 236, 238, 239, 242, 243, 245, 246, 249, 254, 262, 263, 269, 270, 273, 276, 277, 278, 279, 280, 282, 290, 293, 295, 297, 302, 303, 310, 311, 318, 320, 321, 325, 327, 328, 331, 334, 340, 341, 347, 353, 361, 365, 366, 376, 378, 381, 385, 386, 388, 390, 394, 398, 401, 402, 404, 405, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 421, 424, 425, 426, 427, 430, 431, 434, 436, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 460], "necessarili": [4, 13, 23, 34, 55, 59, 61, 70, 74, 78, 83, 84, 97, 103, 110, 116, 166, 175, 182, 185, 194, 214, 239, 259, 262, 269, 270, 277, 282, 301, 308, 318, 320, 321, 323, 324, 331, 332, 344, 362, 366, 383, 385, 390, 400, 401, 411, 436, 440, 442, 443, 444, 448], "across": [4, 32, 41, 55, 59, 61, 63, 66, 76, 87, 88, 95, 97, 101, 104, 114, 154, 157, 159, 165, 172, 180, 182, 198, 214, 242, 243, 248, 249, 254, 255, 256, 257, 269, 282, 283, 300, 302, 310, 312, 324, 331, 343, 347, 353, 355, 361, 405, 410, 419, 440, 441, 443, 444, 447, 448, 449, 451, 455, 456, 457], "py_major_vers": [4, 108], "3": [4, 5, 6, 7, 9, 10, 11, 13, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 30, 32, 33, 34, 35, 38, 39, 41, 42, 44, 45, 46, 47, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 69, 70, 71, 73, 74, 76, 78, 82, 84, 85, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 108, 110, 111, 114, 115, 116, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 142, 143, 144, 147, 148, 150, 151, 153, 156, 157, 158, 159, 160, 161, 164, 165, 166, 170, 172, 173, 175, 177, 179, 180, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 210, 212, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 265, 266, 268, 269, 270, 272, 275, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 300, 301, 302, 303, 304, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 334, 335, 337, 338, 339, 340, 342, 343, 344, 345, 347, 350, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 407, 410, 411, 415, 416, 417, 418, 419, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 436, 437, 438, 439, 441, 442, 460], "4": [4, 5, 10, 22, 23, 25, 30, 32, 33, 34, 41, 44, 47, 58, 59, 61, 62, 64, 66, 71, 73, 74, 76, 78, 82, 83, 84, 85, 87, 88, 90, 91, 92, 93, 95, 96, 98, 99, 101, 102, 103, 104, 105, 106, 110, 111, 114, 115, 116, 119, 120, 127, 133, 136, 142, 143, 147, 148, 150, 152, 156, 159, 165, 167, 170, 172, 173, 175, 177, 179, 180, 182, 185, 186, 188, 194, 196, 197, 199, 200, 202, 204, 205, 210, 212, 214, 215, 216, 220, 223, 224, 225, 226, 227, 229, 230, 231, 234, 236, 237, 238, 243, 246, 247, 249, 250, 254, 255, 256, 257, 258, 261, 262, 269, 270, 272, 275, 277, 278, 279, 280, 282, 283, 284, 286, 287, 289, 290, 291, 292, 293, 295, 300, 301, 303, 304, 306, 308, 310, 311, 312, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 331, 334, 337, 340, 342, 343, 344, 345, 347, 355, 358, 359, 361, 362, 363, 365, 366, 367, 370, 371, 372, 374, 375, 377, 378, 384, 385, 388, 390, 391, 396, 397, 399, 400, 401, 402, 403, 405, 407, 410, 411, 415, 416, 417, 418, 419, 421, 423, 424, 425, 426, 427, 428, 430, 431, 435, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 456, 457, 458, 460], "1a2": 4, "py_minor_vers": [4, 64, 108, 457], "py_micro_vers": [4, 108], "1": [4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 30, 32, 33, 34, 37, 38, 39, 40, 41, 44, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 70, 71, 73, 74, 75, 76, 77, 78, 82, 83, 85, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 114, 115, 116, 117, 119, 120, 123, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 139, 140, 141, 142, 143, 144, 148, 150, 151, 152, 153, 156, 157, 160, 162, 164, 165, 166, 170, 172, 175, 177, 179, 180, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 207, 210, 212, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 228, 229, 230, 231, 232, 234, 236, 237, 238, 239, 243, 245, 246, 247, 249, 250, 254, 255, 256, 257, 258, 259, 261, 262, 265, 268, 269, 270, 273, 275, 277, 278, 279, 280, 282, 283, 285, 286, 287, 289, 290, 291, 292, 293, 296, 300, 301, 302, 303, 304, 306, 307, 308, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 331, 332, 337, 338, 339, 340, 343, 344, 345, 347, 350, 353, 355, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 371, 372, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 394, 395, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 410, 411, 413, 415, 416, 417, 418, 419, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 435, 436, 439, 440, 441, 443, 445, 447, 448, 449, 450, 452, 453, 454, 455, 460], "py_release_level": [4, 108], "0xa": 4, "alpha": [4, 78, 85, 88, 108, 270, 289, 300, 331, 334, 426, 437, 438, 443, 446], "0xb": 4, "beta": [4, 88, 108, 300, 331, 426, 437, 443, 454], "0xc": 4, "candid": [4, 78, 88, 91, 108, 194, 219, 331, 403, 442, 443, 444, 453], "0xf": 4, "final": [4, 28, 31, 33, 34, 44, 47, 57, 59, 61, 66, 71, 72, 74, 76, 78, 82, 83, 88, 92, 93, 98, 99, 101, 102, 103, 104, 108, 110, 111, 116, 120, 127, 129, 132, 133, 137, 148, 165, 170, 175, 177, 179, 180, 182, 186, 192, 200, 202, 216, 224, 234, 238, 243, 245, 246, 249, 253, 255, 259, 269, 275, 276, 277, 279, 280, 282, 290, 293, 296, 301, 314, 316, 319, 320, 321, 323, 325, 331, 332, 333, 337, 338, 339, 340, 342, 343, 345, 347, 353, 355, 358, 359, 361, 362, 363, 365, 366, 367, 375, 376, 382, 384, 389, 397, 403, 404, 405, 406, 407, 410, 411, 414, 416, 418, 419, 421, 422, 431, 437, 438, 439, 440, 441, 443, 444, 445, 447, 448, 450, 451, 452, 454, 455, 456, 457, 458], "py_release_seri": [4, 108], "2": [4, 5, 7, 22, 23, 24, 25, 30, 32, 33, 34, 38, 40, 41, 44, 46, 47, 49, 54, 55, 56, 57, 58, 59, 61, 62, 64, 66, 70, 71, 73, 74, 75, 76, 78, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 104, 105, 107, 108, 109, 110, 111, 114, 115, 116, 120, 127, 130, 132, 133, 135, 136, 137, 139, 143, 144, 148, 150, 151, 152, 153, 156, 157, 159, 160, 164, 165, 166, 167, 170, 172, 173, 175, 179, 180, 182, 185, 190, 191, 194, 196, 197, 198, 200, 201, 202, 204, 207, 210, 212, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 227, 230, 231, 232, 234, 236, 237, 238, 239, 242, 243, 245, 246, 247, 249, 250, 254, 255, 256, 257, 259, 261, 262, 263, 265, 269, 270, 275, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 292, 293, 295, 296, 300, 301, 302, 303, 304, 306, 307, 310, 312, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 331, 332, 334, 335, 337, 338, 340, 343, 344, 345, 347, 353, 355, 358, 359, 362, 363, 364, 365, 366, 367, 371, 372, 375, 376, 377, 378, 379, 381, 383, 384, 385, 386, 388, 390, 391, 392, 394, 395, 396, 397, 398, 399, 402, 403, 405, 407, 410, 411, 415, 416, 417, 418, 419, 421, 423, 424, 425, 426, 427, 428, 430, 431, 434, 435, 436, 446, 447, 448, 449, 450, 452, 453, 454, 457, 460], "zero": [4, 5, 7, 15, 18, 21, 23, 25, 26, 28, 30, 32, 33, 34, 35, 37, 38, 41, 44, 47, 56, 57, 59, 61, 62, 64, 65, 71, 73, 74, 82, 83, 85, 88, 92, 96, 97, 98, 99, 102, 104, 105, 114, 116, 120, 127, 128, 132, 133, 136, 139, 143, 144, 145, 148, 150, 165, 166, 170, 172, 175, 179, 180, 182, 185, 198, 200, 202, 212, 214, 215, 216, 220, 223, 224, 225, 231, 237, 238, 246, 247, 249, 257, 259, 262, 265, 269, 276, 277, 280, 282, 287, 296, 298, 300, 301, 302, 310, 314, 315, 317, 318, 320, 321, 322, 323, 324, 325, 327, 328, 331, 337, 339, 342, 343, 344, 353, 361, 365, 381, 385, 388, 397, 399, 403, 404, 405, 406, 409, 410, 411, 416, 417, 418, 419, 421, 423, 424, 427, 430, 437, 440, 441, 442, 443, 444, 445, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "py_version_hex": [4, 55, 447, 448, 457, 458], "encod": [4, 5, 22, 23, 24, 26, 30, 32, 33, 39, 44, 47, 56, 57, 64, 66, 69, 75, 85, 88, 90, 95, 98, 99, 101, 102, 106, 114, 115, 120, 127, 130, 139, 142, 143, 146, 157, 160, 164, 165, 166, 167, 173, 175, 177, 179, 180, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 202, 203, 207, 212, 214, 219, 223, 224, 230, 231, 233, 237, 238, 239, 241, 242, 243, 253, 254, 255, 256, 257, 258, 263, 270, 271, 272, 277, 279, 280, 282, 286, 289, 291, 296, 308, 312, 317, 318, 320, 321, 324, 327, 328, 331, 335, 337, 338, 340, 347, 354, 355, 363, 372, 374, 377, 383, 386, 388, 390, 391, 392, 394, 395, 396, 397, 403, 407, 416, 421, 425, 426, 430, 436, 437, 438, 439, 441, 442, 443, 444, 445, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458], "singl": [4, 5, 7, 9, 10, 14, 22, 23, 25, 30, 32, 34, 38, 49, 56, 57, 59, 61, 62, 64, 65, 69, 71, 74, 76, 77, 78, 84, 85, 88, 90, 92, 93, 94, 96, 97, 101, 102, 104, 105, 106, 114, 115, 116, 120, 137, 139, 143, 147, 148, 149, 150, 153, 156, 157, 164, 165, 166, 167, 170, 172, 175, 178, 179, 180, 182, 184, 185, 191, 192, 196, 197, 202, 207, 209, 212, 214, 215, 219, 223, 224, 225, 226, 231, 232, 236, 237, 238, 239, 243, 246, 247, 249, 253, 255, 256, 257, 258, 259, 261, 262, 265, 269, 270, 276, 277, 278, 279, 280, 282, 284, 285, 287, 289, 290, 296, 300, 301, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 327, 328, 330, 331, 334, 337, 340, 342, 344, 347, 349, 350, 353, 355, 357, 358, 363, 365, 366, 367, 371, 372, 373, 374, 376, 378, 383, 385, 388, 390, 392, 394, 396, 397, 402, 403, 405, 406, 407, 409, 410, 411, 414, 415, 416, 417, 419, 420, 421, 424, 427, 430, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458], "integ": [4, 5, 6, 7, 9, 14, 16, 18, 22, 23, 24, 31, 32, 33, 34, 40, 41, 44, 46, 47, 54, 59, 61, 62, 64, 66, 70, 71, 73, 74, 76, 82, 85, 87, 88, 90, 92, 93, 96, 99, 101, 102, 103, 105, 106, 109, 110, 114, 115, 116, 120, 127, 128, 132, 142, 143, 144, 148, 150, 156, 157, 165, 166, 167, 172, 175, 180, 182, 192, 200, 201, 202, 204, 207, 210, 212, 214, 216, 222, 223, 232, 234, 237, 238, 246, 249, 250, 254, 255, 256, 257, 258, 261, 262, 265, 269, 273, 275, 276, 277, 278, 282, 286, 287, 289, 290, 292, 296, 298, 301, 302, 303, 304, 310, 311, 314, 318, 319, 320, 321, 325, 327, 328, 331, 332, 339, 340, 343, 344, 345, 347, 353, 356, 361, 364, 366, 371, 374, 376, 377, 381, 385, 386, 388, 394, 397, 399, 402, 403, 405, 411, 415, 416, 417, 418, 419, 421, 424, 426, 430, 431, 437, 438, 440, 442, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "underli": [4, 5, 7, 18, 32, 42, 52, 66, 72, 76, 82, 83, 85, 90, 91, 93, 98, 99, 102, 104, 111, 112, 120, 125, 126, 127, 129, 130, 132, 142, 148, 150, 151, 159, 164, 165, 166, 179, 201, 202, 204, 205, 214, 215, 223, 231, 236, 242, 243, 245, 246, 249, 250, 255, 256, 257, 258, 259, 262, 265, 269, 270, 277, 278, 279, 280, 282, 287, 290, 296, 298, 300, 302, 304, 310, 311, 312, 314, 315, 318, 319, 320, 321, 322, 323, 324, 328, 330, 331, 338, 340, 343, 344, 347, 362, 363, 365, 367, 374, 375, 381, 382, 383, 385, 394, 395, 401, 402, 403, 405, 425, 426, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457], "found": [4, 5, 14, 17, 21, 22, 30, 32, 34, 39, 41, 44, 47, 53, 56, 59, 61, 62, 69, 70, 71, 75, 76, 77, 78, 79, 83, 85, 86, 88, 91, 92, 93, 95, 97, 98, 99, 102, 105, 106, 107, 108, 109, 114, 115, 116, 117, 130, 140, 142, 148, 150, 152, 153, 157, 160, 161, 164, 165, 166, 180, 182, 185, 186, 188, 192, 194, 196, 197, 200, 202, 204, 205, 212, 214, 215, 216, 217, 219, 222, 225, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 241, 243, 245, 249, 253, 254, 255, 256, 258, 259, 261, 263, 265, 266, 268, 269, 272, 276, 277, 279, 280, 284, 292, 296, 300, 301, 304, 314, 315, 317, 318, 320, 321, 323, 324, 328, 331, 333, 334, 337, 340, 347, 349, 353, 355, 362, 363, 364, 365, 366, 367, 370, 372, 376, 382, 383, 385, 387, 388, 389, 390, 394, 395, 398, 400, 401, 402, 403, 404, 405, 407, 409, 410, 411, 415, 416, 417, 418, 421, 422, 423, 425, 426, 427, 428, 434, 436, 437, 438, 439, 440, 442, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "treat": [4, 34, 47, 54, 56, 57, 59, 61, 62, 64, 82, 87, 92, 93, 96, 97, 101, 102, 108, 114, 115, 133, 144, 148, 150, 157, 161, 166, 170, 172, 175, 177, 179, 182, 183, 192, 194, 205, 210, 215, 232, 234, 246, 247, 249, 255, 256, 259, 262, 276, 278, 279, 301, 313, 317, 320, 321, 323, 324, 325, 328, 332, 337, 340, 342, 345, 347, 350, 353, 363, 365, 371, 372, 376, 377, 383, 387, 388, 402, 403, 404, 405, 410, 411, 415, 423, 424, 425, 436, 437, 439, 442, 443, 444, 445, 450, 452, 455, 457, 458], "32": [4, 25, 40, 57, 84, 92, 93, 95, 96, 102, 103, 105, 110, 115, 133, 139, 148, 156, 165, 175, 204, 215, 224, 238, 239, 247, 249, 250, 258, 269, 277, 285, 286, 288, 293, 300, 308, 315, 318, 323, 324, 327, 331, 343, 344, 365, 374, 381, 382, 397, 398, 399, 403, 410, 421, 431, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 448, 451, 452, 453, 454, 455, 456, 457, 458], "bit": [4, 5, 7, 25, 34, 40, 41, 56, 59, 61, 62, 64, 71, 73, 74, 76, 79, 83, 84, 87, 88, 90, 91, 92, 93, 96, 99, 102, 103, 105, 115, 127, 139, 144, 148, 157, 159, 166, 167, 175, 180, 182, 184, 189, 190, 191, 194, 197, 200, 204, 205, 214, 216, 219, 224, 232, 233, 247, 254, 258, 261, 262, 270, 273, 276, 277, 282, 285, 288, 300, 301, 304, 308, 310, 314, 318, 321, 322, 324, 327, 328, 331, 335, 337, 338, 344, 345, 347, 353, 367, 374, 385, 396, 397, 399, 402, 403, 405, 410, 415, 416, 419, 421, 431, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458], "manner": [4, 54, 71, 83, 85, 88, 90, 99, 157, 234, 256, 258, 276, 278, 279, 289, 293, 295, 301, 303, 328, 338, 363, 365, 376, 390, 402, 403, 407, 431, 440, 442, 443, 447], "byte": [4, 5, 7, 12, 14, 16, 18, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 47, 56, 57, 59, 61, 62, 64, 66, 76, 77, 82, 83, 85, 88, 90, 91, 92, 97, 99, 101, 102, 103, 106, 108, 115, 116, 120, 121, 127, 130, 131, 135, 136, 138, 139, 142, 148, 151, 156, 157, 166, 167, 171, 173, 175, 177, 179, 180, 183, 184, 185, 186, 188, 189, 190, 191, 194, 195, 196, 197, 201, 202, 204, 212, 214, 219, 223, 224, 226, 231, 237, 238, 239, 241, 242, 246, 247, 249, 250, 252, 254, 256, 257, 258, 259, 261, 265, 268, 269, 270, 277, 278, 279, 281, 282, 285, 286, 287, 288, 291, 293, 296, 299, 301, 304, 306, 310, 314, 315, 317, 318, 319, 320, 321, 322, 328, 331, 337, 338, 340, 347, 354, 355, 359, 363, 372, 374, 376, 377, 381, 382, 383, 385, 386, 388, 389, 390, 391, 394, 396, 397, 399, 400, 402, 403, 405, 406, 407, 415, 421, 425, 426, 427, 430, 431, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458], "big": [4, 25, 34, 41, 62, 71, 76, 82, 88, 93, 99, 103, 105, 126, 127, 148, 157, 165, 166, 180, 219, 225, 247, 257, 324, 327, 331, 340, 366, 374, 381, 409, 427, 431, 439, 440, 441, 444, 446, 448, 451, 453], "endian": [4, 25, 30, 41, 62, 82, 103, 105, 148, 165, 219, 247, 327, 331, 374, 381, 427, 453], "mean": [4, 5, 7, 10, 13, 18, 22, 23, 27, 30, 32, 33, 34, 41, 44, 50, 55, 57, 59, 61, 62, 64, 65, 71, 73, 74, 76, 82, 84, 85, 87, 88, 91, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 114, 116, 120, 127, 128, 133, 137, 145, 148, 150, 153, 156, 157, 159, 160, 164, 165, 166, 167, 170, 172, 173, 175, 179, 180, 182, 185, 191, 192, 194, 195, 196, 197, 198, 202, 203, 204, 205, 207, 209, 212, 214, 215, 217, 222, 223, 224, 225, 226, 231, 232, 233, 236, 238, 239, 241, 243, 245, 246, 247, 249, 250, 254, 255, 256, 257, 258, 259, 261, 263, 265, 269, 273, 276, 277, 278, 279, 280, 282, 285, 289, 290, 292, 293, 296, 298, 300, 301, 303, 304, 307, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 331, 332, 338, 339, 340, 343, 344, 345, 347, 353, 356, 358, 361, 362, 363, 365, 366, 367, 371, 372, 374, 375, 376, 377, 378, 381, 383, 385, 388, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 415, 416, 418, 419, 421, 423, 424, 425, 426, 428, 430, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458], "8": [4, 5, 10, 13, 15, 22, 23, 24, 25, 26, 28, 30, 32, 33, 34, 35, 38, 39, 41, 44, 46, 47, 55, 57, 61, 64, 66, 76, 82, 83, 84, 85, 87, 88, 90, 92, 93, 95, 98, 99, 102, 103, 105, 110, 114, 115, 116, 120, 121, 125, 126, 130, 131, 133, 135, 139, 140, 143, 150, 153, 156, 157, 164, 165, 166, 167, 172, 173, 175, 177, 179, 180, 182, 185, 186, 190, 194, 195, 197, 198, 200, 204, 207, 210, 212, 214, 215, 216, 219, 223, 224, 225, 226, 230, 231, 232, 233, 234, 236, 237, 238, 239, 243, 246, 247, 249, 250, 253, 254, 255, 256, 262, 263, 265, 269, 270, 272, 276, 278, 279, 280, 282, 285, 286, 287, 289, 290, 293, 296, 300, 301, 304, 308, 312, 313, 314, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 331, 337, 338, 340, 342, 343, 344, 345, 346, 347, 353, 354, 355, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 371, 372, 373, 374, 375, 378, 383, 385, 386, 388, 389, 390, 391, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 410, 411, 416, 417, 419, 421, 423, 424, 425, 426, 427, 430, 431, 432, 434, 437, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 458, 460], "0x03": 4, "9": [4, 7, 10, 23, 26, 28, 32, 33, 44, 50, 55, 56, 57, 58, 59, 60, 61, 62, 66, 78, 83, 91, 92, 93, 95, 97, 98, 99, 102, 105, 114, 115, 116, 119, 120, 123, 126, 129, 132, 133, 142, 143, 144, 148, 150, 151, 153, 156, 157, 158, 165, 166, 167, 172, 175, 177, 179, 180, 182, 198, 200, 204, 210, 212, 214, 215, 216, 220, 221, 223, 224, 225, 226, 229, 230, 231, 234, 237, 238, 240, 243, 247, 249, 250, 251, 255, 256, 257, 258, 262, 269, 270, 277, 279, 283, 284, 285, 286, 287, 289, 290, 300, 301, 304, 310, 314, 315, 317, 318, 320, 321, 323, 324, 325, 326, 327, 328, 331, 337, 340, 343, 344, 355, 359, 361, 362, 363, 364, 371, 372, 375, 378, 386, 388, 395, 397, 399, 400, 402, 403, 406, 410, 416, 417, 421, 424, 427, 428, 430, 431, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 460], "16": [4, 5, 33, 40, 46, 76, 83, 87, 92, 93, 99, 103, 105, 115, 139, 143, 148, 165, 166, 172, 180, 182, 200, 210, 214, 215, 224, 225, 229, 247, 249, 250, 255, 269, 276, 277, 280, 296, 300, 301, 304, 308, 314, 318, 321, 323, 324, 325, 328, 331, 344, 347, 355, 363, 374, 399, 401, 410, 415, 417, 419, 421, 424, 426, 427, 428, 431, 437, 439, 441, 442, 443, 444, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458], "0x04": [4, 180, 403], "17": [4, 92, 93, 99, 105, 133, 143, 172, 175, 179, 182, 197, 212, 225, 245, 249, 276, 277, 301, 344, 355, 419, 424, 438, 441, 443, 444, 446, 449, 451, 453, 454, 457, 458], "24": [4, 83, 92, 93, 96, 102, 105, 133, 143, 172, 175, 182, 198, 225, 247, 249, 301, 314, 323, 324, 327, 344, 399, 410, 444, 448, 452, 453, 457, 458], "0x01": [4, 180, 318], "25": [4, 83, 92, 93, 120, 143, 172, 175, 179, 210, 225, 247, 249, 269, 300, 301, 304, 317, 318, 320, 323, 324, 339, 355, 359, 361, 399, 417, 421, 423, 424, 426, 437, 439, 440, 441, 443, 444, 448, 449, 452, 454, 455, 456, 457, 458], "28": [4, 32, 95, 99, 143, 175, 215, 225, 247, 320, 344, 361, 441, 442, 443, 447, 451, 457, 458], "29": [4, 95, 99, 102, 143, 172, 175, 179, 225, 247, 249, 255, 300, 344, 440, 443, 447, 452, 457, 458], "0x2": 4, "thu": [4, 5, 7, 10, 32, 34, 37, 41, 52, 71, 76, 82, 83, 88, 92, 97, 98, 99, 101, 102, 114, 116, 134, 143, 157, 159, 165, 166, 182, 190, 193, 194, 197, 202, 214, 217, 224, 232, 238, 239, 247, 250, 254, 255, 256, 257, 262, 269, 276, 277, 282, 295, 301, 309, 313, 314, 316, 318, 320, 321, 324, 328, 331, 337, 338, 340, 344, 361, 363, 365, 371, 372, 375, 381, 383, 396, 400, 402, 405, 407, 410, 411, 415, 416, 424, 425, 428, 430, 436, 437, 445, 451, 452, 453, 454, 455, 457], "hexvers": [4, 78, 331, 425, 452], "0x030401a2": 4, "10": [4, 10, 14, 20, 22, 23, 26, 28, 32, 33, 35, 38, 44, 46, 47, 50, 53, 55, 56, 59, 61, 62, 66, 71, 77, 82, 85, 90, 91, 92, 93, 95, 98, 99, 102, 103, 104, 105, 106, 108, 110, 111, 114, 115, 116, 117, 120, 123, 125, 128, 129, 130, 131, 132, 133, 136, 140, 142, 143, 144, 145, 148, 150, 153, 159, 165, 166, 170, 172, 175, 177, 180, 182, 198, 202, 203, 204, 205, 207, 209, 210, 212, 214, 215, 220, 222, 224, 225, 226, 230, 231, 238, 239, 240, 243, 246, 247, 249, 254, 255, 256, 261, 262, 265, 268, 269, 270, 272, 275, 276, 277, 278, 279, 280, 285, 286, 289, 290, 293, 294, 300, 301, 304, 307, 308, 312, 314, 318, 320, 321, 322, 323, 324, 325, 327, 328, 331, 334, 338, 340, 342, 343, 344, 345, 347, 350, 355, 358, 361, 362, 363, 365, 367, 371, 372, 383, 388, 390, 395, 397, 398, 400, 402, 403, 404, 405, 406, 407, 410, 415, 416, 417, 418, 419, 421, 423, 424, 426, 427, 428, 430, 431, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 454, 457, 458, 460], "0": [4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 24, 25, 27, 28, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 44, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 70, 71, 73, 74, 76, 77, 78, 82, 83, 85, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 114, 115, 116, 120, 125, 127, 128, 130, 132, 133, 134, 135, 136, 139, 140, 142, 143, 144, 145, 148, 150, 152, 153, 156, 157, 160, 164, 165, 166, 167, 170, 172, 175, 179, 180, 182, 185, 189, 190, 192, 193, 194, 195, 197, 198, 199, 200, 203, 204, 207, 209, 210, 212, 214, 215, 216, 220, 221, 222, 223, 224, 225, 228, 230, 231, 232, 234, 236, 237, 238, 239, 242, 243, 246, 247, 249, 250, 254, 255, 256, 257, 258, 261, 262, 265, 266, 268, 269, 270, 275, 276, 277, 279, 280, 281, 282, 283, 285, 286, 287, 289, 290, 291, 292, 293, 295, 296, 298, 300, 301, 302, 304, 306, 307, 308, 310, 311, 312, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 327, 328, 331, 332, 334, 335, 337, 338, 339, 340, 343, 344, 345, 347, 349, 350, 353, 355, 356, 357, 358, 359, 363, 364, 365, 366, 371, 372, 375, 376, 378, 379, 381, 383, 385, 386, 388, 390, 391, 394, 395, 397, 398, 399, 400, 402, 403, 404, 405, 406, 410, 411, 415, 416, 417, 418, 419, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 436, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 460], "0x030a00f0": 4, "comparison": [4, 18, 23, 47, 61, 62, 66, 93, 101, 105, 116, 134, 140, 144, 150, 151, 165, 170, 172, 175, 179, 180, 182, 208, 209, 214, 215, 225, 242, 243, 254, 262, 269, 275, 278, 323, 325, 326, 331, 340, 363, 365, 366, 367, 374, 381, 388, 394, 403, 406, 410, 417, 424, 430, 437, 439, 440, 441, 442, 443, 444, 447, 451, 452, 453, 454, 455, 456, 457, 458], "avail": [4, 5, 6, 7, 10, 11, 13, 15, 22, 23, 24, 25, 26, 27, 32, 33, 34, 38, 41, 43, 44, 53, 55, 56, 57, 59, 62, 64, 69, 70, 71, 72, 73, 75, 76, 78, 82, 83, 84, 85, 88, 90, 92, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 110, 111, 112, 114, 115, 116, 117, 120, 121, 123, 124, 125, 126, 127, 128, 130, 131, 133, 141, 145, 148, 150, 153, 156, 157, 159, 160, 163, 164, 165, 166, 173, 175, 180, 182, 184, 196, 199, 200, 201, 202, 203, 204, 207, 212, 214, 215, 218, 219, 222, 224, 225, 226, 230, 231, 234, 236, 237, 238, 239, 242, 243, 246, 247, 250, 254, 255, 256, 257, 259, 262, 263, 264, 265, 268, 269, 270, 272, 276, 277, 278, 279, 280, 282, 285, 286, 287, 288, 290, 292, 295, 296, 298, 299, 300, 301, 303, 304, 305, 307, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 331, 333, 335, 337, 338, 339, 340, 343, 344, 346, 347, 352, 353, 355, 356, 358, 359, 361, 362, 363, 365, 366, 367, 372, 374, 375, 378, 379, 380, 381, 383, 384, 385, 386, 388, 389, 390, 391, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 414, 416, 420, 422, 423, 425, 428, 429, 430, 431, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459], "symbol": [4, 33, 34, 55, 64, 66, 69, 71, 75, 83, 84, 90, 92, 99, 100, 105, 112, 116, 147, 149, 165, 166, 175, 182, 200, 214, 220, 234, 242, 252, 254, 257, 275, 277, 278, 279, 283, 285, 301, 304, 314, 315, 318, 320, 322, 324, 331, 333, 336, 337, 339, 340, 347, 353, 361, 364, 371, 381, 385, 390, 403, 406, 409, 411, 416, 422, 430, 436, 437, 439, 441, 442, 444, 446, 447, 449, 451, 455, 457, 458], "py_vers": [4, 32, 55, 165, 448, 451], "const": [4, 5, 7, 8, 9, 10, 11, 13, 14, 17, 18, 22, 23, 24, 25, 26, 30, 32, 33, 38, 39, 40, 42, 44, 47, 49, 50, 51, 52, 56, 57, 58, 59, 61, 62, 64, 71, 73, 77, 95, 97, 276, 386, 450, 453, 456, 457], "unsign": [4, 5, 7, 9, 25, 30, 32, 33, 34, 38, 41, 49, 56, 59, 61, 62, 73, 88, 115, 139, 165, 277, 282, 318, 324, 327, 385, 386, 399, 427, 439, 440, 442, 447, 452, 456], "long": [4, 5, 6, 9, 22, 23, 30, 32, 33, 34, 38, 40, 44, 56, 57, 59, 61, 62, 64, 71, 73, 76, 78, 82, 83, 85, 87, 88, 93, 95, 97, 98, 99, 101, 102, 103, 106, 114, 115, 119, 120, 133, 136, 139, 140, 156, 157, 159, 165, 166, 179, 182, 191, 197, 201, 204, 212, 214, 215, 216, 217, 230, 231, 234, 236, 237, 242, 246, 247, 249, 255, 256, 261, 269, 276, 277, 282, 285, 287, 288, 289, 290, 300, 301, 303, 310, 312, 315, 317, 318, 319, 320, 321, 324, 327, 328, 331, 337, 338, 340, 342, 343, 344, 345, 346, 347, 353, 358, 372, 373, 376, 381, 383, 385, 386, 400, 402, 403, 405, 410, 415, 416, 421, 424, 425, 427, 430, 436, 437, 438, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "sinc": [4, 5, 7, 10, 13, 14, 22, 23, 24, 26, 28, 30, 32, 33, 34, 35, 38, 39, 41, 42, 44, 45, 46, 47, 50, 52, 54, 56, 57, 58, 59, 60, 61, 62, 64, 65, 70, 71, 73, 74, 76, 77, 78, 79, 82, 83, 85, 86, 88, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 111, 115, 116, 120, 123, 126, 127, 133, 137, 139, 141, 142, 147, 150, 151, 157, 159, 164, 165, 166, 170, 172, 175, 179, 180, 182, 183, 185, 187, 188, 190, 192, 194, 196, 197, 198, 202, 207, 214, 215, 216, 217, 219, 223, 224, 225, 226, 231, 232, 233, 234, 236, 237, 238, 239, 241, 243, 246, 247, 250, 254, 256, 257, 259, 262, 265, 269, 276, 277, 278, 279, 280, 284, 289, 290, 296, 300, 301, 310, 312, 314, 317, 318, 319, 320, 321, 323, 324, 325, 327, 331, 337, 338, 340, 342, 343, 344, 347, 353, 355, 357, 358, 359, 363, 365, 366, 367, 372, 374, 375, 376, 377, 378, 381, 383, 384, 385, 386, 387, 388, 389, 390, 394, 396, 397, 398, 399, 402, 403, 405, 407, 409, 410, 414, 415, 416, 417, 418, 419, 421, 423, 424, 425, 430, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "11": [4, 7, 13, 23, 25, 26, 30, 32, 33, 34, 42, 50, 56, 58, 59, 66, 70, 83, 85, 87, 90, 91, 92, 93, 97, 98, 99, 100, 102, 105, 108, 114, 116, 120, 121, 122, 129, 130, 132, 133, 139, 143, 148, 150, 156, 159, 164, 165, 170, 172, 173, 175, 180, 182, 200, 201, 202, 204, 207, 210, 214, 215, 219, 220, 223, 224, 225, 230, 231, 234, 236, 238, 241, 243, 246, 247, 249, 250, 254, 255, 256, 257, 262, 265, 269, 275, 277, 279, 280, 282, 289, 300, 301, 303, 304, 312, 314, 315, 316, 318, 320, 321, 323, 324, 325, 327, 328, 331, 333, 334, 337, 338, 339, 340, 342, 344, 355, 356, 358, 363, 365, 372, 375, 376, 383, 387, 397, 398, 399, 400, 402, 403, 405, 406, 410, 411, 417, 421, 430, 431, 436, 439, 440, 441, 443, 445, 447, 449, 450, 451, 453, 454, 455, 456, 457, 460], "runtim": [4, 13, 24, 27, 32, 34, 41, 49, 50, 57, 64, 66, 71, 73, 74, 75, 76, 83, 85, 86, 88, 97, 98, 105, 108, 134, 135, 153, 157, 165, 174, 177, 180, 202, 214, 238, 242, 245, 256, 257, 276, 277, 278, 293, 320, 324, 328, 331, 333, 347, 359, 363, 366, 376, 380, 386, 396, 399, 402, 403, 404, 407, 411, 415, 430, 431, 436, 438, 440, 444, 445, 447, 449, 450, 452, 453, 454, 455, 458], "constant": [4, 7, 25, 32, 44, 56, 61, 62, 66, 74, 76, 82, 83, 85, 88, 90, 92, 99, 110, 114, 116, 120, 133, 141, 143, 148, 150, 151, 156, 164, 165, 167, 173, 180, 182, 200, 204, 214, 215, 216, 225, 230, 231, 233, 242, 243, 246, 249, 252, 254, 255, 258, 261, 268, 269, 276, 277, 282, 283, 286, 290, 301, 304, 308, 310, 311, 315, 322, 323, 324, 331, 332, 335, 337, 339, 340, 343, 347, 355, 359, 364, 374, 376, 382, 385, 387, 388, 390, 394, 397, 399, 403, 405, 410, 416, 430, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "format": [4, 5, 9, 10, 23, 25, 30, 31, 34, 40, 47, 57, 61, 62, 63, 66, 71, 73, 77, 78, 82, 83, 85, 88, 90, 91, 92, 101, 102, 103, 105, 106, 107, 113, 114, 116, 127, 135, 136, 137, 138, 139, 143, 148, 150, 157, 159, 165, 173, 175, 179, 180, 182, 183, 185, 189, 190, 191, 192, 194, 196, 197, 198, 200, 201, 202, 203, 210, 212, 214, 217, 219, 223, 224, 229, 232, 234, 237, 238, 242, 243, 247, 250, 253, 254, 255, 257, 258, 261, 263, 270, 271, 272, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 289, 290, 296, 299, 301, 302, 303, 308, 312, 313, 314, 318, 319, 320, 321, 328, 331, 340, 344, 347, 350, 353, 355, 358, 359, 361, 362, 365, 371, 372, 374, 376, 377, 381, 383, 388, 392, 397, 398, 399, 402, 403, 405, 406, 409, 415, 416, 417, 419, 424, 425, 426, 428, 430, 436, 437, 438, 439, 440, 441, 442, 447, 448, 449, 450, 451, 452, 453, 456, 457], "contain": [4, 5, 7, 9, 10, 12, 13, 14, 22, 23, 25, 27, 28, 30, 32, 33, 34, 37, 39, 40, 41, 47, 49, 52, 53, 55, 56, 57, 58, 59, 61, 62, 66, 70, 71, 73, 74, 75, 77, 78, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 109, 116, 120, 127, 130, 133, 135, 136, 137, 139, 142, 143, 147, 148, 149, 153, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 170, 171, 172, 173, 176, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 200, 202, 203, 204, 205, 212, 214, 215, 216, 219, 220, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 242, 243, 245, 246, 250, 251, 254, 255, 256, 257, 258, 259, 261, 263, 265, 266, 269, 270, 272, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 295, 296, 300, 301, 304, 306, 308, 310, 312, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 327, 328, 330, 331, 333, 334, 336, 337, 338, 339, 340, 342, 343, 344, 345, 347, 353, 355, 357, 358, 359, 361, 362, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 409, 410, 411, 413, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 427, 428, 429, 430, 431, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460], "patchlevel": [4, 285], "h": [4, 5, 20, 25, 26, 30, 32, 34, 55, 56, 57, 61, 64, 70, 71, 74, 77, 82, 83, 84, 87, 88, 91, 92, 98, 99, 103, 105, 109, 114, 115, 116, 143, 150, 152, 153, 166, 172, 180, 191, 201, 204, 214, 217, 222, 223, 224, 225, 236, 249, 250, 255, 256, 257, 269, 270, 275, 276, 277, 280, 292, 313, 315, 318, 320, 321, 323, 324, 325, 327, 331, 334, 335, 340, 344, 345, 347, 355, 365, 366, 374, 375, 383, 394, 396, 415, 424, 427, 430, 431, 435, 437, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 454, 457, 458], "method": [5, 6, 7, 10, 14, 15, 16, 21, 22, 23, 24, 25, 28, 31, 33, 36, 38, 39, 41, 44, 45, 47, 50, 51, 52, 53, 54, 59, 60, 61, 64, 66, 70, 72, 73, 78, 79, 84, 85, 86, 87, 88, 90, 93, 98, 99, 101, 104, 105, 106, 110, 111, 115, 116, 119, 122, 123, 125, 126, 127, 128, 130, 131, 132, 133, 135, 137, 139, 140, 142, 143, 144, 145, 147, 148, 149, 150, 151, 153, 156, 157, 158, 160, 161, 164, 165, 166, 168, 170, 172, 173, 175, 179, 180, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 202, 204, 205, 207, 210, 212, 214, 215, 216, 219, 221, 223, 224, 225, 226, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 243, 246, 247, 249, 250, 253, 255, 256, 257, 258, 259, 263, 265, 266, 270, 272, 273, 275, 277, 280, 282, 284, 287, 289, 290, 293, 294, 295, 296, 298, 300, 301, 303, 305, 307, 310, 311, 312, 313, 317, 319, 321, 323, 325, 327, 328, 330, 331, 337, 338, 340, 342, 343, 345, 347, 348, 350, 351, 352, 353, 355, 358, 359, 362, 363, 364, 365, 371, 372, 373, 374, 375, 377, 379, 381, 383, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 404, 407, 410, 411, 416, 417, 418, 419, 422, 424, 426, 427, 430, 431, 438, 439, 440, 443, 444, 446, 447, 448, 449, 450, 451, 453, 457], "exampl": [5, 7, 10, 16, 18, 22, 23, 31, 32, 34, 44, 48, 49, 50, 55, 56, 59, 60, 62, 64, 66, 70, 73, 75, 76, 77, 78, 82, 83, 84, 85, 86, 87, 88, 90, 92, 93, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 115, 116, 118, 119, 122, 123, 124, 125, 129, 132, 133, 136, 137, 138, 141, 143, 144, 148, 149, 152, 153, 158, 160, 161, 165, 166, 170, 173, 175, 176, 180, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 202, 204, 205, 207, 208, 209, 210, 214, 215, 216, 217, 219, 220, 221, 234, 236, 239, 240, 242, 243, 245, 246, 247, 249, 250, 253, 254, 255, 256, 257, 262, 263, 265, 268, 270, 271, 273, 275, 277, 278, 279, 280, 283, 284, 285, 288, 290, 293, 295, 298, 303, 304, 305, 307, 308, 313, 316, 320, 322, 324, 326, 328, 330, 331, 332, 334, 340, 342, 344, 347, 353, 357, 361, 362, 363, 364, 366, 371, 373, 376, 379, 382, 384, 385, 387, 390, 397, 400, 401, 402, 403, 404, 407, 409, 410, 411, 414, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "extend": [5, 30, 31, 32, 34, 41, 44, 59, 61, 66, 73, 74, 76, 78, 80, 82, 85, 90, 92, 99, 102, 106, 114, 115, 116, 117, 127, 136, 143, 144, 145, 148, 150, 151, 157, 158, 159, 165, 166, 172, 179, 180, 182, 185, 194, 196, 202, 214, 215, 219, 234, 236, 246, 249, 250, 259, 262, 263, 265, 268, 282, 284, 285, 290, 296, 302, 310, 314, 317, 318, 321, 324, 331, 337, 338, 344, 353, 355, 365, 372, 377, 378, 384, 385, 388, 395, 403, 404, 405, 407, 408, 411, 415, 416, 417, 419, 420, 424, 425, 436, 438, 441, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458], "interpret": [5, 7, 13, 16, 18, 23, 24, 26, 27, 28, 30, 31, 33, 34, 38, 41, 44, 46, 47, 49, 51, 56, 57, 61, 62, 64, 66, 70, 71, 73, 74, 77, 78, 83, 84, 85, 88, 91, 93, 95, 98, 99, 100, 101, 102, 105, 107, 109, 110, 114, 115, 116, 120, 132, 134, 138, 143, 153, 156, 157, 158, 164, 165, 166, 172, 173, 175, 179, 180, 182, 186, 192, 196, 198, 199, 202, 208, 211, 214, 216, 224, 234, 236, 237, 238, 239, 242, 245, 246, 247, 249, 250, 251, 255, 256, 265, 269, 275, 276, 277, 278, 279, 280, 282, 285, 288, 289, 290, 291, 292, 293, 295, 296, 297, 300, 301, 302, 306, 310, 312, 313, 315, 316, 317, 318, 320, 321, 324, 325, 328, 331, 334, 335, 338, 339, 340, 343, 344, 347, 350, 353, 358, 363, 365, 366, 372, 375, 376, 378, 379, 382, 385, 388, 399, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 420, 421, 424, 425, 427, 428, 430, 431, 433, 435, 436, 437, 438, 440, 441, 445, 446, 447, 450, 451, 452, 453, 454, 455, 456, 457, 458], "three": [5, 7, 23, 30, 34, 41, 56, 61, 71, 73, 74, 75, 76, 82, 83, 85, 86, 88, 91, 92, 98, 99, 102, 103, 104, 105, 108, 114, 116, 127, 128, 133, 148, 150, 151, 152, 164, 165, 166, 170, 172, 175, 178, 179, 180, 182, 183, 185, 189, 194, 196, 200, 202, 205, 214, 215, 216, 225, 232, 234, 237, 238, 246, 254, 255, 256, 257, 259, 265, 269, 272, 276, 277, 279, 280, 282, 289, 290, 296, 298, 300, 301, 308, 310, 314, 315, 316, 318, 320, 321, 323, 324, 325, 327, 328, 331, 332, 337, 344, 345, 347, 353, 361, 362, 363, 365, 366, 367, 372, 375, 379, 384, 385, 389, 390, 394, 400, 402, 403, 405, 406, 407, 409, 410, 411, 412, 415, 416, 419, 421, 423, 425, 426, 427, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 451, 452, 453, 456, 457], "pyarg_parsetupl": [5, 7, 55, 56, 70, 71, 73, 75, 88, 405, 437, 439, 440, 442, 443, 447, 449, 452, 457], "pyarg_parsetupleandkeyword": [5, 55, 56, 71, 73, 74, 88, 441, 455], "pyarg_pars": [5, 55, 88, 444, 451], "tell": [5, 30, 71, 73, 76, 78, 83, 87, 88, 90, 93, 99, 101, 102, 103, 114, 120, 128, 149, 182, 197, 212, 224, 246, 255, 257, 265, 269, 276, 282, 298, 314, 315, 318, 319, 320, 321, 324, 345, 347, 357, 363, 366, 372, 377, 383, 397, 415, 421, 437, 439, 440, 441, 443, 448, 454, 455, 456], "syntax": [5, 7, 66, 71, 76, 77, 78, 83, 85, 88, 93, 96, 98, 99, 102, 105, 106, 117, 120, 133, 147, 149, 157, 158, 165, 170, 175, 192, 200, 202, 214, 219, 236, 242, 243, 250, 252, 254, 256, 269, 275, 276, 280, 296, 313, 320, 324, 331, 340, 347, 353, 358, 359, 363, 365, 371, 372, 373, 392, 394, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 417, 419, 420, 421, 423, 424, 425, 426, 427, 429, 430, 432, 437, 438, 439, 440, 441, 442, 444, 446, 448, 450, 451, 453, 456, 457, 458], "consist": [5, 7, 9, 10, 15, 18, 23, 30, 32, 34, 50, 54, 61, 62, 64, 71, 78, 83, 85, 88, 90, 92, 93, 98, 99, 101, 109, 116, 139, 143, 148, 150, 157, 166, 167, 172, 179, 180, 182, 185, 192, 194, 196, 197, 198, 200, 214, 217, 221, 229, 231, 232, 236, 237, 238, 240, 245, 247, 250, 254, 256, 257, 258, 262, 269, 277, 282, 290, 300, 301, 307, 313, 317, 319, 320, 323, 324, 326, 327, 328, 331, 332, 338, 340, 342, 347, 353, 358, 361, 363, 365, 372, 385, 400, 401, 402, 403, 405, 407, 410, 416, 417, 424, 431, 434, 435, 436, 437, 438, 439, 440, 443, 444, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458], "unit": [5, 62, 66, 71, 78, 83, 85, 88, 92, 93, 96, 98, 99, 105, 109, 150, 156, 167, 172, 176, 182, 214, 215, 242, 262, 290, 307, 318, 321, 324, 325, 344, 345, 347, 353, 361, 366, 383, 401, 403, 404, 438, 443, 449, 452, 454, 457, 458], "usual": [5, 7, 10, 20, 23, 28, 32, 33, 34, 38, 44, 46, 50, 55, 59, 61, 62, 71, 73, 76, 79, 82, 83, 84, 85, 88, 90, 91, 92, 93, 96, 97, 99, 101, 102, 103, 104, 105, 106, 109, 110, 111, 114, 116, 119, 120, 123, 125, 127, 139, 142, 150, 164, 165, 175, 179, 182, 183, 185, 187, 191, 194, 202, 210, 212, 214, 215, 219, 225, 232, 234, 236, 237, 238, 239, 242, 243, 246, 247, 249, 256, 257, 262, 269, 275, 276, 277, 280, 282, 286, 288, 292, 301, 303, 310, 314, 315, 316, 318, 319, 320, 321, 323, 324, 325, 328, 331, 337, 340, 344, 346, 347, 353, 358, 361, 363, 365, 366, 367, 370, 372, 377, 378, 388, 396, 397, 398, 402, 403, 405, 411, 413, 414, 415, 416, 417, 418, 419, 421, 423, 424, 425, 427, 428, 430, 431, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 449, 451, 453, 454, 455, 457], "charact": [5, 9, 14, 18, 32, 33, 34, 38, 41, 47, 57, 66, 71, 76, 82, 83, 84, 85, 88, 90, 99, 103, 105, 107, 112, 114, 115, 116, 120, 125, 131, 136, 139, 143, 145, 148, 157, 164, 165, 172, 173, 175, 179, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 197, 198, 202, 203, 209, 214, 217, 220, 227, 228, 229, 233, 234, 236, 237, 238, 239, 242, 246, 253, 254, 256, 259, 268, 269, 270, 271, 272, 277, 278, 279, 282, 285, 289, 296, 299, 301, 302, 303, 305, 308, 313, 314, 317, 318, 319, 320, 322, 324, 325, 326, 328, 331, 337, 338, 339, 340, 342, 344, 347, 350, 353, 364, 365, 371, 374, 381, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 401, 405, 406, 409, 410, 411, 413, 416, 417, 421, 423, 424, 427, 430, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458], "parenthes": [5, 61, 71, 77, 83, 85, 88, 93, 99, 102, 147, 180, 237, 238, 254, 290, 301, 324, 375, 402, 403, 404, 406, 409, 410, 411, 415, 416, 417, 418, 422, 424, 437, 441, 442, 443, 444, 449, 454, 456, 457], "With": [5, 56, 59, 70, 74, 76, 78, 88, 92, 93, 97, 98, 99, 103, 106, 107, 111, 116, 120, 145, 148, 150, 156, 157, 159, 166, 170, 172, 175, 185, 197, 204, 207, 214, 216, 219, 236, 238, 239, 255, 258, 262, 269, 276, 279, 280, 290, 298, 300, 301, 320, 321, 323, 324, 325, 328, 334, 337, 353, 361, 363, 365, 366, 367, 376, 386, 393, 394, 397, 402, 406, 407, 411, 424, 434, 436, 438, 439, 440, 442, 443, 444, 445, 446, 447, 451, 452, 453, 454, 455, 457, 458], "few": [5, 27, 32, 34, 55, 71, 76, 83, 84, 87, 88, 92, 93, 97, 98, 99, 102, 105, 109, 114, 145, 148, 157, 160, 165, 166, 170, 172, 175, 179, 182, 187, 189, 212, 214, 219, 225, 229, 236, 257, 269, 276, 282, 283, 299, 300, 301, 316, 317, 318, 321, 324, 327, 332, 340, 345, 347, 358, 365, 366, 371, 372, 399, 403, 409, 410, 415, 416, 421, 437, 438, 439, 440, 442, 443, 444, 445, 447, 449, 451, 453, 454, 455, 457], "address": [5, 9, 23, 41, 49, 56, 61, 62, 71, 73, 76, 78, 83, 85, 98, 99, 102, 103, 115, 120, 122, 124, 127, 135, 160, 165, 172, 180, 182, 189, 192, 197, 198, 201, 204, 212, 214, 231, 232, 234, 250, 255, 257, 258, 259, 270, 301, 304, 317, 318, 319, 320, 321, 340, 359, 363, 371, 372, 374, 383, 395, 403, 431, 437, 439, 440, 442, 443, 444, 447, 448, 451, 452, 453, 454, 455, 456, 457, 458], "quot": [5, 66, 76, 77, 83, 85, 86, 88, 102, 105, 107, 120, 131, 139, 148, 164, 165, 184, 185, 186, 187, 191, 192, 194, 197, 198, 224, 227, 229, 236, 237, 242, 250, 271, 280, 301, 313, 320, 324, 325, 328, 338, 342, 345, 361, 363, 372, 388, 392, 401, 402, 406, 409, 410, 416, 421, 422, 423, 424, 426, 436, 437, 440, 442, 447, 449, 451, 452, 456], "entri": [5, 13, 22, 26, 27, 30, 32, 33, 34, 44, 47, 49, 56, 61, 71, 73, 76, 84, 85, 87, 91, 92, 93, 95, 99, 105, 106, 109, 114, 120, 128, 129, 133, 137, 140, 143, 148, 150, 157, 159, 165, 166, 170, 173, 175, 180, 182, 184, 205, 214, 215, 219, 222, 225, 232, 236, 237, 238, 243, 249, 253, 256, 257, 258, 259, 269, 270, 272, 276, 277, 278, 279, 282, 284, 285, 288, 289, 290, 292, 296, 298, 301, 303, 306, 312, 313, 315, 317, 320, 321, 324, 330, 331, 333, 337, 338, 340, 343, 347, 353, 355, 358, 361, 362, 366, 367, 373, 376, 378, 379, 381, 396, 397, 400, 404, 405, 417, 424, 427, 430, 431, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 454, 455, 456, 457], "round": [5, 61, 62, 85, 116, 142, 150, 172, 179, 182, 210, 214, 232, 249, 262, 273, 277, 300, 323, 324, 325, 327, 331, 355, 361, 363, 365, 377, 403, 405, 417, 419, 421, 424, 425, 426, 427, 437, 439, 441, 442, 443, 444, 445, 446, 448, 452, 453, 456, 457], "match": [5, 11, 22, 23, 32, 41, 44, 59, 61, 62, 66, 71, 76, 83, 85, 87, 90, 92, 93, 98, 99, 103, 105, 106, 120, 130, 133, 134, 137, 143, 145, 150, 153, 157, 166, 172, 175, 179, 180, 182, 185, 186, 192, 193, 194, 197, 200, 202, 205, 208, 214, 215, 217, 220, 229, 231, 232, 235, 236, 237, 239, 242, 243, 249, 255, 256, 258, 269, 272, 277, 278, 279, 280, 284, 290, 293, 296, 300, 302, 305, 313, 314, 315, 318, 320, 321, 324, 325, 327, 328, 331, 337, 340, 344, 347, 353, 355, 358, 359, 362, 363, 365, 366, 371, 372, 376, 377, 379, 385, 386, 388, 390, 395, 400, 404, 405, 406, 410, 418, 422, 427, 430, 431, 436, 437, 438, 439, 441, 442, 443, 444, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "squar": [5, 32, 61, 83, 85, 87, 92, 93, 105, 144, 166, 170, 175, 249, 262, 280, 290, 320, 323, 324, 361, 371, 388, 402, 403, 405, 409, 410, 411, 415, 417, 421, 424, 439, 440, 443, 447, 457], "bracket": [5, 32, 61, 76, 85, 93, 99, 102, 105, 137, 198, 209, 214, 220, 229, 259, 280, 301, 320, 324, 363, 364, 371, 385, 388, 402, 403, 405, 409, 410, 411, 414, 415, 416, 417, 421, 424, 442, 443, 444, 447], "pass": [5, 7, 9, 10, 11, 13, 14, 16, 17, 20, 22, 23, 24, 27, 28, 32, 33, 34, 35, 41, 42, 44, 46, 47, 50, 56, 57, 59, 60, 61, 62, 64, 70, 71, 73, 74, 75, 76, 77, 82, 85, 86, 90, 91, 92, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 114, 115, 116, 119, 120, 123, 127, 129, 130, 131, 132, 133, 134, 137, 139, 142, 143, 144, 145, 147, 148, 150, 153, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 170, 172, 179, 180, 182, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 207, 212, 214, 215, 219, 221, 223, 224, 225, 226, 231, 232, 233, 234, 236, 237, 238, 239, 240, 243, 246, 247, 249, 250, 254, 255, 256, 257, 258, 259, 262, 265, 266, 269, 272, 276, 277, 278, 279, 280, 282, 287, 288, 289, 290, 291, 293, 296, 300, 301, 302, 303, 304, 307, 312, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 330, 331, 334, 337, 338, 340, 342, 343, 344, 345, 347, 353, 355, 357, 358, 360, 361, 362, 363, 365, 366, 367, 371, 372, 375, 376, 377, 378, 379, 381, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 402, 403, 404, 405, 406, 407, 410, 412, 415, 418, 421, 430, 431, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "On": [5, 7, 8, 9, 11, 12, 13, 22, 23, 24, 25, 32, 33, 34, 38, 39, 40, 41, 44, 47, 49, 52, 55, 57, 58, 59, 60, 61, 62, 64, 65, 71, 75, 76, 79, 81, 83, 84, 85, 88, 91, 92, 93, 95, 99, 102, 103, 105, 107, 110, 120, 125, 126, 127, 130, 131, 148, 156, 157, 164, 165, 166, 170, 172, 173, 175, 180, 185, 190, 192, 202, 203, 204, 212, 214, 218, 225, 233, 236, 245, 246, 254, 257, 262, 265, 268, 269, 277, 278, 279, 282, 285, 287, 288, 292, 300, 302, 305, 308, 310, 314, 315, 316, 318, 319, 321, 322, 328, 331, 333, 338, 340, 344, 353, 363, 366, 374, 375, 381, 383, 396, 397, 400, 409, 413, 414, 415, 419, 423, 424, 425, 428, 430, 431, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458], "12": [5, 6, 10, 13, 20, 22, 23, 26, 27, 28, 30, 32, 33, 41, 44, 45, 47, 50, 54, 55, 56, 59, 61, 62, 64, 66, 69, 76, 78, 83, 87, 88, 92, 93, 98, 99, 100, 102, 104, 105, 114, 116, 120, 126, 129, 130, 131, 133, 134, 136, 139, 143, 151, 156, 157, 159, 165, 172, 175, 180, 182, 198, 200, 204, 210, 212, 214, 215, 223, 224, 225, 230, 231, 234, 237, 238, 239, 240, 241, 243, 247, 249, 255, 256, 257, 262, 265, 269, 277, 278, 279, 280, 284, 286, 287, 300, 301, 303, 304, 306, 313, 314, 317, 318, 319, 320, 321, 323, 324, 325, 327, 328, 330, 331, 332, 335, 337, 338, 340, 342, 343, 344, 347, 355, 358, 359, 360, 361, 362, 363, 365, 371, 374, 375, 376, 377, 379, 388, 397, 398, 400, 402, 403, 404, 405, 406, 407, 410, 411, 416, 417, 419, 421, 424, 426, 430, 431, 434, 439, 440, 441, 442, 443, 444, 446, 447, 450, 451, 455, 456, 458, 460], "older": [5, 55, 61, 71, 73, 78, 90, 99, 101, 114, 125, 166, 175, 179, 191, 216, 219, 224, 236, 239, 240, 256, 277, 280, 282, 296, 300, 310, 320, 321, 331, 340, 354, 363, 372, 390, 397, 405, 407, 419, 434, 437, 440, 443, 444, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458], "py_ssize_t_clean": [5, 34, 57, 70, 71, 74, 442, 447, 450, 457], "must": [5, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 38, 40, 41, 42, 43, 44, 46, 47, 50, 54, 56, 57, 58, 59, 61, 62, 64, 69, 71, 73, 74, 75, 77, 78, 82, 83, 84, 85, 87, 88, 90, 91, 92, 93, 95, 96, 97, 101, 102, 103, 106, 107, 110, 111, 114, 115, 116, 119, 120, 121, 126, 127, 132, 133, 134, 136, 137, 139, 142, 143, 144, 145, 148, 150, 151, 156, 157, 159, 162, 164, 165, 166, 170, 172, 173, 175, 177, 178, 179, 180, 182, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 202, 203, 207, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 229, 231, 232, 234, 236, 237, 238, 243, 245, 246, 247, 249, 250, 254, 255, 256, 257, 258, 259, 261, 262, 263, 265, 266, 268, 269, 275, 276, 277, 279, 280, 282, 284, 286, 290, 296, 298, 299, 300, 301, 302, 304, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 331, 332, 334, 335, 337, 338, 339, 340, 343, 344, 347, 349, 353, 355, 356, 357, 359, 361, 363, 365, 366, 367, 371, 372, 374, 375, 376, 377, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 410, 411, 412, 413, 415, 416, 417, 418, 421, 423, 424, 425, 430, 431, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 460], "befor": [5, 7, 10, 13, 17, 20, 22, 23, 24, 27, 28, 30, 33, 34, 37, 41, 44, 49, 50, 53, 54, 55, 56, 57, 58, 61, 62, 64, 65, 70, 71, 73, 74, 75, 76, 77, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 97, 98, 99, 100, 102, 103, 105, 106, 110, 114, 115, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 140, 142, 143, 145, 147, 148, 149, 150, 156, 157, 159, 160, 164, 165, 166, 172, 173, 175, 179, 180, 182, 184, 185, 190, 192, 194, 200, 202, 207, 212, 214, 215, 216, 220, 221, 223, 231, 232, 234, 236, 237, 238, 243, 246, 247, 249, 254, 255, 256, 257, 258, 259, 263, 265, 269, 272, 273, 276, 277, 279, 280, 282, 283, 287, 289, 290, 291, 295, 296, 300, 301, 302, 306, 307, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 330, 331, 332, 335, 337, 338, 340, 342, 343, 344, 353, 359, 360, 361, 362, 363, 365, 366, 367, 371, 372, 375, 376, 377, 378, 381, 383, 385, 386, 387, 388, 389, 390, 391, 395, 397, 400, 401, 402, 403, 404, 405, 406, 407, 410, 411, 413, 415, 416, 417, 418, 421, 423, 424, 425, 429, 430, 431, 436, 437, 438, 439, 440, 441, 442, 443, 444, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "variant": [5, 22, 30, 39, 40, 46, 47, 50, 55, 61, 71, 78, 82, 91, 93, 99, 102, 105, 114, 120, 124, 128, 148, 150, 157, 166, 172, 173, 175, 180, 192, 214, 215, 234, 237, 249, 268, 269, 275, 277, 278, 279, 285, 314, 318, 320, 321, 337, 365, 366, 367, 368, 372, 374, 391, 403, 407, 421, 425, 442, 443, 444, 445, 448, 449, 450, 453, 456, 457, 458], "y": [5, 7, 33, 34, 56, 70, 71, 75, 76, 78, 82, 87, 88, 90, 91, 92, 93, 98, 99, 105, 106, 114, 116, 136, 150, 152, 157, 165, 166, 168, 170, 172, 175, 179, 182, 199, 214, 215, 236, 249, 255, 256, 257, 262, 269, 275, 295, 315, 316, 320, 321, 323, 324, 325, 331, 344, 347, 353, 361, 363, 375, 378, 394, 395, 396, 402, 403, 405, 406, 410, 411, 415, 416, 417, 418, 421, 424, 426, 427, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 453, 454, 456, 457, 458], "etc": [5, 33, 62, 77, 85, 88, 92, 93, 98, 99, 103, 105, 106, 114, 117, 124, 127, 139, 145, 158, 164, 174, 195, 200, 214, 229, 232, 233, 236, 240, 243, 246, 247, 254, 255, 257, 263, 269, 270, 276, 277, 279, 285, 289, 290, 292, 293, 301, 311, 316, 318, 320, 321, 323, 337, 343, 344, 347, 361, 363, 365, 371, 383, 385, 397, 403, 406, 411, 412, 415, 416, 417, 422, 424, 425, 426, 428, 431, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 451, 452, 453, 454, 455, 457, 458], "explain": [5, 34, 41, 44, 61, 71, 73, 74, 75, 77, 83, 85, 87, 90, 93, 96, 98, 99, 101, 102, 105, 106, 109, 119, 161, 165, 182, 202, 214, 224, 232, 234, 236, 243, 249, 276, 280, 323, 324, 347, 353, 365, 366, 370, 399, 405, 414, 415, 419, 428, 429, 430, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "below": [5, 7, 23, 24, 30, 32, 34, 44, 53, 55, 57, 58, 59, 61, 62, 64, 71, 74, 83, 85, 86, 88, 91, 92, 93, 98, 99, 106, 109, 110, 114, 115, 124, 127, 128, 130, 132, 137, 140, 142, 144, 148, 150, 157, 161, 162, 164, 166, 168, 170, 172, 175, 177, 178, 180, 182, 184, 192, 197, 202, 210, 212, 214, 216, 219, 222, 224, 225, 229, 231, 232, 234, 236, 237, 238, 242, 246, 254, 255, 256, 257, 261, 263, 268, 269, 275, 276, 277, 279, 280, 289, 292, 296, 298, 300, 301, 302, 303, 304, 306, 310, 311, 313, 314, 315, 316, 317, 319, 321, 322, 323, 324, 325, 326, 327, 328, 331, 333, 335, 336, 337, 338, 340, 342, 343, 344, 347, 349, 353, 357, 361, 363, 365, 366, 367, 372, 379, 382, 388, 389, 394, 395, 397, 399, 401, 402, 403, 404, 405, 406, 407, 410, 415, 416, 419, 436, 437, 438, 440, 442, 443, 444, 445, 447, 449, 453, 454], "necessari": [5, 18, 32, 34, 47, 55, 59, 61, 62, 70, 71, 74, 75, 76, 77, 78, 82, 83, 85, 91, 92, 93, 96, 97, 98, 99, 101, 102, 104, 110, 114, 127, 133, 136, 144, 145, 148, 151, 157, 159, 166, 173, 175, 180, 182, 183, 184, 185, 194, 195, 196, 197, 198, 202, 214, 215, 216, 231, 232, 236, 237, 238, 242, 246, 249, 254, 255, 258, 259, 262, 265, 269, 275, 276, 277, 278, 279, 282, 284, 288, 290, 298, 314, 317, 318, 320, 321, 324, 326, 327, 328, 332, 334, 335, 340, 342, 343, 345, 350, 352, 353, 361, 365, 372, 375, 378, 381, 383, 385, 387, 390, 394, 397, 403, 404, 405, 406, 411, 414, 415, 417, 418, 428, 436, 439, 440, 442, 443, 444, 446, 448, 449, 452, 453, 454, 455, 457], "13": [5, 22, 30, 32, 38, 39, 44, 47, 57, 58, 62, 65, 66, 70, 71, 88, 93, 95, 99, 100, 105, 116, 133, 143, 148, 150, 161, 165, 172, 173, 180, 182, 200, 202, 215, 217, 225, 230, 234, 247, 249, 254, 255, 265, 278, 279, 280, 301, 304, 314, 320, 321, 323, 324, 325, 327, 337, 338, 344, 354, 355, 358, 362, 363, 366, 372, 375, 377, 404, 405, 416, 419, 421, 423, 424, 425, 431, 436, 439, 440, 441, 442, 443, 444, 448, 451, 453, 454, 456, 457, 458, 460], "later": [5, 13, 22, 23, 24, 27, 32, 33, 34, 41, 44, 59, 70, 71, 73, 74, 82, 84, 88, 90, 93, 98, 99, 102, 103, 106, 109, 114, 119, 120, 132, 133, 134, 135, 142, 144, 145, 148, 157, 159, 165, 166, 172, 180, 185, 191, 194, 219, 224, 232, 236, 238, 243, 246, 249, 253, 254, 256, 258, 266, 269, 276, 277, 282, 301, 307, 310, 313, 315, 318, 320, 321, 331, 337, 338, 340, 358, 363, 365, 366, 367, 372, 376, 377, 378, 396, 399, 401, 402, 403, 405, 407, 411, 414, 415, 416, 417, 424, 425, 430, 431, 436, 437, 438, 439, 440, 443, 444, 445, 448, 449, 451, 453, 454, 456, 458], "contigu": [5, 42, 76, 85, 179, 237, 249, 259, 282, 324, 390, 443, 452], "chunk": [5, 13, 42, 76, 83, 88, 99, 103, 105, 127, 142, 156, 169, 212, 214, 224, 229, 231, 246, 249, 250, 258, 269, 270, 277, 285, 296, 314, 316, 318, 327, 372, 383, 390, 391, 405, 437, 440, 442, 444, 448, 449, 450, 455], "raw": [5, 7, 61, 85, 98, 102, 114, 116, 157, 165, 166, 180, 182, 185, 186, 194, 195, 196, 214, 219, 243, 258, 269, 277, 279, 282, 311, 313, 318, 319, 321, 324, 344, 345, 347, 358, 360, 372, 374, 378, 390, 399, 402, 410, 424, 438, 440, 442, 443, 445, 448, 449, 452, 454], "storag": [5, 34, 41, 53, 76, 85, 91, 97, 99, 105, 148, 157, 166, 180, 238, 246, 249, 270, 277, 283, 312, 320, 324, 327, 338, 388, 415, 439, 442, 443, 444, 449, 452, 453], "unicod": [5, 16, 27, 30, 31, 38, 44, 61, 66, 78, 83, 85, 88, 90, 94, 99, 101, 102, 115, 136, 139, 157, 164, 165, 166, 171, 172, 175, 182, 183, 184, 185, 186, 189, 190, 191, 192, 197, 198, 202, 210, 214, 219, 227, 228, 229, 236, 242, 246, 250, 254, 268, 277, 278, 279, 282, 284, 301, 320, 324, 325, 326, 331, 341, 355, 363, 371, 376, 381, 383, 386, 387, 388, 397, 400, 403, 405, 410, 417, 430, 431, 438, 442, 443, 444, 446, 447, 448, 449, 450, 453, 454, 455, 456, 457, 458], "area": [5, 7, 41, 44, 61, 78, 90, 92, 98, 99, 105, 166, 185, 194, 214, 236, 245, 246, 265, 282, 304, 318, 321, 323, 338, 349, 353, 409, 420, 421, 437, 442, 443, 448, 453, 456], "unless": [5, 7, 9, 13, 22, 23, 24, 26, 27, 30, 34, 41, 49, 52, 54, 55, 56, 57, 61, 71, 74, 76, 83, 84, 87, 92, 93, 97, 98, 102, 103, 109, 111, 114, 116, 119, 120, 123, 133, 134, 142, 143, 151, 157, 159, 164, 170, 172, 175, 180, 182, 185, 189, 194, 195, 198, 214, 215, 229, 231, 232, 233, 236, 238, 243, 246, 247, 249, 255, 256, 258, 259, 262, 269, 276, 277, 278, 280, 291, 296, 301, 305, 310, 311, 314, 316, 317, 318, 319, 320, 321, 323, 324, 325, 328, 331, 332, 333, 337, 342, 343, 363, 365, 366, 371, 372, 375, 376, 378, 382, 383, 387, 390, 401, 402, 403, 404, 405, 410, 413, 415, 416, 421, 425, 430, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 452, 453, 455, 456, 457, 458], "otherwis": [5, 7, 10, 11, 13, 18, 22, 23, 27, 28, 30, 32, 33, 34, 35, 38, 39, 41, 42, 44, 46, 47, 50, 52, 55, 56, 57, 59, 61, 62, 64, 71, 74, 76, 77, 84, 87, 88, 92, 93, 98, 99, 102, 103, 106, 111, 114, 115, 116, 120, 123, 127, 128, 129, 130, 132, 133, 139, 142, 143, 144, 145, 147, 148, 150, 153, 156, 157, 159, 160, 164, 165, 166, 168, 170, 172, 173, 174, 175, 179, 180, 182, 184, 185, 186, 188, 189, 191, 194, 195, 197, 198, 199, 200, 203, 205, 207, 212, 214, 215, 216, 218, 219, 221, 223, 231, 232, 233, 234, 236, 238, 239, 242, 243, 245, 246, 247, 249, 250, 255, 256, 257, 259, 262, 263, 265, 268, 269, 272, 275, 276, 277, 278, 279, 280, 282, 284, 285, 286, 287, 289, 293, 294, 296, 298, 301, 303, 306, 308, 310, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 328, 331, 332, 333, 334, 335, 337, 338, 340, 342, 343, 344, 347, 353, 355, 358, 359, 361, 364, 365, 366, 367, 371, 372, 374, 375, 376, 377, 378, 379, 382, 383, 386, 388, 390, 394, 395, 396, 397, 399, 400, 402, 403, 405, 406, 407, 410, 411, 412, 413, 415, 417, 421, 430, 431, 436, 438, 442, 443, 444, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457], "state": [5, 13, 17, 22, 23, 24, 27, 30, 34, 44, 49, 50, 51, 57, 59, 61, 66, 71, 73, 74, 82, 83, 85, 88, 90, 93, 95, 98, 101, 102, 106, 120, 121, 123, 127, 132, 133, 134, 137, 144, 147, 148, 150, 156, 157, 159, 160, 161, 166, 180, 201, 202, 207, 215, 216, 224, 230, 232, 237, 238, 242, 244, 246, 247, 256, 258, 259, 277, 280, 285, 290, 296, 298, 300, 302, 305, 307, 310, 315, 318, 319, 320, 321, 324, 328, 331, 340, 343, 344, 347, 358, 362, 365, 366, 367, 371, 372, 376, 378, 381, 386, 387, 399, 400, 401, 403, 405, 407, 415, 416, 423, 427, 437, 439, 440, 442, 447, 448, 449, 450, 451, 452, 453, 456, 457, 458], "nul": [5, 7, 61, 88, 165, 166, 167, 226, 257, 270, 277, 279, 296, 327, 331, 394, 451, 452], "termin": [5, 7, 9, 16, 30, 32, 33, 36, 38, 44, 56, 58, 59, 61, 62, 64, 66, 71, 82, 83, 84, 90, 93, 97, 98, 99, 105, 110, 112, 114, 120, 124, 126, 127, 131, 133, 134, 143, 145, 156, 164, 165, 167, 178, 179, 180, 182, 196, 197, 203, 214, 218, 231, 234, 236, 242, 243, 246, 249, 253, 254, 257, 259, 269, 272, 276, 280, 284, 290, 301, 304, 315, 317, 319, 320, 321, 324, 325, 328, 331, 338, 339, 343, 347, 354, 361, 368, 372, 376, 381, 383, 386, 388, 390, 401, 402, 404, 405, 407, 410, 411, 415, 416, 418, 428, 430, 434, 437, 441, 442, 443, 445, 451, 452, 454, 456, 457], "There": [5, 6, 7, 10, 13, 22, 23, 25, 26, 27, 32, 33, 34, 35, 40, 41, 44, 45, 47, 55, 56, 61, 62, 65, 70, 71, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 87, 88, 90, 92, 93, 97, 98, 99, 101, 102, 103, 104, 105, 107, 114, 116, 119, 126, 127, 133, 136, 144, 145, 148, 149, 150, 153, 157, 165, 168, 170, 172, 173, 175, 179, 182, 185, 192, 196, 197, 198, 200, 214, 215, 219, 224, 232, 236, 237, 238, 239, 243, 245, 246, 247, 249, 254, 255, 256, 259, 261, 269, 273, 276, 277, 279, 280, 282, 290, 296, 310, 313, 315, 318, 319, 320, 321, 323, 324, 326, 327, 328, 332, 337, 338, 343, 345, 347, 353, 361, 363, 365, 366, 367, 372, 375, 376, 383, 385, 386, 389, 390, 396, 397, 399, 402, 403, 405, 406, 407, 410, 415, 416, 417, 418, 420, 421, 424, 425, 426, 429, 432, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 449, 451, 452, 453, 454, 455, 456, 457, 458], "wai": [5, 7, 9, 10, 13, 23, 25, 30, 32, 33, 34, 41, 43, 44, 50, 55, 56, 57, 59, 61, 62, 64, 70, 71, 72, 73, 74, 76, 77, 78, 81, 82, 84, 85, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 114, 115, 116, 118, 119, 120, 123, 127, 132, 133, 137, 144, 147, 148, 149, 150, 151, 153, 157, 159, 161, 162, 164, 165, 166, 170, 172, 175, 177, 179, 182, 183, 184, 185, 189, 190, 194, 196, 197, 198, 200, 208, 212, 214, 217, 219, 224, 225, 232, 234, 236, 237, 238, 239, 243, 245, 246, 247, 249, 254, 255, 256, 257, 258, 259, 261, 262, 265, 267, 269, 270, 275, 276, 277, 279, 280, 282, 289, 290, 300, 301, 306, 308, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 324, 327, 328, 331, 332, 333, 336, 337, 338, 340, 343, 345, 347, 355, 358, 361, 363, 364, 365, 366, 367, 371, 372, 374, 376, 378, 379, 383, 385, 388, 390, 394, 395, 396, 400, 401, 402, 403, 404, 405, 407, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 421, 423, 424, 425, 426, 427, 428, 431, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458], "convert": [5, 7, 10, 14, 15, 18, 25, 32, 34, 38, 46, 50, 53, 54, 56, 57, 62, 64, 66, 70, 71, 73, 74, 76, 82, 85, 90, 91, 92, 93, 97, 98, 99, 102, 103, 114, 115, 120, 133, 137, 141, 144, 145, 148, 150, 152, 157, 164, 165, 166, 167, 170, 172, 173, 175, 179, 180, 182, 183, 184, 185, 186, 189, 190, 191, 192, 194, 195, 197, 198, 202, 204, 209, 212, 214, 215, 219, 227, 229, 233, 237, 242, 247, 249, 250, 254, 255, 256, 257, 258, 259, 261, 262, 263, 269, 271, 273, 275, 276, 277, 278, 282, 284, 289, 291, 300, 301, 308, 317, 318, 322, 323, 324, 325, 327, 331, 337, 340, 344, 353, 355, 356, 360, 363, 365, 371, 372, 374, 376, 381, 383, 386, 388, 390, 394, 400, 402, 403, 405, 410, 411, 418, 419, 421, 424, 426, 430, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "fill": [5, 7, 22, 32, 33, 37, 41, 44, 46, 53, 58, 61, 62, 66, 73, 74, 78, 83, 90, 93, 97, 99, 101, 103, 106, 114, 116, 132, 164, 165, 166, 172, 175, 182, 185, 190, 194, 214, 234, 236, 238, 242, 246, 249, 257, 277, 317, 318, 320, 321, 324, 325, 327, 328, 340, 341, 344, 347, 403, 405, 407, 427, 431, 437, 439, 440, 441, 442, 443, 448, 449, 451, 452, 454, 455], "py_buff": [5, 7, 42, 55, 61, 443, 448, 450, 452], "lock": [5, 30, 49, 61, 71, 74, 85, 97, 99, 103, 110, 118, 135, 156, 157, 159, 165, 173, 201, 204, 215, 230, 246, 255, 257, 258, 259, 268, 269, 277, 287, 298, 300, 304, 306, 312, 315, 319, 320, 322, 331, 340, 347, 363, 378, 403, 427, 431, 437, 439, 441, 442, 443, 444, 445, 448, 449, 451, 454, 456, 457, 458], "subsequ": [5, 23, 32, 44, 58, 62, 83, 86, 91, 98, 102, 110, 114, 128, 149, 166, 179, 180, 191, 195, 197, 200, 212, 215, 232, 238, 243, 246, 249, 256, 257, 259, 265, 269, 275, 276, 277, 278, 298, 301, 314, 318, 321, 323, 324, 325, 331, 335, 337, 338, 343, 347, 361, 366, 372, 399, 401, 402, 405, 407, 409, 411, 416, 417, 440, 441, 442, 443, 444, 446, 448, 454, 457], "even": [5, 9, 18, 23, 26, 30, 32, 33, 34, 41, 44, 55, 56, 57, 60, 61, 62, 71, 74, 76, 77, 78, 79, 82, 83, 84, 85, 87, 88, 91, 92, 93, 97, 99, 101, 102, 103, 104, 105, 107, 111, 114, 116, 119, 120, 126, 133, 139, 144, 148, 151, 153, 156, 157, 158, 159, 165, 166, 170, 172, 175, 177, 182, 183, 185, 187, 188, 194, 195, 196, 197, 200, 202, 203, 204, 207, 210, 214, 215, 224, 225, 228, 232, 236, 238, 239, 243, 246, 247, 249, 253, 254, 255, 256, 257, 258, 259, 262, 269, 276, 277, 278, 279, 280, 282, 289, 290, 300, 301, 313, 314, 315, 316, 317, 318, 320, 321, 323, 324, 325, 327, 331, 332, 333, 337, 338, 340, 342, 343, 344, 347, 353, 359, 361, 363, 364, 365, 366, 367, 372, 375, 376, 378, 379, 381, 383, 386, 390, 392, 394, 397, 400, 401, 402, 403, 405, 406, 407, 409, 410, 411, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 430, 431, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 458], "insid": [5, 7, 10, 11, 32, 41, 61, 72, 74, 76, 83, 84, 85, 88, 90, 93, 102, 103, 108, 109, 116, 129, 137, 159, 164, 166, 175, 185, 188, 194, 199, 214, 215, 216, 229, 239, 240, 245, 246, 250, 269, 270, 279, 280, 282, 284, 298, 301, 314, 315, 318, 325, 347, 353, 361, 363, 365, 366, 367, 388, 395, 397, 398, 402, 403, 404, 405, 410, 415, 416, 417, 418, 421, 424, 428, 436, 438, 439, 440, 441, 442, 443, 445, 448, 449, 451, 453, 455, 456, 457], "py_begin_allow_thread": [5, 32, 55, 71], "block": [5, 7, 23, 32, 34, 41, 44, 53, 61, 71, 73, 75, 76, 85, 88, 90, 91, 102, 106, 109, 110, 116, 120, 124, 127, 128, 129, 130, 131, 132, 133, 137, 139, 142, 159, 165, 166, 167, 175, 177, 179, 180, 182, 188, 196, 197, 201, 202, 204, 212, 214, 215, 221, 223, 224, 226, 231, 232, 236, 237, 243, 245, 246, 249, 257, 268, 269, 270, 277, 279, 287, 295, 298, 304, 307, 309, 310, 311, 312, 314, 315, 317, 318, 320, 322, 328, 330, 331, 332, 337, 340, 343, 347, 363, 365, 366, 372, 377, 379, 381, 382, 386, 391, 403, 404, 405, 406, 407, 411, 416, 418, 421, 424, 426, 430, 438, 439, 440, 442, 443, 444, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458], "without": [5, 7, 8, 9, 10, 12, 13, 22, 23, 25, 26, 28, 32, 33, 34, 37, 38, 41, 44, 47, 49, 52, 53, 55, 56, 57, 59, 61, 64, 70, 71, 73, 74, 76, 77, 81, 83, 85, 87, 88, 90, 91, 92, 93, 95, 97, 98, 99, 102, 103, 104, 107, 109, 110, 111, 114, 116, 119, 120, 127, 128, 129, 130, 131, 133, 134, 140, 142, 145, 148, 150, 156, 157, 159, 160, 161, 164, 165, 166, 170, 172, 173, 175, 177, 179, 180, 181, 182, 183, 185, 186, 191, 194, 197, 198, 200, 202, 203, 207, 212, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 228, 229, 232, 233, 237, 238, 240, 241, 243, 245, 246, 247, 249, 253, 254, 255, 258, 259, 262, 265, 268, 269, 273, 275, 276, 277, 278, 279, 280, 282, 287, 290, 291, 296, 298, 300, 301, 304, 305, 306, 307, 310, 312, 314, 316, 318, 320, 321, 324, 325, 327, 328, 331, 332, 333, 337, 338, 340, 342, 343, 344, 345, 347, 359, 361, 362, 363, 365, 366, 367, 371, 372, 375, 376, 377, 378, 379, 383, 385, 386, 388, 391, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 410, 411, 413, 415, 416, 417, 418, 421, 424, 425, 426, 427, 430, 431, 437, 438, 439, 440, 441, 442, 443, 444, 445, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "risk": [5, 41, 42, 71, 76, 83, 85, 93, 120, 202, 256, 259, 269, 276, 282, 308, 340, 361, 388, 396, 401, 443, 451, 456, 457], "mutabl": [5, 27, 28, 32, 34, 61, 76, 83, 85, 93, 97, 150, 151, 161, 165, 192, 204, 214, 215, 243, 269, 270, 275, 277, 280, 282, 312, 378, 388, 399, 402, 405, 411, 415, 416, 417, 424, 437, 440, 442, 443, 444, 445, 447, 448, 449, 450, 455, 458], "data": [5, 7, 9, 10, 13, 21, 24, 28, 31, 32, 34, 41, 47, 50, 52, 53, 54, 55, 56, 58, 60, 61, 62, 63, 66, 70, 71, 73, 75, 77, 78, 84, 85, 86, 87, 88, 90, 91, 95, 97, 99, 100, 102, 104, 109, 110, 112, 114, 115, 116, 118, 120, 124, 127, 128, 131, 135, 137, 139, 140, 142, 143, 147, 148, 150, 156, 157, 158, 159, 161, 164, 166, 167, 168, 172, 173, 175, 179, 180, 184, 185, 186, 187, 190, 192, 195, 196, 197, 201, 202, 204, 212, 214, 215, 219, 223, 224, 225, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 245, 246, 249, 250, 254, 255, 257, 259, 260, 261, 263, 265, 269, 270, 272, 274, 276, 277, 279, 283, 284, 286, 288, 290, 291, 296, 297, 298, 300, 301, 308, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 331, 334, 337, 338, 339, 340, 341, 344, 350, 353, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 370, 371, 372, 377, 378, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 405, 407, 408, 414, 415, 416, 418, 419, 420, 424, 425, 429, 431, 437, 438, 439, 440, 442, 443, 444, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 458], "being": [5, 7, 10, 13, 16, 22, 23, 27, 28, 32, 34, 37, 43, 44, 58, 59, 61, 62, 64, 71, 72, 73, 74, 76, 78, 82, 83, 85, 88, 90, 91, 92, 93, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 114, 115, 116, 120, 127, 130, 133, 142, 143, 148, 150, 151, 153, 156, 157, 158, 159, 160, 164, 165, 166, 170, 172, 173, 180, 182, 184, 185, 191, 194, 197, 200, 202, 205, 207, 214, 215, 216, 219, 221, 223, 225, 234, 236, 237, 238, 243, 246, 247, 249, 250, 254, 255, 256, 257, 258, 259, 263, 265, 269, 276, 277, 279, 280, 282, 284, 285, 289, 290, 291, 294, 296, 300, 301, 302, 306, 310, 311, 312, 314, 315, 317, 318, 319, 320, 321, 323, 324, 325, 327, 328, 331, 332, 334, 336, 338, 340, 342, 343, 344, 345, 347, 353, 358, 363, 365, 366, 367, 370, 371, 372, 375, 376, 378, 383, 385, 388, 389, 390, 392, 396, 397, 401, 402, 403, 405, 407, 409, 411, 414, 415, 416, 418, 419, 421, 424, 425, 427, 430, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458], "resiz": [5, 8, 9, 28, 41, 52, 54, 58, 62, 76, 165, 166, 246, 265, 315, 324, 347, 353, 361, 365, 448, 454, 456], "destroi": [5, 11, 13, 22, 27, 32, 50, 58, 61, 65, 76, 85, 93, 97, 103, 236, 246, 265, 269, 270, 276, 325, 338, 343, 347, 365, 376, 378, 381, 403, 407, 437, 439, 440, 442, 451, 455, 456, 458], "As": [5, 6, 7, 10, 14, 23, 24, 27, 32, 34, 47, 50, 52, 57, 58, 62, 70, 71, 73, 74, 76, 78, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 109, 114, 116, 120, 130, 141, 142, 145, 148, 149, 150, 157, 159, 165, 170, 172, 173, 175, 179, 180, 182, 190, 192, 194, 197, 214, 216, 219, 224, 229, 231, 233, 236, 238, 240, 246, 247, 250, 254, 255, 256, 257, 259, 269, 270, 276, 277, 279, 280, 282, 285, 290, 294, 301, 306, 308, 312, 319, 320, 321, 324, 325, 326, 327, 328, 331, 332, 338, 340, 342, 343, 347, 353, 361, 363, 365, 366, 367, 371, 372, 383, 385, 388, 389, 396, 397, 401, 403, 405, 407, 410, 415, 416, 417, 418, 419, 421, 423, 425, 430, 431, 436, 437, 438, 439, 440, 441, 442, 444, 445, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458], "result": [5, 7, 8, 9, 10, 13, 15, 20, 22, 23, 26, 30, 32, 33, 34, 35, 38, 39, 41, 44, 46, 47, 51, 52, 56, 57, 58, 59, 61, 62, 64, 66, 70, 71, 73, 74, 84, 85, 87, 88, 90, 91, 92, 93, 96, 97, 98, 99, 101, 102, 105, 109, 114, 116, 117, 119, 120, 121, 123, 127, 129, 131, 132, 133, 135, 136, 137, 139, 140, 144, 148, 149, 150, 153, 156, 157, 158, 159, 160, 165, 166, 167, 170, 172, 175, 179, 180, 182, 185, 186, 188, 190, 192, 194, 195, 196, 197, 198, 200, 201, 202, 204, 205, 208, 212, 214, 215, 216, 219, 220, 223, 224, 226, 231, 232, 233, 234, 236, 237, 238, 240, 242, 243, 246, 247, 249, 250, 254, 255, 256, 257, 258, 259, 262, 263, 265, 268, 269, 270, 275, 276, 277, 278, 279, 280, 282, 285, 287, 289, 290, 291, 293, 299, 300, 301, 303, 304, 306, 308, 310, 313, 314, 315, 317, 318, 320, 321, 323, 324, 325, 326, 327, 328, 330, 331, 334, 337, 338, 340, 342, 343, 344, 345, 347, 353, 355, 357, 358, 359, 361, 362, 363, 365, 366, 367, 372, 374, 376, 378, 379, 381, 383, 384, 385, 386, 388, 391, 392, 394, 395, 396, 397, 399, 400, 401, 402, 403, 405, 406, 407, 410, 411, 416, 417, 418, 419, 421, 422, 424, 425, 426, 427, 431, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "pybuffer_releas": [5, 7, 55, 61, 88, 443, 448, 450], "finish": [5, 33, 41, 59, 61, 70, 77, 82, 83, 85, 88, 95, 98, 99, 116, 118, 119, 120, 122, 129, 131, 132, 133, 137, 142, 145, 156, 159, 202, 216, 221, 231, 246, 258, 269, 270, 296, 298, 315, 319, 320, 321, 324, 328, 337, 340, 349, 365, 379, 386, 387, 388, 391, 394, 397, 399, 402, 403, 418, 421, 427, 430, 442, 443, 448, 451, 452, 454, 455, 458], "earli": [5, 33, 34, 73, 78, 159, 216, 230, 243, 257, 276, 315, 321, 323, 324, 343, 347, 359, 386, 397, 401, 405, 407, 437, 441, 443, 451], "abort": [5, 34, 41, 57, 71, 99, 120, 124, 127, 130, 132, 201, 202, 212, 237, 268, 277, 280, 315, 320, 321, 331, 337, 343, 365, 407, 440, 456], "et": [5, 77, 88, 99, 170, 318, 321, 353, 388, 439, 442, 444, 447], "alloc": [5, 7, 10, 23, 28, 30, 31, 33, 34, 44, 47, 48, 54, 56, 57, 61, 62, 64, 66, 70, 71, 74, 76, 83, 85, 91, 97, 103, 110, 124, 127, 159, 165, 174, 177, 203, 216, 242, 246, 247, 269, 270, 277, 282, 296, 298, 304, 318, 331, 343, 353, 381, 391, 430, 431, 437, 438, 439, 442, 444, 447, 448, 449, 451, 452, 454, 455, 456, 457, 458], "pymem_fre": [5, 18, 33, 41, 55, 57, 62, 440, 442], "str": [5, 10, 18, 22, 24, 25, 26, 30, 32, 33, 34, 38, 39, 47, 56, 57, 61, 62, 64, 73, 74, 76, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 104, 105, 109, 114, 116, 120, 130, 135, 139, 142, 145, 148, 150, 153, 157, 159, 164, 166, 170, 171, 172, 175, 177, 179, 180, 184, 185, 186, 190, 191, 192, 194, 197, 198, 200, 202, 210, 214, 215, 223, 224, 225, 226, 229, 231, 233, 236, 239, 240, 243, 246, 247, 249, 250, 254, 255, 256, 258, 269, 270, 275, 276, 277, 279, 282, 288, 300, 301, 313, 317, 319, 320, 321, 325, 327, 328, 331, 332, 337, 338, 340, 341, 342, 345, 355, 356, 359, 362, 363, 365, 366, 371, 374, 376, 378, 381, 385, 388, 389, 394, 397, 400, 402, 403, 405, 410, 415, 416, 417, 418, 419, 421, 424, 425, 426, 427, 430, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "read": [5, 7, 22, 23, 24, 25, 30, 32, 33, 40, 41, 42, 56, 59, 61, 62, 64, 66, 70, 71, 73, 74, 76, 77, 78, 83, 84, 85, 87, 88, 90, 91, 92, 93, 95, 98, 99, 101, 102, 103, 106, 109, 111, 113, 114, 115, 116, 119, 121, 124, 130, 131, 134, 136, 139, 141, 142, 145, 147, 148, 149, 150, 151, 153, 156, 157, 160, 165, 166, 170, 172, 173, 177, 178, 179, 180, 182, 183, 189, 192, 193, 196, 197, 200, 201, 202, 204, 205, 206, 207, 208, 212, 214, 215, 216, 218, 219, 223, 224, 225, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 245, 246, 250, 253, 256, 259, 261, 263, 264, 265, 267, 268, 269, 270, 272, 276, 277, 278, 279, 280, 282, 284, 285, 286, 287, 290, 291, 294, 295, 296, 301, 302, 307, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 331, 334, 338, 343, 344, 347, 353, 355, 356, 357, 358, 359, 361, 362, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 378, 383, 385, 388, 389, 390, 391, 392, 394, 396, 397, 399, 400, 401, 402, 403, 405, 407, 410, 412, 413, 414, 415, 416, 418, 420, 423, 424, 425, 426, 427, 429, 430, 431, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460], "char": [5, 7, 8, 9, 10, 11, 13, 14, 17, 18, 22, 23, 24, 25, 26, 30, 32, 33, 34, 38, 39, 40, 41, 42, 44, 47, 49, 51, 52, 56, 57, 58, 59, 61, 62, 64, 70, 71, 73, 74, 77, 88, 95, 115, 139, 148, 165, 166, 191, 229, 236, 250, 268, 324, 325, 327, 345, 347, 363, 384, 388, 403, 415, 440, 442, 443, 444, 447, 450, 453, 456, 457], "share": [5, 7, 32, 34, 40, 41, 44, 55, 56, 61, 62, 66, 69, 71, 74, 75, 77, 82, 85, 92, 95, 97, 99, 100, 103, 107, 110, 114, 116, 127, 132, 154, 161, 170, 172, 175, 201, 204, 215, 216, 219, 224, 226, 242, 247, 249, 254, 255, 261, 265, 273, 276, 277, 278, 279, 282, 293, 300, 304, 308, 312, 318, 319, 320, 322, 324, 325, 331, 333, 337, 338, 343, 344, 347, 365, 366, 383, 399, 401, 402, 403, 405, 407, 415, 416, 419, 425, 427, 430, 431, 436, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 453, 455, 456, 457], "lifetim": [5, 34, 41, 71, 83, 85, 148, 156, 159, 214, 277, 381, 405, 415, 438, 452, 455, 456], "won": [5, 32, 33, 40, 61, 71, 73, 74, 76, 83, 88, 90, 92, 93, 96, 98, 99, 102, 105, 109, 111, 116, 127, 133, 156, 157, 172, 173, 175, 182, 195, 214, 216, 219, 220, 232, 255, 257, 272, 276, 277, 280, 282, 283, 311, 318, 327, 331, 347, 366, 391, 399, 419, 422, 430, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 451, 454, 456], "yourself": [5, 32, 34, 42, 70, 76, 83, 85, 88, 90, 92, 102, 103, 105, 116, 145, 166, 168, 182, 190, 200, 238, 250, 254, 255, 256, 257, 276, 280, 310, 317, 321, 331, 365, 366, 367, 385, 419, 421, 435, 436, 442, 445, 451], "ensur": [5, 18, 32, 33, 41, 44, 47, 49, 55, 57, 61, 64, 71, 74, 77, 82, 84, 86, 88, 90, 96, 97, 98, 99, 102, 108, 114, 120, 126, 127, 130, 131, 136, 148, 156, 159, 165, 170, 172, 175, 182, 185, 194, 199, 200, 215, 216, 225, 243, 250, 255, 257, 258, 265, 269, 270, 276, 277, 282, 306, 318, 320, 321, 323, 324, 328, 331, 339, 340, 342, 347, 350, 353, 359, 363, 365, 366, 367, 372, 374, 375, 376, 378, 381, 383, 394, 396, 397, 403, 405, 418, 425, 430, 431, 436, 437, 440, 442, 443, 444, 448, 451, 452, 453, 454, 455, 456, 457, 458], "safe": [5, 22, 23, 24, 32, 33, 34, 35, 41, 44, 47, 49, 50, 54, 57, 61, 62, 70, 71, 73, 74, 83, 85, 86, 99, 116, 119, 120, 123, 124, 126, 127, 128, 131, 132, 133, 136, 143, 150, 159, 164, 165, 166, 170, 182, 203, 214, 224, 226, 227, 236, 238, 246, 254, 255, 256, 258, 259, 269, 277, 282, 294, 298, 300, 306, 307, 308, 310, 312, 313, 314, 316, 318, 320, 321, 325, 328, 340, 343, 363, 366, 367, 371, 374, 376, 378, 384, 390, 415, 436, 437, 438, 440, 443, 444, 447, 448, 449, 451, 452, 456, 457], "pybufferproc": [5, 59, 61, 73], "bf_releasebuff": [5, 59, 61, 448], "disallow": [5, 32, 61, 76, 92, 114, 157, 170, 214, 277, 318, 320, 324, 363, 398, 402, 436, 443, 447, 449, 450, 453, 456, 457], "common": [5, 7, 23, 31, 32, 33, 34, 48, 61, 66, 71, 74, 76, 78, 79, 83, 85, 87, 90, 91, 92, 93, 98, 99, 103, 104, 105, 106, 109, 110, 114, 119, 122, 129, 133, 140, 148, 150, 157, 159, 164, 165, 170, 179, 182, 184, 189, 190, 192, 194, 196, 197, 200, 205, 208, 212, 214, 224, 225, 226, 232, 234, 236, 239, 242, 246, 247, 249, 250, 253, 255, 259, 262, 269, 270, 276, 277, 282, 285, 289, 300, 313, 314, 315, 317, 319, 320, 321, 323, 327, 328, 333, 339, 340, 341, 342, 343, 344, 345, 347, 351, 361, 363, 365, 366, 367, 368, 372, 375, 394, 396, 397, 399, 400, 401, 402, 403, 405, 406, 407, 416, 417, 418, 419, 424, 425, 426, 428, 430, 436, 437, 438, 439, 440, 441, 442, 443, 444, 447, 448, 451, 452, 453, 454, 456, 457, 458], "bytearrai": [5, 7, 8, 32, 33, 62, 76, 83, 85, 88, 127, 138, 139, 151, 165, 171, 180, 202, 204, 214, 224, 226, 246, 249, 250, 261, 265, 270, 282, 286, 300, 318, 321, 327, 363, 371, 376, 394, 399, 402, 403, 405, 425, 430, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 458], "memoryview": [5, 7, 16, 31, 66, 85, 138, 214, 270, 282, 314, 318, 331, 363, 402, 403, 425, 445, 449, 451, 453, 454, 457], "besid": [5, 74, 88, 91, 92, 150, 172, 214, 246, 315, 353, 378, 410, 411, 436, 447], "requir": [5, 7, 12, 18, 23, 28, 32, 34, 41, 44, 49, 56, 57, 61, 62, 69, 70, 71, 73, 74, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 95, 97, 98, 99, 101, 102, 105, 106, 107, 110, 111, 115, 116, 120, 126, 132, 133, 142, 143, 147, 148, 150, 151, 156, 157, 159, 160, 164, 166, 170, 172, 173, 174, 175, 178, 180, 182, 183, 184, 185, 189, 190, 191, 192, 196, 197, 199, 201, 202, 210, 212, 214, 215, 216, 217, 221, 223, 224, 225, 226, 229, 232, 234, 236, 237, 238, 240, 241, 243, 244, 245, 246, 249, 250, 253, 254, 255, 256, 257, 258, 259, 262, 268, 269, 270, 276, 277, 278, 279, 282, 283, 287, 289, 290, 296, 298, 301, 304, 310, 312, 314, 315, 317, 318, 319, 320, 321, 323, 324, 325, 327, 328, 331, 332, 335, 337, 338, 339, 340, 343, 344, 347, 353, 355, 358, 360, 361, 362, 363, 364, 365, 366, 371, 372, 374, 375, 378, 381, 383, 384, 385, 388, 389, 390, 391, 392, 394, 396, 397, 399, 400, 401, 402, 403, 405, 406, 407, 410, 411, 415, 416, 417, 419, 421, 422, 425, 427, 428, 430, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "check": [5, 7, 9, 10, 12, 16, 17, 20, 21, 23, 25, 30, 32, 33, 34, 35, 37, 40, 41, 42, 43, 44, 47, 49, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 65, 70, 71, 73, 74, 76, 78, 79, 82, 86, 87, 88, 90, 92, 93, 95, 97, 98, 99, 100, 102, 103, 105, 109, 111, 114, 116, 119, 120, 122, 123, 133, 136, 137, 142, 145, 150, 151, 153, 157, 159, 165, 166, 167, 170, 172, 175, 177, 180, 186, 189, 194, 197, 200, 202, 203, 204, 210, 212, 214, 215, 218, 221, 222, 229, 231, 232, 234, 236, 237, 243, 247, 250, 253, 255, 256, 257, 258, 262, 269, 272, 273, 277, 278, 279, 284, 285, 287, 302, 304, 309, 310, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 327, 328, 331, 336, 337, 340, 343, 353, 355, 359, 361, 362, 363, 365, 366, 372, 373, 375, 376, 378, 384, 388, 391, 394, 397, 399, 402, 405, 406, 407, 411, 414, 415, 416, 417, 421, 422, 423, 425, 429, 430, 431, 432, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457], "verifi": [5, 7, 73, 83, 91, 93, 95, 101, 151, 176, 182, 200, 224, 232, 238, 256, 257, 259, 277, 317, 320, 323, 340, 365, 376, 383, 436, 443, 444, 447, 448, 449, 451, 452, 453, 457], "immut": [5, 9, 10, 28, 32, 34, 58, 61, 62, 85, 91, 97, 116, 151, 164, 165, 170, 172, 175, 197, 210, 214, 215, 243, 255, 275, 277, 279, 300, 374, 402, 405, 415, 417, 424, 437, 440, 441, 442, 443, 444, 445, 447, 449, 450, 457, 458], "honor": [5, 78, 110, 239, 280, 331, 337, 395, 434, 443, 444, 455], "writabl": [5, 7, 42, 56, 82, 103, 114, 127, 142, 150, 237, 243, 246, 265, 269, 277, 286, 314, 318, 319, 321, 324, 327, 338, 347, 378, 397, 403, 407, 411, 415, 441, 443, 448, 452, 454, 455, 456], "anoth": [5, 7, 10, 22, 23, 30, 32, 34, 41, 55, 56, 61, 62, 66, 71, 72, 73, 74, 75, 76, 78, 81, 82, 84, 85, 87, 88, 90, 91, 92, 93, 97, 98, 99, 101, 102, 103, 104, 105, 106, 109, 110, 114, 115, 118, 119, 120, 126, 127, 129, 132, 133, 137, 145, 148, 150, 153, 156, 157, 159, 165, 166, 170, 172, 175, 182, 183, 185, 192, 202, 204, 210, 212, 214, 215, 219, 221, 224, 225, 232, 234, 236, 238, 243, 246, 249, 250, 255, 256, 258, 259, 265, 269, 275, 276, 277, 279, 280, 282, 290, 291, 293, 296, 298, 301, 310, 314, 315, 319, 320, 321, 323, 324, 325, 327, 328, 331, 332, 333, 343, 345, 347, 353, 355, 356, 357, 361, 363, 365, 366, 367, 370, 371, 372, 375, 378, 381, 383, 384, 385, 386, 388, 389, 397, 400, 402, 403, 404, 405, 407, 411, 415, 416, 417, 418, 419, 421, 422, 425, 427, 428, 431, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 451, 452, 454, 455, 457, 458], "thread": [5, 17, 23, 30, 31, 33, 34, 41, 49, 51, 57, 61, 66, 71, 74, 77, 79, 83, 85, 97, 98, 103, 118, 119, 123, 124, 126, 127, 128, 129, 132, 134, 142, 143, 150, 154, 156, 159, 160, 165, 176, 179, 203, 215, 221, 234, 236, 237, 242, 245, 254, 256, 257, 258, 259, 269, 277, 298, 300, 303, 304, 306, 307, 314, 319, 320, 321, 323, 324, 328, 331, 344, 363, 366, 372, 375, 376, 378, 403, 430, 431, 437, 439, 440, 441, 442, 443, 444, 445, 450, 455, 458], "mutat": [5, 22, 61, 83, 97, 150, 157, 170, 185, 214, 215, 216, 238, 246, 269, 312, 324, 363, 367, 376, 417, 439, 441, 453], "exist": [5, 9, 22, 23, 24, 25, 26, 30, 32, 33, 34, 38, 41, 53, 55, 56, 57, 60, 61, 62, 64, 65, 70, 71, 72, 74, 76, 77, 78, 82, 83, 85, 91, 92, 93, 96, 98, 99, 101, 102, 105, 106, 107, 108, 110, 114, 115, 116, 120, 122, 124, 130, 133, 137, 140, 142, 145, 148, 150, 151, 153, 157, 159, 161, 164, 165, 170, 172, 173, 178, 182, 183, 185, 189, 194, 195, 197, 199, 200, 201, 202, 205, 207, 214, 215, 219, 221, 223, 224, 225, 232, 233, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 249, 255, 256, 257, 258, 259, 261, 263, 265, 269, 270, 276, 277, 278, 279, 280, 282, 284, 290, 295, 300, 301, 302, 306, 312, 314, 315, 316, 318, 320, 321, 322, 323, 324, 325, 327, 328, 331, 333, 334, 337, 338, 340, 344, 347, 350, 353, 356, 361, 363, 364, 365, 366, 371, 372, 375, 376, 377, 378, 379, 381, 383, 385, 388, 394, 396, 397, 398, 400, 402, 403, 404, 405, 407, 408, 410, 411, 415, 417, 419, 421, 428, 430, 431, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "store": [5, 7, 10, 11, 12, 13, 18, 25, 27, 28, 32, 33, 38, 40, 41, 47, 54, 56, 59, 61, 62, 71, 73, 74, 76, 77, 82, 85, 86, 87, 88, 91, 93, 97, 98, 99, 102, 104, 105, 106, 108, 114, 115, 116, 127, 128, 144, 148, 150, 157, 160, 164, 165, 166, 170, 172, 173, 175, 180, 182, 185, 186, 189, 190, 192, 194, 197, 212, 220, 225, 232, 234, 236, 237, 238, 241, 243, 246, 249, 255, 258, 259, 263, 265, 269, 270, 277, 281, 282, 283, 292, 296, 308, 310, 311, 312, 317, 318, 319, 320, 321, 322, 324, 327, 331, 334, 337, 338, 340, 343, 353, 357, 358, 359, 361, 362, 363, 365, 366, 367, 372, 378, 381, 383, 385, 388, 394, 396, 397, 399, 400, 402, 403, 405, 406, 407, 410, 411, 415, 416, 417, 418, 419, 421, 423, 425, 426, 427, 430, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458], "point": [5, 7, 10, 16, 17, 18, 22, 23, 30, 31, 32, 33, 34, 37, 38, 40, 41, 42, 44, 46, 50, 53, 56, 58, 61, 62, 64, 66, 71, 75, 77, 79, 82, 83, 85, 88, 90, 91, 93, 95, 97, 98, 99, 102, 103, 105, 107, 109, 110, 111, 115, 120, 127, 129, 131, 132, 133, 137, 140, 144, 148, 150, 152, 153, 157, 159, 160, 165, 166, 170, 172, 178, 179, 182, 185, 189, 191, 192, 194, 195, 198, 202, 210, 214, 221, 224, 225, 228, 236, 238, 242, 249, 250, 254, 255, 256, 257, 259, 261, 262, 265, 269, 274, 276, 277, 278, 279, 280, 282, 284, 285, 290, 300, 301, 304, 310, 313, 314, 315, 318, 320, 321, 323, 324, 325, 326, 327, 331, 333, 334, 337, 338, 340, 343, 344, 347, 350, 353, 355, 358, 361, 363, 365, 366, 367, 372, 375, 379, 384, 386, 387, 388, 389, 396, 398, 399, 400, 402, 403, 404, 405, 407, 411, 416, 417, 418, 420, 421, 424, 426, 431, 434, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458], "valueerror": [5, 9, 18, 23, 38, 40, 56, 62, 83, 91, 92, 96, 98, 106, 109, 110, 114, 115, 116, 120, 128, 132, 133, 136, 137, 140, 143, 147, 148, 149, 150, 153, 156, 157, 164, 165, 170, 172, 175, 182, 185, 186, 192, 194, 197, 198, 199, 200, 202, 212, 214, 216, 221, 232, 237, 238, 243, 246, 247, 249, 250, 255, 256, 261, 262, 265, 269, 270, 276, 277, 278, 279, 280, 284, 287, 296, 298, 300, 304, 307, 311, 312, 314, 315, 317, 318, 320, 321, 323, 324, 325, 328, 330, 331, 332, 343, 344, 356, 364, 365, 366, 371, 372, 375, 385, 397, 400, 402, 405, 416, 417, 418, 421, 425, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458], "utf": [5, 22, 23, 26, 30, 32, 33, 39, 44, 47, 57, 85, 98, 99, 105, 114, 116, 157, 164, 177, 179, 185, 186, 194, 195, 197, 198, 207, 212, 214, 224, 237, 238, 239, 246, 250, 253, 254, 270, 272, 280, 282, 287, 289, 296, 312, 318, 319, 320, 321, 324, 331, 337, 355, 371, 372, 374, 375, 383, 386, 388, 394, 396, 397, 403, 407, 410, 416, 421, 423, 430, 431, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 457, 458], "convers": [5, 9, 10, 31, 32, 33, 34, 61, 62, 63, 66, 70, 78, 88, 90, 91, 95, 103, 112, 114, 116, 127, 136, 139, 148, 157, 164, 172, 175, 180, 184, 214, 242, 246, 250, 254, 259, 263, 264, 273, 276, 277, 282, 300, 318, 321, 325, 327, 328, 331, 337, 355, 362, 366, 371, 401, 402, 406, 410, 425, 430, 436, 442, 443, 444, 445, 446, 448, 451, 453, 454, 456, 457], "fail": [5, 7, 9, 11, 18, 23, 24, 30, 32, 34, 40, 41, 44, 46, 54, 62, 70, 71, 74, 76, 82, 83, 84, 85, 86, 87, 88, 92, 99, 101, 102, 106, 108, 114, 116, 130, 132, 133, 144, 156, 159, 165, 172, 177, 179, 182, 198, 200, 202, 204, 214, 233, 234, 236, 238, 243, 245, 246, 249, 250, 254, 256, 258, 259, 265, 269, 276, 277, 278, 279, 280, 284, 285, 289, 301, 304, 310, 312, 314, 315, 316, 317, 318, 320, 321, 324, 325, 328, 331, 337, 338, 340, 343, 347, 359, 363, 365, 366, 367, 372, 374, 381, 388, 391, 394, 397, 400, 402, 403, 404, 406, 407, 411, 416, 418, 421, 425, 430, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 455, 456, 457], "unicodeerror": [5, 23, 85, 148, 172, 191, 202, 277, 324, 425, 440, 445], "accept": [5, 15, 18, 23, 28, 30, 32, 55, 56, 59, 62, 64, 65, 71, 73, 74, 76, 77, 83, 85, 87, 88, 90, 93, 96, 99, 101, 102, 103, 104, 105, 106, 108, 109, 114, 116, 120, 123, 124, 125, 127, 131, 132, 133, 136, 139, 142, 143, 144, 145, 148, 150, 153, 157, 159, 165, 166, 167, 170, 172, 173, 175, 179, 182, 190, 194, 195, 197, 198, 202, 204, 210, 212, 214, 215, 217, 223, 224, 228, 230, 231, 232, 234, 236, 237, 238, 239, 240, 241, 243, 246, 247, 249, 250, 254, 255, 256, 257, 258, 259, 262, 265, 268, 269, 273, 275, 276, 277, 278, 279, 282, 296, 299, 300, 301, 306, 310, 311, 312, 314, 315, 317, 319, 320, 321, 324, 328, 331, 337, 338, 340, 342, 344, 353, 355, 357, 359, 362, 363, 365, 371, 372, 374, 375, 377, 379, 381, 383, 386, 388, 391, 394, 396, 397, 399, 401, 402, 403, 405, 407, 410, 415, 416, 418, 427, 431, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "filesystem": [5, 23, 32, 33, 57, 62, 64, 66, 78, 84, 85, 105, 114, 120, 136, 157, 202, 204, 205, 208, 238, 242, 254, 259, 269, 277, 278, 280, 284, 306, 314, 321, 331, 337, 338, 340, 365, 366, 375, 376, 396, 397, 425, 430, 436, 438, 444, 449, 453, 456], "path": [5, 23, 24, 30, 32, 34, 38, 57, 62, 66, 70, 71, 74, 78, 82, 83, 84, 85, 86, 88, 91, 93, 95, 97, 98, 99, 101, 105, 107, 109, 114, 120, 130, 133, 135, 137, 141, 142, 143, 153, 157, 159, 165, 173, 179, 182, 189, 199, 202, 204, 208, 209, 212, 214, 219, 220, 223, 231, 232, 233, 234, 236, 239, 240, 241, 242, 243, 246, 249, 253, 254, 255, 256, 257, 258, 259, 263, 266, 267, 269, 272, 276, 277, 280, 284, 290, 293, 294, 295, 302, 306, 309, 312, 313, 314, 316, 317, 318, 320, 321, 322, 328, 331, 335, 337, 338, 340, 344, 347, 361, 363, 365, 366, 371, 372, 375, 376, 379, 381, 383, 388, 391, 394, 395, 396, 398, 400, 403, 411, 413, 415, 423, 427, 428, 430, 431, 434, 437, 439, 440, 441, 442, 443, 444, 446, 448, 450, 451, 452, 453, 454, 456, 458], "prefer": [5, 10, 22, 23, 28, 30, 33, 34, 42, 47, 55, 59, 61, 76, 83, 88, 92, 93, 99, 106, 107, 109, 114, 120, 123, 124, 132, 133, 151, 154, 157, 164, 166, 172, 175, 191, 194, 202, 214, 218, 238, 243, 246, 249, 254, 259, 262, 269, 275, 276, 277, 282, 295, 308, 320, 321, 323, 324, 328, 331, 334, 340, 342, 343, 344, 353, 361, 362, 363, 372, 374, 379, 381, 391, 396, 401, 407, 417, 426, 427, 431, 434, 436, 442, 444, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457], "o": [5, 6, 8, 9, 10, 17, 20, 22, 23, 24, 27, 28, 32, 33, 35, 37, 39, 41, 43, 46, 47, 50, 52, 55, 56, 57, 58, 59, 61, 62, 64, 66, 71, 75, 77, 83, 84, 85, 86, 87, 88, 90, 91, 93, 95, 98, 99, 100, 102, 105, 110, 112, 114, 115, 118, 119, 120, 125, 126, 127, 131, 132, 133, 134, 135, 136, 140, 150, 153, 156, 157, 158, 159, 160, 165, 166, 172, 173, 176, 177, 178, 179, 180, 182, 189, 190, 197, 199, 201, 203, 204, 205, 207, 208, 209, 214, 215, 217, 218, 219, 220, 223, 224, 225, 232, 234, 236, 242, 245, 248, 250, 253, 254, 255, 257, 259, 265, 269, 272, 275, 276, 282, 283, 284, 285, 288, 290, 291, 293, 296, 300, 301, 302, 304, 314, 315, 316, 317, 318, 320, 321, 322, 324, 325, 331, 333, 334, 337, 338, 339, 343, 344, 345, 347, 357, 359, 363, 365, 366, 371, 372, 375, 376, 378, 379, 383, 396, 397, 400, 401, 410, 411, 413, 414, 415, 418, 421, 424, 425, 426, 427, 429, 430, 431, 435, 436, 437, 438, 439, 440, 441, 442, 445, 446, 450], "pyunicode_fsconvert": [5, 55, 62, 455], "chang": [5, 6, 9, 10, 11, 13, 15, 17, 22, 23, 24, 25, 26, 27, 28, 30, 32, 33, 34, 38, 39, 41, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 70, 71, 73, 74, 75, 76, 77, 84, 85, 86, 87, 90, 91, 92, 93, 95, 99, 101, 102, 105, 106, 107, 108, 110, 111, 114, 115, 116, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 139, 140, 142, 143, 145, 147, 148, 150, 151, 153, 156, 157, 158, 159, 160, 161, 164, 165, 166, 168, 170, 172, 173, 175, 177, 179, 180, 182, 183, 185, 186, 190, 191, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 207, 210, 212, 214, 215, 216, 220, 222, 223, 224, 225, 226, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 243, 246, 247, 249, 250, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 265, 268, 269, 270, 272, 275, 277, 278, 279, 280, 282, 284, 285, 286, 287, 288, 289, 290, 291, 293, 295, 296, 300, 301, 302, 303, 304, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 347, 350, 353, 354, 355, 358, 359, 360, 362, 363, 364, 365, 366, 367, 370, 371, 372, 374, 375, 376, 377, 378, 379, 381, 383, 385, 386, 387, 388, 389, 391, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 409, 410, 411, 413, 414, 415, 416, 417, 421, 424, 425, 426, 428, 430, 431, 434, 436, 460], "5": [5, 9, 14, 19, 23, 32, 33, 34, 38, 41, 44, 46, 57, 61, 66, 71, 76, 78, 82, 83, 84, 85, 87, 88, 90, 91, 92, 93, 95, 99, 101, 102, 103, 104, 105, 106, 107, 108, 114, 115, 116, 120, 123, 125, 126, 129, 130, 133, 136, 139, 140, 142, 143, 144, 147, 148, 150, 151, 152, 153, 156, 157, 159, 164, 165, 166, 170, 172, 173, 175, 177, 179, 180, 182, 185, 194, 195, 197, 200, 202, 203, 204, 210, 212, 214, 215, 220, 223, 224, 225, 227, 229, 230, 231, 233, 237, 238, 239, 240, 243, 246, 247, 249, 250, 253, 254, 255, 257, 258, 259, 262, 265, 269, 270, 273, 275, 277, 278, 279, 280, 282, 285, 287, 290, 292, 300, 301, 302, 303, 304, 307, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 331, 332, 337, 338, 339, 340, 343, 344, 345, 346, 347, 353, 354, 355, 358, 359, 361, 362, 363, 365, 366, 367, 371, 372, 374, 375, 383, 384, 388, 389, 391, 394, 395, 396, 397, 399, 401, 402, 403, 405, 406, 407, 410, 413, 415, 416, 417, 419, 421, 424, 425, 426, 427, 428, 430, 431, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 456, 458, 460], "previous": [5, 9, 13, 22, 26, 27, 32, 39, 41, 46, 56, 57, 59, 61, 62, 83, 88, 108, 114, 120, 126, 133, 134, 148, 156, 157, 159, 166, 172, 180, 196, 202, 205, 210, 214, 215, 221, 231, 234, 238, 243, 253, 255, 257, 259, 263, 265, 268, 270, 275, 276, 277, 280, 282, 301, 311, 312, 315, 318, 320, 321, 327, 334, 338, 343, 353, 359, 362, 363, 367, 371, 372, 376, 377, 381, 397, 398, 401, 402, 403, 404, 407, 411, 429, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "typeerror": [5, 9, 22, 23, 38, 40, 46, 47, 52, 53, 56, 57, 59, 61, 62, 65, 71, 73, 74, 83, 87, 91, 92, 93, 96, 105, 106, 114, 115, 116, 123, 136, 157, 158, 159, 162, 165, 170, 172, 173, 175, 182, 185, 186, 187, 188, 194, 195, 200, 202, 214, 222, 238, 243, 246, 247, 250, 256, 261, 262, 265, 275, 276, 277, 279, 286, 300, 324, 331, 344, 363, 365, 366, 371, 374, 378, 386, 388, 394, 397, 402, 403, 405, 411, 416, 417, 418, 424, 425, 426, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 452, 453, 454, 455, 456, 457, 458], "wa": [5, 7, 9, 10, 11, 13, 17, 18, 22, 23, 26, 27, 30, 32, 34, 41, 44, 47, 52, 54, 56, 57, 58, 59, 61, 62, 64, 70, 71, 73, 74, 75, 76, 81, 83, 85, 86, 88, 90, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 114, 116, 119, 120, 121, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 136, 137, 142, 145, 147, 148, 150, 151, 153, 156, 157, 158, 159, 160, 164, 166, 170, 172, 175, 177, 179, 180, 182, 185, 188, 190, 191, 194, 195, 196, 199, 200, 202, 203, 207, 212, 214, 215, 216, 217, 219, 221, 223, 224, 225, 231, 232, 233, 234, 236, 237, 238, 239, 240, 243, 245, 246, 247, 254, 255, 256, 257, 258, 259, 261, 262, 265, 268, 269, 270, 272, 273, 276, 277, 278, 279, 280, 282, 284, 288, 289, 290, 293, 295, 296, 298, 300, 301, 302, 303, 304, 307, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 331, 332, 333, 334, 335, 337, 338, 340, 342, 343, 344, 345, 347, 350, 353, 354, 355, 357, 359, 361, 362, 363, 365, 366, 367, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 383, 385, 386, 388, 389, 390, 394, 395, 397, 398, 399, 400, 401, 402, 403, 405, 407, 409, 410, 411, 415, 416, 417, 418, 421, 427, 430, 431, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "encount": [5, 9, 14, 34, 53, 61, 76, 85, 102, 104, 105, 106, 114, 150, 164, 175, 182, 188, 194, 197, 201, 202, 214, 217, 229, 233, 243, 250, 255, 256, 272, 276, 278, 279, 280, 282, 293, 296, 301, 313, 314, 319, 320, 321, 323, 324, 328, 353, 361, 363, 365, 376, 388, 390, 407, 415, 416, 417, 418, 419, 421, 425, 437, 440, 441, 442, 443, 447, 449, 451, 452, 457], "second": [5, 20, 22, 23, 32, 34, 36, 56, 62, 65, 71, 73, 74, 75, 76, 82, 83, 84, 85, 87, 88, 90, 91, 92, 93, 95, 98, 99, 101, 102, 103, 104, 105, 106, 110, 118, 119, 120, 123, 128, 129, 130, 132, 133, 148, 156, 157, 159, 161, 164, 165, 166, 172, 175, 179, 180, 182, 184, 189, 192, 197, 198, 200, 202, 203, 204, 207, 210, 212, 214, 217, 219, 221, 224, 225, 231, 232, 236, 237, 238, 243, 246, 249, 255, 256, 257, 259, 262, 263, 268, 269, 270, 275, 276, 277, 278, 280, 282, 284, 287, 289, 290, 298, 300, 301, 304, 307, 310, 311, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324, 325, 327, 328, 331, 334, 337, 339, 340, 343, 344, 345, 353, 355, 361, 363, 365, 366, 371, 372, 373, 374, 383, 388, 394, 397, 403, 405, 406, 407, 410, 411, 416, 417, 419, 421, 423, 424, 425, 426, 427, 431, 437, 438, 439, 440, 441, 442, 443, 444, 447, 448, 450, 451, 452, 454, 455, 456, 457], "z": [5, 62, 76, 82, 84, 88, 98, 99, 102, 114, 116, 142, 144, 150, 157, 165, 166, 170, 172, 175, 209, 214, 256, 269, 275, 301, 317, 321, 323, 324, 325, 327, 344, 363, 378, 402, 403, 405, 406, 409, 410, 415, 417, 423, 426, 430, 439, 441, 443, 444, 447, 448, 449, 451, 456], "buf": [5, 7, 41, 120, 204, 224, 270, 321, 324, 337, 442, 450], "member": [5, 7, 26, 30, 32, 33, 34, 44, 54, 57, 58, 59, 61, 71, 73, 74, 76, 85, 86, 88, 142, 143, 153, 157, 165, 166, 170, 180, 200, 202, 222, 223, 233, 234, 237, 249, 250, 256, 258, 277, 278, 282, 292, 293, 295, 300, 314, 318, 320, 321, 322, 323, 324, 327, 331, 337, 340, 344, 355, 362, 363, 365, 366, 397, 401, 402, 403, 405, 415, 417, 426, 440, 441, 442, 443, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458], "doesn": [5, 7, 22, 23, 30, 32, 33, 34, 39, 42, 47, 54, 61, 70, 71, 74, 75, 77, 79, 83, 88, 90, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 109, 114, 115, 116, 126, 127, 129, 137, 143, 148, 159, 164, 165, 172, 173, 175, 182, 185, 187, 189, 194, 202, 203, 214, 215, 225, 232, 233, 236, 238, 239, 243, 246, 247, 250, 254, 255, 256, 257, 268, 273, 276, 277, 278, 279, 280, 282, 284, 287, 296, 298, 301, 304, 305, 310, 312, 314, 315, 316, 317, 318, 320, 321, 323, 324, 325, 328, 331, 337, 340, 343, 345, 347, 361, 362, 364, 365, 366, 367, 373, 376, 381, 383, 384, 394, 398, 399, 401, 403, 405, 407, 416, 417, 421, 423, 424, 425, 428, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "recommend": [5, 10, 32, 34, 41, 44, 55, 61, 62, 70, 73, 74, 78, 81, 83, 84, 85, 86, 87, 88, 89, 92, 93, 98, 101, 105, 107, 114, 116, 119, 120, 123, 126, 127, 129, 130, 133, 136, 148, 156, 157, 165, 170, 172, 175, 182, 185, 202, 214, 219, 224, 226, 231, 234, 236, 237, 238, 243, 246, 250, 255, 262, 277, 278, 279, 282, 288, 290, 296, 301, 306, 313, 314, 318, 319, 320, 321, 328, 331, 337, 338, 344, 347, 356, 361, 363, 365, 371, 372, 374, 375, 383, 384, 385, 386, 390, 391, 397, 399, 400, 403, 407, 410, 416, 421, 425, 431, 435, 436, 437, 439, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458], "binari": [5, 7, 33, 40, 41, 46, 61, 64, 66, 72, 73, 76, 78, 79, 84, 85, 88, 92, 95, 99, 105, 110, 115, 116, 120, 136, 142, 158, 165, 171, 175, 180, 183, 185, 186, 187, 189, 190, 192, 194, 196, 197, 200, 204, 210, 212, 214, 219, 223, 224, 225, 226, 234, 238, 240, 241, 242, 243, 247, 249, 250, 254, 256, 257, 258, 259, 261, 262, 268, 269, 271, 276, 277, 279, 282, 284, 285, 286, 299, 318, 325, 328, 331, 334, 337, 338, 341, 347, 356, 363, 372, 375, 378, 381, 388, 391, 395, 396, 397, 400, 401, 403, 411, 414, 419, 420, 421, 431, 434, 435, 436, 437, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "pybytesobject": [5, 9, 13, 62, 88, 443, 448, 449, 450], "attempt": [5, 11, 23, 25, 30, 34, 46, 57, 59, 61, 65, 83, 84, 85, 86, 88, 90, 92, 94, 95, 96, 99, 102, 105, 106, 107, 111, 114, 116, 120, 127, 130, 134, 142, 145, 150, 156, 157, 158, 159, 164, 166, 172, 173, 175, 179, 180, 182, 183, 185, 188, 192, 194, 195, 196, 198, 201, 202, 212, 214, 215, 225, 231, 232, 236, 237, 238, 243, 246, 253, 254, 256, 257, 258, 259, 265, 268, 269, 270, 277, 282, 284, 287, 289, 293, 295, 296, 301, 302, 304, 307, 310, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 327, 331, 337, 338, 340, 342, 343, 344, 363, 365, 366, 371, 372, 374, 375, 377, 383, 385, 388, 390, 391, 392, 397, 398, 399, 402, 403, 405, 407, 408, 411, 415, 418, 420, 421, 424, 425, 430, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 452, 454, 455, 456, 457, 458], "declar": [5, 19, 32, 34, 55, 56, 61, 71, 73, 74, 76, 82, 83, 84, 85, 88, 93, 99, 105, 111, 122, 133, 157, 159, 160, 162, 165, 214, 215, 229, 238, 243, 246, 256, 276, 282, 296, 313, 319, 320, 324, 330, 363, 365, 378, 379, 384, 385, 386, 388, 390, 391, 400, 402, 403, 404, 405, 406, 411, 414, 415, 423, 440, 442, 443, 444, 449, 451, 452, 453, 454, 455, 456, 457, 458], "pybytearrayobject": [5, 8, 88], "u": [5, 7, 9, 14, 32, 33, 38, 47, 57, 62, 74, 76, 78, 85, 87, 88, 92, 93, 99, 101, 102, 105, 115, 148, 150, 151, 165, 167, 172, 173, 175, 179, 184, 185, 191, 195, 198, 207, 212, 214, 221, 250, 254, 270, 277, 280, 282, 300, 301, 314, 321, 324, 331, 340, 344, 345, 363, 364, 366, 367, 371, 372, 374, 383, 388, 397, 401, 403, 405, 406, 410, 417, 430, 435, 436, 437, 439, 440, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458], "w": [5, 7, 23, 33, 62, 71, 82, 83, 85, 88, 92, 98, 99, 102, 105, 114, 115, 119, 134, 142, 143, 144, 145, 150, 157, 159, 164, 165, 170, 172, 173, 175, 177, 178, 179, 189, 214, 219, 223, 224, 246, 256, 257, 258, 269, 275, 277, 279, 280, 284, 295, 301, 318, 320, 324, 328, 337, 338, 340, 343, 344, 347, 353, 356, 363, 365, 366, 371, 375, 376, 388, 394, 396, 397, 410, 416, 421, 427, 430, 441, 442, 443, 444, 446, 447, 450, 451, 452, 456, 457, 458], "interfac": [5, 7, 28, 30, 32, 34, 42, 49, 57, 61, 62, 64, 66, 70, 71, 73, 78, 80, 83, 85, 90, 91, 93, 98, 99, 101, 102, 105, 106, 109, 111, 112, 114, 115, 120, 126, 127, 136, 142, 143, 145, 148, 150, 151, 156, 157, 159, 160, 161, 162, 164, 165, 166, 169, 178, 182, 183, 185, 186, 192, 193, 194, 195, 196, 201, 203, 204, 207, 208, 211, 214, 217, 219, 222, 224, 231, 232, 234, 236, 238, 239, 240, 241, 242, 245, 248, 249, 254, 255, 258, 259, 260, 263, 264, 269, 276, 278, 279, 280, 281, 284, 285, 286, 287, 288, 290, 292, 294, 296, 297, 306, 307, 310, 312, 315, 317, 319, 321, 324, 328, 330, 331, 335, 338, 339, 341, 343, 344, 348, 355, 356, 358, 360, 361, 368, 371, 374, 376, 377, 378, 379, 380, 383, 384, 385, 386, 388, 389, 390, 392, 401, 403, 407, 408, 414, 425, 428, 436, 437, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 458], "work": [5, 15, 18, 23, 25, 32, 33, 34, 35, 36, 40, 41, 44, 53, 55, 57, 61, 62, 66, 70, 71, 74, 75, 76, 77, 81, 84, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 126, 127, 128, 129, 130, 131, 132, 133, 134, 138, 140, 143, 145, 148, 150, 151, 153, 156, 157, 159, 160, 165, 166, 170, 172, 173, 179, 180, 181, 186, 194, 196, 197, 199, 200, 204, 208, 212, 214, 215, 217, 218, 219, 221, 222, 229, 230, 231, 232, 234, 236, 237, 238, 239, 242, 243, 245, 248, 249, 252, 254, 255, 256, 257, 260, 262, 265, 269, 270, 273, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 298, 300, 301, 304, 306, 310, 311, 312, 314, 317, 318, 319, 321, 323, 324, 325, 327, 328, 331, 335, 337, 338, 339, 340, 342, 343, 347, 353, 358, 360, 361, 365, 366, 367, 369, 371, 372, 376, 378, 379, 381, 383, 385, 386, 388, 389, 394, 395, 396, 400, 401, 402, 403, 405, 407, 409, 411, 413, 414, 415, 416, 417, 418, 419, 421, 423, 424, 425, 426, 430, 433, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "name": [5, 10, 11, 13, 14, 17, 19, 20, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 41, 44, 47, 49, 51, 52, 54, 55, 56, 57, 58, 59, 61, 62, 64, 66, 69, 70, 71, 73, 74, 75, 76, 77, 78, 82, 84, 85, 87, 88, 90, 93, 95, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 116, 120, 122, 127, 128, 130, 133, 134, 135, 137, 140, 141, 142, 143, 145, 147, 151, 153, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 170, 171, 172, 173, 175, 177, 179, 180, 182, 183, 184, 185, 186, 189, 191, 192, 194, 197, 198, 201, 202, 203, 204, 205, 207, 209, 212, 214, 215, 217, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 249, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 265, 266, 269, 270, 272, 275, 276, 278, 279, 280, 282, 283, 284, 285, 287, 289, 290, 292, 293, 294, 295, 296, 300, 301, 302, 303, 304, 305, 306, 307, 310, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 330, 332, 333, 334, 336, 338, 339, 340, 343, 344, 347, 350, 352, 353, 354, 355, 357, 358, 359, 361, 363, 364, 365, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 400, 401, 402, 406, 407, 409, 410, 411, 413, 414, 416, 417, 418, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458], "known": [5, 9, 23, 24, 32, 34, 58, 59, 61, 62, 73, 78, 83, 84, 85, 87, 92, 93, 95, 102, 103, 106, 114, 116, 128, 144, 148, 157, 159, 165, 172, 175, 185, 186, 198, 224, 225, 231, 236, 238, 239, 241, 254, 255, 256, 262, 263, 270, 275, 277, 282, 301, 302, 309, 310, 318, 320, 321, 322, 323, 324, 328, 331, 333, 344, 347, 353, 355, 361, 363, 364, 366, 367, 374, 375, 376, 384, 385, 390, 391, 397, 399, 400, 401, 405, 409, 410, 411, 415, 416, 418, 421, 423, 425, 431, 440, 442, 444, 445, 446, 447, 448, 450, 451, 453, 455, 456, 457], "text": [5, 52, 57, 62, 66, 70, 73, 76, 78, 82, 83, 85, 87, 88, 93, 98, 99, 102, 103, 105, 106, 112, 114, 116, 120, 138, 139, 142, 143, 145, 147, 149, 157, 158, 164, 165, 167, 177, 179, 180, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 201, 202, 207, 208, 212, 214, 215, 223, 225, 227, 228, 229, 231, 234, 237, 238, 240, 241, 242, 243, 250, 254, 255, 256, 257, 258, 259, 268, 272, 276, 277, 279, 282, 287, 289, 290, 295, 296, 299, 300, 302, 305, 308, 313, 315, 320, 321, 325, 326, 328, 331, 337, 338, 345, 346, 347, 350, 353, 354, 358, 361, 363, 364, 365, 371, 372, 374, 375, 376, 379, 383, 384, 386, 387, 388, 390, 391, 397, 401, 403, 404, 405, 407, 409, 410, 414, 421, 425, 427, 430, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457], "copi": [5, 7, 9, 17, 25, 32, 33, 41, 42, 50, 53, 56, 61, 62, 66, 71, 75, 76, 87, 88, 93, 97, 99, 107, 114, 116, 120, 127, 133, 148, 150, 156, 157, 160, 162, 165, 166, 170, 171, 172, 175, 180, 182, 189, 190, 192, 197, 202, 204, 214, 215, 216, 219, 224, 226, 233, 236, 237, 242, 243, 246, 249, 255, 256, 257, 259, 263, 265, 269, 270, 276, 277, 280, 282, 284, 291, 301, 312, 320, 324, 325, 327, 328, 331, 334, 337, 340, 350, 359, 361, 362, 365, 366, 367, 372, 375, 376, 383, 390, 391, 396, 399, 401, 403, 415, 416, 417, 424, 425, 428, 436, 438, 439, 440, 441, 442, 443, 444, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457], "adjust": [5, 12, 44, 52, 54, 55, 62, 88, 107, 114, 119, 150, 166, 172, 175, 190, 197, 277, 289, 306, 316, 320, 321, 324, 344, 347, 353, 388, 437, 444, 448, 453, 455, 456, 457], "respons": [5, 18, 23, 32, 33, 34, 44, 55, 59, 61, 62, 66, 71, 74, 76, 77, 85, 91, 92, 93, 98, 99, 103, 105, 106, 107, 120, 127, 129, 131, 145, 159, 164, 166, 168, 172, 180, 185, 200, 212, 231, 232, 234, 237, 238, 242, 244, 254, 255, 287, 296, 307, 317, 318, 319, 320, 321, 327, 328, 330, 337, 338, 363, 365, 367, 370, 377, 387, 394, 395, 396, 400, 401, 403, 405, 407, 416, 426, 427, 436, 437, 440, 443, 444, 448, 451, 452, 453, 454, 456, 457], "free": [5, 7, 11, 13, 18, 32, 33, 34, 41, 50, 57, 61, 62, 71, 73, 74, 76, 78, 82, 83, 85, 87, 93, 101, 103, 116, 122, 128, 134, 148, 156, 165, 179, 180, 214, 216, 218, 219, 237, 243, 269, 270, 276, 277, 282, 285, 298, 314, 324, 330, 331, 340, 359, 362, 365, 375, 378, 385, 394, 395, 400, 401, 402, 403, 404, 405, 407, 411, 420, 421, 431, 436, 438, 439, 440, 442, 443, 445, 451, 452, 453, 458], "through": [5, 7, 9, 11, 14, 15, 20, 22, 23, 24, 28, 32, 41, 44, 49, 53, 57, 58, 61, 62, 65, 71, 74, 75, 76, 78, 83, 87, 88, 89, 91, 93, 96, 98, 99, 101, 102, 105, 106, 107, 111, 114, 115, 116, 120, 137, 143, 148, 156, 157, 164, 165, 166, 167, 170, 172, 174, 175, 179, 180, 182, 183, 185, 186, 187, 191, 193, 194, 195, 197, 199, 205, 210, 214, 215, 219, 231, 233, 234, 236, 238, 239, 245, 255, 256, 257, 259, 261, 262, 265, 269, 270, 276, 277, 278, 280, 284, 288, 294, 296, 301, 317, 318, 320, 321, 322, 323, 324, 325, 328, 331, 334, 340, 342, 343, 345, 347, 353, 362, 363, 365, 366, 367, 371, 372, 374, 378, 382, 385, 386, 388, 390, 392, 394, 397, 399, 402, 403, 404, 405, 407, 409, 410, 411, 414, 415, 416, 417, 420, 425, 426, 427, 429, 430, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460], "recod": 5, "instead": [5, 7, 10, 12, 13, 16, 17, 22, 23, 24, 28, 30, 32, 33, 38, 39, 41, 44, 47, 50, 56, 57, 59, 61, 64, 65, 70, 71, 72, 73, 74, 75, 77, 82, 84, 85, 86, 87, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 102, 105, 106, 109, 114, 115, 116, 117, 119, 120, 122, 123, 127, 129, 130, 132, 133, 136, 139, 140, 142, 147, 148, 149, 150, 151, 156, 157, 159, 160, 164, 165, 166, 170, 172, 173, 175, 179, 180, 182, 185, 186, 187, 189, 190, 191, 192, 194, 196, 197, 198, 199, 200, 202, 214, 215, 217, 219, 221, 223, 225, 226, 231, 232, 233, 234, 236, 237, 238, 241, 243, 246, 249, 250, 254, 255, 257, 258, 259, 261, 262, 269, 270, 276, 277, 278, 279, 280, 282, 283, 284, 285, 288, 289, 290, 293, 294, 295, 296, 300, 301, 302, 303, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324, 325, 327, 328, 331, 333, 334, 337, 338, 340, 343, 345, 347, 353, 355, 358, 359, 361, 362, 363, 364, 365, 366, 367, 370, 371, 372, 375, 376, 378, 379, 381, 383, 384, 385, 386, 387, 388, 390, 398, 400, 402, 403, 404, 405, 406, 407, 410, 411, 414, 415, 416, 417, 418, 419, 420, 421, 424, 425, 426, 427, 428, 430, 431, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "assum": [5, 7, 32, 33, 34, 40, 44, 52, 54, 57, 58, 61, 70, 71, 72, 74, 76, 77, 82, 83, 85, 86, 87, 93, 95, 96, 97, 98, 99, 101, 102, 103, 105, 107, 111, 114, 120, 140, 143, 144, 148, 150, 151, 156, 157, 159, 164, 165, 172, 185, 188, 190, 191, 192, 198, 199, 212, 214, 219, 224, 225, 231, 232, 236, 237, 245, 246, 254, 255, 256, 269, 276, 277, 279, 280, 284, 293, 295, 300, 316, 318, 320, 321, 323, 324, 325, 327, 328, 331, 337, 338, 342, 344, 350, 353, 363, 365, 367, 372, 375, 391, 396, 401, 403, 405, 407, 411, 413, 415, 417, 419, 421, 425, 436, 437, 438, 439, 442, 443, 445, 449, 452, 453, 454, 455, 456], "paramet": [5, 7, 9, 10, 11, 12, 13, 14, 15, 17, 22, 23, 24, 27, 28, 33, 34, 36, 43, 44, 47, 50, 54, 56, 59, 61, 62, 64, 65, 66, 73, 76, 77, 82, 85, 91, 92, 93, 98, 102, 104, 105, 110, 114, 115, 120, 123, 128, 129, 130, 131, 132, 133, 137, 139, 140, 142, 143, 147, 148, 150, 153, 156, 157, 159, 160, 162, 166, 172, 175, 179, 180, 182, 185, 186, 187, 188, 190, 192, 194, 195, 197, 198, 202, 203, 204, 205, 207, 209, 212, 214, 215, 216, 217, 219, 220, 223, 224, 225, 226, 229, 231, 232, 234, 236, 237, 238, 239, 240, 241, 242, 243, 246, 247, 249, 250, 254, 255, 256, 257, 258, 259, 262, 263, 265, 268, 269, 270, 276, 278, 279, 280, 285, 287, 289, 293, 294, 296, 297, 299, 300, 301, 302, 304, 307, 310, 312, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324, 325, 326, 328, 330, 335, 337, 338, 340, 343, 344, 345, 350, 357, 358, 359, 361, 365, 366, 367, 371, 372, 373, 375, 376, 377, 378, 379, 381, 382, 383, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 397, 399, 400, 403, 404, 405, 406, 407, 411, 417, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 454, 455, 456, 458], "buffer_length": 5, "unlik": [5, 32, 34, 37, 40, 41, 44, 47, 53, 58, 62, 71, 74, 76, 82, 83, 91, 92, 93, 97, 98, 99, 104, 105, 111, 116, 120, 123, 128, 131, 132, 133, 140, 142, 153, 159, 164, 166, 172, 173, 175, 194, 214, 217, 220, 225, 232, 237, 246, 249, 250, 258, 259, 262, 269, 277, 278, 279, 280, 282, 285, 287, 301, 306, 318, 321, 324, 325, 328, 332, 337, 338, 340, 344, 347, 359, 361, 362, 363, 365, 366, 378, 381, 383, 388, 400, 401, 403, 405, 407, 409, 410, 411, 415, 416, 417, 424, 426, 436, 438, 439, 440, 442, 443, 444, 447, 449, 451, 452, 453, 454, 455, 456, 458], "third": [5, 7, 10, 23, 24, 28, 30, 32, 34, 55, 56, 61, 71, 73, 74, 76, 78, 79, 81, 82, 83, 85, 87, 88, 91, 93, 98, 99, 102, 105, 107, 120, 122, 126, 127, 132, 148, 157, 165, 166, 170, 172, 173, 175, 214, 216, 217, 238, 239, 249, 255, 256, 277, 282, 284, 289, 301, 312, 314, 318, 320, 321, 323, 324, 331, 334, 357, 363, 365, 367, 372, 375, 376, 378, 394, 401, 403, 407, 416, 420, 421, 424, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458], "referenc": [5, 7, 12, 13, 34, 58, 61, 65, 71, 73, 76, 83, 85, 98, 102, 109, 114, 133, 157, 168, 180, 214, 215, 236, 243, 269, 277, 279, 282, 301, 324, 330, 378, 385, 403, 415, 416, 417, 421, 425, 436, 438, 439, 440, 443, 444, 445, 452, 453], "output": [5, 9, 15, 18, 32, 33, 41, 57, 61, 62, 64, 66, 71, 73, 74, 76, 85, 90, 93, 95, 98, 100, 102, 103, 105, 109, 114, 119, 120, 124, 127, 131, 133, 136, 137, 139, 141, 142, 143, 145, 147, 148, 150, 153, 157, 159, 164, 165, 166, 172, 176, 179, 180, 182, 184, 189, 190, 191, 193, 197, 198, 199, 201, 207, 212, 214, 217, 223, 224, 225, 226, 229, 231, 233, 234, 235, 237, 243, 246, 249, 250, 255, 257, 258, 262, 266, 268, 269, 276, 277, 282, 283, 284, 285, 287, 289, 290, 291, 293, 295, 296, 299, 301, 303, 304, 307, 310, 313, 315, 316, 317, 318, 319, 320, 321, 324, 325, 327, 328, 331, 334, 336, 337, 339, 340, 342, 344, 345, 355, 357, 358, 359, 361, 363, 365, 372, 374, 375, 376, 377, 378, 383, 386, 388, 392, 396, 397, 399, 403, 410, 411, 413, 415, 417, 418, 419, 420, 424, 425, 428, 430, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458], "mode": [5, 24, 32, 33, 34, 37, 40, 41, 57, 58, 62, 64, 66, 71, 78, 82, 83, 84, 85, 88, 90, 98, 99, 100, 101, 102, 105, 114, 116, 124, 129, 135, 137, 142, 143, 148, 153, 157, 165, 166, 167, 173, 176, 178, 179, 182, 189, 196, 202, 203, 207, 212, 214, 217, 223, 227, 234, 236, 238, 239, 240, 241, 242, 246, 254, 255, 257, 258, 259, 262, 268, 273, 276, 279, 280, 282, 287, 288, 291, 293, 300, 301, 302, 304, 305, 309, 313, 314, 316, 317, 318, 320, 321, 322, 323, 324, 327, 328, 330, 331, 333, 337, 338, 340, 353, 355, 359, 360, 361, 363, 365, 377, 379, 388, 390, 396, 397, 399, 400, 403, 411, 412, 419, 421, 424, 425, 431, 438, 439, 440, 441, 442, 443, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458], "oper": [5, 7, 16, 22, 23, 24, 28, 31, 32, 34, 36, 40, 41, 46, 47, 52, 61, 62, 63, 64, 66, 70, 71, 72, 73, 74, 75, 78, 81, 82, 84, 85, 88, 90, 91, 92, 98, 99, 101, 102, 103, 105, 106, 107, 108, 113, 115, 116, 119, 120, 121, 123, 124, 127, 128, 130, 132, 133, 135, 137, 138, 140, 144, 150, 151, 156, 157, 158, 159, 164, 165, 166, 171, 172, 173, 175, 177, 180, 183, 184, 185, 189, 190, 191, 194, 196, 197, 199, 200, 201, 202, 204, 205, 208, 209, 210, 212, 213, 214, 216, 219, 225, 226, 231, 234, 236, 238, 239, 242, 243, 245, 246, 249, 254, 255, 257, 258, 259, 261, 262, 263, 269, 278, 282, 285, 288, 290, 291, 295, 296, 298, 300, 302, 304, 308, 310, 312, 313, 315, 317, 318, 320, 322, 323, 327, 328, 331, 332, 337, 338, 339, 340, 341, 343, 347, 353, 355, 361, 362, 363, 367, 368, 371, 372, 375, 376, 378, 379, 381, 383, 384, 385, 386, 388, 391, 394, 397, 400, 401, 402, 403, 404, 406, 407, 409, 411, 414, 415, 416, 417, 418, 419, 421, 423, 424, 425, 430, 431, 436, 437, 438, 440, 441, 442, 443, 444, 449, 450, 451, 455, 456, 457], "usag": [5, 32, 33, 34, 44, 61, 62, 65, 66, 70, 71, 74, 76, 78, 82, 83, 85, 87, 88, 93, 98, 99, 101, 102, 105, 111, 129, 130, 133, 134, 136, 159, 164, 167, 177, 183, 202, 207, 214, 215, 216, 217, 219, 225, 230, 232, 234, 237, 238, 239, 242, 246, 247, 255, 257, 263, 269, 276, 277, 280, 282, 287, 289, 301, 314, 324, 325, 331, 334, 337, 338, 340, 345, 347, 359, 363, 365, 368, 372, 375, 376, 379, 383, 385, 386, 396, 399, 400, 402, 403, 421, 424, 430, 431, 434, 436, 439, 440, 441, 442, 443, 444, 447, 448, 449, 450, 451, 454, 455], "locat": [5, 7, 33, 34, 56, 62, 66, 70, 75, 76, 82, 83, 84, 85, 87, 88, 90, 91, 92, 95, 98, 99, 102, 106, 116, 140, 148, 153, 157, 165, 166, 172, 173, 180, 182, 199, 200, 202, 214, 216, 232, 236, 238, 239, 241, 242, 246, 254, 256, 257, 263, 267, 268, 269, 272, 277, 278, 280, 282, 283, 284, 293, 294, 295, 296, 301, 302, 314, 320, 321, 332, 333, 334, 338, 340, 344, 361, 363, 365, 371, 372, 375, 376, 383, 384, 385, 388, 389, 390, 397, 400, 401, 402, 403, 406, 407, 411, 413, 423, 425, 428, 430, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 447, 449, 451, 453, 455, 457], "larg": [5, 7, 18, 34, 53, 56, 57, 61, 70, 76, 78, 82, 85, 90, 91, 93, 96, 99, 102, 103, 105, 106, 116, 131, 148, 156, 165, 166, 172, 173, 175, 177, 179, 182, 201, 202, 211, 214, 220, 236, 237, 246, 247, 250, 262, 269, 276, 277, 279, 282, 300, 315, 323, 324, 325, 326, 327, 328, 331, 337, 359, 361, 365, 378, 384, 385, 386, 388, 397, 400, 414, 416, 419, 421, 424, 426, 427, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 448, 450, 451, 452, 453, 454, 457], "enough": [5, 41, 44, 61, 62, 76, 82, 83, 84, 90, 91, 96, 98, 99, 101, 103, 106, 148, 164, 165, 172, 179, 188, 190, 236, 238, 246, 249, 253, 258, 276, 277, 282, 290, 318, 321, 324, 325, 328, 340, 342, 345, 347, 362, 366, 378, 417, 437, 438, 439, 440, 445, 452], "both": [5, 7, 15, 18, 22, 23, 24, 32, 34, 44, 47, 53, 56, 61, 62, 70, 71, 72, 73, 74, 75, 76, 82, 83, 85, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 108, 109, 114, 116, 120, 127, 131, 133, 136, 143, 144, 148, 149, 150, 151, 156, 157, 159, 164, 165, 166, 170, 172, 175, 179, 180, 182, 183, 184, 185, 189, 190, 191, 192, 194, 195, 196, 199, 202, 204, 205, 208, 209, 214, 215, 216, 219, 221, 222, 224, 226, 227, 232, 233, 234, 236, 238, 243, 245, 246, 247, 255, 256, 258, 262, 265, 268, 269, 270, 273, 276, 277, 278, 279, 280, 282, 284, 285, 286, 287, 289, 290, 291, 300, 301, 302, 304, 306, 311, 312, 314, 315, 316, 317, 318, 320, 321, 323, 324, 325, 327, 328, 331, 332, 334, 339, 340, 342, 344, 345, 347, 353, 355, 356, 357, 359, 361, 363, 365, 366, 367, 371, 372, 376, 378, 381, 383, 386, 388, 392, 394, 396, 400, 401, 402, 403, 404, 405, 406, 407, 410, 411, 415, 416, 417, 419, 421, 424, 425, 426, 427, 430, 431, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "trail": [5, 18, 32, 33, 38, 62, 76, 88, 90, 93, 102, 136, 139, 147, 148, 149, 157, 166, 175, 179, 185, 194, 197, 210, 212, 214, 217, 228, 229, 236, 259, 270, 278, 279, 296, 318, 321, 324, 325, 328, 335, 344, 347, 358, 366, 372, 383, 385, 399, 402, 403, 405, 406, 410, 411, 415, 417, 426, 427, 430, 437, 441, 443, 444, 445, 446, 447, 451, 453, 454, 455, 456, 457], "remov": [5, 10, 22, 24, 26, 28, 30, 32, 33, 34, 44, 47, 53, 55, 57, 61, 62, 64, 65, 71, 73, 74, 76, 78, 81, 82, 85, 88, 91, 92, 93, 98, 99, 102, 104, 106, 114, 115, 116, 120, 123, 124, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 142, 145, 147, 148, 150, 151, 153, 156, 157, 159, 164, 166, 168, 172, 173, 175, 177, 180, 182, 183, 185, 189, 192, 194, 196, 197, 198, 199, 200, 201, 202, 207, 212, 214, 215, 219, 220, 223, 224, 225, 226, 229, 231, 232, 234, 236, 237, 238, 239, 241, 243, 247, 249, 250, 254, 255, 257, 259, 262, 269, 270, 275, 276, 277, 279, 280, 282, 284, 286, 287, 290, 295, 296, 298, 300, 301, 302, 307, 310, 311, 313, 314, 315, 316, 317, 320, 321, 324, 325, 331, 337, 338, 340, 342, 353, 354, 359, 361, 362, 363, 365, 366, 371, 372, 376, 377, 378, 379, 381, 383, 385, 387, 388, 396, 397, 398, 400, 401, 403, 405, 407, 411, 415, 417, 423, 424, 425, 426, 427, 428, 430, 431, 434, 437, 438, 439, 440, 441, 451, 452], "becaus": [5, 10, 23, 28, 32, 33, 34, 41, 44, 46, 50, 52, 55, 56, 58, 61, 69, 70, 71, 73, 74, 76, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 114, 115, 116, 120, 123, 127, 129, 130, 131, 133, 140, 142, 143, 147, 148, 150, 151, 153, 156, 157, 159, 161, 165, 170, 172, 173, 175, 177, 179, 182, 185, 190, 192, 194, 197, 200, 201, 202, 203, 204, 214, 215, 216, 219, 224, 225, 232, 233, 234, 236, 238, 239, 241, 243, 246, 249, 255, 256, 257, 258, 259, 261, 262, 269, 270, 273, 276, 277, 278, 279, 280, 282, 283, 284, 300, 301, 310, 312, 313, 314, 316, 317, 318, 319, 320, 321, 323, 324, 325, 328, 331, 337, 338, 340, 343, 344, 345, 347, 360, 361, 363, 365, 366, 367, 372, 375, 376, 377, 378, 382, 383, 385, 388, 390, 394, 399, 400, 402, 403, 404, 405, 406, 407, 410, 411, 414, 415, 416, 417, 418, 419, 421, 424, 425, 426, 428, 431, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458], "legaci": [5, 23, 32, 56, 73, 111, 136, 153, 162, 183, 184, 185, 187, 191, 194, 195, 198, 224, 238, 243, 258, 276, 277, 314, 320, 321, 327, 331, 340, 365, 397, 407, 410, 430, 431, 434, 436, 444, 448, 449, 450, 451, 452, 453, 455, 457, 458], "py_unicod": [5, 62, 115, 447, 448, 449, 450, 452, 458], "represent": [5, 7, 9, 15, 18, 23, 25, 26, 38, 40, 47, 56, 57, 61, 62, 73, 74, 83, 85, 88, 98, 101, 103, 105, 114, 115, 116, 139, 144, 148, 150, 157, 165, 166, 167, 172, 175, 180, 185, 186, 190, 193, 194, 196, 201, 202, 214, 225, 231, 233, 234, 237, 238, 241, 247, 250, 254, 255, 259, 269, 274, 277, 279, 282, 289, 296, 300, 303, 312, 318, 320, 324, 325, 326, 327, 331, 340, 344, 350, 354, 358, 361, 363, 365, 366, 385, 388, 401, 403, 407, 421, 427, 437, 441, 442, 443, 444, 446, 448, 449, 451, 453, 454, 455, 457, 458], "b": [5, 7, 8, 22, 32, 33, 34, 49, 58, 59, 69, 70, 71, 75, 76, 78, 82, 83, 85, 86, 88, 90, 91, 92, 93, 97, 99, 101, 102, 103, 104, 105, 106, 111, 114, 115, 116, 130, 132, 133, 134, 136, 137, 139, 140, 142, 144, 145, 148, 150, 152, 153, 156, 165, 166, 167, 170, 172, 173, 175, 179, 180, 191, 202, 205, 214, 215, 217, 221, 223, 224, 225, 226, 231, 234, 236, 237, 243, 246, 247, 249, 250, 255, 258, 262, 265, 269, 270, 273, 275, 276, 278, 279, 280, 282, 286, 288, 295, 296, 300, 301, 303, 308, 313, 315, 317, 318, 319, 320, 321, 323, 324, 325, 327, 328, 331, 338, 343, 344, 347, 359, 361, 362, 363, 365, 366, 367, 371, 372, 374, 376, 383, 388, 396, 399, 400, 401, 402, 403, 404, 405, 406, 410, 411, 415, 416, 417, 418, 421, 424, 425, 426, 427, 428, 430, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457], "int": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 49, 52, 53, 54, 56, 57, 58, 59, 61, 62, 64, 65, 70, 71, 73, 74, 77, 82, 85, 86, 87, 88, 91, 92, 95, 96, 97, 98, 99, 101, 102, 108, 109, 114, 115, 116, 120, 121, 133, 134, 145, 150, 156, 157, 160, 165, 170, 172, 175, 179, 182, 200, 202, 210, 214, 215, 225, 229, 237, 243, 246, 247, 250, 255, 262, 270, 273, 275, 276, 277, 282, 286, 288, 298, 300, 301, 308, 310, 318, 320, 323, 325, 327, 330, 331, 332, 337, 344, 345, 355, 356, 359, 361, 362, 363, 365, 366, 374, 378, 381, 383, 385, 386, 387, 388, 394, 402, 403, 404, 405, 415, 416, 418, 421, 424, 425, 426, 427, 430, 431, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458], "nonneg": [5, 142, 175, 258, 262, 318, 324, 361, 405, 411], "tini": [5, 82, 83, 87, 102, 170, 437, 443, 444], "overflow": [5, 23, 34, 38, 41, 76, 165, 172, 175, 177, 201, 203, 262, 269, 331, 403, 431, 441, 443, 444, 449, 455, 456], "plain": [5, 71, 78, 83, 92, 99, 106, 120, 130, 143, 150, 172, 185, 186, 189, 193, 194, 195, 202, 231, 243, 255, 277, 308, 317, 321, 322, 326, 363, 372, 383, 396, 397, 402, 410, 416, 427, 439, 445, 451, 453, 454, 455], "k": [5, 30, 71, 74, 83, 85, 88, 92, 99, 102, 147, 150, 166, 173, 179, 182, 190, 219, 225, 233, 236, 249, 262, 269, 275, 280, 283, 295, 300, 301, 308, 323, 324, 340, 347, 353, 361, 362, 365, 378, 403, 405, 406, 417, 437, 440, 441, 442, 443, 444, 445, 448, 449, 451, 455, 456], "n": [5, 7, 9, 14, 18, 24, 32, 33, 34, 41, 46, 57, 58, 61, 62, 70, 71, 73, 74, 78, 82, 83, 85, 87, 88, 90, 91, 93, 95, 99, 100, 102, 103, 105, 106, 114, 115, 116, 126, 130, 131, 132, 134, 135, 136, 140, 142, 143, 145, 148, 150, 153, 156, 157, 160, 164, 165, 166, 173, 175, 179, 180, 182, 189, 191, 194, 197, 202, 209, 210, 214, 215, 219, 223, 224, 225, 231, 233, 236, 237, 238, 243, 246, 247, 249, 250, 253, 254, 256, 257, 258, 262, 265, 266, 269, 276, 277, 279, 280, 282, 289, 290, 291, 295, 296, 300, 301, 308, 313, 317, 319, 320, 321, 323, 324, 325, 327, 328, 331, 338, 340, 342, 343, 344, 345, 347, 353, 355, 358, 359, 361, 362, 363, 364, 365, 366, 371, 372, 374, 375, 377, 379, 383, 386, 388, 394, 396, 401, 402, 403, 405, 406, 410, 413, 415, 416, 419, 421, 424, 425, 426, 427, 430, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458], "repres": [5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 18, 20, 22, 25, 27, 32, 34, 35, 37, 38, 41, 43, 44, 46, 53, 56, 58, 61, 62, 64, 66, 71, 75, 76, 82, 83, 85, 86, 88, 90, 92, 93, 96, 99, 101, 102, 105, 106, 114, 115, 116, 120, 123, 127, 130, 133, 135, 137, 139, 143, 144, 148, 150, 156, 157, 158, 165, 166, 172, 175, 180, 183, 186, 188, 190, 192, 195, 197, 198, 202, 204, 210, 212, 214, 221, 231, 232, 233, 237, 238, 239, 240, 241, 243, 246, 247, 250, 254, 255, 256, 258, 259, 262, 263, 268, 269, 271, 272, 276, 277, 278, 279, 282, 285, 286, 287, 288, 289, 290, 296, 301, 303, 304, 307, 310, 314, 315, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 330, 331, 332, 337, 340, 343, 344, 347, 350, 353, 354, 358, 361, 363, 365, 366, 367, 374, 376, 378, 381, 385, 386, 387, 388, 390, 391, 394, 395, 396, 397, 399, 400, 401, 402, 403, 405, 407, 410, 415, 419, 421, 424, 427, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458], "f": [5, 7, 18, 42, 57, 61, 64, 71, 76, 77, 82, 83, 85, 87, 88, 90, 91, 92, 93, 98, 99, 100, 102, 104, 105, 109, 111, 114, 115, 116, 120, 127, 128, 130, 131, 133, 137, 140, 141, 142, 145, 150, 153, 156, 157, 159, 160, 164, 165, 166, 167, 172, 173, 175, 179, 180, 182, 189, 197, 200, 202, 204, 207, 210, 214, 215, 217, 223, 224, 236, 238, 243, 246, 247, 249, 250, 254, 255, 258, 259, 262, 265, 269, 275, 276, 277, 279, 280, 282, 298, 300, 301, 308, 313, 315, 320, 322, 323, 324, 325, 327, 331, 337, 338, 340, 342, 345, 347, 353, 355, 356, 357, 358, 359, 361, 362, 363, 365, 366, 367, 372, 375, 378, 383, 386, 396, 400, 402, 403, 404, 405, 406, 410, 411, 415, 416, 417, 418, 421, 424, 427, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 451, 452, 453, 454, 455, 456], "float": [5, 16, 18, 31, 40, 41, 46, 56, 61, 66, 74, 82, 83, 85, 88, 91, 92, 101, 110, 114, 115, 120, 133, 144, 150, 152, 156, 157, 164, 165, 170, 172, 179, 182, 198, 202, 210, 214, 215, 216, 222, 237, 238, 242, 249, 250, 254, 259, 261, 262, 269, 270, 273, 274, 276, 277, 278, 282, 286, 290, 300, 301, 304, 310, 315, 318, 320, 321, 323, 325, 327, 331, 337, 343, 344, 345, 353, 355, 356, 361, 362, 363, 364, 365, 394, 402, 405, 411, 415, 417, 420, 424, 425, 426, 431, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458], "d": [5, 7, 9, 32, 33, 34, 56, 61, 62, 71, 73, 74, 76, 78, 82, 83, 84, 85, 88, 91, 92, 95, 98, 99, 102, 104, 105, 111, 114, 115, 116, 134, 142, 145, 150, 151, 153, 156, 158, 162, 165, 166, 170, 172, 175, 179, 180, 182, 189, 205, 214, 217, 219, 221, 223, 234, 236, 243, 247, 249, 255, 256, 257, 259, 269, 273, 275, 276, 279, 280, 284, 301, 312, 313, 317, 320, 321, 323, 324, 325, 327, 331, 334, 340, 344, 347, 364, 367, 375, 378, 388, 394, 401, 402, 403, 406, 410, 414, 415, 416, 417, 418, 421, 423, 424, 426, 427, 430, 431, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460], "doubl": [5, 15, 18, 25, 34, 38, 56, 61, 62, 73, 74, 76, 83, 85, 86, 88, 99, 102, 107, 115, 148, 150, 164, 165, 166, 171, 178, 182, 198, 224, 236, 237, 250, 257, 262, 269, 275, 277, 279, 280, 301, 313, 324, 325, 327, 328, 340, 366, 375, 392, 394, 401, 402, 403, 405, 406, 410, 413, 417, 419, 424, 434, 436, 440, 441, 442, 443, 448, 449, 451, 452, 455, 456, 457], "complex": [5, 13, 16, 31, 34, 66, 70, 71, 73, 76, 78, 82, 83, 84, 85, 87, 88, 99, 102, 103, 106, 107, 114, 116, 120, 122, 126, 140, 151, 157, 160, 164, 173, 175, 179, 183, 189, 192, 214, 215, 242, 249, 250, 256, 261, 262, 273, 274, 276, 282, 289, 301, 315, 316, 325, 328, 331, 337, 361, 363, 366, 372, 394, 402, 405, 410, 411, 414, 415, 416, 417, 418, 421, 424, 425, 426, 430, 439, 441, 442, 443, 444, 446, 448, 450, 451, 453, 455, 456, 457], "py_complex": [5, 15, 71, 88], "actual": [5, 7, 10, 13, 15, 23, 32, 34, 38, 47, 50, 53, 56, 59, 61, 62, 64, 71, 73, 74, 75, 76, 82, 83, 85, 87, 88, 90, 91, 92, 96, 98, 99, 101, 102, 103, 105, 115, 116, 120, 133, 135, 142, 148, 150, 157, 159, 165, 166, 167, 170, 180, 182, 186, 187, 189, 192, 195, 196, 198, 200, 202, 212, 214, 216, 219, 220, 223, 225, 234, 237, 238, 239, 240, 241, 243, 246, 249, 253, 255, 256, 257, 258, 259, 265, 269, 275, 276, 277, 279, 280, 285, 287, 290, 300, 302, 306, 307, 312, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 327, 328, 331, 337, 343, 347, 350, 358, 361, 363, 365, 366, 367, 372, 375, 377, 378, 381, 383, 385, 389, 397, 399, 401, 402, 403, 404, 407, 409, 410, 411, 415, 416, 419, 426, 430, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 456, 457, 458], "strong": [5, 7, 9, 13, 22, 23, 26, 30, 32, 34, 39, 44, 47, 50, 57, 61, 62, 65, 73, 85, 133, 160, 172, 229, 308, 321, 378, 399, 438, 443, 448, 450, 452, 455], "increas": [5, 34, 74, 76, 78, 85, 87, 88, 92, 96, 98, 105, 114, 132, 148, 179, 180, 200, 210, 236, 243, 247, 255, 258, 277, 308, 310, 320, 321, 324, 331, 345, 353, 359, 365, 376, 387, 389, 399, 403, 410, 415, 431, 437, 439, 440, 444, 448, 452, 455, 456, 457, 458], "typeobject": [5, 91, 439], "similar": [5, 7, 8, 9, 13, 22, 23, 26, 28, 30, 32, 33, 37, 38, 44, 47, 50, 55, 56, 57, 61, 62, 64, 65, 70, 71, 73, 76, 77, 82, 83, 84, 85, 86, 87, 88, 91, 92, 93, 97, 98, 99, 101, 102, 105, 106, 111, 120, 127, 128, 130, 131, 132, 133, 136, 139, 140, 143, 144, 147, 148, 150, 156, 157, 158, 159, 160, 161, 164, 165, 166, 169, 170, 172, 173, 175, 177, 179, 180, 184, 185, 194, 196, 200, 202, 214, 215, 217, 219, 222, 224, 225, 229, 231, 232, 234, 236, 238, 239, 240, 243, 246, 247, 249, 254, 256, 258, 263, 268, 269, 273, 276, 277, 279, 280, 282, 284, 287, 290, 292, 295, 301, 303, 308, 313, 314, 317, 318, 319, 320, 321, 324, 325, 328, 331, 334, 337, 338, 342, 343, 344, 347, 358, 359, 363, 365, 367, 371, 378, 383, 384, 385, 386, 388, 389, 392, 394, 397, 399, 400, 402, 403, 405, 407, 410, 411, 413, 415, 416, 417, 418, 421, 422, 425, 428, 430, 431, 434, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "anyth": [5, 28, 34, 40, 61, 70, 71, 74, 76, 78, 81, 83, 87, 90, 93, 98, 99, 102, 103, 105, 109, 114, 131, 150, 165, 166, 167, 170, 172, 175, 182, 185, 192, 200, 237, 245, 246, 255, 257, 269, 276, 280, 292, 301, 305, 312, 316, 317, 321, 325, 328, 331, 332, 338, 340, 343, 347, 353, 361, 363, 366, 371, 377, 381, 383, 388, 396, 402, 403, 405, 407, 413, 415, 416, 418, 421, 424, 434, 436, 438, 439, 442, 443, 447, 450, 452, 453, 457], "arbitrari": [5, 13, 23, 32, 34, 36, 38, 41, 44, 50, 53, 57, 59, 61, 70, 74, 76, 82, 83, 85, 86, 87, 88, 92, 93, 99, 102, 103, 105, 106, 110, 114, 127, 136, 148, 149, 150, 159, 164, 165, 168, 172, 175, 180, 192, 197, 214, 219, 220, 222, 223, 229, 234, 237, 238, 239, 243, 246, 247, 250, 255, 256, 259, 262, 269, 272, 274, 277, 278, 279, 280, 282, 289, 292, 295, 301, 304, 310, 312, 315, 316, 318, 319, 323, 324, 325, 331, 333, 337, 340, 343, 344, 347, 361, 363, 365, 366, 367, 385, 388, 394, 395, 396, 403, 415, 417, 421, 430, 431, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 451, 452, 453, 454, 455, 456, 457], "turn": [5, 23, 32, 33, 34, 56, 61, 71, 76, 83, 86, 87, 88, 90, 91, 93, 98, 101, 102, 105, 106, 109, 114, 116, 122, 145, 148, 150, 157, 165, 166, 179, 182, 183, 197, 198, 214, 225, 232, 234, 236, 243, 254, 255, 256, 269, 276, 279, 281, 293, 298, 302, 310, 315, 317, 318, 324, 331, 339, 340, 343, 345, 347, 361, 365, 367, 372, 376, 395, 399, 402, 407, 409, 410, 417, 423, 430, 431, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 451, 452, 453, 455], "statu": [5, 32, 33, 47, 57, 61, 70, 71, 82, 90, 92, 98, 99, 106, 109, 110, 111, 114, 137, 166, 185, 194, 196, 200, 202, 203, 231, 234, 236, 237, 259, 269, 276, 277, 287, 289, 291, 293, 316, 319, 320, 321, 328, 331, 353, 370, 372, 383, 413, 416, 423, 437, 441, 442, 444, 445, 447, 449, 451, 453, 454, 455, 456, 458], "where": [5, 10, 23, 24, 32, 33, 34, 37, 39, 41, 44, 46, 47, 52, 54, 55, 56, 57, 59, 61, 62, 64, 71, 73, 74, 75, 76, 77, 81, 83, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 99, 102, 103, 105, 106, 108, 109, 114, 116, 119, 120, 127, 130, 133, 137, 143, 144, 148, 150, 153, 157, 159, 164, 165, 166, 170, 172, 175, 177, 179, 180, 182, 185, 188, 190, 191, 192, 194, 197, 199, 200, 202, 204, 210, 212, 214, 215, 219, 221, 224, 225, 229, 231, 232, 234, 236, 237, 238, 239, 241, 243, 246, 247, 249, 250, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 265, 268, 269, 270, 273, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 287, 288, 290, 292, 294, 295, 296, 299, 300, 301, 306, 310, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324, 325, 327, 328, 331, 332, 337, 339, 340, 343, 344, 345, 347, 349, 353, 355, 357, 358, 359, 361, 362, 363, 365, 367, 370, 371, 372, 374, 375, 376, 378, 383, 385, 386, 387, 388, 390, 391, 394, 396, 397, 398, 400, 401, 402, 403, 404, 405, 407, 409, 410, 411, 413, 415, 416, 417, 418, 419, 421, 423, 425, 427, 428, 429, 430, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "success": [5, 7, 9, 10, 11, 12, 13, 14, 17, 18, 22, 23, 24, 26, 27, 30, 32, 33, 34, 37, 38, 39, 41, 44, 46, 47, 49, 52, 53, 54, 56, 57, 58, 59, 61, 62, 64, 65, 71, 73, 74, 77, 78, 83, 85, 88, 90, 93, 98, 102, 106, 109, 116, 120, 127, 130, 133, 149, 150, 165, 166, 180, 198, 204, 212, 231, 234, 237, 249, 254, 257, 265, 269, 277, 279, 282, 283, 285, 287, 296, 300, 301, 317, 318, 320, 321, 323, 327, 328, 331, 353, 365, 372, 385, 398, 402, 403, 416, 418, 431, 437, 440, 441, 444, 447, 448, 451, 453, 455, 457], "leav": [5, 23, 30, 34, 55, 58, 62, 64, 73, 74, 76, 78, 88, 90, 93, 99, 105, 114, 120, 132, 134, 150, 157, 159, 166, 173, 175, 177, 180, 182, 185, 194, 200, 202, 214, 215, 224, 225, 232, 236, 238, 246, 257, 259, 262, 269, 270, 276, 277, 299, 300, 320, 321, 337, 340, 343, 347, 361, 365, 381, 402, 407, 409, 411, 415, 417, 418, 419, 427, 428, 431, 437, 439, 440, 441, 442, 444, 448, 452, 455], "unmodifi": [5, 7, 78, 88, 110, 197, 198, 289, 324, 343, 371, 392], "py_cleanup_support": 5, "get": [5, 7, 10, 14, 17, 23, 26, 30, 32, 33, 34, 38, 41, 44, 47, 50, 52, 56, 59, 61, 62, 64, 65, 66, 70, 71, 73, 74, 75, 77, 84, 85, 86, 88, 90, 91, 92, 93, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 114, 116, 119, 120, 122, 123, 124, 127, 128, 131, 132, 133, 137, 143, 148, 150, 151, 157, 159, 160, 165, 166, 170, 172, 173, 175, 176, 177, 178, 179, 182, 185, 189, 194, 195, 197, 198, 200, 202, 205, 214, 216, 217, 219, 221, 222, 224, 225, 230, 231, 232, 234, 236, 237, 238, 239, 242, 243, 245, 246, 249, 250, 253, 254, 255, 256, 257, 259, 266, 269, 273, 276, 277, 279, 280, 282, 284, 285, 287, 290, 291, 295, 298, 300, 302, 304, 308, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 328, 331, 334, 337, 338, 340, 343, 344, 347, 353, 358, 362, 363, 365, 366, 371, 372, 374, 375, 376, 377, 378, 379, 383, 385, 386, 388, 389, 390, 391, 393, 394, 395, 399, 400, 402, 403, 405, 407, 412, 413, 414, 415, 416, 418, 419, 423, 424, 425, 427, 428, 430, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "eventu": [5, 32, 34, 71, 74, 77, 82, 102, 103, 123, 127, 132, 133, 182, 221, 231, 236, 238, 269, 277, 291, 345, 372, 386, 394, 407, 410, 414, 418, 438, 439, 441, 442, 443, 444, 445, 448, 449, 453, 455], "give": [5, 7, 14, 23, 34, 41, 61, 62, 70, 71, 72, 73, 75, 76, 77, 78, 82, 83, 84, 85, 87, 88, 90, 91, 92, 93, 97, 101, 102, 103, 104, 105, 114, 115, 116, 132, 144, 145, 148, 150, 165, 166, 170, 172, 174, 175, 179, 180, 182, 197, 202, 205, 212, 214, 217, 219, 226, 238, 246, 249, 256, 257, 262, 263, 265, 266, 269, 276, 277, 278, 279, 280, 282, 289, 296, 300, 301, 308, 314, 315, 319, 321, 323, 324, 325, 328, 331, 343, 344, 345, 347, 353, 361, 363, 365, 367, 371, 375, 379, 381, 383, 384, 385, 386, 390, 397, 401, 402, 403, 409, 410, 412, 413, 416, 419, 420, 421, 424, 426, 427, 428, 429, 430, 436, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 457, 458], "chanc": [5, 34, 57, 73, 98, 99, 103, 133, 134, 172, 238, 273, 343, 415, 416, 442, 449, 457], "had": [5, 22, 32, 41, 59, 70, 74, 78, 83, 87, 88, 93, 99, 103, 114, 115, 116, 128, 134, 145, 148, 159, 160, 166, 172, 175, 180, 188, 200, 202, 225, 232, 243, 269, 277, 280, 296, 298, 310, 318, 321, 323, 325, 347, 357, 359, 363, 365, 366, 371, 372, 385, 407, 411, 416, 419, 423, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "p": [5, 9, 11, 15, 22, 24, 25, 33, 37, 38, 41, 44, 53, 58, 61, 62, 82, 83, 88, 90, 91, 92, 95, 98, 99, 102, 105, 116, 145, 150, 153, 157, 162, 165, 166, 170, 172, 179, 182, 189, 191, 197, 214, 219, 224, 229, 234, 236, 237, 239, 249, 256, 259, 262, 269, 270, 276, 277, 279, 280, 282, 283, 290, 291, 295, 296, 300, 301, 309, 320, 323, 324, 325, 327, 328, 331, 340, 343, 344, 345, 347, 353, 361, 363, 365, 366, 375, 386, 387, 388, 396, 402, 406, 410, 415, 423, 424, 430, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458], "bool": [5, 6, 30, 56, 88, 90, 92, 114, 120, 133, 157, 158, 165, 170, 172, 180, 200, 214, 215, 249, 250, 255, 270, 273, 275, 320, 327, 356, 359, 363, 365, 385, 394, 402, 403, 405, 415, 425, 440, 443, 447, 449, 450, 456, 457], "test": [5, 23, 34, 45, 55, 56, 59, 66, 71, 76, 77, 85, 87, 88, 90, 91, 92, 95, 96, 97, 98, 99, 102, 104, 105, 106, 109, 111, 114, 116, 119, 123, 144, 145, 150, 151, 156, 160, 165, 166, 167, 170, 175, 176, 178, 180, 189, 202, 209, 214, 215, 217, 225, 229, 234, 236, 237, 238, 239, 242, 243, 247, 249, 250, 252, 254, 257, 262, 269, 275, 277, 279, 287, 291, 300, 301, 317, 320, 322, 323, 331, 337, 342, 343, 345, 353, 359, 363, 366, 372, 378, 383, 388, 394, 397, 400, 402, 403, 409, 414, 415, 416, 417, 418, 421, 424, 425, 426, 427, 430, 431, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458], "truth": [5, 6, 87, 93, 103, 165, 214, 275, 327, 388, 403, 405, 440, 449, 450], "boolean": [5, 16, 31, 34, 66, 83, 88, 98, 104, 114, 116, 132, 157, 158, 165, 166, 172, 180, 182, 214, 224, 225, 232, 234, 237, 250, 255, 256, 261, 269, 275, 277, 286, 301, 302, 318, 319, 320, 321, 343, 347, 353, 356, 361, 363, 366, 372, 375, 378, 385, 386, 394, 399, 402, 403, 417, 438, 441, 442, 443, 444, 445, 448, 449, 451, 453, 454, 455, 457, 458], "redic": 5, "equival": [5, 7, 9, 10, 13, 18, 22, 23, 24, 32, 34, 37, 39, 41, 44, 46, 47, 52, 53, 56, 58, 59, 60, 61, 62, 71, 74, 76, 79, 84, 85, 87, 88, 92, 93, 95, 97, 101, 102, 110, 111, 114, 115, 116, 127, 131, 132, 133, 142, 144, 148, 150, 153, 156, 157, 159, 165, 166, 167, 170, 172, 175, 179, 180, 185, 193, 194, 196, 202, 214, 215, 217, 221, 223, 224, 225, 226, 228, 229, 232, 233, 234, 236, 238, 239, 243, 247, 249, 250, 254, 255, 256, 257, 258, 259, 262, 269, 272, 275, 276, 277, 278, 279, 282, 283, 284, 288, 290, 298, 300, 301, 303, 306, 310, 311, 318, 319, 323, 324, 325, 328, 331, 334, 337, 340, 343, 344, 347, 356, 361, 362, 363, 364, 365, 371, 377, 379, 381, 385, 397, 399, 402, 403, 405, 410, 411, 414, 415, 416, 417, 421, 430, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458], "true": [5, 6, 7, 8, 9, 11, 12, 13, 15, 17, 19, 20, 22, 23, 25, 27, 29, 32, 33, 34, 36, 37, 38, 42, 43, 44, 47, 52, 53, 54, 56, 57, 58, 59, 61, 62, 64, 71, 74, 76, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 96, 97, 98, 99, 101, 103, 104, 105, 109, 110, 111, 114, 116, 119, 120, 123, 124, 126, 127, 128, 129, 130, 132, 133, 136, 137, 139, 140, 142, 143, 144, 145, 147, 148, 150, 151, 153, 156, 157, 158, 159, 160, 164, 165, 166, 168, 170, 172, 175, 177, 178, 179, 180, 182, 185, 187, 189, 190, 192, 193, 194, 196, 197, 198, 200, 202, 203, 204, 205, 207, 209, 210, 212, 214, 215, 216, 217, 219, 220, 221, 224, 225, 227, 229, 230, 231, 232, 237, 238, 239, 241, 243, 246, 247, 249, 250, 251, 254, 255, 256, 257, 258, 259, 262, 263, 265, 269, 270, 275, 276, 277, 278, 279, 280, 282, 285, 286, 289, 290, 293, 294, 296, 298, 299, 301, 302, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 330, 331, 334, 336, 337, 338, 340, 342, 343, 344, 347, 350, 351, 353, 354, 357, 358, 359, 361, 362, 363, 365, 366, 367, 371, 372, 373, 375, 376, 378, 379, 381, 383, 385, 386, 387, 388, 390, 392, 394, 395, 396, 397, 398, 400, 402, 403, 405, 406, 410, 411, 415, 416, 417, 418, 419, 421, 423, 424, 425, 426, 427, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "fals": [5, 6, 7, 22, 32, 33, 34, 46, 47, 56, 61, 62, 64, 71, 82, 83, 85, 87, 88, 90, 92, 93, 96, 97, 98, 99, 101, 103, 104, 105, 106, 109, 110, 111, 114, 116, 120, 123, 126, 127, 128, 129, 130, 132, 133, 136, 137, 139, 142, 143, 144, 145, 147, 148, 150, 151, 153, 156, 157, 158, 159, 160, 164, 165, 166, 168, 170, 172, 175, 177, 179, 180, 182, 185, 188, 189, 190, 192, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 205, 207, 209, 214, 215, 216, 217, 219, 220, 221, 224, 225, 230, 231, 232, 234, 237, 238, 241, 243, 246, 247, 249, 250, 254, 255, 256, 257, 258, 259, 262, 263, 269, 270, 275, 276, 277, 278, 279, 280, 282, 285, 286, 289, 293, 294, 296, 298, 299, 302, 306, 307, 308, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 327, 328, 331, 334, 337, 338, 340, 342, 343, 344, 347, 350, 351, 353, 357, 358, 359, 361, 362, 363, 365, 366, 367, 371, 372, 373, 375, 376, 378, 379, 383, 388, 390, 392, 394, 395, 396, 397, 400, 402, 403, 405, 406, 410, 411, 415, 416, 417, 418, 419, 424, 425, 427, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "express": [5, 10, 22, 39, 46, 47, 52, 58, 64, 66, 71, 78, 83, 84, 85, 91, 94, 99, 109, 114, 119, 133, 137, 144, 149, 151, 152, 153, 157, 172, 175, 179, 180, 182, 202, 209, 214, 219, 220, 236, 242, 243, 247, 249, 254, 256, 262, 269, 275, 277, 280, 290, 300, 305, 315, 318, 320, 321, 324, 325, 327, 331, 332, 340, 341, 344, 345, 347, 355, 357, 362, 363, 364, 365, 367, 374, 376, 378, 388, 394, 401, 402, 403, 404, 406, 407, 408, 410, 414, 417, 418, 419, 421, 422, 424, 425, 426, 430, 437, 438, 439, 440, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458], "nest": [5, 13, 71, 76, 83, 85, 92, 93, 98, 102, 108, 133, 150, 159, 165, 170, 175, 179, 180, 182, 188, 202, 214, 215, 243, 249, 250, 255, 259, 269, 280, 284, 289, 294, 296, 301, 324, 325, 330, 331, 343, 347, 353, 358, 363, 365, 384, 388, 390, 402, 403, 404, 405, 410, 411, 415, 416, 418, 421, 424, 427, 430, 437, 442, 443, 444, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456], "exce": [5, 57, 120, 130, 133, 156, 157, 175, 214, 216, 246, 270, 277, 282, 304, 324, 338, 343, 385, 397, 416, 444, 448, 456], "long_max": [5, 38], "howev": [5, 6, 10, 23, 24, 32, 33, 34, 41, 44, 47, 55, 61, 69, 70, 71, 74, 76, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 109, 114, 120, 122, 127, 129, 133, 148, 150, 151, 157, 159, 160, 165, 166, 170, 172, 175, 179, 182, 183, 185, 188, 190, 192, 194, 195, 197, 198, 202, 212, 214, 215, 216, 219, 224, 225, 228, 232, 234, 236, 237, 238, 240, 243, 245, 246, 247, 249, 255, 256, 257, 259, 269, 276, 277, 278, 282, 283, 292, 293, 298, 300, 301, 310, 313, 314, 315, 316, 318, 320, 321, 323, 324, 325, 328, 331, 332, 333, 336, 337, 340, 342, 343, 345, 347, 353, 355, 358, 362, 363, 364, 365, 366, 367, 378, 379, 381, 383, 385, 386, 390, 391, 394, 397, 401, 403, 404, 405, 407, 415, 416, 417, 418, 422, 424, 425, 427, 430, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457], "proper": [5, 32, 33, 39, 47, 70, 73, 83, 88, 97, 144, 166, 180, 202, 224, 234, 236, 238, 270, 314, 318, 321, 324, 327, 331, 340, 365, 372, 385, 388, 402, 403, 405, 422, 437, 449, 450, 454, 455, 456], "rang": [5, 7, 20, 23, 25, 34, 38, 57, 62, 63, 70, 71, 72, 74, 82, 83, 85, 88, 90, 91, 92, 93, 96, 99, 100, 102, 105, 106, 114, 120, 128, 132, 133, 137, 140, 142, 143, 144, 148, 150, 156, 157, 159, 165, 166, 167, 172, 175, 179, 180, 182, 200, 201, 202, 212, 214, 215, 220, 224, 225, 230, 233, 237, 242, 243, 247, 249, 250, 261, 265, 269, 270, 277, 280, 282, 285, 286, 287, 290, 297, 298, 300, 301, 304, 308, 315, 317, 318, 320, 321, 323, 325, 327, 331, 332, 341, 343, 344, 345, 347, 355, 358, 359, 361, 363, 365, 371, 382, 385, 394, 399, 400, 402, 403, 404, 405, 407, 409, 410, 411, 415, 417, 418, 421, 424, 425, 426, 427, 430, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458], "most": [5, 7, 10, 15, 23, 25, 30, 32, 33, 34, 38, 41, 44, 55, 56, 57, 59, 61, 62, 66, 70, 71, 73, 74, 75, 76, 77, 78, 79, 82, 85, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 109, 110, 112, 114, 119, 120, 127, 128, 130, 132, 133, 136, 137, 139, 141, 142, 148, 150, 156, 157, 159, 164, 165, 166, 172, 173, 175, 177, 179, 180, 182, 183, 185, 186, 187, 189, 190, 191, 192, 194, 196, 199, 200, 202, 203, 204, 210, 212, 214, 215, 216, 219, 222, 223, 225, 229, 232, 236, 237, 238, 239, 242, 243, 244, 246, 247, 249, 250, 254, 255, 256, 257, 258, 262, 265, 269, 270, 273, 275, 276, 277, 278, 279, 280, 282, 284, 285, 287, 289, 290, 292, 296, 298, 300, 301, 303, 308, 310, 311, 312, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 331, 335, 337, 338, 340, 342, 343, 344, 345, 347, 352, 358, 359, 361, 363, 364, 365, 366, 367, 368, 372, 376, 377, 378, 379, 382, 383, 385, 386, 388, 389, 390, 391, 396, 397, 399, 400, 401, 402, 403, 404, 405, 407, 409, 411, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 430, 431, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460], "signific": [5, 34, 40, 93, 99, 102, 103, 105, 120, 126, 148, 167, 175, 182, 186, 214, 247, 249, 257, 262, 270, 282, 290, 300, 324, 325, 331, 343, 365, 374, 403, 407, 409, 410, 419, 427, 430, 437, 438, 439, 441, 442, 443, 444, 446, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458], "silent": [5, 22, 39, 47, 54, 57, 64, 98, 99, 105, 110, 127, 134, 159, 175, 202, 207, 216, 237, 255, 257, 259, 265, 269, 270, 277, 279, 280, 289, 290, 314, 316, 320, 325, 328, 343, 366, 371, 400, 411, 416, 430, 436, 437, 441, 442, 444, 445, 447, 449, 450, 451, 453, 454, 456, 457, 458], "truncat": [5, 18, 57, 62, 82, 83, 135, 142, 166, 172, 175, 202, 214, 223, 237, 246, 249, 258, 277, 302, 318, 320, 324, 327, 338, 340, 342, 358, 359, 370, 397, 399, 403, 405, 421, 437, 439, 443, 444, 445, 451, 452, 453, 454, 456], "too": [5, 18, 34, 61, 64, 73, 76, 82, 88, 90, 92, 93, 98, 99, 102, 105, 106, 111, 119, 127, 131, 133, 144, 148, 156, 157, 159, 161, 165, 173, 175, 177, 180, 182, 183, 193, 201, 202, 214, 219, 232, 245, 246, 247, 269, 275, 276, 287, 289, 314, 315, 318, 319, 320, 321, 324, 325, 327, 328, 331, 340, 343, 347, 361, 363, 365, 366, 367, 384, 388, 397, 398, 399, 401, 403, 407, 409, 414, 415, 416, 421, 424, 426, 430, 437, 438, 439, 440, 441, 443, 444, 445, 448, 449, 450, 452, 454, 456, 457], "small": [5, 32, 38, 41, 53, 56, 61, 66, 71, 76, 78, 82, 83, 88, 90, 92, 96, 99, 100, 102, 103, 105, 116, 148, 158, 159, 165, 174, 175, 179, 182, 232, 236, 242, 246, 249, 259, 262, 269, 277, 290, 300, 301, 312, 315, 318, 323, 324, 340, 343, 359, 365, 383, 384, 388, 399, 403, 411, 414, 416, 417, 427, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 453, 455, 457, 458], "semant": [5, 7, 10, 11, 13, 27, 34, 55, 61, 62, 78, 85, 88, 92, 98, 99, 101, 127, 133, 151, 175, 182, 185, 191, 194, 196, 197, 214, 237, 238, 240, 242, 245, 255, 256, 257, 259, 269, 276, 277, 279, 282, 293, 298, 301, 312, 313, 314, 318, 322, 323, 331, 343, 344, 363, 371, 381, 398, 399, 400, 402, 403, 404, 405, 407, 408, 411, 415, 416, 429, 430, 431, 437, 439, 440, 442, 443, 445, 447, 449, 451, 452, 453, 454, 455, 456, 457], "inherit": [5, 28, 33, 59, 61, 73, 74, 76, 83, 85, 86, 88, 91, 92, 97, 111, 114, 116, 120, 122, 133, 145, 148, 150, 151, 159, 165, 166, 172, 188, 200, 210, 212, 214, 223, 224, 236, 238, 243, 246, 247, 257, 259, 269, 270, 276, 279, 282, 310, 318, 319, 321, 322, 328, 330, 338, 340, 343, 347, 348, 353, 355, 363, 385, 389, 390, 391, 402, 403, 405, 419, 436, 437, 440, 442, 443, 445, 447, 448, 449, 452, 454, 456, 457, 458], "downcast": [5, 431], "mileag": [5, 317], "vari": [5, 7, 56, 73, 76, 82, 83, 85, 93, 102, 104, 105, 148, 164, 172, 180, 182, 214, 236, 239, 243, 246, 254, 259, 266, 287, 300, 317, 319, 320, 321, 322, 323, 324, 331, 340, 343, 344, 347, 362, 366, 367, 376, 402, 403, 409, 437, 438, 439, 441, 443, 444, 451, 452, 453], "occur": [5, 7, 13, 17, 18, 22, 23, 30, 34, 35, 38, 39, 41, 44, 47, 57, 61, 62, 64, 71, 73, 77, 78, 83, 84, 85, 88, 91, 93, 96, 98, 99, 101, 105, 108, 114, 116, 120, 131, 133, 137, 143, 144, 147, 148, 156, 157, 159, 160, 164, 166, 170, 172, 175, 179, 180, 182, 192, 201, 202, 207, 214, 217, 219, 226, 236, 238, 242, 243, 246, 249, 255, 257, 258, 259, 262, 268, 276, 277, 280, 282, 284, 293, 296, 298, 300, 301, 310, 314, 315, 317, 318, 321, 323, 324, 325, 328, 331, 332, 337, 338, 340, 342, 343, 344, 347, 349, 353, 358, 361, 362, 363, 365, 372, 376, 378, 379, 383, 384, 385, 387, 388, 390, 394, 397, 399, 402, 403, 404, 405, 407, 410, 411, 413, 415, 416, 418, 425, 427, 440, 442, 443, 444, 445, 447, 451, 452, 453, 456, 457, 458], "remain": [5, 13, 32, 35, 41, 55, 61, 71, 74, 76, 78, 83, 85, 92, 93, 99, 102, 107, 114, 116, 120, 133, 150, 151, 156, 159, 164, 165, 166, 172, 175, 179, 180, 182, 183, 184, 187, 191, 192, 194, 197, 198, 200, 202, 207, 214, 215, 216, 225, 236, 237, 238, 256, 259, 262, 269, 276, 277, 279, 280, 282, 294, 304, 306, 315, 318, 320, 323, 324, 325, 328, 331, 338, 340, 342, 343, 353, 361, 362, 363, 365, 371, 376, 378, 383, 399, 401, 402, 403, 407, 410, 411, 416, 417, 424, 426, 430, 431, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "option": [5, 23, 32, 33, 34, 41, 46, 47, 55, 56, 57, 59, 61, 62, 64, 66, 70, 71, 73, 76, 79, 84, 85, 86, 90, 91, 92, 93, 95, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108, 110, 112, 115, 116, 119, 120, 122, 123, 129, 130, 131, 132, 133, 134, 136, 139, 143, 145, 147, 148, 150, 151, 153, 156, 157, 158, 159, 160, 164, 165, 166, 170, 172, 173, 175, 177, 178, 179, 184, 185, 186, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 202, 203, 205, 207, 210, 212, 214, 215, 216, 219, 221, 224, 225, 227, 230, 231, 234, 237, 238, 239, 240, 242, 243, 245, 246, 247, 249, 254, 255, 256, 257, 258, 259, 263, 265, 269, 270, 277, 278, 279, 280, 282, 285, 287, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321, 323, 324, 325, 326, 327, 328, 329, 331, 333, 334, 335, 336, 340, 342, 343, 344, 345, 348, 350, 351, 355, 358, 359, 361, 362, 363, 366, 367, 371, 372, 374, 375, 376, 379, 383, 386, 388, 389, 390, 392, 394, 395, 396, 399, 400, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 416, 417, 418, 421, 423, 424, 425, 426, 427, 428, 429, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458], "default": [5, 7, 14, 17, 23, 24, 27, 32, 33, 34, 44, 47, 55, 56, 59, 61, 62, 64, 69, 74, 75, 76, 81, 82, 84, 85, 87, 90, 91, 92, 93, 96, 97, 98, 99, 101, 102, 105, 106, 107, 110, 115, 116, 119, 120, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 139, 140, 142, 143, 144, 145, 147, 148, 149, 150, 151, 153, 156, 157, 158, 159, 160, 164, 165, 166, 167, 172, 173, 175, 177, 178, 179, 180, 182, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 207, 212, 214, 215, 216, 217, 218, 219, 220, 223, 224, 225, 226, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 243, 246, 247, 249, 250, 253, 254, 255, 256, 257, 258, 259, 262, 263, 265, 269, 270, 272, 273, 275, 277, 278, 279, 280, 282, 283, 285, 286, 287, 289, 290, 291, 293, 295, 296, 298, 299, 300, 301, 302, 303, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 323, 324, 325, 327, 328, 331, 332, 334, 335, 338, 340, 342, 343, 344, 345, 347, 351, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 371, 372, 374, 375, 377, 378, 379, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 398, 399, 400, 402, 403, 404, 405, 406, 407, 410, 411, 415, 417, 419, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458], "touch": [5, 83, 87, 166, 216, 236, 279, 280, 404, 414, 425, 443, 457], "keyword": [5, 10, 19, 56, 61, 62, 64, 66, 73, 74, 82, 85, 87, 93, 97, 98, 99, 110, 111, 114, 116, 120, 123, 129, 133, 134, 142, 148, 150, 157, 160, 164, 165, 166, 172, 175, 178, 179, 180, 182, 185, 190, 194, 195, 196, 197, 198, 202, 207, 214, 215, 219, 224, 225, 226, 229, 232, 234, 236, 239, 242, 243, 246, 249, 250, 252, 254, 255, 256, 259, 265, 269, 275, 276, 277, 279, 280, 282, 286, 289, 295, 300, 301, 303, 305, 307, 309, 313, 314, 317, 318, 320, 324, 325, 328, 331, 335, 337, 338, 340, 342, 343, 347, 350, 353, 361, 362, 363, 365, 366, 367, 372, 375, 376, 379, 383, 386, 388, 395, 397, 399, 402, 403, 404, 405, 406, 411, 417, 418, 421, 424, 427, 437, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 456, 457, 458], "current": [5, 7, 10, 11, 12, 13, 17, 18, 23, 26, 27, 28, 30, 32, 33, 34, 38, 40, 41, 42, 44, 47, 51, 55, 57, 59, 60, 61, 62, 64, 71, 73, 74, 76, 77, 78, 82, 85, 86, 87, 88, 90, 93, 94, 96, 97, 98, 99, 100, 101, 102, 105, 106, 110, 111, 114, 115, 116, 118, 119, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 137, 143, 145, 148, 150, 153, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 168, 172, 175, 178, 180, 182, 185, 186, 189, 191, 192, 194, 197, 198, 199, 200, 201, 202, 203, 204, 207, 209, 211, 212, 214, 216, 219, 220, 223, 224, 225, 229, 231, 233, 234, 236, 237, 238, 244, 246, 247, 249, 254, 255, 257, 259, 261, 262, 263, 265, 268, 269, 270, 276, 277, 278, 279, 280, 282, 285, 289, 290, 291, 293, 295, 296, 298, 300, 301, 302, 304, 305, 306, 307, 309, 311, 313, 314, 315, 318, 320, 321, 323, 324, 325, 328, 331, 332, 333, 334, 335, 337, 338, 340, 342, 343, 344, 345, 347, 350, 353, 357, 358, 361, 363, 365, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 385, 386, 387, 388, 390, 391, 394, 397, 399, 401, 402, 403, 404, 405, 406, 407, 410, 411, 413, 415, 416, 421, 422, 423, 425, 426, 427, 430, 431, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460], "end": [5, 7, 9, 13, 23, 24, 28, 30, 32, 33, 34, 36, 37, 38, 41, 54, 56, 58, 61, 62, 64, 70, 71, 73, 77, 78, 82, 84, 85, 87, 88, 92, 93, 95, 97, 98, 99, 101, 102, 103, 105, 107, 111, 114, 115, 116, 120, 121, 124, 127, 129, 130, 132, 133, 136, 139, 142, 143, 145, 148, 149, 150, 153, 157, 159, 164, 165, 166, 167, 171, 172, 175, 179, 180, 182, 183, 185, 194, 196, 197, 198, 199, 202, 204, 214, 215, 216, 223, 224, 229, 231, 232, 234, 236, 237, 238, 243, 246, 249, 250, 255, 256, 257, 258, 259, 265, 266, 268, 269, 270, 276, 277, 278, 279, 280, 284, 287, 290, 291, 293, 296, 299, 300, 301, 302, 310, 312, 313, 314, 317, 318, 320, 321, 324, 325, 327, 328, 331, 332, 334, 337, 338, 340, 342, 344, 349, 353, 354, 355, 357, 358, 361, 365, 366, 367, 372, 376, 383, 385, 386, 388, 390, 391, 392, 396, 397, 399, 400, 401, 402, 403, 405, 406, 407, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 421, 423, 424, 425, 427, 430, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458], "here": [5, 7, 23, 28, 32, 33, 34, 41, 44, 49, 50, 60, 61, 70, 71, 73, 74, 76, 78, 82, 83, 86, 87, 88, 90, 91, 92, 93, 95, 98, 99, 102, 103, 104, 106, 109, 111, 112, 114, 116, 123, 130, 131, 137, 143, 145, 148, 150, 154, 157, 159, 160, 163, 164, 165, 166, 170, 172, 175, 179, 180, 182, 185, 187, 188, 189, 191, 194, 195, 196, 197, 198, 205, 210, 211, 212, 214, 215, 219, 223, 224, 231, 234, 236, 237, 239, 243, 244, 245, 255, 256, 257, 258, 262, 264, 269, 276, 277, 280, 282, 287, 289, 296, 297, 301, 304, 311, 313, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 331, 337, 338, 339, 340, 343, 344, 345, 347, 353, 361, 362, 363, 365, 366, 367, 368, 372, 374, 376, 379, 383, 385, 386, 388, 398, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 415, 416, 417, 418, 421, 422, 424, 425, 426, 429, 430, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 451, 452, 454, 455, 456, 457, 458], "colon": [5, 85, 88, 102, 172, 182, 185, 188, 194, 197, 217, 219, 231, 243, 247, 255, 259, 278, 280, 284, 301, 317, 325, 354, 355, 372, 376, 383, 385, 402, 405, 406, 410, 416, 418, 430, 431, 436, 443, 444, 455], "error": [5, 7, 8, 9, 13, 17, 18, 21, 22, 24, 25, 26, 27, 28, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 47, 49, 52, 53, 54, 56, 57, 58, 59, 61, 62, 64, 65, 66, 70, 73, 74, 76, 77, 78, 82, 85, 87, 88, 92, 93, 96, 97, 98, 99, 101, 102, 103, 105, 109, 110, 114, 115, 116, 123, 124, 126, 127, 131, 132, 134, 135, 136, 137, 139, 142, 144, 145, 147, 149, 153, 156, 157, 158, 159, 161, 164, 165, 166, 170, 172, 173, 179, 180, 182, 183, 185, 186, 190, 191, 192, 194, 196, 197, 198, 201, 202, 203, 205, 207, 212, 214, 215, 217, 218, 223, 226, 233, 234, 236, 237, 238, 242, 244, 245, 246, 247, 250, 253, 254, 255, 256, 257, 258, 259, 262, 265, 268, 269, 270, 271, 272, 277, 278, 279, 280, 282, 284, 287, 288, 290, 293, 298, 300, 301, 304, 310, 313, 314, 315, 316, 317, 318, 319, 320, 321, 324, 325, 327, 328, 331, 335, 338, 340, 343, 347, 353, 358, 361, 363, 365, 366, 367, 369, 371, 372, 375, 376, 377, 378, 379, 381, 382, 383, 385, 387, 388, 389, 390, 391, 394, 395, 396, 397, 399, 402, 403, 404, 405, 406, 410, 411, 414, 417, 420, 424, 425, 427, 430, 431, 436, 437, 438, 439, 441, 442, 443, 444, 445, 450, 451, 452, 453, 454, 455, 456, 457, 458], "messag": [5, 23, 32, 33, 52, 57, 64, 66, 70, 71, 73, 74, 77, 82, 83, 87, 90, 93, 96, 102, 103, 105, 106, 109, 114, 116, 119, 120, 127, 130, 135, 136, 137, 139, 143, 145, 147, 148, 153, 158, 163, 165, 166, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 201, 202, 212, 217, 218, 223, 231, 232, 234, 235, 236, 237, 238, 242, 243, 247, 250, 255, 256, 257, 266, 268, 269, 270, 271, 276, 277, 280, 287, 293, 296, 299, 301, 304, 313, 315, 317, 318, 319, 320, 321, 322, 331, 335, 336, 337, 340, 345, 346, 355, 358, 363, 365, 366, 367, 370, 372, 374, 375, 376, 383, 388, 389, 390, 394, 396, 402, 404, 406, 411, 413, 418, 423, 424, 426, 427, 429, 430, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 448, 450, 451, 452, 453, 454, 455, 456, 458], "associ": [5, 23, 24, 27, 32, 43, 56, 59, 61, 64, 71, 73, 74, 82, 84, 85, 88, 90, 92, 96, 97, 98, 99, 100, 102, 103, 106, 107, 110, 114, 120, 129, 133, 137, 148, 150, 156, 164, 166, 168, 175, 180, 182, 183, 185, 190, 192, 202, 219, 231, 234, 236, 237, 238, 240, 243, 255, 263, 269, 272, 276, 277, 280, 282, 296, 310, 311, 318, 324, 326, 328, 332, 337, 340, 343, 345, 347, 353, 363, 365, 378, 379, 381, 382, 383, 385, 388, 390, 391, 394, 395, 397, 398, 401, 402, 403, 404, 406, 407, 411, 413, 415, 416, 417, 418, 429, 444, 447, 450, 451, 452, 453, 456, 457, 458], "semicolon": [5, 32, 74, 102, 228, 280, 320, 402, 411, 430, 436], "mutual": [5, 61, 101, 250, 256, 259, 276, 301, 347, 357, 363, 379, 404, 450], "exclud": [5, 18, 33, 57, 62, 85, 88, 97, 99, 102, 150, 153, 170, 172, 180, 182, 216, 224, 236, 249, 259, 262, 266, 277, 279, 290, 296, 300, 321, 323, 324, 331, 337, 343, 344, 345, 353, 359, 366, 388, 396, 397, 401, 402, 403, 405, 411, 417, 424, 430, 443, 444, 447, 448, 451, 452, 453, 454, 456, 457, 458], "decrement": [5, 7, 9, 34, 61, 71, 74, 76, 83, 132, 133, 180, 269, 277, 280, 315, 343, 353, 403], "abov": [5, 7, 23, 32, 33, 34, 41, 56, 61, 62, 70, 71, 73, 74, 83, 85, 86, 87, 88, 90, 92, 93, 95, 96, 97, 98, 99, 101, 102, 104, 105, 106, 107, 110, 111, 114, 116, 120, 123, 131, 132, 133, 140, 142, 143, 144, 148, 150, 153, 154, 157, 159, 164, 165, 166, 167, 168, 170, 172, 173, 175, 177, 178, 179, 180, 182, 186, 189, 192, 194, 197, 202, 204, 212, 214, 219, 223, 224, 225, 231, 232, 236, 239, 246, 247, 254, 255, 256, 257, 258, 262, 265, 269, 273, 276, 277, 280, 282, 285, 289, 290, 295, 301, 306, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 327, 328, 331, 333, 338, 340, 344, 347, 353, 357, 361, 363, 365, 366, 367, 371, 372, 375, 378, 381, 383, 385, 388, 395, 396, 401, 402, 403, 406, 407, 409, 410, 411, 415, 416, 418, 419, 430, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 451, 452, 453, 454, 456, 457, 458], "succe": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 22, 25, 27, 29, 35, 36, 37, 38, 39, 42, 43, 44, 46, 47, 52, 53, 54, 58, 59, 60, 61, 62, 65, 83, 102, 116, 182, 198, 214, 221, 277, 279, 298, 314, 318, 321, 340, 365, 366, 367, 371, 372, 381, 385, 402, 404, 406, 430, 439, 440, 450], "arg": [5, 10, 20, 23, 28, 32, 33, 34, 35, 56, 57, 59, 60, 61, 62, 64, 70, 71, 73, 74, 76, 82, 83, 85, 87, 88, 91, 92, 97, 98, 99, 110, 111, 114, 116, 119, 120, 126, 131, 133, 134, 135, 137, 145, 150, 156, 159, 160, 164, 165, 166, 172, 179, 180, 186, 189, 192, 194, 201, 202, 204, 214, 215, 217, 221, 236, 237, 238, 241, 243, 249, 255, 256, 257, 259, 269, 270, 275, 276, 277, 280, 282, 283, 289, 290, 298, 300, 317, 324, 325, 328, 331, 334, 340, 343, 353, 357, 361, 363, 365, 366, 367, 372, 375, 378, 402, 403, 406, 411, 416, 418, 423, 426, 430, 431, 437, 440, 441, 442, 443, 444, 445, 448, 449, 450, 451, 452, 454, 455, 457, 458], "exhaust": [5, 61, 76, 85, 93, 116, 148, 150, 180, 214, 231, 249, 277, 309, 322, 324, 340, 347, 363, 366, 397, 402, 403, 405, 416, 417, 439, 441, 442, 443, 445, 454, 455], "due": [5, 23, 32, 34, 44, 61, 64, 73, 74, 76, 82, 91, 98, 101, 106, 116, 120, 125, 131, 133, 159, 164, 165, 166, 172, 173, 179, 197, 202, 210, 214, 216, 221, 231, 236, 238, 246, 255, 256, 257, 259, 262, 269, 282, 296, 307, 309, 321, 324, 328, 340, 343, 349, 363, 365, 366, 378, 384, 397, 402, 403, 405, 406, 407, 410, 416, 431, 436, 437, 438, 441, 443, 444, 445, 447, 448, 449, 451, 452, 454, 455, 456, 457, 458], "failur": [5, 7, 8, 9, 10, 11, 13, 15, 18, 22, 23, 24, 25, 27, 28, 30, 32, 33, 34, 37, 38, 39, 41, 44, 46, 47, 49, 52, 53, 56, 57, 58, 60, 62, 64, 71, 88, 101, 102, 109, 116, 127, 165, 166, 172, 180, 182, 202, 232, 257, 265, 268, 269, 277, 279, 284, 298, 304, 314, 316, 318, 321, 324, 340, 344, 366, 367, 398, 400, 401, 402, 405, 406, 411, 418, 431, 438, 441, 443, 444, 446, 448, 450, 451, 452, 453, 454, 455, 456, 457], "left": [5, 15, 32, 33, 46, 61, 62, 70, 71, 73, 85, 88, 90, 93, 99, 102, 103, 105, 116, 120, 130, 139, 140, 142, 144, 145, 147, 150, 157, 165, 166, 170, 172, 175, 179, 180, 182, 185, 201, 205, 214, 215, 217, 224, 236, 238, 255, 256, 257, 259, 269, 275, 276, 277, 278, 280, 284, 296, 301, 306, 313, 318, 320, 321, 324, 325, 328, 342, 343, 347, 353, 361, 363, 364, 365, 367, 372, 376, 386, 402, 403, 405, 407, 410, 411, 415, 416, 417, 421, 422, 423, 424, 427, 431, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 447, 449, 451, 454, 456, 457], "untouch": [5, 62, 170, 431], "posit": [5, 7, 10, 13, 15, 20, 23, 25, 34, 37, 46, 56, 58, 59, 61, 62, 71, 74, 82, 83, 85, 88, 90, 92, 93, 95, 97, 99, 102, 103, 104, 105, 110, 114, 115, 116, 120, 127, 130, 132, 133, 134, 137, 140, 142, 144, 145, 148, 150, 152, 153, 156, 164, 165, 166, 170, 172, 175, 179, 180, 182, 200, 202, 204, 210, 214, 215, 223, 224, 225, 226, 236, 243, 246, 249, 250, 254, 255, 258, 262, 265, 268, 269, 270, 273, 275, 277, 279, 282, 283, 293, 296, 298, 300, 302, 303, 307, 310, 314, 318, 320, 321, 323, 324, 325, 327, 328, 331, 337, 340, 343, 344, 347, 350, 353, 355, 358, 359, 362, 363, 365, 366, 367, 371, 372, 374, 375, 377, 385, 388, 390, 396, 397, 402, 405, 406, 415, 417, 421, 424, 427, 437, 440, 441, 443, 444, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458], "local": [5, 12, 13, 18, 30, 33, 34, 47, 51, 57, 64, 66, 71, 76, 77, 82, 85, 86, 87, 88, 90, 93, 97, 98, 99, 102, 104, 105, 107, 109, 114, 120, 134, 137, 143, 147, 150, 157, 160, 164, 165, 166, 172, 175, 179, 180, 181, 182, 189, 198, 202, 214, 215, 231, 234, 235, 236, 237, 238, 242, 243, 246, 247, 249, 255, 257, 265, 269, 272, 277, 278, 279, 280, 282, 290, 295, 296, 301, 302, 314, 316, 317, 318, 321, 324, 325, 328, 330, 331, 334, 340, 344, 356, 357, 358, 363, 365, 367, 372, 374, 381, 384, 388, 389, 390, 391, 394, 397, 400, 402, 403, 404, 405, 407, 411, 412, 413, 415, 416, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 434, 435, 437, 438, 439, 440, 442, 443, 444, 445, 446, 450, 451, 452, 453, 457], "pyarg_vapars": [5, 55], "va_list": [5, 9, 18, 23, 62, 441, 454], "varg": [5, 9, 23, 62], "ident": [5, 9, 18, 25, 45, 47, 62, 71, 82, 84, 91, 92, 93, 96, 98, 99, 103, 116, 120, 134, 135, 144, 149, 170, 172, 175, 179, 182, 185, 190, 194, 196, 204, 205, 214, 219, 234, 249, 255, 257, 259, 269, 275, 277, 287, 290, 301, 310, 314, 315, 318, 320, 321, 323, 324, 327, 331, 335, 343, 344, 355, 362, 366, 367, 375, 378, 385, 388, 400, 403, 406, 412, 415, 416, 419, 439, 440, 442, 443, 447, 451, 455, 456, 457], "rather": [5, 7, 10, 15, 22, 23, 29, 30, 32, 33, 39, 40, 44, 47, 53, 55, 56, 59, 62, 70, 71, 72, 73, 74, 81, 82, 84, 85, 92, 97, 98, 99, 107, 109, 114, 116, 120, 121, 131, 134, 142, 144, 145, 148, 150, 153, 156, 159, 165, 166, 170, 172, 175, 180, 197, 198, 199, 200, 202, 214, 215, 216, 218, 224, 232, 236, 237, 243, 246, 249, 255, 256, 257, 258, 259, 262, 269, 275, 276, 277, 279, 283, 284, 285, 294, 295, 296, 298, 301, 306, 313, 314, 316, 317, 318, 320, 321, 323, 324, 325, 328, 331, 337, 340, 344, 345, 347, 350, 353, 355, 361, 363, 365, 366, 367, 371, 372, 375, 376, 378, 383, 385, 388, 394, 397, 398, 400, 402, 403, 405, 407, 409, 411, 414, 415, 416, 417, 418, 421, 427, 430, 431, 436, 438, 439, 440, 441, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "kw": [5, 61, 64, 165, 178, 186, 192, 194, 197, 214, 250, 331, 340, 350, 352, 353, 366, 367, 376, 416, 437, 440, 443, 451], "empti": [5, 10, 13, 17, 22, 24, 30, 32, 33, 34, 37, 44, 47, 53, 57, 71, 74, 82, 83, 85, 86, 88, 93, 102, 103, 109, 114, 115, 116, 120, 127, 128, 130, 132, 133, 136, 137, 142, 143, 145, 147, 148, 150, 157, 160, 164, 170, 172, 173, 177, 179, 180, 182, 185, 186, 192, 194, 196, 197, 198, 201, 202, 207, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 229, 231, 234, 238, 243, 246, 247, 249, 254, 255, 256, 257, 258, 259, 262, 263, 265, 269, 272, 276, 277, 278, 279, 282, 285, 291, 296, 298, 300, 301, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 320, 321, 323, 324, 325, 327, 328, 331, 337, 340, 342, 343, 347, 353, 357, 359, 361, 362, 363, 364, 365, 366, 371, 372, 375, 376, 381, 383, 385, 386, 388, 394, 395, 397, 398, 399, 402, 403, 405, 406, 407, 410, 411, 415, 417, 421, 423, 424, 425, 430, 431, 436, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "denot": [5, 45, 59, 78, 83, 102, 157, 180, 233, 234, 243, 247, 277, 304, 321, 324, 347, 363, 372, 402, 403, 405, 406, 407, 410, 415, 416, 417, 437, 443, 450, 456], "6": [5, 13, 20, 23, 25, 32, 33, 34, 41, 50, 54, 57, 61, 62, 66, 70, 71, 73, 74, 76, 78, 83, 84, 88, 90, 92, 93, 95, 96, 99, 101, 102, 105, 106, 108, 120, 125, 126, 133, 139, 142, 143, 144, 147, 148, 150, 151, 153, 156, 157, 159, 164, 165, 166, 172, 175, 179, 180, 182, 183, 186, 190, 192, 194, 195, 196, 197, 198, 200, 202, 203, 204, 207, 210, 212, 214, 223, 224, 225, 230, 231, 234, 236, 237, 238, 239, 243, 247, 249, 250, 255, 257, 258, 262, 265, 269, 270, 277, 278, 279, 280, 282, 283, 284, 288, 289, 290, 292, 300, 301, 302, 303, 304, 308, 310, 313, 314, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 334, 337, 338, 340, 344, 345, 347, 353, 354, 358, 359, 362, 363, 365, 366, 367, 371, 372, 373, 375, 376, 378, 381, 388, 394, 396, 397, 399, 403, 405, 406, 407, 410, 416, 417, 419, 421, 424, 426, 427, 428, 430, 431, 436, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 457, 458, 460], "support": [5, 7, 12, 13, 22, 23, 24, 25, 31, 33, 34, 36, 37, 39, 41, 42, 46, 47, 52, 55, 56, 58, 59, 61, 63, 65, 66, 71, 72, 77, 78, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 102, 106, 107, 110, 111, 113, 114, 115, 116, 117, 120, 123, 124, 126, 127, 130, 131, 133, 136, 139, 140, 148, 150, 151, 153, 154, 161, 164, 165, 166, 169, 170, 171, 172, 173, 175, 176, 178, 179, 180, 182, 183, 184, 185, 190, 191, 192, 193, 196, 197, 199, 201, 202, 203, 204, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 224, 226, 230, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 269, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 289, 290, 293, 296, 298, 300, 301, 302, 303, 304, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 327, 328, 331, 332, 334, 338, 339, 343, 344, 346, 347, 353, 354, 355, 356, 358, 359, 362, 364, 365, 367, 371, 372, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 390, 391, 394, 395, 396, 397, 398, 399, 401, 402, 403, 405, 406, 407, 409, 410, 411, 414, 415, 416, 417, 418, 419, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 434, 436, 438, 439, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452], "pyarg_vaparsetupleandkeyword": [5, 55, 441], "pyarg_validatekeywordargu": [5, 55], "kei": [5, 10, 22, 32, 34, 39, 47, 52, 53, 61, 66, 82, 83, 84, 85, 90, 91, 92, 93, 97, 98, 99, 101, 116, 120, 123, 135, 140, 145, 147, 150, 151, 157, 160, 163, 164, 166, 170, 172, 173, 175, 178, 180, 182, 185, 186, 190, 192, 194, 195, 201, 202, 212, 214, 215, 216, 219, 221, 225, 233, 234, 237, 238, 239, 242, 243, 247, 249, 250, 254, 255, 256, 258, 259, 266, 268, 275, 277, 280, 282, 285, 286, 287, 288, 289, 290, 294, 301, 302, 311, 312, 315, 316, 320, 324, 325, 326, 331, 334, 337, 340, 347, 353, 361, 362, 363, 366, 367, 371, 372, 375, 378, 381, 383, 388, 391, 392, 394, 396, 400, 402, 403, 405, 406, 407, 411, 415, 416, 417, 421, 422, 423, 427, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458], "dictionari": [5, 10, 16, 21, 23, 27, 30, 31, 32, 41, 44, 47, 51, 56, 57, 59, 61, 62, 64, 66, 71, 73, 74, 82, 83, 85, 86, 91, 92, 93, 98, 102, 104, 106, 110, 114, 116, 137, 140, 147, 148, 150, 157, 161, 164, 165, 170, 172, 173, 175, 180, 182, 184, 185, 189, 190, 191, 192, 194, 195, 196, 201, 202, 205, 212, 214, 215, 216, 219, 221, 225, 228, 231, 233, 234, 238, 239, 243, 247, 250, 254, 255, 257, 258, 259, 261, 263, 266, 269, 272, 275, 276, 277, 280, 282, 283, 285, 286, 287, 288, 289, 290, 294, 296, 301, 306, 307, 308, 312, 317, 320, 321, 325, 326, 328, 331, 334, 337, 340, 343, 347, 353, 354, 357, 358, 361, 363, 365, 366, 370, 371, 372, 376, 378, 383, 388, 391, 392, 399, 402, 404, 406, 411, 414, 415, 416, 421, 427, 430, 431, 437, 438, 439, 440, 441, 442, 443, 445, 447, 448, 449, 453, 454, 455, 456, 457], "latter": [5, 7, 23, 41, 71, 83, 85, 101, 102, 103, 106, 114, 120, 127, 132, 137, 157, 172, 173, 185, 190, 194, 198, 204, 214, 225, 236, 238, 243, 246, 247, 255, 256, 263, 276, 277, 279, 282, 290, 314, 318, 320, 324, 327, 330, 338, 347, 353, 361, 363, 365, 374, 376, 377, 402, 403, 404, 405, 406, 407, 411, 412, 415, 417, 426, 436, 440, 445, 447, 448, 451, 452, 453, 456, 458], "meth_o": [5, 56, 60, 439], "convent": [5, 10, 34, 56, 59, 61, 71, 83, 85, 88, 90, 91, 97, 98, 99, 105, 109, 143, 157, 165, 166, 167, 170, 172, 198, 214, 217, 219, 232, 235, 254, 259, 276, 278, 300, 324, 325, 331, 340, 342, 344, 365, 372, 403, 405, 409, 410, 415, 416, 418, 423, 425, 427, 428, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 451, 453, 454, 456], "static": [5, 10, 20, 28, 32, 34, 41, 44, 50, 56, 60, 62, 70, 71, 73, 74, 75, 76, 77, 78, 85, 88, 99, 102, 108, 172, 178, 180, 204, 214, 215, 238, 282, 301, 324, 343, 347, 363, 366, 367, 402, 407, 411, 415, 431, 438, 439, 440, 441, 444, 446, 447, 450, 451, 454, 455, 456, 457, 458], "my_funct": [5, 416], "pyarg_unpacktupl": [5, 55, 56, 439], "min": [5, 85, 93, 99, 102, 103, 150, 156, 172, 175, 214, 215, 225, 243, 249, 262, 298, 323, 324, 331, 345, 405, 415, 425, 442, 444, 453], "max": [5, 85, 93, 103, 114, 144, 150, 156, 172, 175, 214, 215, 225, 232, 233, 249, 262, 300, 320, 321, 323, 324, 331, 376, 402, 405, 415, 425, 442, 444, 449, 451, 453, 457], "simpler": [5, 61, 72, 76, 87, 88, 90, 99, 102, 104, 114, 150, 214, 224, 269, 301, 324, 325, 347, 366, 378, 386, 388, 390, 407, 414, 417, 418, 436, 437, 438, 439, 440, 442, 444, 452, 453, 456], "retriev": [5, 11, 23, 27, 32, 35, 38, 44, 47, 52, 54, 59, 61, 66, 70, 71, 73, 76, 83, 85, 90, 91, 93, 102, 106, 128, 133, 150, 156, 157, 161, 165, 166, 170, 173, 178, 185, 192, 196, 197, 212, 214, 215, 223, 230, 231, 232, 236, 237, 242, 246, 253, 254, 256, 259, 269, 273, 275, 277, 279, 282, 284, 286, 287, 297, 298, 301, 304, 310, 312, 314, 320, 321, 324, 325, 331, 338, 343, 350, 359, 363, 366, 372, 378, 381, 384, 388, 401, 402, 403, 405, 411, 417, 426, 429, 430, 431, 438, 439, 440, 441, 442, 443, 444, 447, 448, 449, 452, 453, 454, 455, 457, 458], "meth_vararg": [5, 56, 70, 71, 439], "tabl": [5, 7, 10, 30, 32, 34, 41, 44, 56, 57, 62, 66, 73, 75, 76, 78, 88, 91, 93, 98, 101, 102, 105, 106, 140, 143, 148, 165, 166, 172, 174, 175, 179, 184, 192, 201, 214, 224, 236, 238, 242, 245, 246, 249, 250, 252, 254, 255, 263, 269, 275, 279, 301, 310, 319, 320, 321, 324, 326, 327, 331, 337, 344, 347, 363, 365, 379, 381, 384, 385, 397, 401, 405, 416, 421, 422, 427, 430, 439, 440, 441, 442, 443, 444, 446, 447, 449, 451, 452, 453, 458], "least": [5, 10, 28, 33, 34, 40, 47, 50, 59, 61, 64, 70, 71, 74, 76, 82, 83, 88, 91, 96, 99, 101, 102, 103, 105, 107, 108, 110, 114, 130, 142, 144, 148, 150, 156, 164, 165, 166, 172, 175, 179, 182, 183, 189, 192, 197, 199, 204, 210, 214, 215, 221, 223, 231, 237, 246, 249, 257, 258, 262, 276, 277, 288, 290, 291, 300, 308, 310, 314, 315, 317, 318, 321, 323, 324, 325, 327, 328, 331, 338, 339, 340, 343, 344, 345, 355, 357, 359, 363, 365, 366, 372, 374, 382, 384, 397, 399, 401, 402, 403, 405, 406, 409, 411, 414, 415, 416, 417, 418, 419, 423, 440, 443, 444, 445, 447, 448, 449, 452, 455, 456, 458], "equal": [5, 7, 25, 32, 33, 34, 36, 41, 52, 57, 61, 62, 64, 73, 76, 83, 85, 87, 92, 93, 99, 104, 111, 114, 116, 126, 127, 128, 134, 140, 142, 144, 150, 156, 160, 165, 166, 170, 172, 175, 179, 180, 182, 184, 185, 191, 197, 205, 210, 214, 215, 216, 217, 225, 230, 232, 246, 247, 249, 250, 254, 262, 265, 270, 273, 275, 277, 280, 290, 298, 300, 301, 308, 313, 316, 318, 320, 321, 323, 324, 326, 327, 331, 340, 342, 343, 353, 354, 355, 359, 361, 363, 364, 365, 366, 367, 376, 378, 385, 387, 388, 398, 402, 403, 405, 406, 407, 410, 411, 416, 417, 419, 421, 424, 425, 427, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 455, 457, 458], "wrong": [5, 16, 32, 41, 71, 82, 83, 85, 97, 101, 102, 106, 114, 119, 137, 172, 182, 201, 202, 237, 262, 276, 277, 279, 317, 320, 327, 331, 337, 344, 365, 366, 372, 383, 403, 416, 424, 425, 438, 440, 441, 442, 443, 447, 448, 449, 451, 453], "element": [5, 7, 13, 34, 41, 47, 52, 53, 57, 59, 61, 62, 76, 82, 83, 85, 99, 102, 104, 105, 114, 115, 116, 127, 133, 140, 145, 150, 151, 162, 164, 165, 167, 170, 175, 179, 180, 182, 184, 185, 192, 194, 196, 198, 202, 209, 212, 214, 215, 217, 221, 225, 229, 231, 234, 243, 249, 250, 255, 262, 269, 276, 277, 278, 279, 286, 296, 298, 300, 301, 304, 308, 314, 317, 318, 323, 324, 325, 327, 328, 331, 344, 347, 353, 355, 358, 361, 362, 363, 365, 371, 378, 386, 387, 390, 391, 392, 394, 395, 400, 402, 403, 404, 405, 406, 415, 416, 417, 421, 424, 427, 430, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 449, 450, 451, 452, 453, 454, 455, 457, 458], "_weakref": [5, 458], "helper": [5, 32, 49, 66, 84, 91, 111, 122, 159, 165, 185, 194, 207, 224, 226, 238, 242, 245, 246, 255, 273, 282, 301, 314, 321, 341, 345, 358, 361, 365, 367, 372, 388, 442, 443, 447, 448, 452, 454, 455], "weak": [5, 16, 31, 61, 66, 71, 83, 133, 171, 202, 215, 224, 242, 321, 324, 346, 365, 403, 439, 442, 444, 447, 449, 453], "weakref_ref": 5, "self": [5, 10, 22, 28, 43, 50, 56, 59, 61, 70, 71, 73, 74, 77, 82, 85, 91, 92, 93, 95, 97, 99, 100, 103, 104, 111, 114, 116, 120, 126, 127, 135, 137, 141, 145, 150, 151, 159, 161, 162, 165, 170, 172, 175, 180, 192, 194, 200, 202, 205, 210, 212, 214, 215, 216, 219, 221, 229, 231, 232, 237, 238, 241, 243, 247, 249, 250, 261, 269, 273, 276, 277, 279, 280, 282, 287, 300, 302, 303, 315, 317, 318, 319, 320, 324, 325, 337, 340, 347, 350, 358, 359, 361, 362, 363, 365, 366, 367, 372, 375, 378, 385, 388, 392, 394, 395, 396, 402, 403, 407, 415, 416, 420, 421, 426, 427, 428, 430, 437, 438, 439, 440, 442, 443, 444, 446, 449, 451, 452, 453, 454, 455, 456, 458], "callback": [5, 11, 13, 14, 22, 27, 28, 32, 59, 61, 65, 71, 79, 85, 91, 97, 114, 117, 119, 123, 124, 126, 127, 130, 133, 159, 212, 216, 243, 269, 282, 290, 291, 296, 298, 302, 311, 314, 320, 321, 322, 331, 345, 347, 349, 353, 362, 363, 378, 387, 388, 390, 396, 403, 427, 442, 443, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457], "ref": [5, 33, 34, 61, 65, 76, 166, 378, 430, 431, 438, 444, 447, 450, 453, 457], "pyweakref_newref": [5, 55, 65], "py_buildvalu": [5, 10, 34, 55, 57, 58, 71, 84, 442, 447, 457], "base": [5, 14, 19, 23, 25, 29, 30, 33, 34, 38, 42, 44, 46, 47, 59, 61, 62, 66, 71, 73, 74, 76, 81, 82, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 101, 102, 106, 107, 114, 116, 117, 120, 123, 124, 126, 130, 133, 136, 137, 138, 139, 140, 143, 144, 150, 153, 154, 157, 159, 165, 169, 170, 171, 172, 175, 176, 178, 180, 182, 184, 186, 187, 188, 189, 190, 191, 192, 194, 195, 197, 200, 210, 214, 215, 223, 224, 225, 226, 229, 230, 231, 232, 234, 236, 237, 239, 242, 243, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 267, 268, 270, 274, 276, 277, 278, 279, 281, 282, 284, 285, 287, 290, 294, 296, 297, 301, 302, 303, 306, 309, 311, 312, 314, 316, 317, 318, 319, 320, 321, 324, 325, 327, 328, 331, 333, 334, 337, 338, 340, 344, 347, 351, 353, 359, 362, 363, 364, 365, 366, 367, 370, 371, 372, 374, 375, 376, 378, 379, 384, 385, 386, 388, 389, 391, 392, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 410, 415, 417, 418, 419, 425, 426, 427, 430, 431, 434, 436, 437, 438, 439, 440, 441, 442, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458], "those": [5, 7, 23, 32, 33, 34, 38, 57, 61, 62, 64, 65, 70, 71, 72, 74, 75, 76, 78, 82, 83, 85, 86, 88, 90, 91, 92, 93, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 109, 111, 114, 116, 120, 127, 132, 133, 144, 148, 150, 151, 157, 159, 162, 164, 165, 166, 167, 172, 175, 179, 180, 182, 183, 185, 191, 192, 193, 194, 197, 199, 200, 202, 205, 209, 212, 214, 215, 216, 217, 221, 223, 231, 233, 236, 238, 239, 240, 241, 243, 246, 247, 249, 250, 254, 255, 256, 257, 259, 262, 263, 269, 270, 273, 275, 276, 277, 279, 280, 282, 284, 290, 292, 293, 296, 298, 300, 301, 304, 306, 307, 308, 311, 312, 313, 314, 315, 317, 318, 321, 323, 324, 331, 332, 334, 337, 338, 339, 340, 343, 344, 347, 353, 358, 359, 361, 362, 363, 365, 366, 367, 371, 372, 375, 376, 378, 381, 385, 387, 388, 390, 391, 397, 399, 400, 401, 402, 403, 404, 405, 407, 410, 411, 414, 415, 416, 417, 418, 419, 421, 423, 424, 425, 426, 427, 430, 436, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "famili": [5, 16, 32, 41, 52, 93, 105, 120, 125, 130, 135, 189, 201, 224, 259, 269, 277, 281, 319, 335, 340, 347, 350, 385, 430, 436, 440, 441, 442, 444, 452, 455, 456, 457], "exactli": [5, 7, 9, 10, 11, 24, 28, 34, 38, 62, 64, 71, 73, 74, 76, 82, 83, 85, 88, 90, 96, 97, 99, 102, 104, 114, 115, 120, 127, 130, 140, 159, 165, 172, 175, 180, 182, 185, 187, 192, 194, 196, 210, 214, 217, 225, 232, 234, 243, 255, 256, 257, 262, 269, 276, 277, 278, 296, 300, 301, 304, 310, 317, 318, 319, 321, 324, 325, 326, 327, 328, 338, 339, 342, 343, 355, 358, 363, 365, 366, 367, 374, 378, 386, 397, 399, 402, 405, 410, 411, 415, 416, 419, 427, 437, 439, 440, 441, 442, 443, 444, 446, 447, 449, 452], "whatev": [5, 30, 71, 76, 81, 82, 83, 86, 98, 99, 102, 114, 150, 165, 184, 189, 197, 214, 238, 255, 256, 276, 277, 280, 293, 301, 324, 331, 338, 340, 343, 363, 366, 367, 372, 383, 405, 407, 418, 425, 429, 437, 438, 439, 440, 441, 444, 447], "forc": [5, 32, 33, 61, 71, 76, 82, 83, 85, 88, 93, 96, 101, 120, 127, 149, 153, 166, 170, 172, 173, 175, 180, 182, 224, 229, 237, 246, 255, 268, 269, 277, 290, 291, 293, 301, 308, 315, 325, 327, 328, 331, 338, 340, 344, 366, 378, 383, 403, 407, 418, 421, 430, 444, 449, 452, 453, 454, 455, 457, 458], "suppli": [5, 18, 20, 28, 32, 61, 73, 83, 85, 88, 90, 91, 92, 93, 102, 105, 106, 114, 116, 133, 139, 150, 151, 165, 166, 167, 170, 172, 175, 180, 182, 204, 212, 214, 215, 224, 226, 232, 236, 237, 238, 239, 241, 243, 247, 249, 255, 257, 268, 269, 270, 276, 277, 279, 280, 284, 290, 296, 300, 306, 308, 310, 318, 320, 321, 323, 324, 328, 334, 338, 340, 343, 353, 358, 361, 363, 365, 371, 372, 375, 376, 378, 383, 390, 394, 396, 397, 400, 401, 402, 403, 405, 407, 411, 416, 419, 426, 427, 428, 430, 431, 437, 438, 439, 440, 441, 442, 443, 444, 446, 449, 451, 452, 453, 455], "never": [5, 10, 13, 18, 22, 23, 27, 28, 32, 33, 34, 41, 57, 58, 59, 61, 71, 74, 83, 85, 87, 88, 90, 93, 98, 99, 101, 102, 106, 114, 122, 123, 126, 127, 128, 132, 133, 137, 140, 148, 153, 156, 157, 159, 160, 164, 165, 166, 170, 172, 175, 179, 185, 188, 194, 202, 214, 215, 219, 225, 229, 231, 232, 234, 236, 238, 243, 246, 247, 250, 253, 254, 255, 257, 261, 265, 269, 276, 277, 278, 279, 280, 282, 296, 298, 300, 301, 304, 306, 310, 314, 316, 319, 320, 321, 324, 327, 328, 337, 340, 343, 347, 362, 363, 366, 371, 372, 376, 378, 379, 383, 385, 388, 390, 397, 400, 402, 403, 405, 407, 410, 411, 415, 416, 419, 425, 430, 434, 437, 438, 439, 440, 441, 442, 443, 445, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458], "invok": [5, 13, 20, 23, 27, 30, 34, 50, 56, 57, 61, 62, 73, 82, 83, 91, 93, 95, 96, 99, 101, 102, 105, 109, 114, 120, 124, 132, 137, 145, 157, 159, 165, 170, 172, 182, 199, 214, 215, 216, 220, 232, 234, 236, 243, 254, 255, 256, 269, 276, 277, 278, 280, 282, 283, 284, 290, 293, 295, 301, 302, 306, 314, 317, 319, 320, 321, 324, 328, 331, 340, 343, 345, 347, 349, 353, 354, 357, 363, 365, 366, 371, 375, 378, 383, 388, 389, 390, 391, 394, 395, 397, 398, 400, 402, 404, 407, 410, 412, 415, 422, 424, 426, 430, 436, 438, 439, 440, 441, 442, 443, 444, 445, 447, 450, 452, 453, 454, 456, 458], "malloc": [5, 7, 33, 41, 71, 76, 202, 268, 277, 399, 430, 437, 438, 440, 442, 453, 454, 455], "onc": [5, 7, 13, 22, 23, 24, 28, 32, 33, 34, 50, 54, 55, 57, 59, 61, 70, 71, 73, 74, 76, 82, 83, 84, 87, 88, 90, 92, 93, 97, 98, 99, 101, 102, 104, 105, 111, 114, 120, 123, 126, 127, 129, 132, 133, 134, 142, 145, 148, 149, 150, 153, 156, 157, 159, 175, 177, 179, 182, 185, 194, 200, 202, 207, 212, 215, 219, 221, 223, 224, 225, 229, 234, 236, 238, 239, 243, 246, 249, 255, 256, 257, 258, 259, 269, 270, 276, 277, 282, 288, 290, 296, 298, 301, 302, 310, 311, 314, 315, 316, 318, 319, 320, 321, 324, 327, 332, 333, 337, 340, 343, 345, 347, 359, 361, 363, 365, 366, 367, 372, 375, 376, 378, 379, 383, 385, 386, 388, 390, 391, 399, 402, 403, 405, 406, 407, 411, 414, 415, 416, 425, 428, 429, 430, 431, 436, 437, 438, 440, 441, 442, 443, 444, 445, 448, 449, 451, 452, 454, 456, 457, 458], "space": [5, 32, 41, 47, 57, 59, 61, 62, 70, 71, 76, 83, 84, 85, 90, 91, 93, 97, 98, 102, 103, 105, 110, 114, 116, 136, 139, 143, 145, 148, 150, 151, 152, 157, 164, 166, 167, 173, 175, 179, 180, 182, 187, 188, 190, 191, 201, 202, 210, 214, 215, 231, 236, 237, 243, 247, 249, 250, 254, 255, 256, 269, 270, 276, 277, 280, 283, 285, 296, 299, 300, 301, 303, 304, 313, 314, 315, 316, 317, 318, 324, 325, 326, 328, 340, 342, 343, 344, 345, 347, 350, 353, 355, 359, 361, 371, 372, 375, 383, 385, 388, 399, 401, 403, 407, 409, 410, 416, 421, 423, 424, 427, 436, 437, 441, 442, 443, 444, 445, 446, 447, 448, 449, 452, 453, 455, 456, 458], "tab": [5, 64, 75, 116, 139, 145, 164, 166, 167, 179, 182, 187, 191, 202, 214, 231, 236, 243, 250, 280, 299, 301, 302, 305, 313, 316, 324, 325, 328, 342, 371, 379, 394, 410, 416, 424, 430, 437, 442, 444, 447, 449, 452, 453, 455, 456, 457, 458], "comma": [5, 33, 88, 92, 150, 164, 175, 182, 231, 237, 254, 255, 256, 259, 276, 301, 324, 325, 340, 354, 357, 372, 376, 402, 403, 405, 406, 411, 416, 417, 424, 426, 430, 441, 442, 443, 444, 445, 447, 449, 453, 456, 457], "ignor": [5, 14, 18, 22, 23, 24, 32, 33, 34, 38, 39, 46, 47, 57, 59, 61, 62, 64, 71, 74, 75, 85, 88, 98, 102, 105, 106, 110, 116, 127, 130, 131, 133, 136, 137, 142, 143, 145, 148, 149, 150, 153, 156, 157, 159, 162, 164, 165, 166, 170, 172, 175, 177, 179, 180, 182, 185, 188, 189, 197, 198, 202, 204, 205, 207, 212, 214, 215, 216, 218, 219, 225, 231, 232, 236, 237, 238, 239, 243, 246, 249, 250, 254, 255, 256, 257, 258, 259, 261, 263, 268, 269, 270, 277, 278, 279, 280, 282, 284, 286, 290, 296, 298, 300, 301, 302, 310, 313, 314, 315, 316, 317, 318, 319, 320, 321, 324, 325, 327, 328, 331, 333, 335, 337, 338, 340, 342, 343, 344, 350, 353, 355, 357, 358, 359, 363, 365, 366, 371, 372, 374, 375, 376, 381, 383, 385, 388, 390, 391, 396, 397, 400, 402, 403, 406, 407, 410, 412, 415, 416, 430, 436, 437, 438, 439, 440, 441, 442, 443, 444, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "within": [5, 7, 22, 32, 41, 47, 52, 71, 74, 76, 83, 85, 88, 90, 92, 93, 95, 96, 97, 99, 101, 102, 103, 107, 109, 111, 114, 115, 116, 129, 133, 134, 137, 144, 147, 148, 153, 157, 159, 165, 166, 172, 175, 179, 180, 182, 184, 192, 205, 207, 214, 218, 219, 236, 237, 238, 239, 240, 241, 243, 249, 255, 258, 259, 262, 269, 270, 278, 280, 284, 289, 290, 294, 295, 298, 300, 301, 303, 306, 313, 314, 318, 319, 320, 323, 324, 325, 327, 328, 330, 331, 332, 333, 340, 342, 345, 347, 349, 353, 361, 363, 365, 366, 371, 372, 375, 376, 385, 386, 388, 395, 397, 398, 401, 402, 403, 404, 405, 407, 410, 411, 415, 416, 417, 421, 424, 425, 430, 436, 437, 438, 439, 440, 441, 442, 443, 444, 447, 448, 449, 451, 452, 453, 455, 456, 457, 458], "make": [5, 10, 11, 14, 23, 32, 34, 38, 44, 49, 55, 57, 60, 61, 62, 70, 71, 73, 74, 76, 78, 85, 87, 88, 90, 91, 92, 93, 95, 96, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 111, 114, 115, 116, 120, 127, 132, 133, 134, 145, 147, 148, 150, 151, 153, 157, 159, 160, 161, 164, 165, 166, 168, 170, 172, 175, 177, 179, 180, 182, 185, 186, 189, 194, 195, 198, 200, 201, 202, 207, 210, 214, 215, 219, 221, 223, 224, 225, 226, 231, 234, 236, 238, 240, 243, 245, 246, 247, 249, 254, 255, 256, 257, 258, 259, 262, 266, 269, 273, 275, 276, 277, 278, 279, 280, 282, 284, 290, 294, 298, 300, 304, 308, 310, 311, 312, 313, 315, 316, 318, 319, 320, 321, 323, 324, 325, 327, 331, 332, 334, 337, 338, 340, 342, 343, 345, 347, 348, 353, 355, 357, 358, 362, 363, 365, 366, 367, 371, 372, 374, 375, 376, 377, 378, 379, 383, 386, 387, 388, 391, 396, 397, 399, 401, 402, 403, 405, 407, 409, 410, 411, 414, 415, 416, 417, 419, 420, 421, 423, 424, 425, 426, 427, 428, 431, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 450, 451, 452, 453, 456, 457, 458], "tad": 5, "readabl": [5, 76, 83, 85, 88, 90, 98, 99, 102, 103, 114, 127, 142, 145, 150, 157, 165, 179, 180, 187, 194, 219, 232, 234, 246, 255, 256, 261, 269, 277, 282, 285, 286, 289, 292, 301, 315, 319, 321, 322, 324, 327, 328, 338, 347, 354, 356, 366, 377, 389, 401, 410, 414, 415, 416, 417, 421, 424, 425, 427, 430, 438, 439, 441, 443, 444, 445, 446, 447, 450, 451, 453, 454, 455, 456, 457], "wchar_t": [5, 32, 33, 57, 64, 88, 115, 165, 448, 449, 450, 456, 458], "uc": [5, 331, 439, 452], "increment": [5, 32, 33, 34, 41, 61, 71, 74, 78, 83, 92, 93, 99, 116, 132, 150, 175, 180, 196, 200, 258, 269, 276, 277, 324, 336, 343, 344, 347, 353, 363, 386, 388, 416, 437, 439, 440, 441, 442, 444, 447, 448, 451, 452], "caus": [5, 9, 16, 18, 23, 32, 34, 41, 46, 49, 50, 55, 57, 59, 61, 62, 64, 71, 73, 74, 75, 76, 79, 83, 84, 88, 93, 98, 99, 102, 106, 109, 110, 114, 116, 120, 127, 129, 132, 133, 145, 148, 149, 150, 153, 157, 159, 161, 164, 165, 166, 173, 175, 177, 179, 180, 182, 194, 197, 200, 201, 202, 214, 216, 217, 229, 231, 234, 236, 237, 238, 243, 246, 250, 254, 255, 257, 259, 262, 263, 268, 269, 270, 277, 280, 282, 284, 285, 290, 295, 296, 301, 309, 310, 312, 315, 316, 318, 320, 321, 323, 324, 325, 331, 332, 335, 337, 338, 340, 342, 343, 344, 345, 353, 363, 365, 366, 367, 370, 372, 375, 376, 378, 381, 383, 385, 386, 390, 394, 397, 401, 402, 403, 404, 405, 406, 407, 410, 411, 413, 416, 418, 421, 423, 425, 427, 430, 431, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457], "produc": [5, 7, 10, 22, 23, 24, 25, 33, 34, 38, 57, 61, 74, 75, 78, 82, 83, 85, 86, 87, 88, 90, 93, 98, 99, 100, 102, 103, 105, 114, 116, 133, 142, 148, 150, 151, 153, 157, 164, 165, 166, 172, 175, 176, 179, 182, 183, 185, 186, 190, 191, 192, 194, 197, 202, 203, 212, 214, 217, 219, 220, 223, 224, 225, 237, 246, 249, 250, 255, 258, 263, 269, 277, 282, 284, 287, 290, 295, 298, 300, 301, 303, 321, 323, 324, 325, 327, 328, 331, 337, 343, 354, 355, 357, 361, 365, 371, 372, 382, 383, 386, 387, 389, 390, 391, 396, 397, 399, 403, 405, 407, 410, 416, 418, 419, 421, 424, 427, 428, 430, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 451, 452, 453, 454, 456, 457, 458], "therefor": [5, 10, 23, 32, 34, 41, 47, 61, 71, 73, 74, 76, 82, 83, 85, 87, 88, 90, 93, 98, 99, 100, 101, 102, 105, 111, 114, 116, 132, 133, 139, 148, 165, 170, 172, 197, 202, 203, 204, 214, 216, 221, 232, 238, 241, 246, 250, 254, 257, 261, 269, 277, 278, 282, 295, 301, 312, 314, 315, 318, 321, 324, 331, 337, 338, 343, 363, 366, 376, 388, 389, 396, 397, 399, 402, 403, 405, 409, 410, 415, 418, 419, 424, 425, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 452, 455, 456], "systemerror": [5, 23, 27, 44, 47, 53, 58, 62, 202, 418, 425, 449, 455], "constructor": [5, 18, 23, 28, 51, 53, 61, 62, 71, 77, 85, 91, 92, 93, 96, 98, 99, 101, 114, 116, 120, 129, 142, 143, 147, 148, 150, 151, 157, 162, 164, 165, 170, 172, 175, 179, 182, 187, 190, 191, 192, 195, 196, 197, 202, 207, 210, 214, 215, 223, 226, 231, 232, 237, 246, 247, 249, 250, 255, 256, 258, 259, 265, 269, 275, 276, 282, 287, 289, 290, 298, 303, 307, 309, 310, 312, 313, 317, 318, 319, 321, 324, 325, 330, 337, 338, 340, 342, 343, 345, 347, 361, 362, 363, 365, 366, 367, 372, 378, 379, 383, 388, 395, 397, 398, 400, 403, 405, 416, 417, 418, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "compat": [5, 23, 24, 32, 33, 41, 55, 59, 61, 62, 64, 66, 70, 71, 73, 74, 77, 81, 82, 85, 88, 90, 95, 97, 98, 99, 102, 105, 106, 113, 114, 115, 120, 122, 123, 133, 137, 138, 148, 151, 157, 161, 165, 173, 175, 182, 183, 185, 190, 192, 194, 196, 197, 202, 203, 217, 219, 230, 232, 234, 236, 237, 238, 239, 240, 241, 242, 243, 246, 247, 254, 255, 256, 259, 269, 275, 277, 279, 282, 284, 290, 294, 296, 298, 300, 301, 304, 307, 314, 318, 320, 321, 324, 328, 329, 331, 336, 337, 338, 340, 343, 344, 358, 361, 363, 364, 365, 371, 372, 374, 377, 383, 386, 394, 396, 397, 400, 401, 402, 403, 405, 407, 410, 411, 418, 431, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "dict": [5, 10, 22, 23, 26, 30, 32, 34, 52, 57, 59, 61, 71, 76, 77, 82, 83, 85, 88, 91, 93, 97, 114, 116, 120, 150, 157, 161, 164, 170, 171, 173, 179, 180, 182, 194, 214, 215, 216, 233, 238, 243, 249, 250, 255, 256, 257, 269, 275, 282, 285, 286, 289, 308, 312, 320, 321, 325, 334, 337, 340, 343, 347, 353, 356, 362, 363, 365, 378, 388, 394, 402, 403, 405, 406, 410, 416, 417, 421, 425, 427, 430, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458], "pair": [5, 7, 22, 28, 32, 39, 62, 71, 73, 83, 85, 90, 92, 93, 96, 102, 105, 114, 120, 124, 127, 130, 137, 144, 150, 157, 166, 170, 173, 175, 179, 180, 182, 185, 186, 191, 198, 202, 210, 214, 217, 219, 225, 229, 233, 243, 247, 249, 250, 256, 259, 262, 269, 276, 277, 278, 279, 280, 282, 291, 304, 314, 318, 319, 320, 321, 324, 328, 334, 337, 339, 343, 347, 353, 361, 362, 363, 366, 371, 372, 378, 383, 385, 388, 391, 392, 402, 403, 405, 410, 411, 416, 417, 431, 438, 439, 440, 441, 443, 444, 445, 446, 448, 449, 451, 452, 453, 455], "consecut": [5, 22, 59, 62, 93, 116, 136, 148, 249, 262, 324, 325, 327, 361, 410, 430, 441, 453], "add": [5, 7, 28, 30, 32, 33, 34, 44, 53, 56, 61, 71, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 98, 99, 101, 102, 104, 105, 106, 114, 115, 116, 123, 124, 133, 136, 145, 147, 148, 150, 151, 153, 157, 158, 159, 166, 170, 172, 175, 177, 178, 180, 182, 183, 184, 185, 186, 189, 192, 194, 195, 197, 202, 212, 214, 215, 216, 219, 221, 223, 225, 232, 233, 234, 236, 238, 243, 246, 249, 250, 255, 256, 259, 261, 263, 269, 273, 275, 276, 277, 279, 282, 284, 285, 288, 289, 290, 301, 303, 310, 314, 316, 317, 318, 319, 320, 321, 323, 324, 325, 327, 331, 332, 333, 334, 337, 340, 342, 344, 347, 353, 361, 362, 363, 365, 366, 367, 371, 372, 375, 376, 378, 379, 383, 385, 386, 388, 389, 394, 395, 396, 397, 398, 401, 402, 403, 405, 406, 407, 409, 410, 411, 414, 415, 416, 417, 418, 421, 424, 425, 427, 430, 431, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "serv": [5, 71, 74, 76, 78, 85, 98, 99, 108, 120, 127, 130, 140, 175, 182, 191, 192, 214, 215, 225, 229, 234, 238, 241, 249, 256, 269, 277, 282, 295, 315, 320, 321, 323, 347, 361, 363, 383, 388, 395, 407, 410, 415, 441, 445, 451, 452, 454, 456], "respect": [5, 7, 10, 18, 22, 23, 30, 32, 33, 38, 46, 47, 50, 60, 62, 70, 71, 73, 74, 76, 82, 83, 84, 85, 88, 91, 92, 98, 99, 102, 114, 116, 126, 129, 133, 142, 143, 144, 148, 153, 157, 158, 165, 166, 172, 175, 180, 182, 183, 185, 197, 202, 204, 214, 219, 232, 234, 238, 241, 246, 250, 255, 256, 257, 258, 262, 265, 269, 277, 278, 279, 282, 290, 291, 304, 314, 315, 316, 317, 318, 319, 320, 321, 324, 325, 327, 328, 331, 332, 333, 337, 343, 344, 353, 361, 363, 365, 386, 401, 403, 405, 407, 411, 415, 424, 427, 430, 431, 434, 437, 439, 441, 443, 445, 447, 448, 449, 451, 452, 453, 455, 456, 457, 458], "py_vabuildvalu": [5, 55], "subclass": [6, 10, 20, 23, 28, 42, 46, 47, 52, 56, 57, 59, 61, 73, 85, 88, 96, 97, 98, 102, 106, 111, 114, 116, 120, 121, 126, 127, 132, 133, 137, 143, 145, 147, 148, 150, 151, 156, 157, 162, 164, 165, 170, 172, 175, 178, 182, 188, 192, 194, 195, 197, 200, 202, 205, 207, 212, 214, 215, 218, 221, 229, 230, 231, 234, 237, 238, 239, 241, 243, 246, 247, 250, 255, 256, 257, 259, 269, 270, 272, 273, 275, 276, 277, 279, 282, 285, 287, 289, 300, 301, 312, 313, 314, 316, 317, 318, 319, 320, 321, 323, 324, 325, 328, 331, 337, 340, 343, 347, 353, 356, 361, 362, 363, 365, 366, 370, 371, 372, 375, 376, 378, 383, 384, 385, 387, 388, 389, 390, 392, 394, 398, 400, 402, 404, 405, 411, 415, 418, 427, 430, 437, 439, 440, 441, 442, 443, 444, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "py_fals": [6, 61, 62, 73, 406], "py_tru": [6, 61, 62, 73, 406], "creation": [6, 13, 27, 32, 56, 61, 66, 71, 72, 74, 76, 83, 85, 91, 92, 93, 98, 99, 107, 113, 114, 115, 127, 129, 131, 133, 142, 150, 170, 171, 175, 181, 186, 200, 212, 214, 215, 216, 219, 237, 238, 242, 243, 246, 255, 258, 259, 269, 270, 276, 278, 287, 293, 303, 304, 313, 314, 317, 322, 324, 325, 328, 337, 338, 340, 347, 366, 378, 385, 388, 396, 401, 402, 404, 407, 415, 440, 448, 449, 452, 453, 454, 456, 458], "delet": [6, 22, 37, 44, 47, 50, 52, 56, 57, 61, 62, 71, 73, 74, 76, 85, 86, 88, 91, 95, 99, 102, 106, 108, 111, 116, 137, 150, 157, 164, 166, 167, 168, 170, 173, 179, 180, 185, 189, 194, 195, 202, 207, 212, 214, 215, 225, 230, 236, 237, 238, 257, 259, 269, 275, 277, 279, 280, 287, 312, 314, 316, 320, 322, 324, 331, 338, 340, 343, 347, 353, 361, 372, 375, 376, 378, 381, 383, 399, 402, 403, 407, 410, 411, 413, 415, 417, 434, 436, 439, 440, 442, 443, 444, 445, 446, 447, 451, 453, 456, 457, 458], "pybool_typ": [6, 55], "instanc": [6, 8, 9, 10, 13, 14, 15, 16, 20, 22, 23, 25, 27, 28, 30, 31, 32, 34, 37, 38, 41, 42, 44, 46, 47, 50, 51, 53, 56, 58, 59, 61, 62, 66, 69, 71, 73, 74, 76, 85, 87, 88, 90, 93, 97, 98, 99, 101, 102, 104, 106, 108, 111, 114, 116, 120, 122, 123, 124, 126, 127, 129, 130, 131, 133, 134, 137, 142, 143, 145, 147, 148, 149, 150, 151, 156, 157, 158, 159, 161, 162, 164, 165, 166, 172, 175, 179, 180, 182, 184, 185, 188, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 205, 207, 210, 212, 214, 215, 216, 219, 221, 223, 224, 229, 231, 232, 233, 234, 236, 237, 238, 239, 241, 243, 246, 249, 250, 255, 256, 257, 258, 259, 261, 269, 270, 272, 273, 275, 276, 277, 279, 280, 283, 287, 289, 290, 294, 296, 300, 301, 303, 305, 307, 311, 312, 313, 314, 317, 318, 319, 320, 321, 323, 325, 327, 328, 330, 331, 334, 337, 340, 342, 343, 345, 347, 350, 356, 357, 358, 359, 361, 362, 363, 365, 366, 367, 370, 371, 372, 374, 376, 377, 378, 379, 382, 383, 385, 386, 387, 388, 389, 390, 391, 394, 395, 397, 398, 400, 402, 404, 405, 410, 411, 416, 417, 418, 421, 424, 425, 426, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "layer": [6, 8, 9, 15, 20, 22, 24, 25, 26, 31, 37, 38, 54, 58, 59, 66, 73, 82, 99, 103, 287, 317, 318, 321, 327, 346, 394, 430, 437, 440, 443, 457, 458], "pybool_check": 6, "immort": [6, 32, 33, 45, 50, 54, 85, 331, 440, 449, 457], "py_return_fals": [6, 441], "py_return_tru": [6, 441], "pybool_fromlong": [6, 55], "v": [6, 7, 9, 15, 25, 32, 33, 38, 39, 47, 52, 57, 61, 62, 71, 73, 83, 84, 87, 88, 90, 91, 99, 102, 103, 105, 109, 114, 150, 152, 154, 172, 175, 182, 214, 217, 221, 233, 236, 249, 270, 275, 276, 277, 290, 302, 318, 319, 320, 322, 324, 331, 336, 337, 340, 342, 343, 345, 362, 365, 378, 394, 395, 402, 406, 410, 417, 430, 436, 440, 441, 442, 443, 444, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457], "depend": [6, 13, 14, 18, 27, 32, 33, 34, 44, 51, 55, 61, 62, 70, 71, 73, 75, 76, 77, 79, 81, 82, 83, 84, 85, 88, 90, 91, 92, 93, 97, 98, 99, 102, 103, 104, 105, 107, 109, 110, 115, 116, 120, 125, 127, 133, 137, 143, 145, 148, 154, 157, 158, 159, 165, 166, 170, 172, 175, 179, 180, 182, 184, 194, 197, 199, 200, 202, 204, 210, 212, 214, 216, 219, 220, 221, 223, 231, 232, 233, 236, 238, 243, 244, 245, 246, 247, 249, 254, 255, 256, 257, 258, 259, 262, 266, 269, 277, 279, 282, 290, 291, 292, 300, 301, 304, 310, 311, 312, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 331, 333, 334, 337, 338, 339, 340, 342, 344, 345, 347, 353, 361, 363, 365, 366, 367, 372, 374, 375, 377, 378, 379, 381, 382, 383, 388, 390, 394, 396, 399, 400, 402, 403, 404, 405, 407, 410, 411, 415, 418, 421, 425, 427, 430, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458], "certain": [7, 16, 23, 32, 40, 41, 47, 56, 57, 61, 64, 71, 75, 76, 78, 85, 86, 90, 92, 93, 98, 99, 102, 103, 114, 115, 127, 137, 148, 172, 179, 182, 184, 185, 188, 192, 194, 195, 197, 198, 202, 223, 236, 243, 254, 255, 256, 257, 258, 259, 269, 276, 277, 280, 288, 289, 290, 318, 321, 326, 328, 333, 337, 343, 344, 345, 347, 363, 364, 365, 366, 371, 383, 385, 394, 403, 405, 407, 410, 416, 417, 418, 425, 435, 436, 437, 438, 439, 440, 441, 443, 444, 446, 448, 449, 450, 452, 453, 456, 457], "object": [7, 11, 14, 18, 28, 30, 31, 32, 33, 35, 39, 40, 46, 50, 51, 52, 55, 57, 64, 66, 70, 71, 72, 74, 75, 76, 78, 79, 84, 85, 88, 90, 93, 95, 100, 101, 102, 104, 105, 106, 110, 111, 115, 116, 118, 119, 121, 124, 127, 130, 131, 132, 135, 136, 137, 139, 142, 143, 144, 149, 151, 153, 158, 159, 160, 161, 162, 165, 170, 173, 176, 177, 178, 180, 183, 184, 185, 186, 187, 188, 190, 191, 193, 194, 196, 198, 201, 202, 203, 204, 205, 207, 208, 209, 210, 213, 214, 216, 218, 219, 220, 221, 222, 223, 226, 234, 236, 238, 239, 240, 241, 242, 244, 245, 246, 248, 249, 257, 258, 260, 265, 268, 270, 271, 275, 276, 278, 280, 281, 283, 284, 286, 290, 292, 295, 297, 299, 300, 304, 306, 308, 311, 314, 315, 325, 327, 330, 331, 334, 338, 339, 340, 342, 344, 345, 346, 347, 349, 350, 352, 355, 356, 357, 359, 362, 364, 365, 370, 371, 375, 376, 382, 383, 392, 396, 399, 400, 401, 402, 404, 405, 407, 408, 411, 413, 416, 417, 418, 420, 422, 424, 425, 426, 427, 430, 431, 434, 436, 437, 438, 439, 442, 445, 446, 447, 449, 450, 451, 454, 455, 456, 457, 458], "wrap": [7, 18, 21, 32, 41, 42, 56, 61, 66, 76, 77, 86, 88, 91, 95, 99, 104, 105, 109, 114, 116, 120, 123, 124, 131, 133, 140, 141, 142, 145, 148, 159, 165, 166, 170, 179, 180, 182, 190, 191, 196, 197, 202, 209, 214, 215, 219, 220, 223, 231, 236, 239, 242, 243, 246, 249, 255, 256, 258, 269, 276, 277, 286, 298, 315, 320, 321, 324, 327, 331, 335, 337, 340, 341, 353, 362, 363, 365, 366, 367, 371, 372, 381, 383, 388, 392, 402, 403, 416, 418, 427, 436, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 453, 454, 455, 457], "Such": [7, 13, 34, 61, 71, 76, 85, 96, 97, 98, 114, 116, 127, 162, 170, 179, 185, 192, 194, 196, 236, 277, 280, 282, 288, 318, 337, 354, 363, 365, 374, 397, 403, 405, 411, 425, 440, 444, 451, 456], "parti": [7, 10, 24, 30, 32, 34, 55, 76, 78, 79, 81, 82, 83, 85, 99, 107, 120, 122, 126, 127, 132, 148, 165, 170, 172, 173, 214, 224, 238, 239, 255, 269, 277, 282, 284, 301, 312, 316, 320, 321, 323, 331, 334, 343, 357, 363, 365, 372, 375, 376, 378, 400, 401, 403, 420, 434, 436, 437, 438, 440, 441, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 455, 457, 458], "special": [7, 10, 14, 23, 30, 32, 33, 34, 41, 47, 55, 56, 58, 59, 61, 62, 71, 73, 76, 82, 83, 85, 88, 90, 92, 93, 97, 98, 99, 100, 101, 102, 105, 107, 109, 111, 114, 116, 120, 131, 132, 133, 136, 137, 144, 145, 150, 157, 158, 159, 161, 164, 165, 166, 169, 170, 171, 172, 180, 182, 185, 192, 194, 197, 202, 209, 217, 219, 220, 234, 236, 238, 243, 247, 249, 250, 254, 255, 256, 259, 268, 269, 275, 276, 277, 279, 282, 284, 285, 301, 303, 306, 311, 313, 314, 315, 318, 321, 322, 323, 327, 328, 331, 337, 339, 343, 347, 365, 366, 371, 372, 375, 378, 383, 385, 388, 390, 394, 400, 401, 402, 404, 405, 406, 410, 411, 414, 415, 417, 423, 424, 425, 431, 434, 436, 437, 438, 439, 441, 442, 443, 444, 447, 451, 452, 453, 454, 455, 456, 457, 458], "purpos": [7, 17, 18, 30, 34, 36, 41, 55, 61, 70, 71, 73, 76, 78, 82, 83, 87, 88, 91, 92, 98, 99, 102, 104, 106, 108, 109, 116, 122, 136, 144, 148, 150, 157, 158, 160, 164, 165, 166, 170, 172, 175, 179, 182, 185, 191, 194, 195, 202, 215, 216, 219, 224, 225, 234, 238, 241, 243, 249, 256, 261, 269, 270, 276, 277, 282, 289, 290, 300, 301, 305, 307, 309, 316, 318, 320, 321, 327, 331, 337, 343, 347, 353, 361, 362, 363, 365, 366, 371, 376, 383, 385, 388, 389, 396, 400, 401, 402, 404, 405, 406, 407, 410, 415, 416, 417, 418, 421, 425, 430, 431, 436, 437, 443, 444, 445, 446, 448, 451, 453, 454, 455, 456, 457], "imag": [7, 15, 41, 83, 85, 144, 166, 187, 189, 195, 214, 215, 232, 250, 273, 304, 324, 325, 331, 353, 361, 372, 378, 382, 394, 403, 406, 427, 451, 456], "analysi": [7, 32, 34, 66, 85, 100, 102, 144, 179, 211, 226, 242, 252, 266, 290, 300, 363, 405, 408, 409, 411, 419, 429, 442, 452, 454], "characterist": [7, 83, 282, 326, 331, 442, 443], "back": [7, 10, 15, 22, 25, 28, 34, 38, 40, 41, 56, 57, 61, 62, 74, 76, 82, 83, 84, 87, 88, 93, 95, 99, 101, 102, 103, 104, 105, 114, 115, 116, 122, 127, 136, 139, 144, 145, 148, 150, 151, 157, 159, 166, 170, 172, 175, 179, 180, 182, 183, 185, 194, 197, 204, 212, 214, 216, 218, 219, 221, 224, 232, 234, 238, 245, 246, 250, 256, 257, 261, 265, 268, 269, 270, 273, 275, 276, 277, 278, 280, 282, 294, 296, 301, 312, 318, 319, 320, 321, 322, 324, 325, 331, 337, 340, 344, 347, 354, 355, 361, 367, 371, 372, 388, 392, 393, 394, 395, 397, 399, 400, 402, 403, 407, 411, 415, 421, 424, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 457, 458], "possibli": [7, 10, 30, 34, 47, 55, 56, 62, 71, 76, 78, 85, 86, 88, 98, 101, 103, 126, 148, 156, 157, 166, 169, 172, 175, 182, 186, 191, 192, 214, 220, 236, 255, 256, 259, 277, 284, 296, 310, 314, 318, 324, 337, 340, 342, 343, 353, 361, 362, 365, 371, 383, 390, 391, 399, 402, 403, 405, 410, 412, 415, 425, 439, 444, 445, 449, 451, 452, 453, 455, 456, 457], "desir": [7, 9, 23, 32, 34, 41, 59, 71, 72, 83, 88, 90, 91, 92, 93, 98, 99, 102, 105, 114, 131, 133, 148, 150, 151, 157, 159, 165, 166, 178, 179, 180, 197, 201, 212, 214, 215, 224, 225, 229, 234, 236, 238, 246, 247, 254, 255, 259, 263, 265, 276, 278, 280, 284, 289, 293, 300, 301, 302, 319, 320, 321, 323, 324, 325, 327, 333, 340, 342, 343, 347, 353, 361, 363, 371, 375, 378, 381, 387, 388, 391, 403, 405, 407, 416, 417, 418, 425, 430, 437, 439, 440, 441, 442, 443, 444, 450, 453, 454, 455, 457], "situat": [7, 34, 41, 59, 61, 71, 73, 76, 83, 86, 88, 92, 93, 97, 98, 99, 101, 103, 104, 106, 109, 114, 120, 121, 148, 159, 170, 180, 196, 202, 219, 224, 238, 241, 246, 255, 259, 269, 276, 317, 328, 340, 343, 367, 376, 385, 403, 412, 415, 416, 417, 418, 439, 444, 445, 449, 453, 454, 455], "directli": [7, 10, 13, 24, 28, 30, 32, 33, 34, 41, 44, 45, 52, 55, 56, 57, 59, 61, 62, 65, 70, 71, 73, 74, 76, 78, 81, 82, 83, 84, 85, 86, 88, 91, 92, 95, 96, 97, 98, 99, 101, 104, 106, 107, 109, 111, 114, 116, 117, 119, 122, 126, 127, 130, 133, 139, 140, 141, 142, 148, 149, 150, 151, 153, 156, 157, 159, 161, 164, 165, 170, 172, 175, 179, 180, 182, 183, 185, 190, 194, 195, 198, 199, 201, 202, 210, 214, 215, 216, 221, 224, 225, 231, 232, 234, 236, 239, 240, 241, 243, 246, 247, 250, 254, 255, 256, 258, 259, 265, 269, 270, 276, 277, 278, 282, 284, 288, 290, 300, 301, 302, 306, 312, 317, 318, 319, 320, 321, 323, 324, 325, 328, 331, 337, 338, 340, 343, 347, 352, 353, 355, 357, 358, 362, 363, 365, 366, 367, 372, 376, 378, 383, 385, 388, 389, 392, 396, 400, 402, 403, 404, 405, 406, 407, 409, 411, 413, 415, 416, 417, 418, 425, 426, 427, 430, 436, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "intermedi": [7, 77, 82, 85, 93, 175, 180, 195, 215, 238, 249, 262, 276, 277, 314, 321, 366, 407, 419, 442, 446, 451, 456], "facil": [7, 32, 66, 88, 90, 98, 112, 135, 137, 145, 147, 166, 236, 242, 246, 252, 257, 259, 277, 282, 318, 321, 325, 335, 337, 347, 361, 403, 422, 424, 425, 436, 440], "level": [7, 13, 22, 23, 24, 30, 31, 33, 34, 41, 42, 55, 57, 61, 66, 71, 73, 76, 77, 78, 82, 84, 85, 87, 88, 91, 92, 93, 95, 97, 103, 104, 105, 106, 114, 115, 116, 119, 120, 123, 127, 129, 130, 131, 133, 134, 139, 142, 143, 148, 150, 153, 154, 156, 157, 159, 160, 166, 169, 170, 172, 179, 180, 182, 183, 191, 193, 196, 199, 200, 201, 202, 208, 212, 214, 215, 216, 219, 220, 221, 223, 225, 230, 231, 232, 234, 236, 237, 238, 239, 242, 243, 248, 249, 256, 257, 258, 259, 266, 268, 269, 270, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 289, 290, 293, 294, 295, 296, 297, 298, 301, 303, 304, 306, 308, 312, 313, 315, 316, 317, 320, 321, 323, 327, 331, 333, 334, 335, 337, 338, 340, 342, 343, 347, 353, 358, 360, 362, 363, 365, 366, 372, 375, 376, 378, 379, 383, 384, 385, 386, 388, 390, 394, 397, 399, 400, 402, 403, 404, 405, 406, 407, 408, 410, 411, 414, 415, 416, 420, 425, 426, 427, 430, 431, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458], "side": [7, 14, 22, 30, 32, 50, 58, 71, 73, 76, 82, 83, 88, 93, 99, 102, 103, 105, 106, 116, 120, 127, 144, 150, 156, 159, 166, 170, 179, 180, 185, 199, 212, 215, 231, 232, 238, 254, 255, 257, 269, 277, 282, 284, 293, 300, 305, 306, 312, 318, 319, 324, 328, 331, 338, 340, 347, 353, 363, 365, 366, 383, 388, 400, 402, 405, 407, 411, 416, 417, 424, 425, 427, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458], "export": [7, 23, 34, 41, 42, 44, 61, 69, 70, 71, 75, 83, 85, 106, 116, 143, 164, 172, 200, 275, 282, 288, 318, 320, 324, 331, 355, 411, 425, 431, 440, 444, 451, 452, 454, 455, 456, 457, 458], "section": [7, 16, 17, 33, 34, 41, 49, 50, 53, 56, 61, 62, 69, 70, 71, 72, 73, 74, 75, 78, 83, 85, 86, 88, 90, 91, 93, 95, 96, 98, 99, 102, 105, 106, 109, 114, 116, 119, 120, 124, 126, 127, 128, 129, 130, 131, 133, 136, 138, 140, 145, 148, 150, 157, 159, 164, 165, 170, 173, 175, 182, 183, 184, 187, 191, 192, 201, 210, 214, 219, 224, 230, 231, 232, 236, 237, 245, 246, 249, 250, 255, 256, 259, 276, 277, 282, 285, 287, 289, 290, 296, 301, 303, 308, 310, 314, 318, 320, 321, 324, 325, 327, 328, 331, 337, 343, 345, 347, 361, 363, 365, 366, 367, 371, 372, 383, 384, 385, 386, 388, 390, 391, 394, 397, 401, 402, 403, 404, 405, 407, 410, 411, 412, 415, 416, 417, 418, 419, 421, 425, 426, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "consum": [7, 57, 61, 62, 82, 83, 93, 102, 103, 109, 114, 119, 121, 128, 130, 148, 159, 164, 180, 183, 196, 220, 231, 246, 249, 250, 269, 276, 277, 279, 290, 298, 301, 304, 312, 327, 340, 343, 359, 363, 366, 371, 384, 388, 399, 403, 406, 423, 430, 437, 441, 442, 443, 444, 448, 451, 452, 453, 455, 457], "sever": [7, 24, 28, 32, 34, 41, 55, 64, 70, 71, 72, 73, 75, 76, 78, 79, 81, 82, 83, 85, 88, 91, 92, 93, 97, 98, 99, 102, 103, 105, 106, 114, 116, 118, 119, 120, 128, 129, 131, 143, 147, 148, 150, 151, 156, 157, 158, 165, 166, 172, 173, 175, 177, 180, 182, 184, 188, 201, 202, 212, 214, 225, 230, 238, 243, 245, 247, 255, 256, 257, 259, 260, 269, 276, 277, 278, 282, 288, 289, 290, 293, 301, 303, 311, 315, 317, 318, 319, 320, 321, 322, 324, 327, 328, 337, 343, 346, 347, 353, 355, 357, 358, 361, 363, 364, 365, 366, 367, 369, 372, 376, 378, 379, 381, 382, 384, 390, 394, 399, 400, 401, 402, 403, 407, 409, 411, 414, 416, 418, 420, 421, 424, 425, 434, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 455, 456, 457, 458], "obtain": [7, 30, 34, 62, 76, 84, 90, 96, 98, 102, 107, 115, 120, 131, 142, 166, 172, 175, 179, 185, 186, 192, 194, 197, 204, 214, 221, 224, 237, 242, 246, 247, 249, 254, 255, 256, 257, 258, 265, 269, 276, 277, 278, 290, 293, 295, 300, 301, 318, 321, 324, 328, 330, 338, 344, 372, 374, 375, 378, 383, 388, 389, 390, 401, 402, 405, 411, 415, 416, 419, 424, 436, 437, 439, 440, 442, 443, 450, 451, 452, 453, 454, 455, 456], "simpl": [7, 32, 34, 42, 61, 65, 66, 73, 78, 82, 83, 84, 87, 88, 90, 92, 93, 96, 97, 99, 104, 105, 106, 108, 110, 114, 116, 130, 132, 134, 143, 145, 148, 151, 157, 159, 160, 165, 170, 172, 173, 178, 179, 183, 185, 189, 194, 196, 197, 198, 211, 212, 215, 216, 219, 223, 231, 233, 237, 242, 243, 250, 256, 257, 259, 260, 265, 269, 273, 276, 277, 279, 280, 282, 286, 289, 290, 298, 300, 301, 304, 306, 311, 315, 317, 318, 320, 323, 324, 325, 327, 337, 340, 343, 345, 347, 355, 357, 358, 361, 362, 363, 365, 367, 371, 372, 375, 376, 378, 379, 382, 384, 385, 386, 388, 389, 394, 395, 397, 402, 405, 406, 408, 414, 415, 416, 417, 418, 420, 421, 424, 426, 430, 436, 437, 438, 441, 442, 443, 444, 446, 448, 449, 451, 452, 453, 454, 457, 458], "orient": [7, 41, 66, 74, 78, 79, 83, 85, 91, 93, 105, 127, 143, 190, 208, 211, 242, 269, 290, 318, 324, 343, 344, 346, 347, 353, 365, 415, 420, 438, 443, 451, 453], "multi": [7, 32, 34, 69, 71, 82, 83, 84, 85, 92, 93, 97, 99, 102, 105, 108, 116, 142, 143, 175, 179, 180, 182, 214, 215, 223, 236, 238, 249, 255, 256, 258, 269, 285, 298, 301, 304, 307, 313, 314, 320, 323, 324, 343, 345, 383, 395, 397, 402, 410, 416, 423, 424, 425, 430, 436, 437, 442, 444, 447, 449, 450, 452, 453, 457], "seri": [7, 32, 59, 78, 85, 93, 102, 104, 114, 116, 145, 150, 164, 165, 175, 180, 214, 224, 276, 296, 318, 324, 334, 343, 363, 366, 367, 371, 383, 405, 416, 424, 425, 439, 441, 442, 443, 444, 447, 453, 456, 460], "intern": [7, 8, 9, 10, 11, 13, 22, 23, 24, 30, 32, 33, 34, 40, 41, 44, 53, 57, 59, 61, 62, 66, 71, 73, 74, 76, 78, 82, 85, 88, 90, 91, 93, 98, 99, 101, 102, 105, 106, 114, 115, 116, 120, 121, 122, 129, 130, 132, 133, 134, 135, 142, 144, 145, 147, 148, 150, 151, 156, 157, 164, 165, 170, 172, 173, 175, 180, 182, 188, 193, 196, 197, 199, 202, 224, 226, 232, 234, 236, 238, 242, 243, 246, 249, 253, 254, 255, 257, 258, 262, 263, 265, 269, 277, 280, 281, 282, 284, 289, 290, 296, 298, 300, 304, 310, 313, 314, 315, 318, 320, 321, 326, 327, 328, 331, 337, 340, 343, 344, 347, 353, 358, 361, 363, 365, 372, 374, 375, 376, 378, 385, 386, 388, 390, 394, 397, 398, 399, 404, 405, 413, 416, 425, 431, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458], "readinto": [7, 142, 231, 246, 282, 443, 452, 454], "argumentselect": [7, 32, 55, 57, 62, 64, 66, 82, 84, 85, 91, 92, 98, 100, 102, 103, 105, 107, 114, 116, 120, 132, 144, 150, 159, 165, 166, 199, 200, 202, 214, 219, 235, 236, 237, 239, 242, 246, 248, 249, 250, 254, 256, 258, 269, 277, 282, 290, 293, 295, 300, 311, 315, 317, 318, 319, 320, 324, 325, 327, 328, 338, 342, 343, 344, 345, 347, 348, 349, 351, 353, 361, 363, 367, 379, 383, 388, 392, 399, 402, 403, 404, 405, 407, 418, 421, 426, 427, 428, 431, 434, 436, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 454, 455, 456, 457, 458], "reject": [7, 76, 96, 102, 157, 232, 237, 262, 300, 337, 363, 410, 411, 437, 444, 453, 455], "acquir": [7, 32, 71, 87, 110, 132, 159, 197, 204, 255, 259, 269, 277, 315, 321, 337, 343, 352, 403, 442, 443, 444, 445, 448, 451, 452, 454, 456], "over": [7, 13, 22, 23, 24, 29, 32, 34, 35, 41, 47, 59, 62, 66, 71, 73, 76, 78, 82, 85, 88, 89, 90, 91, 92, 93, 98, 99, 100, 101, 102, 103, 105, 107, 114, 115, 116, 117, 120, 124, 127, 137, 140, 150, 151, 156, 157, 160, 164, 165, 166, 172, 173, 175, 179, 180, 182, 185, 190, 191, 193, 194, 200, 208, 212, 214, 215, 218, 219, 221, 225, 232, 234, 236, 237, 238, 241, 242, 246, 247, 249, 255, 256, 257, 259, 263, 265, 269, 277, 282, 283, 287, 288, 290, 300, 301, 304, 310, 311, 314, 317, 318, 320, 321, 323, 324, 325, 328, 331, 337, 338, 340, 345, 347, 353, 354, 355, 357, 361, 362, 363, 365, 366, 367, 374, 376, 383, 384, 385, 387, 388, 394, 397, 399, 402, 403, 405, 407, 410, 414, 415, 416, 417, 421, 427, 430, 431, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457], "target": [7, 32, 34, 62, 82, 91, 95, 98, 99, 101, 114, 116, 120, 127, 130, 150, 159, 161, 172, 175, 180, 200, 230, 231, 236, 238, 239, 243, 256, 257, 269, 270, 275, 276, 277, 279, 296, 298, 301, 314, 315, 318, 319, 320, 330, 337, 338, 340, 343, 347, 349, 363, 365, 366, 375, 383, 385, 388, 390, 394, 396, 397, 398, 400, 402, 403, 404, 405, 406, 407, 411, 416, 417, 430, 435, 436, 440, 442, 443, 445, 447, 449, 451, 452, 453, 456, 457], "pyobject_getbuff": [7, 55, 61, 443, 448, 450], "right": [7, 15, 16, 41, 46, 62, 67, 70, 71, 76, 83, 85, 88, 90, 93, 99, 102, 103, 105, 115, 116, 137, 139, 140, 144, 145, 148, 150, 159, 165, 166, 172, 175, 179, 180, 182, 185, 202, 205, 214, 215, 216, 224, 236, 237, 243, 255, 261, 262, 273, 275, 276, 277, 279, 282, 284, 290, 301, 312, 318, 321, 324, 325, 334, 342, 347, 352, 353, 361, 365, 366, 367, 372, 376, 379, 386, 399, 400, 401, 402, 403, 405, 406, 410, 411, 415, 416, 417, 421, 424, 427, 431, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 453, 455, 456, 457], "sibl": [7, 83, 114, 214, 353, 385, 425], "isn": [7, 22, 23, 25, 30, 32, 33, 50, 59, 61, 71, 74, 77, 82, 83, 85, 86, 87, 88, 90, 91, 92, 96, 97, 99, 101, 102, 103, 105, 109, 110, 114, 116, 123, 127, 133, 140, 147, 148, 156, 159, 164, 172, 180, 182, 185, 191, 193, 194, 216, 223, 225, 232, 237, 243, 246, 257, 277, 279, 284, 296, 300, 301, 318, 319, 321, 322, 323, 331, 334, 347, 355, 365, 366, 367, 371, 379, 381, 382, 383, 384, 394, 403, 411, 415, 416, 417, 423, 424, 435, 437, 438, 439, 440, 441, 442, 443, 444, 447, 450, 451], "anymor": [7, 11, 30, 61, 62, 78, 83, 85, 88, 103, 127, 214, 216, 250, 269, 277, 280, 318, 331, 444, 445, 449, 451, 452, 457], "could": [7, 22, 23, 27, 30, 32, 34, 38, 41, 46, 54, 59, 61, 71, 74, 75, 76, 81, 83, 85, 86, 88, 90, 91, 92, 93, 97, 98, 99, 101, 103, 104, 105, 106, 109, 111, 114, 116, 120, 122, 123, 126, 127, 129, 132, 145, 150, 157, 165, 166, 172, 182, 189, 190, 195, 197, 202, 205, 212, 214, 215, 216, 217, 219, 225, 226, 234, 236, 243, 246, 247, 249, 250, 255, 256, 257, 259, 269, 275, 276, 277, 279, 280, 282, 285, 290, 293, 296, 300, 301, 303, 311, 313, 315, 318, 320, 328, 331, 337, 340, 343, 346, 347, 359, 363, 365, 366, 367, 371, 372, 374, 378, 383, 385, 397, 400, 403, 405, 407, 409, 410, 411, 414, 415, 416, 418, 419, 421, 425, 430, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458], "lead": [7, 18, 28, 38, 61, 62, 71, 73, 76, 83, 84, 92, 96, 97, 98, 99, 101, 102, 111, 116, 133, 134, 143, 145, 153, 157, 172, 175, 177, 179, 182, 185, 188, 194, 197, 202, 210, 214, 217, 220, 232, 234, 236, 238, 243, 246, 247, 249, 255, 257, 259, 262, 263, 269, 277, 278, 279, 280, 282, 290, 296, 300, 318, 321, 323, 324, 325, 327, 331, 333, 335, 337, 340, 342, 344, 345, 358, 365, 366, 371, 372, 376, 385, 388, 397, 402, 403, 404, 405, 407, 410, 411, 412, 415, 416, 421, 425, 430, 436, 437, 440, 441, 442, 443, 445, 449, 452, 453, 455, 456, 457, 458], "variou": [7, 10, 20, 24, 32, 34, 41, 56, 60, 61, 63, 66, 71, 72, 73, 77, 78, 79, 83, 85, 88, 89, 90, 91, 92, 93, 101, 102, 103, 104, 105, 114, 127, 139, 148, 150, 159, 163, 165, 167, 170, 175, 179, 182, 183, 186, 192, 197, 200, 202, 205, 206, 216, 219, 225, 231, 232, 238, 242, 246, 247, 249, 252, 256, 260, 264, 265, 271, 274, 276, 277, 279, 281, 283, 285, 290, 296, 300, 308, 313, 317, 318, 319, 320, 321, 324, 325, 327, 331, 333, 337, 340, 344, 347, 361, 362, 364, 365, 367, 372, 383, 384, 388, 401, 403, 405, 407, 410, 411, 412, 414, 420, 422, 425, 428, 430, 434, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 450, 451, 452, 453, 454, 455, 456, 457], "issu": [7, 22, 24, 32, 33, 55, 59, 64, 66, 74, 78, 84, 85, 91, 92, 98, 99, 101, 105, 109, 114, 120, 129, 145, 148, 165, 166, 170, 175, 177, 192, 202, 210, 212, 214, 218, 224, 231, 236, 237, 246, 250, 254, 255, 259, 261, 268, 269, 270, 276, 277, 279, 282, 293, 315, 317, 318, 321, 324, 328, 340, 361, 363, 365, 366, 367, 375, 376, 378, 384, 387, 388, 396, 401, 418, 420, 427, 430, 437, 438, 439, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "resourc": [7, 23, 32, 61, 66, 78, 82, 83, 85, 89, 94, 97, 101, 103, 104, 107, 114, 116, 126, 127, 129, 132, 135, 156, 159, 177, 182, 201, 202, 215, 231, 237, 238, 239, 242, 245, 250, 255, 267, 269, 270, 277, 282, 284, 311, 314, 318, 321, 324, 331, 340, 343, 347, 353, 359, 365, 368, 371, 372, 374, 376, 381, 383, 384, 388, 391, 394, 403, 407, 418, 421, 427, 429, 430, 440, 442, 443, 444, 447, 448, 450, 451, 455, 458], "leak": [7, 32, 37, 44, 57, 58, 71, 85, 97, 99, 214, 216, 269, 277, 328, 331, 359, 405, 437, 438, 444, 445, 451, 453, 454, 458], "simpli": [7, 34, 61, 70, 71, 73, 74, 76, 77, 82, 83, 85, 86, 87, 88, 93, 96, 99, 101, 102, 105, 111, 114, 133, 143, 145, 148, 150, 157, 165, 166, 172, 175, 182, 212, 214, 219, 221, 229, 238, 243, 250, 256, 257, 269, 276, 277, 279, 280, 282, 285, 286, 296, 301, 306, 307, 315, 317, 320, 322, 325, 328, 331, 332, 343, 362, 363, 365, 366, 367, 372, 376, 378, 379, 383, 384, 385, 386, 394, 396, 407, 415, 419, 421, 424, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 448, 449, 451, 454], "programm": [7, 27, 31, 34, 61, 71, 75, 76, 83, 84, 85, 90, 91, 98, 103, 104, 111, 164, 166, 170, 172, 175, 182, 183, 202, 242, 254, 259, 262, 269, 276, 277, 318, 320, 324, 327, 331, 346, 347, 361, 367, 376, 378, 381, 402, 408, 411, 415, 418, 421, 425, 438, 439, 441, 442, 443, 451], "slice": [7, 16, 31, 37, 39, 41, 52, 58, 66, 83, 85, 93, 101, 115, 116, 140, 150, 158, 161, 165, 180, 195, 202, 214, 217, 249, 265, 269, 270, 275, 277, 279, 282, 300, 301, 320, 324, 344, 390, 406, 411, 417, 421, 424, 425, 437, 439, 441, 442, 443, 444, 445, 447, 449, 451, 452, 453, 454, 456, 458], "mechan": [7, 11, 14, 28, 32, 34, 44, 59, 61, 71, 73, 76, 77, 82, 83, 85, 90, 91, 92, 98, 99, 102, 103, 108, 109, 111, 120, 124, 125, 133, 136, 159, 165, 170, 182, 186, 192, 214, 215, 232, 233, 234, 235, 237, 239, 247, 248, 254, 255, 256, 257, 259, 270, 276, 280, 282, 284, 299, 301, 304, 306, 315, 317, 318, 319, 321, 324, 337, 343, 347, 353, 362, 365, 372, 375, 376, 398, 401, 403, 407, 410, 411, 414, 415, 418, 422, 426, 437, 438, 439, 440, 441, 442, 444, 446, 447, 449, 451, 452, 453, 454, 457, 458], "abil": [7, 70, 71, 83, 85, 87, 90, 93, 98, 99, 102, 107, 116, 150, 202, 216, 238, 241, 256, 269, 276, 306, 314, 324, 325, 363, 365, 385, 396, 397, 398, 401, 402, 416, 438, 439, 440, 442, 443, 444, 447, 450, 451, 452, 453, 454, 455], "quit": [7, 70, 71, 74, 78, 82, 83, 87, 88, 90, 93, 98, 99, 102, 103, 114, 137, 158, 159, 165, 166, 173, 178, 189, 212, 225, 236, 246, 257, 262, 269, 276, 280, 287, 291, 317, 320, 321, 347, 374, 405, 407, 409, 415, 416, 422, 423, 425, 426, 437, 438, 439, 440, 442, 452, 453], "easili": [7, 23, 41, 70, 71, 74, 76, 78, 83, 84, 87, 88, 92, 96, 98, 99, 101, 102, 109, 119, 133, 148, 157, 159, 164, 165, 189, 214, 219, 221, 225, 243, 280, 301, 313, 324, 338, 340, 365, 378, 403, 410, 420, 421, 424, 426, 435, 436, 437, 440, 442, 446, 451, 452, 454, 455, 458], "manipul": [7, 13, 32, 33, 34, 41, 44, 53, 66, 71, 74, 93, 96, 99, 137, 138, 150, 159, 164, 165, 166, 172, 175, 183, 184, 194, 196, 208, 227, 242, 244, 246, 257, 269, 271, 277, 279, 290, 306, 313, 314, 316, 318, 322, 323, 324, 331, 341, 347, 353, 371, 383, 385, 388, 395, 400, 407, 424, 426, 427, 429, 430, 437, 440, 443, 447, 448, 452, 453, 455, 457, 458], "system": [7, 23, 24, 31, 32, 33, 34, 41, 61, 63, 66, 71, 72, 74, 75, 76, 78, 81, 82, 83, 84, 85, 87, 90, 92, 93, 95, 98, 99, 100, 101, 102, 105, 106, 109, 110, 120, 127, 131, 135, 137, 143, 145, 153, 156, 157, 159, 164, 165, 166, 172, 175, 176, 196, 197, 198, 199, 202, 203, 208, 209, 212, 214, 217, 218, 219, 220, 234, 236, 238, 239, 240, 241, 242, 244, 245, 246, 254, 255, 256, 257, 258, 259, 263, 264, 265, 268, 269, 270, 272, 278, 279, 280, 282, 284, 285, 290, 291, 292, 293, 296, 297, 298, 300, 304, 306, 308, 310, 313, 314, 315, 316, 318, 319, 320, 321, 322, 324, 327, 334, 335, 337, 338, 339, 340, 343, 344, 347, 359, 361, 362, 363, 365, 366, 367, 368, 372, 375, 379, 381, 382, 383, 384, 385, 388, 389, 390, 391, 394, 395, 396, 400, 401, 403, 408, 410, 411, 412, 413, 414, 418, 419, 420, 421, 423, 425, 427, 428, 430, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 456, 457, 458], "around": [7, 23, 25, 30, 32, 42, 57, 70, 71, 74, 76, 77, 78, 93, 95, 97, 99, 103, 107, 109, 114, 125, 133, 141, 145, 150, 157, 159, 164, 166, 172, 175, 180, 182, 195, 204, 207, 210, 214, 215, 225, 236, 238, 243, 253, 257, 261, 262, 269, 270, 276, 277, 280, 284, 300, 301, 318, 321, 323, 331, 337, 338, 340, 347, 353, 358, 361, 363, 365, 378, 402, 403, 406, 414, 415, 416, 417, 418, 422, 429, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457], "nativ": [7, 25, 32, 40, 62, 84, 88, 100, 105, 110, 144, 148, 159, 160, 165, 172, 173, 197, 202, 224, 246, 277, 279, 312, 318, 320, 324, 331, 343, 348, 361, 363, 397, 407, 434, 436, 439, 444, 445, 451, 452, 453, 455, 456, 457, 458], "contrari": [7, 59, 76, 179, 421], "wrapper": [7, 18, 21, 23, 24, 25, 30, 32, 41, 43, 56, 57, 66, 76, 84, 85, 90, 91, 99, 104, 109, 120, 131, 139, 141, 150, 159, 165, 166, 180, 182, 204, 215, 225, 238, 242, 243, 248, 255, 262, 269, 277, 282, 284, 310, 318, 325, 340, 342, 346, 347, 358, 376, 383, 385, 388, 394, 400, 402, 403, 415, 426, 437, 438, 439, 441, 442, 443, 444, 448, 449, 450, 451, 453, 454, 457], "instruct": [7, 13, 26, 75, 76, 82, 84, 85, 93, 95, 164, 175, 182, 229, 243, 276, 277, 290, 296, 315, 320, 321, 332, 365, 385, 388, 390, 403, 405, 430, 437, 442, 444, 447, 448, 449, 451, 453, 457, 458], "start": [7, 9, 10, 11, 22, 23, 25, 32, 33, 34, 41, 54, 55, 61, 62, 64, 66, 70, 73, 74, 76, 77, 78, 81, 82, 83, 85, 87, 88, 91, 92, 93, 95, 98, 99, 100, 101, 102, 103, 105, 106, 107, 109, 110, 114, 115, 116, 118, 119, 120, 124, 126, 127, 130, 131, 132, 133, 134, 135, 137, 139, 143, 147, 148, 150, 151, 156, 158, 159, 165, 166, 167, 170, 172, 173, 176, 178, 179, 180, 182, 183, 188, 190, 192, 194, 197, 200, 202, 204, 209, 212, 214, 216, 219, 220, 222, 225, 229, 231, 232, 234, 236, 237, 239, 242, 243, 245, 246, 247, 249, 250, 254, 255, 256, 257, 259, 262, 265, 270, 276, 277, 278, 279, 280, 282, 283, 284, 287, 288, 290, 291, 294, 295, 296, 298, 300, 301, 302, 314, 316, 317, 318, 319, 320, 321, 323, 324, 325, 327, 328, 331, 332, 333, 335, 337, 340, 343, 344, 347, 349, 353, 355, 357, 358, 359, 363, 365, 371, 372, 375, 376, 378, 379, 383, 385, 386, 388, 390, 392, 396, 397, 399, 401, 402, 403, 405, 406, 407, 410, 411, 413, 414, 415, 416, 417, 419, 423, 424, 426, 427, 430, 434, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "logic": [7, 76, 82, 83, 86, 93, 97, 99, 109, 133, 151, 159, 166, 170, 180, 182, 196, 210, 221, 255, 257, 258, 259, 275, 279, 284, 301, 324, 325, 335, 338, 340, 347, 354, 363, 365, 402, 411, 416, 427, 437, 440, 441, 443, 444, 449, 452, 456, 457], "physic": [7, 85, 90, 166, 182, 236, 240, 265, 278, 318, 324, 354, 355, 361, 381, 407, 424, 442, 456], "neg": [7, 18, 22, 23, 30, 37, 38, 41, 44, 46, 47, 52, 56, 58, 59, 61, 62, 64, 88, 91, 92, 93, 97, 102, 104, 110, 114, 115, 116, 127, 131, 139, 142, 143, 144, 148, 150, 152, 164, 165, 166, 167, 172, 175, 200, 210, 214, 215, 246, 247, 249, 250, 254, 258, 262, 265, 269, 275, 277, 279, 282, 290, 300, 301, 302, 310, 314, 315, 318, 320, 321, 323, 324, 325, 328, 331, 343, 344, 347, 350, 358, 361, 385, 388, 402, 403, 405, 406, 411, 416, 417, 421, 424, 437, 440, 441, 442, 443, 444, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458], "begin": [7, 18, 23, 34, 56, 71, 73, 74, 76, 77, 82, 83, 84, 85, 88, 93, 99, 101, 102, 103, 114, 133, 143, 145, 150, 157, 166, 167, 172, 175, 179, 182, 185, 190, 198, 204, 212, 220, 236, 238, 243, 245, 246, 249, 250, 258, 259, 265, 269, 277, 278, 279, 280, 284, 296, 301, 302, 306, 316, 317, 320, 321, 324, 325, 327, 337, 338, 340, 342, 345, 347, 353, 355, 361, 365, 377, 388, 390, 391, 400, 402, 403, 404, 405, 407, 409, 410, 411, 413, 414, 415, 416, 417, 421, 424, 425, 429, 430, 431, 436, 439, 442, 443, 444, 447, 449, 455, 456], "obj": [7, 9, 10, 23, 24, 26, 28, 32, 35, 38, 39, 42, 44, 47, 50, 61, 62, 73, 75, 76, 82, 83, 85, 88, 91, 92, 93, 99, 123, 133, 135, 148, 151, 161, 165, 168, 170, 180, 182, 186, 197, 200, 202, 214, 216, 243, 247, 250, 265, 269, 275, 282, 303, 324, 325, 340, 359, 363, 365, 366, 378, 403, 406, 415, 416, 437, 438, 439, 440, 441, 442, 443, 447, 448, 450, 454, 456, 457], "automat": [7, 12, 23, 28, 32, 34, 44, 53, 57, 59, 60, 61, 69, 71, 74, 82, 83, 84, 85, 88, 90, 93, 96, 101, 102, 103, 105, 107, 114, 120, 126, 127, 130, 132, 133, 134, 145, 148, 150, 151, 157, 158, 159, 164, 165, 166, 170, 173, 175, 176, 179, 180, 182, 185, 190, 194, 195, 197, 198, 202, 214, 215, 216, 221, 223, 229, 231, 232, 237, 238, 243, 255, 256, 258, 259, 265, 269, 276, 277, 278, 280, 282, 288, 290, 295, 300, 302, 305, 310, 312, 314, 316, 317, 318, 319, 320, 321, 323, 324, 325, 327, 328, 331, 335, 337, 338, 340, 343, 344, 345, 347, 353, 361, 363, 365, 366, 367, 371, 372, 377, 378, 381, 383, 386, 390, 394, 397, 398, 399, 401, 403, 404, 405, 407, 411, 413, 415, 416, 418, 421, 422, 424, 425, 426, 427, 429, 430, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458], "api": [7, 11, 13, 15, 17, 20, 22, 23, 24, 26, 27, 28, 34, 37, 38, 44, 45, 49, 53, 56, 57, 59, 61, 62, 66, 70, 72, 73, 74, 77, 82, 85, 86, 89, 90, 97, 98, 99, 100, 101, 103, 104, 105, 106, 114, 119, 121, 122, 123, 126, 127, 130, 131, 133, 134, 135, 149, 151, 154, 159, 160, 164, 165, 166, 177, 180, 183, 184, 186, 187, 190, 191, 192, 194, 195, 197, 198, 200, 212, 217, 224, 225, 238, 242, 243, 245, 246, 247, 249, 250, 255, 256, 257, 259, 260, 268, 269, 271, 277, 278, 281, 284, 286, 300, 301, 302, 314, 318, 321, 322, 325, 331, 332, 334, 336, 338, 340, 343, 347, 356, 363, 365, 366, 367, 371, 376, 381, 382, 383, 384, 386, 389, 390, 394, 395, 404, 405, 407, 408, 410, 411, 415, 416, 420, 426, 431, 436, 437, 438, 439], "temporari": [7, 22, 39, 47, 50, 53, 61, 66, 85, 99, 106, 137, 165, 182, 208, 212, 236, 240, 242, 246, 249, 254, 259, 269, 277, 278, 280, 306, 308, 320, 324, 331, 337, 340, 359, 365, 372, 378, 439, 441, 443, 451, 452, 453, 458], "pymemoryview_frombuff": [7, 42, 55, 448], "pybuffer_fillinfo": [7, 55, 61, 448], "NOT": [7, 61, 106, 232, 328, 363, 383, 401, 405, 406, 455], "scheme": [7, 30, 61, 73, 93, 99, 103, 106, 130, 148, 165, 172, 199, 236, 257, 259, 299, 300, 316, 320, 321, 331, 334, 337, 371, 372, 375, 383, 403, 430, 437, 438, 440, 443, 444, 448, 449, 450, 451, 452, 453, 454], "len": [7, 8, 9, 22, 37, 39, 40, 47, 52, 53, 58, 62, 74, 83, 85, 91, 92, 99, 102, 103, 105, 109, 135, 140, 142, 150, 151, 156, 160, 165, 177, 179, 180, 182, 200, 204, 214, 215, 219, 224, 225, 231, 236, 249, 257, 265, 269, 270, 275, 276, 277, 279, 287, 300, 302, 317, 318, 320, 321, 323, 324, 327, 340, 359, 362, 366, 376, 383, 385, 388, 402, 403, 410, 415, 416, 417, 418, 424, 425, 426, 437, 440, 441, 442, 443, 444, 445, 448, 450, 451, 452, 453, 454, 457], "product": [7, 15, 78, 82, 93, 98, 116, 119, 136, 175, 182, 214, 225, 234, 236, 249, 257, 262, 300, 309, 323, 324, 331, 361, 365, 366, 396, 401, 405, 410, 415, 425, 434, 437, 438, 442, 443, 444, 446, 449, 452, 455, 457], "items": [7, 59, 115, 269, 318, 324], "guarante": [7, 9, 11, 18, 24, 32, 34, 41, 52, 55, 56, 57, 59, 61, 62, 65, 70, 71, 74, 78, 83, 85, 86, 88, 90, 93, 95, 101, 104, 110, 115, 116, 120, 132, 133, 150, 165, 172, 175, 180, 182, 185, 194, 212, 214, 215, 221, 224, 232, 238, 243, 246, 250, 261, 262, 263, 265, 269, 276, 277, 279, 282, 290, 298, 300, 306, 310, 313, 324, 327, 328, 331, 338, 340, 342, 343, 355, 363, 374, 376, 378, 381, 383, 388, 390, 400, 402, 403, 407, 416, 436, 441, 442, 444, 446, 447, 450, 451, 452, 455, 456, 457, 458], "pybuf_simpl": [7, 450], "pybuf_writ": [7, 42, 443, 450], "control": [7, 31, 32, 33, 34, 41, 56, 63, 66, 71, 73, 75, 77, 81, 82, 85, 90, 91, 92, 97, 98, 99, 101, 102, 104, 110, 114, 117, 120, 124, 126, 127, 130, 131, 133, 136, 137, 142, 145, 148, 150, 153, 156, 161, 164, 165, 166, 167, 172, 173, 175, 179, 180, 182, 183, 185, 186, 190, 191, 194, 196, 197, 199, 200, 202, 204, 207, 212, 214, 216, 218, 223, 234, 236, 237, 238, 242, 243, 244, 246, 247, 250, 255, 256, 257, 259, 263, 268, 269, 270, 276, 277, 280, 282, 287, 289, 290, 291, 293, 296, 297, 299, 303, 304, 310, 311, 313, 315, 318, 319, 321, 323, 324, 326, 327, 328, 331, 332, 337, 338, 342, 343, 345, 347, 352, 353, 357, 358, 362, 365, 366, 367, 368, 371, 372, 375, 378, 381, 382, 383, 388, 390, 392, 394, 395, 397, 399, 401, 402, 403, 404, 405, 407, 409, 411, 413, 415, 418, 419, 420, 421, 423, 427, 428, 430, 431, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "flag": [7, 9, 10, 13, 18, 24, 28, 32, 33, 42, 47, 59, 61, 62, 64, 70, 71, 73, 74, 87, 96, 97, 98, 99, 100, 101, 104, 105, 108, 109, 120, 130, 132, 135, 136, 137, 145, 148, 165, 166, 170, 172, 173, 175, 177, 180, 185, 196, 197, 198, 200, 204, 214, 216, 227, 232, 237, 245, 246, 254, 255, 256, 259, 263, 265, 268, 269, 277, 279, 287, 288, 289, 295, 296, 299, 310, 312, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325, 328, 331, 336, 338, 339, 340, 343, 344, 353, 362, 363, 365, 371, 372, 376, 382, 383, 394, 395, 397, 400, 402, 403, 407, 425, 430, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "struct": [7, 15, 16, 21, 26, 30, 31, 32, 34, 38, 44, 55, 56, 59, 61, 64, 66, 71, 73, 74, 76, 82, 84, 88, 97, 99, 115, 138, 165, 204, 214, 242, 256, 257, 270, 318, 324, 344, 394, 415, 427, 439, 442, 443, 444, 447, 448, 449, 451, 456, 457, 458], "calcsiz": [7, 214, 318, 324, 327], "import": [7, 11, 23, 24, 31, 32, 33, 34, 41, 44, 61, 63, 64, 66, 69, 70, 71, 73, 74, 75, 76, 77, 78, 81, 82, 84, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 110, 111, 114, 115, 117, 119, 120, 125, 127, 128, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 145, 150, 152, 153, 156, 157, 158, 159, 160, 162, 164, 165, 170, 172, 173, 175, 176, 177, 179, 180, 182, 184, 185, 189, 191, 194, 196, 197, 198, 202, 203, 204, 205, 207, 209, 210, 212, 214, 215, 217, 219, 220, 223, 224, 225, 229, 230, 231, 232, 233, 234, 236, 237, 240, 242, 243, 245, 246, 249, 250, 253, 254, 258, 259, 262, 263, 265, 266, 269, 270, 276, 277, 278, 279, 280, 282, 284, 286, 287, 288, 289, 290, 291, 293, 294, 295, 296, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 343, 344, 345, 353, 355, 356, 357, 358, 359, 361, 362, 363, 364, 365, 366, 371, 372, 373, 374, 375, 376, 378, 382, 383, 384, 385, 386, 387, 388, 390, 394, 395, 396, 400, 401, 402, 403, 404, 405, 406, 408, 410, 413, 415, 416, 417, 418, 419, 421, 423, 426, 427, 428, 430, 431, 434, 436, 437, 439, 444, 445, 446, 447, 449, 450, 451, 454, 455, 456, 457, 458, 460], "pybuf_format": 7, "still": [7, 9, 13, 22, 23, 27, 28, 30, 32, 33, 34, 56, 61, 70, 71, 73, 74, 75, 76, 78, 79, 82, 83, 85, 88, 90, 92, 93, 96, 97, 98, 99, 101, 102, 103, 104, 106, 107, 109, 111, 114, 115, 116, 127, 133, 136, 148, 150, 153, 157, 159, 160, 164, 165, 166, 170, 175, 182, 183, 191, 195, 197, 202, 214, 215, 216, 219, 221, 232, 236, 238, 240, 243, 255, 256, 257, 259, 262, 265, 269, 270, 276, 277, 279, 282, 290, 296, 301, 304, 305, 306, 310, 312, 315, 316, 318, 319, 320, 321, 324, 325, 328, 331, 338, 340, 342, 343, 347, 353, 359, 362, 363, 365, 366, 367, 372, 378, 383, 384, 385, 388, 391, 401, 402, 403, 405, 407, 410, 411, 415, 417, 418, 419, 421, 425, 427, 430, 431, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458], "present": [7, 22, 30, 33, 38, 44, 47, 55, 61, 71, 75, 77, 78, 83, 84, 90, 91, 92, 93, 95, 98, 99, 101, 102, 103, 104, 105, 106, 109, 110, 114, 116, 136, 139, 140, 145, 148, 150, 151, 157, 165, 166, 170, 173, 175, 179, 180, 182, 185, 186, 194, 199, 202, 204, 210, 214, 215, 216, 224, 225, 226, 228, 230, 232, 234, 236, 238, 239, 243, 247, 250, 255, 256, 257, 259, 263, 265, 270, 272, 276, 277, 279, 280, 282, 285, 289, 290, 295, 296, 299, 301, 304, 313, 317, 318, 321, 324, 325, 331, 337, 340, 342, 343, 344, 345, 347, 349, 353, 355, 358, 361, 363, 365, 371, 372, 378, 383, 385, 388, 390, 394, 396, 398, 399, 402, 403, 405, 407, 410, 411, 416, 418, 421, 425, 431, 437, 438, 439, 440, 441, 442, 443, 444, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458], "hold": [7, 9, 14, 23, 27, 32, 34, 44, 49, 53, 56, 61, 64, 71, 76, 78, 83, 84, 85, 91, 97, 98, 99, 103, 114, 115, 116, 118, 133, 157, 159, 160, 165, 171, 172, 175, 180, 192, 204, 225, 231, 234, 243, 245, 256, 257, 259, 269, 270, 276, 277, 284, 290, 301, 304, 307, 312, 318, 321, 324, 328, 331, 340, 343, 347, 358, 365, 378, 381, 386, 388, 390, 399, 401, 403, 407, 411, 419, 425, 437, 438, 442, 443, 444, 445, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458], "navig": [7, 90, 166, 279, 295], "disregard": [7, 32, 324], "string": [7, 8, 9, 10, 11, 14, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 38, 39, 40, 41, 44, 46, 47, 51, 56, 57, 61, 63, 64, 66, 70, 71, 73, 74, 77, 78, 85, 86, 87, 88, 90, 91, 93, 95, 96, 98, 99, 101, 103, 104, 106, 108, 109, 114, 115, 116, 120, 121, 127, 131, 133, 136, 137, 139, 142, 143, 145, 147, 148, 149, 150, 157, 159, 162, 164, 165, 166, 167, 170, 171, 172, 173, 175, 177, 179, 180, 182, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 209, 210, 212, 214, 215, 217, 218, 219, 220, 222, 223, 224, 226, 227, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 246, 250, 251, 254, 255, 256, 257, 259, 261, 263, 265, 268, 269, 270, 272, 273, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 300, 302, 303, 308, 309, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 330, 331, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 353, 354, 355, 356, 357, 358, 359, 361, 363, 364, 365, 366, 367, 370, 371, 372, 374, 375, 376, 377, 378, 379, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 409, 411, 412, 415, 417, 418, 419, 422, 423, 424, 425, 427, 430, 431, 436, 438, 439, 442, 444, 446, 447, 450, 451, 453, 454], "ndim": [7, 324], "dimens": [7, 165, 166, 262, 314, 324, 443, 452, 457], "dimension": [7, 85, 192, 262, 282, 300, 324, 361, 452, 454], "scalar": [7, 185, 188, 215, 361, 363], "maximum": [7, 25, 34, 57, 62, 83, 91, 93, 98, 99, 102, 110, 120, 133, 144, 148, 150, 153, 156, 157, 164, 165, 166, 175, 179, 184, 191, 192, 197, 202, 212, 224, 236, 249, 250, 257, 258, 262, 265, 269, 277, 282, 287, 289, 301, 302, 303, 304, 311, 318, 320, 321, 323, 325, 328, 331, 337, 342, 343, 353, 355, 359, 361, 365, 371, 372, 383, 388, 410, 414, 430, 437, 439, 440, 442, 443, 444, 451, 452, 454, 455, 456], "pybuf_max_ndim": 7, "restrict": [7, 32, 41, 56, 71, 73, 74, 76, 87, 88, 91, 97, 99, 102, 110, 114, 115, 116, 143, 148, 150, 165, 166, 172, 175, 179, 194, 212, 214, 219, 224, 236, 245, 250, 269, 277, 290, 294, 301, 309, 318, 320, 321, 324, 325, 326, 328, 332, 333, 335, 343, 344, 363, 366, 385, 388, 394, 395, 401, 402, 403, 405, 406, 410, 411, 415, 416, 430, 436, 438, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458], "attent": [7, 97, 102, 166, 268, 361, 416, 425, 440, 451, 453], "further": [7, 32, 40, 61, 71, 73, 74, 76, 77, 78, 83, 85, 86, 88, 93, 96, 98, 99, 103, 105, 106, 111, 116, 133, 137, 142, 148, 156, 159, 165, 170, 180, 182, 200, 202, 207, 214, 217, 221, 229, 234, 236, 254, 255, 257, 258, 262, 268, 269, 276, 277, 280, 282, 301, 314, 315, 318, 319, 320, 321, 324, 325, 331, 333, 344, 347, 358, 363, 384, 385, 388, 390, 396, 399, 400, 402, 403, 405, 407, 410, 415, 419, 430, 436, 437, 438, 439, 440, 441, 443, 444, 449, 452, 456, 457], "skip": [7, 14, 32, 33, 34, 56, 82, 88, 93, 101, 102, 103, 105, 133, 137, 148, 150, 153, 157, 159, 172, 180, 182, 193, 194, 199, 207, 212, 238, 243, 245, 249, 250, 255, 259, 280, 286, 301, 313, 316, 322, 324, 327, 331, 337, 340, 353, 363, 375, 388, 390, 401, 402, 411, 418, 427, 430, 436, 437, 439, 440, 441, 442, 443, 444, 446, 448, 449, 450, 451, 453, 458], "regular": [7, 11, 33, 61, 66, 74, 76, 78, 82, 83, 85, 91, 93, 94, 99, 111, 114, 116, 120, 127, 150, 151, 153, 157, 159, 164, 165, 170, 175, 182, 189, 199, 209, 214, 215, 223, 225, 232, 236, 242, 243, 249, 254, 256, 277, 278, 279, 282, 290, 293, 310, 315, 317, 318, 321, 322, 324, 325, 331, 337, 340, 341, 361, 363, 365, 372, 376, 378, 403, 404, 405, 410, 411, 415, 426, 427, 430, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "handl": [7, 14, 25, 30, 31, 32, 33, 34, 39, 41, 47, 49, 54, 59, 61, 62, 64, 66, 71, 73, 74, 76, 77, 78, 82, 83, 84, 85, 87, 88, 89, 90, 92, 93, 96, 97, 98, 101, 102, 103, 105, 108, 110, 112, 114, 116, 117, 118, 119, 124, 125, 126, 133, 134, 135, 137, 139, 142, 144, 147, 148, 150, 156, 157, 159, 160, 164, 165, 170, 172, 175, 178, 179, 180, 182, 185, 189, 190, 191, 192, 196, 197, 200, 201, 202, 204, 212, 214, 215, 219, 223, 229, 231, 233, 234, 236, 237, 238, 241, 242, 243, 244, 246, 247, 250, 255, 256, 257, 258, 259, 262, 265, 268, 269, 273, 275, 277, 278, 279, 280, 290, 291, 293, 298, 300, 301, 303, 310, 312, 313, 314, 315, 317, 318, 319, 320, 322, 323, 324, 325, 328, 331, 332, 336, 337, 338, 340, 343, 344, 349, 355, 363, 366, 367, 370, 372, 376, 378, 379, 383, 384, 388, 390, 394, 395, 396, 397, 400, 401, 402, 403, 404, 405, 407, 410, 411, 415, 416, 421, 423, 424, 425, 426, 427, 430, 434, 436, 437, 438, 439, 441, 442, 445, 446, 447, 448, 449, 450, 451, 452, 455, 456, 457, 458], "along": [7, 34, 35, 56, 76, 88, 93, 97, 98, 99, 114, 120, 130, 134, 142, 144, 153, 159, 165, 175, 182, 192, 194, 207, 219, 223, 224, 233, 238, 239, 255, 257, 265, 268, 277, 282, 290, 311, 317, 318, 321, 324, 325, 328, 336, 347, 353, 357, 361, 363, 365, 366, 375, 383, 389, 396, 401, 402, 418, 426, 437, 438, 439, 440, 441, 443, 444, 446, 447, 449, 450, 451, 453, 454], "nth": [7, 249, 353], "dictat": [7, 85, 157, 211, 214, 282, 318, 415, 436, 437, 443], "de": [7, 12, 23, 28, 40, 78, 136, 166, 189, 219, 232, 240, 249, 261, 282, 292, 324, 337, 363, 371, 394, 421, 447, 448, 449, 453, 455, 456, 458], "might": [7, 23, 32, 34, 50, 56, 61, 62, 71, 73, 74, 76, 81, 83, 84, 86, 88, 90, 92, 93, 97, 98, 99, 101, 102, 103, 105, 106, 109, 116, 126, 131, 133, 137, 139, 148, 165, 168, 170, 172, 180, 182, 185, 194, 196, 198, 202, 210, 212, 223, 224, 225, 227, 229, 232, 236, 246, 247, 254, 255, 256, 257, 259, 265, 268, 269, 270, 276, 277, 282, 284, 287, 288, 290, 301, 317, 318, 320, 321, 324, 331, 332, 340, 343, 345, 347, 361, 363, 365, 366, 367, 371, 372, 376, 378, 388, 397, 403, 407, 409, 415, 416, 417, 421, 422, 424, 425, 430, 435, 436, 437, 439, 440, 441, 442, 443, 444, 447, 449, 451, 452, 453, 455, 456], "cast": [7, 32, 34, 41, 44, 56, 59, 62, 71, 74, 76, 88, 150, 165, 175, 249, 324, 358, 363, 448, 450, 452, 456, 457], "freed": [7, 13, 22, 27, 32, 41, 44, 71, 73, 97, 99, 156, 216, 221, 225, 269, 277, 311, 403, 427, 438, 440, 442, 455], "alter": [7, 22, 41, 83, 85, 120, 124, 150, 175, 197, 232, 236, 237, 250, 256, 282, 306, 324, 325, 361, 401, 403, 407, 427, 437, 441, 447, 451, 453, 457], "limit": [7, 13, 23, 26, 32, 33, 34, 38, 56, 57, 59, 61, 62, 66, 73, 83, 90, 92, 93, 95, 99, 102, 114, 116, 120, 121, 125, 126, 127, 130, 131, 133, 135, 142, 148, 153, 156, 159, 161, 164, 173, 175, 180, 190, 196, 197, 200, 203, 204, 210, 212, 214, 215, 224, 236, 237, 245, 249, 256, 258, 263, 268, 269, 270, 276, 277, 278, 282, 285, 289, 294, 296, 298, 300, 301, 303, 306, 312, 315, 316, 318, 320, 321, 323, 325, 328, 331, 337, 340, 343, 351, 358, 359, 361, 366, 381, 383, 385, 388, 396, 399, 401, 403, 404, 405, 407, 409, 410, 415, 417, 420, 430, 431, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "64": [7, 62, 83, 91, 92, 96, 103, 130, 136, 139, 165, 166, 172, 175, 214, 224, 247, 249, 258, 269, 270, 277, 285, 286, 288, 314, 318, 321, 324, 327, 331, 361, 394, 403, 417, 421, 424, 431, 436, 437, 439, 441, 442, 443, 444, 446, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458], "send": [7, 35, 77, 85, 90, 93, 98, 101, 102, 103, 106, 118, 120, 122, 124, 127, 130, 131, 135, 148, 151, 159, 166, 180, 183, 189, 190, 201, 212, 219, 231, 233, 234, 236, 237, 245, 255, 256, 257, 265, 269, 270, 277, 282, 287, 298, 299, 311, 315, 317, 318, 319, 321, 328, 335, 339, 340, 347, 361, 363, 372, 383, 394, 403, 405, 426, 427, 429, 437, 440, 441, 442, 444, 447, 448, 449, 451, 452, 454, 455, 456, 458], "drastic": 7, "exact": [7, 13, 18, 34, 46, 78, 82, 88, 91, 92, 93, 102, 103, 105, 107, 120, 127, 142, 165, 166, 172, 175, 180, 182, 190, 200, 202, 214, 238, 242, 258, 259, 262, 270, 274, 275, 276, 277, 282, 318, 323, 324, 327, 331, 334, 347, 355, 358, 365, 367, 375, 388, 396, 402, 405, 407, 408, 411, 419, 427, 436, 437, 438, 442, 443, 444, 445, 446, 447, 448, 449, 452, 453], "unambigu": [7, 76, 114, 116, 172, 256, 290, 317, 403, 411, 421, 443, 451], "influenc": [7, 282, 318, 430, 443], "els": [7, 22, 28, 34, 35, 40, 41, 51, 61, 62, 70, 71, 73, 74, 76, 77, 82, 83, 84, 86, 87, 88, 93, 97, 99, 101, 102, 103, 106, 108, 109, 116, 120, 128, 130, 133, 150, 156, 159, 165, 172, 175, 179, 182, 185, 189, 196, 215, 217, 219, 225, 229, 231, 236, 237, 238, 249, 250, 255, 257, 259, 263, 269, 273, 275, 276, 277, 282, 291, 298, 300, 301, 311, 314, 318, 320, 321, 322, 323, 324, 328, 331, 337, 338, 340, 343, 350, 355, 356, 361, 362, 363, 366, 375, 376, 378, 383, 385, 397, 403, 405, 406, 407, 409, 410, 411, 418, 427, 430, 436, 437, 440, 441, 442, 443, 444, 447, 448, 449, 450, 451, 452, 453, 454, 458], "either": [7, 10, 11, 14, 22, 23, 32, 34, 42, 44, 47, 53, 56, 57, 59, 61, 62, 65, 69, 70, 71, 74, 76, 78, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 95, 98, 99, 100, 101, 102, 103, 105, 106, 107, 114, 116, 119, 120, 123, 127, 131, 133, 136, 137, 138, 141, 142, 143, 144, 148, 150, 159, 162, 164, 165, 166, 167, 170, 172, 175, 179, 180, 182, 183, 184, 185, 186, 187, 188, 191, 194, 195, 196, 197, 198, 200, 202, 204, 210, 212, 214, 220, 221, 224, 226, 231, 232, 234, 236, 237, 238, 240, 243, 245, 246, 247, 249, 250, 255, 256, 257, 258, 259, 262, 265, 269, 270, 273, 276, 277, 278, 279, 280, 282, 284, 290, 291, 293, 296, 301, 304, 306, 307, 310, 311, 313, 314, 316, 318, 320, 321, 324, 325, 327, 328, 331, 332, 334, 337, 338, 340, 343, 344, 347, 353, 355, 358, 361, 363, 365, 366, 371, 372, 374, 375, 376, 377, 378, 379, 381, 383, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 407, 410, 411, 414, 415, 416, 417, 418, 419, 421, 425, 428, 430, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457], "choic": [7, 71, 76, 82, 83, 84, 87, 99, 103, 106, 144, 154, 182, 200, 214, 219, 221, 236, 243, 255, 256, 259, 269, 276, 290, 296, 300, 306, 308, 311, 312, 321, 323, 324, 327, 406, 409, 416, 421, 423, 426, 434, 435, 439, 442, 449, 450, 451, 454, 455, 456], "correctli": [7, 25, 44, 61, 64, 74, 76, 83, 88, 91, 96, 97, 99, 111, 114, 148, 159, 164, 172, 175, 182, 185, 186, 192, 197, 198, 214, 220, 236, 247, 254, 262, 265, 277, 280, 306, 320, 324, 337, 340, 347, 363, 366, 367, 381, 383, 403, 407, 410, 417, 418, 436, 439, 441, 443, 444, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "stand": [7, 79, 84, 105, 159, 175, 199, 262, 276, 284, 301, 395, 396, 402, 410, 437, 442, 443, 444, 448, 451, 453, 456, 457], "alon": [7, 62, 73, 79, 84, 99, 102, 116, 238, 280, 301, 306, 313, 395, 401, 402, 409, 439, 442, 447, 453], "impli": [7, 30, 34, 41, 56, 61, 85, 87, 99, 105, 153, 170, 212, 214, 225, 246, 276, 296, 300, 302, 320, 321, 324, 390, 397, 401, 403, 405, 411, 430, 431, 436, 443, 448, 453, 456, 457], "pybuf_indirect": 7, "ye": [7, 71, 76, 77, 78, 79, 82, 83, 84, 87, 95, 157, 175, 182, 254, 255, 296, 301, 321, 347, 351, 381, 383, 386, 388, 401, 416, 421, 424, 431, 436, 439, 448, 451], "pybuf_strid": 7, "pybuf_nd": 7, "fortran": [7, 76, 85, 282, 320, 324, 419, 438, 441, 443], "explicitli": [7, 28, 29, 32, 33, 34, 44, 47, 49, 55, 61, 71, 74, 83, 85, 86, 88, 90, 92, 93, 95, 97, 98, 99, 101, 102, 107, 114, 116, 120, 126, 129, 133, 141, 147, 156, 159, 160, 165, 168, 170, 172, 175, 177, 185, 187, 191, 194, 195, 197, 199, 202, 203, 207, 212, 214, 215, 219, 222, 232, 234, 238, 242, 243, 246, 250, 254, 255, 256, 258, 259, 262, 269, 270, 276, 277, 278, 280, 289, 293, 308, 310, 312, 315, 316, 317, 318, 319, 320, 321, 323, 324, 327, 328, 331, 335, 337, 338, 340, 343, 358, 361, 362, 363, 365, 366, 372, 375, 376, 378, 381, 383, 385, 386, 387, 388, 398, 401, 402, 403, 404, 405, 407, 410, 411, 413, 415, 416, 417, 418, 424, 425, 430, 436, 439, 440, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "contig": [7, 243], "pybuf_c_contigu": [7, 443], "pybuf_f_contigu": [7, 443], "pybuf_any_contigu": 7, "fulli": [7, 13, 27, 32, 33, 44, 59, 61, 69, 79, 85, 99, 101, 105, 114, 121, 125, 128, 175, 182, 186, 192, 196, 197, 238, 243, 245, 249, 256, 257, 269, 282, 285, 298, 315, 317, 318, 324, 328, 331, 337, 338, 363, 365, 374, 376, 383, 385, 388, 392, 398, 403, 407, 415, 430, 436, 439, 444, 445, 448, 449, 451, 452, 453, 454, 455, 457, 458], "combin": [7, 23, 32, 47, 54, 56, 61, 62, 70, 74, 78, 83, 85, 88, 90, 93, 97, 99, 102, 103, 105, 106, 107, 111, 114, 120, 132, 133, 148, 150, 153, 159, 165, 166, 170, 172, 175, 178, 182, 192, 194, 197, 200, 216, 225, 232, 233, 234, 236, 238, 246, 249, 254, 255, 269, 276, 277, 278, 279, 290, 300, 301, 304, 310, 311, 313, 316, 317, 318, 319, 320, 323, 324, 325, 326, 327, 328, 335, 337, 338, 347, 353, 363, 364, 365, 371, 381, 382, 398, 401, 402, 403, 405, 407, 410, 411, 415, 416, 417, 421, 431, 437, 441, 442, 443, 444, 447, 448, 453, 454, 455, 456, 457], "previou": [7, 11, 16, 17, 23, 28, 32, 37, 41, 56, 59, 61, 62, 70, 71, 73, 74, 76, 77, 82, 85, 87, 88, 90, 93, 98, 99, 102, 105, 114, 116, 124, 126, 127, 133, 137, 142, 143, 148, 157, 160, 165, 166, 170, 172, 175, 179, 180, 182, 197, 200, 202, 203, 214, 219, 221, 231, 234, 236, 243, 246, 249, 257, 258, 269, 276, 277, 278, 279, 280, 282, 293, 296, 300, 301, 312, 313, 315, 317, 318, 321, 323, 324, 327, 331, 335, 337, 340, 342, 344, 353, 357, 359, 361, 363, 365, 366, 371, 372, 376, 379, 385, 388, 395, 402, 403, 407, 411, 415, 417, 421, 425, 430, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457], "conveni": [7, 20, 23, 24, 28, 30, 32, 41, 44, 61, 66, 71, 73, 76, 82, 83, 84, 88, 98, 99, 104, 105, 106, 114, 118, 120, 133, 139, 143, 147, 148, 150, 157, 170, 172, 175, 178, 180, 184, 185, 187, 190, 191, 192, 194, 195, 196, 197, 198, 214, 215, 219, 221, 223, 224, 232, 236, 239, 242, 243, 244, 246, 255, 256, 258, 259, 262, 263, 269, 270, 276, 280, 282, 290, 308, 313, 317, 318, 321, 323, 324, 328, 337, 339, 340, 342, 344, 345, 347, 351, 361, 363, 365, 366, 367, 375, 377, 383, 384, 385, 388, 389, 391, 396, 402, 403, 407, 410, 411, 415, 416, 418, 425, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 453, 454, 455, 457], "frequent": [7, 34, 66, 71, 73, 82, 83, 95, 102, 103, 105, 106, 140, 150, 158, 172, 179, 236, 254, 257, 269, 276, 287, 323, 363, 365, 399, 413, 416, 417, 421, 426, 429, 440, 441, 443, 444, 449, 457], "undefin": [7, 18, 25, 28, 32, 38, 41, 61, 62, 83, 88, 120, 134, 148, 156, 185, 194, 196, 202, 214, 216, 221, 246, 262, 276, 310, 323, 324, 331, 344, 355, 359, 376, 388, 391, 403, 405, 410, 421, 424, 431, 454, 456], "pybuffer_iscontigu": [7, 55, 448], "pybuf_ful": 7, "pybuf_full_ro": 7, "pybuf_record": 7, "pybuf_records_ro": 7, "pybuf_strided_ro": 7, "pybuf_contig": 7, "pybuf_contig_ro": 7, "ptr": [7, 33, 41, 247, 441, 454], "typeof": 7, "def": [7, 17, 22, 34, 44, 59, 64, 69, 70, 71, 74, 77, 82, 83, 85, 86, 88, 90, 91, 92, 93, 97, 98, 99, 100, 102, 103, 104, 105, 109, 111, 114, 116, 117, 119, 120, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 140, 141, 142, 145, 150, 151, 156, 159, 160, 162, 165, 170, 172, 175, 177, 179, 180, 182, 189, 192, 200, 202, 205, 214, 215, 216, 217, 219, 221, 224, 225, 229, 232, 234, 236, 238, 239, 243, 246, 247, 249, 250, 255, 256, 262, 269, 273, 275, 276, 279, 280, 282, 285, 291, 294, 296, 298, 300, 301, 302, 303, 307, 311, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 330, 331, 337, 339, 340, 342, 343, 345, 347, 355, 358, 359, 361, 362, 363, 365, 366, 367, 375, 376, 378, 383, 386, 388, 394, 395, 397, 402, 403, 404, 405, 406, 410, 411, 415, 416, 418, 425, 426, 427, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458], "verify_structur": 7, "memlen": 7, "offset": [7, 10, 14, 20, 22, 23, 26, 28, 56, 59, 61, 73, 74, 82, 91, 95, 116, 120, 135, 165, 172, 175, 180, 192, 198, 202, 204, 212, 224, 229, 243, 246, 259, 265, 269, 277, 288, 296, 318, 320, 327, 332, 340, 344, 356, 358, 390, 397, 400, 403, 421, 430, 437, 442, 443, 447, 448, 451, 452, 456], "bound": [7, 10, 13, 37, 41, 43, 52, 54, 58, 61, 62, 76, 79, 83, 85, 91, 92, 98, 99, 102, 103, 116, 117, 118, 119, 120, 123, 124, 132, 133, 148, 150, 154, 156, 159, 175, 179, 180, 200, 202, 214, 215, 237, 238, 243, 256, 257, 269, 300, 301, 304, 313, 318, 320, 321, 324, 330, 340, 343, 345, 347, 353, 362, 363, 366, 367, 372, 378, 395, 401, 402, 403, 404, 405, 406, 407, 411, 415, 418, 424, 425, 437, 439, 440, 442, 443, 444, 449, 452, 453, 456, 458], "mem": [7, 41, 42], "imin": 7, "sum": [7, 15, 34, 85, 91, 93, 114, 116, 120, 150, 172, 175, 182, 197, 214, 215, 249, 258, 262, 270, 277, 279, 290, 300, 304, 308, 318, 323, 324, 344, 353, 359, 363, 405, 406, 415, 416, 419, 424, 425, 426, 427, 440, 441, 443, 446, 448, 449, 452, 457, 458], "j": [7, 41, 62, 71, 82, 83, 85, 91, 105, 144, 150, 153, 166, 170, 172, 179, 182, 224, 249, 275, 280, 287, 301, 318, 323, 324, 331, 344, 403, 410, 419, 424, 430, 431, 441, 442, 443, 444, 445, 446, 447, 448, 452, 454, 456, 457, 458], "imax": 7, "view": [7, 15, 22, 42, 61, 82, 85, 90, 91, 92, 95, 114, 116, 127, 133, 150, 151, 172, 175, 180, 185, 189, 194, 197, 214, 225, 236, 246, 255, 282, 290, 295, 320, 322, 327, 330, 331, 347, 353, 361, 362, 381, 385, 421, 437, 442, 443, 447, 450, 451, 452, 454], "x": [7, 9, 14, 25, 32, 33, 34, 47, 55, 56, 57, 61, 62, 70, 71, 75, 76, 77, 78, 84, 85, 87, 88, 90, 91, 92, 93, 96, 98, 99, 100, 102, 104, 105, 106, 111, 114, 115, 116, 133, 139, 140, 142, 144, 148, 150, 153, 157, 159, 165, 166, 168, 170, 172, 175, 177, 179, 180, 182, 199, 203, 210, 212, 214, 215, 216, 217, 223, 225, 229, 231, 236, 243, 246, 247, 249, 250, 255, 257, 258, 259, 262, 263, 269, 273, 275, 276, 277, 279, 280, 282, 283, 292, 295, 300, 301, 303, 314, 315, 316, 318, 320, 321, 323, 324, 325, 327, 328, 331, 337, 340, 343, 344, 345, 347, 353, 354, 359, 361, 363, 365, 367, 371, 372, 374, 375, 378, 383, 394, 395, 396, 397, 402, 403, 405, 410, 411, 413, 415, 416, 417, 418, 419, 421, 423, 424, 427, 430, 431, 435, 436, 437, 438, 439, 440, 441, 442, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458], "anywher": [7, 83, 102, 150, 175, 179, 200, 236, 239, 249, 256, 276, 279, 301, 331, 355, 363, 371, 390, 400, 404, 405, 407, 445, 458], "index": [7, 13, 33, 34, 37, 46, 52, 57, 58, 61, 62, 66, 77, 78, 82, 85, 92, 93, 96, 99, 101, 102, 104, 107, 110, 111, 115, 116, 117, 135, 137, 140, 145, 150, 151, 165, 180, 181, 185, 194, 198, 200, 202, 214, 219, 222, 225, 231, 234, 242, 243, 245, 249, 250, 256, 265, 269, 270, 275, 277, 279, 282, 292, 295, 296, 298, 301, 302, 304, 318, 320, 322, 324, 325, 331, 339, 343, 344, 353, 358, 359, 371, 381, 383, 385, 388, 397, 402, 403, 405, 411, 415, 417, 424, 425, 428, 429, 434, 437, 439, 441, 443, 444, 445, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458], "get_item_point": 7, "pyobject_checkbuff": [7, 55, 448, 450, 458], "cannot": [7, 9, 24, 26, 28, 32, 33, 34, 37, 38, 47, 52, 56, 57, 59, 61, 62, 64, 65, 70, 71, 74, 76, 83, 85, 87, 88, 90, 92, 93, 96, 97, 98, 99, 100, 101, 104, 106, 110, 111, 116, 120, 123, 125, 126, 129, 137, 148, 150, 151, 153, 156, 157, 158, 159, 165, 166, 170, 172, 175, 180, 182, 186, 190, 191, 192, 197, 201, 202, 203, 204, 207, 212, 214, 215, 216, 219, 221, 222, 225, 234, 236, 238, 241, 243, 246, 250, 254, 255, 256, 257, 258, 259, 261, 262, 263, 265, 268, 269, 277, 279, 280, 282, 284, 285, 286, 289, 290, 292, 296, 301, 304, 309, 310, 311, 312, 313, 314, 315, 318, 319, 320, 321, 323, 324, 325, 328, 331, 332, 333, 337, 338, 340, 343, 344, 347, 363, 371, 372, 375, 378, 381, 382, 385, 388, 390, 391, 394, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 410, 411, 415, 416, 417, 418, 419, 421, 424, 427, 430, 431, 436, 439, 440, 442, 443, 444, 445, 446, 447, 449, 451, 452, 453, 455, 456, 457, 458], "buffererror": [7, 23, 61, 202, 282, 425], "chain": [7, 23, 61, 83, 91, 93, 97, 99, 106, 147, 150, 157, 165, 202, 203, 214, 225, 243, 249, 255, 277, 280, 324, 331, 358, 366, 372, 403, 405, 411, 415, 417, 443, 445, 448, 449, 450, 452, 453, 454, 458], "redirect": [7, 61, 84, 98, 99, 106, 127, 131, 159, 230, 231, 232, 234, 238, 255, 315, 328, 331, 372, 375, 430, 437, 453, 454, 455, 456], "pybuffer_sizefromformat": [7, 55, 448], "pybuffer_getpoint": [7, 55, 448], "pybuffer_fromcontigu": [7, 55, 448], "fort": 7, "pybuffer_tocontigu": [7, 55, 448], "src": [7, 50, 87, 100, 135, 165, 182, 189, 220, 229, 265, 277, 314, 320, 440, 442], "pyobject_copydata": [7, 55, 448], "dest": [7, 87, 99, 189, 217, 257, 265, 276, 291, 375, 440, 442, 443, 444], "between": [7, 15, 20, 32, 33, 34, 37, 38, 41, 44, 52, 54, 58, 59, 61, 66, 70, 71, 73, 74, 76, 77, 78, 82, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 102, 103, 104, 114, 116, 118, 120, 127, 128, 132, 134, 140, 142, 143, 144, 148, 150, 151, 157, 161, 162, 166, 172, 175, 180, 182, 184, 185, 186, 190, 194, 198, 200, 202, 205, 207, 214, 219, 221, 224, 225, 229, 236, 238, 239, 242, 243, 246, 247, 249, 250, 254, 255, 256, 257, 258, 261, 262, 263, 264, 265, 270, 271, 273, 275, 277, 278, 279, 280, 282, 283, 290, 298, 300, 301, 302, 316, 318, 319, 320, 321, 324, 327, 328, 331, 338, 340, 342, 343, 344, 345, 347, 349, 350, 353, 354, 355, 359, 361, 362, 363, 365, 366, 367, 371, 372, 376, 377, 381, 383, 385, 386, 388, 392, 394, 399, 400, 401, 402, 403, 405, 406, 407, 409, 411, 415, 416, 417, 418, 421, 424, 425, 426, 430, 434, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460], "pybuffer_fillcontiguousstrid": [7, 55, 448], "per": [7, 13, 22, 23, 30, 34, 44, 47, 61, 62, 71, 76, 78, 82, 83, 86, 88, 99, 107, 114, 116, 120, 126, 127, 136, 137, 139, 143, 148, 150, 166, 170, 172, 175, 180, 185, 186, 192, 194, 197, 198, 212, 215, 216, 231, 238, 239, 250, 255, 259, 269, 277, 278, 287, 289, 290, 299, 301, 311, 316, 318, 319, 320, 321, 324, 331, 340, 343, 344, 345, 347, 353, 357, 359, 365, 394, 397, 402, 403, 407, 411, 419, 425, 427, 430, 436, 440, 441, 442, 444, 445, 446, 447, 452, 453, 454, 456, 457], "accord": [7, 18, 35, 38, 62, 64, 66, 91, 92, 99, 105, 116, 120, 144, 148, 150, 164, 170, 172, 175, 185, 190, 192, 194, 197, 198, 205, 220, 222, 224, 232, 236, 237, 238, 242, 244, 249, 254, 255, 256, 262, 269, 276, 277, 278, 285, 290, 300, 321, 322, 324, 326, 327, 344, 353, 355, 361, 365, 371, 372, 373, 375, 385, 397, 401, 403, 410, 417, 430, 436, 439, 440, 441, 442, 448, 449, 450, 451, 452, 453, 454, 455], "design": [7, 33, 34, 61, 66, 74, 78, 80, 82, 83, 85, 86, 88, 91, 92, 93, 97, 98, 99, 101, 103, 105, 106, 107, 116, 123, 125, 128, 131, 132, 133, 139, 140, 148, 150, 157, 159, 166, 172, 175, 181, 182, 183, 190, 199, 200, 202, 214, 215, 217, 219, 221, 224, 226, 236, 238, 242, 259, 261, 269, 276, 277, 282, 290, 298, 299, 305, 308, 313, 318, 321, 327, 331, 337, 340, 343, 347, 355, 361, 363, 366, 371, 383, 392, 399, 400, 401, 407, 414, 415, 417, 425, 427, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 453, 456, 458], "getbufferproc": [7, 55, 61, 452], "subtyp": [8, 9, 11, 15, 20, 22, 25, 37, 38, 44, 47, 53, 58, 59, 61, 62, 185, 186, 189, 190, 192, 193, 194, 195, 236, 263, 273, 276, 315, 321, 324, 391, 402, 403, 405, 439, 447], "pybytearray_typ": [8, 55], "pybytearray_check": 8, "pybytearray_checkexact": 8, "pybytearray_fromobject": [8, 55, 443], "pybytearray_fromstringands": [8, 55, 443], "pybytearray_concat": [8, 55], "concat": [8, 62, 93, 275, 363, 416], "pybytearray_s": [8, 55], "pybytearray_asstr": [8, 55], "extra": [8, 9, 16, 18, 28, 31, 34, 55, 61, 62, 66, 74, 76, 83, 85, 86, 88, 90, 92, 99, 106, 114, 116, 120, 126, 150, 151, 160, 164, 175, 180, 182, 185, 191, 192, 194, 197, 200, 231, 236, 239, 255, 256, 259, 261, 269, 270, 276, 277, 314, 320, 321, 324, 327, 337, 340, 345, 353, 363, 366, 388, 397, 403, 406, 416, 417, 421, 427, 430, 431, 437, 440, 443, 444, 447, 448, 449, 451, 452, 455, 456, 457], "append": [8, 9, 33, 37, 57, 62, 74, 76, 77, 78, 82, 83, 88, 98, 99, 103, 114, 115, 128, 142, 147, 148, 150, 151, 153, 165, 170, 172, 173, 175, 178, 180, 185, 189, 191, 192, 194, 197, 214, 215, 216, 223, 237, 238, 243, 246, 249, 255, 257, 258, 259, 269, 270, 276, 277, 278, 279, 280, 282, 284, 291, 298, 300, 301, 302, 303, 312, 316, 318, 320, 321, 322, 324, 331, 337, 340, 355, 365, 372, 376, 383, 386, 388, 397, 402, 403, 410, 415, 416, 417, 418, 421, 424, 425, 427, 430, 431, 436, 437, 438, 440, 441, 442, 443, 444, 445, 448, 449, 451, 452, 454, 455], "pybytearray_res": [8, 55], "trade": [8, 205, 276, 324, 401, 427], "safeti": [8, 12, 32, 71, 85, 86, 92, 133, 189, 243, 269, 276, 306, 320, 374, 444, 446, 451], "speed": [8, 41, 62, 71, 76, 91, 98, 102, 139, 150, 151, 166, 173, 175, 179, 205, 215, 223, 225, 238, 246, 249, 279, 280, 282, 300, 312, 321, 323, 331, 339, 345, 361, 399, 403, 414, 425, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458], "pybytearray_as_str": 8, "pybytearray_get_s": 8, "pybytes_typ": [9, 55], "pybytes_check": [9, 77, 443], "pybytes_checkexact": 9, "pybytes_fromstr": [9, 41, 44, 55], "pybytes_fromstringands": [9, 55, 443], "uniniti": [9, 32, 34, 41, 71, 83, 88, 282, 431], "pybytes_fromformat": [9, 55], "printf": [9, 62, 70, 71, 95, 165, 234, 255, 405, 421, 424, 435, 442, 448], "style": [9, 10, 23, 62, 66, 71, 74, 76, 84, 85, 92, 93, 98, 102, 109, 111, 112, 114, 116, 127, 136, 137, 139, 143, 150, 154, 157, 179, 185, 194, 196, 208, 209, 210, 213, 214, 215, 219, 229, 231, 234, 242, 249, 255, 256, 259, 262, 263, 270, 276, 277, 278, 279, 280, 282, 290, 295, 300, 301, 308, 312, 314, 315, 318, 320, 329, 331, 334, 340, 343, 347, 350, 351, 356, 358, 365, 368, 383, 395, 405, 406, 409, 410, 413, 415, 420, 421, 422, 424, 426, 427, 431, 436, 437, 438, 439, 440, 441, 443, 444, 445, 448, 449, 450, 451, 452, 453, 456, 457], "calcul": [9, 30, 32, 33, 34, 57, 61, 62, 71, 78, 83, 84, 87, 88, 91, 93, 114, 119, 143, 150, 166, 170, 172, 175, 180, 195, 215, 224, 249, 257, 262, 269, 304, 315, 318, 323, 324, 325, 327, 330, 333, 335, 344, 345, 355, 358, 361, 362, 367, 372, 377, 403, 405, 407, 410, 414, 417, 419, 425, 426, 427, 439, 442, 443, 446, 448, 449, 453, 457], "liter": [9, 38, 62, 76, 85, 88, 92, 101, 102, 108, 114, 147, 148, 149, 158, 172, 175, 180, 182, 209, 210, 214, 219, 220, 237, 245, 250, 255, 256, 258, 284, 289, 301, 313, 320, 324, 325, 328, 344, 345, 347, 353, 355, 363, 365, 371, 376, 379, 388, 390, 403, 404, 406, 407, 409, 416, 423, 424, 437, 439, 440, 442, 444, 445, 449, 450, 451, 453, 456, 457, 458], "ld": [9, 70, 75, 165, 324, 431], "lu": [9, 324, 364, 410, 437, 453, 455, 456], "zd": 9, "zu": 9, "size_t": [9, 10, 18, 28, 33, 34, 38, 41, 57, 62, 88, 165, 327, 452], "hex": [9, 62, 83, 85, 92, 102, 103, 105, 136, 139, 148, 165, 200, 214, 224, 308, 321, 324, 325, 331, 347, 374, 403, 410, 419, 425, 427, 437, 438, 440, 442, 443, 445, 446, 447, 453, 454], "mostli": [9, 10, 23, 24, 61, 62, 64, 76, 78, 84, 91, 103, 120, 158, 182, 202, 236, 243, 255, 262, 269, 321, 361, 371, 372, 388, 397, 402, 404, 407, 411, 415, 419, 437, 438, 439, 440, 442, 444, 445, 446, 448, 451, 453, 454, 455, 456], "0x": [9, 46, 62, 83, 85, 92, 102, 132, 165, 182, 214, 233, 269, 276, 324, 325, 361, 366, 367, 410, 441, 451], "yield": [9, 29, 35, 55, 62, 73, 76, 83, 85, 93, 108, 111, 116, 127, 132, 133, 142, 150, 156, 157, 159, 172, 179, 180, 186, 196, 212, 214, 215, 220, 221, 224, 231, 238, 241, 243, 246, 249, 250, 259, 269, 277, 279, 282, 284, 301, 313, 324, 327, 332, 337, 340, 355, 358, 363, 366, 367, 371, 374, 383, 385, 388, 394, 402, 403, 404, 406, 410, 415, 419, 439, 440, 442, 443, 444, 447, 449, 451, 452, 453, 454, 455, 456, 457, 458], "unrecogn": [9, 62, 87, 114, 217, 229, 389, 397, 410, 449, 454, 455], "rest": [9, 18, 62, 75, 78, 83, 87, 88, 93, 97, 98, 99, 102, 103, 114, 116, 122, 130, 151, 166, 175, 182, 202, 212, 215, 236, 255, 263, 276, 277, 284, 301, 305, 324, 340, 353, 355, 366, 394, 402, 403, 406, 410, 411, 414, 416, 418, 421, 437, 439, 440, 442, 443, 444, 445, 447, 449, 452, 453, 456, 458], "discard": [9, 34, 37, 47, 53, 58, 62, 64, 71, 88, 92, 93, 103, 120, 133, 136, 140, 147, 148, 150, 151, 172, 175, 232, 246, 255, 256, 259, 269, 272, 276, 318, 320, 324, 339, 353, 365, 376, 378, 386, 388, 391, 402, 403, 424, 430, 439, 442, 443, 444, 449, 453, 455, 457], "precis": [9, 13, 18, 25, 44, 62, 70, 76, 98, 164, 172, 202, 214, 219, 247, 250, 256, 257, 262, 269, 274, 277, 290, 295, 300, 310, 311, 318, 320, 324, 325, 327, 331, 344, 345, 353, 363, 372, 402, 403, 405, 409, 410, 416, 419, 427, 437, 441, 442, 443, 444, 448, 451, 452, 453, 455, 456, 457, 458], "pybytes_fromformatv": [9, 55], "pybytes_fromobject": [9, 55], "pybytes_s": [9, 55, 77], "pybytes_get_s": 9, "pybytes_asstr": [9, 55, 447], "last": [9, 22, 23, 25, 26, 32, 33, 34, 44, 50, 57, 61, 65, 71, 74, 76, 83, 85, 87, 88, 90, 91, 92, 93, 96, 97, 98, 99, 101, 102, 103, 105, 109, 111, 114, 115, 116, 119, 128, 133, 134, 137, 139, 143, 145, 148, 150, 151, 157, 159, 165, 166, 172, 173, 175, 177, 179, 180, 182, 185, 189, 192, 194, 198, 200, 202, 203, 204, 207, 210, 212, 214, 216, 221, 223, 224, 225, 234, 236, 237, 243, 247, 249, 250, 254, 255, 257, 258, 259, 262, 269, 270, 275, 276, 277, 278, 279, 280, 282, 290, 296, 301, 302, 305, 310, 312, 313, 314, 318, 320, 322, 324, 325, 327, 328, 331, 337, 338, 343, 344, 347, 353, 355, 358, 359, 361, 363, 364, 365, 366, 367, 371, 372, 373, 374, 378, 381, 382, 385, 388, 390, 397, 399, 402, 403, 404, 405, 407, 410, 411, 415, 416, 417, 418, 421, 424, 425, 427, 430, 431, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458], "modifi": [9, 22, 23, 27, 32, 33, 50, 59, 61, 62, 64, 71, 74, 75, 76, 77, 78, 85, 86, 87, 88, 92, 93, 97, 98, 99, 104, 105, 106, 111, 114, 116, 131, 133, 148, 150, 157, 165, 166, 173, 175, 180, 182, 185, 186, 187, 190, 192, 194, 197, 200, 204, 205, 214, 221, 234, 236, 243, 246, 254, 255, 256, 257, 259, 261, 269, 270, 276, 277, 279, 280, 282, 284, 288, 289, 290, 296, 301, 303, 306, 310, 311, 312, 313, 314, 317, 318, 319, 320, 324, 325, 328, 331, 332, 334, 337, 340, 343, 347, 350, 353, 355, 358, 359, 361, 362, 363, 365, 366, 367, 371, 372, 373, 376, 381, 383, 384, 385, 391, 392, 395, 396, 398, 399, 400, 401, 402, 403, 404, 407, 409, 410, 411, 415, 416, 417, 421, 425, 428, 430, 434, 437, 438, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457], "dealloc": [9, 13, 22, 28, 32, 34, 41, 44, 50, 61, 62, 71, 73, 74, 76, 85, 97, 216, 340, 378, 411, 431, 438, 439, 444, 448, 450, 451, 457], "pybytes_as_str": [9, 406], "pybytes_asstringands": [9, 55, 77], "pybytes_concat": [9, 55], "newpart": 9, "old": [9, 13, 23, 41, 44, 50, 56, 57, 58, 62, 71, 76, 83, 85, 88, 98, 102, 111, 114, 116, 150, 159, 165, 166, 185, 194, 202, 214, 215, 232, 237, 238, 250, 256, 257, 259, 263, 268, 269, 276, 277, 279, 280, 282, 286, 290, 312, 315, 320, 324, 325, 331, 337, 339, 340, 347, 358, 359, 361, 363, 366, 372, 375, 377, 383, 385, 390, 401, 402, 403, 405, 410, 411, 417, 424, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "stolen": [9, 19, 29, 34, 70], "pybytes_concatanddel": [9, 55], "_pybytes_res": 9, "newsiz": [9, 28, 58, 265], "build": [9, 31, 32, 33, 41, 44, 55, 56, 62, 63, 66, 72, 73, 74, 76, 77, 79, 82, 83, 84, 85, 88, 91, 95, 99, 100, 103, 104, 106, 107, 116, 140, 145, 147, 148, 150, 165, 173, 175, 177, 179, 180, 192, 195, 197, 200, 214, 224, 225, 234, 242, 245, 246, 249, 260, 262, 268, 276, 278, 279, 285, 289, 293, 296, 310, 316, 318, 319, 321, 324, 331, 334, 340, 347, 359, 361, 365, 367, 371, 372, 375, 376, 384, 385, 399, 400, 401, 403, 417, 426, 430, 434, 436, 437, 439], "brand": [9, 53, 58, 71, 287], "refcount": [9, 32, 50, 61, 97, 331, 340, 442], "lvalu": [9, 276, 324], "differ": [9, 10, 13, 15, 20, 23, 24, 27, 32, 33, 34, 35, 41, 44, 55, 56, 57, 61, 62, 64, 70, 71, 73, 74, 76, 77, 78, 81, 82, 84, 85, 87, 88, 89, 90, 91, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 109, 114, 115, 116, 119, 120, 123, 125, 126, 127, 131, 132, 133, 144, 145, 147, 148, 149, 150, 151, 153, 156, 157, 159, 160, 161, 164, 165, 166, 172, 175, 180, 182, 184, 185, 191, 192, 194, 197, 200, 202, 203, 205, 212, 214, 215, 219, 225, 226, 231, 232, 234, 236, 238, 243, 245, 246, 247, 249, 250, 254, 255, 256, 257, 258, 259, 261, 262, 263, 265, 269, 270, 273, 275, 276, 277, 278, 279, 280, 282, 284, 285, 290, 295, 296, 298, 300, 301, 302, 303, 304, 310, 312, 313, 315, 317, 318, 319, 320, 321, 323, 324, 325, 327, 328, 330, 331, 332, 334, 337, 338, 340, 342, 343, 344, 345, 347, 350, 353, 358, 362, 363, 365, 366, 367, 371, 372, 377, 381, 383, 385, 386, 395, 397, 399, 400, 401, 402, 403, 404, 405, 407, 409, 410, 411, 415, 416, 417, 418, 419, 421, 424, 425, 426, 427, 428, 430, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 451, 452, 453, 454, 455, 456, 457, 458], "realloc": [9, 41, 52, 71, 166, 441, 455], "memoryerror": [9, 23, 53, 58, 62, 116, 175, 202, 372, 425, 453], "callabl": [10, 32, 36, 43, 56, 57, 61, 65, 66, 70, 71, 83, 85, 86, 90, 92, 93, 99, 104, 111, 114, 116, 120, 126, 130, 132, 133, 151, 156, 157, 160, 162, 165, 166, 170, 179, 180, 195, 196, 197, 202, 212, 213, 214, 224, 237, 238, 239, 242, 246, 255, 256, 257, 259, 269, 275, 276, 277, 279, 282, 295, 296, 307, 314, 315, 317, 324, 328, 331, 332, 337, 338, 343, 345, 349, 353, 355, 356, 365, 366, 367, 372, 375, 376, 378, 383, 388, 396, 402, 405, 407, 420, 425, 430, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458], "signatur": [10, 13, 17, 44, 56, 61, 69, 83, 91, 92, 97, 98, 99, 116, 120, 133, 149, 150, 151, 159, 170, 172, 202, 205, 214, 215, 224, 236, 246, 255, 256, 276, 282, 295, 314, 320, 321, 328, 331, 358, 361, 362, 363, 366, 367, 371, 388, 390, 394, 399, 403, 405, 415, 417, 443, 446, 447, 448, 449, 450, 451, 453, 454, 455, 457, 458], "slot": [10, 31, 44, 46, 47, 48, 56, 59, 66, 73, 74, 88, 91, 99, 128, 170, 180, 201, 215, 216, 238, 243, 269, 282, 298, 324, 363, 403, 405, 431, 437, 438, 439, 441, 442, 443, 445, 447, 448, 449, 452, 453, 454, 457, 458], "kwarg": [10, 56, 61, 83, 85, 88, 91, 98, 99, 110, 114, 116, 120, 133, 134, 135, 148, 150, 156, 157, 160, 166, 175, 214, 238, 241, 243, 250, 255, 256, 269, 275, 276, 277, 282, 289, 290, 307, 324, 325, 337, 340, 342, 343, 362, 363, 365, 366, 367, 375, 378, 403, 406, 416, 443, 448, 450, 452, 454, 455, 457], "made": [10, 11, 12, 30, 32, 34, 42, 56, 57, 61, 64, 70, 76, 78, 83, 84, 85, 87, 88, 92, 95, 98, 99, 101, 102, 107, 108, 114, 121, 124, 127, 133, 141, 148, 150, 156, 157, 159, 161, 165, 166, 172, 175, 180, 182, 185, 188, 189, 194, 197, 202, 212, 219, 221, 226, 231, 232, 236, 238, 243, 246, 255, 256, 257, 262, 265, 269, 277, 280, 282, 289, 290, 296, 300, 301, 302, 303, 304, 306, 310, 313, 314, 315, 316, 317, 318, 321, 323, 324, 328, 332, 337, 338, 340, 343, 347, 359, 366, 367, 370, 371, 374, 376, 378, 383, 385, 388, 394, 395, 396, 400, 401, 402, 403, 411, 413, 415, 418, 419, 425, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "similarli": [10, 28, 56, 57, 76, 83, 88, 93, 99, 102, 105, 114, 120, 131, 133, 148, 153, 170, 172, 179, 182, 209, 214, 231, 256, 259, 269, 277, 279, 282, 290, 298, 301, 318, 321, 324, 327, 328, 331, 345, 347, 359, 361, 363, 365, 386, 397, 411, 417, 437, 441, 442, 443, 444, 448, 451, 453, 454, 456, 458], "tp_new": [10, 59, 61, 73, 74, 97, 449], "tp_init": [10, 59, 61, 73, 74, 449], "pyobject_cal": [10, 55, 61, 71, 450, 458], "introduc": [10, 23, 32, 33, 44, 55, 71, 76, 78, 83, 84, 85, 88, 93, 97, 98, 99, 102, 108, 116, 120, 133, 172, 177, 202, 224, 232, 234, 238, 239, 257, 259, 262, 269, 276, 280, 282, 287, 290, 321, 324, 325, 327, 330, 331, 338, 347, 353, 361, 362, 363, 371, 389, 400, 402, 403, 404, 405, 407, 409, 410, 411, 414, 415, 416, 420, 424, 425, 430, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "pep": [10, 13, 23, 26, 30, 32, 33, 34, 44, 47, 55, 57, 60, 61, 62, 64, 69, 71, 73, 76, 78, 83, 84, 85, 86, 88, 93, 105, 108, 111, 116, 120, 123, 135, 144, 148, 150, 151, 153, 156, 159, 160, 164, 170, 180, 199, 202, 210, 214, 215, 216, 236, 238, 239, 243, 246, 253, 255, 262, 273, 277, 279, 282, 284, 293, 304, 306, 308, 310, 311, 314, 315, 316, 318, 320, 321, 324, 325, 328, 331, 332, 337, 340, 344, 355, 362, 375, 378, 383, 398, 400, 402, 403, 404, 405, 406, 407, 410, 411, 416, 425, 430, 431, 432, 436, 437, 450, 458], "590": [10, 447, 448, 450, 458], "rule": [10, 18, 23, 28, 32, 34, 59, 61, 76, 78, 85, 88, 91, 92, 93, 97, 99, 101, 102, 103, 105, 114, 116, 123, 144, 151, 165, 167, 170, 172, 175, 179, 183, 185, 191, 192, 194, 196, 197, 198, 210, 214, 216, 220, 225, 227, 229, 232, 233, 236, 247, 254, 262, 276, 279, 301, 324, 325, 327, 328, 338, 343, 344, 363, 366, 367, 371, 373, 376, 386, 390, 402, 403, 404, 405, 406, 407, 409, 410, 411, 415, 423, 437, 438, 440, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452], "thumb": [10, 61, 97, 101, 123, 179, 353], "hard": [10, 32, 41, 70, 71, 74, 76, 85, 88, 90, 91, 93, 97, 99, 101, 102, 103, 153, 157, 164, 165, 166, 172, 179, 182, 191, 214, 255, 256, 276, 277, 279, 280, 290, 301, 304, 308, 320, 321, 328, 337, 340, 363, 367, 436, 437, 451, 453, 456, 457], "addition": [10, 32, 61, 99, 102, 114, 117, 120, 212, 258, 269, 276, 277, 287, 289, 295, 328, 340, 347, 363, 366, 401, 437, 444, 445, 448, 449, 452, 454, 455, 456, 457, 458], "moreov": [10, 32, 33, 34, 214, 225, 259, 361, 363, 417, 444, 445, 447, 448, 450], "behav": [10, 23, 32, 33, 44, 61, 62, 74, 76, 83, 87, 88, 92, 97, 99, 102, 105, 115, 153, 157, 159, 160, 164, 165, 172, 173, 175, 177, 214, 215, 233, 245, 246, 259, 265, 277, 302, 303, 315, 317, 318, 319, 321, 324, 328, 331, 335, 338, 342, 347, 363, 365, 366, 367, 386, 388, 402, 403, 404, 405, 410, 411, 413, 415, 416, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 448, 449, 452, 453, 456, 457], "achiev": [10, 44, 61, 70, 76, 83, 88, 93, 97, 99, 101, 114, 148, 157, 165, 215, 225, 234, 249, 255, 269, 302, 321, 323, 331, 340, 343, 345, 347, 352, 365, 366, 367, 372, 375, 377, 388, 403, 410, 411, 437, 439, 440, 442, 453, 454], "pyvectorcall_cal": [10, 55, 61, 449], "bear": [10, 62, 172, 232, 238, 269, 324, 331, 448], "repeat": [10, 52, 56, 61, 77, 85, 93, 103, 114, 140, 145, 150, 151, 165, 166, 172, 186, 203, 214, 224, 225, 226, 236, 249, 269, 276, 280, 284, 290, 300, 301, 318, 321, 324, 325, 327, 345, 357, 358, 361, 363, 365, 366, 372, 384, 402, 403, 418, 419, 424, 430, 439, 440, 441, 443, 444, 451, 452, 453, 454, 455], "py_tpflags_have_vectorcal": [10, 61, 449], "__call__": [10, 61, 83, 85, 91, 114, 149, 150, 151, 192, 200, 214, 269, 275, 337, 363, 366, 367, 378, 403, 405, 449, 455], "reassign": [10, 41, 61, 74, 158, 200, 289, 328, 363, 378, 449, 457], "earlier": [10, 32, 61, 62, 70, 82, 83, 84, 85, 88, 90, 93, 98, 99, 101, 102, 107, 109, 110, 120, 166, 172, 182, 199, 214, 219, 234, 236, 246, 255, 257, 262, 276, 277, 282, 301, 313, 320, 321, 328, 331, 337, 347, 357, 363, 365, 366, 371, 372, 375, 376, 378, 386, 390, 399, 403, 405, 407, 410, 417, 422, 424, 428, 430, 436, 437, 438, 439, 440, 441, 442, 443, 444, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458], "slower": [10, 82, 83, 102, 148, 215, 236, 246, 258, 269, 300, 312, 361, 419, 427, 440, 441, 443, 445, 449, 456, 457, 458], "calle": [10, 83, 332, 357, 416], "anywai": [10, 61, 74, 76, 87, 165, 172, 214, 232, 236, 247, 365, 366, 417, 438, 439, 449], "enabl": [10, 11, 28, 33, 34, 47, 55, 61, 73, 74, 78, 88, 90, 92, 102, 106, 108, 114, 116, 118, 119, 123, 124, 127, 133, 135, 137, 145, 157, 159, 165, 166, 174, 175, 177, 182, 186, 202, 203, 212, 214, 215, 216, 219, 231, 234, 236, 237, 238, 243, 246, 254, 256, 257, 269, 277, 278, 279, 280, 282, 287, 288, 290, 293, 296, 300, 301, 302, 315, 316, 318, 320, 321, 324, 325, 328, 331, 333, 340, 345, 347, 349, 353, 357, 363, 365, 367, 375, 376, 383, 387, 389, 390, 395, 397, 402, 403, 404, 411, 414, 422, 427, 430, 431, 436, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 451, 452, 454, 455, 456, 457, 458], "tp_vectorcall_offset": [10, 56, 59, 61, 73], "vectorcallfunc": [10, 27, 55, 61, 73, 449], "appear": [10, 25, 32, 33, 44, 56, 57, 64, 73, 74, 76, 82, 84, 85, 87, 88, 90, 92, 93, 96, 98, 99, 100, 101, 102, 114, 116, 127, 148, 153, 157, 164, 165, 166, 170, 175, 179, 180, 182, 185, 188, 191, 192, 194, 202, 214, 216, 219, 224, 236, 237, 238, 243, 247, 254, 256, 257, 259, 269, 277, 280, 290, 296, 299, 301, 313, 315, 317, 318, 320, 324, 325, 337, 342, 347, 353, 363, 366, 367, 372, 376, 378, 383, 385, 388, 391, 395, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 413, 416, 417, 423, 424, 430, 436, 438, 440, 442, 443, 444, 446, 447, 448, 449, 451, 453, 454, 455, 456, 457], "typedef": [10, 11, 13, 15, 22, 27, 28, 31, 32, 48, 56, 57, 59, 62, 66, 73, 74, 88], "nargsf": 10, "kwname": [10, 56, 97], "py_vectorcall_arguments_offset": [10, 55, 449], "pyvectorcall_narg": [10, 55, 449], "uniqu": [10, 32, 71, 73, 78, 88, 91, 93, 95, 98, 101, 105, 110, 114, 150, 165, 172, 173, 179, 192, 194, 198, 200, 201, 214, 217, 225, 243, 247, 249, 250, 259, 270, 277, 282, 287, 296, 300, 320, 321, 323, 324, 332, 334, 343, 350, 353, 363, 365, 366, 368, 371, 374, 401, 402, 403, 407, 415, 417, 431, 436, 441, 442, 444, 446, 449, 451, 456, 458], "temporarili": [10, 23, 34, 71, 85, 88, 99, 106, 143, 159, 175, 182, 216, 219, 238, 254, 255, 298, 314, 324, 328, 340, 345, 353, 359, 365, 366, 367, 402, 436, 443, 449, 455, 456], "vector": [10, 249, 262, 328, 345, 361, 363, 384, 431, 449], "restor": [10, 13, 17, 22, 23, 27, 32, 34, 61, 73, 88, 90, 99, 126, 148, 159, 160, 161, 166, 175, 179, 180, 232, 236, 243, 246, 254, 276, 282, 300, 301, 302, 306, 320, 328, 331, 337, 339, 340, 343, 353, 361, 363, 365, 366, 367, 376, 381, 403, 437, 439, 440, 442, 443, 448, 449, 453, 456, 458], "pyobject_vectorcallmethod": [10, 55, 449, 450], "whenev": [10, 23, 50, 59, 61, 64, 71, 76, 83, 88, 91, 92, 93, 98, 99, 114, 127, 128, 130, 166, 175, 179, 196, 214, 216, 236, 243, 246, 255, 257, 259, 269, 276, 279, 282, 296, 298, 310, 315, 320, 321, 324, 331, 340, 353, 361, 365, 366, 388, 400, 403, 407, 415, 439, 440, 442, 443, 444, 448, 449, 451, 452, 453, 454, 455, 456], "cheapli": 10, "encourag": [10, 32, 56, 71, 75, 86, 101, 202, 242, 276, 310, 311, 313, 332, 363, 381, 386, 390, 409, 414, 431, 437, 438, 445, 448, 457], "onward": [10, 55, 93, 99, 175, 210, 243, 315, 320, 324], "prepend": [10, 33, 85, 88, 91, 99, 148, 153, 167, 191, 215, 249, 257, 259, 276, 294, 309, 313, 314, 331, 335, 342, 375, 388, 396, 430, 436, 448, 449], "pyobject_vectorcal": [10, 55, 100, 449, 450], "worri": [10, 34, 71, 73, 88, 90, 98, 101, 105, 172, 183, 276, 301, 327, 365, 425, 439, 444, 452], "py_enterrecursivecal": [10, 23, 55, 458], "py_leaverecursivecal": [10, 23, 55, 458], "futur": [10, 22, 32, 34, 55, 59, 61, 66, 75, 82, 85, 88, 97, 98, 101, 102, 109, 114, 116, 117, 119, 121, 124, 126, 127, 132, 133, 145, 149, 154, 155, 157, 158, 164, 172, 182, 186, 192, 194, 196, 197, 199, 202, 214, 216, 221, 223, 225, 234, 236, 238, 242, 243, 245, 255, 256, 269, 270, 276, 277, 279, 290, 297, 301, 307, 310, 315, 318, 320, 321, 323, 331, 332, 336, 340, 343, 344, 362, 363, 365, 372, 374, 376, 388, 399, 403, 405, 410, 415, 416, 421, 425, 436, 437, 438, 439, 440, 441, 442, 443, 447, 452, 453, 457], "pyvectorcall_funct": [10, 450], "intend": [10, 23, 30, 32, 33, 41, 44, 55, 59, 62, 70, 71, 72, 73, 76, 82, 85, 87, 88, 93, 98, 99, 101, 102, 106, 109, 110, 120, 133, 148, 150, 159, 161, 173, 180, 182, 190, 197, 202, 214, 215, 229, 233, 234, 236, 239, 243, 246, 247, 255, 257, 258, 259, 261, 262, 273, 277, 282, 284, 285, 289, 316, 318, 321, 323, 324, 325, 327, 328, 331, 336, 337, 343, 353, 357, 361, 363, 365, 366, 371, 372, 376, 383, 386, 397, 400, 402, 403, 405, 409, 410, 411, 416, 417, 418, 419, 425, 430, 436, 437, 438, 439, 440, 441, 442, 443, 444, 448, 449, 450, 453, 454, 455, 456, 457], "put": [10, 20, 33, 34, 47, 71, 73, 74, 76, 77, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 97, 99, 102, 103, 109, 116, 128, 132, 148, 156, 157, 164, 165, 180, 182, 190, 192, 197, 204, 216, 219, 221, 230, 231, 236, 238, 256, 269, 275, 282, 283, 298, 300, 315, 316, 317, 318, 321, 324, 334, 338, 342, 343, 347, 360, 366, 367, 372, 400, 407, 413, 416, 423, 424, 425, 428, 435, 436, 438, 439, 440, 441, 442, 443, 444, 448, 450, 451, 454], "fall": [10, 15, 22, 25, 38, 41, 61, 62, 82, 93, 98, 104, 151, 166, 170, 172, 175, 185, 194, 202, 214, 218, 224, 256, 273, 275, 277, 307, 321, 323, 324, 325, 337, 371, 372, 400, 401, 403, 407, 410, 416, 423, 437, 439, 440, 442, 443, 444, 445, 447, 449, 451, 453, 455, 456, 458], "littl": [10, 25, 30, 62, 76, 84, 88, 93, 98, 99, 102, 103, 105, 139, 148, 165, 166, 167, 175, 179, 182, 219, 232, 234, 256, 269, 276, 301, 315, 318, 324, 327, 331, 345, 359, 361, 367, 374, 381, 401, 415, 416, 418, 419, 427, 437, 438, 439, 443, 447, 448, 451, 452, 453], "pick": [10, 74, 83, 85, 99, 106, 150, 234, 239, 262, 276, 280, 359, 365, 396, 437, 442, 448], "best": [10, 30, 34, 53, 62, 66, 78, 82, 85, 88, 90, 93, 94, 97, 98, 99, 101, 125, 172, 175, 177, 179, 182, 183, 184, 194, 202, 212, 214, 215, 219, 223, 224, 225, 231, 236, 237, 243, 255, 258, 269, 276, 277, 287, 289, 290, 313, 317, 318, 320, 324, 331, 337, 338, 345, 347, 361, 363, 366, 379, 400, 403, 407, 414, 416, 417, 419, 426, 431, 434, 436, 437, 441, 442, 445, 447, 448, 449, 451, 453, 454, 455, 458], "fit": [10, 34, 71, 76, 96, 103, 114, 117, 165, 166, 167, 175, 180, 182, 184, 204, 212, 225, 226, 238, 247, 257, 276, 289, 290, 300, 318, 323, 327, 342, 347, 361, 365, 372, 376, 385, 396, 399, 401, 427, 440, 441, 444, 447, 448, 449, 451, 452, 453, 458], "summar": [10, 84, 91, 101, 105, 175, 182, 246, 247, 312, 323, 324, 363, 365, 401, 402, 405, 407, 441, 451], "document": [10, 18, 20, 23, 24, 28, 31, 34, 41, 44, 49, 53, 55, 56, 57, 59, 61, 62, 67, 69, 70, 71, 72, 73, 74, 75, 77, 79, 83, 85, 86, 87, 88, 90, 91, 94, 96, 97, 98, 99, 101, 102, 104, 105, 106, 107, 108, 110, 114, 115, 116, 118, 120, 122, 124, 127, 130, 131, 133, 135, 137, 138, 141, 143, 145, 150, 156, 157, 159, 165, 166, 170, 171, 172, 176, 179, 182, 183, 184, 185, 187, 191, 192, 194, 196, 197, 202, 209, 210, 213, 214, 215, 219, 224, 230, 232, 236, 237, 238, 239, 242, 243, 246, 247, 250, 254, 255, 256, 257, 259, 260, 268, 269, 271, 274, 276, 277, 278, 280, 286, 288, 289, 296, 304, 312, 313, 317, 318, 319, 320, 321, 322, 324, 328, 330, 331, 333, 337, 339, 340, 341, 342, 343, 344, 346, 347, 353, 356, 361, 362, 363, 365, 371, 372, 375, 376, 378, 379, 381, 384, 386, 387, 389, 390, 391, 392, 394, 397, 398, 399, 400, 402, 403, 405, 407, 409, 410, 411, 413, 414, 418, 420, 421, 422, 425, 426, 428, 429, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 445, 446, 447, 448, 449, 450, 454, 455, 458], "pyobject_callnoarg": [10, 55, 73, 450, 458], "pyobject_callonearg": [10, 450, 458], "pyobject_callobject": [10, 55, 70, 71, 77], "pyobject_callfunct": [10, 55, 442, 450, 457], "pyobject_callmethod": [10, 38, 53, 55, 77, 447, 449, 450], "pyobject_callfunctionobjarg": [10, 55], "variad": [10, 363, 416], "pyobject_callmethodobjarg": [10, 55], "pyobject_callmethodnoarg": [10, 450], "pyobject_callmethodonearg": [10, 450], "pyobject_vectorcalldict": [10, 450], "arg1": [10, 73, 83, 93, 95, 111, 214, 276, 277, 366, 403, 439, 440, 442], "arg2": [10, 73, 83, 93, 95, 111, 214, 276, 366, 403, 439, 440, 442], "kwdict": [10, 71], "readi": [10, 32, 62, 78, 90, 98, 99, 101, 126, 127, 130, 137, 143, 160, 165, 175, 179, 221, 231, 234, 246, 257, 269, 310, 311, 318, 321, 344, 358, 366, 391, 392, 420, 437, 440, 451, 452, 454], "py_tpflags_method_descriptor": [10, 61], "featur": [10, 23, 32, 33, 47, 49, 52, 59, 61, 64, 72, 73, 76, 77, 78, 82, 83, 84, 85, 88, 90, 91, 92, 93, 98, 99, 102, 105, 108, 112, 114, 136, 140, 144, 148, 150, 156, 157, 162, 165, 166, 168, 169, 170, 172, 182, 183, 197, 199, 202, 214, 215, 225, 232, 236, 238, 245, 250, 255, 258, 269, 276, 277, 280, 282, 284, 301, 306, 314, 317, 320, 321, 323, 324, 328, 331, 337, 340, 343, 347, 357, 361, 365, 366, 368, 372, 376, 378, 383, 384, 385, 386, 389, 390, 391, 397, 403, 405, 407, 409, 410, 411, 413, 414, 415, 416, 420, 422, 423, 424, 425, 426, 427, 429, 430, 431, 434, 435, 436, 437, 438, 439, 440, 441, 443, 445, 446, 451], "unbound": [10, 43, 61, 99, 110, 150, 175, 180, 214, 215, 243, 256, 298, 340, 343, 361, 362, 403, 404, 407, 411, 439, 441, 445, 447, 454, 456], "full": [10, 11, 28, 32, 33, 34, 55, 61, 62, 66, 71, 74, 76, 78, 82, 85, 87, 88, 91, 98, 99, 102, 103, 106, 117, 118, 128, 133, 140, 141, 143, 147, 148, 150, 151, 153, 157, 158, 164, 165, 169, 172, 175, 179, 180, 182, 186, 189, 190, 201, 202, 208, 211, 216, 232, 236, 239, 243, 247, 249, 255, 257, 262, 265, 267, 269, 270, 276, 277, 279, 280, 284, 296, 298, 301, 313, 314, 315, 317, 318, 319, 321, 323, 324, 327, 328, 331, 337, 340, 344, 347, 361, 362, 363, 365, 366, 371, 372, 375, 378, 379, 383, 386, 388, 394, 397, 402, 403, 404, 407, 408, 411, 415, 417, 419, 421, 423, 424, 425, 427, 430, 431, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "pycallable_check": [10, 55, 70, 71], "pycapsul": [11, 71, 444, 446, 447, 451], "opaqu": [11, 13, 26, 32, 34, 38, 59, 61, 111, 161, 246, 296, 311, 322, 388, 421, 438, 447, 448, 449, 451, 453, 456, 457, 458], "often": [11, 13, 32, 34, 56, 62, 71, 73, 74, 76, 78, 79, 82, 83, 85, 88, 90, 91, 93, 96, 99, 102, 104, 105, 106, 107, 109, 114, 116, 117, 139, 145, 150, 156, 161, 164, 165, 172, 173, 175, 179, 182, 183, 187, 202, 214, 216, 219, 222, 225, 242, 243, 249, 276, 279, 282, 290, 291, 293, 300, 313, 318, 320, 321, 323, 324, 326, 328, 333, 340, 343, 344, 347, 363, 366, 367, 372, 389, 399, 403, 405, 409, 410, 411, 415, 417, 418, 419, 421, 423, 425, 426, 428, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 451, 454, 457], "dynam": [11, 22, 25, 30, 41, 44, 50, 61, 64, 66, 70, 71, 72, 75, 76, 77, 78, 82, 83, 85, 98, 99, 100, 103, 108, 111, 171, 179, 192, 214, 215, 236, 238, 242, 243, 270, 277, 303, 317, 318, 320, 324, 325, 331, 347, 353, 361, 363, 366, 367, 383, 398, 403, 405, 407, 411, 415, 420, 431, 437, 439, 440, 442, 443, 448, 451, 452, 453, 456, 457], "load": [11, 14, 30, 32, 33, 34, 40, 44, 55, 56, 57, 70, 71, 72, 75, 77, 82, 83, 84, 85, 88, 91, 92, 95, 97, 98, 99, 103, 106, 116, 135, 145, 156, 157, 173, 180, 182, 202, 212, 214, 232, 233, 236, 238, 239, 241, 249, 250, 255, 256, 261, 263, 266, 270, 277, 280, 282, 284, 286, 289, 290, 293, 296, 302, 312, 316, 320, 321, 324, 331, 333, 340, 344, 347, 356, 359, 361, 362, 381, 385, 388, 389, 394, 395, 396, 398, 399, 400, 402, 403, 406, 411, 421, 425, 427, 430, 436, 437, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458], "pycapsule_destructor": [11, 55], "destructor": [11, 32, 55, 61, 73, 74, 76, 82, 85, 110, 177, 277, 298, 328, 331, 403, 411, 430, 446, 451, 455, 457], "pycapsule_new": [11, 55, 71], "pycapsule_checkexact": 11, "encapsul": [11, 78, 82, 83, 86, 91, 97, 109, 145, 156, 191, 197, 237, 246, 272, 287, 317, 331, 385, 389, 391, 394, 402, 407, 411, 441, 442, 443, 444, 453], "outliv": [11, 270, 402], "permit": [11, 27, 71, 86, 88, 96, 116, 175, 199, 201, 210, 214, 234, 243, 245, 247, 250, 253, 259, 269, 270, 277, 282, 290, 301, 324, 328, 333, 366, 385, 394, 401, 405, 406, 410, 411, 430, 442, 443, 449, 452, 453, 454, 457], "attribut": [11, 21, 22, 23, 24, 26, 27, 30, 32, 34, 44, 47, 54, 58, 59, 60, 61, 77, 85, 86, 88, 93, 98, 102, 104, 106, 108, 109, 110, 111, 114, 115, 116, 119, 120, 123, 127, 130, 131, 135, 137, 141, 142, 143, 145, 148, 149, 150, 157, 158, 162, 164, 165, 166, 170, 172, 175, 177, 179, 180, 182, 184, 185, 186, 189, 192, 194, 196, 197, 200, 202, 204, 205, 212, 214, 215, 217, 221, 222, 223, 226, 227, 229, 231, 232, 233, 234, 236, 237, 238, 239, 246, 247, 250, 256, 257, 258, 259, 269, 270, 272, 275, 279, 282, 284, 285, 286, 287, 292, 294, 295, 296, 301, 303, 307, 310, 313, 314, 315, 316, 317, 318, 319, 321, 322, 325, 327, 328, 332, 337, 338, 339, 340, 342, 343, 344, 345, 347, 349, 350, 352, 356, 358, 359, 360, 361, 362, 363, 365, 370, 371, 372, 374, 375, 376, 378, 381, 383, 385, 386, 388, 389, 390, 392, 394, 395, 397, 398, 399, 400, 401, 402, 404, 410, 411, 415, 416, 417, 418, 422, 425, 426, 427, 431, 436, 437, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 457, 458], "modulenam": [11, 69, 71, 77, 83, 95, 425], "attributenam": [11, 71], "pycapsule_import": [11, 55, 71], "pycapsule_getpoint": [11, 55, 444], "compar": [11, 23, 32, 33, 47, 61, 62, 70, 73, 76, 82, 85, 87, 90, 92, 96, 98, 99, 101, 102, 103, 104, 107, 116, 120, 140, 150, 156, 165, 170, 172, 175, 179, 180, 182, 184, 185, 186, 191, 203, 205, 214, 215, 225, 226, 247, 250, 254, 255, 257, 259, 261, 269, 270, 276, 279, 280, 290, 293, 296, 298, 300, 308, 310, 320, 321, 322, 324, 326, 331, 340, 345, 347, 359, 363, 364, 365, 366, 367, 374, 381, 388, 400, 402, 403, 405, 407, 410, 415, 416, 419, 422, 427, 430, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "strcmp": [11, 18, 73], "pycapsule_getdestructor": [11, 55], "legal": [11, 75, 88, 90, 105, 214, 230, 236, 246, 280, 340, 344, 347, 353, 363, 395, 401, 405, 410, 416, 417, 427, 438, 439, 440, 442, 443, 444], "somewhat": [11, 23, 76, 85, 88, 97, 99, 165, 172, 193, 215, 236, 254, 276, 277, 318, 338, 347, 400, 423, 424, 425, 437, 442, 445, 447, 456, 457], "ambigu": [11, 34, 66, 76, 85, 88, 93, 102, 114, 172, 242, 247, 252, 276, 280, 301, 324, 400, 402, 405, 409, 410, 416, 437, 443, 447, 448, 449, 450, 453, 455, 456, 457, 458], "pycapsule_isvalid": [11, 55, 444], "pyerr_occur": [11, 22, 23, 25, 34, 35, 38, 40, 47, 55, 62, 70, 71, 88, 406, 450], "disambigu": [11, 38, 172, 405, 410], "pycapsule_getcontext": [11, 55], "context": [11, 16, 23, 31, 32, 41, 44, 47, 52, 62, 64, 66, 71, 76, 77, 83, 85, 88, 93, 97, 103, 105, 114, 116, 117, 118, 120, 122, 123, 126, 133, 150, 154, 156, 157, 158, 172, 173, 177, 179, 180, 207, 212, 214, 219, 224, 225, 231, 238, 239, 240, 242, 243, 246, 250, 255, 256, 257, 258, 259, 265, 277, 280, 282, 287, 289, 290, 296, 297, 298, 301, 303, 304, 310, 311, 312, 317, 318, 319, 323, 325, 328, 331, 337, 338, 340, 343, 354, 363, 365, 366, 372, 375, 378, 381, 385, 387, 388, 389, 390, 394, 397, 402, 404, 405, 406, 410, 411, 413, 417, 418, 431, 437, 444, 445, 446, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458], "pycapsule_getnam": [11, 55], "no_block": 11, "accessor": [11, 83, 104, 214, 386, 442, 457], "pycapsule_get": 11, "nonzero": [11, 23, 32, 57, 71, 102, 110, 175, 180, 214, 257, 262, 265, 268, 269, 283, 293, 300, 301, 324, 331, 339, 343, 344, 403, 410, 413, 430, 443, 457], "pycapsule_setcontext": [11, 55], "pycapsule_setdestructor": [11, 55], "pycapsule_setnam": [11, 55], "pycapsule_setpoint": [11, 55], "multipl": [12, 28, 30, 32, 33, 44, 46, 55, 61, 62, 66, 69, 71, 73, 74, 76, 78, 82, 85, 87, 88, 90, 92, 93, 101, 102, 103, 104, 105, 106, 110, 111, 114, 115, 116, 117, 118, 120, 123, 129, 131, 132, 136, 142, 148, 150, 153, 156, 157, 159, 164, 166, 170, 172, 175, 178, 182, 188, 194, 198, 202, 208, 210, 212, 214, 215, 217, 219, 221, 223, 224, 225, 234, 236, 238, 239, 241, 242, 243, 246, 249, 250, 255, 256, 258, 259, 262, 263, 265, 268, 269, 270, 275, 276, 277, 279, 280, 282, 283, 284, 285, 289, 296, 298, 300, 301, 302, 311, 312, 313, 317, 318, 319, 320, 321, 322, 323, 324, 327, 330, 331, 332, 335, 337, 340, 343, 345, 347, 353, 354, 357, 361, 363, 365, 374, 375, 376, 378, 383, 384, 388, 390, 394, 402, 403, 404, 405, 406, 407, 410, 411, 416, 417, 419, 424, 427, 428, 430, 431, 436, 437, 440, 441, 442, 443, 444, 446, 447, 448, 449, 451, 452, 453, 455, 456, 457, 458], "scope": [12, 34, 50, 76, 83, 85, 88, 92, 96, 98, 99, 108, 109, 116, 137, 143, 150, 180, 214, 243, 247, 280, 289, 296, 302, 313, 318, 321, 330, 331, 347, 363, 366, 367, 375, 386, 388, 390, 402, 403, 405, 407, 411, 416, 425, 437, 443, 445, 449, 451, 452, 455, 456, 457, 458], "stack": [12, 23, 32, 34, 57, 66, 71, 73, 76, 88, 92, 98, 100, 110, 112, 116, 120, 129, 133, 134, 137, 147, 150, 159, 161, 166, 173, 174, 180, 182, 202, 203, 214, 215, 236, 242, 245, 255, 257, 280, 297, 298, 301, 304, 313, 315, 318, 321, 322, 324, 331, 332, 343, 365, 366, 367, 376, 402, 403, 404, 405, 410, 411, 413, 418, 430, 437, 438, 441, 442, 443, 444, 448, 449, 451, 452, 453, 454, 456, 457, 458], "frame": [12, 13, 16, 19, 23, 29, 31, 32, 34, 47, 51, 64, 66, 76, 82, 92, 95, 100, 133, 135, 136, 137, 161, 166, 174, 180, 202, 203, 236, 243, 250, 255, 280, 315, 318, 321, 324, 331, 332, 347, 352, 353, 358, 362, 376, 377, 383, 402, 404, 430, 431, 438, 440, 441, 442, 444, 447, 449, 452, 453, 454, 456, 458], "outer": [12, 26, 83, 85, 133, 159, 175, 180, 196, 215, 226, 229, 243, 331, 402, 403, 404, 405, 410, 411, 415, 418, 445, 448, 449, 451, 452, 458], "elsewher": [12, 102, 109, 133, 147, 157, 269, 306, 363, 371, 385, 402, 407, 410, 447, 448, 449, 453], "pycellobject": 12, "pycell_typ": 12, "pycell_check": 12, "ob": [12, 19, 20, 29, 54, 65, 378, 448], "pycell_new": 12, "pycell_get": 12, "pycell_set": [12, 447], "No": [12, 30, 32, 33, 44, 57, 62, 71, 73, 76, 78, 83, 88, 91, 95, 98, 99, 102, 105, 106, 108, 114, 120, 127, 131, 133, 148, 151, 157, 159, 164, 170, 172, 175, 180, 182, 185, 189, 194, 201, 219, 220, 231, 234, 236, 238, 243, 246, 255, 258, 269, 277, 278, 279, 280, 289, 296, 300, 301, 307, 316, 317, 320, 323, 324, 327, 328, 332, 337, 343, 347, 351, 353, 361, 363, 365, 381, 385, 405, 406, 416, 418, 419, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452], "low": [13, 24, 34, 37, 55, 58, 61, 62, 66, 73, 78, 82, 84, 95, 98, 102, 103, 105, 115, 119, 120, 123, 127, 129, 130, 131, 133, 139, 143, 150, 154, 157, 159, 166, 167, 180, 202, 212, 214, 230, 242, 246, 248, 255, 270, 277, 279, 290, 298, 300, 301, 310, 311, 312, 315, 317, 320, 321, 323, 324, 331, 335, 347, 360, 363, 376, 378, 388, 390, 399, 403, 431, 439, 440, 442, 443, 444, 447, 450, 452, 454, 455, 457], "execut": [13, 22, 23, 24, 26, 27, 32, 33, 34, 44, 47, 49, 50, 51, 57, 64, 66, 70, 71, 73, 74, 75, 76, 83, 85, 87, 88, 91, 93, 95, 99, 100, 101, 102, 105, 108, 109, 110, 114, 116, 117, 118, 119, 122, 123, 127, 129, 131, 133, 134, 135, 137, 143, 145, 147, 148, 150, 153, 156, 159, 160, 165, 174, 176, 180, 181, 190, 202, 214, 215, 223, 225, 234, 237, 238, 242, 243, 246, 254, 255, 256, 257, 267, 269, 270, 276, 277, 278, 279, 280, 282, 283, 285, 290, 291, 295, 297, 302, 304, 307, 310, 312, 313, 314, 316, 318, 320, 322, 324, 326, 327, 328, 331, 333, 337, 338, 343, 344, 347, 349, 355, 363, 365, 366, 367, 372, 374, 375, 376, 379, 381, 383, 395, 402, 405, 406, 407, 408, 411, 412, 415, 416, 418, 421, 422, 423, 424, 426, 430, 431, 434, 435, 437, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "hasn": [13, 34, 77, 78, 82, 83, 88, 127, 129, 133, 156, 179, 221, 280, 296, 316, 321, 335, 366, 367, 437, 438, 442, 443, 445, 454, 456], "pycodeobject": [13, 26, 448], "subject": [13, 38, 44, 53, 59, 61, 73, 82, 93, 98, 99, 106, 116, 157, 172, 180, 182, 185, 189, 191, 192, 194, 232, 236, 245, 250, 255, 256, 257, 259, 277, 289, 290, 300, 308, 312, 318, 321, 340, 344, 363, 401, 402, 403, 406, 410, 415, 416, 435, 442, 447, 448, 449, 453], "pycode_typ": 13, "pycode_check": 13, "co": [13, 30, 56, 64, 74, 114, 144, 156, 166, 175, 210, 262, 282, 318, 332, 340, 361, 426, 440, 441, 448, 451, 456, 457], "pycode_getnumfre": 13, "pyunstable_code_new": [13, 449], "argcount": [13, 64, 135, 362, 457], "kwonlyargcount": [13, 135, 362], "nlocal": [13, 135, 362], "stacksiz": [13, 135, 362], "varnam": 13, "freevar": 13, "cellvar": [13, 214], "filenam": [13, 23, 32, 33, 44, 57, 64, 66, 69, 75, 82, 83, 88, 93, 95, 98, 99, 102, 114, 116, 135, 137, 142, 145, 147, 148, 149, 150, 153, 157, 159, 164, 165, 173, 178, 179, 182, 185, 186, 189, 190, 194, 202, 203, 207, 208, 212, 214, 219, 220, 223, 232, 236, 238, 242, 243, 253, 255, 256, 257, 258, 266, 269, 271, 272, 276, 277, 278, 279, 280, 282, 284, 290, 291, 293, 301, 302, 312, 313, 314, 320, 328, 330, 331, 336, 337, 338, 340, 347, 355, 358, 359, 361, 362, 365, 367, 370, 372, 376, 379, 381, 382, 383, 386, 387, 388, 389, 396, 397, 403, 411, 413, 421, 426, 427, 430, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 457, 458], "qualnam": [13, 19, 27, 29, 92, 98, 186, 200, 256], "firstlineno": 13, "linet": 13, "exceptiont": 13, "unstabl": [13, 23, 26, 28, 38, 49, 59, 73, 175, 449, 457], "warn": [13, 26, 27, 28, 32, 33, 34, 38, 49, 50, 55, 56, 57, 59, 66, 74, 76, 83, 85, 88, 95, 98, 99, 101, 103, 119, 120, 123, 129, 133, 170, 176, 177, 218, 238, 242, 246, 256, 257, 268, 269, 277, 290, 293, 297, 301, 315, 320, 321, 328, 331, 337, 347, 351, 361, 363, 365, 383, 389, 390, 391, 403, 404, 407, 410, 416, 425, 426, 427, 430, 431, 437, 439, 440, 441, 442, 443, 445, 446, 447, 449, 450, 451, 453, 454, 457, 458], "minor": [13, 23, 26, 28, 32, 38, 49, 55, 59, 61, 64, 75, 76, 77, 78, 82, 90, 99, 101, 106, 116, 150, 166, 192, 195, 277, 285, 295, 331, 334, 390, 427, 431, 436, 438, 439, 440, 441, 442, 444, 446, 447, 448, 449, 451, 453, 454, 455, 456, 457], "dummi": [13, 71, 99, 109, 165, 179, 219, 246, 277, 321, 337, 340, 343, 361, 383, 455], "pycode_newempti": [13, 444], "definit": [13, 30, 32, 34, 38, 44, 55, 56, 57, 62, 66, 71, 72, 73, 74, 83, 85, 86, 88, 90, 92, 96, 97, 99, 102, 111, 114, 136, 137, 143, 148, 151, 159, 165, 166, 170, 172, 200, 214, 215, 219, 221, 227, 236, 238, 239, 242, 243, 255, 257, 260, 269, 270, 273, 276, 282, 290, 294, 295, 297, 306, 317, 320, 324, 325, 331, 342, 344, 354, 361, 362, 363, 364, 365, 372, 374, 378, 384, 385, 386, 389, 401, 403, 404, 405, 406, 407, 409, 410, 411, 416, 420, 424, 425, 428, 438, 439, 440, 441, 442, 443, 444, 445, 448, 451, 452, 453, 454, 456, 457, 458], "bytecod": [13, 30, 32, 34, 64, 66, 82, 83, 84, 85, 93, 95, 100, 102, 153, 176, 214, 238, 242, 243, 252, 283, 293, 306, 315, 330, 331, 359, 403, 430, 431, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 450, 451, 452, 453, 454], "bind": [13, 43, 56, 59, 76, 83, 85, 91, 99, 103, 120, 135, 159, 161, 166, 182, 212, 214, 219, 230, 234, 243, 254, 256, 278, 296, 302, 311, 317, 318, 319, 321, 330, 331, 340, 349, 353, 361, 384, 401, 402, 403, 405, 407, 409, 411, 415, 416, 434, 437, 438, 439, 441, 442, 443, 447, 452, 453, 454, 456], "inter": [13, 179, 245, 248, 315, 363, 427, 451], "subtl": [13, 23, 61, 71, 76, 125, 164, 182, 204, 273, 276, 290, 403, 404, 424, 453], "incorrect": [13, 99, 102, 147, 173, 182, 202, 214, 233, 236, 255, 259, 276, 277, 344, 363, 365, 367, 386, 397, 406, 438, 439, 440, 442, 445, 447, 449, 452, 453, 457, 458], "vm": [13, 61, 82, 180, 276, 304, 332, 452, 453], "crash": [13, 32, 34, 42, 55, 61, 71, 73, 97, 116, 134, 165, 173, 177, 203, 214, 236, 238, 259, 269, 276, 280, 282, 331, 340, 431, 437, 442, 443, 449, 452, 453, 455], "extrem": [13, 76, 93, 97, 99, 105, 196, 250, 256, 277, 282, 300, 323, 366, 385, 397, 405], "care": [13, 23, 32, 34, 61, 64, 71, 73, 74, 82, 83, 88, 91, 92, 97, 98, 99, 101, 102, 105, 106, 109, 114, 116, 129, 137, 150, 159, 165, 170, 172, 175, 180, 182, 185, 197, 200, 216, 219, 238, 246, 255, 256, 257, 259, 269, 273, 276, 282, 290, 296, 315, 327, 328, 331, 337, 365, 366, 367, 376, 386, 388, 396, 405, 415, 421, 423, 436, 437, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 453, 458], "renam": [13, 41, 56, 61, 74, 82, 99, 115, 135, 150, 202, 212, 236, 237, 240, 257, 259, 277, 279, 293, 310, 314, 322, 358, 365, 366, 396, 414, 415, 427, 437, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455], "pycode_new": [13, 444, 448, 449, 457], "deprec": [13, 23, 30, 32, 34, 41, 44, 47, 52, 54, 55, 56, 57, 59, 61, 62, 65, 85, 87, 91, 111, 114, 115, 116, 120, 121, 123, 126, 133, 142, 148, 151, 156, 158, 165, 172, 175, 180, 187, 188, 194, 196, 198, 202, 207, 212, 214, 217, 223, 226, 231, 232, 234, 236, 237, 238, 241, 243, 247, 254, 255, 276, 277, 279, 282, 284, 286, 287, 296, 300, 301, 304, 306, 309, 310, 314, 317, 318, 321, 324, 326, 329, 331, 337, 340, 343, 344, 347, 349, 365, 372, 375, 376, 377, 388, 397, 398, 403, 405, 407, 430, 436, 438, 439, 442, 445], "until": [13, 30, 32, 33, 34, 61, 64, 70, 71, 74, 77, 82, 83, 85, 86, 88, 90, 93, 98, 99, 102, 103, 110, 114, 116, 120, 123, 124, 127, 128, 130, 131, 132, 133, 136, 150, 156, 166, 172, 175, 180, 196, 200, 203, 207, 212, 214, 215, 219, 221, 224, 225, 229, 231, 232, 236, 238, 246, 249, 253, 255, 257, 258, 269, 276, 277, 280, 282, 287, 290, 298, 302, 307, 310, 311, 313, 315, 318, 319, 320, 321, 324, 327, 328, 338, 339, 340, 343, 345, 347, 358, 361, 363, 366, 372, 376, 378, 379, 381, 383, 387, 390, 391, 399, 402, 403, 411, 415, 416, 417, 418, 427, 430, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 453, 454, 455, 456, 458], "again": [13, 22, 27, 28, 32, 44, 61, 71, 73, 74, 76, 81, 82, 83, 84, 85, 90, 92, 93, 99, 102, 103, 104, 105, 106, 107, 116, 127, 130, 132, 139, 140, 150, 157, 160, 165, 166, 172, 177, 189, 201, 203, 210, 215, 221, 232, 236, 249, 255, 257, 262, 265, 268, 269, 276, 277, 279, 280, 282, 290, 295, 310, 313, 315, 317, 320, 321, 324, 328, 331, 338, 340, 343, 347, 353, 354, 361, 364, 366, 367, 372, 376, 384, 388, 389, 399, 402, 403, 405, 407, 410, 411, 415, 416, 418, 419, 421, 422, 424, 425, 429, 436, 437, 439, 440, 443, 445, 447, 451, 452, 456, 457], "pyunstable_code_newwithposonlyarg": [13, 449], "posonlyargcount": [13, 135, 362, 457], "caveat": [13, 59, 110, 132, 172, 238, 243, 290, 293, 366, 403, 411, 435], "pycode_newwithposonlyarg": [13, 448, 449, 457], "funcnam": [13, 70, 95, 137, 255, 402, 415], "line": [13, 23, 24, 26, 32, 33, 34, 62, 64, 66, 70, 71, 74, 76, 78, 82, 83, 84, 85, 87, 90, 92, 93, 95, 97, 98, 99, 101, 102, 105, 106, 107, 108, 109, 111, 112, 119, 130, 131, 135, 136, 137, 139, 142, 144, 147, 148, 149, 150, 157, 158, 159, 160, 164, 165, 166, 167, 172, 175, 177, 180, 182, 184, 185, 188, 189, 190, 191, 193, 194, 196, 197, 200, 202, 203, 208, 211, 212, 214, 219, 229, 231, 234, 237, 238, 239, 242, 246, 247, 249, 255, 256, 257, 258, 259, 265, 268, 269, 272, 279, 280, 282, 284, 287, 289, 290, 294, 295, 296, 299, 300, 301, 303, 306, 309, 313, 314, 317, 321, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 342, 347, 350, 354, 358, 359, 361, 363, 364, 366, 367, 373, 375, 376, 379, 383, 386, 388, 391, 395, 401, 402, 403, 404, 405, 406, 407, 409, 411, 412, 413, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 427, 428, 429, 431, 433, 434, 435, 437, 438, 439, 440, 442, 443, 445, 446, 448, 449, 450, 453, 454, 455, 456, 457, 458], "pycode_addr2lin": [13, 440, 447, 448, 455], "byte_offset": 13, "pyframe_getlinenumb": [13, 26, 55, 444, 447, 448, 455, 458], "626": [13, 180, 449, 450], "pycode_addr2loc": [13, 448], "start_lin": [13, 403], "start_column": [13, 403], "end_lin": [13, 403], "end_column": [13, 403], "column": [13, 33, 61, 83, 88, 95, 105, 116, 143, 145, 164, 166, 179, 180, 182, 202, 214, 236, 243, 249, 250, 277, 283, 290, 296, 301, 314, 320, 324, 327, 342, 347, 355, 388, 391, 403, 417, 421, 430, 437, 444, 448, 454], "particular": [13, 32, 34, 44, 55, 57, 61, 62, 64, 71, 73, 76, 83, 84, 85, 91, 93, 96, 97, 98, 105, 106, 107, 109, 110, 111, 114, 116, 132, 133, 148, 151, 157, 159, 164, 165, 166, 171, 172, 182, 192, 197, 202, 216, 221, 229, 232, 236, 237, 239, 243, 245, 247, 250, 251, 255, 256, 257, 259, 261, 262, 263, 269, 270, 276, 277, 282, 284, 298, 301, 304, 308, 310, 314, 315, 316, 317, 318, 321, 322, 324, 325, 327, 328, 331, 332, 340, 342, 343, 347, 353, 358, 363, 365, 366, 367, 371, 372, 373, 375, 376, 378, 385, 386, 388, 395, 399, 401, 402, 403, 405, 406, 407, 409, 411, 415, 417, 421, 425, 428, 430, 431, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 451, 452, 453, 454, 455, 456, 457], "pycode_getcod": [13, 448], "getattr": [13, 76, 83, 85, 86, 91, 98, 99, 111, 120, 150, 165, 170, 180, 214, 243, 249, 269, 275, 276, 282, 325, 337, 362, 363, 402, 415, 425, 437, 451, 453, 456], "co_cod": [13, 243, 403, 448], "demand": [13, 41, 62, 91, 157, 269, 276, 285, 366, 402, 447, 449, 454, 458], "debugg": [13, 41, 55, 66, 71, 174, 182, 202, 203, 214, 236, 242, 268, 303, 331, 332, 358, 365, 403, 415, 431, 436, 439, 440, 442, 443, 444, 448, 449, 451, 455, 456, 457], "profil": [13, 33, 34, 49, 66, 78, 83, 94, 95, 146, 148, 242, 315, 321, 326, 331, 333, 343, 347, 381, 413, 426, 430, 431, 434, 438, 439, 441, 442, 443, 445, 447, 448, 449, 455, 457], "pycode_getvarnam": [13, 448], "co_varnam": [13, 180, 243, 403, 448], "pytupleobject": [13, 52, 57, 58, 60], "pycode_getcellvar": [13, 448], "co_cellvar": [13, 243, 403, 448], "pycode_getfreevar": [13, 448], "co_freevar": [13, 243, 403, 448], "pycode_addwatch": [13, 449], "pycode_watchcallback": 13, "regist": [13, 14, 22, 27, 32, 33, 57, 59, 61, 66, 71, 74, 79, 82, 83, 85, 88, 105, 106, 111, 114, 120, 122, 123, 126, 127, 134, 148, 151, 157, 159, 161, 164, 182, 186, 192, 197, 203, 214, 215, 230, 238, 242, 246, 255, 263, 269, 273, 277, 281, 282, 284, 302, 310, 311, 314, 315, 318, 321, 324, 331, 340, 347, 353, 361, 363, 365, 372, 376, 378, 379, 382, 385, 388, 390, 395, 396, 402, 403, 405, 407, 429, 436, 437, 438, 440, 441, 443, 444, 447, 448, 449, 451, 452, 453, 454, 456, 457], "watcher": [13, 22, 27, 59, 61, 73, 131, 449, 458], "id": [13, 22, 27, 32, 44, 59, 66, 76, 78, 85, 93, 95, 98, 99, 110, 116, 124, 127, 135, 150, 166, 170, 182, 185, 186, 189, 192, 194, 198, 214, 219, 222, 229, 247, 249, 255, 256, 257, 258, 259, 269, 277, 282, 285, 287, 289, 292, 296, 301, 304, 310, 311, 316, 318, 320, 321, 322, 328, 332, 335, 336, 337, 338, 343, 347, 353, 363, 365, 366, 367, 374, 377, 378, 388, 391, 403, 405, 406, 411, 425, 426, 433, 436, 437, 438, 439, 441, 442, 443, 448, 449, 452, 456, 457, 458], "pycode_clearwatch": [13, 449], "watcher_id": [13, 22, 27, 59], "clear": [13, 14, 22, 27, 32, 34, 44, 46, 56, 57, 59, 61, 65, 71, 73, 74, 76, 78, 83, 85, 88, 90, 95, 97, 99, 102, 103, 105, 106, 120, 132, 145, 148, 150, 151, 157, 159, 166, 173, 175, 180, 182, 194, 205, 212, 215, 216, 221, 232, 236, 238, 243, 253, 255, 257, 259, 263, 276, 277, 280, 284, 301, 302, 314, 315, 318, 320, 323, 324, 331, 337, 340, 343, 353, 358, 359, 361, 363, 366, 367, 375, 376, 388, 398, 402, 403, 405, 415, 417, 424, 431, 436, 437, 439, 440, 442, 443, 444, 447, 448, 449, 450, 451, 452, 453, 455, 456, 458], "identifi": [13, 22, 23, 27, 32, 41, 59, 62, 66, 71, 73, 74, 75, 83, 85, 88, 96, 98, 105, 106, 110, 111, 112, 114, 116, 141, 150, 164, 165, 174, 180, 182, 183, 185, 194, 201, 214, 216, 219, 236, 237, 242, 243, 247, 256, 257, 259, 269, 277, 280, 284, 290, 296, 301, 302, 305, 310, 317, 318, 321, 324, 325, 326, 330, 331, 334, 340, 343, 347, 350, 363, 364, 365, 367, 371, 372, 374, 381, 383, 385, 388, 390, 391, 395, 401, 402, 403, 404, 407, 411, 415, 416, 418, 423, 426, 427, 436, 440, 441, 442, 443, 444, 445, 447, 449, 450, 451, 453, 454, 455, 456, 457, 458], "pycodeev": 13, "enumer": [13, 22, 23, 27, 66, 76, 91, 93, 104, 105, 143, 150, 171, 214, 215, 242, 249, 269, 293, 324, 343, 359, 374, 381, 397, 416, 417, 425, 427, 436, 448, 449, 453, 455], "event": [13, 22, 24, 27, 30, 32, 41, 56, 57, 64, 66, 71, 78, 90, 95, 98, 110, 115, 117, 118, 119, 123, 125, 126, 127, 129, 130, 131, 133, 137, 154, 165, 166, 172, 174, 178, 180, 199, 204, 212, 214, 216, 220, 225, 231, 237, 242, 245, 246, 248, 255, 257, 261, 265, 268, 269, 277, 279, 280, 282, 287, 290, 291, 296, 297, 304, 310, 311, 314, 317, 318, 320, 321, 322, 324, 328, 331, 335, 337, 338, 340, 344, 349, 362, 365, 372, 378, 379, 381, 385, 386, 387, 388, 389, 390, 391, 392, 401, 403, 405, 411, 418, 421, 427, 430, 435, 436, 437, 442, 443, 444, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "py_code_event_cr": 13, "py_code_event_destroi": 13, "destruct": [13, 32, 71, 73, 145, 166, 243, 246, 270, 324, 338, 403, 438, 449, 451], "prior": [13, 22, 27, 32, 44, 57, 76, 83, 85, 91, 98, 99, 104, 108, 116, 120, 136, 156, 164, 175, 200, 214, 215, 234, 239, 243, 255, 298, 311, 314, 318, 320, 321, 323, 324, 328, 331, 335, 337, 338, 340, 343, 363, 365, 378, 388, 397, 401, 402, 403, 405, 407, 410, 418, 449, 453, 454, 455, 456, 457], "inspect": [13, 22, 27, 32, 33, 64, 66, 71, 74, 85, 86, 88, 95, 99, 101, 108, 114, 116, 123, 133, 146, 151, 164, 170, 182, 214, 216, 224, 238, 239, 242, 247, 255, 259, 280, 284, 289, 295, 297, 314, 315, 316, 321, 324, 331, 337, 340, 349, 359, 363, 365, 366, 372, 397, 402, 403, 430, 437, 438, 439, 443, 444, 450], "resurrect": [13, 22, 27, 331, 340, 343, 403, 451, 458], "prevent": [13, 22, 23, 27, 32, 34, 41, 56, 59, 71, 73, 74, 82, 83, 85, 90, 91, 97, 98, 99, 105, 106, 120, 133, 148, 150, 157, 159, 160, 165, 170, 175, 177, 179, 182, 195, 202, 212, 214, 215, 226, 236, 238, 247, 250, 256, 257, 259, 263, 269, 276, 277, 279, 287, 293, 317, 318, 321, 328, 331, 332, 337, 340, 347, 358, 361, 363, 365, 366, 367, 376, 378, 384, 397, 399, 403, 405, 407, 413, 416, 424, 425, 428, 430, 436, 439, 440, 442, 443, 444, 447, 448, 449, 451, 452, 453, 454, 455, 457, 458], "activ": [13, 22, 23, 27, 32, 34, 47, 57, 61, 64, 70, 76, 78, 83, 84, 90, 102, 103, 107, 120, 126, 132, 133, 137, 150, 159, 166, 175, 199, 202, 207, 212, 214, 232, 236, 239, 242, 251, 269, 276, 280, 287, 290, 296, 310, 316, 319, 320, 321, 324, 328, 331, 332, 343, 344, 347, 353, 361, 362, 366, 367, 375, 386, 387, 390, 411, 416, 428, 430, 436, 437, 439, 440, 442, 443, 444, 447, 448, 449, 451, 453, 454, 455, 456, 457, 458], "user": [13, 23, 28, 32, 33, 34, 38, 41, 43, 55, 59, 61, 62, 64, 66, 68, 70, 71, 72, 74, 76, 77, 78, 80, 81, 82, 83, 84, 85, 87, 88, 91, 92, 95, 96, 97, 98, 99, 101, 102, 105, 106, 109, 114, 119, 120, 123, 127, 129, 133, 135, 137, 144, 145, 147, 148, 149, 150, 151, 153, 156, 157, 158, 159, 161, 164, 166, 168, 170, 172, 175, 178, 182, 189, 199, 200, 201, 202, 205, 212, 215, 216, 217, 218, 219, 222, 224, 229, 231, 232, 234, 237, 238, 239, 242, 243, 245, 246, 250, 254, 255, 257, 259, 262, 268, 269, 272, 276, 277, 278, 279, 280, 282, 283, 285, 287, 292, 293, 294, 301, 302, 304, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 327, 328, 331, 334, 335, 337, 338, 340, 343, 344, 347, 348, 351, 353, 356, 357, 358, 361, 362, 365, 367, 371, 372, 373, 375, 376, 379, 381, 383, 386, 387, 388, 389, 390, 394, 396, 397, 400, 401, 402, 404, 405, 407, 411, 413, 414, 415, 416, 419, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "reli": [13, 24, 49, 50, 55, 71, 74, 85, 86, 91, 92, 97, 99, 101, 103, 107, 127, 134, 150, 151, 170, 172, 214, 238, 243, 255, 263, 269, 276, 277, 282, 284, 285, 300, 312, 314, 324, 331, 338, 340, 342, 343, 344, 363, 365, 367, 375, 402, 403, 404, 407, 415, 416, 425, 436, 437, 440, 441, 442, 444, 446, 447, 449, 451, 452, 453, 454, 455, 456, 457], "print": [13, 22, 27, 32, 33, 34, 41, 47, 57, 61, 66, 70, 71, 73, 74, 76, 82, 83, 84, 85, 86, 87, 88, 92, 93, 95, 96, 97, 98, 99, 102, 105, 106, 108, 109, 110, 115, 116, 117, 119, 120, 123, 127, 128, 129, 130, 131, 132, 133, 134, 137, 139, 143, 145, 147, 149, 150, 153, 156, 157, 158, 159, 160, 162, 164, 165, 166, 170, 172, 173, 175, 177, 179, 180, 182, 185, 189, 190, 193, 194, 200, 202, 203, 205, 209, 212, 214, 215, 216, 217, 218, 219, 221, 224, 229, 231, 233, 234, 236, 237, 238, 239, 242, 243, 245, 246, 249, 250, 255, 257, 259, 265, 266, 268, 269, 277, 279, 280, 282, 283, 286, 287, 289, 290, 291, 295, 296, 297, 298, 300, 301, 302, 303, 304, 307, 311, 313, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 328, 331, 334, 336, 337, 338, 340, 342, 343, 345, 347, 353, 355, 357, 359, 361, 363, 365, 366, 372, 375, 376, 378, 381, 383, 386, 387, 388, 391, 392, 394, 395, 396, 397, 400, 402, 403, 404, 405, 410, 411, 413, 415, 416, 417, 418, 419, 421, 423, 424, 425, 426, 427, 430, 431, 436, 437, 438, 439, 440, 441, 442, 444, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458], "unrais": [13, 22, 23, 27, 135, 320, 331, 340, 448, 457], "pyerr_writeunrais": [13, 22, 23, 27, 55, 73], "pend": [13, 22, 23, 27, 32, 38, 73, 85, 120, 127, 133, 156, 225, 246, 259, 287, 310, 315, 320, 321, 399, 405, 451, 452, 453, 455, 458], "extern": [13, 34, 49, 71, 76, 77, 82, 83, 88, 91, 97, 99, 104, 116, 148, 157, 165, 173, 186, 205, 226, 236, 238, 243, 245, 255, 261, 277, 293, 296, 319, 324, 327, 328, 337, 338, 340, 343, 347, 361, 365, 383, 384, 385, 387, 388, 389, 390, 391, 397, 403, 405, 418, 436, 443, 445, 446, 448, 450, 451, 454, 455, 456, 457, 458], "compil": [13, 30, 32, 33, 34, 41, 44, 55, 56, 57, 61, 64, 66, 72, 74, 75, 78, 82, 83, 84, 85, 88, 93, 99, 100, 105, 107, 108, 135, 147, 157, 165, 169, 173, 180, 182, 202, 209, 214, 219, 224, 231, 236, 237, 238, 240, 242, 243, 245, 252, 256, 258, 261, 285, 288, 290, 296, 301, 302, 306, 313, 320, 321, 324, 325, 327, 331, 334, 340, 345, 358, 362, 363, 364, 365, 376, 385, 397, 401, 403, 404, 407, 409, 410, 411, 414, 415, 430, 435, 437, 438, 439, 440, 442, 443, 444, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 458], "attach": [13, 32, 44, 70, 97, 98, 99, 114, 120, 126, 150, 156, 172, 182, 183, 185, 186, 188, 192, 194, 195, 196, 201, 236, 255, 256, 270, 310, 311, 320, 331, 347, 358, 365, 367, 383, 400, 401, 402, 403, 411, 415, 418, 426, 438, 440, 444, 445, 448, 452, 455, 457], "tier": [13, 55, 448, 449], "pyunstable_eval_requestcodeextraindex": [13, 449], "freefunc": [13, 44, 61, 73], "pycode_getextra": 13, "pycode_setextra": 13, "under": [13, 14, 23, 33, 34, 41, 44, 56, 59, 64, 76, 83, 90, 93, 98, 99, 101, 102, 107, 108, 114, 138, 145, 148, 165, 166, 172, 179, 182, 185, 188, 192, 197, 202, 204, 214, 216, 219, 224, 236, 246, 250, 256, 257, 259, 262, 265, 269, 276, 277, 279, 280, 290, 304, 313, 318, 320, 322, 323, 324, 331, 332, 334, 338, 340, 341, 347, 349, 353, 357, 358, 361, 365, 366, 367, 371, 372, 375, 376, 379, 381, 394, 395, 396, 397, 400, 401, 403, 404, 406, 410, 411, 418, 425, 430, 431, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 454, 456, 457], "py_decref": [13, 22, 23, 28, 34, 35, 44, 50, 55, 61, 70, 71, 73, 74, 77, 85, 447, 449, 457], "_pyeval_requestcodeextraindex": [13, 449], "privat": [13, 32, 41, 42, 55, 83, 88, 91, 92, 93, 165, 170, 179, 212, 214, 236, 237, 238, 247, 265, 269, 282, 287, 317, 321, 326, 328, 340, 363, 366, 405, 410, 411, 425, 436, 438, 439, 440, 443, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457], "pyunstable_code_getextra": [13, 449], "_pycode_getextra": [13, 449], "pyunstable_code_setextra": [13, 449], "_pycode_setextra": [13, 449], "pycodec_regist": [14, 55], "search_funct": [14, 148], "tri": [14, 32, 41, 61, 71, 73, 74, 76, 83, 85, 93, 96, 102, 120, 149, 165, 177, 180, 182, 192, 198, 214, 246, 254, 255, 256, 257, 263, 268, 269, 273, 277, 285, 295, 301, 304, 317, 325, 340, 343, 347, 372, 383, 403, 405, 407, 409, 418, 437, 438, 439, 440, 441, 442, 443, 444, 445, 456], "packag": [14, 30, 32, 33, 55, 61, 62, 66, 68, 72, 75, 77, 78, 83, 85, 91, 94, 98, 99, 115, 136, 150, 154, 165, 172, 176, 182, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 199, 201, 214, 219, 227, 230, 231, 236, 238, 241, 242, 243, 249, 255, 256, 257, 263, 266, 267, 269, 271, 278, 289, 294, 295, 306, 312, 316, 317, 320, 321, 323, 325, 331, 333, 334, 346, 347, 356, 357, 361, 362, 363, 365, 366, 367, 369, 372, 375, 376, 386, 389, 393, 396, 397, 398, 400, 401, 411, 413, 419, 420, 426, 429, 430, 431, 435, 437, 439, 441, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458], "pycodec_unregist": [14, 55, 447], "unregist": [14, 120, 122, 134, 148, 203, 277, 310, 311, 314, 332, 347, 378, 447, 458], "cach": [14, 30, 33, 41, 59, 61, 62, 71, 73, 82, 85, 91, 98, 102, 106, 111, 120, 133, 140, 148, 150, 153, 165, 173, 179, 180, 205, 209, 215, 219, 238, 253, 255, 269, 277, 278, 284, 293, 301, 306, 312, 320, 321, 327, 331, 337, 338, 340, 359, 363, 365, 372, 378, 398, 400, 402, 425, 427, 428, 430, 431, 436, 438, 440, 442, 443, 444, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458], "noth": [14, 23, 32, 33, 34, 41, 44, 56, 62, 70, 71, 73, 76, 87, 88, 98, 99, 102, 103, 106, 110, 111, 116, 126, 130, 133, 134, 144, 148, 159, 166, 170, 172, 179, 180, 182, 187, 199, 200, 202, 212, 215, 229, 236, 237, 246, 254, 255, 256, 257, 259, 268, 269, 276, 282, 287, 301, 314, 315, 319, 320, 324, 326, 328, 343, 347, 359, 363, 365, 375, 383, 392, 401, 403, 405, 410, 411, 414, 415, 416, 423, 425, 428, 430, 439, 440, 443, 444, 449, 450, 453, 454, 457, 458], "pycodec_knownencod": [14, 55], "pycodec_encod": [14, 55, 449], "lookuperror": [14, 23, 62, 148, 160, 202, 324, 425, 453], "pycodec_decod": [14, 55, 449], "decod": [14, 23, 30, 33, 57, 62, 64, 66, 85, 99, 101, 105, 115, 120, 127, 130, 131, 136, 139, 164, 165, 177, 185, 186, 188, 189, 190, 191, 192, 193, 195, 197, 198, 202, 214, 224, 233, 238, 242, 246, 258, 271, 277, 279, 282, 283, 286, 318, 320, 321, 324, 327, 328, 331, 337, 340, 354, 355, 356, 371, 372, 375, 383, 394, 397, 403, 407, 410, 421, 426, 430, 437, 439, 441, 442, 443, 444, 445, 446, 451, 452, 453, 454, 455, 458], "lower": [14, 32, 55, 62, 70, 82, 83, 85, 90, 95, 99, 102, 104, 116, 120, 127, 133, 134, 139, 143, 145, 148, 150, 153, 157, 166, 167, 169, 175, 184, 185, 189, 191, 192, 194, 200, 208, 214, 215, 225, 229, 234, 249, 259, 261, 269, 277, 290, 301, 304, 307, 318, 320, 321, 324, 325, 331, 338, 343, 344, 345, 354, 361, 363, 371, 372, 376, 403, 405, 411, 417, 438, 440, 441, 442, 443, 444, 446, 451, 453, 458], "insensit": [14, 18, 85, 102, 104, 105, 148, 150, 157, 185, 194, 233, 234, 238, 263, 279, 301, 316, 320, 325, 326, 337, 340, 372, 376, 383, 430, 436, 441, 443, 456], "keyerror": [14, 22, 23, 34, 39, 53, 76, 83, 150, 157, 160, 173, 185, 186, 194, 200, 202, 222, 225, 232, 238, 249, 259, 279, 292, 310, 311, 312, 324, 325, 334, 337, 362, 363, 364, 366, 367, 397, 400, 403, 407, 425, 427, 440, 441, 444, 450, 452, 455, 457], "pycodec_incrementalencod": [14, 55], "incrementalencod": [14, 442], "pycodec_incrementaldecod": [14, 55], "incrementaldecod": [14, 246, 442], "pycodec_streamread": [14, 55], "stream": [14, 24, 32, 33, 40, 66, 82, 85, 93, 98, 103, 105, 112, 117, 120, 121, 124, 131, 133, 139, 142, 147, 159, 166, 183, 189, 190, 195, 196, 201, 202, 208, 214, 218, 223, 225, 231, 234, 236, 242, 249, 250, 255, 256, 257, 258, 263, 268, 277, 281, 283, 289, 290, 296, 310, 311, 313, 314, 315, 316, 318, 319, 328, 331, 337, 340, 355, 363, 365, 372, 375, 377, 383, 384, 387, 388, 391, 392, 394, 397, 399, 403, 405, 409, 410, 413, 425, 430, 437, 441, 442, 443, 444, 445, 448, 451, 452, 453, 454, 455, 456, 457], "streamread": [14, 118, 120, 131, 441, 442, 454, 455], "factori": [14, 61, 85, 96, 114, 120, 122, 124, 127, 148, 159, 162, 165, 178, 182, 192, 196, 197, 215, 238, 255, 256, 257, 259, 262, 269, 276, 314, 343, 347, 349, 363, 367, 378, 383, 385, 388, 394, 395, 403, 439, 442, 443, 446, 448, 449, 450, 451, 452, 454, 456, 457, 458], "pycodec_streamwrit": [14, 55], "streamwrit": [14, 118, 120, 131, 442, 448, 456], "pycodec_registererror": [14, 55], "unencod": [14, 44, 105, 148, 299, 440, 445, 451], "undecod": [14, 57, 105, 148, 185, 277, 451], "unicodeencodeerror": [14, 23, 44, 69, 105, 148, 202, 331, 371, 425, 448, 451, 457], "unicodedecodeerror": [14, 23, 105, 148, 202, 277, 371, 425, 442, 445, 451, 453, 457], "unicodetranslateerror": [14, 23, 148, 202, 425], "problemat": [14, 59, 85, 157, 256, 269, 441, 446, 448, 451, 456], "extract": [14, 20, 34, 54, 70, 73, 87, 92, 93, 96, 97, 114, 140, 166, 172, 179, 180, 182, 186, 187, 189, 203, 214, 219, 225, 231, 232, 239, 240, 243, 249, 277, 280, 294, 295, 301, 312, 314, 317, 324, 331, 358, 371, 403, 416, 417, 418, 426, 436, 440, 441, 442, 443, 444, 447, 448, 449, 451, 453, 454, 455, 457], "replac": [14, 22, 24, 30, 32, 33, 34, 37, 41, 43, 54, 55, 57, 58, 59, 61, 62, 69, 71, 76, 82, 83, 84, 87, 88, 90, 91, 92, 93, 99, 105, 106, 114, 116, 120, 126, 133, 143, 147, 148, 150, 156, 157, 161, 165, 166, 168, 170, 172, 179, 180, 182, 185, 186, 191, 194, 195, 198, 200, 202, 203, 207, 214, 218, 224, 225, 228, 229, 238, 239, 243, 246, 254, 255, 256, 259, 263, 266, 269, 276, 277, 278, 279, 280, 289, 290, 300, 301, 302, 303, 313, 314, 315, 320, 321, 323, 324, 325, 331, 337, 338, 340, 342, 343, 344, 347, 349, 353, 355, 356, 359, 361, 362, 363, 364, 365, 366, 367, 371, 372, 375, 376, 378, 383, 384, 385, 388, 390, 392, 396, 397, 400, 403, 405, 410, 411, 414, 415, 421, 424, 425, 426, 430, 431, 435, 436, 437, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "resum": [14, 32, 85, 93, 124, 127, 128, 130, 133, 159, 166, 167, 180, 243, 269, 277, 279, 280, 282, 296, 298, 332, 339, 343, 383, 402, 403, 405, 415, 439, 440, 441, 442, 448], "pycodec_lookuperror": [14, 55], "strict": [14, 33, 62, 92, 93, 96, 105, 114, 136, 148, 157, 164, 165, 175, 191, 196, 197, 200, 214, 229, 231, 232, 233, 237, 243, 246, 247, 249, 250, 262, 263, 277, 278, 279, 282, 321, 324, 331, 340, 344, 371, 385, 401, 431, 437, 438, 440, 443, 444, 447, 449, 450, 451, 452, 453, 454, 456], "pycodec_stricterror": [14, 55], "exc": [14, 23, 32, 46, 116, 127, 133, 156, 159, 202, 358, 365, 367, 403, 411, 418, 443, 445, 447, 449, 450, 452], "pycodec_ignoreerror": [14, 55], "faulti": 14, "pycodec_replaceerror": [14, 55], "fffd": [14, 105, 148, 437], "pycodec_xmlcharrefreplaceerror": [14, 55], "xml": [14, 66, 78, 93, 102, 105, 148, 214, 242, 244, 246, 260, 286, 309, 372, 393, 426, 427, 436, 438, 439, 440, 441, 442, 443, 444, 448, 450, 451, 455], "pycodec_backslashreplaceerror": [14, 55], "backslash": [14, 148, 149, 182, 198, 214, 236, 246, 269, 277, 279, 301, 328, 410, 421, 440, 441, 445, 449, 455, 456], "escap": [14, 41, 47, 57, 71, 76, 83, 90, 99, 102, 105, 114, 120, 131, 148, 157, 164, 166, 167, 179, 197, 214, 220, 227, 236, 238, 246, 250, 301, 303, 313, 324, 325, 328, 344, 361, 363, 371, 392, 394, 403, 424, 427, 437, 438, 441, 443, 444, 445, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458], "pycodec_namereplaceerror": [14, 55, 454], "7": [14, 17, 20, 23, 25, 30, 32, 34, 39, 41, 42, 44, 46, 47, 54, 56, 57, 61, 66, 76, 83, 87, 90, 92, 93, 95, 99, 101, 102, 105, 107, 108, 110, 114, 116, 119, 120, 123, 125, 127, 129, 130, 133, 134, 139, 143, 148, 150, 153, 156, 157, 159, 160, 165, 166, 167, 170, 172, 175, 177, 179, 180, 182, 184, 191, 192, 194, 197, 198, 200, 202, 203, 210, 214, 215, 216, 224, 225, 226, 230, 231, 233, 234, 238, 239, 240, 243, 246, 247, 249, 250, 254, 255, 257, 258, 262, 265, 269, 270, 272, 277, 279, 280, 282, 283, 288, 289, 290, 293, 294, 295, 298, 300, 301, 304, 314, 315, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 331, 337, 343, 344, 345, 354, 355, 358, 359, 361, 362, 363, 365, 366, 367, 371, 374, 375, 376, 379, 383, 384, 387, 388, 389, 394, 395, 396, 397, 401, 402, 403, 405, 407, 410, 415, 416, 417, 419, 421, 424, 425, 426, 427, 428, 430, 431, 434, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 457, 458, 460], "distinct": [15, 32, 34, 41, 44, 61, 76, 83, 85, 90, 101, 102, 103, 105, 150, 159, 170, 172, 175, 182, 215, 249, 256, 258, 262, 270, 276, 282, 290, 316, 320, 321, 324, 327, 331, 347, 363, 383, 407, 410, 421, 437, 439, 443, 451, 452, 455, 456, 458], "dereferenc": [15, 165, 216, 378, 452], "throughout": [15, 71, 78, 91, 98, 135, 175, 238, 366, 409, 437, 439, 440, 442, 443, 444, 448, 451, 454], "portion": [15, 61, 85, 88, 90, 93, 96, 102, 122, 130, 144, 168, 172, 175, 192, 198, 215, 224, 255, 256, 257, 279, 318, 322, 323, 353, 365, 371, 383, 385, 391, 394, 395, 397, 401, 407, 437, 451, 452, 454], "real": [15, 34, 37, 46, 57, 70, 74, 83, 85, 91, 99, 106, 108, 137, 144, 147, 150, 159, 165, 180, 182, 189, 194, 202, 214, 215, 225, 237, 238, 250, 273, 277, 285, 290, 301, 304, 306, 313, 315, 316, 320, 321, 323, 324, 325, 331, 332, 333, 344, 347, 365, 366, 367, 372, 388, 402, 406, 410, 414, 415, 416, 417, 418, 419, 429, 436, 442, 443, 444, 449, 451, 452, 455], "_py_c_sum": 15, "_py_c_diff": 15, "_py_c_neg": 15, "num": [15, 99, 116, 148, 166, 175, 215, 219, 229, 237, 269, 276, 283, 321, 325, 363, 416, 417, 443, 444, 449, 450, 457], "negat": [15, 46, 92, 175, 215, 275, 277, 313, 324, 405, 417, 449], "_py_c_prod": 15, "_py_c_quot": 15, "dividend": [15, 175], "divisor": [15, 175, 262, 424], "quotient": [15, 172, 175, 214, 262, 290, 324, 405, 419, 424], "errno": [15, 23, 34, 49, 66, 71, 82, 112, 127, 135, 165, 177, 202, 204, 238, 242, 277, 296, 310, 315, 318, 321, 331, 340, 418, 443, 448, 452, 454, 456], "edom": [15, 201], "_py_c_pow": 15, "exp": [15, 144, 175, 214, 262, 300, 325, 443, 444, 452], "exponenti": [15, 83, 175, 257, 275, 300, 324, 340, 384, 405, 440, 441, 443], "pycomplexobject": 15, "pycomplex_typ": [15, 55], "pycomplex_check": 15, "pycomplex_checkexact": 15, "pycomplex_fromccomplex": 15, "pycomplex_fromdoubl": [15, 55], "pycomplex_realasdoubl": [15, 55], "pycomplex_imagasdoubl": [15, 55], "imaginari": [15, 85, 144, 172, 273, 324, 325, 331, 361, 402, 403, 405, 424, 443, 444, 451], "pycomplex_asccomplex": [15, 443], "__complex__": [15, 144, 214, 250, 363, 366, 403, 443, 448, 450, 453, 456, 457], "__float__": [15, 25, 61, 144, 214, 363, 366, 403, 447, 450, 456, 457], "__index__": [15, 25, 38, 61, 214, 275, 324, 327, 363, 366, 403, 443, 444, 445, 447, 448, 450, 453, 456, 457], "upon": [15, 18, 25, 30, 32, 34, 40, 62, 64, 70, 71, 78, 83, 85, 91, 98, 134, 137, 145, 148, 149, 159, 164, 166, 175, 177, 178, 182, 231, 233, 236, 237, 238, 259, 270, 277, 280, 282, 310, 311, 313, 315, 316, 320, 321, 327, 331, 334, 338, 340, 357, 375, 376, 377, 385, 401, 403, 405, 407, 414, 415, 425, 428, 438, 443, 448, 452, 453, 455, 457], "perform": [16, 20, 23, 28, 32, 34, 37, 38, 41, 57, 58, 61, 62, 63, 70, 73, 76, 85, 87, 88, 90, 93, 98, 99, 100, 103, 105, 114, 116, 117, 119, 120, 121, 127, 132, 133, 148, 150, 151, 153, 156, 157, 159, 164, 166, 170, 172, 175, 177, 180, 182, 188, 195, 198, 200, 202, 204, 209, 212, 214, 215, 216, 221, 225, 231, 232, 234, 236, 237, 238, 240, 247, 249, 250, 254, 255, 256, 257, 261, 269, 270, 275, 277, 278, 279, 283, 287, 288, 290, 296, 299, 300, 301, 303, 313, 314, 315, 316, 318, 319, 320, 321, 324, 325, 328, 331, 332, 343, 344, 345, 349, 355, 361, 363, 365, 366, 371, 372, 375, 381, 390, 394, 395, 401, 403, 405, 407, 410, 411, 414, 415, 416, 417, 419, 421, 424, 425, 427, 430, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 451, 453, 454, 455, 456, 457, 458], "pydict_check": [16, 22], "tree": [16, 32, 33, 61, 66, 76, 82, 83, 84, 88, 93, 153, 179, 183, 185, 193, 194, 196, 205, 220, 225, 236, 242, 252, 260, 277, 279, 293, 294, 314, 322, 324, 331, 336, 338, 347, 353, 361, 375, 384, 385, 386, 403, 406, 427, 428, 430, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 452, 454, 455, 457, 458, 460], "carefulli": [16, 23, 50, 64, 74, 83, 170, 282, 290, 301, 312, 403, 416, 430, 441, 442, 443, 444, 453], "violat": [16, 23, 41, 59, 61, 92, 165, 172, 177, 192, 197, 204, 237, 282, 287, 321, 324, 377, 403, 415, 448, 455], "immedi": [16, 23, 24, 28, 30, 32, 34, 44, 61, 64, 71, 77, 82, 83, 85, 88, 90, 91, 93, 101, 102, 110, 120, 123, 124, 127, 128, 129, 130, 132, 133, 145, 156, 159, 164, 165, 166, 173, 175, 182, 194, 202, 203, 205, 207, 215, 221, 225, 231, 236, 243, 246, 254, 255, 259, 268, 269, 270, 277, 280, 285, 294, 298, 301, 313, 315, 318, 320, 321, 324, 325, 328, 331, 332, 338, 339, 343, 344, 347, 353, 361, 363, 365, 366, 367, 372, 376, 382, 385, 388, 390, 391, 394, 395, 402, 403, 404, 405, 407, 418, 421, 426, 430, 439, 440, 441, 443, 444, 447, 449, 450, 452, 453, 455, 456, 457, 458], "singleton": [16, 20, 32, 44, 45, 47, 54, 56, 61, 71, 83, 85, 92, 99, 116, 172, 261, 282, 324, 366, 394, 402, 403, 405, 416, 417, 431, 438, 447, 448, 455, 456], "intrins": [16, 157, 180, 275, 282, 403, 446, 450], "codec": [16, 31, 33, 63, 66, 85, 101, 105, 138, 184, 190, 191, 202, 214, 242, 246, 277, 317, 324, 341, 397, 401, 423, 426, 436, 437, 439, 441, 442, 445, 448, 454, 455, 457, 458], "cell": [16, 27, 31, 64, 66, 83, 90, 91, 112, 165, 180, 215, 225, 242, 243, 353, 362, 403, 443, 448], "descriptor": [16, 23, 24, 30, 31, 32, 47, 59, 61, 66, 73, 76, 79, 82, 85, 92, 94, 95, 111, 119, 124, 125, 126, 127, 130, 165, 166, 201, 204, 207, 214, 215, 220, 224, 237, 243, 245, 246, 256, 265, 268, 269, 278, 291, 294, 304, 310, 311, 314, 315, 318, 319, 321, 324, 328, 337, 338, 339, 340, 347, 360, 362, 402, 405, 411, 441, 442, 443, 444, 447, 448, 449, 451, 452, 454, 456, 458], "capsul": [16, 31, 66, 71, 93, 362, 445], "coroutin": [16, 26, 31, 66, 85, 93, 117, 118, 120, 122, 123, 124, 127, 128, 129, 130, 131, 132, 151, 159, 175, 177, 180, 202, 324, 331, 332, 363, 365, 366, 405, 431, 442, 447, 448, 449, 455, 456, 457, 458], "datetim": [16, 31, 66, 83, 92, 99, 120, 127, 131, 133, 143, 171, 179, 192, 198, 200, 237, 242, 257, 282, 286, 320, 321, 325, 344, 356, 362, 367, 395, 400, 410, 426, 440, 441, 442, 443, 444, 447, 449, 450, 454], "hint": [16, 31, 41, 66, 77, 83, 85, 86, 101, 103, 148, 150, 157, 176, 191, 214, 219, 230, 232, 236, 242, 246, 250, 283, 285, 324, 361, 362, 402, 403, 411, 455, 456], "pycontext": 17, "pycontextvar": 17, "pycontexttoken": 17, "pycontext_new": 17, "bpo": [17, 34, 172, 177, 215, 255, 257, 269, 277, 284, 314, 442, 443, 444, 446, 447, 448, 451, 452, 453, 454, 455, 456, 457, 458], "34762": [17, 456], "public": [17, 26, 28, 32, 33, 53, 55, 61, 78, 91, 103, 106, 107, 135, 145, 150, 164, 165, 179, 193, 200, 212, 224, 229, 232, 238, 239, 243, 247, 269, 272, 276, 296, 298, 313, 318, 321, 325, 330, 331, 337, 340, 342, 345, 363, 364, 365, 372, 385, 388, 391, 401, 410, 411, 415, 437, 438, 440, 441, 443, 444, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "contextvar": [17, 66, 85, 120, 123, 129, 133, 154, 175, 242, 431], "token": [17, 64, 66, 82, 111, 116, 146, 160, 238, 242, 252, 253, 272, 286, 296, 300, 313, 328, 336, 372, 402, 406, 409, 418, 422, 444, 445, 451, 455, 456], "pycontext_typ": 17, "pycontextvar_typ": 17, "pycontexttoken_typ": 17, "pycontext_checkexact": 17, "pycontextvar_checkexact": 17, "pycontexttoken_checkexact": 17, "pycontext_copi": 17, "ctx": [17, 23, 41, 99, 116, 160, 175, 269, 321, 443], "shallow": [17, 32, 66, 150, 160, 170, 171, 182, 205, 233, 242, 243, 282, 324, 337, 362, 417, 424], "pycontext_copycurr": 17, "pycontext_ent": 17, "pycontext_exit": 17, "deactiv": [17, 88, 331, 347, 375, 403, 428, 436, 447, 448, 449], "pycontextvar_new": 17, "introspect": [17, 73, 83, 85, 88, 91, 150, 160, 180, 202, 215, 238, 282, 347, 362, 366, 394, 395, 403, 407, 445, 447, 448, 449, 451, 452, 453, 454], "debug": [17, 32, 33, 37, 47, 58, 61, 64, 66, 73, 74, 76, 83, 85, 90, 95, 98, 99, 100, 116, 124, 129, 137, 156, 160, 165, 175, 177, 180, 185, 193, 194, 200, 202, 212, 216, 231, 237, 242, 255, 256, 257, 266, 268, 276, 277, 280, 285, 287, 301, 313, 317, 320, 321, 324, 331, 337, 338, 340, 347, 359, 363, 365, 366, 376, 388, 394, 397, 403, 404, 410, 411, 421, 426, 427, 432, 436, 437, 438, 439, 440, 442, 443, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458], "pycontextvar_get": 17, "var": [17, 76, 83, 85, 86, 91, 92, 99, 114, 116, 150, 157, 160, 214, 257, 324, 334, 338, 363, 366, 406, 416, 421, 425, 441, 442, 443, 444, 445, 447, 451], "default_valu": [17, 88], "dure": [17, 18, 22, 23, 24, 28, 32, 33, 44, 49, 50, 56, 61, 62, 75, 78, 83, 85, 88, 91, 92, 99, 101, 116, 127, 133, 134, 140, 148, 157, 158, 161, 165, 166, 170, 172, 175, 180, 182, 187, 190, 191, 192, 197, 200, 202, 207, 214, 215, 216, 220, 224, 226, 238, 239, 246, 250, 255, 256, 257, 258, 259, 277, 279, 282, 290, 295, 296, 301, 302, 305, 308, 314, 315, 316, 317, 320, 321, 324, 331, 332, 338, 339, 340, 344, 345, 353, 357, 359, 361, 362, 363, 365, 366, 367, 376, 378, 388, 389, 390, 391, 397, 400, 402, 403, 405, 407, 410, 411, 414, 415, 418, 419, 422, 426, 430, 436, 437, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458], "lookup": [17, 22, 30, 59, 61, 75, 76, 83, 85, 92, 116, 140, 148, 150, 170, 180, 184, 192, 200, 202, 214, 215, 219, 234, 243, 247, 257, 275, 277, 285, 324, 325, 330, 331, 347, 353, 358, 364, 366, 400, 402, 407, 415, 427, 437, 439, 441, 442, 443, 447, 448, 449, 451, 452, 453, 455, 457, 458], "pycontextvar_set": 17, "pycontextvar_reset": 17, "reset": [17, 32, 57, 83, 92, 93, 106, 130, 132, 137, 145, 147, 148, 150, 160, 166, 175, 179, 187, 195, 201, 202, 203, 207, 229, 234, 236, 238, 255, 269, 277, 278, 279, 308, 310, 315, 318, 321, 324, 335, 337, 340, 343, 344, 357, 361, 365, 366, 376, 387, 388, 391, 400, 402, 410, 439, 443, 447, 451, 452, 453, 454], "pyos_snprintf": [18, 55, 439], "unix": [18, 23, 32, 33, 34, 57, 64, 66, 71, 78, 79, 81, 85, 90, 93, 98, 103, 105, 110, 112, 114, 118, 124, 125, 126, 127, 130, 131, 143, 150, 157, 164, 166, 179, 185, 188, 190, 197, 204, 208, 214, 217, 218, 219, 222, 232, 236, 242, 245, 246, 249, 254, 257, 259, 265, 269, 272, 276, 277, 278, 279, 281, 287, 288, 291, 292, 295, 304, 305, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 328, 331, 333, 337, 338, 339, 340, 343, 344, 347, 360, 365, 379, 383, 396, 397, 410, 413, 414, 421, 423, 428, 429, 430, 431, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 451, 452, 453, 454, 455, 456, 457], "man": [18, 90, 120, 259, 277, 295, 304, 310, 315, 318, 322, 344, 347, 444], "snprintf": [18, 439, 447], "pyos_vsnprintf": [18, 55, 439], "va": [18, 401], "vsnprintf": [18, 439, 447], "Their": [18, 61, 85, 88, 91, 148, 196, 256, 277, 320, 321, 331, 343, 363, 371, 388, 403, 404, 405, 410, 448, 452, 455, 456], "corner": [18, 61, 90, 166, 361, 383, 424, 439, 442, 443, 448], "int_max": 18, "c99": [18, 34, 61, 74, 144, 165, 262, 324, 327, 331, 419, 431, 443, 447, 451, 455], "rv": [18, 34, 204], "someth": [18, 22, 32, 35, 71, 73, 76, 78, 82, 83, 84, 85, 87, 88, 90, 91, 93, 96, 97, 98, 99, 101, 102, 103, 114, 116, 126, 133, 137, 159, 164, 165, 190, 202, 214, 217, 225, 236, 238, 239, 241, 243, 249, 250, 255, 256, 269, 276, 277, 282, 288, 290, 296, 304, 319, 320, 321, 337, 340, 343, 347, 363, 365, 366, 367, 372, 377, 378, 383, 385, 388, 394, 400, 403, 406, 407, 411, 415, 416, 424, 427, 437, 438, 439, 440, 441, 442, 443, 444, 447, 449, 451, 458], "bad": [18, 41, 70, 71, 84, 87, 98, 101, 103, 106, 114, 164, 179, 182, 190, 201, 202, 224, 236, 254, 256, 259, 269, 276, 290, 315, 361, 363, 397, 411, 416, 418, 425, 439, 443, 445, 447, 455], "independ": [18, 22, 25, 32, 33, 34, 44, 71, 73, 76, 78, 82, 84, 90, 92, 93, 97, 99, 150, 172, 175, 182, 190, 199, 214, 215, 235, 246, 249, 254, 255, 259, 261, 300, 323, 324, 331, 332, 333, 344, 345, 346, 347, 353, 355, 365, 375, 385, 388, 397, 405, 419, 424, 425, 431, 437, 444, 447, 448, 450, 452, 458], "pyos_string_to_doubl": [18, 55, 444, 446], "endptr": 18, "overflow_except": 18, "whitespac": [18, 38, 62, 83, 84, 92, 93, 102, 105, 114, 120, 131, 136, 139, 145, 150, 157, 164, 167, 175, 179, 182, 188, 191, 192, 197, 210, 214, 229, 234, 236, 243, 250, 254, 272, 280, 296, 299, 301, 313, 324, 325, 327, 328, 336, 340, 342, 344, 358, 376, 385, 388, 390, 412, 416, 424, 430, 437, 440, 443, 444, 446, 451, 452, 453, 456], "whole": [18, 41, 72, 77, 78, 81, 88, 95, 96, 102, 103, 114, 143, 148, 157, 159, 166, 172, 196, 197, 224, 231, 247, 249, 255, 265, 276, 277, 279, 287, 289, 301, 310, 318, 320, 323, 324, 342, 365, 385, 388, 399, 401, 402, 410, 414, 430, 435, 437, 444, 453, 457], "unconvert": 18, "segment": [18, 41, 116, 144, 165, 182, 203, 204, 209, 269, 277, 278, 279, 315, 344, 371, 375, 383, 442, 444, 451, 452], "1e500": 18, "py_huge_v": 18, "out": [18, 23, 30, 33, 34, 37, 38, 41, 54, 55, 57, 58, 62, 70, 71, 74, 76, 78, 79, 81, 83, 85, 87, 88, 90, 92, 93, 96, 98, 99, 101, 102, 103, 104, 105, 106, 107, 114, 116, 127, 128, 133, 134, 137, 142, 148, 151, 153, 157, 164, 165, 166, 167, 172, 173, 175, 179, 180, 182, 184, 185, 192, 194, 200, 201, 202, 204, 215, 219, 224, 229, 232, 236, 238, 239, 241, 245, 246, 247, 249, 250, 254, 255, 262, 269, 276, 277, 280, 283, 286, 290, 293, 295, 296, 301, 304, 310, 313, 315, 318, 319, 320, 321, 323, 324, 325, 327, 328, 331, 337, 340, 343, 347, 358, 361, 362, 363, 365, 366, 367, 371, 375, 376, 383, 384, 385, 388, 392, 394, 398, 399, 400, 401, 402, 403, 404, 411, 413, 414, 416, 417, 418, 419, 421, 423, 424, 425, 428, 434, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456], "pyos_double_to_str": [18, 55], "val": [18, 22, 23, 71, 93, 111, 157, 179, 180, 185, 194, 212, 233, 254, 280, 320, 324, 363, 367, 372, 403, 442, 449], "format_cod": 18, "ptype": [18, 23, 285], "r": [18, 41, 61, 62, 71, 82, 83, 85, 87, 91, 92, 93, 99, 102, 105, 114, 116, 127, 130, 131, 133, 136, 140, 141, 142, 144, 148, 150, 152, 153, 156, 157, 159, 164, 165, 166, 167, 172, 173, 177, 178, 179, 182, 189, 191, 194, 197, 207, 212, 214, 223, 224, 232, 233, 236, 237, 238, 241, 246, 249, 250, 258, 259, 262, 265, 269, 275, 276, 277, 278, 279, 280, 287, 300, 301, 314, 317, 318, 320, 321, 323, 324, 325, 326, 331, 337, 342, 345, 347, 357, 361, 362, 363, 365, 367, 371, 372, 374, 375, 378, 381, 396, 397, 401, 410, 413, 415, 417, 418, 419, 421, 424, 426, 428, 430, 435, 437, 438, 439, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "repr": [18, 23, 24, 47, 61, 62, 66, 73, 92, 99, 104, 105, 116, 133, 165, 170, 171, 172, 180, 182, 200, 214, 231, 236, 242, 269, 296, 311, 318, 324, 325, 327, 331, 340, 342, 355, 358, 362, 363, 366, 367, 400, 402, 403, 410, 411, 419, 421, 425, 427, 437, 438, 440, 443, 444, 445, 446, 447, 451, 452, 453, 454, 455, 456, 457], "py_dtsf_sign": 18, "py_dtsf_add_dot_0": 18, "py_dtsf_alt": 18, "ed": [18, 41, 61, 71, 90, 144, 157, 166, 182, 196, 200, 258, 277, 301, 314, 320, 447, 451, 458], "togeth": [18, 34, 59, 61, 70, 76, 86, 88, 90, 91, 93, 96, 98, 99, 101, 102, 114, 120, 127, 148, 150, 164, 165, 182, 191, 196, 197, 207, 214, 223, 224, 232, 233, 236, 247, 249, 255, 256, 259, 277, 314, 321, 324, 332, 347, 352, 361, 363, 365, 366, 367, 372, 375, 387, 389, 401, 403, 405, 415, 417, 418, 420, 424, 426, 441, 447, 448, 449, 451, 452, 458], "preced": [18, 78, 85, 91, 98, 99, 100, 102, 103, 104, 150, 157, 164, 167, 172, 179, 180, 182, 183, 191, 196, 214, 215, 236, 243, 254, 255, 256, 263, 285, 290, 301, 316, 318, 320, 324, 325, 327, 328, 331, 332, 344, 347, 353, 361, 376, 385, 388, 394, 395, 397, 399, 402, 403, 404, 406, 409, 410, 411, 415, 418, 424, 430, 431, 436, 438, 439, 452, 456], "py_dtst_finit": 18, "py_dtst_infinit": 18, "py_dtst_nan": 18, "signifi": [18, 92, 101, 170, 212, 234, 320, 321, 324, 363, 403, 410, 449], "finit": [18, 25, 34, 82, 90, 93, 102, 144, 175, 210, 249, 262, 300, 324, 331, 403, 419, 450], "infinit": [18, 22, 27, 44, 59, 76, 83, 93, 102, 128, 132, 148, 175, 225, 237, 249, 262, 269, 277, 279, 282, 298, 301, 302, 324, 331, 365, 403, 419, 437, 441, 443, 452], "pyos_stricmp": [18, 443], "s1": [18, 105, 151, 179, 254, 318, 440], "s2": [18, 105, 151, 179, 254, 318, 440], "almost": [18, 32, 34, 62, 70, 73, 74, 76, 82, 83, 85, 87, 88, 90, 99, 102, 103, 105, 112, 114, 119, 121, 144, 147, 166, 175, 225, 239, 246, 254, 262, 269, 276, 300, 301, 321, 324, 328, 347, 363, 365, 366, 383, 399, 403, 409, 418, 419, 426, 431, 436, 438, 440, 443, 445, 449, 452, 458], "pyos_strnicmp": [18, 443], "strncmp": 18, "async": [19, 23, 26, 31, 48, 66, 85, 99, 117, 118, 119, 120, 123, 127, 128, 129, 130, 131, 132, 133, 159, 160, 180, 214, 215, 243, 294, 321, 354, 362, 363, 365, 366, 367, 403, 405, 406, 410, 447, 448, 449, 455, 456, 457, 458], "pycoroobject": 19, "pycoro_typ": 19, "pycoro_checkexact": 19, "pycoro_new": 19, "pyframeobject": [19, 26, 29, 32, 51, 55, 64, 448, 453], "__name__": [19, 29, 44, 59, 61, 82, 83, 85, 91, 92, 98, 99, 100, 120, 137, 145, 147, 156, 172, 177, 179, 182, 186, 189, 200, 214, 215, 217, 238, 243, 255, 269, 273, 276, 279, 280, 282, 284, 295, 303, 305, 306, 315, 319, 320, 322, 324, 340, 343, 345, 362, 363, 365, 375, 376, 378, 383, 395, 403, 407, 425, 439, 440, 443, 445, 447, 449, 452, 453, 454, 455, 457, 458], "__qualname__": [19, 27, 29, 59, 85, 91, 92, 186, 200, 214, 215, 243, 324, 403, 404, 447, 452, 454], "date": [20, 32, 66, 70, 83, 84, 92, 99, 127, 131, 133, 143, 153, 171, 182, 188, 192, 197, 198, 200, 232, 234, 242, 254, 255, 257, 259, 275, 277, 282, 285, 293, 320, 321, 323, 324, 337, 344, 347, 356, 367, 394, 395, 397, 398, 401, 407, 410, 425, 427, 436, 437, 441, 442, 443, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460], "pydatetime_import": 20, "initialis": [20, 99, 232, 257, 306, 331, 366, 403, 430, 453, 455], "pydatetimeapi": 20, "pydatetime_d": 20, "pydatetime_datetim": 20, "pydatetime_tim": 20, "pydatetime_delta": 20, "pydatetime_datetyp": 20, "pydatetime_datetimetyp": 20, "pydatetime_timetyp": 20, "pydatetime_deltatyp": 20, "timedelta": [20, 92, 362, 400, 440, 444, 451, 452, 456, 457, 458], "pydatetime_tzinfotyp": 20, "zone": [20, 66, 171, 172, 198, 242, 247, 318, 344, 401, 431, 440, 442, 444, 458], "info": [20, 23, 61, 71, 78, 79, 87, 91, 98, 99, 114, 119, 131, 148, 159, 172, 180, 214, 216, 219, 231, 232, 239, 243, 255, 256, 257, 259, 269, 284, 285, 289, 314, 337, 347, 361, 363, 365, 372, 396, 397, 405, 427, 434, 438, 440, 442, 443, 444, 447, 449, 451, 453, 457], "tzinfo": [20, 198, 356, 400, 440, 447, 448, 451, 452, 455, 456, 458], "utc": [20, 172, 179, 192, 198, 257, 320, 321, 344, 400, 426, 443, 448, 449, 450, 451, 454, 455, 456], "pydatetime_timezone_utc": [20, 456], "timezon": [20, 99, 179, 192, 198, 320, 321, 340, 356, 400, 426, 448, 449, 451, 452, 454, 455, 456], "pydate_check": 20, "pydate_checkexact": 20, "pydatetime_check": 20, "pydatetime_checkexact": 20, "pytime_check": 20, "pytime_checkexact": 20, "pydelta_check": 20, "pydelta_checkexact": 20, "pytzinfo_check": 20, "pytzinfo_checkexact": 20, "pydate_fromd": 20, "year": [20, 78, 83, 88, 91, 102, 143, 164, 172, 182, 250, 320, 323, 344, 363, 388, 397, 401, 410, 421, 436, 438, 440, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 457, 458], "month": [20, 78, 83, 143, 172, 254, 344, 397, 410, 437, 438, 440, 444, 449], "dai": [20, 71, 78, 82, 83, 92, 102, 103, 120, 143, 157, 172, 215, 233, 250, 254, 257, 262, 277, 321, 323, 344, 362, 397, 400, 407, 410, 426, 429, 437, 440, 442, 443, 444, 449, 453, 455, 457, 458], "pydatetime_fromdateandtim": 20, "hour": [20, 83, 102, 120, 127, 133, 172, 198, 257, 259, 344, 397, 400, 410, 440, 448, 455], "minut": [20, 103, 105, 129, 172, 257, 277, 340, 344, 397, 410, 431, 440, 448, 456], "usecond": 20, "microsecond": [20, 95, 172, 304, 320, 344, 443, 448], "pydatetime_fromdateandtimeandfold": 20, "fold": [20, 172, 190, 191, 192, 197, 238, 279, 324, 326, 400, 401, 441, 442, 455, 456], "pytime_fromtim": 20, "pytime_fromtimeandfold": 20, "pydelta_fromdsu": 20, "lie": [20, 269, 353, 411, 439, 440], "pytimezone_fromoffset": [20, 456], "unnam": [20, 58, 71, 85, 92, 165, 200, 320, 381, 405, 453], "pytimezone_fromoffsetandnam": [20, 456], "tzname": [20, 172, 344, 400, 455, 458], "pydatetime_get_year": 20, "pydatetime_get_month": 20, "pydatetime_get_dai": 20, "31": [20, 91, 102, 143, 165, 167, 172, 200, 223, 247, 250, 300, 301, 323, 324, 331, 344, 394, 397, 399, 400, 410, 426, 440, 442, 443, 451, 456, 457, 458], "pydatetime_date_get_hour": 20, "23": [20, 92, 95, 99, 105, 143, 172, 175, 198, 214, 215, 225, 247, 249, 255, 269, 301, 314, 318, 324, 328, 344, 345, 439, 440, 448, 451, 453, 454, 455, 457, 458], "pydatetime_date_get_minut": 20, "59": [20, 87, 99, 172, 249, 301, 344, 359, 428, 451], "pydatetime_date_get_second": 20, "pydatetime_date_get_microsecond": 20, "999999": [20, 172, 175, 452], "pydatetime_date_get_fold": 20, "pydatetime_date_get_tzinfo": [20, 447], "pydatetime_time_get_hour": 20, "pydatetime_time_get_minut": 20, "pydatetime_time_get_second": 20, "pydatetime_time_get_microsecond": 20, "pydatetime_time_get_fold": 20, "pydatetime_time_get_tzinfo": [20, 447], "delta": [20, 66, 105, 172, 180, 230, 242, 258, 341, 365, 439, 441, 444, 455, 457], "pydatetime_delta_get_dai": 20, "999999999": [20, 172], "pydatetime_delta_get_second": 20, "86399": [20, 172], "pydatetime_delta_get_microsecond": 20, "db": [20, 66, 91, 164, 173, 214, 242, 249, 281, 312, 426, 431, 442, 443, 445, 448], "pydatetime_fromtimestamp": 20, "suitabl": [20, 32, 61, 62, 71, 83, 88, 93, 98, 99, 105, 107, 118, 136, 139, 140, 148, 150, 159, 164, 165, 172, 179, 185, 193, 197, 198, 224, 225, 226, 233, 238, 241, 247, 249, 254, 255, 256, 257, 259, 263, 269, 277, 278, 282, 285, 290, 300, 305, 306, 308, 309, 315, 317, 318, 319, 324, 331, 337, 340, 343, 344, 345, 357, 365, 376, 383, 385, 388, 396, 397, 399, 403, 416, 419, 420, 427, 430, 436, 439, 440, 441, 443, 444, 451, 455, 456, 457], "fromtimestamp": [20, 99, 172, 179, 320, 449, 450, 456], "pydate_fromtimestamp": 20, "pyproperty_typ": [21, 55, 91], "pydescr_newgetset": [21, 55], "pygetsetdef": [21, 55, 56, 61, 73, 74, 97, 243, 362, 456], "getset": [21, 61, 243], "pydescr_newmemb": [21, 55], "pymemberdef": [21, 55, 56, 59, 61, 73, 74, 91, 243, 362, 444, 449, 456], "meth": [21, 43, 61, 76, 83, 85, 324, 363, 438, 441, 448, 452], "pydescr_newmethod": [21, 55], "pymethoddef": [21, 34, 44, 55, 56, 60, 61, 70, 71, 73, 74, 88, 97, 440], "pydescr_newwrapp": 21, "wrapperbas": [21, 456], "pydescr_newclassmethod": [21, 55], "pydescr_isdata": 21, "descr": [21, 91, 165], "pywrapper_new": [21, 55], "pydictobject": [22, 53, 449, 450], "pydict_typ": [22, 55], "pydict_checkexact": 22, "pydict_new": [22, 55], "pydictproxy_new": [22, 55], "mappingproxytyp": [22, 170, 214, 324, 362, 402, 447, 449, 452], "enforc": [22, 85, 92, 118, 175, 185, 194, 214, 232, 277, 304, 322, 324, 325, 361, 363, 385, 386, 388, 402, 405, 411, 415, 416, 430, 438, 439, 442, 445, 448, 451, 452], "modif": [22, 27, 33, 59, 62, 64, 71, 92, 99, 116, 159, 179, 205, 214, 223, 234, 237, 238, 254, 257, 259, 265, 269, 276, 277, 278, 279, 288, 306, 314, 316, 319, 322, 331, 337, 340, 353, 385, 388, 397, 401, 403, 421, 425, 436, 442, 444, 451, 452, 453, 454, 455, 457], "pydict_clear": [22, 55], "pydict_contain": [22, 55, 441, 450], "pydict_containsstr": [22, 450], "pydict_copi": [22, 55], "pydict_setitem": [22, 55, 61, 71], "insert": [22, 30, 32, 33, 34, 37, 58, 70, 71, 76, 78, 88, 93, 105, 109, 114, 115, 116, 120, 136, 139, 140, 150, 151, 157, 161, 166, 170, 179, 182, 197, 214, 215, 221, 225, 236, 238, 246, 250, 255, 258, 270, 276, 280, 282, 289, 298, 302, 320, 324, 325, 327, 331, 353, 362, 376, 378, 383, 385, 388, 398, 403, 405, 407, 411, 415, 416, 417, 424, 430, 435, 437, 440, 442, 443, 444, 446, 449, 452, 453, 454, 455, 456, 457], "hashabl": [22, 47, 61, 83, 85, 111, 150, 151, 172, 179, 210, 214, 215, 221, 243, 247, 275, 279, 300, 324, 363, 378, 403, 405, 440, 441, 443, 444, 447, 448, 449, 452, 454, 458], "steal": [22, 23, 32, 34, 37, 44, 47, 52, 58, 447, 448, 450], "pydict_setitemstr": [22, 55], "pydict_delitem": [22, 55], "pydict_delitemstr": [22, 55], "pydict_getitemref": [22, 55, 450], "miss": [22, 47, 53, 85, 101, 102, 116, 150, 160, 164, 165, 170, 175, 185, 188, 194, 200, 215, 224, 236, 238, 239, 243, 249, 255, 263, 266, 272, 273, 276, 277, 279, 301, 318, 321, 323, 325, 328, 332, 340, 344, 345, 357, 363, 366, 371, 372, 400, 402, 403, 405, 406, 407, 416, 418, 427, 429, 431, 437, 440, 441, 442, 443, 444, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457], "pyobject_getitem": [22, 34, 39, 47, 55, 61, 450], "pydict_getitem": [22, 55, 71, 447], "__hash__": [22, 61, 76, 78, 83, 85, 151, 170, 200, 214, 273, 324, 366, 403, 430, 442, 443, 445, 452, 456], "__eq__": [22, 61, 76, 78, 83, 85, 140, 151, 158, 170, 184, 191, 200, 215, 233, 243, 275, 324, 362, 366, 367, 394, 403, 438, 443, 444, 445, 448, 451, 456], "pydict_getitemwitherror": [22, 55, 450], "gil": [22, 23, 41, 44, 49, 57, 61, 74, 82, 85, 97, 133, 156, 165, 177, 224, 238, 431, 443, 444, 447, 450, 451, 453, 455, 458], "held": [22, 30, 32, 41, 50, 57, 82, 97, 157, 236, 246, 256, 257, 265, 269, 324, 331, 343, 365, 378, 401, 403, 437, 442, 443, 444, 447, 448, 455], "histor": [22, 40, 61, 71, 73, 93, 97, 157, 166, 172, 202, 237, 259, 261, 323, 338, 344, 389, 397, 401, 411, 419, 436, 444, 447, 449, 450, 453, 455], "reason": [22, 23, 32, 34, 41, 45, 46, 47, 49, 55, 61, 71, 72, 74, 76, 82, 83, 84, 85, 86, 87, 88, 90, 92, 93, 98, 99, 101, 102, 103, 105, 106, 110, 133, 144, 145, 156, 166, 170, 172, 175, 182, 183, 185, 200, 202, 205, 212, 219, 225, 230, 231, 234, 236, 237, 238, 245, 246, 255, 256, 257, 258, 259, 262, 276, 277, 279, 282, 285, 287, 290, 296, 308, 314, 316, 318, 321, 324, 331, 337, 340, 342, 344, 347, 361, 363, 365, 366, 367, 370, 372, 375, 383, 400, 401, 402, 403, 407, 414, 415, 419, 425, 439, 440, 442, 445, 447, 451, 452, 453, 454], "suppress": [22, 32, 33, 88, 90, 98, 114, 133, 147, 153, 159, 182, 216, 276, 293, 316, 317, 324, 328, 331, 340, 383, 402, 403, 411, 413, 416, 427, 430, 436, 438, 440, 442, 443, 444, 445, 446, 453, 454, 456, 457], "wasn": [22, 30, 44, 74, 76, 78, 99, 114, 214, 257, 276, 335, 365, 398, 418, 437, 439, 440, 442, 443, 455], "pydict_getitemstr": [22, 55, 71], "pyunicode_fromstr": [22, 34, 55, 62, 70, 74], "pydict_getitemstringref": [22, 55, 450], "pydict_setdefault": 22, "defaultobj": 22, "setdefault": [22, 76, 150, 151, 173, 233, 324, 383, 403, 437, 440, 451, 452], "hash": [22, 32, 33, 47, 61, 62, 66, 73, 76, 82, 83, 85, 88, 139, 151, 153, 157, 163, 170, 173, 212, 214, 238, 239, 242, 258, 273, 281, 293, 308, 318, 331, 362, 366, 374, 378, 399, 401, 403, 405, 407, 410, 413, 424, 425, 430, 431, 439, 440, 442, 443, 444, 447, 448, 450, 451, 452, 455, 458], "pydict_item": [22, 55], "pylistobject": [22, 37, 52, 74], "pydict_kei": [22, 55], "pydict_valu": [22, 55], "pydict_s": [22, 55], "pydict_next": [22, 55], "ppo": 22, "pkei": 22, "pvalu": [22, 23, 70], "Its": [22, 30, 32, 54, 56, 61, 70, 71, 73, 74, 83, 87, 88, 91, 110, 137, 157, 165, 166, 170, 177, 195, 214, 219, 225, 232, 246, 255, 269, 277, 290, 306, 316, 321, 331, 337, 340, 343, 344, 372, 382, 388, 395, 397, 402, 403, 405, 407, 430, 437, 447, 448, 449, 451, 456], "spars": [22, 277, 337], "po": [22, 58, 87, 175, 219, 243, 250, 265, 275, 277, 283, 301, 302, 353, 361, 377, 440, 444, 454], "pylong_aslong": [22, 34, 38, 55, 70, 450, 457], "pylong_fromlong": [22, 34, 38, 44, 55, 70, 71, 73, 74], "pydict_merg": [22, 55], "overrid": [22, 24, 33, 34, 47, 59, 61, 62, 64, 83, 91, 98, 99, 106, 111, 114, 120, 126, 129, 130, 137, 143, 145, 147, 150, 151, 157, 161, 164, 165, 170, 172, 178, 182, 185, 191, 192, 194, 197, 198, 202, 207, 214, 215, 219, 229, 232, 233, 234, 237, 238, 243, 246, 250, 255, 257, 269, 276, 277, 279, 282, 293, 296, 300, 301, 313, 316, 318, 319, 324, 325, 328, 331, 333, 338, 340, 343, 353, 361, 363, 365, 366, 367, 372, 374, 378, 383, 388, 392, 397, 403, 404, 405, 407, 415, 430, 431, 435, 436, 437, 440, 443, 444, 445, 446, 448, 452, 453, 455, 456, 457], "pymapping_kei": [22, 39, 55, 456], "pydict_upd": [22, 55], "pydict_mergefromseq2": [22, 55], "seq2": [22, 93, 275, 437], "merg": [22, 83, 85, 90, 91, 93, 98, 99, 150, 166, 172, 182, 202, 225, 255, 257, 268, 276, 277, 324, 357, 363, 401, 427, 431, 436, 437, 440, 443, 444, 449, 454], "duplic": [22, 50, 86, 93, 140, 150, 153, 156, 157, 159, 175, 179, 180, 185, 194, 197, 200, 204, 243, 247, 255, 259, 277, 284, 318, 324, 325, 340, 361, 363, 365, 383, 397, 402, 403, 405, 406, 416, 417, 422, 439, 441, 442, 443, 447, 449, 451, 454, 456, 458], "win": [22, 32, 90, 99, 166, 168, 225, 276, 300, 334, 365, 436, 446, 451], "pydict_addwatch": [22, 449], "pydict_watchcallback": 22, "pydict_watch": [22, 449], "pydict_clearwatch": 22, "mark": [22, 23, 28, 33, 34, 55, 56, 59, 62, 73, 76, 82, 85, 88, 91, 95, 99, 101, 102, 105, 111, 114, 116, 123, 124, 127, 133, 137, 148, 156, 157, 166, 170, 179, 180, 182, 194, 219, 221, 225, 229, 236, 243, 250, 257, 259, 280, 283, 287, 296, 310, 318, 320, 324, 328, 340, 347, 357, 363, 365, 378, 385, 390, 401, 403, 405, 406, 410, 416, 421, 424, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 449, 451, 452, 453, 454, 455, 456, 457, 458], "watch": [22, 57, 59, 97, 98, 119, 124, 125, 127, 130, 131, 175, 225, 249, 255, 257, 310, 347, 426], "grant": [22, 59, 91, 102, 278, 338, 401, 437, 438, 442], "pydict_unwatch": 22, "pydict_watchev": 22, "pydict_event_ad": 22, "pydict_event_modifi": 22, "pydict_event_delet": 22, "pydict_event_clon": 22, "pydict_event_clear": 22, "pydict_event_dealloc": 22, "new_valu": [22, 27, 340], "unpredict": [22, 27, 202, 259, 277, 388, 391, 403, 430, 439], "recurs": [22, 27, 32, 59, 71, 83, 85, 93, 116, 135, 153, 157, 160, 161, 170, 179, 180, 182, 185, 189, 194, 202, 205, 214, 215, 220, 238, 250, 261, 269, 277, 279, 280, 282, 284, 289, 290, 295, 303, 312, 314, 322, 331, 336, 337, 343, 358, 361, 363, 365, 366, 372, 387, 388, 397, 403, 404, 407, 411, 415, 416, 417, 437, 438, 439, 440, 441, 443, 448, 449, 450, 451, 453, 454, 455, 456, 457], "trigger": [22, 32, 33, 41, 50, 61, 74, 85, 88, 91, 93, 95, 101, 133, 159, 166, 175, 178, 185, 194, 199, 202, 215, 238, 243, 269, 270, 272, 276, 277, 298, 315, 316, 320, 324, 331, 332, 347, 349, 365, 366, 371, 376, 384, 394, 403, 418, 427, 430, 438, 439, 440, 441, 442, 443, 444, 447, 448, 451, 452, 453, 454, 455, 456], "notifi": [22, 57, 98, 101, 128, 132, 133, 236, 237, 269, 343, 349, 378, 450], "let": [23, 41, 64, 70, 71, 74, 76, 77, 78, 82, 83, 84, 86, 87, 88, 90, 91, 92, 93, 98, 99, 101, 102, 103, 104, 105, 106, 114, 120, 133, 145, 150, 151, 157, 159, 161, 165, 179, 189, 215, 219, 225, 234, 239, 245, 250, 254, 255, 256, 257, 276, 280, 289, 301, 312, 313, 320, 321, 347, 353, 361, 363, 366, 367, 388, 401, 405, 407, 413, 415, 416, 418, 421, 424, 426, 436, 437, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 453, 456], "understand": [23, 41, 71, 73, 74, 76, 82, 85, 88, 91, 98, 99, 101, 102, 103, 105, 106, 114, 144, 172, 182, 196, 219, 231, 232, 250, 262, 289, 290, 301, 320, 325, 328, 353, 363, 367, 383, 391, 397, 402, 409, 415, 416, 419, 421, 437, 438, 439, 440, 442, 443, 444, 445, 449, 455], "basic": [23, 32, 34, 61, 62, 66, 71, 72, 73, 75, 78, 82, 83, 85, 90, 91, 93, 96, 99, 101, 114, 115, 129, 132, 137, 138, 140, 145, 148, 150, 157, 159, 166, 171, 173, 178, 179, 200, 219, 223, 229, 230, 234, 236, 238, 240, 242, 243, 244, 246, 255, 256, 257, 269, 270, 276, 286, 289, 290, 300, 304, 308, 309, 318, 319, 320, 321, 323, 324, 328, 337, 340, 343, 347, 352, 353, 358, 363, 366, 367, 372, 373, 382, 387, 388, 389, 390, 394, 399, 405, 411, 415, 417, 419, 420, 421, 424, 426, 431, 437, 439, 440, 442, 443, 444, 446, 451, 452, 453, 454, 457], "posix": [23, 33, 66, 99, 103, 107, 110, 127, 131, 143, 156, 165, 172, 198, 202, 242, 245, 254, 269, 272, 276, 277, 278, 279, 291, 298, 304, 310, 313, 314, 318, 319, 328, 331, 334, 337, 338, 343, 344, 368, 375, 396, 400, 401, 430, 431, 437, 440, 441, 442, 443, 444, 448, 449, 450, 451, 452, 453, 454, 456, 457], "global": [23, 27, 30, 33, 34, 44, 49, 50, 51, 61, 64, 71, 74, 76, 77, 85, 86, 88, 92, 93, 95, 106, 109, 110, 114, 116, 126, 129, 134, 137, 141, 150, 156, 159, 165, 166, 180, 182, 184, 199, 200, 202, 207, 212, 214, 216, 219, 231, 236, 237, 238, 243, 253, 257, 263, 269, 276, 277, 279, 280, 287, 290, 302, 306, 309, 316, 317, 318, 324, 325, 330, 331, 333, 334, 337, 338, 340, 343, 345, 347, 357, 361, 363, 365, 366, 367, 372, 374, 376, 378, 388, 395, 402, 403, 404, 406, 407, 410, 412, 413, 415, 416, 425, 430, 431, 434, 436, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "suppos": [23, 58, 61, 62, 71, 75, 83, 96, 99, 103, 170, 175, 182, 185, 188, 237, 291, 301, 316, 318, 320, 321, 323, 325, 337, 353, 367, 378, 425, 442, 443, 444, 451, 456, 457], "pyarg_": 23, "concret": [23, 31, 32, 66, 73, 74, 92, 102, 111, 116, 156, 165, 172, 186, 197, 208, 219, 238, 241, 246, 256, 276, 300, 311, 319, 324, 327, 331, 343, 365, 371, 383, 385, 392, 400, 407, 439, 440, 443, 452, 453, 456, 458], "traceback": [23, 33, 34, 41, 64, 66, 71, 74, 77, 83, 87, 90, 91, 92, 93, 96, 97, 98, 99, 105, 109, 114, 119, 133, 134, 135, 147, 150, 153, 157, 159, 165, 166, 172, 174, 175, 177, 180, 182, 200, 202, 214, 236, 242, 243, 247, 253, 255, 256, 257, 269, 270, 279, 280, 282, 293, 297, 301, 319, 320, 324, 325, 327, 328, 331, 343, 345, 361, 362, 364, 365, 366, 367, 383, 402, 404, 405, 411, 415, 416, 417, 418, 421, 424, 427, 430, 431, 438, 439, 440, 441, 442, 443, 444, 445, 449, 451, 452, 456, 457, 458], "although": [23, 25, 27, 34, 41, 61, 70, 76, 78, 83, 87, 88, 92, 98, 99, 128, 133, 143, 148, 165, 170, 172, 179, 182, 185, 186, 189, 194, 195, 220, 237, 243, 246, 249, 250, 255, 259, 261, 269, 276, 277, 278, 279, 282, 289, 301, 323, 325, 331, 334, 337, 344, 346, 383, 387, 389, 390, 391, 400, 401, 402, 403, 405, 407, 409, 411, 415, 416, 417, 418, 419, 423, 425, 430, 436, 437, 449, 450, 453, 454, 455], "forbidden": [23, 41, 92, 106, 133, 230, 282, 324, 343, 443, 447, 454], "clean": [23, 32, 34, 71, 73, 76, 85, 97, 99, 103, 114, 116, 126, 133, 134, 148, 156, 180, 182, 190, 194, 197, 201, 202, 236, 240, 243, 259, 268, 269, 270, 319, 320, 323, 337, 338, 340, 372, 375, 378, 391, 403, 405, 431, 437, 438, 439, 441, 442, 443, 444, 445, 447, 449, 451, 452, 457, 458], "continu": [23, 28, 34, 35, 57, 59, 71, 76, 77, 78, 83, 85, 91, 93, 97, 98, 105, 106, 108, 110, 111, 116, 120, 133, 144, 145, 148, 159, 166, 170, 182, 185, 188, 189, 191, 196, 200, 217, 230, 231, 234, 237, 238, 239, 249, 255, 259, 268, 276, 277, 278, 279, 280, 296, 300, 301, 314, 315, 318, 319, 321, 323, 324, 333, 337, 344, 354, 361, 365, 367, 372, 376, 390, 399, 401, 402, 403, 404, 405, 406, 407, 409, 410, 415, 418, 422, 423, 424, 427, 430, 436, 437, 439, 440, 441, 442, 443, 444, 446, 447, 449, 451, 452, 453, 454, 456, 457], "prepar": [23, 57, 64, 66, 76, 99, 105, 106, 143, 147, 172, 180, 214, 219, 221, 224, 233, 242, 246, 257, 277, 282, 309, 318, 328, 331, 340, 341, 361, 362, 365, 372, 388, 389, 392, 397, 401, 424, 425, 443, 445, 447, 453, 454, 456, 458], "propag": [23, 32, 34, 35, 50, 88, 93, 98, 99, 119, 133, 147, 150, 160, 202, 238, 255, 256, 269, 279, 280, 284, 307, 314, 315, 320, 324, 328, 331, 344, 358, 365, 366, 367, 372, 378, 402, 403, 405, 407, 418, 440, 442, 455], "mysteri": [23, 71, 78, 103, 279, 316, 453], "sy": [23, 24, 28, 30, 32, 33, 34, 44, 57, 62, 64, 66, 71, 77, 78, 83, 85, 86, 88, 95, 97, 98, 99, 100, 101, 105, 108, 109, 110, 116, 127, 130, 131, 133, 134, 135, 137, 145, 147, 153, 159, 164, 165, 166, 175, 177, 179, 180, 182, 189, 199, 202, 203, 204, 205, 207, 212, 214, 216, 217, 218, 219, 223, 234, 236, 238, 239, 242, 243, 246, 249, 250, 253, 255, 256, 257, 262, 266, 267, 269, 276, 277, 280, 282, 283, 284, 285, 289, 290, 291, 293, 294, 295, 297, 303, 306, 309, 310, 313, 314, 315, 316, 318, 319, 320, 322, 324, 327, 328, 334, 335, 337, 339, 340, 343, 345, 347, 357, 358, 359, 362, 365, 366, 367, 372, 375, 376, 378, 383, 388, 392, 395, 396, 397, 398, 402, 403, 405, 407, 411, 412, 413, 418, 421, 423, 425, 426, 427, 428, 430, 431, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 450, 451], "exc_info": [23, 32, 34, 71, 98, 99, 137, 180, 182, 255, 257, 314, 331, 337, 365, 381, 383, 402, 403, 425, 440, 442, 443, 445, 448, 450, 454], "former": [23, 30, 43, 83, 114, 137, 149, 165, 166, 172, 175, 238, 243, 255, 290, 304, 314, 320, 347, 361, 363, 374, 403, 405, 407, 448, 451, 452, 455, 456], "caught": [23, 97, 110, 114, 121, 133, 147, 156, 202, 269, 277, 284, 287, 305, 314, 315, 318, 320, 331, 340, 344, 347, 365, 366, 389, 398, 402, 403, 411, 418, 438, 443, 445, 453, 457], "stop": [23, 28, 33, 54, 83, 92, 93, 95, 98, 99, 101, 115, 124, 127, 131, 133, 137, 145, 149, 150, 151, 172, 179, 180, 182, 186, 196, 202, 214, 216, 217, 224, 236, 243, 249, 255, 256, 257, 259, 269, 270, 276, 277, 279, 280, 283, 284, 290, 296, 300, 315, 319, 324, 328, 340, 343, 353, 359, 361, 362, 363, 365, 367, 382, 383, 402, 403, 405, 416, 417, 418, 419, 437, 438, 439, 440, 442, 443, 444, 445, 447, 449, 451, 454, 455, 456], "pyerr_clear": [23, 34, 55, 71, 453], "pyerr_printex": [23, 55], "set_sys_last_var": 23, "stderr": [23, 32, 33, 41, 57, 62, 70, 71, 83, 98, 99, 109, 120, 124, 127, 131, 147, 159, 179, 182, 203, 216, 218, 234, 236, 246, 255, 256, 257, 269, 276, 277, 293, 303, 315, 320, 324, 328, 331, 337, 340, 343, 345, 358, 363, 365, 375, 376, 383, 403, 425, 426, 427, 430, 431, 436, 437, 441, 443, 444, 445, 451, 453, 454, 455, 456, 458], "systemexit": [23, 64, 98, 110, 133, 134, 147, 158, 202, 236, 331, 343, 382, 404, 418, 425, 442, 443, 445, 455], "exit": [23, 32, 33, 34, 50, 57, 64, 66, 70, 71, 82, 84, 85, 87, 90, 93, 99, 109, 110, 116, 120, 124, 126, 127, 129, 130, 131, 132, 133, 143, 145, 147, 156, 158, 159, 164, 166, 175, 177, 178, 182, 189, 202, 203, 207, 217, 236, 237, 240, 242, 249, 255, 257, 269, 276, 277, 280, 290, 291, 293, 297, 301, 310, 315, 316, 317, 318, 319, 320, 324, 328, 331, 332, 338, 340, 343, 345, 355, 357, 361, 362, 365, 366, 367, 374, 375, 376, 378, 379, 382, 383, 386, 395, 396, 397, 402, 403, 405, 413, 418, 421, 423, 425, 426, 430, 431, 436, 437, 438, 439, 440, 441, 442, 443, 444, 447, 448, 451, 454, 455, 456, 457, 458], "fatal": [23, 32, 41, 57, 71, 134, 203, 321, 337, 365, 413, 418, 444, 445, 447, 452, 455], "last_exc": [23, 280, 331, 358, 449], "backward": [23, 24, 32, 55, 59, 62, 64, 70, 71, 78, 85, 88, 98, 99, 114, 115, 122, 137, 157, 166, 172, 180, 182, 183, 185, 194, 196, 197, 202, 217, 225, 230, 234, 236, 237, 238, 243, 246, 255, 256, 259, 261, 275, 277, 278, 282, 284, 290, 296, 300, 301, 304, 314, 318, 321, 324, 328, 329, 336, 338, 340, 344, 358, 361, 363, 371, 372, 394, 405, 407, 410, 411, 415, 435, 436, 437, 439, 440, 442, 443, 445, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458], "last_typ": [23, 331, 425, 445, 449], "last_valu": [23, 92, 200, 331, 358, 425, 449], "last_traceback": [23, 331, 403, 425, 449], "pyerr_print": [23, 55, 70, 71], "alia": [23, 30, 39, 57, 58, 83, 85, 92, 99, 101, 115, 116, 121, 127, 131, 148, 151, 156, 165, 167, 172, 180, 184, 186, 194, 200, 202, 207, 214, 217, 219, 232, 238, 243, 246, 255, 269, 276, 277, 280, 296, 300, 301, 304, 310, 311, 315, 318, 320, 321, 328, 330, 338, 343, 353, 361, 362, 363, 370, 379, 381, 382, 383, 394, 397, 402, 403, 404, 411, 415, 431, 445, 447, 448, 449, 450, 453, 455, 456, 458], "unraisablehook": [23, 28, 110, 135, 320, 331, 340, 425, 450, 457], "util": [23, 30, 31, 32, 34, 66, 91, 92, 93, 99, 109, 112, 116, 118, 127, 145, 148, 149, 153, 156, 166, 175, 176, 179, 180, 182, 183, 185, 189, 192, 194, 196, 197, 219, 227, 230, 237, 239, 242, 244, 258, 260, 267, 271, 276, 293, 297, 304, 314, 322, 324, 326, 328, 343, 347, 361, 365, 368, 375, 386, 426, 427, 431, 436, 437, 439, 441, 442, 444, 447, 449, 450, 451, 452, 453, 454, 455, 457, 458], "imposs": [23, 39, 52, 61, 76, 78, 83, 98, 148, 202, 256, 269, 277, 279, 294, 323, 340, 343, 363, 365, 377, 385, 397, 411, 437, 438, 439, 440, 441, 443, 444, 449, 454], "__del__": [23, 32, 50, 61, 71, 82, 216, 246, 269, 298, 320, 338, 340, 366, 403, 453], "pyerr_displayexcept": [23, 55, 449], "displai": [23, 32, 33, 41, 66, 78, 85, 87, 92, 95, 99, 105, 112, 114, 116, 119, 133, 145, 147, 150, 158, 168, 175, 177, 180, 182, 189, 192, 202, 203, 227, 236, 242, 243, 247, 254, 255, 259, 268, 277, 279, 280, 289, 293, 295, 301, 302, 303, 322, 324, 325, 326, 328, 331, 337, 342, 345, 347, 350, 353, 355, 357, 358, 361, 365, 372, 375, 376, 379, 396, 401, 403, 410, 411, 416, 418, 419, 421, 423, 424, 426, 427, 428, 430, 431, 436, 437, 439, 440, 441, 442, 443, 444, 446, 447, 449, 451, 452, 453, 454, 455, 456, 457, 458], "statement": [23, 34, 46, 47, 52, 59, 61, 64, 66, 70, 71, 78, 83, 84, 85, 87, 88, 93, 97, 99, 109, 110, 114, 120, 130, 132, 133, 137, 142, 149, 156, 158, 161, 165, 173, 174, 175, 177, 180, 182, 190, 202, 207, 212, 214, 223, 231, 236, 237, 238, 240, 242, 243, 245, 246, 251, 258, 259, 265, 269, 270, 275, 276, 277, 280, 288, 294, 297, 301, 310, 317, 318, 319, 320, 321, 324, 328, 330, 331, 333, 337, 338, 339, 340, 345, 355, 361, 363, 365, 366, 367, 377, 381, 385, 386, 387, 397, 401, 404, 405, 406, 407, 408, 410, 412, 413, 414, 415, 418, 421, 422, 423, 424, 425, 430, 437, 438, 439, 440, 441, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458], "pyerr_setstr": [23, 34, 55, 71, 73, 74, 97, 444, 449], "pyexc_runtimeerror": [23, 55, 73], "py_incref": [23, 34, 50, 55, 65, 71, 73, 74, 84, 85, 447, 448, 449, 457], "pyerr_setobject": [23, 55, 71, 449], "pyerr_format": [23, 55, 73, 88, 444, 454], "pyunicode_fromformat": [23, 55, 62, 73, 74, 447, 449, 452, 453, 454], "ascii": [23, 30, 33, 41, 47, 56, 66, 69, 90, 98, 99, 102, 103, 105, 106, 112, 114, 116, 127, 131, 136, 138, 148, 165, 166, 172, 180, 184, 185, 186, 189, 190, 191, 192, 194, 195, 196, 197, 198, 203, 214, 219, 226, 237, 242, 246, 250, 254, 268, 271, 272, 277, 282, 296, 299, 301, 313, 317, 319, 320, 321, 324, 325, 326, 337, 340, 372, 388, 394, 397, 401, 409, 410, 416, 421, 423, 425, 430, 437, 439, 440, 441, 442, 443, 445, 447, 448, 449, 450, 451, 452, 454, 455, 456, 458], "pyerr_formatv": [23, 55, 454], "pyerr_setnon": [23, 55], "shorthand": [23, 76, 83, 96, 114, 136, 180, 182, 247, 284, 318, 342, 347, 358, 363, 376, 402, 415, 418, 440, 441, 453], "pyerr_badargu": [23, 55], "pyexc_typeerror": [23, 55, 71, 73, 74], "illeg": [23, 46, 87, 93, 105, 148, 158, 185, 194, 201, 202, 277, 296, 315, 321, 324, 344, 353, 383, 385, 397, 402, 403, 406, 410, 411, 438, 439, 441, 442, 444, 451, 456, 457], "pyerr_nomemori": [23, 41, 55, 71], "pyexc_memoryerror": [23, 55], "pyerr_setfromerrno": [23, 55, 71], "gotten": [23, 81, 172, 175, 269, 298, 437], "strerror": [23, 201, 202, 254, 277, 443], "eintr": [23, 201, 202, 269, 444], "interrupt": [23, 32, 99, 110, 120, 133, 166, 167, 175, 180, 201, 202, 214, 236, 259, 269, 277, 298, 310, 311, 315, 318, 319, 320, 328, 343, 344, 365, 372, 382, 395, 401, 403, 413, 416, 418, 443, 444, 448, 451, 454, 457, 458], "pyerr_checksign": [23, 55, 449], "pyerr_setfromerrnowithfilenameobject": [23, 55], "filenameobject": 23, "oserror": [23, 105, 120, 124, 127, 165, 172, 177, 202, 204, 207, 212, 214, 219, 223, 232, 234, 238, 243, 246, 265, 268, 269, 277, 278, 279, 285, 288, 304, 310, 314, 315, 317, 318, 321, 328, 337, 340, 344, 370, 372, 381, 398, 402, 418, 425, 444, 447, 452, 453, 457], "filenameobject2": 23, "pyerr_setfromerrnowithfilenam": [23, 55], "pyerr_setfromwindowserr": [23, 55], "ierr": 23, "window": [23, 32, 33, 34, 41, 55, 57, 61, 64, 66, 69, 71, 72, 76, 78, 79, 80, 81, 82, 83, 85, 88, 98, 99, 103, 105, 106, 107, 110, 114, 120, 126, 127, 131, 145, 156, 157, 161, 165, 168, 202, 203, 214, 218, 220, 232, 238, 242, 246, 249, 254, 257, 262, 263, 265, 268, 269, 276, 277, 278, 279, 288, 298, 310, 311, 313, 314, 315, 316, 317, 318, 320, 321, 322, 331, 333, 334, 337, 338, 339, 340, 343, 344, 346, 348, 349, 350, 353, 355, 365, 372, 375, 379, 383, 396, 397, 399, 400, 401, 403, 410, 413, 414, 416, 421, 423, 425, 428, 430, 431, 433, 434, 437, 438, 439, 441, 442, 445, 446, 447, 449, 450, 451, 453, 454, 457, 458], "windowserror": [23, 165, 202, 381, 452], "getlasterror": [23, 165], "win32": [23, 62, 82, 84, 131, 165, 257, 269, 277, 318, 328, 331, 334, 381, 382, 436, 437, 443, 445, 451, 454], "formatmessag": [23, 165, 202], "pyexc_windowserror": [23, 55], "pyerr_setexcfromwindowserr": [23, 55], "pyerr_setfromwindowserrwithfilenam": [23, 55], "fsdecod": [23, 85, 277, 331, 451, 455], "pyerr_setexcfromwindowserrwithfilenameobject": [23, 55], "filename2": [23, 202], "pyerr_setexcfromwindowserrwithfilenam": [23, 55], "pyerr_setimporterror": [23, 55, 453, 455], "msg": [23, 82, 99, 103, 116, 123, 133, 159, 165, 179, 185, 186, 187, 189, 190, 191, 192, 193, 194, 196, 197, 198, 202, 217, 224, 226, 231, 238, 250, 254, 255, 257, 259, 269, 272, 301, 317, 318, 324, 340, 358, 365, 370, 372, 389, 425, 440, 441, 442, 450, 451, 452, 453, 454, 455], "importerror": [23, 99, 101, 202, 238, 256, 266, 269, 282, 284, 316, 321, 331, 340, 365, 385, 398, 407, 411, 425, 431, 438, 440, 443, 449, 452, 453, 455, 456, 458], "pyerr_setimporterrorsubclass": [23, 55, 455], "pyerr_syntaxlocationobject": 23, "lineno": [23, 95, 116, 137, 157, 177, 180, 182, 202, 207, 243, 250, 253, 255, 272, 280, 282, 290, 294, 296, 301, 313, 340, 358, 359, 365, 376, 406, 430, 447, 454, 455, 457], "col_offset": [23, 116, 180, 457], "syntaxerror": [23, 64, 77, 102, 116, 147, 149, 158, 182, 202, 214, 236, 301, 340, 355, 358, 363, 402, 404, 406, 410, 411, 417, 418, 421, 424, 425, 437, 438, 439, 448, 449, 451, 453, 454, 455, 456], "subsystem": [23, 93, 99, 238, 328, 347, 436, 440, 442, 444, 457], "think": [23, 58, 62, 73, 76, 78, 83, 88, 93, 97, 99, 102, 103, 105, 182, 190, 214, 225, 240, 249, 255, 276, 282, 363, 366, 367, 403, 405, 407, 415, 416, 417, 424, 439, 442, 443], "pyerr_syntaxlocationex": [23, 55], "pyerr_syntaxloc": [23, 55], "omit": [23, 56, 58, 73, 76, 85, 88, 99, 100, 102, 114, 115, 116, 120, 150, 157, 164, 165, 166, 172, 179, 180, 182, 189, 190, 191, 193, 202, 212, 214, 219, 223, 234, 236, 237, 240, 246, 247, 253, 254, 259, 263, 265, 269, 276, 277, 280, 282, 287, 296, 300, 301, 302, 310, 313, 314, 316, 317, 318, 320, 323, 324, 325, 337, 343, 353, 358, 360, 361, 363, 365, 366, 376, 377, 384, 386, 388, 389, 396, 401, 402, 403, 405, 406, 410, 411, 421, 424, 430, 436, 440, 441, 442, 444, 445, 447, 448, 452, 453, 455, 456], "pyerr_badinternalcal": [23, 55], "pyexc_systemerror": [23, 55], "mirror": [23, 106, 212, 255, 256, 257, 347, 354, 364, 390, 430, 441], "machineri": [23, 44, 61, 71, 85, 91, 99, 111, 148, 198, 200, 214, 239, 243, 256, 284, 321, 331, 362, 378, 382, 398, 399, 403, 407, 430, 436, 438, 439, 441, 444, 447, 448, 449, 451, 452, 453, 454, 455, 456], "nor": [23, 32, 33, 61, 73, 74, 82, 85, 87, 92, 96, 106, 111, 127, 136, 137, 148, 177, 180, 231, 232, 255, 258, 262, 269, 272, 276, 277, 280, 282, 284, 285, 298, 300, 301, 312, 319, 320, 321, 324, 331, 332, 338, 353, 357, 363, 365, 372, 379, 400, 401, 403, 405, 430, 431, 447, 449, 451, 453, 455, 456], "intent": [23, 30, 70, 71, 88, 99, 170, 172, 185, 194, 246, 262, 277, 331, 363, 365, 366, 383, 402, 403, 440, 441, 443, 445, 452, 453], "pyerr_warnex": [23, 55, 376, 442], "stack_level": 23, "forth": [23, 83, 90, 102, 103, 150, 277, 301, 310, 324, 403, 437, 439, 440, 442], "pyexc_warn": [23, 55], "pyexc_except": [23, 55], "pyexc_runtimewarn": [23, 55], "command": [23, 32, 33, 34, 64, 66, 70, 71, 75, 76, 77, 79, 83, 84, 87, 98, 99, 100, 101, 102, 105, 107, 109, 112, 118, 119, 120, 124, 130, 131, 135, 147, 150, 158, 166, 177, 180, 182, 195, 203, 211, 212, 214, 219, 234, 237, 239, 242, 246, 256, 269, 279, 285, 287, 288, 290, 291, 292, 295, 306, 309, 313, 314, 317, 321, 324, 329, 331, 333, 338, 347, 353, 359, 361, 375, 376, 379, 383, 388, 395, 403, 404, 411, 412, 413, 414, 422, 423, 424, 425, 428, 429, 431, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 454, 456, 457, 458], "pyerr_warnexplicitobject": 23, "registri": [23, 31, 33, 62, 63, 66, 138, 157, 164, 184, 186, 192, 215, 238, 242, 247, 257, 263, 282, 285, 321, 331, 333, 363, 372, 376, 380, 382, 388, 437, 443, 444, 455, 458], "explicit": [23, 28, 30, 34, 44, 64, 71, 74, 76, 83, 88, 97, 98, 102, 103, 109, 114, 127, 134, 157, 159, 170, 172, 175, 179, 194, 199, 202, 214, 219, 232, 238, 247, 257, 269, 276, 280, 282, 296, 306, 313, 314, 318, 319, 320, 324, 325, 327, 338, 340, 363, 366, 378, 386, 389, 396, 403, 405, 407, 413, 415, 416, 417, 425, 431, 436, 437, 438, 442, 444, 445, 447, 449, 451, 456, 457, 458], "straightforward": [23, 34, 71, 82, 83, 84, 97, 99, 105, 106, 148, 150, 157, 165, 247, 256, 276, 310, 318, 361, 366, 367, 415, 424, 439, 440, 443, 448, 451, 452], "warn_explicit": [23, 376, 455], "pyerr_warnexplicit": [23, 55], "pyerr_warnformat": [23, 55], "pyerr_resourcewarn": [23, 55, 455], "resourcewarn": [23, 119, 202, 216, 277, 320, 328, 340, 365, 376, 425, 450, 451, 455], "warningmessag": [23, 455], "pyerr_set": 23, "pyerr_restor": [23, 55, 61, 73, 449, 450], "pyerr_exceptionmatch": [23, 34, 55], "shown": [23, 34, 41, 71, 75, 87, 88, 90, 92, 97, 98, 99, 100, 101, 104, 106, 107, 111, 114, 140, 150, 159, 170, 175, 177, 179, 180, 182, 192, 202, 203, 236, 255, 256, 276, 280, 290, 295, 301, 307, 325, 328, 344, 353, 358, 361, 365, 366, 367, 371, 376, 378, 403, 414, 416, 418, 436, 443, 447, 454, 455, 456, 457, 458], "pyerr_givenexceptionmatch": [23, 55], "subtupl": 23, "pyerr_getraisedexcept": [23, 55, 449, 450], "catch": [23, 34, 41, 76, 83, 85, 90, 93, 99, 101, 105, 106, 114, 116, 133, 157, 164, 182, 202, 233, 243, 255, 276, 277, 304, 313, 315, 320, 328, 340, 363, 365, 372, 403, 405, 418, 437, 440, 442, 443, 444, 445, 448, 449, 451, 452, 453, 455, 458], "pyerr_setraisedexcept": [23, 55, 449, 450], "pyerr_gethandledexcept": [23, 55, 448], "pyerr_fetch": [23, 55, 61, 73, 449, 450, 453], "ptraceback": 23, "invalid": [23, 28, 33, 55, 57, 59, 61, 62, 71, 76, 78, 83, 85, 87, 91, 92, 96, 98, 102, 105, 106, 110, 120, 121, 139, 143, 147, 149, 150, 153, 165, 172, 173, 175, 185, 188, 190, 192, 194, 197, 198, 200, 201, 202, 205, 214, 215, 216, 219, 223, 227, 229, 231, 233, 236, 238, 243, 246, 250, 256, 259, 262, 269, 276, 277, 278, 282, 291, 293, 301, 304, 310, 311, 315, 318, 321, 323, 324, 325, 328, 337, 340, 343, 344, 353, 355, 356, 363, 365, 371, 373, 376, 377, 378, 381, 385, 394, 400, 402, 403, 406, 411, 416, 418, 424, 430, 437, 443, 444, 445, 446, 447, 448, 449, 452, 453, 454, 455, 456, 457, 458], "awai": [23, 27, 32, 34, 74, 83, 88, 93, 98, 103, 114, 156, 166, 172, 175, 182, 202, 236, 238, 242, 243, 262, 269, 270, 276, 277, 290, 301, 372, 414, 415, 427, 439, 440, 445, 453, 454], "pyerr_normalizeexcept": [23, 55, 449, 450], "tb": [23, 99, 180, 202, 236, 358, 359, 362, 367, 403, 442, 443, 449, 450, 453], "avoid": [23, 24, 32, 33, 34, 41, 43, 59, 61, 70, 71, 73, 74, 76, 83, 85, 86, 88, 90, 92, 93, 97, 98, 101, 102, 103, 104, 105, 108, 111, 114, 115, 119, 120, 123, 126, 127, 131, 132, 133, 140, 148, 150, 156, 157, 159, 161, 165, 166, 172, 175, 199, 202, 204, 214, 216, 225, 226, 231, 234, 237, 243, 247, 250, 253, 256, 257, 259, 262, 265, 269, 270, 273, 276, 277, 282, 296, 300, 301, 303, 314, 315, 318, 320, 322, 323, 324, 328, 331, 337, 340, 342, 343, 344, 345, 347, 362, 363, 365, 367, 378, 382, 384, 385, 386, 388, 392, 402, 403, 405, 406, 407, 410, 411, 415, 416, 417, 418, 424, 427, 431, 436, 437, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458], "circumst": [23, 41, 76, 83, 90, 92, 98, 99, 157, 202, 232, 255, 258, 276, 277, 304, 314, 323, 372, 379, 403, 411, 415, 418, 425, 441, 448, 453, 457], "unnorm": [23, 300], "instanti": [23, 61, 74, 82, 92, 97, 98, 99, 106, 111, 116, 120, 126, 127, 130, 133, 145, 150, 165, 166, 170, 172, 179, 183, 185, 187, 192, 219, 229, 231, 234, 237, 238, 255, 256, 257, 259, 269, 273, 276, 279, 280, 282, 300, 310, 311, 313, 317, 318, 319, 324, 340, 347, 353, 362, 363, 365, 366, 367, 375, 379, 385, 386, 389, 391, 403, 411, 415, 418, 442, 443, 449, 451, 454, 456, 457, 458], "delai": [23, 82, 90, 99, 108, 119, 123, 133, 166, 234, 236, 243, 257, 269, 307, 315, 318, 321, 340, 361, 367, 372, 373, 403, 425, 443, 447, 451, 455, 456, 457], "implicitli": [23, 33, 83, 85, 88, 97, 109, 120, 127, 136, 156, 157, 159, 170, 173, 177, 202, 212, 229, 237, 246, 256, 306, 315, 317, 318, 320, 324, 325, 328, 363, 366, 376, 387, 402, 403, 405, 407, 410, 411, 415, 418, 444, 447, 448, 451, 452, 454, 455, 456, 457], "__traceback__": [23, 202, 331, 358, 362, 403, 405, 411, 445, 448], "snippet": [23, 66, 76, 87, 92, 99, 119, 133, 160, 174, 233, 242, 256, 313, 321, 343, 417, 436, 439, 440, 442, 454], "pyexception_settraceback": [23, 55], "freshli": [23, 83, 88, 243, 362], "pyerr_sethandledexcept": [23, 55, 448], "pyerr_getexcinfo": [23, 55, 448], "kept": [23, 24, 32, 44, 62, 83, 88, 97, 99, 109, 150, 157, 165, 173, 175, 184, 188, 197, 200, 202, 203, 214, 232, 233, 236, 246, 249, 257, 259, 275, 293, 294, 298, 301, 316, 319, 321, 323, 329, 363, 366, 378, 399, 411, 418, 427, 437, 439, 444, 445, 447, 448, 449, 450, 451, 452, 453, 458], "pyerr_setexcinfo": [23, 55, 448], "deriv": [23, 32, 47, 57, 59, 74, 76, 85, 86, 111, 114, 116, 137, 147, 148, 150, 156, 165, 166, 167, 170, 172, 186, 188, 190, 191, 192, 202, 214, 215, 219, 229, 233, 237, 238, 239, 243, 246, 249, 250, 255, 256, 276, 277, 279, 290, 292, 294, 295, 296, 310, 319, 321, 325, 331, 347, 361, 363, 365, 370, 372, 374, 376, 383, 386, 391, 394, 395, 401, 403, 406, 407, 410, 415, 418, 437, 440, 441, 442, 443, 444, 445, 448, 452, 453, 455, 456], "main": [23, 32, 33, 34, 41, 44, 57, 61, 64, 70, 71, 72, 73, 74, 76, 82, 83, 85, 87, 88, 90, 91, 97, 98, 99, 100, 109, 110, 114, 117, 118, 119, 120, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 147, 156, 157, 159, 160, 166, 177, 179, 182, 183, 185, 188, 189, 190, 193, 194, 195, 197, 215, 217, 219, 225, 229, 236, 238, 239, 243, 246, 255, 256, 259, 269, 276, 277, 279, 282, 304, 306, 315, 316, 319, 320, 324, 327, 331, 333, 335, 337, 340, 343, 345, 347, 350, 353, 359, 361, 363, 365, 366, 367, 372, 375, 378, 386, 388, 390, 395, 396, 404, 407, 417, 425, 426, 427, 430, 436, 439, 440, 442, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "invoc": [23, 28, 54, 71, 85, 88, 95, 159, 165, 199, 261, 269, 290, 343, 358, 365, 375, 383, 390, 402, 403, 413, 415, 430, 433, 434, 441, 451, 453, 457], "press": [23, 79, 90, 99, 120, 144, 166, 236, 268, 280, 305, 347, 353, 361, 365, 397, 444, 451], "ctrl": [23, 84, 90, 99, 120, 129, 158, 167, 269, 280, 315, 319, 320, 416, 430, 437, 442, 451, 457], "sigint": [23, 110, 129, 269, 280, 298, 315, 328, 365, 447, 451, 457], "keyboardinterrupt": [23, 98, 99, 110, 129, 133, 147, 202, 269, 298, 315, 365, 383, 395, 413, 418, 425, 442, 443, 444, 445, 455, 456, 457], "pyerr_setinterrupt": [23, 55], "simul": [23, 88, 90, 91, 99, 104, 110, 120, 127, 130, 150, 166, 223, 225, 282, 300, 308, 315, 327, 361, 378, 438, 439, 447, 453], "arriv": [23, 110, 182, 232, 234, 269, 300, 315, 319, 321, 344, 417, 437], "pyerr_setinterruptex": [23, 55, 447], "signum": [23, 82, 110, 120, 203, 277, 315], "sig_dfl": [23, 110, 315, 328], "sig_ign": [23, 110, 315, 328], "outsid": [23, 83, 88, 91, 93, 98, 99, 102, 103, 119, 120, 126, 133, 143, 148, 153, 156, 160, 165, 166, 172, 175, 185, 188, 194, 197, 202, 214, 234, 236, 240, 250, 282, 295, 296, 301, 307, 314, 318, 321, 324, 325, 327, 337, 340, 343, 344, 345, 353, 361, 363, 376, 388, 390, 397, 401, 402, 403, 410, 411, 415, 425, 440, 441, 444, 449, 451, 455, 456, 457, 458], "pysignal_setwakeupfd": [23, 443], "fd": [23, 24, 82, 120, 124, 127, 135, 166, 204, 246, 268, 277, 291, 310, 311, 314, 315, 318, 339, 360, 361, 443], "disabl": [23, 28, 32, 33, 34, 41, 55, 61, 71, 92, 98, 99, 102, 114, 120, 124, 129, 137, 157, 164, 166, 175, 179, 182, 190, 203, 207, 212, 214, 215, 216, 231, 238, 243, 246, 250, 255, 256, 257, 269, 276, 277, 280, 282, 290, 301, 302, 309, 310, 313, 315, 316, 317, 318, 320, 321, 324, 331, 338, 340, 353, 361, 363, 365, 366, 372, 376, 378, 381, 388, 400, 403, 407, 413, 418, 430, 431, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 458], "set_wakeup_fd": [23, 315, 443, 454, 456], "socket": [23, 66, 78, 85, 93, 94, 96, 98, 102, 105, 118, 121, 124, 125, 135, 148, 160, 161, 176, 196, 201, 202, 212, 224, 231, 234, 236, 237, 242, 244, 245, 246, 247, 248, 255, 256, 257, 269, 270, 277, 279, 287, 289, 304, 310, 311, 315, 317, 319, 322, 337, 347, 378, 383, 388, 403, 414, 427, 431, 437, 438, 439, 440, 441, 442, 443, 444, 449], "pyerr_newexcept": [23, 55, 71, 442, 444, 451], "classnam": [23, 83, 116, 151, 347, 366, 367, 402, 415], "__module__": [23, 27, 61, 86, 91, 92, 150, 170, 186, 200, 214, 215, 243, 266, 340, 363, 403, 440, 447, 454, 455], "dot": [23, 30, 44, 61, 62, 74, 76, 85, 88, 91, 95, 98, 99, 102, 116, 182, 214, 220, 232, 236, 238, 247, 249, 254, 255, 256, 259, 263, 275, 279, 284, 295, 301, 305, 314, 318, 324, 331, 337, 338, 347, 354, 361, 365, 366, 367, 395, 397, 398, 402, 403, 407, 409, 411, 415, 416, 422, 423, 425, 430, 436, 443, 446, 447, 454], "pyerr_newexceptionwithdoc": [23, 55, 444, 451], "docstr": [23, 27, 33, 34, 44, 56, 58, 61, 64, 73, 82, 85, 88, 99, 116, 145, 150, 214, 215, 236, 243, 280, 295, 340, 355, 362, 363, 365, 383, 402, 403, 410, 411, 415, 416, 426, 430, 437, 438, 439, 440, 441, 442, 443, 444, 448, 450, 451, 453, 454, 455, 456, 457, 458], "pyexception_gettraceback": [23, 55], "ex": [23, 33, 41, 84, 85, 99, 100, 102, 236, 257, 269, 277, 278, 302, 314, 316, 318, 324, 328, 375, 394, 397, 406, 413, 421, 423, 430, 431, 436, 439, 442, 444, 449, 451, 454, 455, 456, 458], "pyexception_getcontext": [23, 55], "__context__": [23, 202, 358, 411, 445, 452], "pyexception_setcontext": [23, 55], "pyexception_getcaus": [23, 55], "__cause__": [23, 180, 202, 358, 411, 445], "pyexception_setcaus": [23, 55], "__suppress_context__": [23, 202, 358, 411], "pyexception_getarg": [23, 55, 449], "pyexception_setarg": [23, 55, 449], "pyunstable_exc_prepreraisestar": 23, "orig": [23, 192, 373], "unhandl": [23, 34, 64, 110, 119, 147, 159, 182, 217, 236, 331, 338, 343, 358, 372, 403, 418, 445, 449], "claus": [23, 34, 85, 93, 99, 110, 116, 133, 159, 202, 243, 269, 280, 296, 320, 324, 331, 338, 340, 403, 404, 405, 410, 411, 413, 417, 418, 437, 442, 443, 447, 448, 451, 453, 456, 457, 458], "rerais": [23, 159, 180, 269, 280, 324, 332, 402, 403, 418], "exceptiongroup": [23, 120, 133, 159, 180, 202, 318, 358, 402, 418, 448, 449], "pyunicodedecodeerror_cr": [23, 55], "pyunicodedecodeerror_getencod": [23, 55], "pyunicodeencodeerror_getencod": [23, 55], "pyunicodedecodeerror_getobject": [23, 55], "pyunicodeencodeerror_getobject": [23, 55], "pyunicodetranslateerror_getobject": [23, 55], "pyunicodedecodeerror_getstart": [23, 55], "pyunicodeencodeerror_getstart": [23, 55], "pyunicodetranslateerror_getstart": [23, 55], "pyunicodedecodeerror_setstart": [23, 55], "pyunicodeencodeerror_setstart": [23, 55], "pyunicodetranslateerror_setstart": [23, 55], "pyunicodedecodeerror_getend": [23, 55], "pyunicodeencodeerror_getend": [23, 55], "pyunicodetranslateerror_getend": [23, 55], "pyunicodedecodeerror_setend": [23, 55], "pyunicodeencodeerror_setend": [23, 55], "pyunicodetranslateerror_setend": [23, 55], "pyunicodedecodeerror_getreason": [23, 55], "pyunicodeencodeerror_getreason": [23, 55], "pyunicodetranslateerror_getreason": [23, 55], "pyunicodedecodeerror_setreason": [23, 55], "pyunicodeencodeerror_setreason": [23, 55], "pyunicodetranslateerror_setreason": [23, 55], "depth": [23, 89, 98, 116, 135, 153, 157, 166, 168, 173, 180, 185, 194, 202, 214, 224, 258, 282, 289, 303, 320, 324, 331, 337, 340, 358, 362, 365, 387, 388, 415, 416, 420, 437, 438, 439, 454, 455, 456], "tp_call": [23, 61, 73, 449], "use_stackcheck": [23, 57], "pyos_checkstack": [23, 55, 57], "reach": [23, 24, 34, 50, 55, 64, 71, 73, 78, 82, 83, 93, 99, 101, 102, 106, 120, 121, 128, 130, 131, 137, 142, 149, 214, 231, 246, 249, 255, 258, 277, 280, 295, 296, 298, 310, 313, 318, 319, 320, 324, 328, 358, 372, 388, 390, 399, 402, 403, 405, 407, 411, 415, 416, 418, 421, 436, 437, 438, 439, 440, 442, 443, 444, 451, 453, 454, 456, 457], "recursionerror": [23, 116, 202, 250, 282, 289, 331, 418, 454, 455], "concaten": [23, 51, 52, 74, 102, 114, 115, 142, 147, 148, 180, 214, 223, 224, 226, 255, 258, 259, 275, 277, 278, 279, 280, 296, 301, 313, 317, 318, 321, 324, 325, 337, 358, 363, 399, 403, 405, 418, 421, 424, 436, 440, 441, 447], "tp_repr": [23, 61, 73], "protect": [23, 32, 71, 73, 74, 99, 133, 157, 165, 166, 170, 212, 219, 224, 225, 237, 246, 258, 265, 269, 289, 306, 313, 319, 321, 322, 337, 366, 376, 396, 403, 418, 430, 439, 442, 448, 449, 454], "cycl": [23, 28, 59, 61, 71, 74, 76, 83, 85, 93, 95, 97, 99, 109, 133, 150, 199, 216, 221, 236, 243, 249, 270, 331, 340, 343, 353, 378, 402, 403, 411, 414, 427, 438, 440, 442, 443, 444, 451, 453, 457, 458], "facilit": [23, 88, 214, 236, 256, 301, 302, 317, 376, 453, 456], "reprlib": [23, 66, 171, 242, 427, 445], "recursive_repr": [23, 303, 451], "py_reprent": [23, 55], "detect": [23, 28, 33, 34, 41, 57, 61, 66, 71, 73, 74, 76, 83, 85, 88, 91, 93, 102, 103, 106, 111, 127, 134, 148, 151, 164, 166, 170, 172, 175, 177, 180, 183, 192, 195, 202, 214, 221, 236, 238, 242, 243, 252, 259, 262, 269, 276, 277, 278, 279, 282, 289, 296, 302, 303, 313, 315, 317, 318, 320, 324, 328, 331, 337, 340, 342, 343, 355, 359, 365, 366, 370, 372, 379, 383, 402, 403, 404, 405, 410, 412, 418, 430, 431, 436, 437, 438, 439, 440, 443, 444, 447, 448, 449, 451, 453, 454, 455, 456, 457], "typic": [23, 32, 33, 34, 44, 47, 55, 56, 59, 61, 71, 75, 76, 83, 84, 85, 88, 91, 92, 97, 98, 99, 106, 107, 109, 114, 116, 119, 120, 123, 128, 133, 142, 148, 157, 175, 179, 182, 185, 192, 194, 207, 212, 214, 215, 217, 219, 234, 238, 239, 240, 241, 243, 246, 254, 255, 256, 257, 259, 262, 263, 269, 276, 277, 279, 280, 282, 288, 289, 290, 298, 300, 302, 306, 308, 314, 316, 321, 323, 324, 325, 327, 328, 331, 334, 337, 338, 343, 344, 345, 347, 349, 353, 361, 362, 363, 365, 366, 372, 374, 375, 376, 381, 383, 385, 386, 388, 389, 390, 391, 396, 398, 403, 405, 407, 413, 414, 417, 418, 426, 427, 428, 430, 436, 440, 441, 444, 445, 448, 449, 450, 451, 453, 454, 456, 457], "py_reprleav": [23, 55], "pyexc_": 23, "complet": [23, 32, 33, 34, 41, 55, 57, 62, 64, 66, 67, 71, 73, 74, 75, 76, 78, 84, 85, 88, 90, 92, 93, 94, 97, 99, 102, 103, 114, 118, 120, 121, 124, 127, 128, 130, 131, 133, 134, 143, 144, 145, 147, 148, 149, 153, 156, 157, 159, 166, 170, 172, 175, 179, 182, 183, 185, 191, 192, 194, 195, 196, 197, 200, 202, 204, 212, 214, 215, 219, 221, 222, 224, 225, 229, 234, 242, 243, 247, 248, 249, 250, 255, 256, 257, 259, 263, 269, 270, 276, 277, 280, 282, 290, 298, 300, 301, 304, 313, 314, 316, 318, 319, 320, 321, 322, 324, 328, 331, 332, 333, 337, 338, 339, 340, 341, 343, 347, 353, 355, 357, 358, 361, 363, 365, 367, 371, 372, 377, 383, 385, 386, 388, 391, 402, 403, 404, 405, 407, 408, 409, 415, 416, 417, 418, 419, 421, 423, 424, 425, 426, 428, 429, 430, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 451, 452, 453, 454, 455, 456, 457, 458], "pyexc_baseexcept": [23, 55], "baseexcept": [23, 121, 133, 156, 202, 255, 331, 332, 358, 407, 411, 418, 425, 442, 443, 445, 448, 456, 457], "pyexc_arithmeticerror": [23, 55], "arithmeticerror": [23, 175, 202, 425], "pyexc_assertionerror": [23, 55], "assertionerror": [23, 180, 202, 269, 340, 365, 366, 367, 383, 411, 425, 448, 458], "pyexc_attributeerror": [23, 55, 73, 74], "attributeerror": [23, 47, 56, 86, 91, 99, 159, 165, 170, 202, 214, 215, 238, 243, 256, 269, 277, 282, 284, 301, 315, 324, 340, 345, 362, 365, 366, 367, 385, 386, 402, 403, 405, 411, 425, 431, 437, 439, 444, 448, 450, 451, 452, 453, 454, 456], "pyexc_blockingioerror": [23, 55], "blockingioerror": [23, 201, 202, 246, 277, 321, 402, 425, 452], "pyexc_brokenpipeerror": [23, 55], "brokenpipeerror": [23, 131, 201, 202, 315, 425, 452], "pyexc_buffererror": [23, 55], "pyexc_childprocesserror": [23, 55], "childprocesserror": [23, 201, 202, 277, 425, 452], "pyexc_connectionabortederror": [23, 55], "connectionabortederror": [23, 201, 202, 425, 452], "pyexc_connectionerror": [23, 55], "connectionerror": [23, 202, 231, 418, 425, 452, 454], "pyexc_connectionrefusederror": [23, 55], "connectionrefusederror": [23, 201, 202, 425, 452], "pyexc_connectionreseterror": [23, 55], "connectionreseterror": [23, 131, 201, 202, 231, 425, 452], "pyexc_eoferror": [23, 55], "eoferror": [23, 24, 40, 115, 121, 142, 147, 202, 212, 214, 223, 258, 261, 269, 282, 317, 425, 445], "pyexc_fileexistserror": [23, 55], "fileexistserror": [23, 189, 201, 202, 214, 246, 277, 279, 293, 314, 337, 397, 425, 452, 453], "pyexc_filenotfounderror": [23, 55], "filenotfounderror": [23, 114, 134, 159, 201, 202, 238, 241, 256, 272, 277, 279, 302, 418, 425, 452, 454], "pyexc_floatingpointerror": [23, 55], "floatingpointerror": [23, 202, 425], "pyexc_generatorexit": [23, 55], "generatorexit": [23, 93, 202, 403, 405, 425, 442, 443], "pyexc_importerror": [23, 55, 97], "pyexc_indentationerror": [23, 55], "indentationerror": [23, 84, 202, 425, 437], "pyexc_indexerror": [23, 55], "indexerror": [23, 36, 37, 46, 58, 148, 150, 165, 185, 202, 225, 249, 269, 282, 300, 301, 324, 325, 358, 366, 403, 405, 411, 424, 425, 437, 451], "pyexc_interruptederror": [23, 55], "interruptederror": [23, 201, 202, 214, 277, 310, 315, 318, 425, 452, 454], "pyexc_isadirectoryerror": [23, 55], "isadirectoryerror": [23, 201, 202, 277, 425, 452], "pyexc_keyerror": [23, 34, 55], "pyexc_keyboardinterrupt": [23, 55], "pyexc_lookuperror": [23, 55], "pyexc_modulenotfounderror": [23, 55], "modulenotfounderror": [23, 202, 238, 407, 455, 456], "pyexc_nameerror": [23, 55], "nameerror": [23, 26, 165, 202, 238, 404, 405, 411, 418, 424, 425, 437, 438, 439, 442, 449], "pyexc_notadirectoryerror": [23, 55], "notadirectoryerror": [23, 201, 202, 277, 425, 452], "pyexc_notimplementederror": [23, 55], "notimplementederror": [23, 127, 158, 172, 189, 202, 215, 232, 238, 255, 269, 277, 279, 300, 321, 363, 381, 397, 425, 450, 453, 455], "pyexc_oserror": [23, 55, 71], "pyexc_overflowerror": [23, 55], "overflowerror": [23, 25, 38, 46, 110, 147, 149, 172, 175, 182, 202, 214, 262, 286, 318, 320, 324, 343, 344, 403, 425, 439, 440, 443, 444, 446, 447, 452, 453], "pyexc_permissionerror": [23, 55], "permissionerror": [23, 201, 202, 238, 277, 304, 338, 340, 425, 452, 455], "pyexc_processlookuperror": [23, 55], "processlookuperror": [23, 201, 202, 304, 425, 452], "pyexc_recursionerror": [23, 55, 454], "pyexc_referenceerror": [23, 55], "referenceerror": [23, 202, 378, 425, 438, 439], "runtimeerror": [23, 93, 103, 110, 115, 120, 121, 126, 131, 132, 133, 134, 156, 159, 160, 202, 207, 214, 246, 249, 256, 269, 277, 279, 301, 317, 324, 328, 331, 335, 340, 343, 363, 382, 397, 403, 405, 411, 418, 425, 440, 441, 442, 444, 449, 452, 454, 455, 456, 457], "pyexc_stopasynciter": [23, 55], "stopasynciter": [23, 85, 180, 202, 214, 366, 402, 403, 405, 411], "pyexc_stopiter": [23, 55], "stopiter": [23, 61, 73, 85, 93, 108, 150, 180, 202, 214, 249, 261, 269, 324, 332, 366, 403, 405, 411, 415, 425, 439, 440, 442, 443, 447, 455, 456], "pyexc_syntaxerror": [23, 55, 406], "pyexc_systemexit": [23, 55], "pyexc_taberror": [23, 55], "taberror": [23, 84, 202, 410, 425, 437, 449], "pyexc_timeouterror": [23, 55], "timeouterror": [23, 121, 133, 156, 201, 202, 269, 317, 318, 425, 447, 452], "pyexc_unboundlocalerror": [23, 55], "unboundlocalerror": [23, 180, 202, 404, 425, 437], "pyexc_unicodedecodeerror": [23, 55], "pyexc_unicodeencodeerror": [23, 55], "pyexc_unicodeerror": [23, 55], "pyexc_unicodetranslateerror": [23, 55], "pyexc_valueerror": [23, 55, 71, 444], "pyexc_zerodivisionerror": [23, 55, 71], "zerodivisionerror": [23, 90, 99, 172, 175, 202, 210, 269, 280, 315, 320, 404, 405, 411, 418, 425, 426, 440, 446, 448, 451, 454, 458], "3151": [23, 202, 304, 310, 318, 440], "alias": [23, 85, 92, 114, 116, 143, 148, 184, 200, 202, 219, 254, 280, 285, 318, 320, 324, 330, 353, 361, 364, 404, 410, 411, 415, 431, 436, 438, 440, 443, 447, 448, 449, 450, 451, 452, 453, 455, 458], "pyexc_environmenterror": [23, 55], "pyexc_ioerror": [23, 55], "separ": [23, 32, 33, 53, 55, 61, 62, 72, 75, 77, 82, 83, 86, 88, 90, 92, 97, 98, 99, 101, 102, 104, 105, 111, 114, 118, 119, 121, 126, 130, 133, 139, 143, 144, 145, 148, 150, 156, 157, 159, 164, 165, 166, 167, 172, 175, 179, 182, 185, 190, 191, 194, 197, 200, 202, 209, 214, 215, 219, 225, 234, 236, 237, 238, 245, 246, 247, 250, 254, 255, 256, 257, 258, 259, 263, 269, 275, 276, 277, 278, 279, 280, 284, 285, 289, 295, 296, 301, 306, 313, 316, 317, 318, 319, 320, 321, 323, 324, 325, 327, 328, 337, 339, 340, 342, 343, 345, 347, 350, 357, 363, 365, 366, 367, 371, 372, 374, 376, 378, 379, 383, 397, 400, 401, 402, 403, 405, 406, 407, 409, 410, 411, 416, 417, 421, 424, 425, 426, 427, 430, 431, 436, 437, 439, 441, 442, 443, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "preprocessor": [23, 41, 55, 88, 313, 437, 444], "ms_window": [23, 33], "pyexc_byteswarn": [23, 55], "byteswarn": [23, 33, 202, 376, 425, 456], "pyexc_deprecationwarn": [23, 55], "deprecationwarn": [23, 88, 102, 126, 156, 158, 177, 202, 240, 269, 277, 320, 327, 337, 340, 365, 376, 388, 403, 407, 410, 425, 430, 438, 440, 444, 447, 448, 449, 450, 451, 453, 454, 455, 457], "pyexc_futurewarn": [23, 55], "futurewarn": [23, 202, 279, 301, 376, 425, 440, 441, 444, 449, 456], "pyexc_importwarn": [23, 55], "importwarn": [23, 177, 202, 365, 376, 407, 425, 442, 447, 449, 455], "pyexc_pendingdeprecationwarn": [23, 55], "pendingdeprecationwarn": [23, 177, 202, 365, 376, 425, 440, 443, 444, 454, 455, 456, 457, 458], "pyexc_resourcewarn": [23, 55], "runtimewarn": [23, 44, 119, 120, 202, 318, 331, 365, 376, 425, 451, 457], "pyexc_syntaxwarn": [23, 55], "syntaxwarn": [23, 202, 301, 340, 376, 410, 425, 440, 448, 449, 455, 457], "pyexc_unicodewarn": [23, 55], "unicodewarn": [23, 202, 376, 425, 442, 451], "pyexc_userwarn": [23, 55], "userwarn": [23, 202, 218, 340, 376, 425], "minim": [24, 44, 60, 66, 71, 74, 78, 82, 88, 90, 99, 101, 109, 116, 175, 179, 182, 203, 214, 224, 229, 237, 238, 242, 247, 260, 276, 282, 287, 301, 306, 315, 318, 320, 340, 342, 356, 363, 372, 384, 412, 416, 431, 436, 437, 442, 455], "emul": [24, 32, 74, 77, 83, 91, 147, 149, 150, 166, 170, 178, 182, 204, 246, 254, 259, 269, 276, 277, 278, 284, 291, 302, 314, 315, 328, 331, 415, 439, 440, 443, 451, 452, 455, 457], "io": [24, 32, 33, 66, 69, 77, 83, 85, 101, 112, 117, 118, 119, 120, 130, 133, 142, 148, 154, 159, 177, 179, 185, 202, 204, 207, 208, 214, 223, 224, 231, 234, 238, 239, 241, 242, 250, 258, 259, 277, 278, 282, 286, 290, 291, 319, 321, 324, 328, 331, 337, 338, 340, 355, 356, 366, 375, 383, 386, 396, 397, 400, 403, 430, 442, 443, 444, 445, 446, 447, 448, 453, 455, 458], "unbuff": [24, 32, 246, 328, 331, 430], "meant": [24, 34, 47, 59, 76, 98, 99, 109, 116, 127, 133, 148, 156, 202, 219, 225, 229, 238, 290, 318, 340, 347, 363, 372, 397, 406, 416, 421, 436, 442, 443, 444, 447, 451, 452, 453, 454, 456, 457], "advis": [24, 98, 159, 165, 237, 269, 277, 343, 376, 400, 401, 403, 405, 423, 451, 457], "pyfile_fromfd": [24, 55], "newlin": [24, 77, 85, 99, 102, 114, 116, 136, 139, 142, 147, 149, 164, 166, 179, 182, 185, 196, 207, 214, 223, 236, 238, 246, 250, 253, 255, 257, 258, 259, 265, 279, 282, 289, 301, 313, 318, 319, 324, 328, 335, 338, 342, 344, 345, 354, 355, 358, 359, 371, 376, 386, 394, 396, 397, 402, 406, 410, 412, 421, 424, 426, 427, 430, 438, 441, 442, 443, 444, 445, 448, 453, 455, 456, 457], "closefd": [24, 177, 214, 246, 269, 445], "mix": [24, 32, 41, 84, 87, 99, 101, 111, 157, 172, 175, 193, 194, 195, 196, 200, 207, 214, 217, 247, 262, 269, 273, 277, 301, 319, 321, 323, 324, 334, 340, 363, 371, 402, 403, 410, 417, 424, 425, 439, 440, 442, 443, 444, 445, 446, 448, 449, 451, 452, 453], "unexpect": [24, 28, 78, 98, 99, 182, 194, 197, 212, 219, 238, 255, 262, 300, 301, 315, 317, 318, 321, 323, 340, 365, 367, 372, 376, 397, 402, 403, 405, 410, 418, 436, 444, 447, 452, 456, 457, 458], "pyobject_asfiledescriptor": [24, 55], "fileno": [24, 57, 82, 99, 135, 142, 177, 204, 207, 224, 231, 246, 265, 269, 277, 310, 311, 315, 318, 319, 321, 338, 339, 347, 439, 442, 453], "pyfile_getlin": [24, 55], "readlin": [24, 33, 64, 66, 77, 82, 93, 97, 105, 120, 130, 131, 134, 136, 145, 148, 160, 177, 179, 193, 196, 202, 207, 212, 214, 237, 242, 246, 256, 265, 277, 279, 280, 282, 313, 319, 341, 347, 355, 359, 366, 372, 375, 396, 397, 403, 413, 415, 418, 421, 422, 423, 430, 431, 437, 438, 439, 440, 442, 443, 444, 447, 451, 453, 456], "greater": [24, 32, 33, 37, 38, 44, 54, 61, 62, 74, 90, 98, 99, 104, 105, 110, 127, 128, 132, 133, 137, 139, 140, 144, 150, 166, 172, 175, 179, 185, 197, 198, 200, 215, 219, 231, 237, 247, 255, 257, 262, 277, 280, 300, 304, 316, 317, 323, 324, 331, 337, 340, 343, 353, 354, 359, 361, 365, 383, 385, 399, 403, 410, 411, 415, 416, 421, 423, 424, 437, 439, 440, 441, 442, 454, 455, 456, 458], "pyfile_setopencodehook": [24, 246], "py_opencodehookfunct": 24, "open_cod": [24, 246], "userdata": [24, 57], "pyunicodeobject": [24, 61, 62, 88, 447, 448], "hook": [24, 30, 33, 57, 64, 66, 85, 91, 95, 97, 110, 135, 145, 165, 172, 177, 197, 205, 207, 214, 231, 242, 267, 284, 289, 290, 297, 313, 320, 324, 331, 343, 359, 362, 366, 375, 376, 398, 403, 405, 411, 413, 414, 430, 431, 437, 439, 442, 444, 447, 448, 449, 452, 454, 455, 456, 458], "intention": [24, 236, 363, 383, 394, 401, 445], "frozen": [24, 30, 33, 78, 165, 214, 238, 269, 284, 331, 359, 363, 403, 407, 430, 436, 440, 449, 453, 456], "py_initi": [24, 30, 32, 33, 34, 55, 57, 70, 71, 84, 447, 450, 451, 456, 458], "audit": [24, 32, 56, 57, 66, 95, 110, 115, 165, 174, 199, 204, 212, 214, 216, 220, 231, 237, 242, 246, 261, 265, 268, 277, 279, 280, 282, 287, 291, 304, 314, 315, 317, 318, 320, 324, 328, 331, 332, 335, 338, 344, 362, 372, 379, 381, 403, 411, 425, 430, 440, 447], "setopencodehook": [24, 135], "pyfile_writeobject": [24, 55], "py_print_raw": [24, 47], "pyfile_writestr": [24, 55], "pyfloatobject": [25, 74], "pyfloat_typ": [25, 55], "pyfloat_check": 25, "pyfloat_checkexact": 25, "pyfloat_fromstr": [25, 55], "pyfloat_fromdoubl": [25, 55], "pyfloat_asdoubl": [25, 55, 457], "pyfloat": 25, "pyfloat_as_doubl": 25, "pyfloat_getinfo": [25, 55, 443], "structseq": [25, 444], "minimum": [25, 33, 34, 41, 55, 62, 74, 88, 91, 99, 101, 107, 110, 115, 116, 119, 127, 144, 150, 165, 166, 175, 186, 245, 249, 262, 277, 285, 310, 316, 321, 323, 324, 325, 331, 340, 343, 350, 353, 361, 363, 365, 366, 415, 421, 431, 439, 440, 443, 447, 451, 452, 453, 455, 456], "thin": [25, 57, 215, 262, 315, 346, 347, 431, 448], "pyfloat_getmax": [25, 55, 443], "dbl_max": [25, 331], "pyfloat_getmin": [25, 55, 443], "dbl_min": [25, 331], "routin": [25, 32, 40, 61, 66, 70, 71, 73, 84, 91, 104, 105, 134, 166, 173, 184, 204, 226, 238, 242, 246, 254, 277, 290, 321, 344, 368, 380, 383, 440, 441, 448, 456], "suffix": [25, 62, 69, 78, 85, 88, 99, 165, 189, 234, 237, 238, 247, 255, 256, 257, 263, 277, 279, 301, 312, 317, 324, 338, 372, 397, 405, 406, 424, 425, 431, 436, 437, 439, 448, 451, 452, 457], "ieee": [25, 144, 175, 250, 262, 278, 318, 327, 340, 405, 419, 431, 441, 443, 446, 448, 451, 455, 456], "754": [25, 144, 175, 250, 262, 327, 340, 405, 419, 431, 441, 443, 446, 448, 451, 455, 456], "binary16": [25, 327], "half": [25, 90, 99, 127, 164, 166, 172, 210, 215, 262, 300, 310, 324, 327, 410, 419, 444, 447, 449, 455], "binary32": [25, 327], "binary64": [25, 327, 419], "inf": [25, 144, 175, 214, 250, 262, 324, 325, 331, 443, 444, 448, 451, 454, 455], "nan": [25, 83, 133, 144, 175, 214, 262, 323, 324, 325, 331, 405, 417, 431, 441, 443, 444, 447, 448, 451, 452, 454, 455], "thing": [25, 32, 34, 61, 70, 71, 73, 74, 75, 76, 81, 82, 83, 84, 88, 90, 92, 93, 96, 98, 99, 101, 103, 105, 106, 114, 118, 127, 147, 149, 157, 159, 165, 170, 182, 189, 195, 200, 204, 212, 214, 216, 233, 234, 238, 246, 255, 256, 262, 269, 276, 282, 301, 316, 321, 326, 331, 337, 343, 345, 347, 352, 353, 361, 363, 364, 365, 366, 367, 370, 372, 375, 376, 379, 405, 406, 409, 414, 415, 416, 417, 419, 424, 425, 429, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 445, 449, 452, 453, 457], "larger": [25, 34, 41, 47, 54, 74, 83, 90, 91, 127, 144, 165, 166, 172, 175, 204, 214, 225, 246, 247, 262, 265, 270, 277, 288, 300, 301, 304, 320, 321, 323, 324, 325, 340, 343, 345, 397, 399, 403, 405, 410, 414, 416, 417, 418, 419, 426, 429, 436, 437, 439, 440, 442, 444, 445, 448, 449, 451, 454, 455, 456, 457, 458], "smaller": [25, 41, 62, 90, 91, 102, 103, 127, 165, 172, 175, 179, 180, 215, 225, 247, 258, 262, 277, 282, 290, 298, 300, 323, 325, 327, 334, 347, 353, 359, 361, 371, 386, 399, 403, 405, 410, 417, 419, 425, 430, 438, 440, 441, 442, 443, 444, 446, 448, 451, 452, 453, 454, 455, 457], "partli": [25, 224, 247, 451, 455, 456], "accident": [25, 32, 76, 99, 101, 175, 179, 182, 202, 363, 411, 418, 425, 438, 440, 443, 454], "ala": [25, 84], "le": [25, 93, 105, 148, 189, 275, 438, 446, 452], "expon": [25, 87, 175, 214, 262, 300, 324, 325, 327, 331, 355, 410, 441, 443, 452, 457], "py_big_endian": 25, "ok": [25, 71, 78, 106, 166, 178, 182, 212, 230, 231, 232, 234, 237, 273, 276, 317, 321, 351, 363, 365, 383, 415, 416, 441, 448, 449, 451], "infin": [25, 102, 144, 175, 214, 250, 262, 300, 324, 325, 331, 441, 443, 451], "pyfloat_pack2": [25, 448], "pyfloat_pack4": [25, 448], "pyfloat_pack8": [25, 448], "refus": [25, 34, 103, 201, 202, 312, 317, 318, 321, 337, 397], "pyfloat_unpack2": [25, 448], "pyfloat_unpack4": [25, 448], "pyfloat_unpack8": [25, 448], "pyeval_getfram": [26, 32, 51, 55], "pythreadstate_getfram": [26, 32, 51, 55, 448, 458], "reflect": [26, 31, 50, 63, 66, 83, 85, 87, 88, 95, 99, 114, 116, 150, 158, 164, 166, 172, 182, 199, 204, 214, 215, 236, 238, 243, 270, 276, 277, 290, 302, 318, 320, 321, 324, 327, 331, 347, 361, 362, 363, 377, 381, 386, 396, 402, 403, 404, 430, 443, 448, 449, 451, 452, 454, 457, 458], "pyframe_typ": [26, 448], "frametyp": [26, 362], "frameobject": [26, 447, 448], "pyframe_check": [26, 448], "pyframe_getback": [26, 448, 458], "pyframe_getbuiltin": [26, 448], "f_builtin": [26, 243, 403, 448], "pyframe_getcod": [26, 55, 448, 458], "pyframe_getgener": [26, 448], "pyframe_getglob": [26, 448], "f_global": [26, 243, 403, 448], "pyframe_getlasti": [26, 448], "f_lasti": [26, 180, 243, 403, 440, 447, 448], "pyframe_getvar": [26, 449], "pyframe_getvarstr": [26, 449], "pyframe_getloc": [26, 448], "f_local": [26, 243, 362, 403, 448], "523": [26, 32, 440, 448, 449, 458], "_pyinterpreterfram": [26, 32, 448], "pyunstable_interpreterframe_getcod": 26, "pyunstable_interpreterframe_getlasti": 26, "pyunstable_interpreterframe_getlin": 26, "pyfunctionobject": [27, 449], "pyfunction_typ": 27, "functiontyp": [27, 116, 362, 447], "pyfunction_check": 27, "pyfunction_new": 27, "annot": [27, 66, 76, 83, 85, 88, 94, 108, 116, 170, 180, 215, 237, 243, 254, 283, 330, 340, 357, 378, 383, 401, 402, 403, 405, 406, 445, 447, 448, 449, 451, 452, 454, 457, 458], "closur": [27, 56, 64, 74, 120, 159, 160, 180, 214, 238, 243, 276, 324, 338, 403, 448, 452, 455], "co_qualnam": [27, 243, 403], "pyfunction_newwithqualnam": 27, "pyfunction_getcod": 27, "pyfunction_getglob": 27, "pyfunction_getmodul": 27, "pyfunction_getdefault": 27, "pyfunction_setdefault": 27, "pyfunction_setvectorcal": [27, 449], "func": [27, 32, 33, 34, 43, 51, 57, 61, 64, 76, 83, 85, 86, 88, 91, 93, 97, 114, 116, 120, 133, 134, 137, 150, 156, 165, 166, 180, 201, 215, 243, 249, 254, 255, 269, 276, 290, 296, 314, 320, 324, 331, 332, 340, 343, 345, 347, 357, 363, 365, 378, 395, 402, 404, 418, 441, 443, 445, 450, 451, 452, 455, 457], "vectorcal": [27, 56, 61, 431, 447, 448, 449, 458], "preserv": [27, 32, 34, 41, 71, 78, 82, 83, 88, 93, 99, 103, 104, 114, 150, 156, 157, 164, 172, 175, 179, 182, 185, 190, 192, 194, 197, 202, 214, 220, 229, 230, 243, 249, 250, 256, 257, 276, 277, 280, 282, 283, 313, 314, 320, 324, 337, 340, 356, 362, 363, 365, 366, 378, 386, 388, 399, 402, 403, 405, 410, 415, 419, 436, 437, 438, 439, 440, 442, 443, 444, 448, 451, 452, 453, 454, 456, 457, 458], "unalt": [27, 417], "pyfunction_getclosur": 27, "pyfunction_setclosur": 27, "pyfunction_getannot": 27, "pyfunction_setannot": 27, "pyfunction_addwatch": 27, "pyfunction_watchcallback": 27, "pyfunction_clearwatch": 27, "pyfunction_watchev": 27, "pyfunction_event_cr": 27, "pyfunction_event_destroi": 27, "pyfunction_event_modify_cod": 27, "pyfunction_event_modify_default": 27, "pyfunction_event_modify_kwdefault": 27, "optim": [27, 33, 34, 41, 56, 61, 64, 74, 83, 88, 102, 116, 122, 123, 127, 133, 148, 150, 153, 166, 180, 200, 214, 216, 224, 226, 232, 238, 243, 253, 277, 278, 282, 283, 290, 293, 300, 318, 320, 330, 331, 340, 343, 344, 397, 402, 403, 411, 425, 426, 431, 436, 437, 439], "emit": [27, 32, 33, 44, 56, 74, 85, 88, 98, 99, 110, 119, 120, 123, 126, 129, 133, 158, 166, 172, 177, 180, 202, 216, 234, 246, 249, 255, 257, 277, 279, 282, 320, 328, 331, 340, 353, 358, 363, 365, 376, 386, 388, 392, 403, 405, 411, 426, 430, 440, 443, 446, 447, 448, 449, 450, 451, 453, 455, 456, 457, 458], "decis": [27, 85, 99, 101, 103, 108, 147, 243, 331, 353, 402, 411, 425, 437, 441, 442, 444, 451, 452], "circular": [28, 32, 34, 71, 74, 76, 83, 250, 361, 367, 403, 438, 454, 456], "atom": [28, 82, 216, 269, 277, 298, 301, 318, 324, 343, 344, 406, 444, 445, 448, 450, 452], "tp_flag": [28, 59, 61, 73, 74, 97, 180, 443, 458], "py_tpflags_have_gc": [28, 59, 61, 74, 97, 439, 448], "tp_travers": [28, 59, 61, 73, 74, 97, 216, 448, 458], "tp_clear": [28, 44, 61, 73, 74, 97], "conform": [28, 55, 61, 92, 98, 120, 139, 157, 172, 175, 190, 192, 197, 198, 200, 214, 231, 234, 236, 238, 254, 255, 279, 282, 296, 331, 363, 371, 386, 388, 394, 400, 403, 431, 441, 445, 446, 447, 452, 453, 455, 456, 457, 458], "pyobject_gc_new": [28, 61, 439, 457], "pyobject_gc_newvar": [28, 61, 439, 457], "pyobject_gc_track": [28, 55, 439], "pyobject_gc_untrack": [28, 55, 61, 73, 74, 439, 448, 450], "pyobject_gc_del": [28, 55, 61, 439, 457], "pytype_readi": [28, 44, 55, 59, 61, 73, 74, 97, 448], "indirectli": [28, 56, 59, 62, 83, 91, 101, 161, 165, 202, 238, 277, 296, 331, 378, 403, 404, 405, 407, 417, 418, 445, 453, 456, 457], "pytype_fromspecwithbas": [28, 55, 59, 61, 447, 449], "pytype_fromspec": [28, 44, 55, 56, 59, 61, 74, 97, 449, 457, 458], "popul": [28, 34, 44, 98, 99, 109, 114, 116, 172, 180, 196, 225, 238, 255, 270, 282, 300, 306, 323, 324, 362, 376, 383, 386, 388, 403, 407, 436, 440, 447, 448, 455], "child": [28, 32, 57, 83, 86, 98, 99, 114, 116, 124, 125, 126, 127, 131, 150, 201, 202, 216, 237, 238, 241, 265, 269, 277, 279, 291, 296, 304, 310, 315, 318, 319, 328, 338, 347, 353, 363, 366, 367, 385, 386, 388, 397, 403, 437, 441, 442, 443, 444, 449, 451, 452, 453, 455, 456, 457, 458], "analog": [28, 37, 62, 73, 83, 99, 175, 243, 255, 256, 262, 269, 282, 342, 361, 403, 405, 423, 439, 441, 442, 444, 451, 457], "pyunstable_object_gc_newwithextradata": 28, "extra_s": [28, 427], "reserv": [28, 34, 47, 59, 67, 85, 92, 103, 243, 247, 261, 279, 282, 296, 300, 301, 304, 315, 324, 343, 374, 381, 385, 394, 397, 401, 403, 411, 418, 430, 438, 443, 445, 451, 456, 457], "decid": [28, 33, 34, 74, 76, 78, 83, 87, 88, 93, 98, 101, 103, 108, 126, 133, 137, 144, 147, 159, 172, 182, 216, 232, 257, 318, 319, 331, 343, 363, 403, 407, 411, 425, 428, 442, 444, 447, 449], "pyobject_gc_res": 28, "becom": [28, 32, 33, 34, 61, 62, 64, 71, 76, 78, 82, 83, 84, 85, 88, 90, 91, 92, 93, 95, 97, 99, 102, 103, 104, 105, 108, 109, 120, 126, 127, 132, 133, 148, 150, 164, 166, 182, 185, 191, 194, 200, 214, 221, 225, 236, 243, 246, 249, 269, 276, 277, 278, 280, 282, 290, 293, 300, 301, 310, 311, 313, 314, 315, 320, 321, 324, 325, 328, 331, 337, 343, 347, 353, 361, 363, 366, 367, 372, 378, 397, 402, 403, 404, 405, 411, 416, 421, 425, 427, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "pyobject_is_gc": [28, 61, 73, 458], "pyobject_gc_istrack": [28, 55, 458], "gc": [28, 44, 59, 61, 66, 71, 74, 76, 83, 85, 95, 135, 242, 243, 297, 331, 340, 345, 359, 378, 386, 403, 427, 431, 437, 440, 442, 444, 449, 451], "is_track": [28, 216, 444], "pyobject_gc_isfin": [28, 55, 458], "is_fin": [28, 32, 216, 331, 425, 454, 457, 458], "_pyobject_gc_track": [28, 457], "_pyobject_gc_untrack": [28, 457], "visitproc": [28, 55, 61, 74, 458], "visitor": [28, 116], "travers": [28, 30, 44, 50, 61, 74, 93, 97, 116, 153, 173, 185, 194, 202, 238, 240, 241, 255, 277, 284, 324, 353, 365, 366, 383, 387, 388, 397, 407, 411, 437, 439, 440, 442, 443, 444, 448, 449, 450, 454, 457, 458], "traverseproc": [28, 44, 55, 61, 73, 74], "visit": [28, 61, 74, 84, 85, 93, 97, 116, 172, 216, 277, 279, 295, 314, 322, 390, 431, 436, 437, 439, 440, 443, 452, 458], "simplifi": [28, 30, 32, 41, 64, 72, 76, 84, 85, 91, 93, 102, 106, 118, 122, 129, 148, 150, 159, 172, 173, 186, 190, 205, 215, 238, 243, 269, 301, 318, 319, 323, 353, 355, 363, 378, 385, 402, 410, 426, 427, 436, 439, 440, 441, 442, 443, 444, 445, 447, 448, 451, 452, 453, 454, 455, 456, 457, 458], "py_visit": [28, 61, 74, 97, 458], "my_travers": 28, "noddi": 28, "foo": [28, 76, 77, 83, 84, 85, 86, 87, 88, 92, 98, 99, 100, 102, 106, 111, 114, 116, 145, 157, 165, 182, 185, 189, 217, 232, 236, 238, 243, 250, 254, 255, 256, 269, 275, 276, 277, 278, 279, 280, 282, 284, 286, 290, 293, 301, 316, 320, 324, 337, 340, 362, 363, 365, 366, 367, 381, 383, 386, 387, 388, 397, 398, 402, 405, 407, 410, 411, 416, 437, 439, 440, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 456, 457], "inquiri": [28, 44, 55, 61, 73, 74, 246, 365], "drop": [28, 61, 66, 74, 82, 83, 85, 91, 92, 98, 105, 108, 127, 128, 150, 182, 200, 201, 214, 238, 242, 249, 257, 269, 287, 298, 303, 307, 321, 324, 328, 331, 342, 346, 347, 353, 365, 371, 437, 438, 439, 441, 442, 443, 445, 451, 453, 454], "pygc_collect": [28, 55, 458], "uncondition": [28, 110, 236, 269, 270, 277, 279, 316, 365, 403, 413, 418, 430, 444, 445, 451, 452, 453, 454, 456, 458], "unreach": [28, 34, 201, 216, 363, 403, 456, 458], "pygc_en": [28, 55, 447], "pygc_dis": [28, 55, 447], "pygc_isen": [28, 55, 447], "isen": [28, 216], "pyunstable_gc_visitobject": 28, "gcvisitobjects_t": 28, "live": [28, 34, 65, 66, 71, 76, 82, 88, 99, 107, 156, 158, 172, 196, 212, 216, 236, 237, 238, 239, 241, 242, 269, 273, 277, 282, 287, 297, 320, 321, 337, 371, 376, 378, 385, 400, 403, 415, 421, 423, 436, 437, 438, 439, 445, 450, 451], "capabl": [28, 62, 74, 85, 90, 91, 93, 99, 102, 106, 107, 116, 120, 125, 150, 159, 166, 175, 182, 201, 223, 225, 234, 237, 238, 239, 241, 243, 245, 246, 247, 268, 269, 276, 287, 288, 289, 302, 356, 367, 371, 388, 390, 397, 405, 426, 430, 439, 440, 441, 442, 451, 452, 453, 454], "behaviour": [28, 30, 32, 34, 47, 61, 82, 83, 85, 87, 88, 93, 98, 99, 102, 120, 156, 159, 178, 202, 204, 226, 232, 243, 246, 254, 255, 256, 257, 269, 276, 277, 279, 282, 293, 301, 302, 310, 313, 315, 318, 319, 320, 323, 324, 328, 331, 342, 361, 366, 367, 371, 372, 376, 388, 391, 394, 403, 405, 407, 421, 430, 431, 436, 437, 438, 439, 440, 441, 442, 443, 444, 448, 452, 453, 455, 456], "pygen_new": 29, "pygen_newwithqualnam": 29, "pygenobject": 29, "pygen_typ": 29, "pygen_check": 29, "pygen_checkexact": 29, "pyimport_importmodul": [30, 55, 71, 77, 438, 443, 445, 447, 449, 450], "pyimport_importmoduleex": [30, 452], "submodul": [30, 61, 85, 111, 148, 173, 182, 214, 227, 238, 284, 306, 321, 357, 384, 397, 411, 425, 430, 442, 445, 446, 447, 453, 456], "fromlist": [30, 115, 180, 214, 238], "unfortun": [30, 76, 82, 86, 90, 93, 97, 99, 100, 101, 102, 106, 148, 269, 287, 290, 308, 312, 318, 321, 337, 338, 347, 367, 419, 427, 436, 438, 441, 443, 446, 455, 458], "fact": [30, 32, 34, 62, 71, 76, 78, 83, 84, 93, 98, 102, 103, 106, 120, 143, 157, 161, 165, 175, 182, 195, 199, 212, 214, 221, 238, 266, 276, 282, 290, 324, 337, 347, 361, 363, 372, 383, 396, 403, 405, 407, 409, 415, 416, 419, 424, 425, 436, 437, 438, 443, 448, 449, 452, 453, 454], "subpackag": [30, 61, 85, 238, 331, 365, 397, 407, 425, 437], "__all__": [30, 214, 236, 266, 301, 340, 363, 411, 425, 438, 450, 455], "absolut": [30, 33, 34, 46, 59, 61, 70, 74, 76, 82, 84, 98, 101, 104, 108, 116, 120, 133, 137, 143, 144, 145, 175, 180, 182, 202, 214, 219, 220, 231, 238, 239, 245, 246, 256, 257, 258, 262, 265, 275, 276, 277, 278, 279, 285, 306, 313, 314, 317, 320, 324, 325, 331, 333, 337, 338, 344, 347, 350, 359, 361, 363, 371, 375, 381, 390, 397, 399, 400, 405, 407, 411, 415, 421, 425, 430, 431, 436, 437, 441, 443, 444, 445, 448, 449, 451, 452, 453, 454, 456, 458], "pyimport_importmodulenoblock": [30, 55, 443, 445, 449, 450, 452], "switch": [30, 32, 34, 62, 73, 82, 88, 97, 103, 105, 106, 107, 122, 127, 131, 148, 182, 199, 214, 219, 225, 232, 234, 236, 276, 280, 287, 301, 304, 306, 320, 323, 324, 325, 331, 337, 361, 366, 387, 407, 416, 425, 430, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 451, 453, 456, 458], "15": [30, 32, 57, 62, 65, 76, 83, 90, 93, 95, 98, 99, 104, 105, 125, 143, 148, 150, 157, 170, 172, 182, 192, 200, 204, 212, 225, 230, 234, 236, 246, 247, 249, 255, 256, 277, 282, 300, 301, 304, 320, 321, 323, 324, 325, 328, 331, 344, 345, 355, 358, 361, 363, 364, 377, 399, 400, 410, 421, 431, 438, 440, 441, 442, 443, 444, 446, 447, 448, 451, 454, 455, 456, 457, 458], "__import__": [30, 180, 214, 238, 256, 282, 403, 407, 425, 443, 446, 452, 455, 458], "incomplet": [30, 59, 62, 76, 139, 147, 148, 169, 172, 214, 229, 236, 249, 256, 296, 310, 337, 397, 399, 401, 427, 440, 441, 444, 445, 449, 452, 453], "pyimport_importmodulelevelobject": [30, 55], "pyimport_importmodulelevel": [30, 55, 452], "pyimport_import": [30, 55, 70, 443], "higher": [30, 32, 54, 66, 82, 93, 95, 98, 99, 103, 110, 120, 134, 139, 156, 159, 166, 175, 180, 191, 193, 212, 213, 214, 219, 231, 242, 246, 249, 255, 256, 257, 258, 266, 268, 269, 277, 282, 287, 307, 314, 318, 320, 321, 324, 331, 337, 343, 345, 359, 363, 365, 372, 376, 388, 399, 424, 426, 438, 439, 442, 443, 447, 448, 451, 452, 453, 456], "__builtins__": [30, 141, 214, 243, 404, 425, 445, 447], "instal": [30, 32, 33, 34, 41, 55, 66, 70, 74, 77, 78, 79, 80, 82, 83, 84, 85, 87, 90, 95, 99, 101, 106, 109, 126, 129, 137, 153, 163, 173, 177, 181, 201, 203, 219, 224, 236, 238, 239, 242, 245, 249, 255, 257, 263, 264, 293, 302, 315, 316, 320, 321, 324, 328, 331, 333, 339, 347, 359, 361, 365, 372, 375, 376, 381, 383, 396, 401, 407, 413, 423, 425, 428, 429, 430, 438, 439, 440, 442, 443, 444, 447, 448, 449, 451, 452, 454, 455, 456, 457, 458], "environ": [30, 32, 33, 34, 41, 61, 64, 66, 78, 79, 82, 83, 84, 85, 91, 98, 99, 100, 101, 105, 106, 107, 119, 120, 148, 150, 153, 165, 166, 175, 177, 181, 199, 203, 214, 217, 218, 219, 224, 226, 236, 239, 242, 246, 254, 256, 276, 278, 280, 282, 288, 290, 291, 293, 295, 297, 306, 307, 309, 314, 318, 319, 321, 324, 328, 331, 334, 337, 338, 340, 344, 347, 357, 359, 365, 366, 372, 376, 379, 381, 385, 395, 403, 404, 407, 412, 413, 416, 420, 422, 425, 431, 432, 433, 434, 437, 438, 439, 440, 441, 443, 445, 446, 447, 448, 449, 450, 451, 453, 456, 457, 458], "pyimport_reloadmodul": [30, 55], "m": [30, 33, 41, 52, 56, 61, 66, 71, 74, 83, 90, 91, 93, 95, 98, 99, 100, 101, 102, 103, 105, 107, 109, 116, 117, 143, 144, 148, 150, 153, 157, 165, 166, 172, 179, 182, 199, 214, 224, 226, 234, 236, 237, 239, 242, 249, 250, 255, 256, 257, 262, 269, 276, 277, 280, 282, 283, 286, 287, 290, 295, 300, 301, 303, 306, 314, 316, 320, 321, 323, 324, 325, 328, 331, 333, 334, 337, 340, 344, 345, 347, 355, 357, 361, 363, 365, 366, 367, 372, 374, 375, 379, 394, 395, 396, 397, 401, 403, 404, 405, 407, 411, 415, 416, 417, 423, 426, 427, 428, 430, 431, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "reload": [30, 83, 88, 92, 232, 236, 238, 331, 340, 359, 407, 425, 440, 445, 449, 453, 456], "pyimport_addmoduleref": [30, 55, 450], "pyimport_addmoduleobject": [30, 55], "pyimport_addmodul": [30, 55, 71, 450], "pyimport_execcodemodul": [30, 55], "danger": [30, 34, 57, 59, 83, 269, 276, 277, 279, 321, 337, 366, 409, 438, 441, 442, 449], "unknown": [30, 32, 62, 86, 92, 102, 116, 133, 179, 182, 185, 188, 190, 191, 197, 200, 214, 224, 234, 263, 276, 277, 286, 289, 301, 322, 323, 331, 337, 343, 344, 359, 372, 374, 391, 416, 425, 431, 439, 440, 444, 448, 451, 455, 456], "probabl": [30, 32, 34, 54, 71, 73, 76, 77, 78, 79, 83, 87, 88, 90, 96, 99, 101, 102, 103, 136, 148, 149, 165, 172, 182, 189, 202, 219, 225, 269, 277, 280, 283, 285, 290, 300, 317, 318, 319, 320, 321, 331, 345, 361, 366, 372, 374, 381, 382, 383, 390, 409, 415, 418, 429, 431, 437, 438, 439, 440, 442, 443, 445, 447, 448, 451, 452], "damag": [30, 282, 337, 363, 401], "author": [30, 71, 75, 85, 86, 87, 88, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 120, 148, 150, 182, 202, 224, 231, 239, 240, 257, 273, 277, 289, 320, 321, 365, 372, 383, 394, 401, 425, 428, 434, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 451, 453, 454], "__spec__": [30, 238, 306, 362, 425, 447, 449, 453, 455, 456], "__loader__": [30, 44, 214, 238, 253, 306, 362, 407, 425, 447, 452, 453, 456], "spec": [30, 44, 59, 85, 104, 180, 200, 225, 228, 233, 238, 243, 250, 306, 321, 331, 353, 366, 367, 371, 394, 398, 406, 440, 449, 453, 454, 455, 456, 457, 458], "loader": [30, 85, 159, 165, 182, 238, 239, 240, 241, 253, 284, 340, 359, 362, 365, 388, 396, 398, 440, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 458], "sourcefileload": [30, 238, 449, 452, 455], "__file__": [30, 44, 87, 99, 109, 177, 182, 214, 224, 238, 243, 253, 284, 305, 306, 340, 359, 365, 376, 398, 403, 407, 431, 440, 453, 455, 456, 458], "co_filenam": [30, 243, 403, 444], "applic": [30, 32, 33, 34, 61, 62, 66, 71, 73, 75, 76, 78, 81, 83, 85, 87, 93, 97, 98, 100, 101, 102, 103, 105, 106, 107, 109, 114, 116, 119, 120, 127, 131, 133, 134, 136, 141, 147, 156, 157, 159, 164, 166, 172, 175, 177, 178, 179, 180, 182, 183, 184, 185, 186, 189, 190, 191, 192, 194, 195, 197, 202, 203, 214, 215, 216, 224, 225, 231, 242, 245, 246, 250, 254, 255, 256, 257, 259, 262, 263, 264, 268, 269, 270, 275, 276, 277, 278, 279, 282, 287, 290, 296, 301, 307, 308, 313, 314, 315, 318, 320, 321, 323, 324, 326, 328, 333, 337, 338, 340, 342, 343, 344, 347, 349, 350, 353, 359, 361, 364, 365, 371, 372, 375, 376, 378, 381, 383, 385, 386, 388, 389, 390, 391, 392, 397, 398, 399, 400, 401, 402, 405, 409, 411, 414, 417, 418, 419, 420, 421, 422, 425, 426, 427, 428, 430, 437, 438, 439, 440, 441, 443, 444, 445, 446, 447, 450, 451, 452, 453, 455, 456, 457, 458], "__cached__": [30, 214, 238, 306, 407, 447, 449, 450, 451, 453], "pyimport_execcodemoduleex": [30, 55], "pyimport_execcodemodulewithpathnam": [30, 55], "modulespec": [30, 44, 85, 238, 284, 306, 331, 362, 407], "pathnam": [30, 66, 76, 82, 135, 165, 208, 209, 212, 214, 242, 255, 257, 266, 277, 279, 288, 313, 322, 331, 337, 338, 347, 372, 397, 398, 403, 407, 430, 448, 451, 454], "pyimport_execcodemoduleobject": [30, 55], "cpathnam": 30, "Of": [30, 71, 74, 76, 84, 92, 99, 103, 116, 165, 182, 189, 191, 201, 245, 256, 269, 276, 290, 313, 319, 347, 367, 375, 385, 386, 415, 424, 449], "figur": [30, 71, 74, 78, 81, 87, 90, 92, 93, 102, 105, 114, 175, 182, 276, 290, 318, 337, 437, 438, 439, 440, 441, 442, 443, 444, 448, 452], "imp": [30, 445, 447, 448, 451, 452, 453, 455], "source_from_cach": [30, 238, 449, 451, 453, 455], "pyimport_getmagicnumb": [30, 55, 452], "magic": [30, 83, 85, 87, 88, 110, 157, 165, 182, 189, 219, 238, 290, 321, 340, 343, 344, 363, 367, 397, 400, 424, 437, 438, 440, 448, 450, 453, 454, 455, 456], "pyc": [30, 32, 33, 84, 85, 153, 238, 261, 282, 293, 314, 324, 331, 340, 359, 397, 398, 403, 407, 425, 430, 431, 436, 438, 440, 441, 443, 444, 448, 449, 450, 453, 454, 458], "four": [30, 56, 62, 76, 78, 86, 87, 88, 90, 91, 92, 102, 105, 114, 126, 148, 166, 179, 180, 196, 200, 212, 228, 231, 236, 243, 246, 247, 255, 256, 259, 265, 276, 296, 300, 316, 318, 319, 320, 324, 325, 327, 330, 347, 353, 361, 366, 410, 416, 427, 436, 443, 446, 451, 458], "pyimport_getmagictag": [30, 55], "tag": [30, 55, 59, 61, 73, 95, 102, 116, 179, 229, 237, 238, 257, 265, 277, 282, 296, 326, 331, 335, 372, 385, 388, 392, 394, 425, 436, 437, 442, 444, 448, 453, 454, 457], "3147": [30, 83, 153, 238, 293, 306, 340, 407, 425, 452], "keep": [30, 32, 34, 38, 61, 70, 71, 76, 78, 83, 85, 87, 88, 92, 97, 99, 101, 102, 105, 114, 116, 122, 133, 137, 140, 148, 150, 159, 161, 165, 166, 168, 170, 175, 182, 185, 200, 203, 215, 216, 223, 225, 232, 236, 240, 243, 246, 249, 259, 265, 276, 277, 279, 282, 287, 289, 301, 319, 324, 328, 331, 340, 347, 365, 366, 372, 378, 383, 385, 390, 402, 403, 407, 411, 415, 416, 419, 425, 426, 427, 428, 438, 440, 441, 442, 443, 444, 451, 453, 456], "mind": [30, 83, 88, 90, 97, 99, 102, 114, 116, 140, 165, 175, 189, 240, 257, 269, 276, 323, 363, 372, 388, 407, 419, 439, 441, 451], "cache_tag": [30, 238, 331, 449, 452], "authorit": [30, 106, 399, 449], "pyimport_getmoduledict": [30, 55], "administr": [30, 32, 57, 78, 81, 98, 145, 237, 277, 316, 318, 344, 383, 404, 413, 423, 436, 441, 452, 457, 458], "pyimport_getmodul": [30, 55, 456], "pyimport_getimport": [30, 55], "finder": [30, 85, 182, 238, 239, 258, 266, 284, 331, 434, 436, 441, 443, 447, 449, 452, 453], "pkg": [30, 238, 284, 396, 411, 430, 431, 435, 437, 438, 442, 444, 447, 448, 449, 457], "__path__": [30, 85, 238, 284, 294, 331, 425, 453, 455, 456], "fetch": [30, 66, 88, 91, 93, 94, 109, 128, 157, 164, 197, 237, 245, 249, 269, 270, 275, 277, 282, 289, 298, 315, 318, 320, 321, 366, 367, 372, 373, 389, 394, 427, 441, 448, 451, 452], "path_importer_cach": [30, 238, 284, 331, 407, 425, 440, 448, 449, 452, 453, 454, 456], "path_hook": [30, 85, 135, 238, 284, 331, 407, 411, 425, 440, 452, 453], "pyimport_importfrozenmoduleobject": [30, 55], "misnom": 30, "pyimport_importfrozenmodul": [30, 55], "_frozen": [30, 165, 448], "freez": [30, 83, 156, 215, 216, 236, 428, 456], "tool": [30, 32, 34, 49, 55, 66, 70, 76, 77, 78, 79, 81, 84, 85, 88, 90, 91, 93, 95, 96, 98, 99, 100, 101, 102, 105, 107, 108, 109, 112, 116, 131, 140, 145, 146, 150, 154, 159, 165, 182, 183, 193, 212, 214, 215, 219, 220, 239, 242, 243, 249, 250, 252, 275, 282, 289, 300, 303, 313, 315, 323, 331, 346, 355, 357, 359, 361, 363, 365, 375, 388, 396, 397, 403, 411, 415, 419, 420, 426, 428, 431, 432, 434, 436, 437, 438, 439, 440, 442, 443, 445, 446, 448, 450, 451, 452, 453, 454, 455, 458], "is_packag": [30, 238, 398, 448], "pyimport_frozenmodul": [30, 33, 165], "record": [30, 59, 73, 76, 90, 91, 92, 93, 98, 99, 100, 104, 105, 108, 116, 140, 145, 150, 153, 164, 165, 166, 167, 173, 175, 186, 192, 201, 225, 239, 243, 247, 255, 257, 259, 266, 275, 276, 277, 282, 290, 291, 320, 322, 324, 327, 340, 361, 362, 363, 365, 366, 367, 376, 397, 407, 415, 437, 440, 441, 442, 443, 444, 451, 452, 453, 454, 457], "plai": [30, 34, 66, 74, 85, 87, 103, 165, 175, 242, 300, 321, 361, 365, 380, 403, 414, 415, 445], "trick": [30, 76, 83, 165, 214, 280, 320, 331, 363, 367, 415, 439], "collect": [30, 31, 41, 44, 48, 50, 61, 62, 65, 66, 71, 73, 82, 83, 85, 88, 90, 93, 94, 95, 98, 99, 101, 102, 103, 109, 111, 114, 116, 119, 127, 133, 140, 148, 156, 157, 159, 160, 161, 165, 168, 170, 171, 173, 182, 183, 202, 203, 214, 215, 216, 230, 231, 232, 239, 242, 243, 245, 249, 269, 277, 282, 287, 290, 296, 298, 312, 314, 315, 318, 319, 320, 321, 323, 324, 327, 331, 338, 340, 345, 353, 359, 361, 362, 365, 369, 372, 377, 378, 381, 386, 388, 393, 402, 403, 405, 411, 414, 416, 417, 418, 425, 427, 428, 429, 431, 436, 439, 440, 441, 442, 443, 445, 446, 448, 449, 450], "pyimport_appendinittab": [30, 32, 33, 44, 55, 70, 71], "initfunc": 30, "pyimport_extendinittab": [30, 32, 33], "_inittab": 30, "emb": [30, 31, 32, 33, 34, 64, 70, 72, 83, 153, 182, 238, 345, 347, 384, 388, 439, 444, 456, 457], "conjunct": [30, 158, 179, 181, 182, 214, 243, 256, 313, 318, 321, 356, 363, 406, 410, 447, 453], "newtab": 30, "sentinel": [30, 36, 56, 71, 73, 74, 83, 88, 99, 170, 214, 249, 257, 269, 367, 439, 452, 456], "fault": [30, 98, 165, 276, 280, 304, 315, 344, 358, 442, 444, 452], "insuffici": [30, 151, 175, 182, 201, 240, 269, 277, 366, 455], "companion": [31, 440], "principl": [31, 34, 71, 83, 85, 175, 365, 366, 383, 417, 434, 452], "introduct": [31, 66, 72, 74, 87, 90, 94, 107, 108, 109, 114, 127, 182, 242, 247, 300, 318, 321, 345, 363, 367, 408, 420, 423, 434, 441, 453, 455], "high": [31, 37, 50, 58, 62, 66, 71, 76, 77, 78, 81, 82, 84, 98, 99, 103, 106, 120, 123, 124, 127, 129, 130, 131, 133, 140, 142, 156, 166, 172, 175, 180, 183, 190, 208, 215, 220, 230, 242, 247, 248, 249, 254, 258, 269, 273, 277, 278, 282, 290, 300, 310, 315, 318, 321, 323, 331, 332, 335, 337, 338, 344, 375, 379, 408, 411, 414, 419, 420, 426, 427, 439, 441, 442, 443, 447, 448, 449, 450, 451, 452, 453, 454, 456, 458], "marshal": [31, 63, 66, 83, 135, 148, 242, 250, 257, 281, 356, 394, 440, 441, 444, 454], "pars": [31, 33, 34, 62, 63, 64, 66, 71, 76, 77, 78, 83, 87, 88, 96, 99, 102, 106, 109, 116, 127, 130, 145, 147, 149, 157, 164, 172, 182, 183, 185, 188, 189, 190, 192, 194, 195, 197, 198, 206, 214, 217, 219, 227, 229, 231, 232, 233, 234, 237, 238, 242, 244, 247, 250, 252, 256, 257, 259, 260, 263, 271, 272, 277, 290, 320, 324, 325, 328, 334, 344, 355, 359, 369, 372, 373, 375, 376, 383, 384, 385, 386, 387, 389, 390, 391, 392, 394, 395, 405, 406, 410, 411, 412, 418, 421, 425, 426, 429, 430, 437, 438, 439, 440, 441, 442, 443, 448, 449, 450, 452, 453, 454, 455, 457], "perf": [31, 33, 63, 66, 94, 331, 430, 449], "abstract": [31, 37, 53, 61, 66, 74, 76, 77, 82, 83, 85, 89, 104, 120, 124, 126, 127, 156, 159, 165, 171, 172, 175, 197, 202, 208, 210, 215, 233, 239, 242, 243, 246, 252, 257, 267, 274, 275, 277, 297, 311, 318, 321, 324, 331, 338, 363, 372, 383, 400, 403, 405, 415, 416, 440, 442, 444, 445, 447, 451, 452, 454, 455, 456, 458], "configur": [31, 34, 41, 57, 62, 66, 70, 71, 83, 84, 85, 88, 90, 93, 95, 97, 100, 102, 110, 112, 119, 120, 125, 126, 129, 130, 156, 160, 162, 165, 173, 175, 178, 200, 206, 212, 224, 234, 236, 237, 238, 242, 245, 254, 255, 257, 259, 276, 277, 287, 288, 289, 296, 297, 302, 305, 309, 313, 317, 318, 320, 321, 331, 333, 337, 339, 340, 343, 347, 350, 351, 352, 353, 356, 365, 366, 367, 372, 375, 376, 381, 383, 386, 387, 388, 392, 394, 401, 422, 425, 427, 430, 433, 435, 437, 438, 439, 440, 441, 442, 443, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 458], "heap": [31, 34, 41, 48, 56, 66, 71, 73, 74, 88, 171, 203, 242, 268, 304, 361, 427, 440, 441, 443, 444, 447, 448, 449, 457, 458], "pyinitfrozenextens": 32, "pymem_setalloc": [32, 33, 41, 449], "pymem_setupdebughook": [32, 41, 177, 455], "pyobject_setarenaalloc": [32, 41], "pysys_resetwarnopt": [32, 55, 57, 449, 450], "py_isiniti": [32, 34, 55], "pymem_getalloc": [32, 41], "pyobject_getarenaalloc": [32, 41], "py_getbuildinfo": [32, 55, 442], "py_getcompil": [32, 55], "py_getcopyright": [32, 55], "py_getplatform": [32, 55], "py_getvers": [32, 55], "py_decodelocal": [32, 33, 55, 57, 62, 454, 456], "pymem_rawmalloc": [32, 33, 41, 64, 453], "pymem_rawrealloc": [32, 41, 64, 453], "pymem_rawcalloc": [32, 41, 454], "pymem_rawfre": [32, 41, 57], "py_encodelocal": [32, 55, 57, 62, 454, 456], "py_getpath": [32, 34, 55, 447, 449, 450], "py_getprefix": [32, 34, 55, 447, 449, 450], "py_getexecprefix": [32, 34, 55, 447, 449, 450], "py_getprogramfullpath": [32, 34, 55, 447, 449, 450, 457], "py_getpythonhom": [32, 55, 447, 449, 450], "py_getprogramnam": [32, 55, 447, 449, 450, 457], "By": [32, 33, 44, 55, 56, 78, 83, 85, 88, 91, 92, 96, 98, 99, 101, 102, 106, 109, 110, 114, 119, 120, 129, 130, 143, 145, 156, 157, 159, 165, 166, 170, 175, 177, 179, 182, 197, 199, 200, 203, 214, 223, 224, 225, 231, 232, 233, 234, 236, 238, 239, 243, 246, 249, 250, 255, 257, 259, 263, 269, 270, 276, 277, 279, 280, 282, 289, 290, 295, 296, 299, 300, 301, 302, 312, 313, 314, 318, 320, 321, 324, 325, 327, 328, 331, 337, 338, 340, 342, 343, 345, 347, 353, 356, 359, 361, 363, 365, 366, 367, 371, 372, 374, 376, 383, 388, 391, 392, 396, 397, 400, 401, 403, 404, 405, 407, 410, 411, 414, 415, 416, 418, 423, 427, 428, 430, 431, 436, 437, 439, 443, 449, 450, 451, 452, 454, 455, 456, 457, 458], "py_byteswarningflag": [32, 449, 450, 456], "bb": [32, 93, 101, 150, 249, 255, 430, 456], "pyconfig": [32, 34, 57, 64, 70, 71, 85, 277, 331, 333, 334, 431, 436, 444, 447, 448, 449, 450, 457, 458], "bytes_warn": [32, 33, 331, 449, 450, 451], "14": [32, 59, 83, 87, 88, 93, 95, 102, 105, 115, 133, 143, 148, 150, 151, 156, 165, 166, 172, 175, 180, 182, 198, 214, 225, 230, 236, 238, 241, 247, 249, 269, 277, 279, 284, 301, 304, 314, 318, 320, 323, 324, 325, 331, 337, 344, 355, 363, 374, 388, 403, 405, 407, 410, 417, 419, 421, 424, 427, 439, 441, 442, 444, 448, 451, 454, 455, 456, 457, 458], "py_debugflag": [32, 449, 450], "parser_debug": [32, 33, 449, 450], "parser": [32, 33, 66, 71, 76, 77, 87, 93, 99, 102, 105, 112, 116, 147, 149, 150, 164, 179, 182, 183, 185, 188, 189, 190, 192, 194, 195, 197, 202, 206, 212, 214, 227, 242, 244, 250, 256, 260, 271, 280, 286, 291, 301, 313, 324, 329, 356, 372, 375, 384, 385, 386, 387, 388, 390, 392, 406, 410, 411, 412, 416, 418, 422, 424, 426, 430, 431, 437, 438, 440, 441, 442, 444, 447, 448, 449, 451, 452, 453, 454, 455, 456], "expert": [32, 33, 276, 425, 430], "pythondebug": [32, 33, 430, 431], "py_dontwritebytecodeflag": [32, 449, 450], "write_bytecod": [32, 33, 449, 450], "try": [32, 33, 34, 41, 44, 47, 61, 69, 71, 73, 74, 75, 76, 77, 78, 82, 84, 85, 90, 91, 92, 93, 96, 97, 98, 99, 101, 102, 103, 105, 106, 109, 110, 114, 116, 120, 127, 129, 132, 133, 134, 139, 150, 156, 157, 158, 164, 165, 166, 172, 175, 179, 180, 182, 189, 201, 202, 212, 214, 215, 217, 219, 225, 234, 236, 238, 243, 246, 249, 250, 255, 257, 259, 266, 269, 272, 273, 275, 276, 277, 279, 280, 282, 284, 287, 290, 296, 301, 302, 305, 313, 314, 315, 317, 318, 320, 321, 324, 328, 331, 337, 339, 340, 343, 345, 347, 358, 361, 363, 366, 367, 372, 375, 376, 378, 379, 383, 388, 394, 395, 397, 403, 404, 405, 406, 407, 409, 410, 411, 413, 414, 416, 418, 419, 421, 424, 430, 436, 437, 438, 439, 440, 441, 443, 444, 445, 447, 448, 449, 451, 452, 453, 454, 455, 457, 458], "pythondontwritebytecod": [32, 33, 83, 331, 430, 443], "py_frozenflag": [32, 449, 450], "pathconfig_warn": [32, 33, 449, 450], "_freeze_modul": 32, "frozenmain": 32, "py_hashrandomizationflag": [32, 449, 450], "hash_se": [32, 33, 449, 450], "use_hash_se": [32, 33, 449, 450], "pythonhashse": [32, 33, 403, 430, 452], "secret": [32, 66, 127, 163, 224, 226, 242, 269, 276, 277, 287, 300, 309, 321, 401, 415, 430, 437], "seed": [32, 33, 76, 85, 277, 300, 321, 323, 331, 401, 430, 444, 451, 458], "py_ignoreenvironmentflag": [32, 449, 450, 456], "use_environ": [32, 33, 34, 449, 450, 458], "pythonpath": [32, 33, 34, 69, 84, 331, 333, 340, 407, 425, 430, 434, 436, 453], "pythonhom": [32, 33, 34, 333, 340, 430, 436, 449, 450, 455], "py_inspectflag": [32, 449, 450], "script": [32, 33, 34, 64, 66, 70, 71, 73, 76, 77, 78, 81, 85, 87, 95, 98, 99, 100, 106, 109, 114, 116, 143, 153, 159, 173, 177, 182, 199, 202, 217, 219, 229, 233, 234, 238, 239, 242, 267, 276, 280, 290, 291, 293, 295, 306, 309, 312, 316, 320, 331, 333, 336, 340, 347, 353, 355, 363, 365, 372, 374, 375, 379, 383, 395, 396, 404, 407, 409, 410, 411, 412, 414, 415, 418, 420, 423, 426, 427, 428, 429, 430, 431, 435, 437, 438, 439, 440, 441, 443, 444, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "stdin": [32, 33, 57, 64, 74, 83, 85, 92, 93, 97, 114, 116, 120, 124, 127, 131, 137, 145, 147, 153, 165, 172, 175, 179, 182, 197, 203, 204, 207, 218, 223, 236, 237, 246, 247, 250, 269, 277, 279, 280, 291, 303, 310, 313, 324, 327, 328, 331, 337, 339, 340, 355, 364, 372, 383, 395, 402, 403, 405, 407, 411, 415, 416, 417, 418, 421, 424, 425, 426, 427, 430, 431, 438, 439, 440, 441, 443, 444, 445, 447, 449, 452, 453, 454, 455, 456, 458], "pythoninspect": [32, 33, 430, 440], "py_interactiveflag": [32, 449, 450], "py_isolatedflag": [32, 449, 450], "isol": [32, 44, 61, 64, 66, 76, 85, 93, 94, 107, 109, 116, 133, 182, 236, 309, 331, 333, 340, 365, 366, 375, 430, 436, 448, 449, 450, 453, 455, 458], "neither": [32, 74, 88, 93, 96, 102, 109, 123, 127, 136, 137, 148, 170, 175, 180, 182, 185, 194, 198, 214, 231, 250, 255, 258, 259, 262, 269, 272, 276, 277, 282, 285, 300, 301, 319, 320, 321, 324, 331, 338, 353, 357, 363, 365, 372, 379, 400, 401, 403, 405, 430, 449, 453, 455, 456], "directori": [32, 33, 34, 49, 66, 71, 73, 76, 77, 82, 83, 84, 85, 87, 88, 91, 93, 95, 99, 105, 109, 131, 153, 157, 159, 173, 178, 179, 182, 189, 199, 201, 202, 209, 212, 214, 219, 220, 234, 236, 237, 238, 239, 240, 241, 242, 259, 266, 269, 272, 276, 278, 279, 280, 284, 288, 292, 293, 294, 295, 302, 306, 309, 313, 316, 320, 321, 322, 328, 331, 333, 334, 336, 337, 340, 357, 361, 365, 372, 375, 378, 379, 383, 396, 397, 398, 400, 407, 413, 418, 422, 423, 426, 428, 430, 431, 435, 436, 437, 438, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 455, 456, 457, 458, 460], "site": [32, 33, 66, 78, 83, 93, 105, 106, 146, 157, 199, 214, 232, 233, 238, 239, 242, 247, 255, 277, 284, 297, 317, 331, 333, 334, 337, 372, 373, 375, 376, 389, 405, 407, 413, 420, 425, 428, 429, 430, 431, 436, 437, 442, 444, 445, 452, 453, 454], "py_legacywindowsfsencodingflag": [32, 449, 450], "pypreconfig": [32, 41, 57, 449, 450, 457], "legacy_windows_fs_encod": [32, 33, 57, 449, 450], "mbc": [32, 33, 331, 430, 436, 439, 440, 451, 452, 455], "surrogatepass": [32, 33, 148, 430, 453, 455], "pythonlegacywindowsfsencod": [32, 33, 331, 430, 455], "529": [32, 62, 277, 331, 430, 436, 457], "py_legacywindowsstdioflag": [32, 449, 450], "legacy_windows_stdio": [32, 33, 449, 450], "fileio": [32, 33, 114, 214, 246, 444, 453], "_windowsconsoleio": [32, 33], "pythonlegacywindowsstdio": [32, 33, 331, 430, 455], "528": [32, 33, 436], "py_nositeflag": [32, 449, 450], "site_import": [32, 33, 449, 450], "entail": [32, 33, 430], "py_nousersitedirectori": [32, 449, 450], "user_site_directori": [32, 33, 449, 450], "pythonnousersit": [32, 33, 316, 430, 443], "py_optimizeflag": [32, 449, 450], "optimization_level": [32, 33, 449, 450], "pythonoptim": [32, 33, 430], "py_quietflag": [32, 449, 450], "quiet": [32, 33, 87, 153, 175, 179, 262, 276, 293, 331, 340, 436, 444, 447, 449, 450, 451, 454], "copyright": [32, 33, 66, 71, 84, 117, 158, 224, 236, 331, 388, 401, 423, 425, 430, 451, 457], "q": [32, 33, 61, 82, 87, 90, 95, 99, 101, 115, 150, 152, 153, 172, 175, 179, 191, 203, 214, 249, 262, 269, 276, 279, 280, 283, 293, 298, 299, 300, 301, 323, 327, 331, 336, 371, 417, 419, 430, 439, 446, 451, 452, 454], "py_unbufferedstdioflag": [32, 449, 450], "buffered_stdio": [32, 33, 449, 450], "stdout": [32, 33, 57, 62, 64, 71, 85, 87, 88, 98, 99, 114, 116, 120, 124, 127, 131, 133, 145, 159, 165, 166, 179, 180, 182, 199, 205, 212, 214, 231, 236, 237, 246, 250, 256, 257, 269, 276, 277, 280, 283, 289, 290, 291, 303, 315, 324, 328, 331, 337, 340, 355, 357, 358, 365, 366, 375, 376, 383, 388, 392, 397, 403, 421, 425, 426, 430, 436, 437, 441, 442, 443, 444, 445, 450, 451, 452, 453, 454, 455, 456], "pythonunbuff": [32, 33, 331, 430], "py_verboseflag": [32, 449, 450], "verbos": [32, 33, 61, 87, 88, 96, 98, 99, 114, 150, 166, 177, 182, 199, 215, 217, 256, 276, 301, 313, 314, 325, 331, 336, 337, 340, 345, 359, 365, 375, 394, 403, 436, 439, 440, 441, 443, 444, 448, 449, 450, 451, 453, 455, 456], "show": [32, 33, 34, 70, 71, 72, 74, 85, 87, 88, 90, 91, 92, 93, 95, 97, 98, 99, 100, 103, 105, 106, 111, 114, 116, 120, 133, 140, 143, 145, 148, 150, 159, 162, 165, 168, 175, 177, 178, 179, 182, 191, 200, 202, 205, 214, 215, 223, 224, 231, 232, 236, 237, 238, 245, 249, 250, 255, 265, 269, 275, 276, 277, 282, 289, 290, 300, 303, 308, 314, 316, 318, 320, 321, 323, 324, 325, 337, 345, 347, 348, 353, 355, 357, 358, 361, 365, 366, 367, 374, 375, 376, 378, 394, 395, 396, 406, 410, 414, 415, 417, 418, 419, 426, 427, 428, 430, 437, 438, 439, 440, 441, 442, 443, 444, 446, 448, 449, 451, 453, 454, 455, 458], "cleanup": [32, 33, 34, 57, 88, 93, 99, 110, 129, 134, 159, 203, 270, 277, 319, 328, 331, 338, 340, 365, 367, 378, 381, 386, 402, 403, 404, 405, 430, 437, 439, 442, 444, 445, 449, 451, 452, 457], "pythonverbos": [32, 33, 430], "fundament": [32, 34, 61, 76, 78, 85, 103, 183, 247, 269, 276, 282, 289, 290, 300, 320, 362, 378, 407, 436, 437, 443, 449, 455], "builtin": [32, 33, 34, 51, 61, 66, 83, 85, 88, 91, 104, 116, 135, 148, 150, 180, 182, 214, 219, 224, 233, 236, 238, 242, 243, 246, 247, 249, 256, 282, 290, 297, 305, 316, 324, 331, 338, 362, 363, 367, 402, 403, 405, 407, 410, 412, 415, 416, 418, 425, 431, 443, 446, 447, 449, 450, 451, 453, 454, 455, 456, 458], "__main__": [32, 33, 34, 64, 66, 77, 82, 83, 85, 91, 98, 99, 100, 120, 137, 145, 156, 177, 179, 182, 189, 202, 217, 238, 242, 266, 269, 276, 280, 282, 290, 295, 297, 305, 306, 315, 319, 320, 322, 324, 340, 345, 359, 361, 363, 365, 366, 367, 375, 376, 378, 383, 396, 404, 412, 415, 425, 430, 438, 441, 442, 443, 444, 446, 451, 452, 453, 454, 457, 458], "argv": [32, 33, 34, 64, 70, 71, 99, 109, 120, 130, 135, 177, 179, 182, 207, 217, 236, 276, 277, 280, 291, 306, 319, 322, 331, 335, 347, 365, 383, 418, 423, 425, 426, 430, 440, 444, 445, 450, 451, 456, 457], "py_finalizeex": [32, 34, 55, 57, 70, 97, 455], "py_initializefromconfig": [32, 33, 34, 41, 70, 71, 333, 436, 449, 450, 457], "custom": [32, 33, 34, 57, 61, 66, 69, 71, 74, 77, 83, 85, 106, 110, 111, 116, 120, 121, 123, 129, 133, 143, 145, 148, 150, 151, 170, 172, 178, 182, 183, 196, 197, 200, 202, 214, 231, 234, 236, 238, 239, 242, 243, 246, 250, 255, 257, 259, 267, 271, 276, 302, 305, 314, 315, 316, 321, 324, 331, 333, 337, 340, 343, 347, 353, 363, 365, 366, 372, 375, 376, 378, 383, 385, 387, 388, 394, 400, 402, 405, 407, 411, 414, 415, 417, 422, 427, 429, 431, 437, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 454, 457, 458], "consol": [32, 33, 64, 83, 90, 98, 99, 109, 165, 167, 182, 190, 214, 236, 256, 277, 280, 295, 302, 328, 331, 413, 430, 436, 439, 443, 451, 452, 456], "o_text": [32, 268, 277], "o_binari": [32, 33, 268, 277], "py_initializeex": [32, 55, 97], "initsig": 32, "registr": [32, 57, 151, 159, 277, 282, 311, 372, 381, 395, 443], "signal": [32, 33, 47, 57, 61, 66, 90, 93, 97, 99, 102, 110, 117, 119, 124, 126, 127, 129, 131, 134, 135, 156, 165, 166, 177, 180, 182, 202, 214, 231, 242, 245, 246, 248, 249, 255, 256, 262, 269, 276, 277, 280, 282, 291, 301, 304, 310, 311, 313, 318, 320, 321, 325, 328, 331, 340, 343, 344, 349, 358, 363, 372, 388, 390, 394, 405, 407, 418, 430, 437, 438, 439, 440, 441, 442, 443, 444, 447, 448, 451, 455, 457], "py_isfin": [32, 450], "shut": [32, 49, 70, 85, 99, 103, 120, 234, 310, 315, 318, 319, 331, 361, 383, 427, 430, 440, 444, 450, 454, 458], "down": [32, 34, 49, 50, 70, 74, 83, 84, 85, 93, 98, 99, 101, 103, 120, 128, 130, 133, 150, 166, 168, 180, 182, 201, 225, 234, 236, 255, 262, 269, 277, 279, 280, 290, 291, 298, 300, 301, 310, 315, 318, 319, 321, 331, 332, 349, 353, 361, 365, 371, 383, 415, 419, 427, 430, 437, 439, 440, 444, 448, 449, 450, 454, 455, 456, 457, 458], "undo": [32, 145, 166, 236, 255, 361, 366, 443], "py_newinterpret": [32, 55, 97], "ideal": [32, 61, 76, 93, 99, 101, 105, 129, 143, 172, 331, 376, 383, 420, 425, 441, 451], "flush": [32, 98, 99, 103, 110, 120, 124, 127, 130, 142, 148, 150, 166, 203, 214, 234, 246, 255, 257, 258, 259, 265, 269, 277, 296, 304, 315, 318, 328, 331, 340, 375, 381, 383, 388, 399, 452, 453, 455, 457], "restart": [32, 99, 166, 201, 212, 236, 256, 280, 315, 339, 344, 425, 443, 444, 454, 456, 457], "loadabl": [32, 61, 97, 238, 289, 320, 431, 436], "dll": [32, 33, 55, 82, 257, 277, 331, 347, 436, 437, 442, 443, 447, 453, 457], "unload": [32, 97, 340, 378], "hunt": [32, 276], "random": [32, 33, 34, 66, 71, 76, 83, 85, 90, 93, 99, 105, 120, 128, 142, 148, 150, 163, 165, 182, 207, 208, 215, 225, 236, 242, 245, 246, 249, 269, 274, 276, 290, 301, 309, 310, 323, 337, 338, 361, 365, 374, 385, 399, 401, 403, 426, 429, 430, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 452, 453, 454, 457], "amount": [32, 34, 44, 71, 74, 76, 82, 83, 88, 93, 103, 120, 127, 130, 133, 166, 175, 212, 220, 224, 225, 246, 247, 258, 269, 276, 277, 279, 282, 287, 289, 304, 312, 314, 315, 318, 322, 324, 342, 343, 344, 347, 350, 353, 361, 370, 372, 384, 386, 399, 415, 416, 418, 424, 438, 441, 443, 447, 451, 453, 454, 455, 456, 458], "ti": [32, 175, 290, 321, 323, 332, 402, 440, 441, 448, 457], "_pysys_clearaudithook": [32, 135], "py_fin": [32, 33, 55, 444], "program_nam": [32, 33, 34, 70, 71, 450], "prefix": [32, 33, 34, 46, 55, 56, 59, 61, 62, 71, 76, 85, 88, 96, 101, 102, 103, 145, 149, 153, 157, 164, 165, 166, 175, 179, 180, 192, 202, 214, 217, 219, 224, 232, 234, 236, 256, 257, 277, 278, 280, 284, 294, 296, 301, 314, 316, 324, 325, 327, 331, 333, 334, 338, 340, 342, 347, 353, 357, 365, 366, 374, 375, 376, 385, 388, 390, 394, 398, 399, 402, 406, 410, 411, 415, 421, 424, 425, 430, 431, 435, 436, 440, 443, 444, 447, 449, 450, 451, 452, 454, 455, 457], "complic": [32, 61, 71, 76, 85, 86, 88, 90, 92, 93, 97, 101, 102, 103, 105, 106, 148, 159, 165, 170, 179, 182, 204, 215, 216, 232, 276, 282, 301, 344, 403, 405, 414, 418, 421, 424, 437, 439, 440, 441, 442, 443, 444, 446, 451], "usr": [32, 34, 77, 82, 87, 93, 95, 99, 105, 157, 165, 189, 219, 220, 276, 278, 279, 285, 301, 308, 316, 324, 328, 331, 334, 338, 344, 347, 359, 372, 396, 413, 423, 428, 430, 431, 434, 435, 436, 438, 440, 442, 447, 451, 453, 454], "bin": [32, 34, 70, 76, 77, 82, 93, 99, 105, 106, 157, 189, 214, 234, 239, 276, 277, 279, 324, 325, 334, 372, 373, 375, 396, 403, 413, 423, 425, 428, 434, 435, 436, 440, 441, 442, 443, 444, 445, 446], "makefil": [32, 70, 71, 77, 220, 224, 246, 279, 318, 321, 334, 403, 437, 438, 443, 444, 449, 452, 453, 454, 455], "exec": [32, 71, 82, 116, 135, 137, 147, 149, 182, 201, 202, 214, 216, 238, 277, 280, 290, 324, 328, 330, 331, 340, 347, 355, 357, 358, 359, 403, 404, 411, 412, 413, 415, 425, 431, 437, 438, 439, 441, 442, 445, 447, 453, 454], "exec_prefix": [32, 33, 34, 269, 316, 331, 333, 357, 375, 425, 430, 431, 435, 449, 450, 451], "background": [32, 75, 90, 95, 99, 103, 120, 133, 157, 159, 166, 236, 257, 269, 277, 320, 328, 340, 343, 347, 353, 361, 375, 402, 403, 427, 441, 453], "plat": [32, 436, 455], "subtre": [32, 388, 437], "speak": [32, 33, 71, 83, 103, 115, 172, 214, 261, 324, 327, 335, 415, 416], "sparc": 32, "machin": [32, 49, 62, 71, 82, 84, 85, 95, 98, 99, 103, 115, 127, 148, 156, 166, 167, 172, 189, 201, 214, 219, 232, 243, 246, 248, 256, 257, 258, 261, 269, 270, 277, 279, 285, 290, 295, 315, 317, 318, 320, 321, 323, 324, 327, 343, 345, 374, 384, 395, 396, 403, 409, 419, 421, 423, 431, 436, 437, 438, 439, 442, 443, 444, 446, 448, 449, 451, 452, 456, 457], "solari": [32, 277, 285, 288, 310, 331, 334, 344, 437, 444, 451, 452, 454, 456], "consid": [32, 33, 38, 41, 47, 53, 54, 55, 61, 62, 70, 71, 73, 74, 76, 83, 85, 86, 87, 88, 90, 91, 92, 93, 96, 97, 99, 100, 102, 109, 111, 114, 119, 120, 122, 137, 140, 144, 150, 153, 157, 158, 164, 165, 166, 170, 172, 173, 175, 179, 180, 182, 185, 193, 194, 197, 214, 215, 217, 219, 220, 224, 225, 232, 234, 238, 240, 241, 243, 245, 246, 247, 249, 250, 254, 255, 256, 257, 258, 259, 262, 269, 270, 273, 276, 278, 279, 280, 282, 290, 296, 301, 302, 308, 310, 313, 315, 321, 323, 324, 325, 327, 331, 334, 337, 340, 342, 343, 344, 347, 362, 363, 365, 366, 371, 372, 375, 378, 383, 385, 386, 387, 395, 396, 402, 403, 404, 405, 407, 411, 415, 416, 417, 419, 425, 431, 436, 437, 438, 439, 440, 441, 442, 444, 445, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458], "intel": [32, 84, 290, 327, 431, 434, 442, 444, 454, 455, 457, 458], "linux": [32, 33, 49, 66, 69, 70, 78, 81, 82, 90, 91, 94, 95, 110, 126, 165, 166, 175, 201, 203, 204, 219, 236, 245, 246, 257, 265, 269, 288, 291, 304, 308, 310, 314, 315, 318, 322, 328, 331, 334, 337, 338, 340, 343, 344, 347, 372, 423, 430, 431, 436, 437, 438, 440, 441, 442, 443, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "major": [32, 75, 78, 85, 88, 91, 92, 101, 103, 105, 106, 116, 157, 166, 172, 183, 192, 195, 197, 219, 224, 232, 276, 277, 285, 287, 295, 324, 331, 334, 365, 371, 420, 429, 436, 437, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 457, 458, 460], "revis": [32, 76, 105, 106, 225, 285, 327, 401, 437, 442, 445, 446, 452, 455, 456], "stori": [32, 71, 78, 140, 225, 421], "strategi": [32, 41, 61, 71, 74, 77, 114, 129, 148, 257, 340, 347, 365, 379, 399, 400, 407, 416, 440, 445, 451, 456], "meaningless": [32, 105, 438, 439, 453], "mount": [32, 277, 278, 279, 314, 444, 449, 453, 456], "automount": 32, "comput": [32, 33, 34, 47, 61, 62, 66, 70, 73, 74, 76, 78, 80, 83, 84, 85, 88, 90, 91, 93, 95, 96, 98, 99, 102, 104, 105, 115, 127, 133, 139, 140, 143, 144, 150, 151, 152, 156, 167, 170, 172, 175, 180, 182, 205, 212, 214, 215, 224, 225, 226, 242, 243, 247, 249, 255, 257, 262, 269, 275, 277, 278, 279, 285, 289, 290, 293, 300, 308, 316, 318, 319, 321, 323, 324, 331, 341, 343, 347, 361, 365, 372, 374, 381, 399, 401, 402, 403, 405, 410, 411, 413, 414, 415, 417, 419, 421, 426, 427, 429, 430, 431, 434, 437, 438, 439, 440, 442, 443, 444, 446, 447, 448, 449, 451, 453, 456, 457], "delimit": [32, 76, 83, 85, 88, 102, 103, 157, 164, 182, 190, 210, 227, 236, 237, 259, 276, 282, 301, 302, 324, 325, 328, 347, 355, 371, 400, 427, 436, 440, 451], "maco": [32, 33, 55, 78, 79, 81, 82, 83, 95, 105, 107, 110, 127, 165, 204, 245, 257, 265, 269, 277, 286, 290, 291, 302, 310, 314, 316, 318, 320, 321, 322, 331, 334, 340, 343, 344, 347, 353, 372, 379, 401, 414, 428, 430, 434, 437, 438, 439, 440, 442, 443, 444, 447, 449, 450, 455, 456, 457], "startup": [32, 33, 84, 85, 109, 119, 158, 177, 203, 238, 254, 256, 277, 316, 324, 331, 359, 407, 422, 430, 431, 434, 442, 443, 447, 452, 453, 454, 456, 458], "0a5": 32, "py3k": [32, 85, 101, 331, 334, 445], "63103m": 32, "2008": [32, 148, 172, 212, 314, 327, 388, 401, 443, 444, 445, 451], "00": [32, 87, 100, 103, 105, 172, 175, 210, 224, 255, 301, 321, 344, 361, 400, 426, 427, 430, 442, 443, 444, 451, 455, 458], "53": [32, 76, 99, 100, 133, 172, 175, 262, 300, 323, 324, 344, 367, 419, 442], "55": [32, 91, 93, 98, 99, 100, 133, 175, 215, 270, 300, 301, 361, 416, 417, 419, 424, 425, 430, 455], "gcc": [32, 34, 61, 165, 285, 331, 423, 430, 431, 443, 444, 446, 447, 448, 450, 453, 455], "period": [32, 55, 76, 83, 85, 88, 92, 98, 166, 172, 175, 209, 215, 255, 257, 269, 278, 284, 300, 305, 308, 318, 319, 321, 323, 342, 353, 373, 395, 405, 410, 416, 436, 437, 440, 441, 442, 443, 444, 448, 449, 451], "offici": [32, 101, 148, 184, 198, 224, 263, 321, 347, 365, 386, 394, 403, 434, 436, 437, 438, 439, 442, 444, 447, 451, 452, 454, 456, 458], "suno": [32, 285, 337], "sunos5": [32, 331], "darwin": [32, 285, 331, 344, 437, 443, 454], "1991": [32, 67, 78, 320, 401], "1995": [32, 67, 198, 401, 437], "sticht": [32, 67, 401], "mathematisch": [32, 67, 401], "centrum": [32, 67, 401], "amsterdam": [32, 78, 344, 401], "67": [32, 100, 210, 214, 318, 323, 359, 361, 421, 443], "aug": [32, 93, 172, 398, 439, 440], "1997": [32, 140, 401, 444, 451], "22": [32, 75, 99, 102, 105, 143, 150, 165, 172, 180, 225, 236, 247, 249, 255, 270, 300, 318, 321, 325, 361, 398, 401, 419, 440, 449, 451, 457, 458], "34": [32, 99, 133, 172, 175, 210, 215, 318, 321, 323, 405, 416, 424, 425, 451], "home": [32, 33, 78, 79, 83, 84, 90, 99, 102, 145, 157, 166, 203, 223, 236, 239, 259, 272, 277, 278, 279, 280, 288, 292, 296, 302, 313, 316, 328, 333, 334, 340, 347, 361, 375, 397, 399, 409, 413, 428, 431, 436, 443, 449, 450, 451, 452, 454, 457], "simplest": [32, 61, 70, 71, 74, 88, 93, 96, 97, 98, 102, 103, 106, 114, 148, 159, 164, 175, 182, 189, 199, 225, 255, 282, 301, 321, 343, 363, 365, 366, 403, 405, 415, 416, 425, 426, 427, 430, 437, 439, 440, 447], "simultan": [32, 61, 99, 101, 131, 132, 142, 175, 220, 236, 246, 249, 259, 300, 312, 319, 320, 340, 343, 411, 423, 424, 436, 443, 447, 448, 454, 457], "twice": [32, 33, 75, 86, 93, 99, 101, 104, 105, 108, 139, 153, 157, 172, 177, 203, 221, 225, 226, 243, 262, 301, 320, 355, 376, 397, 415, 421, 430, 437, 439, 440, 441, 443, 444, 448, 455, 457], "concurr": [32, 66, 82, 85, 109, 117, 118, 120, 123, 124, 127, 128, 131, 160, 215, 242, 259, 269, 279, 282, 293, 302, 312, 320, 321, 328, 331, 343, 388, 418, 444, 448, 449, 457], "regularli": [32, 41, 101, 107, 202, 361, 436], "setswitchinterv": [32, 82, 331, 340, 425, 451, 458], "potenti": [32, 33, 34, 61, 83, 93, 97, 98, 99, 101, 107, 120, 157, 172, 212, 214, 237, 238, 241, 243, 249, 255, 256, 257, 269, 270, 277, 278, 282, 287, 298, 309, 319, 321, 324, 331, 342, 362, 363, 365, 371, 384, 396, 403, 407, 416, 430, 436, 438, 439, 443, 447, 448, 449, 450, 451, 452, 453, 454, 456], "meantim": [32, 116], "bookkeep": [32, 166, 449], "pythreadst": [32, 55, 447, 448, 449, 453, 458], "pythreadstate_get": [32, 55], "reacquir": [32, 165, 343], "py_end_allow_thread": [32, 55, 71, 457], "hidden": [32, 55, 83, 84, 168, 180, 220, 236, 280, 290, 300, 319, 353, 361, 428, 449, 452, 456, 457, 458], "close": [32, 49, 61, 64, 74, 76, 77, 83, 84, 85, 88, 93, 97, 98, 99, 103, 105, 114, 118, 120, 124, 126, 127, 129, 130, 131, 133, 144, 145, 147, 148, 151, 157, 159, 160, 166, 173, 177, 179, 180, 188, 196, 197, 202, 203, 207, 212, 214, 223, 224, 229, 231, 232, 236, 237, 246, 255, 257, 258, 259, 262, 265, 269, 270, 276, 277, 279, 290, 291, 296, 302, 310, 311, 312, 313, 315, 317, 318, 319, 320, 321, 323, 324, 328, 331, 337, 338, 340, 343, 344, 347, 353, 355, 361, 363, 365, 366, 367, 372, 375, 377, 381, 383, 388, 391, 392, 394, 395, 396, 397, 403, 405, 406, 410, 416, 418, 419, 421, 427, 430, 437, 441, 442, 443, 444, 446, 447, 450, 451, 452, 453, 454, 455, 456, 457, 458], "expand": [32, 56, 61, 73, 84, 85, 87, 92, 102, 105, 116, 157, 172, 175, 182, 219, 236, 243, 247, 249, 256, 269, 276, 278, 279, 296, 301, 324, 334, 342, 344, 347, 353, 366, 371, 381, 384, 385, 387, 388, 390, 395, 405, 421, 436, 439, 440, 443, 451, 452, 453, 454, 455, 456, 457, 458], "_save": 32, "pyeval_savethread": [32, 55, 450, 451], "pyeval_restorethread": [32, 55, 450, 451, 457], "compress": [32, 66, 85, 88, 93, 96, 99, 127, 148, 157, 189, 207, 223, 224, 242, 247, 249, 263, 282, 314, 321, 322, 337, 377, 384, 396, 397, 429, 439, 440, 442, 444, 446, 447, 448, 451, 452, 453, 454, 455, 456, 457], "cryptograph": [32, 66, 224, 242, 277, 300, 308, 321, 388, 399, 452, 455], "zlib": [32, 66, 82, 88, 102, 113, 148, 223, 224, 242, 314, 340, 397, 426, 439, 440, 442, 447, 448, 458], "hashlib": [32, 66, 82, 163, 226, 242, 309, 320, 401, 431, 443, 444, 445, 450], "dedic": [32, 99, 157, 182, 224, 321, 324, 340, 363], "aforement": [32, 119, 452], "pygilstate_ensur": [32, 55, 450, 457], "pygilstate_releas": [32, 55, 450], "idiom": [32, 34, 71, 76, 83, 85, 101, 104, 109, 114, 182, 214, 269, 313, 321, 331, 363, 378, 418, 440, 445, 451, 452, 458], "pygilstate_st": [32, 55], "gstate": 32, "callsomefunct": 32, "pygilstate_": 32, "unsupport": [32, 33, 87, 88, 106, 110, 114, 120, 157, 172, 182, 214, 219, 246, 261, 269, 270, 279, 282, 286, 318, 321, 323, 328, 343, 363, 366, 371, 372, 381, 397, 407, 418, 436, 437, 441, 443, 451, 455, 458], "face": [32, 105, 120, 123, 142, 236, 257, 284, 361, 371, 400, 437, 443, 445, 447, 452, 453, 454], "impact": [32, 73, 157, 238, 277, 279, 289, 316, 320, 321, 327, 328, 340, 363, 448], "solv": [32, 76, 82, 83, 85, 88, 93, 102, 109, 236, 269, 312, 323, 327, 337, 363, 366, 367, 402, 429, 439, 440, 442, 446, 451, 453, 457], "afterward": [32, 70, 91, 165, 172, 175, 249, 277, 310, 320, 331, 367, 396, 403, 423, 424, 439, 440], "pthread_atfork": 32, "accomplish": [32, 34, 83, 101, 114, 166, 216, 237, 288, 312, 385, 402, 447], "deadlock": [32, 131, 156, 201, 203, 255, 269, 277, 298, 319, 328, 331, 343, 403, 443, 451, 452], "defunct": 32, "pyos_afterfork_child": [32, 55, 57, 277, 449, 450, 456, 457], "belong": [32, 41, 56, 61, 71, 83, 92, 97, 133, 156, 182, 200, 232, 246, 247, 276, 277, 296, 319, 320, 324, 353, 362, 376, 385, 391, 402, 403, 415, 416, 444, 447, 452], "pyinterpreterst": [32, 33, 55, 61, 447, 457, 458], "natur": [32, 34, 76, 83, 92, 102, 105, 109, 120, 144, 148, 163, 165, 175, 182, 183, 219, 262, 265, 278, 290, 300, 312, 318, 323, 353, 378, 379, 388, 405, 410, 415, 419, 420, 437, 441, 443, 444, 445, 446, 448, 451, 455, 456], "commonli": [32, 71, 82, 83, 85, 90, 93, 96, 102, 105, 109, 114, 157, 179, 202, 204, 214, 231, 242, 245, 263, 269, 271, 279, 319, 323, 324, 326, 328, 337, 344, 347, 351, 363, 365, 371, 372, 376, 392, 394, 397, 403, 410, 416, 419, 420, 421, 426, 436, 439, 441, 442, 443, 447, 454, 456], "cooper": [32, 85, 111, 133, 154, 192, 214, 321, 331, 347, 401, 415, 456], "interp": [32, 347], "tstate": [32, 448, 449, 458], "ensu": [32, 451], "unwant": [32, 34, 83, 337, 425, 456], "needn": [32, 301, 327, 456], "pythreadstate_swap": [32, 55], "swap": [32, 70, 103, 148, 150, 165, 180, 249, 269, 304, 318, 327, 340, 403, 411, 426, 448, 456], "relat": [32, 41, 44, 61, 66, 76, 78, 82, 83, 85, 91, 93, 99, 105, 109, 127, 133, 138, 150, 157, 166, 171, 172, 182, 183, 185, 189, 194, 196, 197, 202, 206, 212, 217, 224, 225, 230, 242, 243, 244, 245, 247, 249, 257, 259, 269, 274, 277, 281, 283, 290, 296, 297, 302, 308, 315, 318, 320, 321, 324, 325, 336, 344, 353, 361, 362, 363, 376, 378, 387, 390, 401, 403, 405, 406, 410, 415, 417, 427, 429, 436, 437, 438, 440, 441, 442, 443, 444, 445, 450, 451, 452, 453, 455, 456, 457], "henc": [32, 71, 76, 87, 99, 109, 116, 159, 162, 180, 182, 216, 236, 238, 241, 257, 269, 276, 279, 290, 304, 313, 323, 324, 327, 328, 343, 366, 376, 402, 403, 405, 441, 453, 456], "gilstat": 32, "everi": [32, 34, 41, 47, 55, 56, 71, 73, 75, 76, 78, 83, 85, 88, 91, 93, 97, 98, 99, 100, 102, 105, 106, 111, 116, 120, 126, 128, 133, 134, 136, 139, 148, 157, 160, 165, 166, 172, 173, 175, 179, 180, 182, 183, 185, 194, 203, 212, 214, 219, 221, 225, 232, 234, 236, 239, 243, 247, 249, 250, 255, 257, 265, 269, 276, 277, 284, 296, 298, 301, 314, 315, 316, 318, 319, 320, 324, 325, 328, 330, 334, 335, 342, 343, 353, 356, 361, 363, 365, 366, 372, 376, 383, 385, 388, 394, 400, 402, 403, 407, 409, 413, 416, 419, 420, 425, 428, 430, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 449, 451, 453, 454, 455, 457], "pygilstate_getthisthreadst": [32, 55], "auto": [32, 78, 91, 106, 172, 200, 236, 302, 313, 318, 321, 361, 366, 367, 424, 431, 435, 437, 444, 447, 451, 455, 456], "mainli": [32, 44, 98, 116, 145, 157, 243, 261, 264, 276, 291, 331, 334, 363, 383, 394, 403, 436, 447, 448, 458], "diagnost": [32, 41, 73, 98, 272, 336, 363, 366, 383, 394, 396, 451, 455], "pygilstate_check": 32, "sensit": [32, 140, 150, 157, 209, 237, 257, 263, 279, 331, 363, 365, 376, 403, 430, 438, 440, 441, 442, 443, 448, 449, 453], "brace": [32, 76, 85, 88, 148, 301, 324, 325, 374, 405, 410, 417, 427, 455, 456], "py_block_thread": [32, 55], "py_unblock_thread": [32, 55], "pyinterpreterstate_new": [32, 55, 135], "serial": [32, 40, 41, 66, 85, 99, 157, 183, 185, 186, 190, 192, 194, 195, 196, 197, 242, 250, 255, 257, 269, 270, 281, 286, 312, 315, 317, 320, 327, 331, 388, 421, 437, 443, 444, 446, 448, 451, 452, 453, 458], "pyinterpreterstate_clear": [32, 55, 135], "pyinterpreterstate_delet": [32, 55], "pythreadstate_new": [32, 55], "pythreadstate_clear": [32, 55], "on_delet": 32, "pythreadstate_delet": [32, 55], "pythreadstate_deletecurr": [32, 458], "uint64_t": 32, "pythreadstate_getid": [32, 55, 458], "pythreadstate_getinterpret": [32, 55, 458], "pythreadstate_entertrac": [32, 448], "suspend": [32, 85, 93, 119, 133, 166, 243, 296, 315, 339, 343, 344, 402, 403, 405, 439, 440, 442, 448, 454, 456], "pythreadstate_leavetrac": [32, 448], "pyeval_settrac": [32, 439], "pyeval_setprofil": [32, 439], "pyinterpreterstate_get": [32, 55, 450, 458], "int64_t": 32, "pyinterpreterstate_getid": [32, 55, 456], "pyinterpreterstate_getdict": [32, 55], "pymodule_getst": [32, 44, 55, 59, 88, 97, 458], "_pyframeevalfunct": [32, 448], "throwflag": [32, 64], "throw": [32, 64, 75, 86, 88, 92, 93, 98, 122, 133, 151, 166, 180, 236, 277, 332, 340, 363, 371, 403, 405, 406, 414, 442, 447, 449, 450, 452, 455, 458], "_pyinterpreterstate_getevalframefunc": 32, "_pyinterpreterstate_setevalframefunc": 32, "eval_fram": [32, 458], "pythreadstate_getdict": [32, 55], "okai": [32, 92, 114, 157, 254, 363, 383, 425], "pythreadstate_setasyncexc": [32, 55, 456], "naiv": [32, 102, 192, 198, 224, 320, 452], "misus": [32, 44, 101, 320, 439], "pyeval_acquirethread": [32, 55, 450, 457], "pyeval_releasethread": [32, 55], "perhap": [32, 61, 70, 71, 74, 77, 78, 81, 82, 88, 92, 97, 98, 99, 102, 103, 106, 114, 144, 166, 170, 182, 207, 232, 246, 254, 256, 269, 277, 282, 285, 300, 316, 318, 371, 386, 403, 405, 406, 414, 415, 416, 418, 423, 437, 438, 439, 441, 442, 443, 447, 449, 457], "pyinterpreterstate_main": 32, "pyinterpreterconfig": [32, 449], "py_newinterpreterfromconfig": [32, 449], "use_main_obmalloc": 32, "check_multi_interp_extens": [32, 449], "pyinterpreterconfig_own_gil": [32, 449], "allow_fork": 32, "unrestrict": [32, 57, 76], "subprocess": [32, 66, 99, 117, 119, 124, 126, 135, 154, 156, 159, 197, 199, 237, 242, 245, 269, 277, 309, 313, 318, 319, 340, 359, 361, 375, 376, 430, 435, 440, 443, 444, 447, 450, 451, 457, 458], "allow_exec": 32, "execv": [32, 245, 276, 277, 288, 452], "allow_thread": 32, "allow_daemon_thread": 32, "daemon": [32, 98, 99, 257, 269, 298, 317, 318, 319, 343, 344, 378, 440, 443, 447, 450, 452, 456, 458], "phase": [32, 69, 71, 85, 88, 97, 107, 132, 144, 216, 238, 321, 353, 406, 407, 411, 443, 447, 451, 452], "init": [32, 44, 61, 71, 84, 135, 165, 192, 238, 263, 277, 279, 290, 363, 442, 443], "489": [32, 44, 69, 71, 238, 458], "py_mod_multiple_interpret": [32, 44], "pyinterpreterconfig_default_gil": 32, "pyinterpreterconfig_shared_gil": 32, "pystatu": [32, 70, 71, 449, 457], "tstate_p": 32, "config": [32, 33, 66, 70, 71, 77, 83, 98, 99, 112, 157, 236, 242, 254, 255, 257, 276, 314, 331, 334, 347, 350, 366, 367, 383, 427, 431, 435, 440, 444, 447, 448, 449, 451, 453, 455, 456, 457], "total": [32, 33, 34, 57, 71, 76, 83, 87, 88, 93, 99, 120, 121, 127, 128, 133, 150, 172, 175, 179, 180, 182, 185, 194, 214, 215, 216, 219, 225, 246, 247, 249, 277, 290, 300, 301, 314, 318, 320, 321, 324, 325, 337, 344, 345, 353, 359, 363, 365, 372, 377, 403, 405, 410, 419, 430, 444, 448, 449, 451, 452, 453, 454, 455, 457], "unsuccess": [32, 37], "likewis": [32, 34, 53, 83, 85, 92, 104, 114, 175, 179, 197, 198, 200, 255, 259, 319, 361, 390, 409, 410, 415, 416, 451, 452], "briefli": [32, 75, 105, 175, 442], "pymodule_fromdefandspec": [32, 44, 454], "squirrel": [32, 290], "initmodul": 32, "essenti": [32, 71, 83, 91, 102, 103, 127, 157, 204, 214, 238, 245, 256, 257, 262, 276, 277, 279, 306, 312, 319, 324, 331, 365, 386, 397, 408, 414, 437, 439, 444, 445, 448, 452, 453, 458], "unisol": 32, "py_endinterpret": [32, 55, 97], "haven": [32, 87, 102, 105, 133, 175, 221, 323, 366, 418, 443, 444, 449], "benefit": [32, 34, 76, 83, 93, 99, 104, 107, 109, 175, 255, 256, 270, 282, 321, 324, 331, 340, 353, 363, 378, 383, 415, 436, 439, 440, 441, 444, 448, 451, 452, 456, 457], "truli": [32, 71, 79, 82, 83, 97, 110, 133, 170, 259, 342, 372, 444, 445], "cpu": [32, 82, 100, 103, 105, 116, 119, 120, 124, 133, 148, 154, 156, 224, 225, 250, 258, 269, 277, 304, 318, 324, 327, 337, 344, 345, 359, 384, 431, 434, 440, 447, 449, 452, 453, 454, 456, 457, 458], "approach": [32, 34, 71, 72, 74, 77, 83, 85, 86, 87, 88, 93, 98, 99, 101, 104, 105, 106, 110, 148, 150, 159, 175, 179, 182, 199, 214, 226, 262, 269, 277, 279, 300, 315, 319, 320, 323, 324, 328, 338, 343, 345, 347, 361, 363, 365, 367, 372, 388, 394, 403, 405, 415, 420, 426, 427, 436, 437, 438, 442, 443, 444, 446, 448, 451, 452, 454, 455, 456], "554": [32, 150], "vigil": 32, "That": [32, 50, 61, 70, 74, 77, 81, 83, 84, 87, 88, 90, 91, 97, 98, 99, 101, 102, 103, 104, 109, 116, 126, 150, 151, 157, 166, 170, 175, 179, 182, 183, 190, 192, 194, 214, 245, 247, 249, 250, 255, 256, 276, 278, 282, 298, 301, 308, 313, 317, 324, 325, 328, 331, 342, 345, 353, 359, 363, 367, 383, 391, 397, 399, 402, 403, 405, 411, 418, 419, 425, 439, 440, 442, 443, 445, 446, 448, 451, 452, 456], "especi": [32, 61, 70, 71, 74, 82, 83, 85, 96, 101, 105, 120, 150, 157, 159, 172, 175, 182, 187, 194, 225, 236, 246, 250, 256, 270, 277, 280, 290, 293, 295, 296, 298, 300, 315, 321, 322, 328, 331, 340, 361, 378, 385, 402, 407, 409, 427, 437, 439, 440, 443, 444, 445, 447, 450, 451, 452, 453, 454, 455, 457], "One": [32, 55, 56, 64, 70, 71, 73, 76, 79, 82, 83, 85, 88, 90, 91, 93, 99, 102, 103, 105, 106, 107, 111, 114, 116, 119, 127, 136, 144, 147, 157, 165, 170, 182, 190, 214, 219, 234, 236, 238, 239, 247, 255, 269, 287, 289, 290, 299, 301, 315, 320, 321, 324, 326, 328, 337, 340, 342, 353, 361, 366, 367, 371, 376, 388, 402, 403, 405, 406, 407, 409, 410, 411, 418, 419, 422, 423, 424, 425, 426, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 449, 451, 452, 456, 457], "spite": 32, "come": [32, 62, 69, 73, 76, 78, 79, 82, 83, 85, 87, 88, 90, 91, 95, 98, 99, 101, 103, 105, 106, 109, 140, 143, 148, 150, 151, 159, 166, 170, 175, 182, 198, 215, 221, 224, 233, 238, 276, 282, 283, 300, 301, 302, 316, 319, 320, 321, 324, 346, 347, 353, 363, 372, 375, 385, 390, 399, 402, 403, 407, 409, 410, 414, 415, 416, 418, 421, 425, 428, 429, 434, 435, 436, 437, 438, 439, 440, 441, 443, 453, 456, 457, 458], "consequ": [32, 41, 50, 61, 71, 76, 83, 140, 151, 157, 180, 225, 243, 269, 277, 279, 315, 318, 324, 331, 403, 405, 409, 415, 418, 419, 442, 444, 445, 449, 451, 452, 453, 454, 456], "race": [32, 85, 134, 175, 215, 238, 277, 309, 318, 338, 378, 449, 451, 452, 458], "challeng": [32, 225, 269, 317, 323, 376, 427, 451, 456], "break": [32, 34, 55, 61, 62, 73, 74, 76, 82, 85, 88, 90, 92, 93, 99, 101, 102, 103, 116, 122, 126, 130, 133, 137, 148, 159, 160, 165, 166, 179, 182, 189, 191, 197, 225, 236, 238, 243, 249, 259, 269, 276, 280, 282, 289, 296, 301, 303, 308, 315, 317, 318, 321, 324, 325, 328, 331, 339, 340, 342, 343, 361, 365, 371, 375, 376, 383, 386, 402, 403, 404, 405, 406, 410, 415, 418, 424, 427, 437, 438, 439, 440, 442, 443, 444, 446, 451, 452, 453, 454, 456, 457], "stdlib": [32, 33, 34, 71, 97, 99, 200, 224, 236, 334, 384, 431, 442, 447, 448, 449, 451, 452, 454], "mitig": [32, 119, 129, 233, 324, 337, 419, 446, 448, 457], "insul": 32, "perfect": [32, 117, 232, 236, 321, 323, 447], "malici": [32, 105, 250, 256, 261, 282, 296, 309, 328, 331, 337, 384, 386, 387, 388, 389, 394, 395, 430, 443, 448], "namespac": [32, 44, 59, 71, 76, 77, 83, 85, 87, 88, 91, 93, 98, 109, 116, 147, 150, 158, 170, 180, 182, 196, 200, 214, 215, 219, 236, 237, 238, 239, 243, 255, 256, 269, 277, 280, 282, 284, 296, 306, 313, 318, 324, 325, 330, 331, 332, 344, 345, 359, 362, 363, 365, 366, 367, 374, 376, 385, 386, 387, 390, 391, 402, 404, 411, 412, 413, 425, 430, 437, 438, 439, 440, 442, 444, 445, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457], "reachabl": [32, 50, 76, 103, 182, 216, 276, 277, 279, 363, 403, 448, 458], "delic": [32, 61], "biject": [32, 105], "assumpt": [32, 61, 71, 74, 85, 97, 134, 151, 170, 172, 439, 443, 447, 451, 455, 456], "broken": [32, 97, 99, 103, 105, 118, 132, 156, 179, 196, 201, 220, 243, 254, 269, 277, 278, 279, 287, 315, 321, 324, 331, 340, 342, 343, 347, 365, 366, 367, 371, 410, 430, 442, 446, 447, 448, 449, 452, 453, 457, 458], "presenc": [32, 34, 61, 71, 73, 85, 148, 151, 175, 207, 214, 232, 238, 244, 272, 276, 279, 290, 321, 323, 328, 331, 355, 363, 365, 402, 403, 405, 418, 424, 439, 440, 445, 448, 455], "highli": [32, 41, 83, 84, 101, 102, 116, 122, 180, 237, 245, 246, 282, 291, 301, 320, 321, 328, 341, 363, 440, 441, 448], "furthermor": [32, 76, 82, 114, 148, 180, 243, 256, 257, 259, 306, 324, 363, 375, 402, 436, 447, 448, 449, 453], "ctype": [32, 66, 71, 112, 135, 185, 189, 194, 203, 242, 277, 284, 324, 331, 363, 401, 431, 444, 449, 450, 452, 455], "py_addpendingcal": [32, 55, 444, 458], "schedul": [32, 66, 78, 82, 85, 108, 110, 118, 119, 123, 124, 130, 150, 154, 156, 225, 242, 243, 304, 315, 331, 344, 353, 405, 439, 442, 443, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458], "queu": [32, 120, 130, 145, 166, 257, 318, 339, 443], "successfulli": [32, 41, 64, 72, 75, 85, 86, 95, 102, 103, 110, 116, 120, 126, 133, 153, 156, 157, 159, 182, 212, 214, 216, 237, 238, 269, 276, 277, 314, 318, 321, 324, 328, 343, 365, 383, 407, 411, 421, 428, 441, 451, 454, 455], "condit": [32, 34, 57, 61, 71, 73, 76, 83, 85, 92, 93, 99, 106, 116, 118, 127, 131, 133, 134, 137, 170, 175, 179, 180, 188, 202, 214, 215, 217, 220, 225, 229, 237, 238, 239, 245, 246, 255, 256, 259, 269, 280, 291, 296, 300, 301, 309, 310, 318, 321, 324, 331, 332, 338, 340, 363, 365, 376, 378, 387, 389, 391, 394, 402, 403, 404, 416, 424, 427, 430, 437, 438, 439, 441, 443, 444, 447, 450, 451, 452, 453, 454, 455, 457, 458], "met": [32, 61, 73, 91, 92, 93, 98, 179, 200, 285, 321, 401, 427, 442, 457], "boundari": [32, 92, 102, 172, 182, 185, 188, 194, 195, 200, 202, 269, 282, 301, 324, 327, 340, 390, 410, 416, 443, 448], "subinterpret": [32, 44, 61, 134, 238, 277, 324, 328, 335, 340, 448, 449, 457, 458], "quick": [32, 73, 93, 99, 102, 106, 107, 331, 347, 363, 367, 421, 439, 440, 441, 442, 443, 445, 449, 451], "busi": [32, 83, 103, 131, 201, 257, 319, 328, 347, 382, 390, 401, 416], "pygilst": 32, "coverag": [32, 83, 331, 347, 357, 445, 447, 449, 453], "overhead": [32, 34, 73, 84, 99, 103, 126, 133, 177, 240, 249, 258, 277, 290, 320, 322, 324, 331, 332, 345, 359, 361, 363, 378, 403, 407, 437, 438, 439, 440, 442, 446, 448, 449, 451, 452, 455, 456, 457, 458], "direct": [32, 34, 47, 59, 62, 66, 70, 71, 83, 85, 88, 91, 96, 99, 107, 110, 116, 122, 141, 143, 148, 150, 151, 154, 159, 165, 172, 175, 180, 194, 207, 214, 221, 236, 238, 242, 276, 277, 288, 289, 290, 296, 320, 321, 323, 324, 338, 342, 343, 344, 345, 353, 361, 362, 372, 385, 388, 392, 401, 403, 405, 407, 411, 417, 418, 421, 426, 427, 436, 437, 439, 440, 442, 443, 444, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457], "py_tracefunc": 32, "pytrace_cal": 32, "pytrace_except": 32, "pytrace_lin": 32, "pytrace_return": 32, "pytrace_c_cal": 32, "pytrace_c_except": 32, "pytrace_c_return": 32, "pytrace_opcod": 32, "transfer": [32, 34, 70, 71, 85, 90, 103, 106, 130, 136, 159, 180, 184, 185, 186, 187, 190, 191, 192, 195, 196, 197, 212, 224, 230, 231, 233, 259, 261, 263, 269, 277, 282, 317, 327, 372, 394, 401, 405, 407, 443, 444, 448, 451, 452, 455, 457], "unwind": [32, 73, 100, 129, 159, 243, 332, 403], "f_trace_lin": [32, 331, 403, 448, 456], "opcod": [32, 179, 282, 283, 331, 403, 431, 440, 441, 443, 444, 447, 449, 453, 455, 456, 457, 458], "f_trace_opcod": [32, 331, 403, 448, 456], "monitor": [32, 66, 84, 95, 98, 99, 118, 120, 125, 126, 131, 152, 175, 242, 257, 290, 297, 311, 319, 331, 375, 441, 443, 455, 456], "setprofil": [32, 135, 269, 331, 343, 425, 439, 447], "pyeval_setprofileallthread": [32, 449], "settrac": [32, 135, 137, 269, 331, 343, 425, 439, 447], "pyeval_settraceallthread": [32, 449], "pyinterpreterstate_head": [32, 439], "head": [32, 61, 76, 99, 102, 130, 143, 145, 167, 189, 229, 230, 231, 234, 278, 290, 300, 315, 316, 319, 321, 353, 361, 372, 388, 437, 439, 450, 452], "pyinterpreterstate_next": [32, 439], "pyinterpreterstate_threadhead": [32, 439], "pythreadstate_next": [32, 439], "pthread": [32, 110, 331, 343, 431, 451], "pythread": 32, "behalf": [32, 120, 315, 401], "supersed": [32, 57, 66, 238, 241, 242, 321, 401, 437, 444, 447, 452, 456], "py_tss_t": [32, 456], "539": 32, "py_limited_api": [32, 54, 55, 57, 59, 88, 447, 448, 451, 456, 458], "py_tss_needs_init": 32, "pythread_tss_alloc": [32, 55, 449, 450], "pythread_tss_fre": [32, 55, 449, 450], "pythread_tss_delet": [32, 55, 449, 450], "unassign": [32, 91, 326], "dangl": [32, 61, 71, 75, 85, 277, 314, 324, 325, 340, 402], "pythread_tss_set": [32, 55, 449, 450], "pythread_tss_get": [32, 55, 449, 450], "pythread_tss_cr": [32, 55], "pythread_tss_is_cr": [32, 55], "repeatedli": [32, 76, 102, 106, 145, 165, 179, 249, 254, 263, 320, 343, 345, 361, 365, 381, 382, 383, 402, 427, 439, 451, 455], "forget": [32, 34, 70, 71, 88, 97, 99, 133, 175, 246, 340, 353, 405, 406, 415, 417, 441, 442, 443, 447, 449, 451, 457], "pythread_create_kei": [32, 55, 449, 450], "pythread_delete_kei": [32, 55, 449, 450], "pythread_set_key_valu": [32, 55, 449, 450, 453], "pythread_get_key_valu": [32, 55, 449, 450], "pythread_delete_key_valu": [32, 55, 449, 450], "pythread_reinittl": [32, 55, 449, 450], "py_preiniti": [33, 41, 57, 449, 450, 457], "lc_ctype": [33, 57, 85, 105, 254, 277, 324, 430, 455, 456], "unchang": [33, 41, 76, 88, 91, 99, 102, 115, 137, 145, 150, 157, 161, 165, 166, 175, 197, 219, 243, 246, 249, 254, 257, 259, 277, 278, 284, 300, 301, 318, 320, 324, 325, 337, 347, 361, 362, 363, 371, 402, 403, 405, 410, 415, 421, 427, 436, 439, 441, 442, 443, 444, 445, 446, 449, 451, 452, 455, 456], "587": [33, 99, 321, 448, 450], "argc": [33, 64, 70, 71, 180], "pyconfig_initpythonconfig": [33, 70, 71, 457], "pyconfig_setbytesargv": [33, 457], "pystatus_except": [33, 70, 71, 449, 457], "goto": [33, 34, 44, 70, 71, 145, 361, 431, 446, 448, 451], "pyconfig_clear": [33, 70, 71, 457], "pystatus_isexit": [33, 457], "exitcod": [33, 269, 277, 328, 340], "py_exitstatusexcept": [33, 70, 71, 457], "pywidestringlist_append": [33, 457], "pywidestringlist_insert": [33, 457], "err_msg": [33, 320, 331, 340], "pystatus_ok": [33, 457], "pystatus_error": [33, 457], "pystatus_nomemori": [33, 457], "pystatus_exit": [33, 457], "pystatus_iserror": [33, 457], "wherea": [33, 71, 83, 84, 99, 120, 125, 131, 157, 229, 250, 255, 269, 301, 311, 331, 347, 366, 375, 378, 407, 416, 436, 445, 447, 450, 458], "preconfigur": [33, 366], "pypreconfig_initpythonconfig": [33, 457], "preconfig": [33, 457], "pypreconfig_initisolatedconfig": [33, 457], "pymem_allocator_not_set": 33, "pymem_allocator_default": 33, "pymem_allocator_debug": 33, "pymem_allocator_malloc": 33, "pymem_allocator_malloc_debug": 33, "pymem_allocator_pymalloc": 33, "pymalloc": [33, 331, 430, 431, 438, 443, 444, 451, 453, 455, 457], "pymem_allocator_pymalloc_debug": 33, "configure_local": 33, "coerce_c_local": 33, "coerce_c_locale_warn": 33, "coerc": [33, 62, 96, 157, 164, 175, 180, 184, 185, 194, 250, 323, 325, 430, 437, 445, 448, 456], "dev_mod": [33, 177, 331], "utf8_mod": [33, 277, 331, 449, 450], "filesystem_encod": [33, 57, 85, 277, 331, 449, 450], "filesystem_error": [33, 57, 85, 277, 331, 449, 450], "ifdef": [33, 71, 431, 437], "parse_argv": [33, 34], "py_preinitializefromarg": [33, 457], "py_preinitializefrombytesarg": [33, 457], "utf8": [33, 56, 116, 148, 192, 194, 196, 197, 237, 277, 287, 296, 317, 331, 386, 388, 430, 436, 450, 454, 456], "pythonutf8": [33, 277, 331, 430, 436, 456], "_pyruntim": [33, 458], "pre": [33, 34, 71, 85, 98, 99, 102, 107, 175, 180, 192, 197, 215, 225, 234, 238, 246, 249, 256, 276, 279, 306, 313, 319, 320, 331, 332, 337, 358, 363, 364, 366, 372, 375, 402, 411, 419, 430, 431, 434, 436, 437, 440, 441, 442, 444, 449, 451, 453, 454, 455, 456, 458], "pyconfig_initisolatedconfig": [33, 457], "pyconfig_setstr": [33, 457], "config_str": 33, "pyconfig_setbytesstr": [33, 57, 70, 71, 457], "pyconfig_setargv": [33, 457], "pyconfig_setwidestringlist": 33, "pyconfig_read": [33, 57, 85, 277, 331, 448, 457], "stripp": 33, "tune": [33, 76, 215, 216, 232, 276, 301, 304, 321, 399, 437, 440, 448, 449], "host": [33, 82, 99, 103, 120, 130, 135, 148, 166, 167, 198, 201, 212, 214, 231, 232, 234, 236, 237, 245, 257, 259, 269, 272, 277, 278, 279, 287, 295, 301, 317, 318, 319, 321, 324, 326, 327, 340, 363, 366, 371, 372, 374, 383, 394, 429, 431, 436, 437, 440, 442, 443, 444, 448, 451, 452, 453, 454, 455, 456], "strip": [33, 83, 88, 93, 102, 114, 116, 148, 157, 160, 166, 167, 172, 179, 182, 189, 197, 198, 212, 214, 217, 234, 236, 256, 257, 270, 278, 290, 308, 313, 317, 319, 323, 324, 328, 335, 337, 340, 358, 359, 363, 371, 376, 383, 388, 397, 415, 416, 417, 418, 437, 440, 445, 446, 450, 451, 454], "orig_argv": [33, 331, 447], "safe_path": [33, 331, 448], "unsaf": [33, 55, 61, 73, 83, 115, 142, 157, 177, 269, 309, 313, 320, 331, 337, 365, 366, 374, 430, 440, 447, 448, 449, 454, 456], "py": [33, 34, 49, 71, 74, 77, 83, 84, 85, 87, 88, 92, 93, 95, 98, 99, 100, 105, 107, 108, 111, 114, 116, 119, 120, 121, 123, 125, 127, 128, 129, 130, 131, 132, 133, 136, 137, 140, 142, 143, 145, 147, 148, 149, 150, 151, 152, 153, 156, 157, 159, 161, 162, 164, 165, 167, 170, 172, 173, 175, 177, 178, 179, 180, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 196, 197, 198, 200, 203, 205, 207, 209, 210, 212, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 243, 246, 247, 250, 251, 253, 254, 255, 256, 257, 258, 259, 263, 266, 270, 272, 273, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 294, 295, 296, 298, 299, 300, 301, 303, 305, 306, 307, 308, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 333, 334, 336, 337, 338, 340, 342, 343, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 365, 366, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 405, 407, 413, 423, 424, 425, 426, 427, 428, 430, 431, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 449, 451, 452, 453, 454, 455, 456, 457, 458], "resolv": [33, 73, 76, 83, 84, 85, 98, 99, 114, 120, 122, 133, 157, 165, 172, 180, 182, 200, 238, 239, 240, 243, 247, 255, 256, 276, 277, 278, 279, 284, 285, 290, 296, 314, 318, 321, 328, 331, 362, 363, 365, 366, 375, 386, 387, 388, 390, 391, 392, 404, 415, 428, 430, 436, 439, 447, 452, 453, 454, 455, 456, 457], "pythonsafepath": [33, 309, 331, 430, 448], "base_exec_prefix": [33, 316, 331, 375, 425], "base_execut": 33, "_base_execut": 33, "__pyvenv_launcher__": 33, "base_prefix": [33, 219, 316, 331, 375, 425], "configure_c_stdio": 33, "warn_default_encod": [33, 246, 331, 430, 447], "encodingwarn": [33, 202, 430], "textiowrapp": [33, 114, 142, 177, 207, 214, 223, 238, 241, 246, 258, 328, 338, 397, 443, 447, 452, 453, 455, 456], "opt": [33, 55, 70, 157, 179, 202, 217, 238, 276, 282, 288, 319, 407, 425, 430, 431, 440, 443, 444, 449, 450, 451, 453, 454, 456], "code_debug_rang": 33, "inclus": [33, 34, 38, 41, 78, 85, 88, 114, 143, 150, 156, 172, 201, 227, 247, 253, 255, 258, 277, 290, 300, 301, 313, 323, 332, 359, 388, 401, 405, 409, 411, 430, 444, 451, 456], "caret": [33, 102, 166, 167, 182, 301, 358], "pythonnodebugrang": [33, 403, 430, 448], "no_debug_rang": [33, 403, 430, 448], "check_hash_pycs_mod": 33, "check_sourc": 33, "552": [33, 238, 293, 448], "determinist": [33, 99, 102, 159, 177, 238, 243, 300, 318, 320, 388, 451, 456, 458], "dev": [33, 77, 78, 95, 99, 120, 177, 218, 257, 259, 277, 278, 289, 315, 328, 331, 334, 413, 430, 437, 438, 439, 440, 441, 442, 443, 444, 451, 452, 454], "pythondevmod": [33, 177, 430, 456], "dump_ref": 33, "dump": [33, 41, 66, 71, 88, 92, 98, 99, 116, 135, 162, 164, 174, 177, 242, 250, 254, 257, 261, 270, 272, 277, 280, 282, 286, 290, 315, 320, 322, 358, 359, 383, 388, 394, 421, 430, 431, 437, 438, 439, 440, 443, 444, 446, 452, 453, 454, 455, 458], "aliv": [33, 61, 83, 165, 215, 269, 270, 287, 324, 340, 343, 378, 402, 403, 427, 430, 431, 438, 444, 445, 451, 453], "pythondumpref": [33, 430, 431, 457], "py_trace_ref": [33, 34, 431, 447, 457, 458], "trace": [33, 34, 41, 66, 71, 95, 98, 100, 110, 137, 146, 147, 161, 165, 174, 180, 203, 215, 225, 230, 237, 242, 243, 245, 277, 280, 320, 331, 340, 343, 358, 361, 403, 411, 413, 415, 430, 431, 438, 439, 440, 444, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458], "faulthandl": [33, 66, 165, 174, 177, 242, 280, 315, 340, 358, 430], "pythonfaulthandl": [33, 177, 203, 430, 452], "getfilesystemencod": [33, 64, 85, 105, 114, 277, 331, 337, 396, 425, 455], "android": [33, 62, 85, 254, 285, 331, 340, 455, 456, 457], "vxwork": [33, 62, 85, 254, 277, 304, 447], "nl_langinfo": [33, 254, 439], "codeset": [33, 148, 219, 254, 439, 448, 457], "announc": [33, 78, 105, 108, 277, 429, 452], "mbstowc": 33, "latin1": [33, 130, 148, 282, 296, 442, 452, 455, 458], "At": [33, 41, 56, 57, 61, 62, 70, 71, 74, 81, 83, 85, 88, 91, 99, 101, 107, 120, 127, 132, 133, 134, 142, 157, 159, 223, 224, 236, 237, 246, 257, 258, 276, 277, 282, 287, 314, 318, 321, 331, 343, 347, 357, 361, 363, 365, 366, 377, 400, 402, 405, 407, 410, 415, 418, 424, 427, 431, 436, 438, 439, 443, 447, 448, 455, 456], "ansi_x3": 33, "1968": 33, "getfilesystemencodeerror": [33, 85, 331, 425, 455], "surrogateescap": [33, 57, 62, 105, 148, 190, 197, 207, 214, 277, 318, 331, 337, 430, 451, 454, 455, 456], "chosen": [33, 44, 71, 85, 88, 92, 98, 102, 156, 175, 200, 212, 214, 224, 245, 256, 269, 270, 276, 282, 300, 308, 318, 321, 327, 331, 338, 374, 390, 403, 426, 430, 436, 440, 441, 445], "randomli": [33, 82, 99, 120, 269, 290, 300, 308, 340, 439, 442, 453], "import_tim": 33, "importtim": [33, 430, 456], "pythonprofileimporttim": [33, 430, 456], "install_signal_handl": [33, 447], "repl": [33, 109, 117, 180, 301, 331, 430, 447, 457], "int_max_str_digit": [33, 324, 331, 430], "4300": [33, 324, 448], "int_info": [33, 324, 331, 425, 431, 446], "default_max_str_digit": [33, 324, 331], "640": [33, 324, 361], "str_digits_check_threshold": [33, 324, 331], "pythonintmaxstrdigit": [33, 324, 331, 430], "prompt": [33, 64, 66, 77, 83, 84, 85, 109, 114, 135, 145, 147, 165, 178, 180, 182, 189, 196, 212, 214, 218, 236, 237, 242, 280, 295, 302, 317, 321, 324, 328, 331, 339, 343, 346, 358, 361, 372, 375, 407, 411, 413, 416, 419, 423, 424, 425, 428, 430, 436, 440, 443, 447, 448, 451, 453, 455, 456, 457, 458], "malloc_stat": 33, "statist": [33, 41, 66, 76, 78, 91, 182, 215, 216, 242, 262, 274, 290, 300, 314, 321, 331, 345, 357, 419, 426, 429, 430, 431, 437, 438, 442, 444, 448, 451, 452], "pythonmallocstat": [33, 41, 430], "platlibdir": [33, 331, 333, 430, 431, 458], "pythonplatlibdir": [33, 333, 430], "lib": [33, 34, 70, 75, 77, 82, 84, 87, 93, 95, 108, 111, 114, 116, 117, 120, 121, 123, 125, 127, 128, 129, 130, 131, 132, 133, 136, 137, 140, 142, 143, 145, 147, 148, 149, 150, 151, 152, 153, 156, 157, 159, 161, 162, 164, 165, 166, 167, 170, 172, 173, 175, 178, 179, 180, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 205, 207, 209, 210, 212, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 243, 246, 247, 250, 251, 253, 254, 255, 256, 257, 258, 259, 263, 266, 269, 270, 272, 273, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 294, 295, 298, 299, 300, 301, 303, 305, 306, 307, 308, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 333, 334, 336, 337, 338, 342, 343, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 365, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 400, 401, 405, 413, 425, 427, 428, 430, 431, 435, 436, 437, 438, 439, 440, 442, 443, 444, 447, 448, 449, 451, 452, 453, 454, 455, 457, 458], "layout": [33, 41, 59, 61, 74, 97, 98, 99, 148, 178, 202, 255, 259, 321, 327, 334, 347, 351, 374, 403, 407, 421, 436, 443, 449, 452, 453], "virtual": [33, 34, 66, 71, 83, 85, 99, 101, 107, 111, 151, 165, 166, 168, 181, 199, 214, 215, 231, 239, 242, 243, 277, 315, 318, 320, 321, 331, 334, 337, 362, 372, 383, 402, 403, 404, 407, 415, 420, 437, 443, 448, 449, 450, 451, 453, 455, 456, 457], "pythonpath_env": 33, "delim": 33, "pathsep": [33, 277, 316, 357, 379, 400, 430, 431], "module_search_path": [33, 436, 448, 450], "module_search_paths_set": [33, 448], "peephol": [33, 441, 442, 451, 456], "__debug__": [33, 64, 158, 177, 214, 238, 411, 425, 430, 440, 447], "assert": [33, 34, 37, 47, 58, 64, 99, 104, 111, 116, 133, 136, 158, 170, 172, 173, 177, 180, 182, 202, 214, 217, 243, 268, 269, 276, 280, 282, 301, 320, 324, 340, 362, 363, 365, 366, 376, 378, 386, 400, 401, 402, 405, 406, 410, 425, 430, 431, 440, 441, 443, 446, 450, 451, 453, 454, 457, 458], "py_debug": [33, 34, 340, 431, 447, 457], "pythonexecut": [33, 430], "with_next_framework": 33, "python3": [33, 55, 70, 87, 88, 95, 99, 107, 189, 197, 279, 316, 324, 333, 334, 359, 375, 396, 413, 423, 428, 430, 431, 435, 436, 444, 447, 449, 451, 453, 455, 457, 458], "pycache_prefix": [33, 153, 331, 425, 430, 457], "pythonpycacheprefix": [33, 331, 430, 457], "run_command": [33, 135, 430], "run_filenam": 33, "skip_source_first_lin": 33, "run_modul": [33, 135, 306, 430], "show_ref_count": 33, "showrefcount": [33, 430, 431, 453], "py_ref_debug": [33, 431], "no_sit": [33, 331, 451], "invert": [33, 91, 92, 93, 116, 148, 175, 180, 200, 275, 324, 403, 405, 406, 448], "cmd": [33, 66, 84, 99, 114, 120, 131, 135, 137, 166, 204, 211, 212, 242, 277, 280, 290, 314, 317, 328, 357, 375, 430, 449, 451], "hack": [33, 82, 93, 97, 182, 313, 372, 430, 437, 438, 439, 449], "stdio_encod": [33, 331, 450], "stdio_error": [33, 331], "backslashreplac": [33, 105, 148, 203, 214, 246, 255, 277, 324, 331, 430, 440, 454, 456], "pythonioencod": [33, 277, 331, 430, 443, 453], "tracemalloc": [33, 66, 174, 177, 242, 340, 401, 430], "pythontracemalloc": [33, 359, 430], "perf_profil": 33, "trampolin": [33, 331, 449], "pythonperfsupport": [33, 100, 430, 449], "warnopt": [33, 57, 331, 340, 376, 425, 449, 450, 456], "filter": [33, 57, 78, 83, 93, 95, 98, 150, 166, 177, 178, 179, 202, 205, 207, 209, 214, 249, 256, 294, 310, 314, 318, 340, 365, 366, 375, 396, 400, 405, 417, 425, 427, 430, 431, 437, 438, 439, 440, 441, 443, 444, 445, 447, 449, 450, 451, 455, 456, 457, 458], "lowest": [33, 41, 55, 98, 116, 128, 175, 180, 200, 210, 225, 265, 273, 298, 321, 323, 324, 328, 343, 345, 350, 405, 417, 427, 437, 442, 455], "highest": [33, 77, 91, 92, 98, 116, 127, 157, 200, 216, 255, 265, 282, 283, 308, 310, 315, 320, 321, 323, 324, 331, 344, 350, 405, 417, 443, 452], "prioriti": [33, 91, 118, 135, 157, 238, 245, 249, 250, 257, 277, 282, 298, 304, 307, 310, 321, 324, 328, 335, 343, 403, 405, 417, 427, 439, 440, 443, 451, 452, 453, 455, 457], "revers": [33, 37, 71, 78, 90, 91, 93, 103, 104, 105, 115, 134, 148, 150, 151, 159, 164, 166, 170, 172, 175, 180, 200, 203, 214, 225, 243, 247, 249, 261, 269, 273, 275, 277, 279, 290, 296, 301, 313, 320, 324, 355, 359, 362, 363, 365, 371, 378, 403, 415, 416, 417, 418, 425, 437, 440, 442, 443, 444, 445, 446, 447, 451, 452, 453, 454, 455, 456, 457], "pythonwarn": [33, 177, 376, 430, 444, 451, 456], "dont_write_bytecod": [33, 331, 425, 443, 451], "xoption": [33, 430, 448, 450], "_xoption": [33, 57, 331, 425, 430], "show_alloc_count": [33, 455, 458], "init_python": 33, "my_program": 33, "pysys_getobject": [33, 55, 57, 448], "my_execut": 33, "unspecifi": [33, 88, 93, 101, 120, 142, 165, 182, 214, 220, 246, 247, 258, 262, 277, 279, 282, 296, 318, 344, 353, 363], "coercion": [33, 214, 277, 325, 403, 430, 431, 442, 444], "538": [33, 430, 431], "540": [33, 277], "pythoncoerceclocal": [33, 277, 430, 431, 456], "softwarepythonpythoncorex": 33, "ypythonpath": 33, "hkey_current_us": [33, 381, 436], "hkey_local_machin": [33, 381, 436], "unset": [33, 57, 61, 132, 180, 259, 277, 324, 331, 340, 366, 374, 407, 443, 444, 456], "overridden": [33, 76, 83, 91, 92, 99, 111, 114, 137, 145, 150, 151, 157, 172, 197, 200, 214, 219, 229, 232, 233, 234, 238, 243, 246, 255, 257, 276, 277, 280, 289, 295, 306, 319, 320, 321, 324, 328, 331, 337, 343, 353, 363, 365, 372, 375, 376, 383, 403, 405, 407, 418, 430, 443, 444, 447, 452, 453, 457, 458], "py_main": [33, 55, 64, 436, 456], "pyvenv": [33, 316, 333, 375, 436, 452, 453, 455, 457], "cfg": [33, 83, 157, 256, 316, 333, 361, 375, 436, 443, 452, 454, 455], "_pth": [33, 436, 455, 456], "pybuilddir": 33, "txt": [33, 34, 66, 76, 93, 99, 105, 114, 150, 156, 159, 177, 182, 197, 207, 209, 214, 219, 220, 223, 224, 232, 236, 239, 242, 244, 246, 265, 276, 277, 279, 282, 314, 324, 328, 331, 337, 347, 364, 369, 375, 388, 396, 397, 410, 415, 418, 426, 427, 428, 431, 436, 437, 443, 444, 446, 451, 452, 453, 454, 455, 457], "432": [33, 456], "bare": [33, 85, 88, 98, 99, 116, 157, 192, 276, 317, 406, 434, 436, 442, 445, 448, 457], "importlib": [33, 66, 83, 85, 95, 99, 101, 214, 236, 242, 243, 256, 267, 284, 293, 306, 331, 340, 359, 362, 397, 398, 403, 411, 425, 436, 446, 448, 450, 451, 457], "_init_main": 33, "_py_initializemain": 33, "move": [33, 68, 76, 82, 83, 88, 89, 90, 91, 96, 99, 103, 106, 114, 116, 135, 145, 150, 165, 166, 168, 170, 172, 185, 194, 195, 207, 216, 225, 236, 249, 257, 259, 265, 277, 280, 293, 300, 314, 340, 344, 349, 353, 361, 365, 367, 371, 372, 375, 388, 401, 414, 426, 434, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "mayb": [33, 71, 88, 92, 93, 103, 259, 376, 406, 409, 414, 447, 448, 450], "meta_path": [33, 85, 135, 238, 239, 284, 331, 407, 411, 425, 436, 440, 452, 455], "motiv": [33, 91, 337, 403, 405, 438, 440, 441, 447, 452, 457], "anytim": [33, 321, 324, 347], "pyrun_simplestr": [33, 64, 70, 77, 84], "varieti": [34, 62, 71, 73, 76, 78, 85, 93, 97, 105, 106, 107, 114, 148, 171, 175, 183, 212, 214, 219, 260, 276, 277, 290, 324, 328, 347, 351, 363, 383, 407, 441, 442, 443, 444, 448, 453], "usabl": [34, 38, 52, 54, 55, 61, 62, 74, 76, 78, 83, 85, 96, 101, 103, 104, 120, 148, 165, 166, 198, 214, 234, 238, 247, 256, 263, 269, 277, 278, 285, 318, 321, 324, 325, 328, 385, 403, 405, 407, 415, 425, 439, 440, 441, 442, 448, 449, 451, 455, 456], "breviti": [34, 73, 276, 416], "compon": [34, 41, 44, 62, 66, 71, 76, 78, 83, 91, 98, 99, 102, 105, 106, 107, 111, 133, 148, 150, 161, 166, 172, 175, 183, 197, 199, 219, 220, 232, 234, 238, 239, 242, 243, 244, 245, 273, 277, 278, 279, 301, 313, 314, 324, 325, 331, 332, 334, 335, 337, 338, 344, 345, 347, 353, 361, 362, 363, 365, 372, 381, 385, 390, 395, 397, 400, 403, 407, 408, 410, 416, 430, 436, 440, 441, 444, 445, 448, 449, 451, 453, 454, 455, 456], "techniqu": [34, 76, 83, 85, 93, 99, 104, 105, 150, 151, 182, 190, 215, 277, 290, 301, 333, 339, 363, 366, 367, 407, 416, 421, 427, 451, 457], "rel": [34, 61, 77, 84, 88, 98, 102, 104, 108, 109, 115, 116, 120, 143, 144, 148, 159, 166, 170, 172, 179, 180, 182, 198, 199, 204, 214, 220, 234, 238, 246, 253, 254, 255, 258, 262, 265, 277, 278, 279, 282, 284, 290, 296, 299, 300, 301, 306, 307, 313, 314, 318, 320, 321, 323, 324, 328, 331, 333, 337, 338, 340, 344, 347, 353, 357, 358, 365, 366, 371, 375, 381, 383, 388, 390, 396, 397, 400, 411, 417, 421, 425, 426, 430, 436, 437, 438, 439, 441, 444, 445, 448, 449, 452, 453, 454, 455, 457, 458], "understood": [34, 70, 103, 164, 232, 256, 261, 269, 277, 280, 313, 324, 345, 396, 401, 403, 415], "cookbook": [34, 66, 83, 94, 98, 106, 200, 255, 256, 257, 262, 345, 429, 451], "autom": [34, 74, 82, 101, 116, 212, 343, 365, 414, 438, 444, 453, 457], "extent": [34, 88, 127, 145, 161, 224, 246, 265, 353, 361, 401, 446], "familiar": [34, 74, 84, 85, 87, 90, 93, 96, 99, 102, 109, 147, 183, 217, 245, 250, 277, 320, 356, 365, 407, 416, 419, 421, 434, 438, 439, 440, 443], "stdio": [34, 70, 71, 100, 277, 443, 448], "_py": [34, 450, 457], "confus": [34, 61, 70, 76, 82, 83, 90, 97, 99, 101, 102, 104, 106, 108, 111, 147, 165, 175, 179, 182, 214, 247, 257, 276, 277, 282, 285, 301, 315, 337, 366, 372, 403, 405, 411, 415, 416, 437, 438, 439, 440, 441, 442, 444, 446, 447, 449, 450, 451, 453, 455, 456, 457], "reader": [34, 76, 78, 89, 96, 102, 103, 105, 120, 130, 142, 148, 150, 160, 185, 189, 191, 194, 214, 231, 238, 241, 246, 259, 269, 276, 282, 315, 318, 321, 327, 364, 375, 385, 388, 389, 390, 391, 392, 403, 409, 415, 420, 430, 440, 442, 445, 447, 454], "jeopard": 34, "portabl": [34, 63, 66, 71, 76, 78, 79, 99, 103, 105, 112, 125, 165, 166, 204, 205, 208, 238, 242, 254, 262, 265, 277, 282, 285, 288, 318, 322, 337, 344, 375, 379, 396, 423, 436, 437, 440, 446, 452, 456, 457], "pythonvers": 34, "version_info": [34, 78, 101, 108, 116, 320, 331, 334, 425, 437, 444, 446, 448, 449, 450, 451, 452], "parent": [34, 57, 59, 61, 83, 85, 86, 96, 98, 99, 109, 116, 127, 150, 166, 178, 214, 216, 225, 237, 238, 241, 243, 255, 265, 269, 277, 278, 279, 284, 287, 291, 294, 296, 315, 318, 319, 320, 321, 328, 331, 347, 349, 353, 362, 366, 367, 372, 375, 385, 388, 396, 403, 407, 415, 425, 439, 440, 441, 442, 443, 447, 449, 452, 453, 455, 456], "pythonx": [34, 70, 316, 324, 331, 375], "closer": [34, 92, 313, 367, 376, 415, 419, 444, 445, 454], "py_return_non": [34, 45, 71, 441], "pymodinit_func": [34, 71, 74, 431, 440], "pyinit": [34, 69], "linkag": [34, 84, 285], "pyinit_": [34, 69, 431], "pymoduledef": [34, 44, 55, 59, 69, 70, 71, 74, 88, 97, 458], "spam_modul": [34, 71], "pymoduledef_head_init": [34, 44, 70, 71, 74], "m_name": [34, 44, 74], "spam": [34, 44, 71, 75, 99, 102, 106, 114, 160, 164, 165, 207, 214, 215, 219, 231, 232, 234, 238, 243, 246, 256, 279, 289, 295, 301, 303, 312, 316, 320, 324, 328, 337, 358, 362, 363, 366, 367, 372, 388, 397, 403, 405, 407, 415, 416, 418, 421, 424, 425, 437, 443, 454], "pyinit_spam": [34, 71], "py_ab": 34, "py_always_inlin": 34, "ask": [34, 41, 66, 76, 83, 84, 85, 88, 90, 99, 102, 151, 183, 212, 222, 224, 232, 236, 246, 257, 276, 280, 287, 292, 301, 314, 321, 324, 363, 372, 387, 388, 389, 397, 405, 407, 411, 418, 429, 436, 441, 442, 443, 444, 445, 448], "inlin": [34, 50, 55, 56, 62, 85, 88, 157, 179, 180, 185, 186, 192, 194, 226, 290, 301, 365, 431, 440, 442, 447, 451, 455, 457], "critic": [34, 38, 73, 78, 85, 98, 99, 120, 180, 238, 255, 256, 257, 276, 382, 407, 414, 426, 427, 440, 442, 443, 446, 448, 451, 454], "msc": [34, 84], "blindli": [34, 324, 453], "wors": [34, 83, 102, 103, 120, 172, 177, 250, 449, 452, 453], "smarter": [34, 367, 446, 451], "cost": [34, 70, 76, 83, 88, 150, 157, 172, 177, 179, 215, 224, 232, 238, 277, 324, 345, 347, 358, 363, 367, 397, 403, 437, 440, 443, 444, 448, 453], "py_charmask": 34, "128": [34, 62, 85, 96, 99, 105, 150, 166, 175, 215, 224, 247, 270, 277, 320, 321, 361, 374, 410, 424, 442, 449, 454], "127": [34, 56, 62, 99, 103, 105, 120, 127, 130, 160, 234, 236, 247, 269, 277, 319, 321, 324, 328, 331, 340, 359, 442, 454], "255": [34, 62, 85, 90, 96, 105, 108, 148, 150, 166, 180, 214, 224, 247, 324, 327, 361, 405, 448, 452, 454, 456], "py_deprec": [34, 457], "pyapi_func": [34, 431, 440, 457], "py_oldfunct": [34, 457], "msvc": [34, 61, 75, 84, 165, 441, 450, 457], "py_getenv": 34, "getenv": [34, 277, 288], "py_max": 34, "py_member_s": 34, "py_min": 34, "py_no_inlin": 34, "reduc": [34, 41, 54, 55, 73, 76, 83, 93, 120, 127, 166, 175, 215, 216, 224, 226, 236, 246, 249, 277, 282, 290, 300, 308, 310, 321, 324, 340, 343, 366, 378, 384, 388, 396, 410, 419, 425, 431, 436, 437, 439, 440, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "consumpt": [34, 73, 116, 243, 282, 304, 314, 331, 421, 451, 452], "lto": [34, 431, 448], "pgo": [34, 340, 431, 443, 455, 458], "heavili": [34, 107, 173, 238, 317, 402, 438, 455, 456], "33720": 34, "py_stringifi": 34, "123": [34, 71, 88, 97, 99, 101, 102, 116, 175, 210, 214, 249, 256, 318, 324, 327, 405, 415, 421, 437, 439, 443, 444, 446, 451], "py_unreach": [34, 456], "cover": [34, 55, 72, 74, 77, 78, 83, 90, 92, 94, 97, 98, 99, 102, 103, 105, 107, 127, 159, 180, 182, 183, 197, 232, 256, 269, 276, 300, 301, 317, 318, 324, 328, 347, 357, 361, 363, 365, 371, 385, 399, 402, 409, 420, 427, 430, 437, 438, 439, 442, 445, 447, 448, 449, 452, 453], "tempt": [34, 74, 99, 101, 102, 345, 417, 426], "__builtin_unreach": 34, "_py_no_return": 34, "better": [34, 70, 71, 73, 74, 76, 78, 82, 83, 91, 93, 97, 99, 101, 102, 103, 107, 109, 114, 120, 132, 149, 150, 165, 179, 182, 200, 204, 212, 214, 215, 217, 223, 225, 236, 249, 254, 259, 269, 276, 277, 287, 290, 310, 323, 327, 328, 343, 344, 347, 353, 361, 363, 365, 366, 367, 388, 399, 415, 416, 418, 419, 421, 425, 437, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458], "py_fatalerror": [34, 41, 55, 57, 62, 458], "py_unus": [34, 56, 74, 88], "unus": [34, 56, 61, 74, 87, 88, 120, 142, 166, 219, 246, 247, 268, 269, 283, 295, 314, 319, 320, 325, 337, 340, 377, 410, 436, 439, 443, 448, 453, 456, 458], "silenc": [34, 39, 47, 57, 114, 214, 305, 314, 444, 451, 453, 458], "pydoc_strvar": [34, 44, 88, 97, 431], "pop_doc": 34, "rightmost": [34, 140, 148, 150, 166, 175, 249, 277, 324, 405, 441], "deque_method": 34, "pop": [34, 78, 82, 83, 88, 99, 115, 150, 151, 175, 180, 183, 192, 225, 249, 259, 277, 287, 313, 324, 353, 361, 365, 375, 403, 410, 417, 427, 439, 440, 441, 442, 443, 451, 453, 454], "pycfunct": [34, 43, 55, 56, 71, 73, 74, 88, 97, 441], "deque_pop": 34, "meth_noarg": [34, 56, 74, 439, 440], "pydoc_str": [34, 56, 61, 74], "pysqlite_row_method": 34, "pysqlite_row_kei": 34, "row": [34, 71, 83, 86, 143, 164, 214, 249, 347, 353, 355, 361, 410, 417, 424, 442, 446, 451, 454, 455], "assign": [34, 37, 52, 59, 61, 71, 73, 74, 77, 78, 83, 85, 86, 87, 91, 92, 93, 105, 110, 114, 115, 116, 120, 133, 148, 150, 157, 158, 160, 161, 165, 166, 170, 175, 180, 185, 191, 192, 194, 197, 200, 201, 202, 214, 215, 225, 232, 238, 255, 259, 265, 269, 270, 275, 276, 277, 279, 280, 282, 288, 296, 301, 312, 313, 318, 320, 321, 323, 324, 327, 330, 331, 338, 340, 342, 343, 353, 358, 363, 364, 365, 366, 376, 386, 388, 397, 400, 402, 403, 404, 406, 407, 410, 415, 416, 417, 423, 424, 425, 431, 438, 439, 440, 441, 442, 443, 444, 445, 447, 449, 452, 454, 455, 456, 458], "sole": [34, 55, 76, 83, 87, 88, 92, 101, 151, 158, 175, 243, 269, 270, 320, 324, 342, 362, 363, 378, 401, 403, 405, 418, 444, 447, 448, 452, 453, 454, 456], "hierarchi": [34, 44, 83, 95, 98, 99, 111, 137, 175, 214, 238, 243, 250, 255, 256, 273, 274, 282, 284, 311, 315, 320, 324, 331, 347, 353, 363, 365, 385, 388, 402, 405, 407, 411, 415, 421, 440, 442, 445], "pylist_check": [34, 37, 77], "todai": [34, 70, 92, 105, 157, 172, 200, 320, 367, 394, 410, 419, 426, 438, 440, 441, 443, 457], "obviou": [34, 50, 61, 76, 84, 88, 93, 98, 99, 102, 166, 175, 225, 282, 290, 305, 327, 328, 340, 356, 367, 388, 436, 437, 441, 442, 448, 455], "solut": [34, 71, 76, 79, 82, 83, 85, 88, 91, 92, 93, 97, 99, 101, 102, 103, 105, 107, 126, 170, 175, 225, 236, 242, 249, 282, 301, 315, 319, 323, 338, 361, 367, 401, 407, 425, 426, 428, 429, 436, 437, 439, 440, 441, 442, 443, 444, 446, 451, 457], "consider": [34, 66, 71, 76, 83, 97, 98, 120, 166, 170, 182, 202, 212, 231, 237, 242, 250, 259, 287, 317, 320, 372, 385, 414, 437, 440, 441, 442, 444, 447, 449, 450, 452, 456], "incref": [34, 61, 431], "compound": [34, 66, 161, 236, 275, 325, 342, 347, 353, 406, 408, 410, 412, 424, 443, 452], "sizeof": [34, 41, 61, 74, 165, 285, 327, 331, 366], "theori": [34, 82, 300, 301, 401, 453, 454], "cancel": [34, 118, 119, 120, 121, 123, 128, 129, 132, 156, 159, 166, 167, 178, 201, 203, 296, 307, 315, 343, 349, 353, 361, 365, 402, 405, 413, 419, 448, 451, 456, 457, 458], "we": [34, 55, 62, 70, 71, 73, 74, 76, 78, 81, 83, 84, 86, 87, 88, 89, 91, 92, 93, 98, 99, 100, 102, 103, 104, 105, 106, 109, 114, 116, 120, 123, 127, 128, 130, 133, 137, 143, 144, 145, 147, 150, 156, 157, 159, 160, 165, 172, 179, 180, 183, 185, 189, 191, 194, 197, 200, 202, 221, 224, 225, 231, 232, 236, 239, 249, 254, 256, 257, 269, 270, 273, 276, 277, 279, 282, 301, 314, 315, 319, 320, 321, 323, 324, 325, 327, 328, 340, 345, 347, 355, 359, 361, 363, 365, 366, 367, 371, 372, 374, 376, 378, 383, 386, 388, 394, 397, 399, 401, 402, 403, 405, 406, 407, 415, 416, 417, 418, 419, 421, 422, 424, 431, 437, 439, 440, 442, 443, 444, 445, 447, 448, 449, 451, 452, 455, 457, 458], "aris": [34, 85, 175, 246, 255, 256, 261, 282, 323, 362, 401, 405, 427, 439, 441, 451, 457], "durat": [34, 85, 99, 119, 129, 133, 172, 259, 269, 290, 318, 319, 321, 324, 331, 339, 340, 343, 344, 365, 382, 444, 449, 451, 452, 454, 457], "pitfal": [34, 102, 119, 448], "conceiv": [34, 282, 337, 415], "innoc": 34, "flow": [34, 66, 71, 93, 124, 127, 130, 166, 167, 175, 328, 332, 363, 402, 404, 405, 417, 420, 425, 437, 439, 440, 442, 443, 454], "pyobject_": [34, 44, 61, 442], "pynumber_": 34, "pysequence_": 34, "pymapping_": 34, "soon": [34, 82, 88, 90, 101, 102, 103, 105, 106, 124, 130, 133, 182, 217, 221, 249, 269, 277, 280, 324, 338, 340, 361, 363, 386, 402, 403, 417, 418, 440, 442, 449, 453, 458], "term": [34, 71, 78, 85, 87, 88, 91, 93, 101, 111, 133, 166, 175, 198, 202, 210, 224, 232, 238, 245, 246, 250, 255, 261, 262, 273, 276, 279, 282, 290, 323, 324, 325, 340, 344, 347, 362, 375, 377, 378, 383, 389, 402, 406, 407, 415, 425, 441, 443, 444, 446, 449, 452, 453, 455, 457], "ownership": [34, 97, 99, 120, 130, 245, 269, 272, 343, 401, 443, 452], "py_xdecref": [34, 44, 50, 61, 70, 71, 74, 448, 457], "said": [34, 76, 83, 85, 90, 91, 157, 202, 269, 402, 403, 410, 423, 424, 438, 439, 448, 455], "notabl": [34, 78, 85, 97, 131, 180, 254, 269, 270, 315, 320, 332, 376, 400, 429, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448], "pylist_setitem": [34, 37, 55, 71], "pytuple_setitem": [34, 53, 55, 58, 70, 71], "moment": [34, 76, 83, 88, 101, 105, 172, 202, 246, 269, 277, 323, 377, 407, 415, 455], "pytuple_new": [34, 55, 58, 70, 450], "1l": [34, 439, 440, 443, 444], "2l": [34, 437], "grab": [34, 83, 98, 99, 343, 435, 436], "incident": [34, 83, 202, 239, 362, 401, 415], "pysequence_setitem": [34, 37, 52, 55, 61], "pyobject_setitem": [34, 39, 47, 55, 61, 442], "rare": [34, 61, 76, 82, 85, 107, 120, 127, 166, 170, 182, 188, 202, 212, 224, 232, 236, 246, 255, 261, 276, 312, 315, 318, 324, 337, 367, 383, 385, 415, 419, 427, 438, 439, 442, 443, 447, 448, 449, 450, 452], "ii": [34, 66, 71, 77, 150, 165, 321, 383, 401, 402, 420], "friend": [34, 71, 324, 367, 441, 445], "regard": [34, 61, 88, 97, 98, 107, 111, 159, 194, 215, 224, 257, 277, 320, 323, 324, 328, 332, 338, 385, 388, 401, 415, 436, 447], "saner": 34, "set_al": [34, 215], "pyobject_length": [34, 47, 55], "pylong_fromssize_t": [34, 38, 55], "slightli": [34, 73, 76, 77, 78, 83, 88, 93, 98, 99, 104, 106, 159, 164, 175, 185, 219, 225, 239, 246, 276, 277, 278, 280, 289, 290, 300, 321, 324, 361, 367, 371, 372, 407, 411, 415, 426, 437, 439, 440, 441, 442, 443, 444, 448, 451, 453, 454, 456, 458], "fly": [34, 49, 73, 76, 100, 175, 214, 402, 414], "pysequence_getitem": [34, 52, 55, 61, 77], "owner": [34, 71, 91, 95, 99, 170, 201, 269, 277, 279, 314, 322, 337, 401, 403, 427, 455], "realiz": [34, 76, 77, 78, 84, 101, 103, 197, 280, 415, 419, 442, 443], "plumag": [34, 71, 416], "pylist_getitem": [34, 37, 55, 71, 77], "sum_list": 34, "pylist_s": [34, 37, 55, 77, 442], "Not": [34, 56, 61, 75, 78, 83, 87, 88, 106, 116, 123, 132, 133, 157, 173, 175, 177, 180, 201, 202, 203, 215, 216, 231, 232, 234, 237, 238, 258, 259, 261, 265, 269, 277, 279, 300, 310, 313, 314, 324, 340, 363, 365, 375, 378, 383, 386, 388, 397, 401, 406, 410, 416, 431, 440, 441, 442, 443, 445, 447, 449], "pylong_check": [34, 38, 61], "bail": 34, "sum_sequ": 34, "pysequence_length": [34, 52, 55, 77], "role": [34, 85, 148, 321, 388, 445, 451, 457], "integr": [34, 64, 71, 83, 84, 85, 95, 99, 103, 110, 175, 182, 210, 214, 236, 258, 262, 273, 301, 319, 320, 324, 327, 343, 346, 347, 365, 366, 367, 377, 405, 432, 434, 436, 437, 440, 441, 443, 445, 451, 452, 456, 457, 458], "353": [34, 447], "py_ssize_t_max": [34, 46, 54, 88], "largest": [34, 93, 97, 157, 172, 175, 212, 214, 225, 262, 300, 304, 323, 324, 331, 340, 399, 437, 438, 439, 440, 441, 442, 443, 452], "accompani": [34, 180, 259, 317, 318, 403, 438, 451], "claim": [34, 71, 101, 179, 188, 245, 321, 371, 401], "unthread": [34, 437], "loop": [34, 35, 44, 62, 64, 66, 71, 76, 78, 85, 90, 93, 98, 99, 102, 103, 116, 117, 118, 119, 123, 125, 126, 128, 129, 130, 131, 132, 133, 140, 147, 149, 161, 165, 166, 173, 175, 178, 180, 185, 194, 207, 213, 214, 221, 242, 245, 257, 269, 278, 279, 280, 290, 291, 301, 314, 315, 318, 319, 321, 324, 325, 328, 331, 340, 343, 345, 347, 358, 361, 365, 366, 387, 388, 395, 402, 403, 404, 405, 406, 410, 411, 415, 421, 424, 427, 431, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458], "overwrit": [34, 71, 76, 88, 98, 99, 142, 150, 153, 166, 170, 185, 189, 194, 246, 255, 257, 258, 277, 302, 312, 324, 337, 372, 396, 397, 402, 403, 416, 417, 435, 436, 440, 443, 444, 446, 449, 451, 452, 453], "task": [34, 63, 66, 71, 83, 85, 87, 88, 93, 97, 98, 102, 105, 107, 110, 117, 119, 121, 123, 124, 128, 129, 130, 132, 140, 154, 155, 157, 159, 160, 190, 196, 221, 225, 236, 242, 247, 255, 257, 259, 269, 277, 279, 282, 290, 298, 304, 319, 320, 328, 343, 365, 371, 395, 405, 414, 418, 419, 424, 426, 427, 429, 431, 437, 439, 443, 444, 446, 448, 449, 451, 454, 455, 456, 457, 458], "lose": [34, 41, 92, 102, 157, 172, 175, 200, 202, 229, 232, 249, 257, 259, 300, 301, 320, 328, 437, 444, 451], "remind": [34, 76, 83, 324, 416, 445], "incr_item": 34, "glori": 34, "const_on": 34, "incremented_item": 34, "0l": [34, 71, 327], "pynumber_add": [34, 46, 55], "endors": [34, 401], "illustr": [34, 83, 88, 97, 98, 99, 106, 114, 133, 172, 182, 197, 229, 232, 238, 256, 313, 315, 320, 324, 328, 347, 365, 372, 375, 402, 405, 441, 452], "dispos": [34, 71, 365, 375], "confront": [34, 389, 440], "embedd": [34, 233, 269, 457], "oppos": [34, 74, 85, 88, 90, 102, 116, 120, 147, 190, 197, 212, 236, 318, 323, 372, 407, 443, 454], "guess": [34, 82, 87, 148, 157, 173, 182, 189, 195, 198, 234, 238, 243, 254, 263, 290, 308, 372, 383, 409, 415, 424, 431, 440, 451], "shell": [34, 71, 74, 77, 78, 83, 84, 85, 90, 93, 99, 107, 118, 120, 124, 131, 145, 157, 158, 166, 182, 209, 220, 243, 250, 270, 276, 277, 278, 291, 295, 320, 331, 333, 340, 347, 361, 365, 375, 376, 381, 413, 414, 422, 423, 424, 425, 426, 428, 430, 431, 434, 435, 436, 437, 439, 441, 444, 447, 448, 451, 452, 453, 454, 455, 456, 457, 458], "fallback": [34, 120, 153, 158, 173, 219, 282, 314, 331, 337, 340, 353, 382, 403, 407, 447, 449, 451, 457], "front": [34, 37, 88, 102, 150, 159, 190, 197, 236, 245, 249, 279, 284, 367, 372, 376, 383, 398, 403, 405, 417, 430, 437, 440, 442, 444], "steer": [34, 108, 361, 438, 441, 448, 451], "getpath": 34, "tend": [34, 76, 83, 97, 142, 179, 215, 287, 290, 323, 415, 446], "specialbuild": [34, 431], "remaind": [34, 46, 73, 95, 102, 145, 172, 175, 197, 214, 245, 249, 256, 262, 276, 278, 279, 301, 324, 344, 347, 365, 405, 419, 424, 443, 456], "pydebug": [34, 331, 340, 431, 440, 447, 453], "_debug": 34, "doubli": [34, 83, 444], "pyiter_check": [35, 55, 61], "pyiter_next": [35, 55, 61], "pyaiter_check": [35, 55], "asynciter": [35, 47, 151, 324, 363, 454], "pyobject_getit": [35, 47, 53, 55, 61], "pysendresult": [35, 61], "enum": [35, 41, 66, 94, 114, 153, 171, 230, 242, 243, 250, 290, 293, 301, 315, 321, 324, 362, 403, 416, 452], "pyiter_send": [35, 55, 61, 447], "presult": 35, "pygen_return": 35, "pygen_next": 35, "pygen_error": 35, "__getitem__": [36, 39, 52, 61, 62, 78, 85, 95, 99, 104, 111, 150, 151, 165, 185, 192, 194, 200, 207, 214, 259, 269, 275, 301, 324, 325, 363, 366, 367, 383, 385, 387, 388, 402, 405, 427, 439, 440, 441, 445, 448, 449, 451, 455, 457], "pyseqiter_typ": [36, 55], "pyseqiter_new": [36, 55], "pyseqiter_check": 36, "seq": [36, 62, 83, 150, 180, 209, 214, 249, 275, 300, 324, 437, 441, 448, 451], "subscript": [36, 61, 85, 150, 165, 180, 202, 236, 324, 363, 403, 411, 415, 424, 430, 440, 443, 447, 448, 449, 458], "pycalliter_typ": [36, 55], "pycalliter_new": [36, 55], "pycalliter_check": 36, "pylist_typ": [37, 55, 74], "pylist_checkexact": 37, "pylist_get_s": 37, "pylist_get_item": [37, 55], "pylist_set_item": [37, 447, 450], "pylist_insert": [37, 55], "pylist_append": [37, 55], "pylist_getslic": [37, 55], "pylist_setslic": [37, 55], "itemlist": 37, "pylist_sort": [37, 55], "sort": [37, 66, 74, 75, 78, 82, 84, 85, 87, 93, 94, 106, 114, 150, 157, 165, 173, 175, 179, 182, 197, 214, 215, 220, 221, 225, 237, 239, 243, 247, 249, 250, 254, 259, 269, 275, 276, 277, 279, 286, 289, 290, 298, 300, 301, 310, 317, 320, 323, 324, 337, 340, 359, 361, 365, 372, 383, 385, 388, 397, 403, 405, 415, 416, 417, 425, 427, 436, 439, 440, 441, 442, 443, 444, 445, 451, 453, 454, 456, 457, 458], "pylist_revers": [37, 55], "pylist_astupl": [37, 55], "pylong_a": 38, "distinguish": [38, 61, 71, 85, 88, 116, 144, 151, 166, 180, 182, 186, 214, 232, 243, 256, 262, 296, 321, 334, 353, 363, 376, 399, 403, 405, 407, 418, 424, 436, 438, 439, 444, 447, 452, 453], "pylongobject": [38, 55, 449], "pylong_typ": [38, 55], "pylong_checkexact": 38, "256": [38, 41, 62, 85, 96, 148, 166, 175, 214, 224, 258, 308, 321, 324, 337, 403, 424, 441, 442, 457, 458], "pylong_fromunsignedlong": [38, 55], "pylong_fromsize_t": [38, 55], "pylong_fromlonglong": [38, 55], "pylong_fromunsignedlonglong": [38, 55], "pylong_fromdoubl": [38, 55, 458], "pylong_fromstr": [38, 55], "radix": [38, 175, 214, 254, 331, 410], "decim": [38, 57, 62, 66, 76, 83, 102, 105, 144, 148, 150, 157, 167, 172, 210, 214, 215, 229, 242, 247, 249, 250, 254, 256, 262, 274, 276, 290, 300, 301, 323, 324, 325, 331, 343, 344, 355, 356, 364, 365, 394, 401, 403, 405, 410, 419, 421, 424, 430, 431, 437, 442, 443, 444, 446, 447, 448, 457], "36": [38, 98, 100, 105, 214, 249, 259, 269, 300, 304, 323, 325, 344, 417, 421, 424, 426, 427, 428, 447, 451, 453, 457, 458], "underscor": [38, 55, 69, 83, 85, 88, 92, 99, 139, 148, 150, 165, 175, 185, 194, 210, 214, 259, 275, 289, 299, 301, 313, 324, 325, 331, 333, 347, 366, 383, 397, 402, 403, 404, 405, 409, 410, 411, 415, 425, 427, 443, 445, 446, 448, 449, 450], "digit": [38, 57, 62, 76, 83, 97, 102, 103, 105, 136, 139, 144, 148, 150, 167, 172, 175, 182, 210, 212, 214, 224, 226, 233, 247, 254, 256, 262, 277, 301, 303, 308, 320, 321, 324, 325, 331, 340, 344, 345, 347, 355, 364, 365, 371, 372, 374, 388, 399, 401, 410, 419, 424, 431, 437, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 453, 455], "to_byt": [38, 324, 450], "from_byt": [38, 324], "pylong_fromunicodeobject": [38, 447], "pylong_fromvoidptr": [38, 55], "pylong_asvoidptr": [38, 55], "__int__": [38, 61, 210, 214, 363, 366, 403, 442, 444, 447, 448, 450, 456, 457], "pylong_asint": [38, 55, 450], "pylong_aslongandoverflow": [38, 55, 444, 451], "long_min": 38, "pylong_aslonglong": [38, 55], "pylong_aslonglongandoverflow": [38, 55, 444, 451], "llong_max": 38, "llong_min": 38, "pylong_asssize_t": [38, 55], "pylong": [38, 446], "pylong_asunsignedlong": [38, 55], "pylong_assize_t": [38, 55], "pylong_asunsignedlonglong": [38, 55, 446], "pylong_asunsignedlongmask": [38, 55], "reduct": [38, 76, 162, 324, 449, 450, 452], "modulo": [38, 99, 175, 202, 214, 275, 315, 324, 353, 403, 405, 421, 427, 440, 444, 451, 457], "ulong_max": 38, "pylong_asunsignedlonglongmask": [38, 55], "ullong_max": 38, "pylong_asdoubl": [38, 55], "assur": [38, 74, 83, 85, 144, 215, 262, 269, 355, 403, 444, 446, 451], "pyunstable_long_iscompact": [38, 449], "compact": [38, 41, 83, 85, 102, 105, 116, 145, 179, 186, 187, 250, 282, 289, 299, 327, 358, 405, 415, 449, 452, 453, 455], "fast": [38, 56, 62, 66, 85, 92, 97, 103, 104, 140, 150, 160, 173, 175, 180, 214, 223, 238, 242, 243, 246, 249, 257, 260, 275, 282, 290, 298, 300, 314, 323, 324, 345, 346, 347, 361, 363, 388, 403, 417, 421, 429, 431, 437, 441, 442, 444, 448, 451, 452, 453, 454, 455, 456, 458], "pyunstable_long_compactvalu": [38, 449], "speedup": [38, 282, 401, 406, 438, 442, 443, 444, 446, 449, 451, 452, 453, 457], "neglig": [38, 324, 401], "pyobject_delitem": [39, 47, 55, 61, 440], "pymapping_check": [39, 55, 61], "pymapping_s": [39, 55, 61], "pymapping_length": [39, 55], "pymapping_getitemstr": [39, 55, 450], "pymapping_getoptionalitem": [39, 55, 450], "pymapping_getoptionalitemstr": [39, 55, 450], "pymapping_setitemstr": [39, 55], "pymapping_delitem": 39, "pymapping_delitemstr": 39, "pymapping_haskeywitherror": [39, 55, 450], "pymapping_haskeystringwitherror": [39, 55, 450], "pymapping_haskei": [39, 55, 450], "pymapping_haskeystr": [39, 55, 450], "pymapping_valu": [39, 55, 456], "pymapping_item": [39, 55, 456], "unmarshal": [40, 261, 394, 440, 442, 455], "py_marshal_vers": [40, 448], "pymarshal_writelongtofil": [40, 448], "pymarshal_writeobjecttofil": [40, 448], "pymarshal_writeobjecttostr": [40, 448], "pymarshal_readlongfromfil": 40, "pymarshal_readshortfromfil": 40, "pymarshal_readobjectfromfil": 40, "pymarshal_readlastobjectfromfil": 40, "aggress": [40, 76, 324, 366, 442], "pymarshal_readobjectfromstr": [40, 448], "aspect": [41, 70, 71, 78, 88, 92, 99, 102, 106, 170, 172, 182, 225, 238, 256, 277, 300, 317, 371, 403, 424, 451, 455], "prealloc": 41, "room": [41, 53, 323, 366, 409, 421, 445], "polici": [41, 55, 66, 78, 88, 99, 107, 117, 120, 125, 129, 183, 185, 189, 190, 192, 194, 195, 196, 202, 214, 232, 271, 277, 317, 319, 321, 375, 431, 436, 438, 441, 444, 447, 449, 453, 454, 455], "adapt": [41, 83, 88, 99, 116, 165, 175, 180, 214, 219, 255, 280, 314, 318, 321, 347, 361, 437, 438, 442, 444, 446, 447, 449, 450, 455], "peculiar": [41, 83, 120, 243, 277, 415], "tradeoff": 41, "deleg": [41, 61, 97, 98, 99, 214, 215, 223, 255, 256, 257, 262, 273, 282, 306, 362, 365, 367, 403, 405, 407, 445, 448, 450, 451, 455, 457, 458], "corrupt": [41, 57, 91, 105, 139, 166, 201, 204, 232, 258, 259, 269, 282, 298, 320, 324, 337, 421, 436, 456, 457], "calloc": [41, 454], "algorithm": [41, 66, 76, 82, 83, 85, 102, 104, 105, 113, 120, 127, 136, 139, 142, 148, 150, 163, 171, 172, 175, 179, 182, 191, 197, 214, 219, 226, 237, 242, 246, 247, 254, 257, 262, 264, 290, 292, 300, 309, 318, 321, 323, 324, 331, 338, 342, 345, 367, 372, 383, 397, 398, 399, 401, 405, 415, 431, 437, 439, 440, 442, 444, 446, 447, 448, 450, 451, 452, 455, 457], "bufsiz": [41, 71, 114, 120, 318, 328, 337, 386, 387, 399, 441, 457], "exclus": [41, 46, 61, 83, 102, 103, 132, 142, 143, 166, 175, 204, 214, 246, 250, 257, 258, 259, 275, 276, 277, 301, 320, 323, 324, 337, 357, 359, 379, 397, 401, 403, 405, 415, 443, 450, 452, 453, 454, 457, 458], "accur": [41, 50, 88, 101, 165, 196, 234, 262, 276, 290, 331, 337, 344, 345, 347, 359, 377, 397, 419, 441, 443, 444, 449, 451, 453, 455, 456, 457], "footprint": [41, 90, 216, 431, 452, 455, 457], "procedur": [41, 70, 78, 93, 100, 148, 165, 214, 278, 290, 317, 326, 340, 361, 393, 394, 411, 416, 426, 438, 439, 442, 451], "pythonmalloc": [41, 177, 430, 431], "shutdown": [41, 85, 97, 99, 103, 120, 129, 130, 134, 156, 201, 202, 216, 237, 255, 257, 269, 270, 315, 318, 319, 321, 338, 343, 365, 378, 381, 403, 405, 430, 443, 451, 453, 454, 456, 458], "pymemallocatordomain": 41, "pyobject_malloc": [41, 55, 440, 442, 453, 455], "pymem_malloc": [41, 55, 62, 64, 440, 442, 453, 455], "nelem": 41, "elsiz": 41, "model": [41, 58, 60, 66, 82, 83, 85, 91, 94, 112, 120, 159, 172, 175, 183, 185, 194, 242, 260, 269, 277, 288, 300, 308, 317, 321, 323, 343, 361, 372, 386, 387, 390, 402, 408, 436, 437, 439, 440, 441, 442, 448, 449, 451, 453, 454, 455, 456, 457], "ansi": [41, 85, 114, 165, 254, 277, 331, 344, 436, 437, 449, 452, 455, 457], "pymem_calloc": [41, 55, 454], "pymem_realloc": [41, 55, 64, 440, 442, 453], "pymem_new": [41, 62, 438], "pymem_res": 41, "pymem_del": [41, 438], "intercept": [41, 99, 133, 323, 331, 455], "pyobject_calloc": [41, 55, 454], "pyobject_realloc": [41, 55, 440, 442], "pyobject_fre": [41, 55, 61, 440, 442, 455], "pymalloc_debug": [41, 430], "malloc_debug": [41, 430], "legend": 41, "pymemallocatorex": [41, 454], "new_siz": [41, 448], "pymemalloc": [41, 454], "pymem_domain_raw": [41, 430], "pymem_domain_mem": [41, 430, 455], "pymem_domain_obj": [41, 430, 455], "reinstal": [41, 81, 436], "preiniti": [41, 57, 254], "contract": [41, 236, 324, 401], "ones": [41, 55, 61, 62, 71, 73, 83, 85, 87, 92, 99, 102, 148, 150, 157, 179, 189, 219, 229, 232, 263, 276, 301, 312, 318, 320, 321, 324, 328, 337, 340, 344, 353, 366, 372, 376, 383, 407, 418, 424, 436, 437, 438, 439, 440, 441, 444, 446, 447, 452, 453, 454, 455], "impos": [41, 184, 250, 277, 278, 279, 282, 303, 304, 324, 363, 409, 430], "substitut": [41, 66, 76, 83, 85, 98, 99, 102, 126, 136, 148, 150, 157, 167, 172, 175, 182, 238, 249, 261, 276, 277, 290, 301, 302, 303, 320, 324, 325, 355, 363, 379, 401, 402, 403, 405, 411, 416, 420, 421, 423, 427, 436, 440, 442, 443, 444, 449, 451, 453, 454], "setup": [41, 66, 71, 74, 90, 99, 106, 159, 182, 236, 279, 319, 321, 340, 345, 361, 365, 366, 367, 428, 430, 431, 436, 437, 438, 439, 440, 442, 443, 444, 448, 449, 451, 452, 455, 457], "recogniz": [41, 76, 151, 175, 214, 278], "pattern": [41, 61, 66, 74, 83, 91, 98, 104, 105, 118, 135, 137, 150, 153, 159, 167, 178, 179, 180, 208, 215, 236, 237, 242, 249, 255, 262, 269, 270, 276, 277, 279, 280, 290, 298, 300, 301, 314, 324, 325, 340, 347, 349, 359, 363, 365, 366, 367, 378, 404, 405, 406, 410, 416, 418, 425, 431, 436, 438, 440, 441, 442, 443, 444, 445, 448, 449, 450, 451, 452, 453, 454, 455, 456], "0xcd": 41, "pymem_cleanbyt": 41, "0xdd": 41, "pymem_deadbyt": 41, "surround": [41, 77, 93, 102, 157, 164, 179, 214, 233, 236, 254, 325, 328, 352, 375, 402, 404, 405, 406, 410, 417, 425, 427, 431, 437, 442, 443, 444, 445, 446, 449, 455], "0xfd": 41, "pymem_forbiddenbyt": 41, "underflow": [41, 175, 177, 431, 455], "treatment": [41, 47, 99, 183, 269, 323, 371, 437, 445], "easier": [41, 74, 76, 82, 85, 88, 90, 93, 95, 97, 101, 102, 104, 107, 110, 150, 151, 156, 159, 164, 182, 195, 238, 240, 247, 257, 277, 290, 295, 301, 324, 325, 332, 337, 340, 352, 365, 366, 367, 371, 383, 409, 415, 416, 417, 419, 424, 425, 426, 427, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445, 448, 451, 452, 453, 454, 455], "excess": [41, 83, 116, 127, 139, 165, 175, 231, 255, 303, 344, 402, 405, 416, 447], "overwritten": [41, 88, 99, 232, 257, 259, 279, 290, 314, 331, 363, 402, 444, 452], "pymem_debug_serialno": 41, "excel": [41, 83, 105, 164, 182, 347, 361, 434, 440, 441, 445], "breakpoint": [41, 77, 135, 137, 140, 174, 214, 236, 280, 331, 332, 430, 442, 447, 451], "captur": [41, 90, 93, 99, 116, 159, 165, 172, 182, 253, 255, 277, 300, 301, 318, 321, 325, 328, 331, 336, 337, 340, 358, 363, 376, 404, 416, 441, 447, 448, 452, 453, 454, 456], "instant": [41, 361], "bumpserialno": 41, "obmalloc": [41, 438, 440, 442, 453, 458], "intact": [41, 99, 157, 172, 192, 194, 197, 207, 257, 325, 383, 441], "ve": [41, 74, 87, 88, 92, 93, 95, 96, 99, 102, 103, 105, 109, 133, 239, 259, 276, 279, 320, 347, 414, 417, 421, 425, 428, 437, 439, 440, 441, 443, 444, 446, 453], "provok": 41, "0xcb": [41, 455], "0xdb": [41, 455], "0xfb": [41, 455], "crt": [41, 321, 444, 453], "512": [41, 125, 224, 277, 310, 337, 399, 421, 431, 442, 449, 451, 455, 457], "kib": [41, 110, 130, 258, 277, 314, 343, 359, 431, 457], "virtualalloc": [41, 453], "virtualfre": 41, "mmap": [41, 66, 135, 202, 242, 248, 437, 443, 448, 451, 454, 455], "munmap": 41, "pyobjectarenaalloc": 41, "pytracemalloc_track": [41, 456], "uintptr_t": 41, "pytracemalloc_untrack": [41, 456], "untrack": [41, 74, 446], "rewritten": [41, 88, 129, 182, 183, 224, 269, 411, 437, 438, 439, 440, 443, 444, 446, 451, 452, 453, 455, 456, 457], "inde": [41, 74, 76, 84, 103, 131, 184, 321], "label": [41, 76, 78, 79, 85, 92, 93, 148, 178, 180, 236, 259, 276, 300, 313, 321, 325, 347, 363, 403, 424, 436, 439, 440, 451, 453, 456], "buf1": 41, "buf2": 41, "buf3": 41, "aim": [41, 70, 73, 76, 79, 96, 101, 105, 106, 129, 258, 323, 331, 363, 388, 436, 439, 441, 442, 453, 457], "pymemoryview_fromobject": [42, 55], "discret": [42, 163, 249, 264, 319, 323, 457], "pymemoryview_frommemori": [42, 55, 452], "pybuf_read": 42, "pymemoryview_getcontigu": [42, 55], "buffertyp": 42, "ortran": 42, "pymemoryview_check": 42, "pymemoryview_get_buff": 42, "mview": 42, "pymemoryview_get_bas": 42, "pymethod_new": 43, "pyinstancemethod_typ": 43, "pyinstancemethod_check": 43, "pyinstancemethod_new": 43, "pyinstancemethod_funct": 43, "im": [43, 83, 90, 324], "pyinstancemethod_get_funct": 43, "pymethod_typ": [43, 91], "methodtyp": [43, 91, 362], "pymethod_check": 43, "pymethod_funct": 43, "pymethod_get_funct": 43, "pymethod_self": 43, "pymethod_get_self": 43, "pymodule_typ": [44, 55], "moduletyp": [44, 238, 240, 362, 403, 407, 440, 449, 454], "pymodule_check": 44, "pymodule_checkexact": 44, "pymodule_newobject": [44, 55], "__doc__": [44, 61, 73, 78, 82, 85, 91, 92, 147, 150, 179, 182, 200, 214, 215, 243, 273, 295, 302, 305, 362, 402, 403, 410, 415, 416, 425, 438, 439, 440, 445, 447, 451, 453, 454, 458], "__package__": [44, 214, 238, 306, 362, 407, 425, 443, 447, 449, 450, 452, 453, 455], "pymodule_new": [44, 55], "pymodule_getdict": [44, 55], "__dict__": [44, 47, 59, 61, 83, 86, 91, 97, 99, 111, 137, 141, 182, 214, 215, 238, 243, 255, 257, 280, 282, 290, 324, 362, 394, 402, 403, 407, 415, 438, 439, 444, 445, 447, 449, 454, 455], "pymodule_": 44, "pymodule_getnameobject": [44, 55], "pymodule_getnam": [44, 55], "m_size": [44, 74, 97, 458], "pymodule_getdef": [44, 55], "pymodule_getfilenameobject": [44, 55, 449, 450], "pymodule_getfilenam": [44, 55, 449, 450], "pymoduledef_bas": [44, 55], "m_base": [44, 74], "m_doc": [44, 74], "sub": [44, 66, 88, 93, 97, 98, 99, 102, 112, 116, 118, 127, 164, 165, 166, 167, 172, 179, 180, 183, 185, 190, 194, 196, 203, 220, 237, 242, 249, 256, 259, 265, 275, 278, 290, 296, 300, 301, 312, 324, 331, 340, 363, 365, 367, 381, 388, 405, 406, 417, 418, 424, 425, 426, 436, 437, 439, 443, 444, 446, 449, 450, 451, 452, 453, 454, 455, 456], "m_free": [44, 97, 458], "3121": [44, 445], "m_method": 44, "pymoduledef_slot": 44, "m_slot": 44, "m_reload": 44, "m_travers": [44, 97, 458], "py_mod_exec": [44, 458], "m_clear": [44, 97, 458], "collector": [44, 61, 66, 71, 74, 76, 83, 85, 93, 97, 203, 242, 269, 276, 297, 331, 340, 378, 386, 403, 431, 437, 439, 442, 443, 444, 446, 447, 449, 452, 453, 456, 458], "pymodule_create2": [44, 55], "module_api_vers": 44, "python_api_vers": [44, 440], "pymodule_addobjectref": [44, 55, 71, 74, 447, 450], "split": [44, 62, 76, 82, 83, 99, 104, 114, 145, 148, 157, 175, 179, 180, 185, 189, 191, 197, 202, 217, 219, 237, 249, 275, 276, 277, 278, 280, 285, 289, 300, 301, 303, 313, 317, 320, 321, 324, 325, 328, 342, 355, 363, 365, 371, 375, 383, 390, 410, 414, 415, 421, 425, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458], "__new__": [44, 59, 61, 74, 78, 83, 88, 91, 115, 135, 192, 200, 202, 214, 261, 265, 279, 282, 318, 359, 362, 366, 403, 449, 453, 455, 457], "__init__": [44, 59, 61, 74, 76, 77, 78, 83, 85, 88, 91, 98, 99, 103, 104, 109, 114, 122, 127, 133, 141, 150, 151, 157, 159, 162, 164, 165, 172, 173, 179, 183, 202, 203, 214, 215, 227, 230, 234, 238, 239, 240, 241, 249, 250, 255, 256, 257, 269, 279, 282, 284, 290, 302, 315, 320, 325, 337, 340, 343, 347, 359, 362, 363, 365, 366, 367, 375, 378, 383, 385, 389, 397, 403, 407, 415, 416, 425, 427, 437, 438, 439, 440, 442, 443, 447, 448, 449, 452, 455, 457], "pyinit_modulenam": [44, 69], "pymoduledef_init": [44, 55], "py_mod_cr": 44, "create_modul": [44, 238, 398, 407, 447, 454, 455], "451": [44, 85, 150, 230, 238, 284, 306, 331, 407, 447, 449, 454], "symlink": [44, 135, 153, 220, 245, 276, 277, 278, 279, 293, 314, 337, 375, 425, 434, 435, 441, 443, 447, 451, 452, 453, 457], "exec_modul": [44, 97, 238, 398, 407, 447, 449, 450, 453, 454, 455], "py_mod_multiple_interpreters_not_support": 44, "py_mod_multiple_interpreters_support": 44, "py_mod_per_interpreter_gil_support": 44, "hood": [44, 98, 99, 102, 340, 366, 367, 442, 443, 451], "pymodule_execdef": [44, 55, 454], "pymodule_fromdefandspec2": [44, 55, 454], "pymodule_setdocstr": [44, 55], "pymodule_addfunct": [44, 55], "lack": [44, 45, 76, 78, 83, 96, 150, 164, 202, 205, 236, 238, 269, 277, 278, 298, 317, 321, 327, 338, 397, 404, 405, 415, 436, 437, 438, 443, 445, 448, 452, 453, 454, 456], "add_spam": 44, "pymodule_add": [44, 55, 71, 450], "bother": [44, 83, 90, 99, 101, 105, 269, 438, 439, 449], "pymodule_addobject": [44, 55, 437, 447, 450], "easi": [44, 61, 71, 76, 81, 82, 83, 84, 87, 88, 90, 96, 97, 99, 102, 103, 104, 106, 107, 114, 131, 150, 157, 159, 164, 172, 175, 180, 182, 183, 193, 197, 215, 217, 256, 276, 277, 282, 300, 313, 318, 321, 323, 324, 337, 342, 365, 366, 367, 383, 386, 403, 405, 414, 415, 416, 417, 419, 420, 438, 439, 441, 442, 443, 444, 447, 451, 452, 453, 454, 455, 456], "manual": [44, 59, 66, 70, 71, 72, 75, 77, 82, 83, 84, 90, 91, 93, 97, 99, 101, 105, 114, 120, 125, 126, 127, 133, 165, 166, 182, 186, 195, 200, 204, 214, 242, 245, 246, 255, 259, 269, 270, 276, 277, 284, 286, 295, 302, 310, 318, 320, 324, 335, 337, 338, 339, 344, 363, 366, 385, 388, 396, 399, 403, 408, 409, 420, 424, 426, 429, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 448, 449, 452, 453, 454, 456, 457], "stole": 44, "soft": [44, 85, 166, 217, 236, 251, 276, 304, 329, 337, 340, 402, 406, 411, 447, 450], "pymodule_addintconst": [44, 55, 437], "pymodule_addstringconst": [44, 55, 437], "pymodule_addintmacro": [44, 443], "af_inet": [44, 99, 103, 120, 269, 318, 319, 321, 340, 443], "pymodule_addstringmacro": [44, 443], "pymodule_addtyp": [44, 55, 458], "tp_name": [44, 59, 61, 73, 74, 88], "pystate_findmodul": [44, 55], "pystate_addmodul": [44, 55], "beforehand": [44, 407], "unnecessari": [44, 71, 78, 83, 98, 114, 127, 140, 216, 259, 269, 270, 324, 331, 359, 363, 367, 371, 385, 411, 438, 439, 441, 444, 449, 454, 457], "harmless": [44, 71, 88, 182, 353, 401], "pystate_removemodul": [44, 55], "suffici": [45, 61, 71, 77, 95, 96, 97, 98, 110, 116, 148, 172, 173, 175, 182, 214, 262, 277, 294, 308, 321, 324, 343, 365, 367, 375, 379, 390, 407, 411, 417, 435, 436, 451, 452, 455, 456], "pynone_check": 45, "pynumber_check": [46, 55, 457], "o1": [46, 47, 52, 76, 170], "o2": [46, 47, 52, 76, 170, 288, 378], "pynumber_subtract": [46, 53, 55], "subtract": [46, 150, 172, 175, 247, 258, 262, 275, 290, 323, 324, 361, 394, 405, 437, 440, 443, 444, 448, 451, 456], "pynumber_multipli": [46, 55], "multipli": [46, 70, 74, 156, 165, 172, 175, 188, 249, 257, 290, 300, 324, 325, 331, 394, 405, 419, 437, 440, 441, 443, 447, 448, 451], "pynumber_matrixmultipli": [46, 55, 454], "matrix": [46, 83, 143, 214, 275, 361, 378, 401, 405, 417, 438, 457], "pynumber_floordivid": [46, 55], "floor": [46, 83, 85, 101, 156, 172, 175, 182, 210, 214, 262, 273, 324, 361, 403, 405, 424, 439, 443, 457, 458], "divid": [46, 82, 88, 90, 102, 157, 172, 175, 180, 182, 183, 214, 236, 262, 270, 279, 290, 300, 323, 332, 345, 394, 410, 418, 419, 443, 448, 451, 452, 453, 457], "pynumber_truedivid": [46, 55], "approxim": [46, 62, 76, 77, 83, 144, 148, 150, 156, 166, 170, 175, 179, 182, 191, 202, 210, 236, 262, 269, 298, 308, 327, 328, 340, 358, 361, 365, 403, 405, 407, 419, 421, 436, 443, 444, 456], "mathemat": [46, 66, 76, 85, 93, 102, 150, 172, 175, 242, 249, 275, 300, 324, 403, 405, 417, 419, 427, 441, 443, 454], "pynumber_remaind": [46, 55], "pynumber_divmod": [46, 55], "divmod": [46, 83, 172, 175, 214, 273, 324, 403, 405, 419, 425, 457], "pynumber_pow": [46, 55], "o3": [46, 70], "pow": [46, 83, 87, 116, 156, 159, 214, 249, 262, 269, 273, 275, 324, 395, 403, 405, 406, 425, 439, 448, 451, 457], "pynumber_neg": [46, 55], "pynumber_posit": [46, 55], "pynumber_absolut": [46, 55], "ab": [46, 61, 93, 102, 142, 144, 150, 172, 175, 179, 214, 223, 249, 258, 262, 273, 275, 276, 291, 301, 324, 358, 359, 361, 363, 392, 401, 403, 405, 410, 415, 417, 425, 437, 440, 448, 456], "pynumber_invert": [46, 55], "bitwis": [46, 56, 88, 90, 92, 93, 102, 166, 167, 182, 200, 204, 214, 268, 275, 277, 301, 311, 318, 320, 332, 382, 403, 406, 440, 443, 444, 449, 450, 455], "pynumber_lshift": [46, 55], "shift": [46, 166, 167, 172, 175, 180, 236, 269, 275, 277, 324, 353, 383, 403, 417, 437, 439, 441, 443, 444, 448, 452], "pynumber_rshift": [46, 55], "pynumber_and": [46, 53, 55], "pynumber_xor": [46, 53, 55], "pynumber_or": [46, 53, 55], "pynumber_inplaceadd": [46, 55], "pynumber_inplacesubtract": [46, 53, 55], "pynumber_inplacemultipli": [46, 55], "pynumber_inplacematrixmultipli": [46, 55, 454], "pynumber_inplacefloordivid": [46, 55], "pynumber_inplacetruedivid": [46, 55], "pynumber_inplaceremaind": [46, 55], "pynumber_inplacepow": [46, 55], "pynumber_inplacelshift": [46, 55], "pynumber_inplacershift": [46, 55], "pynumber_inplaceand": [46, 53, 55], "pynumber_inplacexor": [46, 53, 55], "pynumber_inplaceor": [46, 53, 55], "pynumber_long": [46, 55, 446, 457], "pynumber_float": [46, 55, 457], "pynumber_index": [46, 55, 77, 442, 447], "pynumber_tobas": [46, 55], "marker": [46, 105, 142, 148, 160, 180, 182, 214, 243, 246, 258, 280, 282, 320, 321, 354, 363, 376, 416, 431, 447, 452, 455, 456], "0b": [46, 214, 276, 324, 325, 443, 451], "0o": [46, 83, 214, 324, 325, 443, 451], "pynumber_asssize_t": [46, 55], "clip": [46, 54, 88, 166, 411], "py_ssize_t_min": [46, 54], "pyindex_check": [46, 55, 458], "nb_index": [46, 61, 442], "tp_as_numb": [46, 61, 73, 458], "py_notimpl": [47, 61, 62, 73, 438], "notimpl": [47, 92, 111, 158, 172, 202, 215, 238, 273, 282, 362, 366, 405, 425, 444, 445, 447, 450, 453, 458], "py_return_notimpl": 47, "pyobject_print": [47, 53, 71], "fp": [47, 57, 64, 76, 93, 114, 175, 177, 185, 189, 190, 193, 196, 212, 219, 231, 250, 263, 277, 286, 334, 338, 356, 359, 370, 372, 401, 441], "pyobject_hasattrwitherror": [47, 55, 450], "attr_nam": [47, 340, 439], "hasattr": [47, 85, 91, 99, 106, 214, 215, 243, 269, 302, 324, 331, 337, 345, 363, 365, 366, 402, 403, 407, 425, 440, 443, 449, 451, 453, 456], "pyobject_hasattrstringwitherror": [47, 55, 450], "pyobject_hasattr": [47, 55, 450], "__getattr__": [47, 56, 61, 73, 83, 91, 135, 165, 205, 214, 243, 282, 305, 324, 362, 366, 403, 405, 422, 439, 443, 449, 451, 452, 453, 456], "__getattribute__": [47, 61, 78, 85, 91, 214, 243, 282, 403, 439, 443, 451, 456], "pyobject_getoptionalattr": [47, 55, 450], "pyobject_getattr": [47, 55, 59, 61, 450], "pyobject_hasattrstr": [47, 55, 450], "pyobject_getoptionalattrstr": [47, 55, 450], "pyobject_getattrstr": [47, 55, 70, 71, 77, 448, 450], "pyobject_genericgetattr": [47, 55, 61, 91], "getter": [47, 55, 74, 91, 111, 157, 214, 215, 324, 343, 372, 443, 449, 453, 454], "tp_getattro": [47, 61, 73], "mro": [47, 59, 83, 85, 111, 170, 186, 324, 362, 415, 456], "outlin": [47, 98, 99, 111, 129, 133, 157, 210, 233, 361, 403], "pyobject_setattr": [47, 55, 61], "favour": [47, 52, 76, 238, 243, 442, 452, 455, 456, 458], "pyobject_delattr": [47, 55], "plan": [47, 88, 101, 103, 108, 127, 282, 361, 363, 379, 437, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 453], "pyobject_setattrstr": [47, 55, 77], "pyobject_delattrstr": [47, 55], "pyobject_genericsetattr": [47, 55, 61], "setter": [47, 55, 74, 91, 111, 214, 215, 324, 343, 366, 372, 443, 453], "tp_setattro": [47, 61, 73], "del": [47, 52, 56, 71, 74, 83, 86, 91, 97, 116, 137, 150, 167, 180, 185, 194, 214, 216, 219, 225, 236, 243, 259, 269, 270, 275, 276, 277, 279, 282, 312, 324, 366, 378, 402, 403, 404, 405, 406, 407, 410, 415, 416, 427, 437, 438, 440, 442, 443, 444, 451], "pyobject_genericgetdict": [47, 55, 61], "pyobject_genericsetdict": [47, 55], "_pyobject_getdictptr": 47, "pyobject_richcompar": [47, 55, 61, 73], "opid": 47, "py_lt": [47, 61, 62, 73], "py_l": [47, 61, 62, 73], "py_eq": [47, 61, 62, 73], "py_n": [47, 61, 62, 73], "py_gt": [47, 61, 62, 73], "py_g": [47, 61, 62, 73], "pyobject_richcomparebool": [47, 53, 55, 73], "pyobject_format": [47, 55], "format_spec": [47, 116, 180, 210, 214, 325, 403, 410, 443], "pyobject_repr": [47, 53, 55, 61, 62, 453, 454], "pyobject_ascii": [47, 55], "pyobject_str": [47, 55, 61, 62, 453], "pyobject_byt": [47, 55], "pyobject_issubclass": [47, 55, 59, 454], "cl": [47, 59, 61, 75, 83, 88, 91, 92, 111, 116, 151, 170, 180, 192, 200, 202, 214, 215, 243, 250, 279, 280, 282, 320, 340, 359, 362, 363, 365, 402, 403, 406, 411, 418, 439, 441, 443, 448, 451, 455, 456], "against": [47, 55, 70, 71, 73, 74, 76, 83, 84, 85, 92, 99, 101, 102, 114, 116, 120, 130, 165, 170, 179, 180, 182, 224, 239, 243, 261, 265, 276, 277, 279, 285, 287, 289, 290, 293, 296, 301, 306, 308, 313, 315, 321, 322, 324, 337, 340, 343, 347, 361, 362, 363, 365, 366, 367, 376, 384, 386, 387, 388, 389, 394, 395, 396, 401, 402, 403, 407, 416, 425, 430, 431, 437, 438, 439, 440, 441, 442, 447, 448, 449, 451, 453, 454, 456, 457], "__subclasscheck__": [47, 59, 111, 366, 403], "3119": [47, 111, 151, 403, 445], "indirect": [47, 59, 71, 83, 214, 243, 289, 401, 403, 405, 407], "__mro__": [47, 61, 83, 91, 111, 186, 214, 324, 363, 403], "__bases__": [47, 61, 74, 192, 214, 282, 324, 362, 403, 440], "pyobject_isinst": [47, 55, 61, 454], "inst": [47, 91, 411, 418], "__instancecheck__": [47, 366, 403], "__class__": [47, 78, 83, 85, 91, 92, 97, 172, 200, 214, 238, 282, 324, 366, 376, 403, 415, 439, 440, 443, 455], "py_hash_t": [47, 61, 73, 451], "pyobject_hash": [47, 53, 55, 61, 448, 449, 450], "pyobject_hashnotimpl": [47, 55, 61, 443], "tp_hash": [47, 61, 73, 443], "pyobject_istru": [47, 53, 55], "pyobject_not": [47, 55], "pyobject_typ": [47, 55], "realli": [47, 61, 70, 73, 75, 76, 78, 83, 86, 88, 90, 93, 102, 103, 105, 109, 172, 180, 189, 192, 194, 259, 269, 277, 310, 324, 331, 343, 344, 361, 364, 388, 403, 410, 411, 414, 416, 417, 419, 421, 437, 438, 439, 440, 441, 442, 445, 449, 455], "py_typ": [47, 56, 59, 61, 73, 74, 88, 97, 443, 448, 457, 458], "pyobject_typecheck": [47, 73], "pyobject_s": [47, 55, 61], "pyobject_lengthhint": [47, 453], "defaultvalu": [47, 256], "estim": [47, 164, 175, 249, 275, 300, 340, 403], "__length_hint__": [47, 275, 403, 453], "length_hint": [47, 275, 403, 453], "pyobject_dir": [47, 55], "dir": [47, 76, 78, 83, 92, 109, 153, 173, 178, 199, 200, 212, 214, 254, 276, 277, 278, 279, 305, 324, 328, 337, 338, 347, 357, 366, 375, 397, 403, 426, 431, 440, 443, 447, 448, 449, 451, 452], "pyobject_getait": [47, 55], "aiter": [47, 214, 403, 447, 455], "pyobject_gettypedata": [47, 55, 59, 449], "pytype_spec": [47, 55, 59, 61, 97, 449], "basics": [47, 56, 59, 449], "pytype_gettypedatas": [47, 55, 449], "memset": [47, 165], "pyobject_getitemdata": [47, 449], "py_tpflags_items_at_end": [47, 59, 61, 449], "tmp": [49, 74, 99, 105, 159, 212, 234, 259, 314, 338, 407, 431, 437, 440, 441, 442, 443, 444, 451, 457], "pyunstable_perfmapstate_init": 49, "pid": [49, 95, 120, 126, 131, 135, 157, 265, 269, 277, 282, 291, 304, 318, 328, 340, 442, 444, 458], "pyunstable_writeperfmapentri": 49, "code_addr": 49, "code_s": 49, "entry_nam": 49, "7f3529fcf759": 49, "Will": [49, 70, 165, 237, 243, 269, 301, 323, 353, 381, 449, 456], "pyunstable_perfmapstate_fini": 49, "shouldn": [49, 62, 74, 86, 88, 97, 102, 127, 199, 255, 284, 309, 321, 325, 331, 365, 372, 424, 438, 439, 441, 442, 443, 446, 455], "scenario": [49, 88, 98, 99, 129, 175, 177, 255, 256, 278, 302, 365, 366, 367, 372, 407, 431, 447, 453, 455], "fork": [49, 57, 71, 82, 99, 134, 135, 156, 202, 216, 245, 265, 269, 277, 291, 310, 314, 319, 321, 328, 440, 444, 449, 450, 453, 456, 457], "py_refcnt": [50, 56, 74, 443, 447], "py_set_refcnt": [50, 447], "refcnt": [50, 447], "counter": [50, 61, 71, 74, 83, 85, 93, 132, 134, 179, 180, 189, 216, 225, 269, 276, 277, 324, 343, 344, 363, 365, 405, 415, 439, 441, 442, 443, 444, 446, 451, 452, 457], "py_newref": [50, 55, 74, 85, 447], "aren": [50, 74, 76, 78, 82, 83, 86, 90, 91, 92, 93, 96, 102, 103, 105, 107, 133, 144, 157, 165, 190, 206, 216, 243, 247, 256, 257, 276, 279, 319, 321, 327, 331, 347, 354, 366, 367, 394, 437, 438, 439, 440, 441, 442, 443, 444, 452, 453], "py_xincref": [50, 71, 448, 457], "py_xnewref": [50, 55, 447], "attr": [50, 61, 77, 88, 90, 116, 166, 180, 229, 233, 239, 243, 275, 276, 282, 296, 331, 340, 347, 365, 366, 388, 390, 391, 392, 402, 403, 406, 411, 437, 438, 441, 448, 452], "py_clear": [50, 61, 71, 73, 74, 441, 449], "py_setref": [50, 74, 449], "dst": [50, 135, 165, 172, 277, 314, 320, 344, 452], "deadli": 50, "arrang": [50, 82, 84, 93, 98, 99, 120, 126, 127, 133, 182, 214, 225, 243, 256, 269, 321, 343, 347, 353], "_before_": 50, "torn": 50, "believ": [50, 76, 85, 93, 103, 225, 276, 308, 440], "py_xsetref": [50, 74, 449], "pyeval_getbuiltin": [51, 55], "pyeval_getloc": [51, 55], "pyeval_getglob": [51, 55], "pyeval_getfuncnam": [51, 55], "pyeval_getfuncdesc": [51, 55], "pysequence_check": [52, 55, 61], "pysequence_s": [52, 55, 61], "pysequence_concat": [52, 55, 61], "pysequence_repeat": [52, 55, 61], "pysequence_inplaceconcat": [52, 55, 61], "pysequence_inplacerepeat": [52, 55, 61], "th": [52, 143, 164, 180, 185, 214, 225, 254, 262, 269, 305, 323, 324, 344, 361, 385, 403, 437, 440, 442], "pysequence_getslic": [52, 55, 61], "i1": [52, 179, 265, 394, 441], "i2": [52, 179, 265, 394, 441], "pysequence_delitem": [52, 55], "pysequence_setslic": [52, 55, 61], "pysequence_delslic": [52, 55, 61], "pysequence_count": [52, 55], "occurr": [52, 62, 83, 87, 98, 102, 115, 116, 134, 150, 157, 166, 175, 185, 194, 217, 259, 270, 275, 276, 300, 301, 310, 323, 324, 337, 350, 376, 388, 403, 404, 405, 406, 409, 410, 411, 421, 439, 441, 442, 445, 451], "pysequence_contain": [52, 55, 61], "pysequence_index": [52, 55], "pysequence_list": [52, 55], "pysequence_tupl": [52, 55], "pysequence_fast": [52, 55], "pysequence_fast_get_s": 52, "pysequence_fast_get_item": 52, "pysequence_fast_item": 52, "reloc": [52, 443], "pysequence_item": 52, "frozenset": [53, 85, 116, 171, 214, 261, 282, 331, 363, 365, 375, 378, 402, 403, 405, 425, 441, 442, 443, 448, 451, 458], "pysetobject": 53, "medium": [53, 92, 167, 175, 401, 441, 442], "pyset_typ": [53, 55], "pyfrozenset_typ": [53, 55], "pyset_check": 53, "pyfrozenset_check": 53, "pyanyset_check": 53, "pyset_checkexact": [53, 447], "pyanyset_checkexact": 53, "pyfrozenset_checkexact": 53, "pyset_new": [53, 55, 442], "pyfrozenset_new": [53, 55, 442], "pyset_s": [53, 55, 442], "anyset": 53, "pyset_get_s": 53, "pyset_contain": [53, 55, 442], "__contains__": [53, 56, 61, 78, 83, 85, 92, 95, 151, 185, 194, 200, 249, 259, 275, 324, 366, 383, 391, 403, 405, 437, 440, 441, 443], "unhash": [53, 76, 170, 324, 365, 403, 405, 447, 458], "pyset_add": [53, 55, 442], "grow": [53, 58, 83, 87, 99, 103, 150, 182, 215, 225, 257, 300, 302, 353, 401, 425, 437, 441, 443, 444, 451], "pyset_discard": [53, 55, 442], "pyset_pop": [53, 55], "pyset_clear": [53, 55], "pyslice_typ": [54, 55], "pyslice_check": 54, "pyslice_new": [54, 55], "pyslice_getindic": [54, 55], "pysliceobject": 54, "pyslice_getindicesex": [54, 55, 449, 450, 456], "slicelength": 54, "pyslice_unpack": [54, 55, 449, 456], "pyslice_adjustindic": [54, 55, 449, 456], "0x03050400": [54, 456], "0x03060000": [54, 456], "0x03060100": [54, 456], "boost": [54, 77, 215, 441], "py_ellipsi": [54, 406], "387": [55, 85, 88, 202], "seriou": [55, 76, 85, 98, 120, 182, 202, 255, 366], "forward": [55, 62, 76, 83, 88, 91, 93, 102, 116, 140, 145, 165, 166, 172, 180, 189, 215, 219, 236, 246, 259, 273, 278, 279, 280, 320, 321, 324, 361, 363, 378, 383, 386, 402, 416, 417, 422, 429, 437, 438, 439, 441, 443, 446, 447, 448, 451, 456], "vice": [55, 70, 82, 165, 238, 255, 277, 279, 301, 324, 353, 357, 363, 388, 424, 443, 449, 453], "versa": [55, 70, 82, 165, 238, 255, 277, 279, 301, 324, 353, 357, 363, 388, 424, 443, 449, 453], "pyunstabl": 55, "subset": [55, 78, 93, 101, 103, 140, 148, 150, 157, 166, 224, 236, 237, 238, 241, 245, 250, 257, 259, 282, 288, 296, 310, 314, 318, 324, 337, 343, 351, 365, 385, 388, 390, 397, 405, 440, 442, 444, 448, 454, 456], "_py_internalst": 55, "bugfix": [55, 78, 87, 437, 438, 439, 440, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "spend": [55, 304, 437, 448], "simplic": [55, 62, 73, 250, 320, 324, 437, 439, 447], "talk": [55, 62, 78, 83, 88, 90, 99, 103, 105, 321, 323, 328, 403, 415, 416, 434, 442, 454], "recompil": [55, 70, 77, 85, 153, 238, 425, 435, 437, 440, 444, 451, 454, 455], "hardcod": [55, 165, 245, 255, 257, 435, 453], "0x030a0000": 55, "0x03020000": 55, "python39": 55, "abi3": [55, 452], "mymodul": [55, 77, 98, 219, 366, 367, 376, 444, 451], "goal": [55, 61, 73, 88, 93, 97, 190, 214, 224, 302, 340, 388, 409, 438, 440, 442, 443, 451, 453, 454, 455], "penalti": [55, 88, 99, 170, 205, 288, 437, 451], "prereleas": [55, 450], "upcom": [55, 202, 215, 307], "guard": [55, 61, 97, 99, 116, 120, 239, 295, 340, 343, 362, 363, 406, 407, 416, 457], "derefer": [55, 269, 337], "technic": [55, 76, 78, 85, 93, 106, 157, 180, 202, 214, 240, 250, 276, 277, 301, 324, 376, 402, 407, 434, 436, 437, 444, 447, 456], "unintention": [55, 97, 99, 109, 255, 425, 448, 451], "stai": [55, 62, 132, 323, 331, 449, 451, 452, 455, 460], "architectur": [55, 100, 115, 125, 202, 261, 266, 285, 315, 327, 334, 385, 396, 403, 425, 431, 435, 436, 440, 441, 443, 452, 454, 458], "distributor": [55, 321, 400, 448, 455], "pybaseobject_typ": [55, 61], "pybytearrayiter_typ": 55, "pybytesiter_typ": 55, "pybytes_decodeescap": 55, "pybytes_repr": 55, "pycfunctionwithkeyword": [55, 56], "pycfunction_getflag": 55, "pycfunction_getfunct": 55, "pycfunction_getself": 55, "pycfunction_new": 55, "pycfunction_newex": 55, "pycfunction_typ": 55, "pycmethod_new": 55, "pycapsule_typ": 55, "pyclassmethoddescr_typ": 55, "pydictitems_typ": 55, "pydictiteritem_typ": 55, "pydictiterkey_typ": 55, "pydictitervalue_typ": 55, "pydictkeys_typ": 55, "pydictproxy_typ": 55, "pydictreviteritem_typ": 55, "pydictreviterkey_typ": 55, "pydictrevitervalue_typ": 55, "pydictvalues_typ": 55, "pyellipsis_typ": 55, "pyenum_typ": 55, "pyerr_displai": [55, 447, 449], "pyerr_programtext": 55, "pyeval_evalcod": [55, 64, 100, 447], "pyeval_evalcodeex": [55, 64], "pyeval_evalfram": [55, 64], "pyeval_evalframeex": [55, 64, 453], "pyexc_baseexceptiongroup": 55, "pyexc_encodingwarn": 55, "pyexceptionclass_nam": [55, 457], "pyfilter_typ": 55, "pygetsetdescr_typ": 55, "pylistiter_typ": 55, "pylistreviter_typ": 55, "pylongrangeiter_typ": 55, "pylong_getinfo": 55, "pymap_typ": 55, "pymemberdescr_typ": 55, "pymember_geton": [55, 56, 91, 449], "pymember_seton": [55, 56, 449], "pymemoryview_typ": 55, "pymethoddescr_typ": 55, "pymoduledef_typ": 55, "pyos_afterfork": [55, 57, 449, 450, 456], "pyos_afterfork_par": [55, 57, 277, 456], "pyos_beforefork": [55, 57, 277, 456], "pyos_fspath": [55, 57, 455], "pyos_inputhook": [55, 64, 449], "pyos_interruptoccur": 55, "pyos_getsig": [55, 57, 437], "pyos_mystricmp": 55, "pyos_mystrnicmp": 55, "pyos_setsig": [55, 57, 437], "pyos_sighandler_t": [55, 57], "pyos_strtol": 55, "pyos_strtoul": 55, "ob_refcnt": [55, 61, 447], "ob_typ": [55, 61, 74, 448], "pyobject_clearweakref": [55, 61, 65, 73, 449], "pyobject_delitemstr": [55, 440], "pyobject_selfit": 55, "pyrangeiter_typ": 55, "pyrange_typ": [55, 442], "pyreversed_typ": 55, "pysequence_in": 55, "pysetiter_typ": 55, "pystructsequence_desc": [55, 58, 456], "pystructsequence_field": [55, 58, 456], "pystructsequence_getitem": [55, 58], "pystructsequence_new": [55, 58], "pystructsequence_newtyp": [55, 58], "pystructsequence_setitem": [55, 58], "pystructsequence_unnamedfield": [55, 58, 458], "pysuper_typ": 55, "pysys_formatstderr": [55, 57], "pysys_formatstdout": [55, 57], "pysys_getxopt": [55, 57], "pysys_setobject": [55, 57], "pysys_writestderr": [55, 57], "pysys_writestdout": [55, 57], "pythread_getinfo": 55, "pythread_acquire_lock": 55, "pythread_acquire_lock_tim": 55, "pythread_allocate_lock": 55, "pythread_exit_thread": 55, "pythread_free_lock": 55, "pythread_get_stacks": 55, "pythread_get_thread_id": [55, 456], "pythread_get_thread_native_id": 55, "pythread_init_thread": 55, "pythread_release_lock": 55, "pythread_set_stacks": 55, "pythread_start_new_thread": [55, 456], "pytraceback_her": 55, "pytraceback_print": [55, 455], "pytraceback_typ": 55, "pytupleiter_typ": 55, "pytuple_getitem": [55, 58, 71, 77], "pytuple_getslic": [55, 58], "pytuple_pack": [55, 58, 77, 441], "pytuple_s": [55, 58, 77], "pytuple_typ": [55, 58], "pytype_clearcach": [55, 59], "pytype_frommetaclass": [55, 59, 61, 449], "pytype_frommoduleandspec": [55, 59, 61, 88, 97, 447, 449, 458], "pytype_genericalloc": [55, 59, 61, 457], "pytype_genericnew": [55, 59, 61, 74], "pytype_getflag": [55, 59], "pytype_getmodul": [55, 59, 97, 458], "pytype_getmodulest": [55, 59, 88, 97, 458], "pytype_getnam": [55, 59, 448], "pytype_getqualnam": [55, 59, 448], "pytype_getslot": [55, 59, 447, 453], "pytype_issubtyp": [55, 59], "pytype_modifi": [55, 59, 61], "pytype_slot": [55, 59], "pytype_typ": [55, 59, 61, 449], "pyunicodeiter_typ": 55, "pyunicode_append": 55, "pyunicode_appendanddel": 55, "pyunicode_asasciistr": [55, 62, 452], "pyunicode_ascharmapstr": [55, 62], "pyunicode_asdecodedobject": [55, 449, 450, 455], "pyunicode_asdecodedunicod": [55, 449, 450, 455], "pyunicode_asencodedobject": [55, 449, 450, 452, 455], "pyunicode_asencodedstr": [55, 62], "pyunicode_asencodedunicod": [55, 449, 450, 455], "pyunicode_aslatin1str": [55, 62, 452], "pyunicode_asmbcsstr": [55, 62, 452], "pyunicode_asrawunicodeescapestr": [55, 62, 452], "pyunicode_asucs4": [55, 62, 452], "pyunicode_asucs4copi": [55, 62, 447, 452], "pyunicode_asutf16str": [55, 62], "pyunicode_asutf32str": [55, 62], "pyunicode_asutf8ands": [55, 62, 447, 456], "pyunicode_asutf8str": [55, 62, 452], "pyunicode_asunicodeescapestr": [55, 62, 452], "pyunicode_aswidechar": [55, 62], "pyunicode_aswidecharstr": [55, 62, 447, 452, 456], "pyunicode_buildencodingmap": 55, "pyunicode_compar": [55, 62, 447, 452], "pyunicode_comparewithasciistr": [55, 62, 451], "pyunicode_concat": [55, 62, 452], "pyunicode_contain": [55, 62], "pyunicode_count": [55, 62], "pyunicode_decod": [55, 62], "pyunicode_decodeascii": [55, 62], "pyunicode_decodecharmap": [55, 62], "pyunicode_decodecodepagest": 55, "pyunicode_decodefsdefault": [55, 62, 70], "pyunicode_decodefsdefaultands": [55, 57, 62], "pyunicode_decodelatin1": [55, 62], "pyunicode_decodelocal": [55, 62], "pyunicode_decodelocaleands": [55, 57, 62, 456], "pyunicode_decodembc": [55, 62], "pyunicode_decodembcsst": [55, 62], "pyunicode_decoderawunicodeescap": [55, 62], "pyunicode_decodeutf16": [55, 62], "pyunicode_decodeutf16st": [55, 62], "pyunicode_decodeutf32": [55, 62], "pyunicode_decodeutf32st": [55, 62], "pyunicode_decodeutf7": [55, 62], "pyunicode_decodeutf7st": [55, 62], "pyunicode_decodeutf8": [55, 62], "pyunicode_decodeutf8st": [55, 62], "pyunicode_decodeunicodeescap": [55, 62], "pyunicode_encodecodepag": [55, 62, 452], "pyunicode_encodefsdefault": [55, 57, 62], "pyunicode_encodelocal": [55, 57, 62, 456], "pyunicode_fsdecod": [55, 62, 449, 455], "pyunicode_find": [55, 62], "pyunicode_findchar": [55, 62, 447, 452, 456], "pyunicode_format": [55, 62], "pyunicode_fromencodedobject": [55, 62], "pyunicode_fromformatv": [55, 57, 62, 449], "pyunicode_fromobject": [55, 62], "pyunicode_fromordin": 55, "pyunicode_fromstringands": [55, 62, 447], "pyunicode_fromwidechar": [55, 62, 452], "pyunicode_getdefaultencod": 55, "pyunicode_getlength": [55, 62, 447, 452], "pyunicode_internfromstr": [55, 62], "pyunicode_interninplac": [55, 62, 447], "pyunicode_isidentifi": [55, 62], "pyunicode_join": [55, 62, 452], "pyunicode_partit": 55, "pyunicode_rpartit": 55, "pyunicode_rsplit": 55, "pyunicode_readchar": [55, 62, 452], "pyunicode_replac": [55, 62], "pyunicode_res": 55, "pyunicode_richcompar": [55, 62], "pyunicode_split": [55, 62], "pyunicode_splitlin": [55, 62], "pyunicode_substr": [55, 62, 447, 452], "pyunicode_tailmatch": [55, 62, 447, 452, 458], "pyunicode_transl": [55, 62], "pyunicode_typ": [55, 61, 62, 88], "pyunicode_writechar": [55, 62, 452], "ob_bas": [55, 56, 74], "ob_siz": [55, 56, 61, 448], "pyweakrefer": [55, 448], "pyweakref_getobject": [55, 65, 450], "pyweakref_getref": [55, 65, 450], "pyweakref_newproxi": [55, 65], "pywrapperdescr_typ": 55, "pyzip_typ": 55, "py_atexit": [55, 57], "py_bytesmain": [55, 64, 100, 457], "py_compilestr": [55, 64, 447], "py_exit": [55, 57, 455], "py_filesystemdefaultencodeerror": [55, 449, 450], "py_filesystemdefaultencod": [55, 449, 450], "py_genericalia": [55, 60], "py_genericaliastyp": [55, 60], "py_getrecursionlimit": 55, "py_hasfilesystemdefaultencod": [55, 449, 450], "py_i": [55, 56, 447], "py_isfals": [55, 56, 447], "py_isnon": [55, 56, 447], "py_istru": [55, 56, 447], "py_makependingcal": 55, "py_setrecursionlimit": 55, "py_ucs4": [55, 62, 115, 450, 452], "py_utf8mod": [55, 449, 450], "py_intptr_t": 55, "py_uintptr_t": 55, "allocfunc": [55, 61, 73], "binaryfunc": [55, 61], "descrgetfunc": [55, 61, 73], "descrsetfunc": [55, 61, 73], "getattrfunc": [55, 61, 73], "getattrofunc": [55, 61, 73], "getiterfunc": [55, 61, 73], "hashfunc": [55, 61, 73], "initproc": [55, 61, 73, 74], "iternextfunc": [55, 61, 73], "lenfunc": [55, 61], "newfunc": [55, 61, 73, 215], "objobjargproc": [55, 61], "objobjproc": [55, 61], "releasebufferproc": [55, 61], "reprfunc": [55, 61, 73], "richcmpfunc": [55, 61, 73], "setattrfunc": [55, 61, 73], "setattrofunc": [55, 61, 73], "ssizeargfunc": [55, 61], "ssizeobjargproc": [55, 61], "ssizessizeargfunc": 55, "ssizessizeobjargproc": 55, "symtabl": [55, 66, 242, 252, 444, 447, 449, 458], "ternaryfunc": [55, 61, 73], "unaryfunc": [55, 61], "ultim": [56, 85, 182, 214, 224, 276, 331, 403, 405, 407, 411, 439, 441], "expans": [56, 66, 208, 209, 223, 236, 242, 262, 278, 290, 296, 328, 342, 384, 397, 416, 441, 447, 452, 453], "notion": [56, 84, 172, 175, 179, 182, 214, 282, 324, 353, 385, 389, 405, 409, 412, 413, 451], "py_siz": [56, 443, 448], "pyobject_head": [56, 61, 74, 445], "pyobject_var_head": [56, 61, 73], "py_set_typ": [56, 448], "py_is_typ": 56, "py_set_s": [56, 448], "pyobject_head_init": [56, 61, 449], "_pyobject_extra_init": 56, "pyvarobject_head_init": [56, 61, 73, 74], "shall": [56, 278, 279, 282, 311, 390, 401, 436, 451], "meth_keyword": [56, 71, 97], "_pycfunctionfast": 56, "meth_fastcal": [56, 97, 456], "narg": [56, 87, 97, 99, 276, 291, 320, 375, 426, 444, 451], "_pycfunctionfastwithkeyword": 56, "pycmethod": [56, 59, 97, 448, 458], "meth_method": [56, 88, 97, 458], "defining_class": [56, 88, 97], "ml_name": [56, 73], "ml_meth": [56, 73], "ml_flag": [56, 73], "ml_doc": [56, 73], "bitfield": [56, 108, 214], "fourth": [56, 88, 93, 108, 166, 183, 255, 289, 301, 344, 394, 416, 439, 447], "superclass": [56, 59, 61, 97, 111, 145, 170, 214, 215, 250, 256, 294, 319, 363, 403, 439, 440, 442, 449], "meth_class": [56, 60, 440], "classmethod": [56, 85, 91, 92, 111, 150, 151, 165, 172, 175, 180, 182, 192, 200, 210, 214, 215, 238, 243, 249, 269, 279, 282, 323, 324, 337, 358, 359, 363, 365, 397, 400, 403, 425, 439, 441, 444, 447, 448, 449, 451, 452, 455, 456, 457], "meth_stat": [56, 440], "staticmethod": [56, 83, 85, 91, 92, 111, 182, 200, 214, 215, 256, 337, 395, 403, 425, 439, 441, 444, 447, 451, 452, 457], "meth_coexist": [56, 441], "sq_contain": [56, 61], "preclud": [56, 150, 273, 324, 457], "OR": [56, 74, 90, 102, 166, 182, 200, 258, 268, 277, 279, 291, 301, 318, 320, 401, 405], "py_readonli": [56, 73, 449], "py_t_str": 56, "py_t_object_ex": [56, 74, 449], "t_object": [56, 449], "__vectorcalloffset__": 56, "py_t_pyssizet": 56, "spam_type_memb": 56, "offsetof": [56, 74, 449], "spam_object": 56, "stddef": [56, 74, 449], "tp_dictoffset": [56, 59, 61, 73, 449], "tp_weaklistoffset": [56, 59, 61, 73, 449, 458], "__dictoffset__": 56, "__weaklistoffset__": 56, "strongli": [56, 71, 92, 98, 214, 323, 331, 390, 397, 403, 407, 431, 438, 439, 442, 447], "py_tpflags_managed_dict": [56, 59, 61, 449], "py_tpflags_managed_weakref": [56, 59, 61, 73, 449], "structmemb": [56, 91, 449], "obj_addr": 56, "py_audit_read": [56, 449], "py_relative_offset": [56, 449], "py_tp_memb": 56, "mandatori": [56, 74, 82, 108, 130, 231, 237, 238, 256, 277, 321, 322, 416, 431, 440, 452, 456, 458], "pytypeslot": 56, "tp_member": [56, 61, 73, 74, 448], "read_restrict": [56, 449], "write_restrict": [56, 449], "readonli": [56, 237, 314, 320, 324, 353, 385, 386, 443, 449], "py_": [56, 59, 436], "delattr": [56, 214, 415, 425], "py_t_byt": 56, "py_t_short": 56, "py_t_int": [56, 73, 74, 449], "py_t_long": 56, "py_t_longlong": 56, "py_t_ubyt": 56, "py_t_uint": 56, "py_t_ushort": 56, "py_t_ulong": 56, "py_t_ulonglong": 56, "py_t_float": 56, "py_t_doubl": [56, 73, 449], "py_t_bool": 56, "ro": [56, 83, 320], "py_t_string_inplac": 56, "py_t_char": 56, "py_t_string_inlin": 56, "t_int": [56, 449], "surpris": [56, 76, 82, 83, 86, 99, 103, 172, 175, 182, 214, 225, 236, 255, 262, 269, 290, 323, 337, 338, 347, 400, 407, 415, 419, 438, 439, 442, 446, 449, 454, 456], "t_none": [56, 449], "properti": [56, 61, 76, 83, 85, 92, 93, 96, 98, 102, 104, 111, 116, 143, 148, 150, 160, 164, 165, 166, 170, 175, 182, 184, 185, 192, 194, 197, 200, 208, 210, 214, 215, 219, 224, 225, 230, 239, 243, 245, 246, 247, 250, 254, 259, 269, 273, 286, 313, 317, 321, 323, 324, 326, 327, 331, 338, 343, 355, 359, 361, 362, 363, 364, 365, 366, 372, 378, 381, 385, 386, 389, 390, 391, 397, 401, 402, 403, 410, 411, 415, 417, 425, 426, 436, 437, 439, 440, 441, 442, 444, 448, 449, 451, 452, 453, 454, 455, 456, 457], "tp_getset": [56, 61, 73, 74], "pathlik": [57, 62, 85, 153, 214, 277, 278, 279, 324, 366, 400, 455], "__fspath__": [57, 277, 279, 340, 366, 403, 455], "py_fdisinteract": 57, "deem": [57, 85, 116, 196, 219, 257, 324, 383, 401, 437, 438, 442, 444, 449, 450, 451, 452, 453], "isatti": [57, 214, 246, 277, 331, 421], "clone": [57, 190, 194, 197, 219, 224, 226, 269, 277, 317, 353, 361, 385, 409, 435, 452, 457], "register_at_fork": [57, 277, 450, 456], "reliabl": [57, 103, 118, 120, 126, 127, 133, 148, 151, 175, 177, 239, 269, 278, 285, 315, 328, 379, 390, 399, 402, 407, 415, 419, 427, 436, 440, 444, 447, 451, 452, 453, 454, 455, 456], "microsoft": [57, 75, 84, 148, 157, 165, 277, 331, 374, 375, 383, 410, 423, 431, 439, 440, 442, 443, 448, 454], "visual": [57, 75, 76, 83, 90, 101, 301, 321, 361, 388, 416, 430, 431, 436, 437, 440, 443, 454], "sigact": 57, "dc80": [57, 105, 148, 214], "dcff": [57, 105, 148, 214], "surrog": [57, 62, 148, 214, 250, 277, 326, 337, 385, 452, 453, 457], "error_po": 57, "0x80": [57, 105, 167, 324], "0xff": [57, 148, 214, 324], "1000": [57, 83, 95, 99, 105, 142, 166, 172, 210, 236, 247, 249, 262, 269, 270, 302, 311, 324, 325, 331, 347, 359, 361, 401, 415, 416, 419, 421, 424, 425, 437, 442, 443, 444, 451, 452, 457], "hundr": [57, 78, 99, 182, 224, 242, 429], "pysys_audit": [57, 95, 135, 331], "apart": [57, 74, 93, 98, 102, 116, 157, 179, 262, 269, 276, 284, 323, 405, 410, 436, 440, 444, 446], "unavoid": [57, 93, 172, 441, 444, 446], "pysys_addaudithook": [57, 135, 331], "py_audithookfunct": 57, "578": [57, 135, 331, 442, 443], "addaudithook": [57, 135, 331, 425], "kill": [57, 82, 103, 110, 124, 127, 131, 134, 135, 156, 166, 236, 245, 269, 277, 315, 328, 340, 378, 383, 397, 443, 444, 445, 451, 456], "120": [57, 70, 93, 145, 182, 215, 249, 331, 361, 444, 455, 457], "pytuple_check": [58, 77], "pytuple_checkexact": 58, "oo": [58, 76, 165, 331, 340, 425, 430, 446, 454], "pytuple_get_s": 58, "pytuple_get_item": 58, "pytuple_set_item": [58, 447, 450], "_pytuple_res": [58, 439], "shrink": [58, 173, 441], "client": [58, 66, 71, 82, 91, 98, 99, 103, 106, 118, 120, 124, 135, 137, 148, 157, 160, 183, 185, 230, 233, 234, 239, 242, 244, 246, 247, 255, 257, 272, 277, 282, 310, 311, 318, 319, 320, 340, 343, 361, 363, 371, 372, 383, 384, 385, 392, 395, 401, 415, 416, 426, 439, 441, 443, 449, 452, 457], "namedtupl": [58, 85, 92, 140, 161, 282, 284, 285, 301, 311, 320, 324, 327, 331, 359, 362, 363, 377, 417, 443, 444, 446, 447, 448, 449, 450, 453, 454, 455, 456, 457, 458], "desc": [58, 91, 320, 446], "pystructsequence_inittyp": [58, 453], "pystructsequence_inittype2": [58, 453], "meta": [58, 85, 88, 116, 166, 167, 209, 220, 238, 239, 276, 331, 372, 403, 439, 449, 452, 453, 455], "n_in_sequ": 58, "pystructsequence_get_item": 58, "pystructsequence_set_item": 58, "pytype_check": [59, 71], "pytype_checkexact": 59, "primarili": [59, 72, 76, 83, 96, 98, 133, 148, 150, 172, 183, 195, 214, 215, 240, 243, 255, 282, 286, 324, 328, 331, 363, 365, 376, 383, 386, 402, 404, 436, 438, 439, 441, 443, 444, 448, 452, 454, 456, 458], "pytype_getdict": [59, 61], "proxi": [59, 65, 157, 160, 202, 214, 215, 231, 237, 245, 321, 324, 362, 365, 372, 378, 385, 394, 401, 403, 438, 443, 449, 451, 452, 454, 455, 457], "tp_dict": [59, 61, 73, 443], "adequ": [59, 61, 74, 83, 202, 419, 444, 452], "pytype_addwatch": [59, 449], "pytype_watchcallback": 59, "pytype_watch": [59, 449], "pytype_clearwatch": 59, "_pytype_lookup": [59, 91, 447], "pytype_hasfeatur": [59, 61], "pytype_is_gc": 59, "issubclass": [59, 76, 85, 111, 151, 214, 324, 362, 363, 376, 403, 415, 425, 437, 443, 447, 456], "nitem": [59, 61], "tp_alloc": [59, 61, 73, 74], "kwd": [59, 61, 73, 74, 91, 131, 137, 159, 164, 192, 200, 214, 215, 243, 269, 280, 300, 325, 340, 357, 362, 365, 403, 406, 416, 442, 457], "qualifi": [59, 85, 91, 180, 182, 186, 238, 243, 256, 257, 282, 285, 317, 318, 324, 328, 363, 365, 374, 376, 388, 391, 398, 403, 407, 411, 430, 436, 442, 448, 454, 457], "pytype_getmodulebydef": [59, 88, 97, 448], "shortcut": [59, 103, 150, 182, 224, 236, 301, 303, 324, 337, 362, 365, 403, 436, 441, 443, 456], "nb_add": [59, 61, 97], "pyunstable_type_assignversiontag": 59, "metaclass": [59, 85, 91, 92, 111, 116, 165, 200, 214, 215, 243, 324, 362, 363, 402, 443, 445, 448, 449, 451, 453, 454, 455, 456, 457], "py_tpflags_heaptyp": [59, 61, 97, 447, 458], "py_tp_bas": [59, 61], "pytype_from": [59, 449], "__init_subclass__": [59, 200, 214, 403, 448, 455], "__set_name__": [59, 91, 170, 403, 449, 455], "tp_doc": [59, 61, 73, 74, 447], "overlap": [59, 62, 90, 102, 151, 156, 166, 179, 214, 247, 249, 268, 276, 279, 301, 323, 324, 350, 361, 411, 415, 438, 439], "mistak": [59, 71, 92, 101, 102, 103, 114, 119, 200, 202, 255, 259, 276, 324, 344, 347, 431, 441, 442, 444, 446, 447, 448, 449], "pynumbermethod": [59, 61, 73, 439, 442], "pysequencemethod": [59, 61, 73], "pymappingmethod": [59, 61, 73], "pyasyncmethod": [59, 61, 73], "py_tp_dealloc": 59, "py_nb_add": 59, "py_sq_length": 59, "sq_length": [59, 61], "tp_mro": [59, 61, 73], "tp_cach": [59, 61, 73], "tp_subclass": [59, 61, 73, 449], "tp_weaklist": [59, 61, 73, 449], "tp_vectorcal": [59, 61, 73], "unlimit": [59, 120, 131, 191, 192, 197, 224, 236, 269, 302, 304, 324, 328, 343, 403, 410], "bf_getbuff": [59, 61, 448], "pfunc": [59, 70], "py_tp_doc": 59, "genericalia": [60, 362, 363, 403, 405, 447, 458], "union": [60, 86, 150, 151, 200, 214, 215, 221, 240, 315, 322, 326, 362, 363, 401, 403, 417, 440, 441, 443, 444, 448, 449, 450, 454, 458], "__origin__": [60, 324], "__args__": [60, 324, 447, 458], "__parameters__": [60, 324, 363], "lazili": [60, 86, 156, 205, 232, 249, 324, 363, 365, 366, 402, 404, 405, 447, 448, 453], "my_obj_method": 60, "__class_getitem__": [60, 324, 363, 405, 448, 456], "585": [60, 85, 151, 324, 362, 363, 448, 458], "pytype_": 61, "fairli": [61, 82, 85, 90, 94, 99, 103, 105, 182, 193, 197, 285, 290, 312, 385, 386, 421, 431, 437, 439, 440, 442, 443], "examin": [61, 70, 83, 86, 98, 105, 108, 170, 216, 243, 277, 280, 283, 290, 313, 314, 315, 317, 324, 331, 340, 385, 414, 438, 440, 442, 443, 447, 452], "glanc": [61, 99, 415, 440], "insight": 61, "tp_getattr": [61, 73], "tp_setattr": [61, 73], "__setattr__": [61, 73, 78, 83, 91, 135, 170, 282, 366, 403, 411, 439], "__delattr__": [61, 73, 78, 91, 135, 170, 403], "tp_as_async": [61, 73, 454], "__repr__": [61, 78, 91, 92, 104, 150, 170, 172, 184, 200, 214, 243, 269, 272, 289, 303, 320, 362, 363, 366, 394, 400, 403, 427, 439, 440, 447, 448, 451, 456, 457], "tp_as_sequ": [61, 73], "tp_as_map": [61, 73], "tp_str": [61, 73], "__str__": [61, 78, 92, 98, 99, 150, 172, 184, 185, 190, 191, 192, 194, 200, 243, 255, 269, 324, 325, 362, 366, 400, 403, 418, 439, 447, 448, 457], "tp_as_buff": [61, 73, 458], "tp_richcompar": [61, 73], "__lt__": [61, 73, 78, 92, 104, 140, 151, 158, 170, 214, 215, 275, 324, 362, 366, 403, 405, 438, 444, 445, 451], "__le__": [61, 78, 92, 151, 170, 215, 275, 324, 366, 403, 438, 444, 451], "__ne__": [61, 78, 151, 184, 191, 275, 366, 394, 403, 438, 448], "__gt__": [61, 78, 92, 104, 151, 170, 214, 215, 275, 324, 366, 403, 438, 444, 451], "__ge__": [61, 78, 92, 151, 170, 215, 275, 324, 366, 403, 438, 444, 451], "tp_iter": [61, 73, 324, 439], "__iter__": [61, 73, 78, 85, 92, 99, 111, 151, 200, 214, 246, 249, 259, 269, 324, 363, 365, 366, 367, 397, 402, 403, 405, 415, 439, 440, 443, 453, 455, 458], "tp_iternext": [61, 73, 324, 439], "__next__": [61, 73, 85, 93, 151, 156, 164, 180, 202, 214, 246, 249, 269, 324, 397, 403, 405, 415, 445], "tp_method": [61, 73, 74], "tp_base": [61, 73, 74], "__base__": 61, "tp_descr_get": [61, 73], "__get__": [61, 85, 91, 170, 215, 243, 366, 403, 439, 455], "tp_descr_set": [61, 73], "__set__": [61, 85, 91, 170, 243, 366, 403, 439, 455], "__delete__": [61, 85, 91, 243, 366, 403, 439], "tp_free": [61, 73, 74, 97], "tp_is_gc": [61, 73], "__subclasses__": [61, 324, 366, 449], "tp_del": [61, 73, 216], "tp_version_tag": [61, 73], "tp_final": [61, 73, 454, 457], "tp_watch": [61, 73], "angl": [61, 102, 137, 144, 148, 198, 214, 262, 300, 361, 443, 444], "am_await": 61, "__await__": [61, 85, 151, 180, 362, 403, 454], "am_ait": 61, "__aiter__": [61, 85, 151, 180, 214, 366, 367, 402, 403, 454, 455, 456], "am_anext": 61, "__anext__": [61, 85, 151, 180, 202, 214, 366, 402, 403, 405], "am_send": 61, "sendfunc": 61, "__add__": [61, 78, 92, 97, 150, 158, 243, 273, 275, 366, 403, 405], "__radd__": [61, 273, 403, 405], "nb_inplace_add": 61, "__iadd__": [61, 78, 83, 151, 275, 403, 437], "nb_subtract": 61, "__sub__": [61, 151, 275, 366, 403, 405], "__rsub__": [61, 158, 403], "nb_inplace_subtract": 61, "__isub__": [61, 151, 275, 403, 437], "nb_multipli": 61, "__mul__": [61, 78, 150, 275, 366, 403, 405], "__rmul__": [61, 78, 403, 405], "nb_inplace_multipli": 61, "__imul__": [61, 78, 150, 158, 275, 403], "nb_remaind": 61, "__mod__": [61, 101, 275, 366, 403, 405, 447], "__rmod__": [61, 150, 403, 447, 454], "nb_inplace_remaind": 61, "__imod__": [61, 275, 403], "nb_divmod": 61, "__divmod__": [61, 366, 403, 447, 454], "__rdivmod__": [61, 403, 447], "nb_power": 61, "__pow__": [61, 275, 366, 403, 405, 447], "__rpow__": [61, 403, 447], "nb_inplace_pow": 61, "__ipow__": [61, 275, 403, 447], "nb_neg": 61, "__neg__": [61, 275, 366, 403, 405], "nb_posit": 61, "__pos__": [61, 275, 366, 403, 405], "nb_absolut": 61, "__abs__": [61, 214, 275, 363, 403], "nb_bool": [61, 445], "__bool__": [61, 92, 200, 221, 275, 324, 345, 366, 381, 403, 405, 445], "nb_invert": 61, "__invert__": [61, 200, 275, 366, 403, 405], "nb_lshift": 61, "__lshift__": [61, 275, 366, 403, 405], "__rlshift__": [61, 403], "nb_inplace_lshift": 61, "__ilshift__": [61, 275, 403], "nb_rshift": 61, "__rshift__": [61, 275, 366, 403, 405], "__rrshift__": [61, 403], "nb_inplace_rshift": 61, "__irshift__": [61, 275, 403], "nb_and": 61, "__and__": [61, 151, 200, 275, 366, 403, 405], "__rand__": [61, 403, 405], "nb_inplace_and": 61, "__iand__": [61, 151, 158, 275, 403], "nb_xor": 61, "__xor__": [61, 151, 200, 275, 366, 403, 405], "__rxor__": [61, 403, 405], "nb_inplace_xor": 61, "__ixor__": [61, 151, 275, 403], "nb_or": 61, "__or__": [61, 151, 200, 275, 324, 366, 403, 405], "__ror__": [61, 403, 405], "nb_inplace_or": 61, "__ior__": [61, 151, 275, 403], "nb_int": 61, "nb_reserv": 61, "nb_float": 61, "nb_floor_divid": 61, "__floordiv__": [61, 101, 275, 366, 403, 405, 439, 447], "nb_inplace_floor_divid": 61, "__ifloordiv__": [61, 275, 403], "nb_true_divid": 61, "__truediv__": [61, 101, 238, 241, 275, 366, 403, 405, 439, 454], "nb_inplace_true_divid": 61, "__itruediv__": [61, 275, 403], "nb_matrix_multipli": 61, "__matmul__": [61, 275, 366, 403, 454], "__rmatmul__": [61, 403, 454], "nb_inplace_matrix_multipli": 61, "__imatmul__": [61, 275, 403, 454], "mp_length": 61, "__len__": [61, 78, 85, 111, 151, 185, 194, 200, 214, 259, 269, 275, 324, 363, 366, 385, 388, 402, 403, 440, 441, 457], "mp_subscript": 61, "mp_ass_subscript": 61, "__setitem__": [61, 78, 150, 151, 180, 185, 194, 197, 259, 269, 275, 282, 366, 367, 383, 385, 388, 403, 411, 440, 445], "__delitem__": [61, 78, 150, 151, 185, 194, 259, 275, 366, 383, 385, 388, 403, 440, 445], "sq_concat": 61, "sq_repeat": 61, "sq_item": 61, "sq_ass_item": 61, "sq_inplace_concat": 61, "sq_inplace_repeat": 61, "_typeobject": [61, 73], "formerli": [61, 73, 128, 150, 151, 156, 214, 233, 243, 262, 269, 298, 300, 323, 344, 446, 447, 449, 451, 452, 455, 456, 457, 458], "tp_compar": [61, 73], "tp_reserv": [61, 73, 454], "rich": [61, 62, 73, 82, 150, 186, 214, 215, 275, 347, 365, 394, 403, 405, 407, 445, 451, 456, 458], "stuff": [61, 73, 77, 88, 98, 99, 116, 159, 165, 182, 289, 366, 445], "resolut": [61, 73, 74, 76, 83, 85, 91, 97, 111, 120, 125, 172, 203, 205, 214, 215, 221, 223, 234, 243, 277, 278, 279, 282, 290, 318, 324, 344, 402, 403, 407, 415, 440, 442, 448, 452, 453, 454, 455, 457, 458], "bitset": [61, 73], "type_new": [61, 91], "metatyp": [61, 243], "But": [61, 71, 74, 76, 79, 82, 83, 87, 88, 91, 92, 93, 99, 101, 102, 103, 106, 116, 144, 182, 183, 210, 246, 254, 259, 276, 282, 321, 324, 331, 344, 372, 381, 415, 416, 419, 439, 440, 442, 444, 446, 447, 453], "complain": [61, 74, 76, 87, 88, 99, 159, 236, 438], "foo_typ": 61, "act": [61, 65, 73, 83, 93, 98, 101, 111, 116, 132, 137, 150, 165, 170, 172, 180, 185, 190, 194, 197, 214, 215, 233, 237, 238, 241, 247, 255, 277, 279, 291, 293, 320, 321, 324, 331, 343, 361, 362, 363, 366, 401, 403, 410, 416, 424, 436, 437, 438, 443, 447, 452, 453, 457, 458], "pickl": [61, 66, 74, 82, 88, 98, 99, 135, 146, 148, 150, 161, 165, 172, 175, 215, 242, 250, 252, 255, 256, 257, 261, 269, 270, 281, 309, 312, 327, 356, 363, 366, 421, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 456], "pydoc": [61, 66, 74, 82, 146, 176, 214, 242, 395, 438, 439, 440, 441, 444, 446, 450, 454], "meaning": [61, 102, 182, 187, 224, 238, 243, 247, 256, 259, 269, 277, 296, 301, 318, 321, 323, 331, 362, 372, 374, 403, 409, 411, 445, 451, 453, 454], "whichev": [61, 71, 73, 109, 172, 255, 327, 365, 428, 436, 452, 454], "_ob_prev": 61, "_ob_next": 61, "align": [61, 143, 325, 340, 353, 361, 421, 443, 444, 449], "ellipsi": [61, 85, 116, 158, 182, 261, 282, 289, 354, 355, 362, 363, 406, 410, 425, 441, 445, 449, 450, 457], "py_tpflags_basetyp": [61, 74], "permiss": [61, 67, 78, 82, 83, 85, 98, 99, 106, 153, 201, 202, 205, 212, 237, 245, 272, 277, 278, 279, 293, 314, 315, 318, 320, 322, 337, 338, 363, 372, 381, 401, 413, 436, 444, 456], "foo_dealloc": [61, 457], "foo_object": 61, "tp_print": [61, 458], "inconsist": [61, 179, 202, 276, 277, 318, 366, 410, 413, 438, 449, 450, 455], "group": [61, 66, 78, 82, 85, 87, 92, 96, 98, 99, 105, 107, 118, 135, 148, 150, 159, 164, 167, 175, 179, 180, 182, 192, 200, 214, 237, 239, 242, 245, 247, 249, 254, 259, 269, 277, 279, 282, 292, 296, 301, 314, 316, 318, 321, 322, 323, 324, 325, 328, 332, 337, 343, 353, 358, 359, 363, 368, 371, 376, 381, 384, 390, 394, 403, 405, 406, 409, 410, 414, 418, 424, 427, 429, 436, 437, 441, 442, 443, 444, 445, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457], "relev": [61, 71, 73, 82, 83, 87, 88, 90, 93, 96, 98, 99, 116, 138, 157, 161, 175, 182, 183, 197, 204, 212, 214, 231, 234, 239, 250, 255, 256, 257, 276, 277, 283, 284, 288, 321, 324, 328, 334, 335, 340, 341, 365, 383, 389, 398, 400, 436, 437, 439, 441, 449, 452, 453, 454, 455, 458], "await": [61, 85, 117, 118, 120, 123, 124, 126, 127, 128, 129, 130, 131, 132, 151, 159, 160, 177, 180, 214, 243, 324, 354, 362, 363, 365, 366, 402, 404, 406, 410, 437, 440, 447, 448, 455, 456, 457, 458], "asynchron": [61, 66, 82, 85, 116, 118, 119, 120, 123, 124, 127, 129, 130, 131, 133, 151, 156, 159, 160, 180, 202, 214, 242, 248, 255, 269, 318, 321, 328, 331, 362, 365, 366, 382, 402, 411, 444, 447, 448, 449, 451, 452, 453, 454, 456, 457], "eval": [61, 83, 86, 115, 116, 137, 147, 149, 202, 214, 243, 256, 280, 282, 289, 309, 324, 358, 404, 406, 410, 411, 412, 415, 419, 425, 431, 437, 441, 443, 445, 446, 447, 448, 449, 451], "feasibl": [61, 71, 312, 447, 453], "deduc": [61, 164, 182, 269, 290, 333, 436, 451], "isinst": [61, 76, 83, 85, 86, 91, 92, 98, 99, 111, 151, 159, 170, 172, 200, 214, 238, 239, 243, 250, 273, 275, 282, 324, 362, 363, 365, 366, 367, 402, 403, 415, 425, 437, 440, 441, 443, 445, 447, 448, 449, 451, 455, 456], "among": [61, 104, 120, 165, 170, 179, 182, 216, 221, 259, 269, 270, 277, 283, 310, 331, 337, 344, 347, 365, 403, 410, 425, 434, 436, 451, 457], "mask": [61, 165, 166, 200, 277, 304, 311, 314, 315, 318, 322, 332, 335, 347, 353, 381, 403, 424, 441, 443, 451, 452, 458], "strictli": [61, 71, 92, 99, 103, 104, 105, 115, 127, 170, 172, 175, 207, 233, 250, 261, 324, 372, 402, 403, 404, 405, 407, 410, 415, 442], "xxx": [61, 98, 99, 114, 331, 407, 431, 443, 444, 446, 452, 453], "py_tpflags_default": [61, 74], "ORed": [61, 182, 204, 214, 277, 301, 347, 382], "decref": [61, 62, 431], "java": [61, 76, 78, 82, 83, 93, 99, 102, 103, 111, 214, 277, 324, 343, 385, 389, 390, 403, 409, 414, 416, 419, 437, 441, 442, 443, 445, 447, 451], "py_tpflags_readi": 61, "bitmask": [61, 120, 182, 310, 311], "py_tpflags_have_stackless_extens": 61, "py_tpflags_immutabletyp": [61, 97, 447, 448, 449, 450], "weakli": [61, 65, 73, 378, 453], "py_tpflags_long_subclass": 61, "py_tpflags_list_subclass": 61, "py_tpflags_tuple_subclass": 61, "py_tpflags_bytes_subclass": 61, "py_tpflags_unicode_subclass": 61, "py_tpflags_dict_subclass": 61, "py_tpflags_base_exc_subclass": 61, "py_tpflags_type_subclass": 61, "quickli": [61, 78, 82, 83, 84, 93, 99, 101, 102, 103, 150, 179, 202, 205, 207, 214, 257, 300, 301, 315, 331, 347, 365, 399, 414, 426, 438, 442, 446, 453], "ins": [61, 92, 93, 437, 439, 440, 441], "py_tpflags_have_fin": [61, 449, 450, 457], "py_tpflags_disallow_instanti": [61, 97, 447, 449], "py_tpflags_map": [61, 180, 402], "abc": [61, 66, 71, 76, 78, 83, 85, 86, 88, 91, 93, 101, 102, 105, 120, 127, 130, 150, 157, 160, 165, 171, 173, 180, 215, 217, 231, 239, 240, 242, 246, 247, 249, 255, 256, 267, 269, 282, 297, 301, 303, 312, 313, 324, 325, 331, 340, 359, 362, 397, 398, 401, 402, 403, 405, 407, 410, 415, 417, 437, 439, 440, 441, 442, 443, 444, 445, 448, 449, 450, 455, 456, 457], "py_tpflags_sequ": [61, 180, 402], "634": [61, 402, 403], "py_tpflags_valid_version_tag": 61, "local_travers": 61, "_thread": [61, 66, 82, 135, 154, 242, 343, 440, 452], "localobject": [61, 88], "hand": [61, 71, 73, 76, 78, 82, 83, 85, 88, 92, 93, 101, 102, 103, 116, 123, 165, 166, 170, 175, 185, 190, 195, 202, 214, 219, 236, 245, 246, 257, 282, 287, 301, 319, 344, 347, 361, 363, 366, 402, 405, 409, 411, 414, 415, 417, 420, 421, 424, 425, 426, 427, 437, 438, 439, 440, 442, 443, 445, 446, 452, 457], "aid": [61, 85, 100, 320, 426, 436, 440, 441, 444, 451, 452, 453], "get_refer": [61, 135, 216, 440, 447], "weakrefer": 61, "40217": [61, 458], "doubt": [61, 82, 90, 157, 172, 442], "prove": [61, 85, 93, 165, 249, 321, 402, 440, 445, 446], "compos": [61, 85, 111, 189, 190, 191, 192, 197, 277, 317, 334, 335, 359, 363, 364, 410, 452], "local_clear": 61, "trash": [61, 259], "reclam": 61, "weakref": [61, 66, 73, 83, 85, 170, 171, 202, 242, 269, 298, 324, 340, 427, 438, 439, 441, 442, 444, 448, 449], "eas": [61, 76, 119, 312, 324, 343, 365, 411, 437, 452, 454, 456], "py_return_richcompar": [61, 456], "val_a": 61, "val_b": 61, "pyweakref_": 61, "implicit": [61, 71, 83, 99, 109, 114, 133, 170, 179, 202, 214, 226, 238, 243, 246, 280, 296, 301, 318, 320, 327, 338, 367, 378, 403, 407, 430, 444, 445, 450, 451, 453, 454, 455, 456, 457], "unari": [61, 116, 150, 175, 180, 324, 366, 403, 410, 452], "obvious": [61, 71, 88, 99, 102, 157, 255, 276, 366, 415, 437], "overload": [61, 120, 215, 363, 372, 394, 403, 405, 438, 439, 448, 453], "reiniti": 61, "unrel": [61, 71, 83, 92, 111, 143, 202, 259, 318, 448], "defer": [61, 71, 98, 120, 150, 182, 221, 246, 257, 265, 320, 321, 335, 431, 438, 443, 449], "presum": [61, 98, 151, 164, 172, 259, 269, 327, 328, 371, 405, 439, 444, 445], "mixtur": [61, 192, 406, 410, 415, 448, 454], "themselv": [61, 71, 73, 76, 83, 84, 85, 88, 96, 98, 102, 107, 144, 148, 157, 161, 164, 165, 183, 197, 200, 219, 249, 250, 261, 262, 269, 280, 282, 301, 314, 320, 324, 340, 342, 363, 365, 366, 367, 386, 394, 403, 405, 407, 415, 417, 439, 442, 443, 444, 449, 451, 453, 454, 456], "fresh": [61, 85, 88, 93, 148, 156, 159, 269, 289, 306, 340, 407, 435, 436, 439, 440], "_pyobject_get_weakrefs_listptr": [61, 449], "sane": [61, 166, 172, 301], "trivial": [61, 70, 71, 73, 76, 82, 93, 106, 131, 183, 189, 197, 223, 269, 282, 301, 331, 367, 383, 415, 426, 440, 452, 453], "local_fin": 61, "error_typ": 61, "error_valu": 61, "error_traceback": 61, "442": [61, 73, 216, 458], "tradition": [61, 91, 97, 290, 440, 456], "ternari": [61, 403, 405], "operand": [61, 87, 116, 148, 150, 172, 180, 182, 202, 214, 255, 275, 324, 403, 405, 411, 418, 424, 439, 444, 445, 451, 452], "nb_long": 61, "augment": [61, 83, 114, 116, 182, 256, 263, 313, 403, 406, 410, 430, 451], "root": [61, 85, 86, 91, 98, 99, 107, 109, 135, 144, 150, 165, 175, 190, 194, 195, 196, 199, 220, 224, 225, 236, 237, 240, 249, 255, 256, 262, 269, 273, 277, 278, 279, 284, 286, 296, 314, 321, 322, 323, 328, 331, 337, 340, 344, 347, 349, 350, 353, 363, 365, 385, 388, 390, 396, 397, 398, 403, 427, 430, 431, 435, 437, 440, 441, 442, 443, 444, 445, 447, 448, 449, 451, 452, 453, 454, 457, 458], "react": [61, 90, 347, 437, 443], "shape": [61, 92, 214, 270, 300, 324, 363, 443, 447, 448, 452], "stride": [61, 243, 324, 403, 405, 440, 452], "suboffset": [61, 324, 452], "demonstr": [61, 71, 73, 87, 90, 92, 99, 102, 103, 109, 111, 114, 134, 142, 165, 175, 231, 233, 236, 265, 269, 270, 276, 289, 301, 302, 323, 327, 347, 357, 358, 361, 365, 373, 388, 400, 405, 415, 416, 417, 424, 426, 436, 438, 451], "tricki": [61, 83, 85, 88, 92, 140, 147, 276, 347, 416, 437, 438, 445], "tutori": [61, 66, 68, 72, 76, 90, 94, 99, 102, 103, 106, 109, 150, 152, 166, 182, 200, 202, 214, 215, 236, 255, 256, 257, 300, 318, 324, 346, 347, 383, 402, 408, 409, 414, 416, 424, 428, 429, 434, 439, 441, 442, 443, 447, 451], "assort": [61, 66, 72, 182], "topic": [61, 66, 70, 72, 74, 77, 78, 82, 87, 88, 90, 94, 102, 145, 182, 200, 214, 255, 276, 289, 295, 318, 437, 440, 446], "myobject": [61, 73], "myobject_typ": 61, "mymod": [61, 88], "my": [61, 66, 71, 76, 78, 80, 92, 93, 99, 103, 106, 150, 182, 219, 225, 237, 256, 279, 321, 324, 325, 340, 347, 421, 437, 439, 440, 441, 442, 449], "myobj_new": 61, "myobj_dealloc": 61, "myobj_repr": 61, "myobj_travers": 61, "myobj_clear": 61, "myobj_hash": 61, "mystr": 61, "mystr_typ": 61, "393": [62, 148, 331, 447, 458], "65536": [62, 424], "1114112": [62, 148], "623": [62, 300, 447, 449], "py_ucs2": [62, 452], "py_ucs1": [62, 452], "narrow": [62, 300, 301, 318, 323, 324, 363, 431, 439, 447, 451, 452], "pyasciiobject": [62, 452], "pycompactunicodeobject": [62, 452], "pyunicode_check": [62, 74], "pyunicode_checkexact": 62, "pyunicode_readi": [62, 448, 449, 450, 452], "pyunicode_get_length": [62, 447, 452], "canon": [62, 83, 85, 92, 137, 157, 172, 175, 184, 200, 224, 226, 276, 278, 279, 318, 326, 364, 388, 400, 405, 444, 448, 454], "pyunicode_1byte_data": [62, 452], "pyunicode_2byte_data": [62, 452], "pyunicode_4byte_data": [62, 452], "ucs1": 62, "ucs2": 62, "ucs4": [62, 439], "pyunicode_kind": [62, 452], "pyunicode_1byte_kind": [62, 452], "pyunicode_2byte_kind": [62, 452], "pyunicode_4byte_kind": [62, 452], "pyunicode_wchar_kind": [62, 448, 449, 452], "pyunicod": 62, "pyunicode_data": [62, 452], "pyunicode_writ": [62, 452], "saniti": [62, 431, 453], "pyunicode_read": [62, 452], "pyunicode_read_char": [62, 452], "pyunicode_max_char_valu": [62, 452], "py_unicode_isspac": 62, "ch": [62, 88, 90, 98, 99, 148, 166, 179, 372, 437], "py_unicode_islow": 62, "lowercas": [62, 102, 105, 136, 145, 148, 157, 175, 185, 194, 214, 224, 226, 237, 247, 278, 287, 301, 308, 324, 325, 331, 342, 372, 374, 410, 445], "py_unicode_isupp": 62, "uppercas": [62, 83, 88, 91, 105, 114, 141, 167, 214, 237, 247, 276, 277, 308, 324, 325, 372, 410, 437, 444, 445, 449, 453, 455], "py_unicode_istitl": 62, "titlecas": [62, 324, 410], "py_unicode_islinebreak": 62, "linebreak": 62, "py_unicode_isdecim": [62, 451], "py_unicode_isdigit": 62, "py_unicode_isnumer": 62, "py_unicode_isalpha": 62, "alphabet": [62, 83, 87, 104, 136, 139, 167, 175, 185, 188, 214, 250, 255, 256, 259, 285, 290, 308, 316, 324, 362, 436, 440, 441, 442, 443, 444, 447, 453, 454, 455, 456, 457], "py_unicode_isalnum": 62, "alphanumer": [62, 102, 167, 182, 238, 256, 282, 301, 308, 313, 324, 325, 344, 427, 440], "py_unicode_isprint": 62, "printabl": [62, 66, 136, 139, 148, 166, 167, 184, 185, 186, 187, 191, 192, 197, 214, 242, 268, 271, 324, 325, 326, 403, 438, 445, 451], "nonprint": [62, 299, 324], "databas": [62, 66, 70, 91, 102, 105, 117, 135, 148, 164, 166, 170, 172, 198, 214, 218, 232, 242, 249, 254, 263, 279, 281, 282, 290, 312, 324, 326, 341, 343, 344, 347, 353, 365, 368, 372, 400, 407, 410, 414, 418, 426, 427, 438, 439, 440, 442, 443, 444, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "0x20": [62, 136, 324, 403], "py_unicode_tolow": [62, 451], "py_unicode_toupp": 62, "upper": [62, 83, 90, 92, 93, 98, 99, 102, 116, 139, 141, 150, 166, 179, 237, 269, 301, 318, 319, 320, 321, 324, 325, 361, 365, 403, 405, 406, 411, 424, 440, 451, 457], "py_unicode_totitl": 62, "py_unicode_todecim": 62, "py_unicode_todigit": 62, "py_unicode_tonumer": 62, "py_unicode_is_surrog": 62, "0xd800": 62, "0xdfff": 62, "py_unicode_is_high_surrog": 62, "0xdbff": 62, "py_unicode_is_low_surrog": 62, "0xdc00": 62, "py_unicode_join_surrog": 62, "join": [62, 75, 77, 78, 83, 93, 99, 103, 109, 114, 120, 128, 130, 144, 148, 150, 156, 164, 175, 179, 189, 191, 192, 197, 214, 231, 232, 233, 236, 247, 249, 256, 258, 266, 269, 270, 277, 278, 279, 284, 298, 301, 302, 303, 308, 313, 314, 317, 318, 319, 322, 324, 325, 340, 342, 343, 345, 362, 363, 366, 371, 375, 383, 385, 386, 388, 397, 400, 416, 424, 427, 437, 441, 442, 443, 449, 451, 452, 453, 454, 455, 456, 457], "pyunicode_new": [62, 447, 452], "maxchar": 62, "nearest": [62, 85, 172, 175, 210, 214, 262, 273, 300, 323, 331, 377, 404, 411, 415, 419, 427, 445, 446], "65535": [62, 397, 439], "1114111": [62, 331, 452], "pyunicode_fromkindanddata": [62, 452], "transform": [62, 85, 91, 92, 93, 99, 101, 103, 104, 105, 116, 133, 140, 157, 164, 172, 175, 182, 185, 186, 190, 194, 197, 200, 202, 214, 215, 225, 243, 254, 255, 259, 282, 324, 355, 361, 362, 363, 388, 401, 402, 403, 405, 418, 424, 429, 437, 438, 443, 445, 453, 454, 456], "codepoint": [62, 236], "width": [62, 73, 83, 90, 102, 114, 143, 148, 150, 165, 166, 170, 172, 175, 214, 236, 276, 277, 289, 301, 323, 324, 325, 331, 342, 344, 347, 350, 353, 358, 361, 363, 364, 377, 403, 410, 421, 424, 427, 437, 440, 442, 443, 444, 449, 451, 453, 455, 457], "asterisk": [62, 116, 237, 292, 324, 363, 382, 388, 402, 405, 411, 417, 456], "pad": [62, 82, 116, 136, 139, 166, 172, 175, 185, 188, 214, 223, 224, 247, 270, 318, 324, 325, 327, 344, 347, 353, 372, 421, 437, 440, 443, 444, 451, 455], "ll": [62, 71, 73, 74, 79, 81, 82, 83, 84, 86, 87, 88, 90, 91, 92, 93, 96, 98, 99, 102, 103, 105, 106, 168, 182, 189, 225, 257, 273, 276, 280, 300, 301, 313, 320, 321, 324, 347, 361, 367, 388, 407, 409, 410, 414, 415, 417, 419, 421, 423, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 449, 451, 457, 458], "intmax_t": [62, 449], "uintmax_t": 62, "ssize_t": [62, 88, 165, 327, 451, 452], "ptrdiff_t": [62, 449], "octal": [62, 102, 173, 214, 247, 276, 277, 301, 324, 325, 410, 437, 438, 440, 441, 443, 445, 448, 449, 451, 457, 458], "hexadecim": [62, 97, 102, 139, 148, 167, 214, 224, 226, 229, 247, 276, 301, 308, 324, 325, 331, 374, 410, 419, 437, 441, 443, 448, 449, 451, 452, 453], "formatt": [62, 114, 256, 257, 276, 325, 440, 444, 447, 451, 453, 454, 456], "lld": [62, 431, 444], "llu": [62, 444], "li": [62, 144, 172, 231, 324, 363, 386, 403, 447, 454, 456], "lli": 62, "zi": 62, "ing": [62, 77, 102, 103, 182, 232, 444, 448, 452, 456], "pyunicode_copycharact": [62, 447, 448, 452], "to_start": 62, "from_start": 62, "how_mani": 62, "memcpi": [62, 448], "pyunicode_fil": [62, 448, 452], "fill_char": 62, "bigger": [62, 91, 262, 314, 324, 337, 436, 457], "contrast": [62, 85, 104, 150, 175, 215, 236, 290, 321, 324, 327, 347, 363, 387, 403, 404, 405, 407, 426, 439, 452, 455, 456], "substr": [62, 76, 88, 93, 102, 105, 157, 182, 224, 226, 276, 278, 301, 324, 365, 405, 424, 437, 439, 440, 441, 442, 443, 447, 452, 454, 456], "buflen": [62, 318], "copy_nul": 62, "383": [62, 148, 318], "strlen": [62, 77, 103, 105], "parsetupl": 62, "wcslen": 62, "deviat": [62, 101, 300, 323, 328, 345, 371, 451, 452, 453], "pyunicode_asutf8": [62, 452, 456], "byteord": [62, 324, 327, 331, 425], "bom": [62, 105, 250, 355], "divis": [62, 64, 83, 85, 99, 108, 116, 172, 175, 202, 214, 275, 280, 284, 315, 320, 323, 324, 403, 404, 405, 411, 418, 424, 440, 441, 443, 444, 448, 451, 458], "ufeff": 62, "ufff": 62, "odd": [62, 76, 90, 93, 175, 224, 290, 323, 328, 338, 410, 416, 424, 437, 440, 441, 442, 444], "ordin": [62, 92, 105, 148, 165, 166, 167, 172, 323, 324, 361, 452, 454], "unmap": [62, 353], "0xfffe": [62, 148], "dbc": [62, 148], "code_pag": [62, 452], "cp_acp": [62, 148, 452, 455], "sep": [62, 83, 93, 139, 172, 175, 214, 220, 233, 236, 277, 279, 321, 324, 325, 337, 383, 402, 416, 439, 442, 443, 444, 445, 448], "maxsplit": [62, 102, 301, 324, 450], "keepend": [62, 148, 179, 189, 324], "crlf": [62, 212, 233, 234, 456], "tail": [62, 92, 150, 179, 249, 278, 316, 388, 442, 449, 452, 455], "replstr": 62, "maxcount": 62, "uni": 62, "iso": [62, 143, 148, 172, 179, 184, 185, 191, 194, 228, 231, 254, 296, 318, 320, 331, 344, 374, 383, 392, 394, 437, 441, 448, 451, 454, 455, 457], "8859": [62, 105, 148, 179, 184, 185, 191, 194, 231, 296, 383, 392, 437, 451, 454], "accordingli": [62, 74, 87, 90, 93, 96, 140, 159, 207, 214, 215, 246, 249, 300, 324, 371, 372, 377, 403, 405, 407, 430, 439, 443, 451, 452, 453, 455, 456], "clarif": [62, 407], "lot": [62, 71, 73, 75, 76, 77, 78, 82, 83, 87, 88, 98, 102, 103, 105, 106, 159, 160, 165, 173, 182, 189, 223, 234, 247, 255, 269, 276, 286, 290, 312, 319, 328, 352, 359, 366, 375, 384, 414, 415, 429, 437, 438, 439, 440, 441, 443, 444, 445, 453, 458], "neutral": [62, 71, 96, 242, 453], "grammar": [64, 66, 93, 147, 214, 325, 354, 402, 408, 409, 410, 412, 437, 438, 442, 445, 447, 449, 458], "py_eval_input": [64, 77, 406], "py_file_input": [64, 406, 447], "py_single_input": [64, 406], "incompat": [64, 85, 88, 101, 108, 156, 165, 173, 200, 202, 243, 247, 255, 259, 261, 277, 282, 363, 399, 411, 437, 440, 442, 445, 449, 451, 452, 454, 456, 457, 458], "pyrun_anyfil": 64, "pyrun_anyfileexflag": 64, "closeit": 64, "pyrun_anyfileflag": 64, "pycompilerflag": [64, 457], "pyrun_anyfileex": 64, "devic": [64, 85, 96, 125, 148, 166, 167, 201, 214, 225, 236, 246, 257, 277, 278, 279, 310, 311, 314, 315, 318, 322, 328, 331, 337, 381, 388, 412, 423, 430, 437, 443], "pseudo": [64, 66, 88, 92, 114, 165, 170, 180, 185, 242, 261, 272, 274, 277, 284, 304, 308, 321, 324, 331, 368, 407, 439, 440, 443, 449, 452, 455], "pyrun_interactiveloop": [64, 77], "pyrun_simplefil": [64, 70], "pyrun_simplefileexflag": 64, "pyrun_simplestringflag": 64, "pyrun_simplefileex": 64, "fopen": [64, 179, 452], "rb": [64, 82, 85, 99, 101, 120, 142, 150, 189, 197, 207, 214, 223, 224, 238, 241, 246, 258, 282, 284, 324, 355, 356, 363, 377, 383, 394, 397, 410, 421, 427, 437, 440, 447, 452], "lf": [64, 167, 197, 410], "pyrun_interactiveon": 64, "pyrun_interactiveoneflag": 64, "ps1": [64, 147, 318, 331, 375, 413, 425, 430, 457], "ps2": [64, 147, 331, 413, 425, 430], "errcod": [64, 394], "pyrun_interactiveloopflag": 64, "eof": [64, 103, 120, 124, 127, 130, 131, 142, 145, 147, 158, 182, 202, 212, 214, 246, 258, 277, 291, 310, 313, 318, 320, 321, 399, 430, 442, 447, 452], "prototyp": [64, 76, 88, 145, 175, 320, 437, 442, 444], "idl": [64, 66, 77, 78, 83, 85, 156, 164, 165, 167, 218, 242, 316, 328, 346, 347, 361, 385, 386, 388, 434, 436, 439, 440], "wait": [64, 66, 71, 83, 84, 88, 90, 99, 103, 106, 110, 114, 116, 118, 119, 120, 123, 125, 126, 127, 128, 131, 132, 156, 166, 178, 196, 197, 234, 236, 242, 243, 245, 248, 257, 268, 269, 270, 277, 298, 300, 304, 307, 311, 315, 317, 318, 319, 320, 321, 322, 328, 339, 340, 343, 348, 361, 365, 366, 372, 375, 379, 416, 424, 427, 440, 441, 442, 443, 444, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458], "_tkinter": [64, 347, 361, 440, 448, 454, 458], "pyos_readlinefunctionpoint": [64, 77, 447, 449, 453], "edit": [64, 66, 78, 88, 90, 93, 99, 102, 105, 145, 157, 166, 179, 214, 238, 239, 250, 259, 277, 278, 285, 301, 302, 323, 337, 345, 347, 353, 356, 420, 423, 427, 430, 436, 437, 438, 440, 441, 443, 445, 451, 452, 455, 456], "pyrun_str": [64, 77], "pyrun_stringflag": 64, "pyrun_fil": 64, "pyrun_fileexflag": 64, "pyrun_fileex": 64, "pyrun_fileflag": 64, "py_compilestringflag": 64, "py_compilestringexflag": 64, "py_compilestringobject": 64, "constrain": [64, 96, 115, 116, 197, 270, 363, 388, 402, 405, 407, 439, 442, 451, 457], "kwcount": 64, "defcount": 64, "kwdef": 64, "precompil": [64, 88, 306, 324, 430], "unvarnish": 64, "thrown": [64, 88, 93, 133, 172, 175, 256, 301, 439, 440, 452], "pyeval_mergecompilerflag": 64, "cf": [64, 102, 318], "arbitrarili": [64, 85, 116, 157, 159, 180, 256, 277, 300, 324, 365, 372, 405, 416, 421, 441, 447, 449, 457], "__future__": [64, 66, 85, 86, 101, 149, 202, 214, 242, 243, 251, 297, 363, 402, 403, 411, 439, 440, 442, 443, 445, 447, 448, 453, 454, 456, 458], "cf_flag": [64, 457], "cf_feature_vers": [64, 457], "pycf_only_ast": [64, 116, 442, 450, 457], "co_future_divis": [64, 458], "238": [64, 85, 108, 445], "pyweakref_check": 65, "pyweakref_checkref": 65, "pyweakref_checkproxi": 65, "notif": [65, 311, 376, 381, 390, 437, 444, 449, 457], "pobj": 65, "dead": [65, 103, 289, 378, 415, 416, 431, 440, 445, 451], "pyweakref_get_object": [65, 448, 450], "changelog": [66, 289, 444, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460], "whet": [66, 420, 439], "appetit": [66, 420, 439], "brief": [66, 78, 106, 114, 182, 194, 214, 215, 256, 276, 284, 290, 301, 304, 324, 328, 357, 401, 417, 420, 437, 439, 441, 442, 445, 451], "tour": [66, 93, 420, 439, 440, 460], "histori": [66, 67, 78, 80, 99, 105, 134, 145, 172, 214, 225, 236, 259, 280, 316, 343, 399, 420, 423, 430, 447, 453, 454, 455], "arithmet": [66, 158, 172, 202, 210, 214, 242, 262, 274, 275, 300, 301, 323, 324, 331, 394, 400, 402, 403, 406, 415, 416, 420, 424, 426, 440, 441, 442, 448, 451, 452, 454, 457], "appendix": [66, 224, 401, 420, 423], "mac": [66, 214, 224, 314, 321, 353, 374, 379, 431, 433, 445, 447, 451, 453, 455, 456], "editor": [66, 70, 76, 85, 88, 102, 105, 238, 410, 423, 424, 425, 433, 434, 437, 443, 447, 448, 449, 450, 453, 454, 455, 456, 457, 458], "lexic": [66, 211, 229, 242, 243, 279, 336, 355, 390, 403, 405, 408, 409, 456], "servic": [66, 99, 103, 106, 116, 154, 214, 235, 242, 243, 250, 255, 257, 268, 269, 270, 277, 285, 300, 303, 310, 317, 318, 319, 321, 324, 337, 344, 384, 394, 403, 412, 430, 436, 437, 441, 444, 447, 448, 452], "difflib": [66, 138, 146, 182, 205, 242, 341, 438, 439, 441, 442, 443, 444, 453], "textwrap": [66, 114, 242, 341, 427, 440, 443, 450], "unicodedata": [66, 102, 105, 242, 324, 341, 405, 410, 437, 442, 443, 444, 447, 451, 452], "stringprep": [66, 148, 242, 341, 440], "internet": [66, 78, 94, 96, 103, 136, 183, 199, 212, 224, 229, 232, 236, 242, 299, 317, 318, 319, 321, 340, 341, 344, 371, 372, 401, 416, 436, 437, 438, 440, 447, 451, 453], "gnu": [66, 70, 95, 217, 223, 242, 254, 276, 277, 312, 314, 337, 341, 401, 403, 410, 413, 422, 423, 430, 431, 435, 437, 440, 441, 443, 444, 449, 450, 454, 456, 457], "rlcomplet": [66, 109, 242, 302, 316, 341, 442, 443], "pack": [66, 99, 115, 138, 165, 204, 214, 223, 236, 242, 247, 256, 257, 259, 270, 277, 285, 318, 324, 347, 352, 353, 396, 403, 415, 417, 426, 427, 442, 444, 448, 451], "zoneinfo": [66, 171, 172, 242, 344, 431], "iana": [66, 171, 172, 230, 242, 247, 263, 296, 321, 386, 388, 458], "calendar": [66, 146, 171, 172, 242, 344, 426, 437, 440, 448, 450, 455], "datatyp": [66, 73, 83, 165, 171, 175, 242, 250, 282, 356, 427, 441, 443, 444, 446, 451], "heapq": [66, 85, 171, 214, 215, 242, 298, 300, 427, 440, 441, 442, 443], "queue": [66, 82, 98, 99, 103, 117, 120, 150, 154, 166, 171, 201, 221, 242, 249, 256, 257, 277, 300, 304, 307, 310, 318, 319, 324, 339, 343, 347, 388, 427, 437, 440, 441, 442, 443, 445, 451, 454, 457, 458], "bisect": [66, 171, 242, 427, 441], "deep": [66, 85, 99, 150, 171, 238, 242, 282, 289, 313, 331, 337, 385, 426], "pprint": [66, 91, 140, 171, 179, 242, 280, 282, 321, 427, 438, 446, 451], "pretti": [66, 74, 87, 90, 105, 116, 157, 171, 179, 238, 242, 243, 250, 257, 276, 280, 290, 355, 366, 386, 388, 394, 405, 427, 437, 438, 439, 442, 443, 445, 447, 449, 458], "printer": [66, 102, 171, 236, 242, 347, 355, 381, 427], "graphlib": [66, 171, 242], "graph": [66, 171, 242, 256, 276, 282, 323, 332, 361, 439, 453, 458], "math": [66, 85, 88, 93, 144, 150, 156, 175, 182, 201, 210, 214, 242, 249, 269, 273, 274, 300, 323, 324, 327, 331, 361, 401, 403, 405, 417, 419, 421, 426, 431, 440, 441, 443, 444, 446, 450], "cmath": [66, 85, 242, 262, 274, 324, 441, 443, 453], "fraction": [66, 71, 78, 105, 150, 172, 175, 182, 214, 215, 242, 249, 254, 262, 273, 274, 290, 300, 301, 320, 321, 323, 324, 343, 344, 361, 405, 410, 419, 424, 439, 440, 441, 442, 444, 445, 446, 447, 454, 455, 457, 458], "ration": [66, 172, 175, 242, 273, 274, 324, 403, 419, 443, 444, 445, 451], "itertool": [66, 85, 150, 213, 214, 215, 225, 236, 238, 242, 262, 266, 275, 300, 323, 440, 441, 442, 443, 444, 445, 446, 450], "functool": [66, 83, 85, 86, 91, 104, 120, 123, 140, 150, 209, 213, 214, 239, 242, 243, 249, 324, 403, 442, 443, 444, 445, 446], "pathlib": [66, 114, 135, 153, 208, 220, 238, 239, 240, 241, 242, 277, 278, 391, 397], "fileinput": [66, 146, 208, 214, 242, 277, 331, 442, 448, 451, 457], "stat": [66, 85, 105, 179, 205, 208, 223, 238, 242, 246, 257, 277, 278, 279, 287, 314, 321, 337, 359, 363, 407, 431, 439, 440, 442, 443, 447, 449, 451, 454, 455, 456, 457], "filecmp": [66, 146, 179, 208, 242, 437], "tempfil": [66, 106, 135, 189, 208, 214, 242, 269, 277, 309, 340, 372, 378, 443, 445], "glob": [66, 99, 135, 137, 182, 208, 209, 242, 278, 279, 280, 314, 328, 426, 443, 444, 448, 449, 450, 451, 455], "fnmatch": [66, 208, 220, 242, 279, 328, 359, 365], "linecach": [66, 208, 242, 359], "shutil": [66, 82, 99, 106, 113, 135, 156, 208, 214, 223, 242, 277, 279, 328, 337, 340, 378, 426, 440, 443, 444, 447, 450, 456], "persist": [66, 173, 230, 234, 236, 242, 256, 257, 261, 302, 367, 401, 426, 451, 453], "copyreg": [66, 161, 242, 266, 281, 282, 445], "shelv": [66, 82, 173, 242, 261, 281, 282, 309, 324, 437, 440, 451], "dbm": [66, 82, 242, 281, 282, 312, 403, 431, 444, 445, 457], "sqlite3": [66, 82, 91, 135, 146, 150, 242, 281, 282, 426, 431, 443, 444, 457], "sqlite": [66, 242, 281, 418, 426, 431, 442, 444, 447, 448, 449, 450, 451, 452, 453, 456], "archiv": [66, 99, 101, 109, 181, 239, 242, 259, 267, 322, 333, 340, 375, 401, 426, 429, 437, 438, 442, 443, 444, 446, 448, 449, 451, 453, 456, 457], "gzip": [66, 78, 85, 99, 113, 142, 146, 148, 189, 207, 242, 263, 314, 337, 340, 384, 401, 426, 431, 437, 440, 444, 446, 447, 453, 455], "bz2": [66, 113, 148, 165, 207, 242, 258, 279, 314, 337, 340, 397, 426, 431, 440, 444, 446, 447, 453, 458], "bzip2": [66, 113, 207, 242, 314, 337, 397, 448, 451, 452], "lzma": [66, 113, 142, 242, 314, 337, 340, 384, 397, 426, 431, 447, 453], "zipfil": [66, 113, 146, 242, 306, 309, 314, 337, 376, 396, 407, 426, 427, 430, 437, 442, 443, 444, 446], "zip": [66, 83, 85, 93, 99, 109, 113, 139, 148, 150, 156, 181, 214, 238, 239, 240, 241, 242, 249, 262, 267, 309, 314, 320, 324, 325, 333, 337, 340, 384, 407, 415, 417, 425, 427, 428, 436, 437, 441, 442, 443, 444, 445, 446, 447, 448, 451, 454, 455, 456], "tarfil": [66, 109, 113, 146, 242, 314, 426, 440, 441, 442, 443, 444, 449, 455, 456], "tar": [66, 78, 113, 242, 263, 276, 279, 314, 375, 428, 435, 437, 440, 441, 442, 443, 444, 449, 451], "csv": [66, 97, 150, 206, 242, 340, 426, 440, 442, 446, 455], "configpars": [66, 109, 206, 242, 256, 313, 437, 441, 444, 445, 446, 448, 450, 453, 456], "tomllib": [66, 157, 206, 242, 448], "toml": [66, 74, 157, 206, 242, 246, 447, 448], "netrc": [66, 206, 212, 242, 439, 453, 454], "plistlib": [66, 206, 242, 455, 456, 458], "appl": [66, 91, 165, 179, 206, 236, 242, 257, 275, 327, 417, 426, 434, 440, 443, 444, 455], "plist": [66, 206, 242, 434, 443, 453, 456, 457], "secur": [66, 83, 99, 120, 163, 165, 212, 226, 231, 232, 233, 237, 242, 257, 258, 261, 269, 272, 277, 282, 287, 296, 300, 313, 316, 317, 318, 324, 331, 337, 338, 372, 381, 383, 384, 386, 387, 388, 389, 394, 395, 399, 437, 438, 439, 440, 442, 443, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458], "digest": [66, 87, 163, 185, 193, 194, 226, 242, 269, 287, 321, 372, 442, 444, 445, 451, 452, 453, 456, 457, 458], "hmac": [66, 163, 224, 242, 257, 269, 282, 308, 318, 439, 444, 457], "authent": [66, 163, 212, 224, 230, 237, 242, 255, 257, 272, 287, 308, 317, 321, 370, 372, 394, 399, 439, 444, 451, 452, 453, 454, 455, 457, 458], "miscellan": [66, 112, 145, 180, 183, 206, 242, 271, 383], "argpars": [66, 83, 94, 99, 112, 150, 179, 189, 217, 242, 276, 291, 375, 426, 449, 450], "getopt": [66, 87, 112, 179, 242, 276, 329, 440, 444, 450], "getpass": [66, 112, 237, 242, 268, 277, 287, 339, 443], "password": [66, 99, 106, 112, 222, 224, 237, 242, 257, 269, 272, 277, 278, 287, 308, 317, 321, 339, 368, 371, 372, 394, 397, 442, 443, 444, 450, 452, 453, 454, 455], "curs": [66, 88, 94, 112, 242, 431, 437, 438, 441, 443], "textpad": [66, 90, 112, 242, 443], "widget": [66, 79, 90, 91, 99, 112, 159, 170, 178, 236, 242, 276, 346, 349, 361, 365, 437, 440, 441, 446, 450, 451, 455], "panel": [66, 81, 112, 166, 242, 382, 431, 438], "foreign": [66, 112, 157, 242, 314, 320, 337], "parallel": [66, 82, 85, 93, 97, 99, 118, 120, 123, 128, 131, 150, 153, 154, 155, 159, 196, 214, 221, 224, 242, 249, 331, 361, 365, 377, 379, 388, 418, 427, 430, 437, 444, 448, 451, 452, 453, 454, 458], "multiprocess": [66, 82, 98, 103, 119, 120, 154, 156, 236, 242, 257, 298, 309, 321, 340, 343, 374, 383, 444, 445, 449, 450], "shared_memori": [66, 154, 242, 331, 457], "launch": [66, 85, 126, 154, 155, 175, 218, 242, 269, 277, 328, 331, 340, 374, 379, 423, 434, 436, 437, 448, 451, 452, 453, 457], "sched": [66, 154, 242, 443], "synchron": [66, 110, 117, 133, 154, 159, 167, 173, 175, 201, 215, 238, 242, 246, 265, 277, 312, 315, 319, 321, 340, 343, 347, 366, 374, 403, 427, 443, 448, 449, 451, 454, 456], "network": [66, 81, 98, 103, 105, 106, 117, 118, 119, 124, 127, 130, 138, 173, 201, 236, 242, 244, 245, 257, 269, 277, 282, 285, 304, 310, 317, 321, 327, 337, 340, 371, 372, 374, 381, 384, 389, 395, 407, 418, 421, 438, 439, 440, 443, 448, 452, 454, 456, 457], "interprocess": [66, 127, 242, 269, 318], "asyncio": [66, 82, 98, 99, 109, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 146, 159, 177, 242, 248, 255, 269, 321, 328, 331, 343, 366, 367, 403, 405, 430], "runner": [66, 99, 117, 118, 182, 365, 376, 441, 444, 448], "primit": [66, 73, 82, 83, 110, 117, 118, 129, 130, 165, 166, 246, 275, 282, 290, 301, 310, 311, 315, 321, 343, 425, 427, 447, 448, 452, 453, 456], "transport": [66, 117, 120, 123, 130, 131, 160, 183, 187, 190, 195, 201, 261, 299, 317, 321, 393, 394, 439, 454, 455, 456], "ssl": [66, 92, 106, 120, 127, 130, 212, 231, 237, 242, 248, 257, 277, 287, 309, 317, 318, 363, 372, 383, 394, 401, 431, 435, 437, 440, 441, 444, 450, 458], "tl": [66, 124, 130, 166, 212, 231, 242, 248, 257, 277, 287, 309, 317, 318, 340, 431, 435, 439, 443, 444, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457], "selector": [66, 93, 119, 120, 125, 242, 248, 249, 310, 315, 319, 321, 339, 372, 444, 446, 448, 456], "multiplex": [66, 103, 242, 248, 310, 321, 453], "mime": [66, 85, 102, 136, 139, 148, 185, 189, 191, 192, 193, 194, 196, 197, 234, 242, 271, 331, 383, 407, 426, 439, 441, 444, 450, 451, 453, 454, 455, 456], "defect": [66, 183, 185, 192, 194, 196, 197, 271, 441, 452, 456], "headerregistri": [66, 183, 188, 189, 194, 197, 271], "contentmanag": [66, 183, 195, 271, 453], "compat32": [66, 183, 184, 187, 190, 191, 194, 195, 196, 197, 198, 271, 452, 454, 455], "scratch": [66, 87, 99, 122, 178, 183, 187, 190, 196, 271, 321, 375, 385, 452, 453], "internation": [66, 87, 105, 183, 242, 268, 271, 317, 321, 325, 326, 344, 410, 426, 437, 440, 441, 454, 456], "charset": [66, 172, 179, 183, 185, 186, 191, 194, 195, 197, 198, 219, 237, 271, 321, 372, 383, 450, 451, 454], "json": [66, 98, 99, 114, 146, 157, 239, 242, 246, 256, 257, 271, 289, 327, 426, 444, 446, 447, 450, 451, 452, 453, 458], "mailbox": [66, 83, 183, 190, 237, 242, 271, 287, 429, 442, 444, 450, 455, 458], "mimetyp": [66, 146, 186, 189, 242, 271, 359, 383, 439, 443, 450, 455], "base64": [66, 139, 146, 148, 184, 185, 186, 187, 188, 191, 192, 195, 197, 224, 237, 239, 242, 271, 299, 308, 309, 317, 321, 359, 372, 394, 439, 441, 450, 458], "base16": [66, 242, 271, 441], "base32": [66, 242, 271, 441, 447], "base85": [66, 242, 271, 453], "binascii": [66, 97, 136, 148, 242, 271, 401, 444, 448, 453, 458], "quopri": [66, 139, 146, 148, 242, 271], "markup": [66, 206, 229, 242, 296, 385, 394, 443, 451, 452], "html": [66, 69, 76, 77, 78, 93, 98, 102, 106, 120, 130, 143, 148, 152, 179, 189, 194, 231, 232, 234, 236, 242, 260, 277, 295, 320, 321, 347, 357, 371, 372, 373, 383, 386, 387, 388, 392, 394, 395, 399, 401, 403, 410, 427, 430, 431, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 454, 456, 457, 458, 460], "hypertext": [66, 106, 229, 230, 242, 260, 385], "xhtml": [66, 106, 227, 228, 242, 260, 296, 372, 385, 386, 388, 451], "entiti": [66, 85, 102, 106, 227, 229, 231, 242, 256, 260, 296, 323, 372, 384, 385, 386, 387, 389, 390, 391, 392, 401, 440, 452, 457], "etre": [66, 242, 260, 384, 386, 426, 442, 444, 450, 451, 455, 457, 458], "elementtre": [66, 242, 260, 384, 386, 426, 450, 453, 455, 457, 458], "dom": [66, 242, 245, 260, 384, 390, 426, 438, 440, 442, 448, 457], "minidom": [66, 242, 260, 384, 385, 387, 437, 438, 440, 457], "pulldom": [66, 242, 260, 384, 448, 457], "sax": [66, 242, 260, 384, 385, 386, 387, 426, 437, 438, 447, 457], "sax2": [66, 242, 260, 384, 386, 390], "saxutil": [66, 242, 260, 389], "xmlreader": [66, 242, 260, 387, 389, 390, 392, 454], "expat": [66, 242, 260, 286, 384, 388, 390, 431, 437, 438, 440, 442, 444, 451], "webbrows": [66, 135, 146, 189, 242, 244, 437, 442, 448, 450], "browser": [66, 93, 103, 105, 106, 179, 233, 234, 236, 242, 244, 245, 252, 290, 295, 331, 371, 372, 415, 427, 428, 431, 437, 438, 440, 441, 442, 443, 448, 449, 451, 452, 455, 456], "wsgiref": [66, 242, 244, 448, 450, 451, 455, 457], "wsgi": [66, 242, 244, 442, 448, 451], "urllib": [66, 94, 130, 135, 156, 159, 212, 215, 230, 231, 232, 242, 244, 257, 289, 359, 366, 375, 426, 437, 440, 442, 443, 445, 450, 457], "url": [66, 83, 130, 135, 136, 143, 156, 157, 212, 230, 231, 232, 234, 236, 239, 242, 244, 257, 263, 295, 308, 324, 340, 370, 373, 374, 375, 379, 383, 388, 391, 392, 394, 395, 401, 407, 426, 437, 440, 441, 442, 443, 444, 451, 453, 454], "robotpars": [66, 242, 244, 369, 437, 445], "robot": [66, 242, 244, 361, 369, 437], "ftplib": [66, 135, 146, 148, 242, 244, 372, 438, 440, 443, 444, 451, 453, 454, 455], "ftp": [66, 78, 106, 242, 244, 257, 272, 371, 372, 435, 437, 438, 443, 444, 452, 458], "poplib": [66, 135, 146, 183, 242, 244, 426, 441, 449, 452, 455], "pop3": [66, 242, 244, 452, 453, 454, 458], "imaplib": [66, 102, 135, 183, 242, 244, 287, 439, 440, 441, 444, 446, 449, 455], "imap4": [66, 242, 244, 287, 451, 454, 455, 457, 458], "smtplib": [66, 82, 99, 135, 183, 189, 190, 197, 242, 244, 257, 321, 426, 439, 443, 449, 451, 455], "smtp": [66, 78, 82, 98, 99, 183, 189, 190, 192, 197, 242, 244, 257, 321, 426, 437, 439, 443, 451, 452, 453, 454, 458], "uuid": [66, 146, 242, 244, 318, 431, 442, 448, 457], "rfc": [66, 98, 99, 102, 106, 120, 136, 139, 148, 164, 183, 184, 185, 186, 188, 189, 190, 191, 192, 194, 196, 197, 198, 212, 219, 224, 226, 230, 231, 232, 233, 234, 237, 242, 244, 247, 250, 254, 257, 259, 287, 299, 309, 317, 318, 321, 326, 327, 344, 370, 371, 372, 383, 394, 426, 437, 439, 440, 441, 442, 443, 444, 450, 451, 452, 454, 456, 458], "4122": [66, 242, 244, 442], "socketserv": [66, 99, 230, 234, 242, 244, 318, 395, 443, 444, 445], "framework": [66, 76, 79, 82, 99, 111, 117, 120, 127, 145, 157, 160, 165, 174, 176, 182, 230, 236, 242, 244, 316, 317, 321, 324, 331, 346, 363, 366, 372, 383, 395, 403, 418, 431, 434, 439, 440, 443, 444, 445, 450, 451, 453, 454, 456, 457, 458], "server": [66, 78, 81, 82, 83, 90, 93, 98, 103, 106, 117, 118, 124, 146, 157, 160, 165, 181, 183, 187, 189, 197, 212, 215, 224, 230, 231, 232, 233, 236, 237, 242, 244, 245, 247, 255, 256, 257, 269, 277, 278, 279, 287, 295, 300, 309, 310, 311, 315, 317, 318, 320, 331, 335, 340, 343, 347, 359, 363, 365, 370, 372, 384, 401, 426, 427, 436, 438, 439, 440, 441, 442, 443, 444, 449, 450, 452, 453, 454, 455, 457, 458], "cooki": [66, 106, 110, 224, 230, 242, 244, 246, 321, 343, 355, 372, 441, 443, 444, 445, 454, 456], "cookiejar": [66, 230, 233, 242, 244, 372], "xmlrpc": [66, 242, 244, 269, 282, 384, 401, 426, 439, 445, 453], "rpc": [66, 78, 236, 242, 244, 250, 261, 393, 401, 439, 440, 441, 442, 443, 444, 455], "ipaddress": [66, 94, 242, 244, 457], "ipv4": [66, 96, 103, 120, 234, 242, 244, 318, 321, 443, 452, 457, 458], "ipv6": [66, 96, 120, 234, 242, 244, 318, 321, 340, 371, 431, 439, 443, 444, 446, 451, 452, 454, 457, 458], "multimedia": [66, 242], "wave": [66, 242, 264, 437, 450, 455, 458], "wav": [66, 195, 242, 264, 382, 425], "colorsi": [66, 242, 264], "color": [66, 83, 85, 92, 99, 145, 150, 166, 178, 200, 229, 242, 264, 313, 346, 347, 353, 355, 381, 403, 416, 417, 447, 448, 451, 455, 456], "gettext": [66, 87, 99, 235, 242, 254, 386, 410, 426, 437, 441, 448, 450], "multilingu": [66, 235, 236, 242], "turtl": [66, 145, 211, 236, 242, 347, 443, 445, 448, 449, 450, 451], "graphic": [66, 80, 83, 90, 105, 148, 166, 211, 242, 299, 347, 365, 379, 414, 443], "shlex": [66, 109, 120, 131, 157, 211, 242, 280, 328, 449, 458], "tk": [66, 236, 242, 349, 350, 361, 414, 431, 434, 436, 437, 438, 443, 446, 447, 448, 451, 452, 454, 455, 456, 458], "tkinter": [66, 78, 242, 346, 361, 431, 434, 437, 440, 443, 445, 446], "tcl": [66, 79, 236, 242, 346, 353, 427, 431, 434, 436, 437, 440, 443, 444, 447, 448, 451, 454, 455, 457, 458], "colorchoos": [66, 242, 346, 347], "choos": [66, 71, 73, 76, 82, 83, 87, 88, 93, 99, 101, 102, 103, 105, 114, 148, 153, 182, 194, 214, 215, 224, 234, 238, 242, 245, 255, 262, 270, 276, 282, 290, 300, 320, 321, 327, 331, 332, 343, 346, 347, 366, 374, 388, 401, 407, 419, 434, 436, 439, 440, 444, 451, 452, 453, 456], "dialog": [66, 75, 90, 236, 242, 276, 340, 346, 347, 361, 436, 447, 453, 454, 455, 456, 457, 458], "font": [66, 99, 105, 157, 201, 236, 242, 342, 346, 347, 353, 361, 423, 447, 455, 456, 458], "messagebox": [66, 165, 178, 242, 346, 347], "scrolledtext": [66, 242, 346, 347], "scroll": [66, 90, 145, 166, 236, 242, 346, 347, 353], "dnd": [66, 242, 346, 347], "drag": [66, 242, 346, 347, 353, 361, 434, 447], "ttk": [66, 242, 346, 347, 446, 455, 456, 457], "theme": [66, 236, 242, 346, 347, 440, 443, 446, 455, 456], "onlin": [66, 78, 101, 176, 242, 347, 361, 375, 389, 416, 439, 443], "doctest": [66, 76, 82, 146, 165, 176, 242, 340, 355, 358, 359, 365, 419, 426, 438, 440, 442, 444, 446, 451, 452], "unittest": [66, 76, 82, 146, 176, 242, 340, 359, 376, 426, 440, 446, 450, 458], "mock": [66, 176, 242, 359, 365, 448, 452, 453, 457, 458], "regress": [66, 76, 83, 88, 176, 182, 242, 250, 323, 444, 453, 454], "socket_help": [66, 176, 242], "script_help": [66, 176, 242], "bytecode_help": [66, 176, 242], "threading_help": [66, 176, 242], "os_help": [66, 176, 242], "import_help": [66, 176, 242], "warnings_help": [66, 176, 242], "bdb": [66, 157, 174, 242, 280, 431, 444, 457], "pdb": [66, 83, 109, 135, 137, 146, 174, 182, 203, 214, 242, 331, 358, 359, 430, 436, 440, 442, 443, 446, 448], "timeit": [66, 83, 146, 159, 174, 242, 290, 426, 430, 440, 441, 443], "measur": [66, 90, 91, 101, 127, 133, 144, 174, 175, 179, 215, 242, 282, 290, 304, 316, 319, 344, 347, 350, 359, 416, 421, 437, 440, 441, 442, 443, 444, 448, 449, 452, 453, 456, 457, 458], "ensurepip": [66, 107, 135, 146, 181, 242, 375, 431, 447], "bootstrap": [66, 107, 135, 181, 242, 300, 316, 375, 449], "pip": [66, 74, 101, 109, 181, 239, 242, 249, 375, 396, 430, 436, 447, 449], "venv": [66, 85, 99, 107, 109, 146, 181, 239, 242, 334, 428, 436, 449, 452, 456], "zipapp": [66, 109, 146, 181, 242], "sysconfig": [66, 70, 100, 146, 242, 277, 297, 359, 375, 400, 447, 450, 453], "dataclass": [66, 150, 161, 200, 225, 242, 289, 290, 297, 298, 320, 324, 363, 415, 416, 450], "contextlib": [66, 76, 242, 297, 324, 359, 444, 445, 446, 457], "atexit": [66, 76, 82, 156, 242, 255, 297, 302, 378, 437, 441, 447], "codeop": [66, 77, 169, 242], "zipimport": [66, 165, 240, 242, 267, 284, 407, 440, 442, 446, 450], "pkgutil": [66, 242, 267, 442, 443, 447, 448, 449, 450, 452, 455, 456], "modulefind": [66, 242, 267], "runpi": [66, 109, 146, 242, 267, 359, 430, 442, 443, 444, 446, 447, 453], "metadata": [66, 82, 95, 106, 107, 170, 215, 219, 238, 242, 243, 267, 277, 278, 293, 314, 322, 337, 363, 394, 397, 403, 407, 416, 428, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458], "ast": [66, 146, 173, 214, 242, 252, 330, 354, 355, 442, 447, 448, 449, 452, 456], "tabnanni": [66, 84, 146, 242, 252, 437], "indent": [66, 78, 84, 85, 88, 95, 102, 114, 116, 157, 159, 182, 193, 202, 242, 243, 250, 252, 283, 289, 303, 342, 345, 354, 355, 358, 366, 367, 386, 388, 402, 406, 414, 416, 422, 424, 427, 437, 447, 449, 450, 451, 452, 453, 458], "pyclbr": [66, 146, 242, 252], "py_compil": [66, 83, 146, 153, 242, 252, 444, 449, 451, 453], "compileal": [66, 83, 146, 242, 252, 293, 331, 425, 431, 436, 449, 451, 455], "di": [66, 85, 90, 146, 172, 201, 242, 243, 252, 283, 331, 378, 442, 450, 455, 457], "disassembl": [66, 242, 252, 283, 453, 456], "pickletool": [66, 146, 242, 252, 282, 359, 443], "msvcrt": [66, 75, 84, 135, 165, 242, 380, 443, 444], "vc": [66, 165, 242, 380], "winreg": [66, 135, 242, 380, 425, 445], "winsound": [66, 75, 242, 380], "sound": [66, 70, 82, 166, 212, 242, 380, 425, 440, 443], "pwd": [66, 212, 218, 222, 242, 277, 278, 279, 328, 368, 397, 440, 458], "grp": [66, 242, 279, 292, 328, 368, 440, 458], "termio": [66, 204, 242, 360, 368, 458], "tty": [66, 166, 218, 242, 246, 277, 368, 412, 413, 423, 430, 443], "pty": [66, 135, 242, 277, 321, 368, 449, 450], "fcntl": [66, 135, 242, 318, 368, 439, 440, 441, 443], "ioctl": [66, 115, 135, 242, 318, 368, 441, 443, 455], "syslog": [66, 98, 135, 242, 257, 368, 444, 449, 452], "cli": [66, 88, 223, 239, 242, 320, 340, 430, 450, 453, 456], "optpars": [66, 87, 242, 329, 441, 442, 444, 450, 451, 455], "howto": [66, 83, 90, 114, 301, 318, 372, 394, 437, 439, 444, 445, 451], "port": [66, 76, 88, 90, 94, 99, 103, 106, 120, 130, 135, 157, 212, 231, 232, 234, 236, 237, 245, 256, 257, 269, 277, 287, 295, 315, 317, 318, 319, 320, 321, 322, 340, 371, 372, 383, 394, 395, 419, 438, 439], "TO": [66, 83, 85, 93, 94, 99, 214, 215, 324, 401], "clinic": [66, 94, 455, 457], "instrument": [66, 94, 120, 215, 290, 431, 451, 455], "dtrace": [66, 94, 431], "systemtap": [66, 94, 431], "faq": [66, 80, 85, 90, 214, 224, 243, 287, 324, 371, 404, 424, 429, 442, 444, 453], "glossari": [66, 105, 170, 420], "licens": [66, 67, 78, 84, 107, 117, 158, 236, 239, 259, 289, 331, 423, 425, 428, 439, 457], "2001": [67, 96, 99, 198, 247, 314, 337, 344, 388, 397, 401, 438, 439, 440, 443, 451, 457], "2023": [67, 99, 401, 423, 449], "foundat": [67, 93, 107, 117, 159, 321, 347, 401, 434, 436, 440, 441, 443, 452], "2000": [67, 83, 98, 143, 148, 212, 257, 270, 344, 361, 401, 416, 419, 437, 440, 443, 451, 452, 453], "beopen": 67, "corpor": [67, 107, 401], "nation": [67, 401], "research": [67, 93, 401, 447], "guidanc": [68, 84, 101, 362, 416, 444, 448, 449], "pyd": [69, 82, 257, 333, 398, 442, 451, 454, 457], "pyinitu_": 69, "punycod": [69, 148, 440], "hyphen": [69, 114, 148, 217, 276, 301, 342, 363, 374, 430, 436, 440], "initfunc_nam": 69, "_": [69, 88, 91, 99, 100, 114, 116, 128, 136, 139, 142, 170, 172, 210, 214, 215, 219, 233, 236, 238, 247, 269, 282, 289, 301, 303, 304, 314, 315, 324, 325, 331, 340, 355, 361, 363, 371, 375, 378, 397, 402, 406, 409, 410, 411, 416, 424, 425, 447, 448, 455, 456, 457], "u_": 69, "newer": [69, 73, 78, 85, 98, 101, 182, 232, 236, 245, 256, 257, 277, 280, 282, 294, 296, 310, 320, 321, 324, 344, 347, 363, 384, 397, 431, 434, 435, 436, 447, 448, 449, 450, 453, 454, 455, 456, 457, 458], "distutil": [69, 75, 107, 239, 334, 438, 442, 443, 444, 448, 451, 457], "readthedoc": [69, 239, 383, 442], "en": [69, 93, 105, 106, 150, 219, 224, 229, 372, 435, 436, 442, 451, 452], "latest": [69, 78, 83, 107, 172, 175, 199, 215, 236, 375, 397, 428, 434, 436, 442, 444, 446, 449, 451, 452, 453, 455], "enrich": 70, "tailor": [70, 88, 235, 320, 324, 340, 449], "occasion": [70, 76, 82, 84, 88, 99, 114, 115, 159, 166, 175, 179, 190, 194, 219, 236, 259, 262, 276, 277, 343, 346, 411, 415, 427, 437, 442, 443, 451], "Then": [70, 76, 77, 82, 83, 88, 90, 92, 99, 100, 179, 180, 182, 183, 234, 239, 257, 273, 276, 316, 319, 321, 325, 359, 403, 418, 424, 436, 445, 451], "identif": [70, 131, 269, 285, 326, 343, 447], "great": [70, 92, 98, 180, 225, 232, 301, 366, 417, 442, 448], "ctime": [70, 172, 277, 278, 322, 344, 440], "troubl": [70, 96, 103, 106, 202, 436, 441], "piec": [70, 78, 85, 93, 100, 102, 103, 127, 139, 159, 168, 179, 180, 182, 191, 232, 258, 276, 321, 337, 347, 363, 389, 404, 410, 415, 416, 439, 442, 453, 458], "exchang": [70, 103, 120, 165, 201, 224, 225, 226, 265, 277, 298, 321, 327, 337, 343, 419, 421, 443, 444, 451, 452], "cumbersom": [70, 97, 175, 347], "sai": [70, 71, 73, 75, 76, 83, 84, 87, 88, 91, 96, 99, 101, 102, 103, 105, 111, 127, 133, 140, 164, 172, 182, 191, 215, 219, 225, 232, 236, 239, 254, 255, 256, 257, 259, 269, 275, 328, 372, 388, 396, 403, 407, 409, 416, 419, 421, 429, 438, 439, 440, 442, 443, 444, 447, 448, 451, 453], "despit": [70, 83, 85, 99, 103, 224, 226, 250, 279, 307, 321, 328, 363, 407, 426, 443], "accommod": [70, 99, 104, 190, 238, 347, 417, 441], "cross": [70, 74, 78, 79, 83, 99, 103, 172, 201, 233, 236, 277, 282, 300, 318, 337, 385, 400, 401, 410, 434, 437, 438, 439, 440, 443, 444, 446, 448, 451, 452, 453, 454, 455, 457], "pname": 70, "pmodul": [70, 71], "parg": 70, "fprintf": [70, 71], "pythonfil": 70, "atoi": [70, 254], "proce": [70, 132, 150, 175, 184, 194, 249, 259, 269, 290, 321, 338, 343, 402, 405, 415], "subroutin": [70, 85, 93, 442], "glue": [70, 88, 439, 441], "numarg": 70, "emb_numarg": 70, "embmethod": 70, "embmodul": 70, "pyinit_emb": 70, "linker": [70, 75, 84, 165, 448], "particularli": [70, 76, 96, 102, 106, 114, 269, 276, 277, 280, 290, 319, 328, 334, 363, 365, 366, 371, 421, 424, 429, 437, 438, 440, 441, 444, 445, 451, 453, 454, 456], "cflag": [70, 100, 288, 339, 431, 440], "wsign": 70, "dndebug": 70, "fwrapv": 70, "wall": [70, 172, 290, 443, 449], "ldflag": [70, 431, 440], "x86_64": [70, 334, 431, 454, 457], "lpython3": [70, 457], "lpthread": 70, "ldl": 70, "lutil": 70, "lm": [70, 324, 410], "get_makefile_filenam": [70, 334], "programmat": [70, 76, 108, 116, 157, 159, 197, 199, 254, 256, 276, 282, 291, 302, 331, 355, 372, 444, 452, 453], "get_config_var": [70, 277, 334, 400, 444, 451, 453], "linkforshar": 70, "xlinker": 70, "incorpor": [71, 78, 98, 102, 150, 175, 255, 321, 371, 388, 440, 442, 443, 444, 447, 451, 457], "cffi": [71, 72, 89, 175, 450], "favorit": [71, 78, 105, 417, 425], "food": [71, 85, 282, 421], "monti": [71, 157, 182, 214, 250, 277, 279, 320, 323, 324, 337, 397, 414, 429, 441, 443, 451], "fan": 71, "spammodul": 71, "spammifi": 71, "pull": [71, 172, 175, 225, 310, 361, 366, 387, 400, 437, 441, 444, 453, 456], "shortli": [71, 73, 132, 347, 427], "spam_system": 71, "st": [71, 82, 328, 361, 440, 441], "convention": [71, 232, 270, 276, 277, 375], "templat": [71, 83, 85, 88, 98, 109, 150, 190, 255, 301, 324, 345, 351, 361, 421, 439, 441, 443, 444, 448, 450, 451, 452, 455, 456], "saw": [71, 417], "predefin": [71, 83, 98, 102, 145, 148, 165, 166, 236, 255, 325, 347, 374, 379, 381, 399, 403], "pyerr_": 71, "fine": [71, 76, 82, 83, 84, 97, 99, 103, 105, 106, 157, 165, 166, 182, 190, 200, 214, 215, 232, 276, 277, 300, 301, 315, 321, 331, 347, 363, 366, 372, 403, 421, 426, 427, 436, 437, 438, 440, 442, 449], "lost": [71, 87, 88, 92, 98, 99, 105, 124, 127, 166, 172, 175, 190, 215, 236, 250, 255, 257, 269, 290, 314, 315, 317, 319, 402, 419, 425, 437, 439, 451, 452, 453, 458], "pretend": [71, 101, 103, 166, 366, 403, 415, 439, 457], "went": [71, 87, 137, 202, 317, 388, 437, 439, 442, 443, 458], "predeclar": 71, "cours": [71, 74, 76, 78, 84, 88, 92, 93, 98, 99, 103, 111, 165, 175, 182, 189, 191, 196, 224, 245, 255, 256, 269, 273, 276, 277, 313, 319, 321, 323, 347, 361, 366, 367, 385, 394, 403, 415, 416, 424, 430, 437, 438, 440, 445, 451, 452, 453], "wise": [71, 92, 170, 175, 256, 439, 456], "couldn": [71, 102, 106, 179, 246, 277, 315, 320, 363, 367, 398, 438, 439, 442, 444, 449, 455], "satisfi": [71, 106, 170, 210, 220, 223, 243, 246, 256, 262, 343, 403, 407, 417, 451], "spamerror": 71, "retain": [71, 86, 104, 114, 150, 157, 159, 166, 175, 179, 185, 194, 197, 202, 234, 236, 238, 243, 249, 255, 259, 277, 313, 320, 321, 361, 371, 394, 401, 403, 405, 410, 452, 453, 455, 457], "unintend": [71, 83, 175, 269, 279, 337, 448], "sampl": [71, 73, 82, 86, 88, 91, 92, 93, 99, 100, 102, 104, 145, 164, 165, 182, 212, 236, 266, 282, 289, 290, 300, 301, 323, 337, 345, 353, 372, 377, 388, 402, 416, 426, 436, 438, 439, 440, 443, 444, 448, 451, 453, 455, 456, 457], "genuin": [71, 182, 204, 444, 451], "seen": [71, 73, 82, 83, 85, 87, 88, 92, 93, 99, 145, 180, 200, 219, 224, 243, 249, 257, 259, 276, 287, 313, 332, 340, 347, 376, 378, 388, 390, 399, 415, 416, 418, 426, 430, 440, 443, 446, 449, 453, 456], "promis": [71, 92, 243, 451], "spammethod": 71, "obsolet": [71, 90, 202, 232, 250, 255, 288, 296, 324, 331, 344, 366, 376, 379, 394, 428, 437, 438, 439, 442, 444, 447, 449, 450, 451, 453, 454, 455], "spam_doc": 71, "pyinit_nam": 71, "satisfactorili": 71, "pyimport_inittab": 71, "interven": [71, 99, 179, 182, 193, 427, 452], "exercis": [71, 76, 82, 98, 99, 103, 150, 176, 255, 276, 290, 340, 401, 443], "caution": [71, 83, 122, 179, 256, 276, 277, 279, 328, 388, 442], "substanti": [71, 232, 249, 261, 296, 385, 401, 439, 441, 446, 448, 450, 451, 452, 453, 455], "xxmodul": 71, "perman": [71, 106, 212, 216, 230, 237, 372, 427, 436, 454, 458], "rebuild": [71, 153, 451], "luckili": [71, 88, 365, 383], "unpack": [71, 82, 88, 93, 99, 115, 116, 150, 180, 189, 204, 214, 269, 286, 314, 318, 324, 325, 327, 362, 363, 366, 402, 405, 406, 411, 417, 418, 426, 427, 437, 441, 442, 443, 445, 447, 448, 449, 451, 453, 457], "toplevel": [71, 150, 175, 214, 330, 347, 353, 388], "subdirectori": [71, 74, 82, 83, 99, 153, 189, 205, 220, 236, 238, 240, 241, 259, 277, 279, 284, 316, 357, 365, 375, 396, 397, 398, 425, 436, 437, 438, 440, 443, 444, 448, 454, 456, 457, 458], "lx11": 71, "far": [71, 74, 76, 78, 83, 87, 88, 102, 103, 159, 172, 175, 179, 224, 225, 226, 232, 246, 262, 269, 276, 277, 278, 279, 290, 301, 313, 314, 344, 365, 372, 409, 421, 437, 438, 439, 440, 441, 443], "concentr": [71, 78, 102, 106, 224, 300, 347, 427, 443], "imagin": [71, 88, 102, 109, 282, 361, 366, 367, 421], "fortun": [71, 74, 76, 90, 109, 445], "dwell": 71, "somehow": [71, 76, 269, 323, 337, 425, 443, 444], "wherev": [71, 77, 88, 90, 92, 99, 102, 105, 115, 150, 166, 347, 363, 401, 416, 439, 442, 448], "my_callback": [71, 73, 276], "my_set_callback": 71, "temp": [71, 269, 312, 320, 338, 386, 396, 405, 431, 436], "set_callback": 71, "rememb": [71, 76, 78, 81, 83, 85, 87, 88, 90, 91, 93, 98, 99, 102, 149, 150, 182, 214, 236, 249, 269, 301, 320, 340, 347, 353, 372, 378, 385, 387, 411, 415, 416, 419, 424, 425, 434, 436, 437, 438, 442, 443, 444, 446, 451, 452], "boilerpl": [71, 74, 88, 97, 273, 340, 366, 407, 454], "arglist": 71, "eventcod": 71, "placement": [71, 139, 347, 388, 449], "whoop": [71, 99], "si": [71, 167, 328], "wb": [71, 85, 99, 114, 142, 189, 197, 212, 223, 258, 265, 282, 291, 302, 363, 377, 394, 396, 397, 437, 446, 451], "100000": [71, 214, 290, 345, 359, 440], "bottom": [71, 82, 88, 93, 97, 114, 165, 166, 168, 246, 255, 277, 279, 280, 321, 347, 353, 361, 363, 366, 367, 403, 410, 414, 436, 437, 439, 440, 447], "rectangl": [71, 90, 166, 170], "400": [71, 73, 99, 106, 145, 212, 230, 269, 317, 347, 361, 416, 427, 447], "300": [71, 90, 99, 106, 145, 230, 236, 361, 372, 402, 427, 451], "myfunct": [71, 77, 159], "2j": [71, 95, 214, 250], "kwlist": [71, 74, 179, 251], "geoff": 71, "philbrick": 71, "hk": [71, 452], "keywdarg_parrot": 71, "keywd": 71, "voltag": [71, 214, 416], "stiff": [71, 416], "voom": [71, 416], "norwegian": [71, 148, 416], "blue": [71, 90, 92, 99, 102, 104, 140, 145, 150, 152, 166, 200, 249, 300, 323, 324, 347, 353, 361, 378, 416, 417, 427, 440, 441, 446, 447, 449, 451, 455], "sss": [71, 73, 172], "parrot": [71, 214, 231, 289, 416, 443], "wouldn": [71, 76, 82, 88, 101, 102, 255, 314, 323, 340, 365, 366, 402, 416, 437, 438, 439, 440, 441, 443], "volt": [71, 416], "love": [71, 76, 99, 140, 164, 233, 416, 446, 453], "keywdarg_method": 71, "skit": [71, 182, 414], "keywdargmodul": 71, "keywdarg": 71, "pyinit_keywdarg": 71, "counterpart": [71, 99, 166, 180, 214, 246, 249, 255, 301, 318, 324, 339, 402, 444, 446, 447, 448, 451, 456], "recogn": [71, 83, 84, 85, 91, 96, 102, 114, 145, 148, 157, 166, 180, 185, 192, 207, 212, 217, 224, 238, 246, 250, 254, 263, 268, 276, 277, 280, 282, 285, 301, 313, 325, 340, 344, 347, 354, 363, 366, 371, 372, 391, 410, 411, 416, 423, 425, 436, 437, 445, 451, 452, 453, 454], "iii": [71, 401], "456": [71, 99, 175], "789": [71, 175, 443], "hello": [71, 73, 77, 83, 84, 99, 109, 115, 123, 127, 129, 130, 131, 133, 139, 165, 173, 215, 219, 224, 229, 265, 269, 275, 282, 286, 318, 319, 320, 321, 324, 338, 340, 342, 343, 355, 363, 365, 366, 383, 410, 415, 417, 418, 421, 436, 451, 453, 454, 457, 458], "ss": [71, 105, 172, 237, 324, 344, 447, 452], "world": [71, 77, 83, 90, 96, 99, 103, 109, 123, 127, 130, 133, 139, 159, 165, 172, 215, 219, 224, 237, 245, 265, 269, 275, 276, 282, 292, 307, 318, 319, 320, 321, 324, 338, 340, 342, 343, 355, 361, 365, 372, 383, 385, 401, 410, 415, 417, 418, 421, 423, 429, 445, 454, 455], "hell": 71, "pool": [71, 82, 107, 118, 124, 150, 156, 212, 249, 270, 277, 300, 438, 440, 443, 444, 451, 452, 453, 455], "forgotten": [71, 105, 119, 417], "occupi": [71, 105, 269, 304, 350, 353, 453], "reus": [71, 74, 78, 88, 103, 120, 122, 132, 148, 156, 159, 165, 173, 182, 203, 215, 225, 238, 277, 300, 301, 318, 319, 321, 327, 337, 340, 342, 343, 366, 378, 402, 407, 410, 414, 442, 449, 451, 458], "conflict": [71, 76, 85, 99, 102, 106, 111, 114, 150, 157, 200, 202, 219, 230, 331, 361, 363, 381, 388, 401, 415, 423, 428, 430, 436, 447, 451, 453, 456], "unusu": [71, 90, 99, 172, 202, 238, 290, 304, 323, 328, 338, 371, 405], "prematur": [71, 98, 231, 259, 445], "undetect": [71, 259, 343], "modern": [71, 95, 101, 109, 120, 125, 133, 136, 166, 167, 183, 224, 246, 292, 314, 318, 321, 337, 347, 382, 421, 434, 437, 441, 443, 444, 450, 451, 452, 455, 456, 457, 458], "plenti": [71, 103], "appar": [71, 81, 84, 90, 315, 416, 437, 441], "heavi": [71, 106, 157, 419, 429, 444, 452, 456], "somewher": [71, 82, 83, 88, 99, 234, 236, 276, 284, 296, 323, 324, 385, 416, 436, 443, 447], "disadvantag": [71, 74, 82, 83, 102, 126, 148, 175, 321, 345, 439, 446], "tradit": [71, 74, 85, 148, 254, 259, 262, 276, 277, 282, 292, 340, 402, 406, 407, 426, 431, 436, 443, 451], "reclaim": [71, 73, 238, 363, 378], "flexibl": [71, 82, 85, 87, 88, 91, 96, 99, 102, 127, 150, 159, 165, 179, 182, 185, 194, 197, 219, 255, 256, 269, 276, 282, 320, 324, 328, 337, 344, 363, 366, 386, 388, 403, 414, 415, 427, 437, 438, 440, 442, 444, 445, 451, 454, 458], "nobodi": [71, 224, 234, 317], "seemingli": [71, 182, 405, 437], "popular": [71, 76, 82, 85, 91, 99, 103, 104, 107, 179, 182, 215, 237, 244, 259, 327, 357, 361, 409, 421, 423, 426, 434, 436, 448, 451, 452, 457], "pictur": [71, 157, 189, 408, 439, 441], "bet": 71, "therebi": [71, 83, 186, 192, 361, 453], "no_bug": 71, "someon": [71, 81, 83, 88, 103, 172, 317, 338, 372, 388, 444, 449], "spent": [71, 133, 290, 304, 315, 442, 443], "redund": [71, 111, 258, 278, 301, 324, 363, 399, 411, 416, 439, 444, 447], "slowli": [71, 85, 99, 447], "ever": [71, 83, 91, 92, 103, 108, 116, 166, 188, 190, 238, 246, 249, 268, 269, 321, 328, 361, 363, 366, 436, 439, 440, 442, 443, 444, 445, 453], "enclos": [71, 85, 88, 102, 107, 150, 166, 214, 231, 237, 243, 250, 280, 301, 313, 325, 340, 343, 345, 363, 365, 385, 402, 404, 405, 409, 410, 411, 415, 416, 417, 424, 438, 439, 442, 447, 448, 449, 451, 457], "__cplusplu": 71, "recent": [71, 74, 82, 83, 84, 87, 91, 92, 93, 96, 97, 99, 105, 109, 114, 119, 126, 128, 137, 150, 157, 159, 165, 172, 175, 177, 182, 199, 200, 203, 214, 215, 223, 229, 236, 237, 243, 247, 255, 257, 269, 270, 277, 279, 280, 282, 289, 296, 298, 301, 317, 318, 320, 321, 324, 325, 327, 328, 331, 340, 358, 359, 361, 364, 365, 366, 367, 371, 376, 378, 397, 402, 403, 404, 405, 411, 415, 416, 417, 418, 421, 424, 427, 428, 430, 431, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458], "sight": 71, "seem": [71, 74, 76, 77, 78, 84, 88, 93, 98, 102, 114, 205, 259, 266, 277, 290, 320, 338, 407, 417, 437, 438, 439, 440, 442], "And": [71, 83, 87, 88, 92, 93, 98, 99, 101, 103, 114, 116, 156, 159, 164, 175, 180, 182, 214, 219, 225, 245, 250, 275, 276, 301, 320, 321, 337, 353, 361, 366, 367, 397, 406, 416, 438, 442, 446, 451, 452], "aix": [71, 110, 277, 288, 331, 343, 457, 458], "unic": [71, 292, 435], "wish": [71, 73, 81, 86, 88, 90, 93, 98, 102, 106, 114, 139, 148, 150, 157, 172, 182, 192, 197, 223, 238, 239, 240, 241, 247, 250, 255, 257, 259, 265, 276, 301, 317, 321, 322, 328, 353, 362, 375, 376, 378, 383, 403, 414, 418, 419, 422, 438, 441, 442, 443, 444, 453, 460], "clash": [71, 92, 99, 165, 236, 255, 256, 259, 405, 410, 415, 425, 428, 443, 454, 458], "publish": [71, 99, 102, 107, 175, 179, 181, 320, 340, 345, 373, 395, 401, 436, 438, 444, 451, 458], "degre": [71, 145, 166, 262, 323, 324, 361, 403, 440, 457], "certainti": [71, 381], "burden": [71, 444, 445, 449, 450, 452, 454], "pyspam_system": 71, "realiti": [71, 172, 276, 318, 372, 402], "pyspam_api": 71, "pyspam_api_point": 71, "c_api_object": 71, "pyspam_system_num": 71, "_c_api": 71, "disappear": [71, 73, 84, 98, 103, 123, 133, 361, 439, 441], "bulk": [71, 175, 245, 453], "ifndef": [71, 88], "py_spammodule_h": 71, "endif": [71, 88, 229, 301, 431, 447, 448, 457, 458], "pyspam_system_return": 71, "pyspam_system_proto": 71, "import_spam": 71, "pyinit_cli": 71, "clientmodul": 71, "mention": [71, 73, 74, 75, 86, 93, 96, 99, 101, 102, 105, 109, 157, 165, 166, 180, 182, 202, 203, 204, 214, 250, 256, 259, 269, 276, 277, 313, 316, 319, 333, 340, 402, 403, 407, 409, 410, 411, 418, 437, 445, 448, 449, 452, 453, 456, 458], "footnot": [71, 74, 111, 151, 157, 164, 172, 182, 186, 187, 189, 190, 192, 194, 197, 198, 214, 219, 225, 228, 250, 261, 279, 280, 282, 296, 321, 324, 344, 364, 379, 386, 388, 394, 402, 403, 404, 405, 407, 410, 413, 415, 416, 417, 423, 424, 425, 429], "metaphor": [71, 238, 240, 241], "knowledg": [72, 90, 172, 183, 254, 273, 285, 312, 415, 426, 443], "formal": [72, 88, 182, 214, 224, 276, 301, 324, 325, 371, 389, 396, 403, 404, 405, 409, 411, 416, 420, 437, 439, 446, 448, 453, 454, 457, 458], "cython": [72, 76, 77, 83, 89, 453], "swig": [72, 77, 84], "numba": 72, "sophist": [72, 83, 88, 127, 145, 159, 175, 255, 300, 321, 325, 388, 426, 427, 439, 442], "assist": [72, 93, 105, 252, 265, 270, 338, 362, 375, 403, 439, 440, 441, 442, 443, 444, 456], "baggag": 73, "easiest": [73, 74, 77, 79, 82, 83, 103, 114, 175, 182, 232, 236, 246, 276, 277, 366], "dealt": [73, 103, 147, 200, 276], "newdatatype_dealloc": 73, "newdatatypeobject": 73, "obj_underlyingdatatypeptr": 73, "other_obj": 73, "unwound": [73, 255, 301, 403], "mislead": [73, 105, 116, 158, 172, 372, 386, 439, 447, 451], "my_dealloc": 73, "cbresult": 73, "err_typ": 73, "err_valu": 73, "err_traceback": 73, "textual": [73, 74, 83, 101, 105, 114, 165, 190, 255, 272, 296, 301, 324, 337, 353, 365, 385, 386, 405, 411, 415, 439, 455], "newdatatype_repr": 73, "ified_newdatatyp": 73, "human": [73, 76, 98, 99, 105, 179, 180, 187, 219, 232, 234, 255, 282, 285, 315, 317, 321, 322, 331, 354, 364, 377, 389, 405, 421, 428, 439, 446, 452, 453], "newdatatype_str": 73, "stringified_newdatatyp": 73, "sens": [73, 76, 83, 87, 88, 92, 96, 98, 99, 109, 114, 115, 172, 175, 179, 194, 195, 215, 236, 247, 259, 269, 276, 277, 290, 315, 319, 320, 321, 324, 325, 331, 345, 361, 371, 379, 401, 403, 407, 415, 416, 419, 436, 445, 451, 453, 454, 456], "coupl": [73, 83, 88, 99, 103, 114, 120, 194, 197, 198, 255, 269, 276, 315, 366, 367, 372, 384, 436, 453, 455, 456], "flavor": [73, 85, 103, 182, 212, 224, 249, 277, 322, 324, 330, 365, 402, 405, 420, 431], "newdatatype_getattr": 73, "100": [73, 83, 90, 99, 105, 106, 119, 120, 130, 140, 145, 170, 172, 175, 179, 190, 197, 203, 214, 230, 234, 236, 249, 254, 262, 269, 270, 300, 311, 318, 323, 324, 325, 337, 344, 345, 353, 361, 365, 372, 381, 383, 394, 402, 405, 416, 419, 421, 424, 425, 426, 427, 437, 440, 442, 443, 444, 447, 448, 451, 453, 454, 457], "newdatatype_setattr": 73, "newdatatype_richcmp": 73, "obj1": [73, 441], "obj2": [73, 441], "size1": 73, "size2": 73, "newdatatyp": 73, "unfil": [73, 405], "newdatatype_hash": 73, "some_s": 73, "32767": [73, 327], "some_numb": 73, "toi": [73, 282], "newdatatype_cal": 73, "arg3": [73, 83, 95, 111], "incur": [73, 150, 175, 249, 401, 451], "trivialtyp": 73, "trivial_dealloc": 73, "trivialobject": 73, "tp_": 73, "some_object": [73, 83, 243, 366], "mytyp": [73, 276, 448, 450], "myth": 73, "download": [73, 78, 83, 99, 279, 289, 370, 372, 375, 401, 403, 415, 428, 429, 434, 435, 442, 443, 444, 451, 452, 456, 457], "www": [73, 77, 93, 103, 105, 106, 148, 152, 156, 159, 172, 173, 189, 224, 229, 231, 232, 249, 296, 300, 301, 320, 321, 324, 331, 364, 371, 372, 373, 379, 386, 388, 399, 401, 403, 410, 415, 420, 429, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 451, 452, 454, 456], "gentl": [74, 87, 96, 114, 439], "customobject": 74, "customtyp": 74, "custommodul": 74, "pyinit_custom": 74, "hopefulli": [74, 96, 98, 99, 453], "wari": [74, 333, 419], "accid": [74, 76, 114, 415, 443, 444, 445, 457], "ob_fval": 74, "mycustom": 74, "setuptool": [74, 75, 239, 284, 289, 334, 375, 428, 436, 444, 447, 449, 453, 455], "backend": [74, 148, 166, 320, 331, 340, 367, 431], "build_meta": 74, "pyproject": [74, 356], "ext_modul": [74, 437], "fire": [74, 95, 99, 114, 133, 315, 449], "uninterest": [74, 179], "custom2": 74, "custom_dealloc": 74, "custom_new": 74, "custom_init": 74, "ooi": 74, "custom_memb": 74, "custom_nam": 74, "custom_method": 74, "pyinit_custom2": 74, "midwai": [74, 399], "polymorph": [74, 85, 88, 392], "proceed": [74, 78, 87, 106, 277], "didn": [74, 77, 83, 87, 88, 101, 102, 105, 109, 116, 159, 276, 301, 317, 367, 403, 415, 437, 438, 439, 441, 442, 443, 444, 450, 453, 456, 458], "ourselv": [74, 92, 109, 363], "unpickl": [74, 92, 99, 172, 255, 257, 269, 270, 283, 400, 440, 443, 444, 446], "anyon": [74, 101, 321, 340, 401, 438, 444, 453, 460], "riski": [74, 182], "paranoid": 74, "uui": 74, "custom_getfirst": 74, "custom_setfirst": 74, "custom_getlast": 74, "custom_setlast": 74, "custom_getsett": 74, "custom3": 74, "pyinit_custom3": 74, "advanc": [74, 76, 77, 78, 83, 85, 90, 99, 102, 103, 142, 157, 159, 164, 165, 166, 175, 183, 200, 214, 223, 225, 243, 246, 249, 255, 256, 257, 258, 265, 276, 298, 318, 321, 325, 328, 331, 345, 357, 361, 367, 378, 386, 387, 397, 402, 403, 409, 414, 415, 422, 426, 427, 436, 440, 445, 451, 457], "unneed": [74, 76, 386, 444, 449, 453, 458], "some_attribut": [74, 366], "custom_travers": 74, "custom_clear": 74, "custom4": 74, "pyinit_custom4": 74, "subobject": [74, 83], "vret": 74, "nevertheless": [74, 88, 99, 133, 148, 186, 202, 246, 276, 337, 346, 388, 425, 445], "prone": [74, 76, 109, 172, 182, 282, 290, 324, 447, 449, 454], "micro": [74, 78, 83, 331, 437, 444, 446, 447, 456], "expens": [74, 76, 83, 85, 98, 140, 170, 177, 179, 215, 246, 254, 273, 290, 314, 319, 321, 331, 399, 407, 427, 430, 441, 448, 449, 452, 453, 455, 456, 457], "robust": [74, 173, 243, 290, 315, 323, 346, 378, 426, 444, 451, 453, 454], "reimplement": [74, 365, 439, 453, 454, 455, 456], "difficult": [74, 78, 82, 90, 93, 98, 101, 102, 105, 114, 225, 256, 282, 372, 388, 427, 437, 438, 439, 440, 441, 444, 447, 451, 457], "sublist": [74, 437, 451], "sublistobject": 74, "sublist_incr": 74, "sublist_method": 74, "sublist_init": 74, "sublisttyp": 74, "sublistmodul": 74, "pyinit_sublist": 74, "resembl": [74, 92, 166, 214, 232, 277, 280, 313, 416, 430, 439, 443, 444, 447, 457], "explanatori": [75, 182, 296, 365], "materi": [75, 93, 102, 166, 179, 223, 245, 318, 321, 346, 401, 429, 431, 441, 444], "xy": [75, 249, 316, 363], "studi": [75, 83, 93, 182, 225, 361, 416, 440, 443], "paradigm": [75, 78, 93], "awar": [75, 78, 81, 85, 96, 102, 103, 104, 107, 133, 157, 168, 183, 185, 189, 191, 192, 194, 195, 198, 214, 215, 219, 237, 254, 277, 279, 320, 321, 325, 331, 344, 345, 347, 376, 388, 391, 419, 425, 426, 430, 431, 434, 436, 437, 439, 440, 441, 445, 446, 447, 449, 450, 451, 452, 455, 456], "reassur": 75, "pythonxi": [75, 436, 457], "ni": [75, 222, 289, 371, 421, 442, 448, 449, 450], "_declspec": 75, "dllexport": [75, 84], "initspam": 75, "nigetspamdata": 75, "studio": [75, 83, 431, 436, 443, 454], "100k": 75, "rid": [75, 103, 438, 447], "xx": [75, 114, 234, 277, 301, 312, 371, 436], "guido": [76, 78, 83, 85, 91, 179, 266, 324, 363, 401, 417, 425, 437, 438, 439, 440, 442, 443, 444, 445, 447, 448, 449, 453, 454, 455, 456, 457, 458], "van": [76, 78, 83, 85, 150, 172, 398, 401, 437, 438, 439, 440, 442, 443, 444, 445, 447, 448, 449, 450, 453, 454, 455, 456, 457, 458], "rossum": [76, 78, 83, 85, 398, 401, 437, 438, 439, 440, 442, 443, 444, 445, 447, 448, 449, 453, 454, 455, 456, 457, 458], "eleg": [76, 83, 85, 150, 157, 420, 451], "clariti": [76, 103, 109, 115, 275, 276, 338, 344, 402, 451], "averag": [76, 91, 225, 249, 277, 290, 300, 308, 324, 328, 345, 353, 359, 409, 426, 445, 447, 448, 453, 457], "disagr": 76, "perceiv": [76, 259], "fragment": [76, 93, 296, 324, 371, 372, 387, 388, 442, 444, 451, 452], "experienc": 76, "stare": 76, "feel": [76, 87, 101, 178, 276, 346, 353, 367, 416, 439, 440, 443, 447], "uneasi": 76, "wast": [76, 99, 105, 445, 448], "valuabl": [76, 90, 109, 219, 318, 358, 452], "screen": [76, 83, 90, 93, 95, 105, 145, 158, 166, 168, 236, 302, 328, 347, 353, 355, 418, 427, 437, 439, 440, 443, 447, 451, 454, 458], "harder": [76, 83, 182, 276, 324, 367, 449], "20": [76, 83, 87, 90, 91, 93, 95, 98, 99, 102, 105, 128, 133, 143, 145, 165, 170, 172, 175, 182, 198, 200, 210, 224, 225, 236, 243, 247, 249, 255, 269, 277, 279, 290, 300, 301, 303, 304, 318, 321, 323, 324, 331, 337, 344, 345, 361, 363, 371, 373, 401, 410, 415, 424, 426, 430, 431, 437, 441, 442, 443, 444, 446, 448, 449, 451, 453, 454, 455, 456, 457, 458], "30": [76, 82, 83, 90, 91, 93, 95, 98, 99, 120, 130, 143, 145, 150, 172, 175, 182, 225, 247, 249, 255, 257, 277, 298, 300, 303, 318, 323, 324, 325, 340, 343, 344, 345, 361, 398, 415, 416, 426, 427, 431, 440, 441, 442, 444, 446, 447, 448, 450, 453, 454, 455, 456, 457, 458], "certainli": [76, 83, 90, 102, 103, 165, 269, 437, 438, 439, 440, 444], "19999999999999996": 76, "concern": [76, 96, 98, 120, 127, 148, 157, 257, 282, 296, 321, 340, 367, 401, 438, 439, 444, 447, 448, 455, 456, 457, 458], "notat": [76, 85, 88, 93, 96, 99, 102, 105, 150, 157, 175, 214, 247, 250, 265, 277, 282, 296, 318, 324, 325, 328, 347, 366, 385, 388, 390, 402, 403, 405, 406, 410, 415, 417, 419, 421, 425, 430, 440, 441, 442, 445, 451, 457, 458], "0011001100110011001100110011001100110011001100110011": 76, "1999999999999999555910790149937383830547332763671875": 76, "accuraci": [76, 172, 214, 249, 262, 290, 345, 419, 441, 449], "fuller": [76, 438], "explan": [76, 78, 102, 106, 156, 157, 172, 179, 234, 254, 259, 269, 272, 277, 280, 286, 301, 318, 324, 331, 344, 347, 372, 416, 417, 421, 429, 437, 438, 439, 440, 441, 442, 443, 451], "eight": [76, 105, 166, 247, 308, 323, 324, 334, 347, 410, 437, 440, 441, 450, 457], "modula": [76, 78, 261, 415], "heart": [76, 440, 449], "m_": 76, "baseclass": 76, "methodnam": [76, 269, 365, 394, 415, 416], "syntact": [76, 83, 85, 159, 191, 229, 238, 245, 272, 296, 320, 324, 355, 363, 366, 371, 376, 389, 402, 404, 405, 409, 410, 411, 415, 416, 418, 441, 442, 445], "bodi": [76, 82, 83, 85, 88, 106, 116, 129, 130, 133, 136, 159, 172, 178, 180, 184, 185, 186, 188, 189, 190, 194, 196, 197, 214, 229, 231, 234, 237, 243, 259, 299, 315, 317, 320, 324, 340, 345, 363, 365, 366, 367, 370, 372, 378, 383, 388, 402, 404, 405, 406, 411, 416, 424, 441, 442, 443, 449, 451, 452, 453, 454, 455, 456, 457], "piti": 76, "nice": [76, 84, 87, 103, 114, 134, 137, 159, 165, 182, 214, 225, 258, 277, 304, 317, 319, 323, 324, 338, 367, 379, 403, 416, 421, 422, 424, 437, 451, 452], "unqualifi": [76, 202, 328, 415, 453], "walru": [76, 116, 405, 417, 457], "200": [76, 83, 106, 145, 166, 175, 179, 212, 230, 231, 234, 318, 321, 324, 347, 361, 365, 372, 383, 402, 421, 427, 440, 455, 457], "572": [76, 402, 405, 449, 457], "postfix": 76, "infix": 76, "mathematician": 76, "rewrit": [76, 97, 101, 116, 189, 207, 277, 355, 419, 437, 440, 442, 444, 445, 454, 457], "formula": [76, 172, 219, 324], "clumsi": [76, 85, 452], "me": [76, 78, 103, 189, 215, 225, 229, 325, 340, 367, 428, 436, 443, 448, 449], "wit": [76, 445], "pipermail": [76, 429, 438, 440], "3000": [76, 85, 108, 362, 363, 402, 403, 443, 445], "2006": [76, 93, 172, 255, 296, 386, 388, 397, 401, 442, 458], "novemb": [76, 143, 172, 410], "004643": 76, "becam": [76, 93, 108, 142, 150, 202, 277, 317, 331, 344, 363, 437, 443, 444, 447, 454, 457, 458], "uncomfort": 76, "ugli": [76, 77, 109, 179, 347, 417, 437, 440], "unavail": [76, 82, 106, 182, 218, 243, 258, 269, 277, 314, 363, 403], "sadli": [76, 87], "difficulti": [76, 101, 269, 437, 440], "white": [76, 90, 92, 102, 166, 167, 188, 200, 236, 328, 353, 361, 372, 401, 409, 427, 453, 458], "adjac": [76, 102, 172, 179, 240, 258, 268, 301, 365, 385, 410, 416, 436, 453, 456], "obei": [76, 106, 313, 324, 328, 343, 403, 443], "mydict": [76, 83, 363, 441], "getvalu": [76, 77, 83, 159, 185, 223, 246, 250, 282, 290, 340, 366, 391, 396, 451, 454], "cheap": [76, 83, 165, 282, 415], "elif": [76, 83, 87, 90, 93, 99, 106, 116, 172, 179, 189, 217, 238, 273, 301, 320, 322, 324, 331, 337, 402, 403, 406, 407, 410, 416, 442, 452], "function_1": [76, 95], "function_2": [76, 95], "method_1": 76, "myvisitor": 76, "visit_a": 76, "dispatch": [76, 82, 83, 85, 98, 99, 103, 137, 145, 166, 186, 215, 234, 290, 303, 365, 394, 446, 448, 451, 453, 457], "method_nam": [76, 77], "visit_": [76, 116], "untrust": [76, 105, 116, 179, 250, 256, 261, 269, 282, 283, 294, 296, 309, 312, 314, 321, 337, 384, 386, 387, 388, 389, 394, 395, 397, 421, 440, 443], "attack": [76, 105, 116, 120, 214, 224, 226, 233, 250, 256, 308, 314, 320, 324, 337, 363, 384, 421, 442, 444, 448, 452, 453, 454], "push": [76, 88, 99, 147, 150, 159, 166, 168, 175, 180, 202, 225, 268, 269, 313, 343, 388, 410, 411, 416, 431, 437, 443, 448, 452], "stackless": [76, 409], "redesign": [76, 443, 444, 453], "lazi": [76, 86, 93, 129, 214, 249, 321, 324, 331, 363, 381, 402, 411, 442, 447, 449, 454, 456], "invent": [76, 103, 148, 259, 343, 409, 440, 444], "nuitka": [76, 83], "inaccess": [76, 242, 277, 278, 372, 403, 437, 440, 453], "jython": [76, 82, 85, 92, 285, 340, 383, 409, 424, 430, 438, 441, 443, 449, 451, 453], "pypi": [76, 82, 87, 98, 101, 177, 285, 289, 321, 331, 366, 375, 384, 400, 409, 424, 429, 434, 440, 442, 444, 447, 449, 450, 451, 453, 454, 455, 456, 457, 458], "blown": [76, 439], "very_long_list_of_fil": 76, "interv": [76, 93, 98, 166, 172, 236, 257, 277, 290, 300, 315, 323, 331, 340, 343, 344, 353, 361, 441, 443, 451, 455, 457], "boehm": 76, "assembl": [76, 83, 93, 105, 180, 320, 347, 403, 442], "transpar": [76, 84, 105, 114, 142, 148, 165, 166, 191, 192, 207, 230, 236, 246, 258, 282, 337, 353, 361, 436, 438, 440, 441, 447, 448, 452, 453, 455, 456], "standalon": [76, 116, 159, 182, 240, 296, 361, 365, 386, 402, 416, 434, 443], "purifi": [76, 431], "thought": [76, 78, 88, 93, 97, 140, 269, 416, 437, 439, 440, 445, 447, 454], "pascal": [76, 78, 83, 93, 327, 415, 416, 417, 440, 444], "cartesian": [76, 144, 249, 320, 443, 446, 454], "coordin": [76, 83, 88, 90, 92, 99, 107, 132, 152, 165, 166, 168, 172, 259, 262, 320, 325, 344, 347, 353, 355, 361, 427, 437, 443, 447, 449, 454], "listdir": [76, 91, 105, 135, 189, 202, 209, 219, 234, 277, 279, 314, 322, 375, 440, 441, 444, 445, 452, 456], "lisp": [76, 83, 93, 439], "clever": [76, 88, 105, 225, 282, 325, 439], "grown": [76, 182, 310], "539294296": 76, "1142331976": 76, "whoever": 76, "unaccept": [76, 215, 282, 318, 388, 411], "forgot": [76, 88, 406, 447, 449], "invari": [76, 83, 92, 93, 175, 185, 225, 282, 363, 405, 407, 415, 419], "referenti": [76, 282], "resid": [76, 99, 189, 219, 259, 277, 295, 304, 322, 407, 437], "listwrapp": 76, "the_list": 76, "98767": 76, "555": 76, "el": [76, 136, 371, 388, 406], "9999999": 76, "1001": [76, 148, 325], "7777777": 76, "333": [76, 83, 417, 419, 442], "ie": [76, 106, 194, 207, 229, 232, 237, 265, 276, 372, 394, 454], "meet": [76, 91, 93, 99, 134, 159, 164, 175, 179, 182, 282, 323, 324, 365, 372, 401, 403, 427, 428, 429, 437, 441, 447], "misbehav": [76, 133], "anomali": [76, 175], "matter": [76, 83, 87, 91, 92, 99, 105, 153, 172, 182, 197, 236, 238, 241, 254, 276, 277, 279, 319, 320, 324, 331, 339, 353, 363, 365, 366, 367, 376, 403, 406, 415, 416, 419, 425, 436, 437, 439, 441, 442, 443, 444, 453], "fool": [76, 83, 437, 441], "unsort": 76, "mutablemap": [76, 85, 151, 157, 173, 312, 324, 363, 403, 443, 445, 452], "disciplin": [76, 197], "stub": [76, 145, 245, 246, 277, 331, 363, 366], "increasingli": [76, 361, 419, 443, 444], "driven": [76, 83, 154, 159, 263, 340, 347, 361, 365, 385, 387, 437, 451], "sloppi": 76, "1970": [76, 78, 140, 143, 172, 344], "messi": [76, 93, 440, 444], "spaghetti": 76, "branch": [76, 144, 180, 258, 285, 301, 332, 340, 357, 415, 416, 437, 442, 443, 447, 458], "jump": [76, 99, 180, 182, 236, 258, 280, 332, 361, 403, 416, 440, 442, 445, 448, 449, 455, 456], "middl": [76, 83, 88, 90, 120, 150, 159, 188, 280, 300, 303, 323, 342, 361, 391, 427, 442, 444, 455], "abus": [76, 337, 384, 411, 451], "sparingli": 76, "unpair": [76, 250], "untermin": [76, 83], "chiefli": 76, "engin": [76, 78, 82, 85, 93, 96, 102, 175, 254, 301, 320, 347, 353, 388, 390, 437, 439, 441, 443, 444, 448, 454], "unmatch": [76, 301, 325, 371, 454], "slash": [76, 102, 210, 214, 243, 247, 276, 277, 278, 279, 295, 337, 354, 371, 383, 397, 398, 416, 436], "mydir": 76, "entranc": 76, "delphi": 76, "volum": [76, 78, 82, 135, 150, 249, 277, 309, 397, 441, 449, 450, 453], "21": [76, 93, 95, 99, 105, 143, 172, 175, 179, 192, 212, 215, 224, 225, 301, 321, 323, 344, 355, 359, 416, 424, 425, 430, 439, 440, 442, 443, 451, 452, 455, 457, 458], "42": [76, 83, 92, 98, 114, 116, 119, 123, 133, 150, 159, 160, 165, 175, 182, 214, 215, 243, 256, 269, 270, 276, 279, 280, 300, 323, 324, 325, 345, 358, 361, 363, 365, 366, 395, 402, 404, 415, 416, 421, 424, 441, 442, 443, 451, 452, 455, 457, 458], "63": [76, 300, 320, 331], "2016": [76, 172, 321, 421, 428, 436, 455, 456], "040070": 76, "enhanc": [76, 78, 85, 90, 93, 99, 103, 164, 215, 234, 242, 256, 269, 321, 328, 340, 353, 361, 363, 405, 410, 422, 437, 438, 439, 441, 442, 445, 446, 447, 448, 451, 452, 453, 454], "experiment": [76, 91, 230, 236, 259, 347, 349, 385, 409, 431, 440, 445, 446, 448, 449, 451, 456, 457], "versu": [76, 172, 182, 238, 241, 255, 300, 405, 451, 457], "off": [76, 82, 85, 88, 90, 93, 98, 99, 101, 102, 106, 114, 145, 157, 165, 166, 172, 179, 180, 189, 197, 198, 205, 214, 221, 225, 232, 236, 249, 255, 256, 257, 262, 276, 278, 287, 290, 300, 313, 317, 324, 331, 339, 340, 344, 345, 353, 361, 365, 366, 372, 395, 403, 407, 410, 411, 415, 416, 420, 423, 425, 427, 430, 431, 437, 438, 439, 440, 441, 442, 443, 445, 451, 453, 454, 455, 457, 458], "english": [76, 83, 99, 102, 105, 143, 148, 230, 276, 342, 344, 361, 409, 410, 444, 445, 454], "highlight": [76, 78, 90, 166, 179, 236, 365, 371, 432, 437, 444, 451], "elabor": [76, 88, 102, 214, 401, 410, 437, 440], "spread": [76, 103, 129, 347, 443], "reorder": [76, 83, 92, 120, 150, 272, 285, 388], "diagnos": [76, 83, 98, 165, 236, 255, 365, 367], "fee": [76, 214, 401], "fie": 76, "fum": [76, 214], "fiefoo": 76, "book": [77, 89, 93, 101, 102, 143, 144, 150, 172, 259, 301, 320, 340, 346, 347, 420, 429, 451], "pyrex": 77, "sip": [77, 371], "cxx": [77, 334, 431], "weav": 77, "pythonrun": [77, 442], "al": [77, 93, 170, 318, 321, 326, 353, 443, 455], "pymap": 77, "arg_format": 77, "seek": [77, 82, 83, 105, 164, 201, 204, 207, 214, 225, 246, 265, 277, 282, 320, 337, 338, 340, 397, 399, 421, 437, 443, 446], "print_error": [77, 451], "stringio": [77, 83, 85, 159, 185, 196, 246, 250, 290, 324, 331, 340, 366, 383, 386, 443, 444, 445, 450, 451, 453, 454], "stdoutcatch": 77, "textiobas": [77, 214, 231, 246, 338, 347, 403, 443, 444, 445, 448], "attrnam": [77, 255, 385], "hackeri": 77, "worth": [77, 99, 182, 212, 249, 256, 257, 269, 361, 409, 410, 420, 434, 437, 438, 439, 442, 450, 454], "gdb": [77, 83, 444], "gdbinit": [77, 444], "br": [77, 166, 410, 445, 452], "_pyimport_loaddynamicmodul": 77, "myscript": [77, 280, 290, 413, 430], "50": [77, 82, 83, 93, 98, 99, 101, 133, 145, 150, 172, 175, 236, 255, 266, 290, 300, 301, 318, 323, 331, 344, 345, 353, 361, 365, 367, 387, 388, 401, 424, 425, 426, 443, 444, 448, 451, 454, 455, 456, 457, 458], "python2": [77, 107, 324, 396, 436, 438, 443, 453], "red": [77, 78, 90, 92, 98, 99, 102, 104, 140, 143, 150, 152, 166, 200, 229, 249, 300, 323, 324, 347, 353, 361, 378, 401, 416, 427, 440, 441, 446, 447, 448, 449, 455], "hat": [77, 78, 401, 426], "devel": [77, 95], "rpm": [77, 437, 440], "debian": [77, 212, 435, 437, 438, 456], "apt": [77, 95, 455], "tripl": [77, 85, 102, 105, 166, 179, 277, 279, 283, 301, 310, 324, 342, 361, 402, 410, 421, 424, 447, 449], "myreadlin": 77, "relink": 77, "linkcc": [77, 431], "bpl": 77, "remark": [78, 259, 361, 367, 437, 441], "power": [78, 83, 85, 87, 91, 92, 100, 157, 165, 175, 200, 214, 224, 249, 276, 277, 280, 282, 301, 308, 318, 324, 332, 337, 361, 366, 367, 388, 401, 402, 406, 415, 419, 420, 424, 427, 440, 441, 443, 444, 445, 447, 448, 451, 452, 457], "beginn": [78, 81, 313], "introductori": [78, 81, 87, 102, 105, 318, 361, 442], "profit": [78, 401], "organ": [78, 82, 86, 93, 98, 99, 102, 182, 245, 246, 321, 401, 407, 440, 458], "psf": [78, 279], "mission": [78, 276], "technologi": [78, 90, 103, 244, 401], "donat": [78, 441], "tax": [78, 83, 301, 424, 427, 440], "exempt": [78, 444], "commerci": [78, 83, 90, 401, 443], "sell": [78, 401, 442], "logo": [78, 229, 361, 401], "trademark": [78, 401], "consult": [78, 82, 83, 85, 90, 93, 98, 102, 144, 150, 157, 165, 172, 219, 255, 256, 259, 277, 301, 304, 314, 317, 318, 320, 322, 331, 344, 346, 383, 399, 407, 421, 428, 436, 437, 439, 440, 441, 442, 443, 444, 445, 449, 458], "summari": [78, 82, 88, 161, 182, 239, 276, 284, 289, 304, 357, 358, 363, 383, 401, 416, 419, 428, 436, 438, 439, 440, 441, 451], "experi": [78, 82, 88, 92, 93, 98, 100, 102, 117, 120, 165, 219, 277, 290, 320, 347, 361, 365, 385, 414, 420, 436, 437, 438, 439, 443, 444, 446, 447, 448, 454, 457], "cwi": [78, 229, 318, 371], "gripe": [78, 179], "remedi": [78, 150, 457], "complaint": [78, 79, 87, 88, 418, 438], "biggest": [78, 90, 101, 359, 445, 451, 452], "amoeba": 78, "bourn": 78, "acut": [78, 105], "foolish": 78, "1989": [78, 172, 443], "christma": 78, "holidai": 78, "feedback": [78, 219, 361, 401, 441], "colleagu": 78, "februari": [78, 143, 172, 344, 410, 438, 449, 450, 451], "post": [78, 82, 92, 93, 98, 99, 106, 136, 165, 182, 183, 230, 231, 234, 257, 280, 321, 331, 347, 371, 372, 375, 395, 415, 429, 431, 436, 437, 439, 443, 449, 450, 451, 452, 457], "usenet": [78, 82, 98], "imap": [78, 183, 237, 269, 287, 371, 440, 441, 457], "tcp": [78, 82, 98, 99, 103, 118, 120, 124, 245, 257, 269, 317, 318, 319, 321, 340, 443, 444, 455, 456], "ip": [78, 98, 99, 120, 140, 232, 234, 255, 257, 318, 319, 321, 340, 371, 372, 437, 443, 451, 452, 454, 456], "earth": [78, 92, 320, 323, 416], "shatter": 78, "bn": 78, "rcn": [78, 91], "0an": 78, "0bn": 78, "0rcn": 78, "unreleas": 78, "repositori": [78, 107, 238, 400, 435, 437, 438, 442, 444], "a0": 78, "4a0": 78, "freeli": [78, 182, 324, 401, 420, 448], "pdf": [78, 98, 105, 224, 300, 323, 331, 457], "comp": [78, 83, 98, 142, 429, 438, 439, 442, 452, 453], "lang": [78, 83, 98, 105, 219, 254, 320, 372, 429, 438, 439, 440, 442, 445], "gatewai": [78, 106, 429, 442], "subscrib": [78, 99, 237, 363, 403], "traffic": [78, 197, 318, 321, 323, 439, 451], "cope": [78, 441], "moder": [78, 83, 93, 102, 212, 276, 287, 301, 439, 440], "five": [78, 85, 88, 99, 140, 175, 257, 259, 276, 277, 301, 319, 320, 321, 331, 371, 390, 437, 443, 452, 457], "rss": [78, 439], "feed": [78, 92, 148, 166, 167, 196, 197, 224, 229, 249, 269, 324, 366, 373, 383, 388, 391, 399, 427, 442, 451], "git": [78, 136, 328, 375, 450, 453, 457], "tracker": [78, 107, 269, 340, 442, 444], "cite": 78, "outdat": [78, 101, 165, 238, 346, 347, 443, 449, 450, 451, 456], "jelk": 78, "boer": 78, "remot": [78, 98, 99, 120, 124, 127, 160, 201, 231, 234, 237, 255, 256, 257, 287, 317, 318, 321, 372, 379, 381, 384, 389, 393, 394, 426, 439, 451, 454], "quarterli": 78, "decemb": [78, 143, 172, 410, 426, 439, 440, 445, 455], "pp": [78, 91, 280, 289, 300, 457], "283": [78, 172], "303": [78, 106, 230, 372], "wiki": [78, 79, 82, 83, 93, 150, 224, 320, 321, 331, 346, 434, 441, 442, 444, 451, 452], "moin": [78, 82, 434, 441], "pythonbook": 78, "bookstor": 78, "infrastructur": [78, 99, 107, 111, 148, 321, 376, 443, 444, 453, 456], "team": [78, 401, 436, 437, 438, 439, 444, 448, 451, 453, 458], "he": [78, 148, 225, 280, 301, 343, 401, 410, 429, 437, 455], "began": [78, 232, 238, 255, 340, 437, 438, 447], "bbc": [78, 156, 414, 454], "comedi": 78, "roughli": [78, 83, 91, 99, 103, 105, 215, 232, 240, 249, 262, 269, 276, 277, 300, 324, 340, 343, 362, 402, 403, 411, 437, 443, 444, 456, 457, 458], "18": [78, 87, 93, 95, 105, 143, 172, 175, 182, 212, 215, 225, 279, 300, 301, 314, 321, 323, 324, 327, 331, 353, 363, 421, 426, 440, 441, 444, 447, 448, 449, 450, 451, 456, 457, 458], "602": [78, 458], "gradual": [78, 85, 438, 439], "million": [78, 105, 323, 345, 416], "sale": [78, 446, 451], "past": [78, 85, 88, 99, 114, 116, 172, 182, 205, 236, 243, 277, 279, 282, 296, 325, 328, 344, 383, 399, 424, 426, 448, 451, 453, 454, 457, 458], "confer": [78, 323, 353, 429, 438, 442], "reveal": [78, 91, 172, 226, 363, 427, 443, 451], "compani": [78, 321, 436, 442, 443, 448], "mailman": [78, 439, 441, 448, 458], "zope": [78, 401, 438, 439, 451], "googl": [78, 81, 82, 98, 106, 379, 394, 442, 443, 444, 449, 452, 457], "yahoo": [78, 173, 442, 443], "lucasfilm": [78, 81], "ltd": [78, 81, 321, 401], "concis": [78, 85, 93, 96, 157, 276, 320, 403, 415, 416, 417, 437, 441, 448, 451, 455], "rational": [78, 85, 199, 202, 214, 224, 277, 310, 311, 315, 318, 337, 344, 378, 403, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 449, 451, 453, 454, 455, 457], "publicli": [78, 120, 401, 437], "frown": [78, 425], "stroke": [78, 105, 439], "upgrad": [78, 85, 106, 107, 124, 130, 199, 231, 236, 375, 428, 431, 436, 439, 440, 444, 448, 451, 453, 455, 456, 457], "disrupt": [78, 126, 449, 450], "student": [78, 104, 109, 164, 215, 323, 327, 361, 363, 415, 436, 448, 451], "importantli": [78, 97, 367, 407], "skill": [78, 83, 361, 421], "decomposit": [78, 99, 364], "concept": [78, 85, 90, 93, 96, 97, 98, 101, 105, 111, 133, 157, 175, 183, 233, 238, 246, 249, 269, 291, 300, 320, 324, 337, 343, 361, 363, 365, 367, 387, 388, 402, 407, 414, 420, 439, 440, 445, 447, 448, 452, 453, 454], "unnatur": 78, "master": [78, 102, 105, 178, 182, 276, 277, 282, 291, 301, 347, 348, 351, 352, 353, 361, 443], "slow": [78, 90, 99, 103, 119, 140, 150, 173, 224, 236, 246, 249, 257, 269, 312, 319, 324, 332, 340, 361, 363, 374, 397, 398, 414, 417, 431, 437, 438, 440, 441, 443, 448, 458], "pace": [78, 323, 438, 443], "decompos": [78, 93, 364, 371], "balanc": [78, 102, 104, 150, 225, 321, 453], "gain": [78, 82, 88, 99, 137, 150, 157, 238, 246, 282, 331, 372, 407, 409, 440, 441, 442, 443, 444, 446, 449, 451, 452, 453, 454, 455, 456, 457], "satisfact": [78, 321], "realist": [78, 82, 93, 328, 366, 386, 399, 441, 442], "teach": [78, 100, 219, 320, 439, 457], "pygam": [78, 450], "__dir__": [78, 92, 200, 214, 243, 366, 403, 443, 453, 456], "__format__": [78, 172, 180, 200, 210, 214, 247, 325, 366, 403, 410, 443, 444, 448, 452, 453, 456], "__reduce__": [78, 200, 282, 366, 442, 457], "__reduce_ex__": [78, 92, 282, 366], "__reversed__": [78, 85, 150, 151, 200, 214, 366, 403, 455], "__sizeof__": [78, 331, 366, 443], "__subclasshook__": [78, 111, 151], "__": [78, 83, 99, 273, 340, 410], "emac": [78, 84, 90, 105, 145, 166, 236, 259, 313, 410, 434, 443], "happi": [78, 88, 92, 120, 440, 457], "educ": [78, 238, 249, 361], "edu": [78, 93, 372, 401, 439, 440], "sig": [78, 97, 105, 107, 120, 135, 148, 224, 243, 277, 315, 355, 434, 437, 438, 440, 444, 454], "ship": [79, 85, 88, 120, 126, 238, 241, 261, 347, 365, 384, 396, 428, 434, 436, 437, 440, 444, 446, 451, 453, 454, 458], "tcl_librari": 79, "tk_librari": 79, "py2ex": [79, 83, 269], "cx_freez": [79, 83, 269], "restructur": [79, 83, 103, 289, 437, 438, 443], "xt": [79, 142, 223, 258], "xtaddinput": 79, "mainloop": [79, 103, 236, 347, 353, 361], "heard": [79, 415], "keyboard": [79, 84, 90, 166, 236, 315, 328, 353, 361, 365, 416, 443], "focu": [79, 103, 172, 178, 197, 236, 337, 347, 353, 361, 371, 426, 444, 449, 452, 455], "takefocu": [79, 353], "school": [81, 175, 323, 327, 440], "colleg": 81, "profession": [81, 323, 414, 427, 436, 446], "nasa": 81, "gui": [81, 83, 93, 105, 236, 276, 320, 322, 331, 346, 347, 365, 414, 443, 452], "hewlett": [81, 437], "packard": [81, 437], "compaq": 81, "hp": [81, 441], "came": [81, 88, 93, 98, 99, 182, 191, 269, 413, 418, 438, 439, 440, 441, 442], "deliber": [81, 83, 85, 88, 114, 276, 287, 316, 324, 362, 365, 401, 430, 453], "hurt": [81, 441], "icon": [81, 347, 436, 439, 440], "uninstal": [81, 199, 203, 359, 428, 434, 436, 453], "mathmodul": 82, "sl": [82, 270], "builtin_module_nam": [82, 238, 331, 425], "chmod": [82, 99, 135, 277, 279, 314, 322, 337, 413, 435, 447, 452], "scriptfil": 82, "755": [82, 99], "env": [82, 99, 105, 135, 157, 189, 277, 279, 324, 328, 372, 375, 396, 413, 423, 428, 430, 435, 436, 440, 441, 448, 457], "cgi": [82, 106, 234, 310, 372, 373, 383, 395, 437, 443, 447, 448, 449, 450, 451, 453, 455, 456, 457, 458], "alex": [82, 440, 443, 444, 447, 448, 449, 450, 454, 455, 457, 458], "rezinski": 82, "sh": [82, 99, 291, 313, 431, 437], "ncurs": [82, 90, 166, 437, 438, 441, 447, 457], "sysv": [82, 437, 438], "colour": [82, 90, 102, 116, 437], "mous": [82, 90, 166, 328, 349, 353, 361, 437, 443], "bsd": [82, 90, 103, 127, 166, 204, 304, 310, 315, 318, 322, 344, 413, 431, 437, 439, 443, 449, 450, 453], "os": [82, 246, 318, 437, 456], "categori": [82, 85, 98, 102, 105, 127, 202, 214, 246, 254, 257, 275, 301, 320, 324, 340, 364, 371, 410, 430, 437, 438, 442, 443, 445, 451, 456], "fancier": [82, 114, 179, 441, 442, 444], "smalltalk": [82, 93, 150, 365, 415, 438], "modular": [82, 85, 98, 214, 452, 457], "delight": 82, "main_log": 82, "tractabl": 82, "ters": [82, 285, 361, 408, 429, 436], "surprisingli": [82, 363], "pleasant": [82, 419, 437, 438, 442], "fun": [82, 157, 215, 361, 363, 365, 448, 455], "flaw": [82, 85, 86, 366, 439, 448, 451], "self_test": 82, "fake": [82, 276, 383], "pure": [82, 83, 93, 95, 97, 99, 101, 116, 150, 165, 172, 175, 212, 214, 219, 224, 236, 249, 290, 315, 331, 335, 340, 384, 402, 403, 415, 417, 430, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 457], "epydoc": 82, "sleep": [82, 93, 99, 117, 118, 119, 120, 123, 127, 128, 129, 131, 132, 135, 156, 157, 166, 245, 269, 304, 307, 315, 320, 328, 340, 344, 443, 447, 448, 452, 454, 455, 456, 457], "thread_task": 82, "sequenti": [82, 99, 103, 119, 153, 207, 224, 246, 269, 282, 290, 324, 340, 366, 403, 427], "001": [82, 172, 214, 249, 259, 290, 344, 365, 410], "semaphor": [82, 95, 110, 118, 201, 269, 277, 331, 340, 427, 443, 451, 452, 457, 458], "threadpoolexecutor": [82, 119, 120, 269, 343, 448, 451, 454, 455, 456, 457, 458], "Or": [82, 83, 88, 92, 93, 98, 99, 103, 116, 139, 140, 189, 225, 236, 273, 275, 276, 280, 314, 344, 355, 363, 371, 388, 405, 406, 407, 414, 440, 442, 443, 448, 452], "job": [82, 90, 98, 99, 102, 105, 114, 122, 143, 149, 156, 190, 196, 212, 219, 269, 277, 282, 325, 328, 372, 407, 414, 417, 437, 443, 451], "current_thread": [82, 269, 319, 343, 447, 450], "130283832797456": 82, "130283824404752": 82, "130283816012048": 82, "130283807619344": 82, "130283799226640": 82, "pvm": 82, "l1": [82, 148, 353], "l2": [82, 148, 353], "d1": [82, 444, 458], "d2": [82, 444, 458], "mass": [82, 92, 172, 437], "mutex": [82, 110, 118, 132, 320, 331], "hindranc": 82, "deploy": [82, 98, 99, 277, 400, 436], "multiprocessor": [82, 270, 285], "insist": [82, 291, 347], "greg": [82, 437, 439, 440, 441, 442, 452, 454, 457], "stein": [82, 437], "grain": [82, 98, 99, 166, 182, 200, 255, 277, 300, 331, 372, 403, 449], "adam": [82, 443, 444, 447, 449, 451, 452, 455, 456, 457, 458], "olsen": [82, 443, 444], "safethread": 82, "exhibit": [82, 236, 246, 277, 324, 415], "sharp": [82, 148], "compens": [82, 290, 455], "creativ": [82, 224], "processpoolexecutor": [82, 119, 120, 269, 343, 451, 454, 456, 457, 458], "judici": [82, 170, 443], "tremend": [82, 416], "3rd": [82, 301, 316, 363, 421, 452], "rate": [82, 225, 273, 290, 323, 373, 377, 455], "unlink": [82, 202, 269, 270, 277, 279, 310, 338, 340, 353, 375, 385, 386, 452], "rmdir": [82, 135, 277, 279, 340, 452], "mkdir": [82, 135, 189, 277, 279, 397, 426, 448, 452, 454], "makedir": [82, 277, 279, 454, 456], "removedir": [82, 277], "rmtree": [82, 135, 277, 279, 340, 378, 448, 449, 450, 452, 456, 457], "old_path": 82, "new_path": 82, "ftruncat": [82, 277, 454], "copyfil": [82, 135, 314, 426, 444, 453, 457], "copytre": [82, 135, 443, 444, 451, 457], "ntf": 82, "hf": 82, "copy2": [82, 314, 451, 452, 454, 457], "hhl": 82, "letter": [82, 84, 90, 102, 105, 136, 140, 148, 150, 166, 167, 175, 179, 182, 217, 254, 255, 276, 278, 279, 280, 292, 301, 321, 324, 325, 342, 353, 364, 365, 371, 372, 397, 405, 410, 416, 417, 424, 427, 437, 439, 441, 442, 443, 444, 445, 448, 449, 450, 452, 454, 455, 456], "homogen": [82, 324, 327, 417, 427], "osx": [82, 165, 453, 456], "ironpython": [82, 85, 92, 285, 409, 443], "pyseri": 82, "mitch": 82, "chapman": [82, 441, 457], "selm": 82, "34a04430": 82, "cf9": 82, "ohioe": 82, "paul": [82, 296, 436, 437, 438, 439, 440, 442, 443, 444, 448, 449, 452, 453, 454, 456, 457, 458], "boddi": [82, 436], "webprogram": 82, "sender": [82, 99, 189, 192, 197, 259, 317], "listen": [82, 103, 120, 234, 256, 257, 295, 311, 317, 318, 319, 321, 323, 340, 361, 383, 394, 440, 443, 444, 453, 454], "fromaddr": [82, 99, 256, 257, 317, 321], "toaddr": [82, 99, 256, 257, 317], "localhost": [82, 99, 103, 106, 189, 231, 234, 236, 256, 257, 269, 287, 295, 311, 317, 319, 321, 372, 394, 395, 426], "sendmail": [82, 99, 102, 190, 197, 301, 317, 426, 451, 454], "sbin": [82, 165, 301], "blank": [82, 83, 88, 93, 114, 145, 157, 164, 166, 175, 179, 182, 185, 194, 196, 197, 231, 234, 236, 256, 280, 283, 316, 321, 324, 333, 361, 371, 383, 388, 411, 412, 416, 421, 424, 441, 454, 456], "einprogress": [82, 201, 202], "progress": [82, 102, 182, 201, 212, 221, 225, 269, 273, 277, 313, 320, 321, 337, 353, 375, 376, 416, 436, 437, 439, 444], "connect_ex": [82, 318, 437], "poll": [82, 120, 126, 131, 269, 277, 311, 315, 319, 321, 322, 328, 441, 443, 451, 452, 454, 458], "eisconn": [82, 201], "twist": [82, 367, 401], "disk": [82, 85, 93, 98, 105, 159, 173, 183, 189, 197, 202, 208, 223, 225, 232, 236, 246, 253, 255, 257, 259, 265, 270, 277, 281, 282, 304, 309, 312, 314, 320, 328, 331, 337, 338, 359, 381, 388, 397, 403, 421, 440, 442, 443, 445, 448, 452], "gdbm": [82, 173, 431, 445, 450], "lightweight": [82, 150, 205, 215, 250, 320, 358, 375, 384, 436, 437, 442, 443, 454, 455], "databaseprogram": 82, "randrang": [82, 300, 426, 441, 447, 449, 451], "uniform": [82, 106, 128, 300, 323, 371, 374, 394, 425, 451], "normalvari": [82, 300], "sdev": 82, "gaussian": [82, 300, 451], "shuffl": [82, 300, 301, 448, 451, 458], "permut": [82, 93, 249, 300, 399, 410, 437, 443, 446, 457], "idle3": 83, "pythonwin": [83, 165, 436, 437], "cool": 83, "pywin32": 83, "activepython": [83, 436], "eric": [83, 90, 164, 166, 279, 306, 388, 417, 437, 438, 441, 443, 444, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457], "pyqt": [83, 434], "scintilla": 83, "trepan3k": 83, "wing": 83, "komodo": 83, "pycharm": [83, 455], "pylint": [83, 101], "pyflak": 83, "sooner": [83, 165, 386, 443], "checker": [83, 101, 114, 166, 172, 182, 276, 324, 363, 402, 403, 441, 442, 447, 448, 449, 450, 454, 455, 457, 458], "mypi": [83, 101, 363, 403, 448, 454, 455], "pyre": 83, "pytyp": [83, 101, 455], "scan": [83, 84, 88, 91, 93, 95, 98, 102, 103, 148, 150, 166, 217, 219, 234, 277, 285, 301, 310, 340, 347, 363, 372, 403, 404, 426, 430, 439, 440, 442, 444, 451, 454], "pyinstal": [83, 269], "pyoxid": 83, "py2app": [83, 434], "shadow": [83, 84, 243, 292, 337, 425, 426, 442, 448, 453, 458], "foobar": [83, 114, 209, 214, 256, 276, 301, 324, 367], "superfici": [83, 416], "nonloc": [83, 85, 116, 150, 214, 243, 330, 402, 404, 406, 410, 415, 416, 445, 455], "clutter": [83, 99, 451], "defeat": [83, 102, 376, 403], "everywher": [83, 103, 340], "mod": [83, 99, 116, 214, 238, 266, 275, 357, 396, 406, 411, 443, 457], "basi": [83, 85, 98, 99, 148, 165, 229, 232, 250, 255, 259, 290, 331, 332, 337, 338, 397, 401, 407, 411, 414, 436, 439, 440, 447, 448, 456], "linter": [83, 116, 363], "dateutil": [83, 172], "pil": [83, 324], "gordon": [83, 103, 437, 440], "mcmillan": [83, 103, 440], "2nd": [83, 249, 301, 347], "1st": [83, 172, 249], "gone": [83, 85, 87, 96, 106, 230, 366, 437, 438, 440, 443, 445, 451, 457], "bite": [83, 102, 276, 367], "neophyt": 83, "memoiz": [83, 133, 215, 438, 455], "_cach": [83, 269, 438], "tast": 83, "3c": [83, 347], "314": 83, "somevar": 83, "wrote": [83, 88, 93, 319, 401, 437, 439, 441, 453], "factor": [83, 101, 105, 151, 182, 224, 249, 276, 296, 324, 363, 365, 405, 406, 416, 439, 444, 452, 456, 458], "mistakenli": [83, 453], "a_list": [83, 358], "some_tupl": 83, "some_int": 83, "se": [83, 232, 347], "func1": [83, 363], "99": [83, 90, 103, 140, 165, 172, 175, 249, 254, 256, 301, 323, 324, 344, 441, 444, 445, 451], "clearest": [83, 440], "changeabl": 83, "func2": 83, "func3": 83, "bundl": [83, 107, 159, 190, 196, 199, 212, 237, 287, 321, 346, 347, 396, 415, 431, 434, 440, 444, 447, 449, 451, 453, 454, 456], "setattr": [83, 85, 91, 114, 170, 214, 238, 276, 378, 415, 425, 437], "func4": 83, "linear": [83, 140, 151, 159, 179, 221, 225, 249, 323, 324, 361, 415, 429, 440, 453, 457], "10e6": 83, "inc": [83, 321, 401, 437, 443], "dec": [83, 84, 93, 172, 210, 212, 426, 439, 440], "deepcopi": [83, 150, 161, 170, 301, 367, 399, 444, 449, 450, 455, 456], "newdict": 83, "olddict": 83, "new_l": 83, "0x16d07cc": 83, "arguabl": [83, 321], "benefici": [83, 99, 133, 401, 454], "gave": [83, 105, 365, 444, 451], "analogi": [83, 407, 453], "cat": [83, 92, 99, 102, 150, 219, 328, 416, 426, 428, 451, 454], "porch": 83, "neighbour": 83, "session": [83, 84, 91, 98, 99, 120, 145, 159, 182, 202, 212, 231, 232, 269, 277, 280, 287, 291, 302, 311, 317, 331, 372, 411, 413, 422, 425, 430, 436, 441, 449, 450, 452, 453, 455, 457], "on_tru": 83, "on_fals": 83, "ulf": 83, "bartelt": 83, "prime": [83, 156, 182, 197, 214, 249, 269, 324, 331, 344, 416, 426, 451, 455, 457], "fibonacci": [83, 215, 416, 424, 425, 448], "mandelbrot": 83, "ru": [83, 207, 440], "iu": [83, 440], "sx": 83, "yc": 83, "xc": [83, 331], "chr": [83, 105, 214, 229, 296, 364, 403, 425, 442, 444], "80": [83, 88, 95, 101, 103, 130, 140, 145, 148, 157, 197, 231, 232, 236, 249, 289, 290, 314, 318, 319, 323, 361, 365, 371, 372, 427, 441, 448, 451, 454, 455], "___": 83, "______": 83, "__________": 83, "_________________": 83, "axi": [83, 144, 262, 353, 416, 447], "____________________________": 83, "kid": 83, "div": [83, 116, 175, 229, 387, 406], "0o10": [83, 214], "0xa5": 83, "165": [83, 255, 323], "0xb2": 83, "178": 83, "clock": [83, 112, 120, 125, 133, 172, 290, 304, 361, 443, 448, 450, 452, 454, 455, 456, 457], "ago": [83, 85, 439], "190": [83, 323, 439], "144": [83, 215, 249, 416, 424, 425, 457], "0144": 83, "0x144": 83, "324": [83, 328], "significantli": [83, 96, 127, 156, 159, 246, 277, 321, 386, 403, 438, 440, 441, 443, 444, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458], "rm": [83, 87, 279, 313], "rf": [83, 201, 313, 410], "eras": [83, 90, 99, 166, 324, 421], "09": [83, 99, 144, 198, 255, 262, 314, 321, 423], "oct": [83, 93, 99, 172, 200, 212, 214, 321, 324, 325, 331, 345, 403, 425, 439, 443, 445], "fanci": [83, 90, 99, 416, 421, 440, 444], "04d": [83, 215], "3f": [83, 150, 421, 451, 457], "sio": 83, "yello": 83, "tounicod": [83, 115, 148], "paren": [83, 116, 164, 236, 406, 442], "get_input": 83, "do_foo": [83, 145], "do_bar": [83, 145], "foo_inst": 83, "do_": [83, 145, 234], "opnam": [83, 180, 340, 453], "myfunc": [83, 88, 99, 180, 301, 395], "fname": [83, 105, 159, 179, 256, 359, 453], "rstrip": [83, 127, 130, 131, 177, 236, 270, 324, 426, 440], "workaround": [83, 170, 182, 280, 321, 324, 367, 378, 397, 424, 448, 449, 452, 457], "tough": 83, "dive": 83, "focus": [83, 97, 106, 442, 448, 451, 453], "hot": [83, 236, 290, 448], "spot": [83, 342], "benchmark": [83, 215, 290, 430, 437, 438, 440, 441, 442, 444, 445, 446, 448, 449, 452, 453, 454, 457, 458], "toward": [83, 139, 175, 182, 185, 194, 207, 210, 211, 214, 255, 262, 324, 331, 342, 344, 361, 403, 415, 438, 440, 442, 443, 450, 453, 458], "sprinkl": [83, 409], "outweigh": 83, "detriment": 83, "confid": [83, 101, 300], "devot": [83, 102, 433], "tip": [83, 214, 236, 425, 437, 444], "ineffici": [83, 246, 277, 332, 359, 448, 449, 450, 454], "quadrat": [83, 151, 179, 324, 384, 444, 447], "accumul": [83, 85, 88, 90, 93, 114, 175, 182, 215, 249, 276, 282, 290, 300, 313, 357, 365, 416, 419, 438, 451, 452, 457], "my_str": [83, 449], "my_bytes_object": 83, "penultim": 83, "activest": [83, 429, 434, 437, 451], "recip": [83, 92, 99, 106, 140, 179, 189, 238, 262, 277, 312, 324, 331, 388, 401, 429, 449, 450, 451], "52560": 83, "mylist": [83, 170, 303, 451], "variat": [83, 91, 92, 102, 150, 172, 182, 259, 277, 287, 321, 328, 333, 403, 425, 436, 442], "keep_funct": 83, "keep_condit": 83, "fastest": [83, 85, 223, 269, 301, 345, 361, 399, 426, 443, 451, 457], "numpi": [83, 115, 214, 270, 282, 323, 419, 425, 428, 436, 442, 443, 448, 451, 452, 454], "con": [83, 320], "lisp_list": 83, "analogu": [83, 269], "car": [83, 323], "cdr": 83, "replic": [83, 93, 197, 269, 436, 441, 444], "suffic": [83, 214, 365, 419], "exemplar": 83, "randal": [83, 104], "schwartz": [83, 104, 443], "metric": [83, 350], "isort": 83, "list1": 83, "list2": 83, "embodi": [83, 196, 385], "refin": [83, 456], "mboxmailbox": 83, "maildirmailbox": 83, "outlookmailbox": 83, "mere": [83, 84, 85, 159, 172, 182, 214, 270, 276, 315, 328, 331, 361, 401, 402, 445], "class1": [83, 366, 367, 439], "class2": [83, 366, 367, 439], "upperout": 83, "outfil": [83, 114, 134, 250, 276, 357, 427, 446, 451], "_outfil": 83, "redefin": [83, 137, 151, 229, 238, 319, 403, 415, 440, 443], "trickier": [83, 276], "super": [83, 85, 92, 99, 102, 111, 114, 126, 150, 159, 170, 180, 192, 202, 214, 238, 269, 279, 282, 294, 304, 347, 359, 361, 367, 372, 375, 378, 403, 415, 425, 439, 443, 445, 447, 449, 453, 455], "handi": [83, 90, 91, 92, 101, 102, 103, 109, 143, 157, 165, 179, 276, 324, 366, 413, 414, 416, 420, 425, 437, 441], "basealia": 83, "getcount": [83, 275, 458], "rebind": [83, 216, 411, 415, 441], "tightli": [83, 405, 409], "cout": 83, "mangl": [83, 185, 214, 303, 405, 410, 411, 415, 453], "_classname__spam": [83, 415], "privaci": [83, 321, 374], "children": [83, 98, 100, 116, 126, 225, 255, 269, 277, 279, 294, 296, 304, 340, 347, 353, 361, 365, 366, 367, 385, 386, 387, 388, 397, 437, 444, 456], "vanish": [83, 148, 225, 363], "inconveni": [83, 88, 232, 243, 367, 388], "reproduc": [83, 106, 116, 190, 223, 323, 328, 340, 372, 392, 401, 427, 431, 451, 456, 457], "patholog": [83, 419], "13901272": 83, "13891296": 83, "inadvis": 83, "500": [83, 106, 145, 172, 175, 203, 212, 230, 323, 324, 374, 383, 425, 427, 440, 442, 447], "thon": [83, 424], "_sentinel": 83, "late": [83, 90, 101, 179, 285, 437], "firstofmonthd": 83, "namedint": 83, "xlat": 83, "titlestr": [83, 361], "isalnum": [83, 167, 301, 324], "2012": [83, 90, 105, 212, 452, 458], "blog": [83, 367, 442], "rock": [83, 105, 114], "princip": [83, 116, 232, 321, 324, 401, 427, 446, 451], "cached_properti": [83, 91, 215, 324, 449, 457], "lru_cach": [83, 150, 209, 215, 249, 451, 452, 454, 457], "maxsiz": [83, 88, 91, 128, 150, 209, 214, 215, 249, 269, 285, 298, 324, 331, 340, 347, 403, 425, 445, 451, 457], "ag": [83, 91, 104, 150, 215, 232, 233, 320, 321, 426, 439, 440, 441, 444, 451], "weather": 83, "govern": [83, 85, 99, 170, 175, 183, 371, 394, 401, 451], "websit": [83, 106, 173, 224, 372, 401, 409, 434, 451], "station_id": 83, "_station_id": 83, "current_temperatur": 83, "hourli": 83, "longitud": [83, 325], "latitud": [83, 325], "station": 83, "historic_rainfal": 83, "mm": [83, 172, 237, 265, 324, 344, 371], "rainfal": 83, "change_st": 83, "cm": [83, 133, 159, 340, 365], "__pycache__": [83, 238, 279, 293, 331, 425, 430, 448, 451, 457], "xyz": [83, 114, 255, 256, 324, 365, 451], "cfile": [83, 293], "bar_var": 83, "foo_var": 83, "jim": [83, 93, 99, 290, 409, 437, 441, 443, 451, 455], "roskind": [83, 290], "strang": [83, 110, 225, 342, 371, 403, 416, 436, 438, 442, 443], "matthia": [83, 444, 447, 449, 450, 452, 455, 456, 457], "urlich": 83, "import_modul": [83, 99, 214, 256, 306, 340, 403, 407, 411, 444, 449, 452], "modnam": [83, 415, 425, 442, 449, 455], "proof": [83, 93, 192, 269, 437, 457], "paradox": [83, 440], "0x7352a0": 83, "0x4198d0": 83, "yournam": 84, "recognis": [84, 164, 202, 256, 284, 313, 320, 366, 403], "hit": [84, 90, 137, 165, 202, 215, 236, 280, 321, 347, 357, 366, 377, 431, 442, 447, 451], "v3": [84, 318], "d48eceb": 84, "19": [84, 87, 93, 98, 99, 102, 105, 133, 143, 150, 165, 172, 175, 182, 198, 212, 225, 249, 277, 321, 323, 324, 325, 398, 440, 441, 442, 443, 444, 447, 451, 452, 457, 458], "2017": [84, 278, 321, 410, 431], "06": [84, 99, 172, 234, 255, 314, 424, 442, 455], "04": [84, 87, 90, 172, 325, 327, 344, 400, 423, 442, 444, 447, 455, 456], "45": [84, 88, 93, 139, 150, 157, 175, 255, 269, 300, 318, 361, 363, 440, 441, 442, 447, 457, 458], "1900": [84, 172, 344, 410, 443, 451], "credit": [84, 117, 158, 236, 249, 331, 402, 423, 425, 448, 457], "strongest": [84, 444], "hellohellohello": 84, "menu": [84, 85, 90, 347, 361, 403, 434, 436, 442, 446, 447, 451, 455, 456, 457, 458], "desktop": [84, 105, 379, 436], "pathext": [84, 314, 375, 436, 449, 453], "suddenli": 84, "puzzl": [84, 442], "misconfigur": [84, 98, 236], "viru": 84, "scanner": [84, 301, 336, 355, 453], "magnitud": [84, 172, 175, 214, 250, 262, 324, 325, 384, 419, 437, 448, 452], "mcafe": 84, "offend": [84, 404, 418, 438], "pyinit_foo": 84, "__declspec": 84, "app": [84, 99, 103, 236, 257, 268, 331, 347, 375, 383, 436, 443, 444, 451], "undocu": [84, 145, 215, 226, 255, 261, 280, 340, 363, 365, 397, 447, 448, 449, 450, 452, 453, 454, 455, 456, 458], "nn": 84, "33": [84, 140, 150, 165, 167, 249, 269, 270, 301, 331, 366, 419, 425, 426, 439, 440, 441, 451, 457, 458], "greatli": [84, 150, 328, 378, 426, 437, 438, 439, 440, 443, 444, 445, 449, 452, 454, 457], "loadlibraryex": [84, 165, 457], "getprocaddress": 84, "grungi": 84, "leo": [84, 142], "initleo": 84, "initleoc": 84, "initmyappc": 84, "myapp": [84, 98, 99, 157, 224, 347, 396, 454], "pythonnn": 84, "standpoint": 84, "_resultobj": 84, "mult": [84, 116, 406], "typemap": [84, 257], "newbi": [84, 442, 444], "wxpythonwindow": 84, "connect": [84, 90, 91, 96, 99, 103, 106, 117, 118, 124, 130, 135, 150, 159, 196, 201, 202, 212, 230, 231, 232, 234, 236, 237, 246, 255, 257, 270, 276, 277, 282, 287, 291, 309, 310, 314, 315, 317, 319, 321, 327, 328, 331, 340, 343, 347, 361, 363, 367, 372, 381, 383, 384, 386, 389, 391, 394, 401, 405, 418, 421, 423, 424, 430, 431, 436, 437, 441, 442, 443, 444, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457], "_any_": 84, "radio": 84, "batch": [84, 98, 102, 120, 249, 282, 328, 414, 427, 436, 449, 454], "kbhit": [84, 268], "getch": [84, 90, 166, 268], "echo": [84, 87, 90, 109, 120, 124, 131, 160, 166, 218, 236, 250, 268, 277, 282, 311, 313, 318, 328, 339, 365, 405, 423, 425, 443], "curli": [85, 88, 105, 325, 364, 374, 405, 410, 417, 443, 444, 455], "decor": [85, 91, 92, 99, 111, 116, 134, 150, 151, 165, 170, 214, 215, 243, 303, 324, 340, 365, 395, 402, 403, 404, 405, 406, 442, 444, 445, 447, 448, 451, 452, 453, 456, 457, 458], "complement": [85, 102, 301, 324, 361, 403, 447, 452, 456, 458], "duck": [85, 324, 363, 443, 453], "subtli": [85, 90, 103, 164, 185, 194, 407], "__annotations__": [85, 91, 170, 180, 214, 215, 243, 363, 402, 403, 411, 416, 445, 447, 451, 453, 454, 455, 457, 458], "484": [85, 116, 324, 363, 402, 403, 411, 416, 447, 448, 449, 455, 456, 457], "526": [85, 99, 116, 170, 363, 402, 411, 447, 456, 457], "362": [85, 95, 243], "__aenter__": [85, 159, 180, 365, 366, 367, 402, 403], "__aexit__": [85, 133, 159, 180, 365, 366, 367, 402, 403], "492": [85, 151, 243, 402, 403, 405, 455], "525": [85, 151, 243, 331, 405], "bdfl": 85, "benevol": [85, 437], "life": [85, 88, 101, 157, 215, 270, 282, 320, 337, 385, 397, 416, 436, 437, 443, 457], "bytesio": [85, 185, 196, 223, 224, 246, 259, 282, 324, 338, 355, 396, 400, 443, 445, 450, 451, 454], "gzipfil": [85, 223, 337, 444, 446, 447, 449, 451, 454, 458], "argument1": 85, "argument2": 85, "argumentn": 85, "1j": [85, 144, 214, 250, 366], "__enter__": [85, 99, 180, 246, 269, 315, 324, 337, 363, 365, 366, 381, 402, 403, 442, 443, 444, 448, 452, 455], "__exit__": [85, 99, 159, 180, 246, 269, 315, 324, 337, 340, 365, 366, 381, 402, 403, 442, 443, 444, 455], "343": [85, 108, 159, 402, 403, 421, 424, 445], "laid": [85, 107, 362], "multidimension": [85, 324], "sugar": [85, 99, 159, 214, 233, 238, 249, 320, 416, 445], "perl": [85, 93, 102, 104, 232, 301, 414, 419, 427, 437, 441, 442], "dictview": [85, 324, 457], "quack": [85, 99, 443], "emphas": [85, 93, 182, 270, 402], "emploi": [85, 133, 269, 277, 387, 407, 452], "eafp": [85, 277], "forgiv": [85, 437], "character": [85, 331], "lbyl": 85, "498": [85, 410, 453], "mediat": 85, "pipe": [85, 99, 102, 103, 119, 124, 125, 127, 131, 179, 197, 201, 202, 204, 246, 277, 310, 311, 314, 315, 322, 328, 331, 337, 340, 375, 430, 441, 443, 444, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456], "synonym": [85, 90, 99, 105, 110, 166, 214, 276, 282, 301, 322, 347, 385, 410, 443], "302": [85, 106, 214, 230, 231, 234, 238, 253, 284, 306, 331, 372, 398, 407, 442, 443, 446, 452], "420": [85, 238, 407], "75": [85, 90, 99, 179, 182, 269, 323, 361, 424, 426, 440, 441, 443, 444, 449, 455, 456, 457, 458], "downward": 85, "sum_two_numb": [85, 116], "_featur": [85, 108, 214], "8192": [85, 103, 212, 214, 231, 383], "81": [85, 100, 249, 269, 300, 323, 355, 417, 421, 424, 426, 457], "285": [85, 415], "singledispatch": [85, 215, 448, 453, 456], "443": [85, 130, 231, 321, 453], "parameter": [85, 166, 182, 320, 324, 362, 363, 403, 447, 458], "483": [85, 363, 454], "afford": [85, 437], "computation": 85, "intens": [85, 119, 166, 258, 277, 278, 452], "finer": [85, 98, 120, 255, 277, 419, 449, 456, 457], "granular": [85, 97, 99, 238, 277, 331, 426], "suffer": [85, 365, 366, 419, 438, 439, 440], "overcom": [85, 343, 451], "costlier": 85, "unequ": [85, 175, 279, 324, 403, 405, 441, 442, 445, 452], "blurri": 85, "shorter": [85, 102, 191, 214, 224, 249, 276, 283, 308, 327, 405, 414, 417, 421, 437, 438, 441, 443, 444, 449, 451], "collat": [85, 254, 320, 448], "strxfrm": [85, 104, 254], "nsmallest": [85, 214, 215, 225, 441, 442], "nlargest": [85, 214, 215, 225, 441, 442], "groupbi": [85, 93, 215, 249, 275, 441, 446], "lambda": [85, 99, 104, 116, 120, 127, 137, 140, 150, 157, 170, 179, 215, 224, 243, 249, 269, 282, 300, 320, 324, 337, 342, 345, 362, 365, 366, 367, 375, 395, 402, 403, 406, 410, 417, 437, 438, 439, 441, 442, 443, 445, 453, 454, 458], "attrgett": [85, 93, 104, 140, 275, 441, 442, 443, 451, 454], "itemgett": [85, 104, 140, 249, 275, 441, 442, 454, 457], "methodcal": [85, 104, 275, 443, 454], "leap": [85, 98, 102, 143, 172, 344], "setlocal": [85, 246, 254, 391, 427, 448, 450, 454], "new_local": 85, "cp1252": [85, 148, 423], "getencod": [85, 90, 105, 148, 164, 166, 214, 246, 254, 391, 436, 448, 450], "akin": [85, 240, 324, 407], "04x": [85, 105], "load_modul": [85, 238, 398, 407, 440, 447, 449, 450, 453, 455], "defaultdict": [85, 324, 363, 442, 451], "ordereddict": [85, 157, 164, 243, 324, 363, 444, 446, 448, 451, 454, 455, 457, 458], "metapathfind": [85, 238, 239, 331, 447, 448, 452, 453, 456], "organiz": [85, 321, 403], "localtim": [85, 98, 172, 192, 198, 237, 255, 344, 438, 439, 449, 450, 452], "float_info": [85, 262, 324, 425, 443], "1024": [85, 105, 164, 175, 204, 224, 256, 291, 318, 319, 321, 324, 359, 410, 426], "max_exp": [85, 331], "islic": [85, 93, 150, 214, 249, 442, 456], "innermost": [85, 111, 159, 182, 296, 331, 363, 405, 415, 416, 453], "versatil": [85, 415, 424, 427], "__slots__": [85, 150, 170, 214, 215, 243, 282, 378, 439, 444, 457], "position": [85, 116, 240, 366, 453, 457], "posonly1": 85, "posonly2": 85, "positional_or_keyword": [85, 243], "kw_only1": 85, "kw_only2": 85, "pathentryfind": [85, 238, 398, 407, 447, 448, 452, 453, 456], "fspath": [85, 223, 277, 279, 455], "fsencod": [85, 277, 279, 331, 340, 451, 455], "519": [85, 359], "consensu": [85, 437], "dissent": [85, 437], "opinion": [85, 89, 437, 442], "provision": [85, 186, 192, 194, 197, 239, 331, 450, 453, 454, 455, 456, 457], "gratuit": 85, "uncov": [85, 456], "resort": [85, 98, 140, 173, 254, 255, 338, 439], "evolv": [85, 97, 245, 256, 407, 415, 417], "411": [85, 106, 230, 255, 331, 359], "nicknam": [85, 157, 429], "coin": [85, 300], "distant": [85, 421], "abbrevi": [85, 105, 143, 166, 172, 175, 254, 276, 280, 290, 328, 344, 358, 388, 427, 430, 453, 454, 455], "unfamiliar": [85, 217, 255, 276, 442, 443], "cleaner": [85, 101, 324, 437, 446, 447, 452, 454], "3155": 85, "getrefcount": [85, 331, 425], "elimin": [85, 91, 98, 101, 150, 175, 179, 238, 239, 249, 250, 259, 278, 279, 283, 361, 415, 417, 427, 431, 441, 448, 452, 457], "richer": [85, 455], "abracadabra": [85, 91, 150, 269, 324, 325, 417, 441], "variable_nam": 85, "0000": [85, 96, 105, 148, 172, 192, 198, 247, 324, 344, 403, 437, 451, 452], "10ffff": [85, 148, 403, 452], "recreat": [85, 92, 148, 179, 281, 318, 371, 375, 378, 403, 419, 452, 456], "datastream": 85, "quotat": [85, 148, 328, 421, 424, 443], "apostroph": [85, 324, 446], "unescap": [85, 102, 179, 227, 228, 301, 371, 392, 410, 453, 458], "span": [85, 97, 102, 116, 143, 157, 164, 182, 209, 229, 265, 301, 324, 325, 402, 424, 442, 443, 449, 452, 454, 455], "remove_gray_shad": 85, "refactor": [85, 93, 116, 365, 366, 367, 441, 448, 453, 454, 455, 456], "get_type_hint": [85, 363, 448, 456, 458], "univers": [85, 92, 164, 172, 214, 224, 237, 238, 246, 285, 324, 337, 344, 365, 371, 374, 397, 415, 431, 434, 441, 442, 443, 448, 453, 455, 456, 458], "macintosh": [85, 148, 410, 437, 440], "278": 85, "3116": [85, 445, 446], "splitlin": [85, 145, 179, 189, 197, 324, 342, 358, 443, 451, 453], "interf": [85, 175, 269, 332, 345, 405, 453], "zen": [85, 109], "philosophi": [85, 175, 185, 426, 445], "larri": [86, 88, 323, 444, 446, 447, 452, 453, 457, 458], "hast": [86, 88, 444, 446, 447, 452, 453, 457, 458], "get_annot": [86, 243, 447], "viabl": 86, "inadvert": [86, 159, 243, 443, 453, 454], "ann": 86, "exot": [86, 97, 250, 370, 439], "malform": [86, 116, 148, 175, 188, 214, 231, 246, 259, 278, 325, 441, 443, 451], "nutshel": [86, 88], "update_wrapp": [86, 91, 215, 243, 442, 453], "unwrap": [86, 243, 321, 371, 453], "__wrapped__": [86, 91, 214, 215, 243, 447, 448, 451, 453, 454], "__globals__": [86, 243, 403, 445, 447], "theoret": [86, 88, 93, 175, 226], "604": [86, 324, 363], "type_check": [86, 238, 276, 363, 455], "fn": [86, 99, 105, 156, 189, 255, 375, 383, 396, 397, 445, 454, 457], "paragraph": [86, 88, 98, 133, 186, 236, 250, 276, 277, 279, 321, 324, 342, 388, 395, 401, 403, 416, 427, 437, 440], "tshepang": 87, "mbambo": 87, "fulfil": [87, 106, 230, 234, 321, 338, 438, 440, 451], "explor": [87, 98, 104, 106, 157, 180, 229, 236, 277, 361, 365, 375, 388, 403, 422, 436, 443, 448, 451], "devguid": [87, 453], "prog": [87, 99, 276, 301, 375, 426, 451], "ctypes_configur": 87, "demo": [87, 99, 236, 383, 386, 395, 426, 440, 443, 451], "dotview": 87, "lib_pypi": 87, "drwxr": [87, 212], "xr": [87, 212, 314, 451], "wena": 87, "4096": [87, 103, 105, 110, 150, 212, 214, 224, 318, 324, 343, 451], "feb": [87, 93, 172, 439], "51": [87, 99, 100, 300, 361, 417, 443, 447], "rwxr": [87, 314], "535": 87, "05": [87, 99, 128, 144, 172, 249, 262, 301, 321, 327, 344, 427, 442, 443, 455], "rw": [87, 92, 99, 212, 314, 320, 328, 451, 454, 455, 456], "741": 87, "01": [87, 99, 103, 139, 172, 175, 198, 214, 224, 229, 255, 314, 318, 321, 324, 344, 397, 400, 405, 426, 436, 438, 440, 441, 442, 451, 452, 455, 456], "cftuvsux": 87, "cp": [87, 91, 148, 276, 277, 444, 454], "argumentpars": [87, 99, 150, 179, 189, 217, 291, 375, 426, 444, 449, 451, 454, 456], "parse_arg": [87, 99, 150, 179, 189, 217, 276, 291, 375, 426, 440, 444, 451], "shorten": [87, 173, 303, 342, 447, 451, 452, 453, 458], "add_argu": [87, 99, 150, 179, 189, 217, 291, 375, 426, 444, 451], "willing": [87, 276, 321, 419, 458], "helpfulli": 87, "store_tru": [87, 114, 179, 217, 276, 291, 375, 444, 451], "spirit": 87, "brought": [87, 103, 214, 282, 440], "vv": [87, 114, 430, 446, 455], "vvv": [87, 114, 372], "vvvv": 87, "nonetyp": [87, 88, 158, 182, 215, 270, 300, 301, 362, 363, 447, 448], "surfac": [87, 277, 361, 449], "greedili": 87, "add_mutually_exclusive_group": [87, 114], "opposit": [87, 93, 102, 105, 150, 198, 301, 361, 403, 437, 443, 445], "sake": [87, 88, 90, 99, 122, 194, 225, 277, 313, 407, 440], "vq": 87, "conclud": [87, 93, 98, 102], "slight": [87, 99, 204, 232, 437, 440, 451], "babel": [87, 219], "pybabel": [87, 219], "thorough": [87, 301, 318, 451], "overwhelm": [87, 276], "436": [88, 301], "checksum": [88, 139, 318, 337, 397, 399], "mismatch": [88, 182, 202, 205, 255, 301, 316, 321, 388, 402, 438, 440, 442, 444, 454], "regener": [88, 190, 293, 407, 431, 444, 449, 450, 454, 455], "_end_": 88, "_start_": 88, "walk": [88, 114, 116, 135, 185, 189, 193, 194, 196, 276, 277, 279, 328, 347, 358, 439, 443, 445, 449, 452, 454], "srcdir": [88, 431, 451], "cconvert": 88, "py_default": 88, "c_default": 88, "c_ignored_default": 88, "impl": [88, 386], "impl_by_refer": 88, "parse_by_refer": 88, "farther": 88, "walkthrough": 88, "checkout": [88, 114, 436, 444], "trunk": [88, 442, 443], "_pickl": 88, "pickler": [88, 162, 282, 283, 446, 452, 457], "cut": [88, 102, 144, 214, 236, 323, 344, 426, 441, 443, 447], "junk": [88, 179, 269, 328], "margin": 88, "wider": [88, 148, 172, 261, 363, 441, 453], "257": 88, "hygien": 88, "picklerobject": 88, "pickler_typ": 88, "name_of_paramet": 88, "multicharact": 88, "infer": [88, 114, 151, 182, 214, 215, 246, 256, 269, 284, 344, 358, 363, 427, 448, 455], "outdent": 88, "luck": [88, 385], "_pickle_pickler_dump": 88, "87ecad1261e02ac7": 88, "552eb1c0f52260d9": 88, "retri": [88, 102, 106, 202, 214, 257, 268, 277, 310, 311, 315, 318, 321, 328, 372, 404, 416, 439, 440, 444, 448], "semi": [88, 107, 269, 276, 354], "__pickle_pickler_dump_methoddef": 88, "__pickle_pickler_dump": 88, "__pickle_pickler_dump__doc__": 88, "rerun": [88, 407, 445], "reiter": 88, "weird": [88, 114], "return_typ": [88, 406], "your_function_impl": 88, "da39a3ee5e6b4b0d3255bfef95601890afd80709": 88, "_pickle_pickler_dump_impl": 88, "3bd30745bf206a48f8b576a1da3d90f55a0a4187": 88, "issue3664": 88, "segfault": [88, 166, 441, 442, 455, 456], "picklingerror": [88, 282], "_pickler_clearbuff": 88, "pickler_method": 88, "__pickle_pickler_clear_memo_methoddef": 88, "_py_id": 88, "new_unique_py_id": 88, "regen": [88, 431], "congratul": 88, "collid": [88, 269, 301, 372, 411], "_impl": 88, "pickler_dump": 88, "pickler_dumper_impl": 88, "file_obj": [88, 437, 440], "fix_import": [88, 282, 446], "addch": [88, 90, 166], "group_": 88, "monoton": [88, 120, 125, 128, 159, 179, 307, 323, 344, 415, 440, 448, 452, 454], "favor": [88, 151, 214, 231, 277, 321, 324, 340, 363, 372, 441, 443, 445, 447, 448, 449, 450, 451, 453, 454, 455, 457], "clearer": [88, 93, 182, 276, 324, 437, 438, 439, 440, 441, 443, 456], "mandat": [88, 185, 194, 237, 250, 301, 344, 455], "subclass_of": 88, "parameter_nam": 88, "_length": 88, "unsigned_short": 88, "perfectli": [88, 93, 103, 185, 276, 405, 436], "unsigned_char": 88, "name_of_encod": 88, "unsigned_int": 88, "unsigned_long": 88, "unsigned_long_long": 88, "pysomething_typ": 88, "name_of_c_funct": 88, "rwbuffer": 88, "robuff": 88, "unsigned_": 88, "preprocess": [88, 157, 164, 246, 371], "unreason": [88, 442], "bat": [88, 102, 279, 340, 375], "yep": 88, "nope": [88, 157, 416], "nada": 88, "perspect": [88, 238, 241, 383], "max_widget": 88, "preload": [88, 269, 431], "new_funct": 88, "c_basenam": 88, "existing_funct": 88, "sorri": [88, 416], "proposit": 88, "__ignored_unused_variable__": 88, "self_convert": 88, "thereof": [88, 195, 214, 256, 257, 277, 340, 343, 401, 404, 418], "picklerobject_convert": 88, "zlibmodul": 88, "zlib_compress_compress_impl": 88, "compobject": 88, "6731b3f0ff357ca6": 88, "04d00f65ab01d260": 88, "zlibstat": 88, "__text_signature__": 88, "setattro": 88, "_threadmodul": 88, "local_setattro": 88, "thread_modul": 88, "thread_module_st": 88, "get_thread_st": 88, "573": [88, 458], "converternam": 88, "_convert": 88, "converter_init": 88, "ssize_t_convert": 88, "da39a3ee5e6b4b0d": 88, "35521e4e733823c7": 88, "grep": [88, 95, 99, 100, 236, 328, 437], "creturnconvert": 88, "meth_o_sampl": 88, "interspers": [88, 99, 214, 276], "boon": 88, "rearrang": [88, 150, 324, 414, 427, 437, 440, 442, 444, 447, 458], "hamper": 88, "subsect": [88, 90, 102, 115, 120, 131, 236, 324, 405, 416], "methoddef_defin": 88, "seven": [88, 143, 175, 233, 367, 451], "docstring_prototyp": 88, "docstring_definit": 88, "impl_prototyp": 88, "parser_prototyp": 88, "parser_definit": 88, "impl_definit": 88, "methoddef": 88, "_prototyp": 88, "_definit": 88, "_defin": 88, "destin": [88, 98, 105, 166, 178, 197, 201, 231, 255, 256, 257, 259, 265, 268, 276, 277, 314, 318, 324, 335, 337, 375, 441, 443, 449, 452, 453, 457], "basenam": [88, 95, 99, 114, 173, 182, 276, 278, 279, 347, 375, 397], "splitext": [88, 99, 189, 278, 279, 337, 427, 443, 455], "reconfigur": [88, 214, 246, 456], "preset": [88, 258, 280, 285, 337], "dirnam": [88, 91, 212, 259, 277, 278, 279, 284, 340, 365, 376, 431, 456], "subcommand": [88, 99, 114, 428, 444, 451], "file_templ": 88, "basename_root": 88, "basename_extens": 88, "line_prefix": 88, "line_suffix": 88, "have_functionnam": 88, "module_functionnam": 88, "functionnam": 88, "module_functionname_methoddef": 88, "_methoddef": 88, "ticklish": 88, "posixmodul": 88, "12357": 88, "text_signatur": 88, "verbatim": [88, 182, 328, 384, 401], "codeobject": [88, 403, 448], "co_argcount": [88, 243, 403], "co_posonlyargcount": [88, 243, 403, 457], "earliest": [88, 133, 143, 172, 179, 344, 418], "kick": [88, 99], "ahead": [88, 249, 344, 379, 385, 406, 425, 441], "foomodul": 88, "139": [88, 175, 359, 439], "migrat": [89, 115, 239, 240, 243, 363, 376, 385, 411, 442, 443, 446, 447, 448, 449, 450, 452, 453], "py3c": 89, "kuchl": [90, 93, 102, 105, 166, 437, 438, 439, 440, 441, 442, 443, 444, 453], "raymond": [90, 91, 93, 104, 166, 327, 402, 437, 438, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "paint": [90, 166, 361, 439], "vt100": [90, 166], "cursor": [90, 145, 150, 164, 166, 236, 282, 302, 347, 353, 367, 442, 443, 446, 451, 455, 457, 458], "quirk": [90, 324, 409, 415, 417, 434, 447, 453], "nich": 90, "kernel": [90, 110, 120, 126, 245, 249, 265, 277, 310, 314, 315, 318, 321, 331, 334, 338, 343, 437, 442, 447, 452, 453, 455, 457], "checkbox": [90, 436], "urwid": 90, "AT": [90, 354], "freebsd": [90, 110, 127, 201, 204, 265, 277, 291, 304, 310, 318, 331, 340, 343, 344, 442, 448, 453, 456, 458], "carri": [90, 91, 98, 148, 173, 175, 253, 255, 262, 269, 276, 300, 320, 324, 365, 384, 385, 401, 404, 410, 411, 417, 442, 443, 444, 454, 457], "proprietari": [90, 323], "unicurs": 90, "addstr": [90, 166], "mvaddstr": 90, "mvwaddstr": 90, "initscr": [90, 166], "stdscr": [90, 166, 443], "noecho": [90, 166], "instantli": [90, 277, 361], "cbreak": [90, 166, 360], "multibyt": [90, 166, 197, 324, 452], "key_left": [90, 166], "keypad": [90, 166], "nocbreak": [90, 166], "endwin": [90, 166], "mess": [90, 114, 276, 415, 421, 439], "buggi": [90, 103, 437, 439, 449, 450, 452, 453], "uncaught": [90, 320, 331, 343, 405, 438, 457], "refresh": [90, 150, 166, 347, 353, 442, 458], "getkei": [90, 166], "funni": 90, "rectangular": [90, 144, 361], "redraw": 90, "newwin": [90, 166], "begin_x": [90, 166], "begin_i": [90, 166], "height": [90, 166, 170, 236, 277, 301, 323, 347, 353, 361, 363, 424, 442], "40": [90, 91, 93, 98, 145, 150, 172, 182, 236, 255, 290, 300, 301, 303, 314, 323, 344, 361, 399, 416, 426, 427, 447, 453, 456, 457, 458], "col": [90, 166, 236, 325, 454], "baud": 90, "flurri": [90, 437], "paus": [90, 93, 124, 127, 131, 166, 280, 315, 405, 441, 442], "keypress": [90, 268, 443], "redrawn": [90, 166, 361], "newpad": [90, 166], "ord": [90, 105, 114, 116, 165, 167, 214, 320, 324, 366, 403, 405, 425, 437, 443], "26": [90, 92, 98, 100, 143, 172, 225, 247, 269, 300, 314, 321, 344, 345, 355, 371, 398, 401, 440, 441, 444, 451, 455, 457, 458], "ordinari": [90, 98, 102, 115, 159, 182, 214, 223, 283, 301, 312, 315, 320, 323, 336, 337, 366, 378, 388, 407, 410, 411, 415, 437, 447, 452], "annoi": [90, 164, 225, 255, 366, 437, 443], "flicker": [90, 166], "noutrefresh": [90, 166], "doupdat": [90, 166, 168], "twisti": 90, "maze": 90, "waddstr": [90, 452], "hide": [90, 95, 105, 164, 168, 182, 183, 205, 236, 246, 276, 328, 340, 345, 353, 361, 363, 376, 402, 415, 424, 425, 436, 440, 444, 449, 451, 458], "boldfac": [90, 443], "underlin": [90, 166, 350, 353], "bytestr": [90, 151, 277, 318, 320, 324, 363, 383, 388, 399, 443, 449, 450], "acs_plminu": [90, 166], "acs_ulcorn": [90, 166], "draw": [90, 145, 166, 236, 300, 353, 443], "border": [90, 166, 347, 353, 371], "flash": [90, 166], "distract": [90, 276], "blink": [90, 166, 457, 458], "curs_set": [90, 166], "invis": [90, 148, 166, 168, 361, 444, 446], "leaveok": [90, 166], "video": [90, 166, 249, 262, 300, 429, 443], "viewer": [90, 236, 257, 361], "safest": [90, 165, 259], "stick": [90, 105, 258, 269, 340, 353, 361, 439, 440, 443], "a_blink": [90, 166], "a_bold": [90, 166, 443], "bright": 90, "bold": [90, 143, 166, 347, 350], "a_dim": [90, 166], "a_revers": [90, 166], "a_standout": [90, 166], "a_underlin": [90, 166], "xterm": [90, 166], "start_color": [90, 166], "has_color": [90, 166], "american": [90, 172], "spell": [90, 148, 172, 192, 214, 245, 255, 290, 324, 353, 410, 411, 423, 440, 445, 452], "canadian": [90, 148], "british": 90, "resign": 90, "misspel": [90, 91, 157, 366], "foreground": [90, 166, 236, 353, 427], "color_pair": [90, 166], "init_pair": [90, 166, 447], "wire": [90, 98, 148, 166, 255, 256, 257, 321, 326, 366, 394, 454], "black": [90, 92, 99, 105, 140, 150, 166, 200, 236, 300, 353, 361, 427, 440, 441, 447, 448, 449, 453, 457], "green": [90, 92, 116, 150, 152, 166, 200, 229, 300, 323, 361, 378, 416, 427, 440, 441, 446, 447, 451, 455], "yellow": [90, 92, 140, 150, 166, 361, 427, 441, 449], "magenta": [90, 92, 166, 427], "cyan": [90, 92, 166, 427], "color_black": [90, 166], "color_r": [90, 166], "color_whit": [90, 166], "alert": [90, 103, 229, 257, 321, 363, 376, 456], "rgb": [90, 92, 152, 166, 195, 276, 347, 361, 453], "purpl": [90, 92, 99, 200], "unabl": [90, 93, 98, 99, 106, 243, 255, 259, 277, 310, 320, 328, 331, 342, 372, 418, 428, 436, 442], "can_change_color": [90, 166], "lucki": [90, 165], "talent": 90, "key_up": [90, 166], "nodelai": [90, 166], "err": [90, 166, 202, 217, 257, 296, 328, 365, 394, 401, 418, 452], "halfdelai": [90, 166], "timer": [90, 95, 201, 203, 269, 310, 315, 344, 345, 347, 353, 361, 426, 439, 440, 443, 448, 452, 454, 455, 456], "tenth": [90, 166, 198], "key_ppag": [90, 166], "key_hom": [90, 166], "printdocu": 90, "membership": [90, 92, 96, 150, 167, 200, 222, 277, 324, 366, 403, 417, 441, 450, 451], "getstr": [90, 166, 443], "backspac": [90, 102, 166, 167, 236, 301, 410, 423], "keybind": [90, 166, 236, 302], "textbox": [90, 443], "gather": [90, 95, 114, 118, 128, 131, 133, 166, 200, 214, 216, 277, 290, 318, 357, 365, 431, 448, 454, 456, 457], "editwin": 90, "struck": 90, "brows": [90, 106, 245, 295, 353, 416, 428, 429, 443], "vendor": [90, 224, 285, 414, 435, 436, 447, 448], "acs_": 90, "lengthi": [90, 93, 102, 249, 283, 437, 438, 439, 440, 441, 451], "swear": 90, "pycon": [90, 105, 321, 442], "2013": [90, 99, 105, 172, 278, 321, 401], "ca": [90, 102, 152, 249, 401, 443, 444, 450, 453], "hetting": [91, 93, 104, 402, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "gentli": 91, "curiou": 91, "objtyp": 91, "directorys": 91, "song": [91, 449], "game": [91, 103, 114, 361, 414, 442, 443], "twenti": [91, 164], "chess": [91, 93, 105, 439, 440], "_age": 91, "basicconfig": [91, 98, 99, 119, 159, 255, 441, 451, 452, 457], "loggedageaccess": 91, "person": [91, 93, 236, 320, 321, 323, 401, 436, 437, 439, 443], "birthdai": [91, 426, 447], "mari": [91, 318, 416], "dave": [91, 104, 440, 441, 444, 451], "david": [91, 93, 95, 105, 219, 401, 436, 437, 438, 439, 440, 441, 443, 444, 446, 448, 451, 452, 453, 454, 455, 457], "hardwir": [91, 159, 290], "loggedaccess": 91, "public_nam": 91, "private_nam": 91, "_name": [91, 165, 170, 185, 194, 450], "pete": 91, "peter": [91, 96, 109, 219, 300, 345, 437, 438, 439, 440, 441, 442, 443, 448, 452, 453, 454, 455, 458], "kate": 91, "catherin": 91, "some_class": 91, "descriptor_nam": 91, "relationship": [91, 100, 127, 150, 151, 172, 182, 225, 323, 324, 331, 347, 357, 378, 385, 401, 403, 415, 442], "notori": [91, 378], "abstractmethod": [91, 111, 215, 238, 239, 241, 273, 277, 311, 443, 452], "oneof": 91, "predic": [91, 93, 132, 243, 249, 342, 343, 388, 440, 443, 451, 456, 458], "minvalu": 91, "maxvalu": 91, "minsiz": 91, "isupp": [91, 167, 249, 308, 324, 365], "wood": [91, 114], "metal": 91, "plastic": 91, "quantiti": [91, 175, 262, 277, 301, 321, 421, 424, 427, 440, 444, 451], "metl": 91, "deeper": [91, 106, 150, 157, 172, 182, 289, 325, 331, 448], "behind": [91, 165, 182, 270, 291, 307, 337, 361, 372, 403, 415, 421, 436, 438, 441, 447], "everydai": [91, 214, 242, 365], "placehold": [91, 99, 180, 219, 225, 255, 257, 303, 325, 337, 342, 371, 375, 381, 411, 421, 427, 442, 448, 449, 450, 451, 453, 456], "lastli": [91, 119, 405, 411], "find_name_in_mro": 91, "object_getattribut": 91, "cls_var": 91, "descr_get": 91, "bypass": [91, 148, 214, 215, 224, 277, 325, 331, 366, 400, 403, 405, 407, 449], "getattr_hook": 91, "slot_tp_getattr_hook": 91, "type_getattro": 91, "super_getattro": 91, "set_nam": [91, 120, 133, 457], "skeleton": 91, "conn": [91, 120, 150, 156, 159, 231, 269, 282, 311, 318, 321, 343, 442, 451, 454], "fetchon": [91, 282, 320, 442, 451], "commit": [91, 114, 287, 320, 328, 349, 406, 428, 442, 443, 444, 453, 455], "schema": [91, 320, 444], "movi": [91, 140, 320, 363, 448, 449], "director": [91, 140, 372], "music": [91, 150], "artist": 91, "genr": 91, "entertain": 91, "star": [91, 116, 150, 180, 337, 354, 388, 402, 406, 409, 411, 447, 448], "war": [91, 448], "georg": [91, 105, 249, 421, 442, 443, 444, 446, 447, 451, 452, 454, 455], "luca": [91, 224, 453, 454], "jaw": [91, 140], "1975": [91, 140, 250, 320, 323, 424, 457], "steven": [91, 438, 442, 444, 449, 451, 453, 454, 455, 457], "spielberg": [91, 140], "countri": [91, 232, 254, 321, 324, 388, 441], "road": [91, 233], "john": [91, 104, 106, 150, 164, 179, 347, 388, 415, 416, 417, 438, 441, 442, 443, 444, 447, 448, 452, 455], "denver": 91, "abram": 91, "excit": [91, 414, 437, 439], "prepackag": 91, "succinct": [91, 363, 426, 447], "fget": [91, 214, 362], "fset": [91, 214, 362], "fdel": [91, 214, 362], "getx": [91, 214], "__x": 91, "setx": [91, 214, 361, 436], "delx": [91, 214], "descrobject": 91, "prop": [91, 436, 449], "intervent": [91, 347, 400], "spreadsheet": [91, 164, 323, 426, 440], "b10": 91, "recalcul": [91, 111, 116, 255, 323, 400, 448], "recalc": 91, "_valu": [91, 185, 194], "seamlessli": 91, "classobject": [91, 448], "__func__": [91, 243, 324, 403, 415, 443, 444], "__self__": [91, 243, 324, 403, 415, 443], "func_descr_get": 91, "funcobject": [91, 448], "0x00c45070": 91, "0x00b18c90": 91, "0x1012e1f98": 91, "recap": 91, "chart": [91, 105, 425], "median": [91, 300, 323, 426, 453], "conceptu": [91, 93, 98, 114, 183, 185, 189, 194, 238, 241, 300, 325, 363, 376, 407, 416, 447, 456], "erf": [91, 262, 444, 451, 456], "dataset": [91, 104, 157, 215, 225, 323, 441, 457], "9332": 91, "unexcit": 91, "pystaticmethod_typ": 91, "fromkei": [91, 150, 249, 324, 362, 440, 448, 451], "dict_fromkei": 91, "dictobject": [91, 442], "pyclassmethod_typ": 91, "vehicl": 91, "id_numb": 91, "id_nubm": 91, "vye483814lqex": 91, "_dept": 91, "dept": [91, 415, 446, 451], "botani": 91, "watnei": 91, "pirat": 91, "mar": [91, 92, 93, 172, 323, 409, 416, 439, 443], "48": [91, 224, 323, 324, 359, 374, 447], "152": 91, "flyweight": 91, "35": [91, 93, 175, 214, 300, 323, 379, 410, 440, 441, 442, 443, 449, 451, 455, 457, 458], "m1": [91, 249, 327, 448], "pi": [91, 144, 165, 166, 175, 210, 262, 280, 300, 361, 388, 417, 419, 421, 426, 451, 452, 457], "100_000": [91, 323], "faith": 91, "_slotvalu": 91, "clsname": 91, "descr_new": 91, "member_get": 91, "member_set": 91, "member_delet": 91, "member_repr": 91, "mcl": [91, 359], "pytypereadi": 91, "add_method": 91, "slot_nam": 91, "rough": [91, 164, 191, 284, 419, 437], "object_new": 91, "empty_slot": 91, "_pyobject_genericsetattrwithdict": 91, "0x7fb5d302f9d0": 91, "slot_valu": 91, "xz": [91, 258, 314, 337, 363, 451, 452, 454], "week": [92, 143, 172, 254, 344, 437, 449, 457], "weekdai": [92, 143, 172, 200, 257, 344, 457], "mondai": [92, 143, 172, 200, 254, 257, 344], "tuesdai": [92, 143, 172, 200, 257, 426], "wednesdai": [92, 143, 172, 200], "thursdai": [92, 143, 172, 200], "fridai": [92, 143, 200], "saturdai": [92, 143, 172, 200], "sundai": [92, 143, 172, 200, 254, 257, 344, 444], "mixin": [92, 151, 159, 246, 340, 372], "upper_cas": 92, "isoweekdai": [92, 172, 200], "from_dat": 92, "plot": [92, 323, 441], "chore": [92, 437], "first_week_dai": 92, "weekend": 92, "96": [92, 96, 247, 324, 359, 455, 456, 457, 458], "chores_for_ethan": 92, "dish": [92, 324], "show_chor": 92, "diamond": [92, 166, 214, 403, 415], "circl": [92, 145, 262, 361, 443], "alias_for_squar": 92, "ONE": [92, 105, 114, 200, 324, 364, 448], "unimport": [92, 200], "_generate_next_value_": [92, 200], "autonam": 92, "north": [92, 172, 353, 361, 444, 446], "south": [92, 148, 301, 353, 361, 443, 446], "east": [92, 172, 344, 353, 361, 364, 415, 441], "west": [92, 172, 344, 353, 361, 415, 446], "__members__": [92, 200, 439, 445], "vast": [92, 312, 457, 458], "mood": 92, "funki": [92, 157], "favorite_mood": 92, "_ignore_": [92, 200, 456], "enumnam": 92, "morecolor": 92, "pink": [92, 361], "some_behavior": 92, "sad": [92, 445], "creaturedatamixin": 92, "leg": 92, "creatur": 92, "beetl": 92, "dog": [92, 102, 150, 301, 415, 451, 454], "test_enum": 92, "fruit": [92, 289, 403, 417], "tomato": [92, 320], "picklabl": [92, 156, 243, 269, 282, 454], "myenum": 92, "pickle_by_enum_nam": 92, "anim": [92, 219, 353, 421, 443, 454], "ant": [92, 142], "bee": 92, "somedata": [92, 224, 286], "newenumnam": 92, "chartreus": 92, "sea_green": 92, "rosemari": 92, "flagboundari": [92, 200, 448], "perm": [92, 212, 262, 410, 448, 456, 457], "rwx": [92, 314], "transit": [92, 96, 97, 106, 172, 215, 249, 256, 312, 319, 372, 400, 405, 439, 441, 442, 444, 447, 452], "interoper": [92, 99, 111, 120, 123, 197, 234, 247, 282, 300, 321, 324, 397, 403, 421, 446, 451, 453], "floatenum": 92, "_value_": [92, 200], "px": [92, 262], "km": [92, 323], "vx": 92, "vy": 92, "member_nam": [92, 200, 447], "_name_": [92, 200], "_missing_": [92, 200], "_order_": [92, 200], "sync": [92, 166, 173, 243, 269, 277, 312, 347, 449, 452, 457], "enumclass": 92, "jupit": [92, 323], "mercuri": [92, 323, 451, 453], "neptun": [92, 323], "saturn": [92, 323], "uranu": [92, 323], "venu": [92, 323, 416], "radiu": [92, 145, 262, 320, 361], "surface_grav": 92, "compris": [92, 116, 284, 328, 405, 410, 411, 443], "eject": [92, 200], "_convert_": 92, "some_enum_var": 92, "__getnewargs__": [92, 150, 282, 366, 440, 454], "renumb": [92, 237, 403], "autonumb": 92, "swatch": 92, "panton": 92, "auburn": 92, "3497": 92, "1246": 92, "bleached_cor": 92, "grade": [92, 104, 140, 214, 323, 324, 361, 440], "grene": 92, "303e": 92, "4397e6": 92, "869e": 92, "0518e6": 92, "976e": 92, "37814e6": 92, "421e": 92, "3972e6": 92, "9e": 92, "27": [92, 143, 172, 225, 245, 277, 301, 318, 321, 323, 345, 355, 410, 421, 424, 437, 440, 446, 447, 451, 452, 456, 457, 458], "1492e7": 92, "688e": 92, "0268e7": 92, "686e": 92, "5559e7": 92, "024e": 92, "4746e7": 92, "kilogram": 92, "meter": 92, "gravit": [92, 361], "m3": [92, 344, 448], "kg": 92, "67300e": 92, "6378140": 92, "802652743337129": 92, "367": 92, "day_": 92, "day_0": 92, "day_1": [92, 254], "day_365": 92, "365": [92, 172, 321, 323, 344], "day_366": 92, "366": [92, 95, 172, 238, 306, 344, 407, 445, 452], "sql": [93, 105, 164, 249, 276, 363, 426, 442, 446, 448, 452], "queri": [93, 99, 102, 105, 127, 130, 148, 159, 194, 219, 234, 238, 239, 243, 279, 285, 287, 310, 337, 340, 347, 353, 363, 371, 372, 381, 383, 385, 394, 407, 430, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "subclaus": 93, "ml": [93, 440], "ocaml": 93, "haskel": [93, 249, 416, 437, 440], "discourag": [93, 102, 133, 148, 170, 183, 214, 238, 301, 316, 321, 324, 332, 337, 338, 340, 403, 439, 442, 447], "puriti": [93, 371], "transact": [93, 150, 231, 232, 300, 343, 372, 440, 442, 443, 449, 451, 454, 455], "constraint": [93, 116, 175, 180, 200, 221, 245, 255, 277, 282, 289, 324, 363, 371, 402, 404, 406, 407, 442, 443, 445, 448, 449], "rigor": [93, 214], "aros": 93, "impract": 93, "enorm": [93, 422], "daili": [93, 426, 439], "proven": [93, 182, 361, 440], "wrongli": 93, "clearli": [93, 101, 102, 114, 225, 243, 332, 363, 365, 427, 437, 439, 442, 452, 456], "synthes": [93, 182, 363], "smallest": [93, 105, 115, 172, 175, 214, 225, 262, 300, 323, 324, 331, 340, 347, 359, 427, 440, 441, 442, 443], "jan": [93, 172, 321, 328, 381, 439, 444, 447, 448, 451, 454, 455, 456, 457, 458], "apr": [93, 430, 439, 442], "jun": [93, 212, 344, 439], "jul": [93, 212, 439, 451], "nov": [93, 172, 198, 212, 234, 321, 344, 439, 455], "itali": 93, "rome": 93, "franc": 93, "pari": [93, 102, 400, 424], "washington": [93, 237], "dc": [93, 249, 277, 388, 442], "listcomp": [93, 116, 406, 417], "genexp": [93, 406], "line_list": 93, "stripped_it": 93, "stripped_list": 93, "expr": [93, 116, 137, 320, 365, 404, 405, 411, 437, 441, 445, 457, 458], "sequence1": [93, 437], "condition1": 93, "expr2": [93, 405, 437], "sequence2": [93, 437], "condition2": 93, "expr3": [93, 405], "sequence3": 93, "condition3": 93, "exprn": [93, 437], "sequencen": [93, 437], "conditionn": 93, "obj_tot": 93, "list_all_object": [93, 441], "expr1": [93, 405, 437], "seq1": [93, 275, 437], "doubtless": [93, 438, 439, 440], "weren": [93, 102, 116, 224, 438, 439, 440, 441, 442, 444], "generate_int": [93, 439, 440], "gen": [93, 243, 249, 405, 439, 440, 451, 454], "messier": [93, 102, 439, 440, 444], "test_gener": [93, 439, 440], "inord": [93, 439, 440], "queen": [93, 300, 301, 439, 440], "nxn": [93, 439, 440], "board": [93, 97, 166, 439, 440], "threaten": [93, 439, 440], "knight": [93, 105, 289, 401, 417, 421, 439, 440, 457], "rout": [93, 103, 106, 201, 362, 383, 427, 439, 440, 444, 453], "chessboard": [93, 439, 440], "342": [93, 151, 345, 405], "cumul": [93, 207, 215, 262, 290, 300, 323, 357, 359, 430, 442, 451, 453, 454], "itera": 93, "iterb": 93, "sentenc": [93, 102, 215, 301, 342, 424, 439, 440, 443], "is_even": [93, 394], "verb": [93, 103, 277, 416], "10000": [93, 290, 315, 345, 361, 440, 452], "rand_list": 93, "769": 93, "7953": 93, "9828": 93, "6431": 93, "8442": 93, "9878": 93, "6213": 93, "2207": 93, "shortest": [93, 184, 214, 249, 419, 437, 442, 444, 445, 446, 451], "broad": [93, 276, 371, 439, 442, 452], "evenli": [93, 249, 300], "elem": [93, 140, 150, 214, 215, 249, 324, 388, 417, 442, 444, 448, 451], "endlessli": [93, 249, 441], "tee": [93, 166, 249, 441], "ne": [93, 275, 347], "starmap": [93, 214, 249, 262, 269, 452], "rubi": [93, 323, 427], "filterfals": [93, 214, 249, 323], "takewhil": [93, 249], "less_than_10": 93, "dropwhil": [93, 249], "aba": 93, "combinations_with_replac": [93, 150, 249, 300, 444, 446], "relax": [93, 172, 233, 451, 458], "key_func": 93, "city_list": 93, "decatur": 93, "huntsvil": 93, "selma": 93, "anchorag": 93, "ak": 93, "nome": 93, "flagstaff": 93, "az": 93, "phoenix": 93, "tucson": 93, "get_stat": [93, 216, 453], "city_st": 93, "kwarg1": [93, 442], "value1": [93, 157, 442, 458], "kwarg2": [93, 442], "value2": [93, 157, 442, 458], "server_log": [93, 442], "initial_valu": [93, 246], "abbc": 93, "mul": [93, 175, 249, 262, 269, 275, 395], "floordiv": [93, 116, 275, 406], "not_": [93, 275], "and_": [93, 275], "or_": [93, 275], "eq": [93, 116, 170, 275, 363, 406], "lt": [93, 116, 275, 324, 361, 392, 406, 410, 438, 451, 456], "gt": [93, 116, 227, 228, 229, 275, 392, 406, 451, 452], "ge": [93, 275], "is_": [93, 275], "is_not": [93, 275], "stripped_lin": 93, "existing_fil": 93, "file_list": 93, "adder": 93, "print_assign": 93, "multiwai": 93, "overli": [93, 439], "disentangl": 93, "heck": 93, "essenc": [93, 132], "disagre": [93, 355, 372, 437], "draft": [93, 105, 259, 279, 331, 385, 414, 437, 438, 439, 440, 441, 442, 443, 444, 450, 455, 456], "ian": [93, 383, 448], "bick": [93, 383], "nick": [93, 96, 105, 306, 403, 439, 441, 442, 443, 444, 446, 451, 452, 453, 454, 455, 456], "coghlan": [93, 96, 105, 306, 441, 442, 443, 444, 446, 451, 452, 453, 454, 455, 456], "efford": 93, "jewett": [93, 441, 443], "mike": [93, 439, 441, 442, 443, 448], "krell": 93, "leandro": 93, "lameiro": 93, "jussi": 93, "salmela": 93, "collin": [93, 443, 444, 454], "winter": [93, 214, 443, 444], "blake": [93, 224], "winton": 93, "june": [93, 143, 446, 456], "juli": [93, 143, 179, 401, 410, 439, 440, 444], "typo": [93, 363, 366, 405, 439], "tutor": 93, "harold": [93, 325], "abelson": 93, "gerald": 93, "jai": [93, 438, 451], "sussman": 93, "mitpress": 93, "mit": [93, 239, 289, 401], "sicp": 93, "classic": [93, 119, 157, 173, 192, 219, 259, 347, 361, 367, 424, 439, 440, 442, 444, 445, 451], "textbook": [93, 102, 225, 301, 442, 443], "scienc": [93, 102, 323, 343, 454], "defmacro": 93, "rambl": 93, "wikipedia": [93, 105, 150, 224, 259, 321, 323, 327, 361, 442, 451, 452], "functional_program": 93, "partial_appl": 93, "curri": 93, "gnosi": 93, "cx": [93, 249, 440], "tpip": 93, "mertz": 93, "ibm": [93, 148, 166, 175, 327, 397, 440, 442, 452], "developerwork": 93, "289": [93, 215, 290], "foster": [94, 448], "malcolm": [95, 301, 444, 451, 455], "\u0142ukasz": [95, 451, 453, 454, 455, 456, 457, 458], "langa": [95, 451, 453, 454, 455, 456, 457, 458], "domain": [95, 98, 120, 192, 197, 198, 201, 219, 224, 232, 233, 237, 245, 254, 256, 257, 269, 317, 318, 319, 321, 326, 327, 331, 359, 371, 374, 414, 430, 440, 442, 449, 452, 453, 454, 455, 456], "incorrectli": [95, 99, 136, 158, 243, 259, 276, 277, 328, 366, 403, 448, 451, 452, 453], "yum": 95, "sdt": 95, "sudo": [95, 99], "29564": 95, "python18035": 95, "_pyeval_evalframedefault": [95, 100], "29565": 95, "dtrace_function_entri": 95, "29566": 95, "29567": 95, "dtrace_function_return": 95, "29568": 95, "29569": 95, "29570": 95, "29571": 95, "maybe_dtrace_lin": 95, "stapsdt": 95, "readelf": 95, "0000000000000000": 95, "00308d78": 95, "libpython3": 95, "3dm": 95, "00365b68": 95, "0x00000254": 95, "0x00000020": [95, 165], "0x00000010": 95, "nt_gnu_abi_tag": 95, "0x00000274": 95, "0x00000024": 95, "0x00000014": 95, "nt_gnu_build_id": 95, "bitstr": 95, "df924a2b08a7e89f6e11251d4602022977af2670": 95, "0x002d6c30": 95, "0x00000144": 95, "0x00000031": 95, "nt_stapsdt": 95, "gc__start": 95, "0x00000000004371c3": 95, "0x0000000000630ce2": 95, "0x00000000008d6bf6": 95, "ebx": 95, "0x00000030": 95, "gc__done": 95, "0x00000000004374e1": 95, "0x00000000008d6bf8": 95, "rax": 95, "0x00000045": 95, "function__entri": 95, "0x000000000053db6c": 95, "0x00000000008d6be8": 95, "rbp": 95, "r12": 95, "eax": 95, "0x00000046": 95, "function__return": 95, "0x000000000053dba8": 95, "0x00000000008d6bea": 95, "strateg": 95, "copyinstr": 95, "timestamp": [95, 99, 120, 143, 150, 153, 172, 192, 198, 223, 225, 234, 277, 293, 317, 320, 321, 337, 344, 357, 374, 397, 407, 430, 440, 444, 450, 452, 454, 456], "probenam": 95, "arg0": [95, 277, 332], "call_stack": 95, "156641360502280": 95, "156641360518804": 95, "156641360532797": 95, "function_3": 95, "156641360546807": 95, "156641360563367": 95, "156641360578365": 95, "156641360591757": 95, "156641360605556": 95, "156641360617482": 95, "156641360629814": 95, "156641360642285": 95, "156641360656770": 95, "156641360669707": 95, "156641360687853": 95, "function_4": 95, "156641360700719": 95, "156641360719640": 95, "function_5": 95, "156641360732567": 95, "156641360747370": 95, "user_str": 95, "thread_ind": 95, "stap": 95, "stp": 95, "11408": 95, "8274": 95, "_abcol": 95, "11414": 95, "425": [95, 230, 458], "11418": 95, "490": 95, "11424": 95, "493": 95, "11428": 95, "426": [95, 230], "11433": 95, "libpython": [95, 431, 447, 448, 457], "6dm": 95, "begun": [95, 343, 440, 441], "import__find__load__start": [95, 456], "import__find__load__don": [95, 456], "find_and_load": 95, "frameptr": 95, "arg4": 95, "probepoint": 95, "cleanli": [95, 97, 102, 321], "fn_call": 95, "033": [95, 166], "1h": [95, 444], "foreach": 95, "6d": [95, 99], "moodi": [96, 452, 453, 454], "terminologi": [96, 190, 234, 261, 344, 353, 385, 415, 438, 439, 442, 443], "ip_address": [96, 135, 247, 318], "192": [96, 99, 232, 247, 255, 325], "ipv4address": [96, 247, 454], "db8": [96, 247], "ipv6address": [96, 247, 454, 458], "3221225985": [96, 247], "42540766411282592856903984951653826561": 96, "ip_network": [96, 247], "ipv4network": [96, 247, 454, 456], "ipv6network": [96, 247, 454, 456], "3221225984": 96, "42540766411282592856903984951653826560": 96, "firewal": [96, 212, 236, 269, 384, 438, 452], "router": [96, 247, 318], "hybrid": [96, 172, 453], "ip_interfac": [96, 247], "ipv4interfac": [96, 247], "ipv6interfac": [96, 247], "ipv": 96, "intuit": [96, 97, 98, 102, 175, 179, 249, 405, 437, 438, 439, 448, 453], "addr4": 96, "addr6": [96, 454], "host4": 96, "host6": 96, "net4": 96, "num_address": [96, 247], "net6": 96, "4294967296": [96, 247, 445], "252": [96, 403], "253": 96, "254": 96, "netmask": [96, 247, 454], "hostmask": [96, 247], "ffff": [96, 247, 437, 452], "explod": [96, 247, 437, 439], "0db8": 96, "0001": [96, 172, 410, 456], "explos": [96, 388], "lend": [96, 439], "agnost": [96, 324, 363], "addressvalueerror": [96, 247], "netmaskvalueerror": [96, 247], "168": [96, 99, 232, 247, 255, 325], "octet": [96, 189, 195, 247, 287, 325, 371, 374], "safer": [97, 182, 282, 283, 417, 440, 441, 449, 450], "old_binascii": 97, "stringent": [97, 453], "unhexlifi": [97, 139], "qwertyuiop": 97, "boo": 97, "circuit": [97, 226, 324, 417], "led": [97, 157, 277, 438, 448, 452, 453, 455], "field_size_limit": [97, 164, 442], "price": [97, 150, 210, 301, 387, 424, 441, 442, 454, 457], "xxlimit": 97, "my_struct": 97, "pai": [97, 99, 102, 182, 416, 436, 449, 453], "myattribut": 97, "pickleabl": [97, 257], "blueprint": 97, "py_tp_travers": 97, "tediou": [97, 105, 116, 122, 361, 366, 414, 437, 442, 457], "roadblock": 97, "get_defining_class": 97, "get_type_of_self": 97, "example_method": 97, "example_method_doc": 97, "my_method": 97, "module_def": 97, "capi": [97, 444], "iron": 97, "vinai": [98, 99, 440, 441, 443, 444, 446, 451, 452, 453, 454, 455, 456, 457, 458], "sajip": [98, 99, 440, 441, 443, 444, 446, 451, 452, 453, 454, 455, 456, 457, 458], "vinay_sajip": [98, 99], "dove": [98, 99], "ascrib": 98, "investig": [98, 324], "confirm": [98, 178, 255, 278, 280, 363, 372, 376, 436, 447, 448], "told": [98, 363, 375, 403, 440], "flexibli": [98, 376], "\u00f8resund": 98, "malm\u00f6": 98, "threshold": [98, 99, 216, 255, 324, 442], "loglevel": 98, "numeric_level": 98, "afresh": [98, 159, 255], "filemod": [98, 99, 255, 322, 337, 452, 457], "mylib": [98, 365], "do_someth": [98, 99, 321, 365, 405], "levelnam": [98, 99, 255, 256, 257, 269, 441, 444, 451], "logrecord": [98, 257, 365, 440, 453], "asctim": [98, 99, 255, 256, 291, 344, 438, 444, 451], "2010": [98, 99, 105, 255, 314, 325, 331, 367, 444, 451], "41": [98, 249, 289, 300, 301, 323, 394, 426, 443, 458], "612": [98, 363, 443], "iso8601": [98, 394], "3339": 98, "datefmt": [98, 99, 255, 256], "46": [98, 150, 300, 324, 427, 447, 457, 458], "am": [98, 99, 172, 254, 282, 344, 409, 424, 455], "strftime": [98, 99, 133, 254, 255, 257, 259, 344, 394, 426, 427, 440, 442, 443, 451, 452, 455], "invest": 98, "favourit": 98, "beverag": 98, "hereaft": [98, 290, 417, 425], "getlogg": [98, 99, 119, 255, 365, 440, 444, 446, 458], "nt": [98, 106, 150, 257, 277, 285, 296, 331, 334, 363, 375, 386, 388, 437, 450, 451, 457], "diagram": [98, 182, 214, 225, 319, 439], "threefold": 98, "setlevel": [98, 99, 119, 255, 269, 440], "addhandl": [98, 99, 255, 446], "removehandl": [98, 99, 255, 365, 444], "addfilt": [98, 99, 255], "removefilt": [98, 255], "hierarch": [98, 234, 255, 256, 347, 353, 371, 387, 388, 395, 407, 425], "baz": [98, 99, 100, 114, 157, 236, 238, 250, 255, 256, 269, 277, 293, 301, 340, 362, 365, 366, 367, 383, 407, 411], "bam": [98, 255], "descend": [98, 111, 116, 153, 185, 194, 243, 255, 269, 279, 290, 322, 336, 347, 353, 365, 385, 386, 388, 415, 442, 444], "ancestor": [98, 99, 166, 255, 256, 269, 279, 321, 353, 366, 367, 388, 403, 440], "streamhandl": [98, 99, 255, 256, 451, 456], "filehandl": [98, 99, 106, 255, 256, 443], "setformatt": [98, 99, 255, 257], "deconfigur": 98, "fmt": [98, 99, 172, 190, 247, 255, 286, 340, 427, 443], "millisecond": [98, 119, 120, 125, 166, 172, 236, 255, 310, 353, 361, 382, 448, 451, 455, 458], "tack": 98, "gmtime": [98, 99, 143, 172, 198, 255, 259, 344, 439, 450, 451, 452], "gmt": [98, 172, 198, 234, 255, 321, 344], "fileconfig": [98, 99, 256, 444, 453, 456], "dictconfig": [98, 256, 257, 444, 451], "simple_exampl": [98, 99], "simple_logging_modul": 98, "2005": [98, 99, 172, 259, 401, 441, 442, 443], "03": [98, 99, 172, 175, 255, 321, 325, 344, 426, 440, 442], "618": [98, 249, 447], "620": [98, 441], "695": [98, 363, 404, 411], "697": [98, 449], "773": 98, "nearli": [98, 101, 103, 157, 173, 175, 257, 280, 403, 439, 440, 443, 444, 445, 448, 451, 454], "conf": [98, 99, 102, 279, 427, 440, 451], "simpleexampl": [98, 99], "consolehandl": 98, "simpleformatt": 98, "logger_root": [98, 256], "logger_simpleexampl": 98, "handler_consolehandl": 98, "formatter_simpleformatt": 98, "simple_logging_config": 98, "38": [98, 99, 179, 214, 255, 318, 359, 440, 447, 457, 458], "977": 98, "979": 98, "56": [98, 100, 172, 175, 214, 246, 269, 318, 323, 417, 419, 451, 454], "054": 98, "055": 98, "130": [98, 247, 323, 444], "noncod": 98, "disable_existing_logg": [98, 99, 256], "watchedfilehandl": [98, 443, 455], "mypackag": 98, "myhandl": [98, 99, 256], "superset": [98, 150, 288, 324, 405, 437, 440], "yaml": [98, 114, 239, 250, 256, 444, 447, 451], "ext": [98, 99, 148, 180, 189, 256, 263, 278, 280, 427, 440, 441, 451], "raiseexcept": [98, 99, 255, 257, 451], "lastresort": [98, 255, 451], "absenc": [98, 106, 110, 156, 158, 243, 253, 255, 301, 321, 343, 383, 403, 424], "nullhandl": [98, 446], "organis": [98, 99, 107, 225, 255], "orgnam": 98, "prerog": 98, "audienc": [98, 289, 376, 409, 440, 445], "interfer": [98, 107, 126, 157, 215, 254, 280], "deliv": [98, 106, 127, 172, 214, 310, 315, 317, 353, 367, 372, 405, 416, 443], "notset": [98, 255, 256, 269], "desk": [98, 414, 424], "staff": [98, 314, 337], "convinc": [98, 254], "baserotatinghandl": [98, 441], "rotat": [98, 150, 175, 257, 361, 441, 443, 444], "rotatingfilehandl": [98, 99, 256, 441, 443, 444], "timedrotatingfilehandl": [98, 441, 443, 453], "sockethandl": [98, 99, 256, 448, 453], "datagramhandl": [98, 256, 453], "udp": [98, 120, 124, 257, 318, 319, 340, 444, 448, 455, 456, 457, 458], "smtphandler": [98, 99, 256], "sysloghandl": [98, 256, 335, 444, 448, 452], "nteventloghandl": [98, 256], "xp": [98, 257, 353, 440, 454], "memoryhandl": [98, 99, 256], "criteria": [98, 164, 237, 255, 290], "httphandler": [98, 99, 106, 256, 454], "reopen": [98, 212, 257, 282, 320, 338, 444, 455], "queuehandl": 98, "bufferingformatt": [98, 255], "provis": [98, 284, 321, 401, 405], "trailer": [98, 277, 399, 406], "swallow": [98, 99, 133, 427, 437, 444, 451, 457], "handleerror": [98, 255, 257], "altogeth": [98, 99, 202, 397, 403, 448, 451], "isenabledfor": [98, 99, 255, 444], "expensive_func1": 98, "expensive_func2": 98, "deepli": [98, 161, 340, 366, 384, 410, 427, 437, 443, 448], "tight": [98, 129], "recomput": [98, 310, 311, 315, 344, 453], "_srcfile": 98, "_getfram": [98, 135, 331, 425, 438, 448], "logthread": 98, "getpid": [98, 120, 269, 277, 450], "logprocess": 98, "logmultiprocess": 98, "logasynciotask": 98, "somelogg": 99, "auxiliary_modul": 99, "spam_appl": 99, "fh": 99, "auxiliari": [99, 249, 451], "some_funct": [99, 366, 367], "module_logg": 99, "47": [99, 172, 198, 249, 300, 301, 399, 417, 426, 443, 447], "663": 99, "665": 99, "668": [99, 314], "669": [99, 150], "670": [99, 448], "671": 99, "672": [99, 210], "673": [99, 363], "worker": [99, 128, 153, 156, 221, 298, 343, 442, 443, 444, 454, 458], "relativecr": [99, 255], "threadnam": [99, 255], "mainthread": 99, "505": [99, 106, 230], "1007": 99, "1507": [99, 443], "1508": 99, "2258": 99, "2512": 99, "3009": 99, "3013": 99, "3515": 99, "3761": 99, "4017": 99, "4513": 99, "4518": 99, "quota": [99, 201, 237], "dormant": 99, "jackdaw": 99, "quartz": 99, "logger1": 99, "area1": 99, "logger2": 99, "area2": 99, "zephyr": 99, "blow": [99, 276, 451], "vex": [99, 438], "daft": 99, "zebra": [99, 150, 282], "jail": 99, "zesti": 99, "vixen": 99, "wizard": [99, 439], "warnings_and_below": 99, "filter_mak": 99, "levelno": [99, 255], "9999": [99, 100, 127, 143, 172, 236, 319, 451, 456], "stoplisten": [99, 256], "data_to_send": 99, "sock_stream": [99, 103, 120, 257, 318, 319, 321, 340, 444, 456], "culprit": 99, "sluggish": 99, "poorli": [99, 142, 287, 425], "dn": [99, 122, 124, 148, 247, 257, 318, 321, 374, 454], "capac": [99, 166, 257, 277, 323, 343, 442, 444, 447], "precaut": [99, 111], "eat": [99, 262], "que": 99, "queue_handl": 99, "respect_handler_level": [99, 257, 454], "rootlogg": 99, "default_tcp_logging_port": [99, 256], "unformat": [99, 250, 301], "logrecordstreamhandl": 99, "streamrequesthandl": [99, 319, 455], "recv": [99, 103, 120, 269, 309, 311, 315, 318, 319, 321, 340, 347, 444, 454], "slen": 99, "makelogrecord": [99, 255, 257], "handlelogrecord": 99, "lognam": [99, 218, 277], "bandwidth": [99, 105, 416, 444, 447], "logrecordsocketreceiv": 99, "threadingtcpserv": [99, 319], "allow_reuse_address": [99, 319, 395, 443], "timeout": [99, 103, 106, 110, 118, 120, 123, 128, 129, 131, 132, 156, 159, 166, 212, 231, 237, 256, 257, 269, 280, 287, 298, 310, 311, 315, 317, 319, 320, 321, 328, 340, 343, 344, 358, 363, 366, 372, 431, 440, 443, 444, 447, 448, 451, 452, 454, 457, 458], "serve_until_stop": 99, "rd": [99, 321, 324, 452], "wr": [99, 438], "handle_request": [99, 160, 315, 319, 383, 395, 444], "5d": 99, "tcpserver": [99, 234, 255, 395, 444], "69": [99, 344, 388, 447], "makepickl": [99, 257], "supervisor": 99, "gist": 99, "bone": [99, 434], "bash": [99, 145, 279, 313, 375, 422, 428], "ensure_app": 99, "log_listen": 99, "webapp": 99, "unzip": [99, 214, 396, 398, 440], "bottl": [99, 165, 443], "supervisorctl": 99, "tweak": [99, 276, 367, 438, 441, 455], "usernam": [99, 106, 189, 192, 218, 237, 257, 277, 278, 287, 317, 371, 372, 451, 452, 454], "interchang": [99, 136, 158, 172, 175, 202, 224, 250, 255, 324, 327, 347, 363, 367, 403, 410, 421, 426, 437, 443, 451, 452], "customadapt": 99, "connid": 99, "some_conn_id": 99, "threadloc": 99, "contextfilt": 99, "inject": [99, 120, 123, 131, 255, 313, 320, 328, 337, 363, 372, 384, 430, 442, 448, 454], "sheila": 99, "231": 99, "a1": [99, 217], "a2": [99, 217, 301], "lvl": 99, "lvlname": 99, "getlevelnam": [99, 255], "292": [99, 255, 325], "301": [99, 106, 230, 372], "webapplib": 99, "appnam": [99, 257], "ctx_request": 99, "ctx_appnam": 99, "injectingfilt": 99, "num_request": 99, "process_request": [99, 319], "adhf": 99, "argumentdefaultshelpformatt": [99, 114], "ap": [99, 179], "formatter_class": 99, "aa": [99, 150, 249, 301, 417, 444], "app1": 99, "app2": 99, "49": [99, 234, 249, 255, 269, 359, 417, 421, 424, 447, 457, 458], "wc": 99, "153": 99, "147": [99, 457], "600": [99, 172, 455], "issue3770": 99, "listener_configur": 99, "mptest": 99, "processnam": [99, 255, 269], "listener_process": 99, "print_exc": [99, 345, 358], "worker_configur": 99, "worker_process": 99, "current_process": [99, 269], "orchestr": [99, 365], "put_nowait": [99, 128, 257, 269, 298], "logger_thread": 99, "qh": 99, "ham": [99, 150, 160, 179, 214, 243, 266, 303, 405, 407, 416, 454], "egg": [99, 150, 164, 179, 207, 214, 215, 239, 246, 279, 289, 301, 303, 312, 324, 328, 337, 358, 362, 363, 366, 367, 372, 388, 397, 407, 416, 418, 421, 424, 437], "mplog": 99, "foofil": 99, "wp": 99, "lp": [99, 258, 448], "max_work": [99, 120, 156, 451], "executor": [99, 119, 120, 124, 129, 448, 451, 454, 458], "log_filenam": 99, "logging_rotatingfile_exampl": 99, "my_logg": 99, "mylogg": [99, 255], "maxbyt": [99, 256, 257, 444], "backupcount": [99, 256, 257, 444], "logfil": 99, "backup": [99, 207, 257, 320, 337, 443, 451, 456], "bf": [99, 301, 426], "341": 99, "df": [99, 444], "924": 99, "494": [99, 455], "833": 99, "recal": [99, 236, 363, 419], "bracemessag": 99, "dollarmessag": 99, "unwieldi": 99, "palat": 99, "brethren": 99, "2f": [99, 128, 210, 325, 371, 419, 443, 444, 446], "trip": [99, 116, 142, 232, 355, 443, 445, 446, 448], "styleadapt": 99, "_log": [99, 255], "makerecord": [99, 255], "setloggerclass": [99, 255], "setlogrecordfactori": [99, 255], "interrog": [99, 194, 367], "getlogrecordfactori": [99, 255], "old_factori": [99, 255], "record_factori": [99, 255], "custom_attribut": [99, 255], "0xdecafbad": [99, 255], "born": [99, 324], "zmq": 99, "pyzmq": 99, "sock": [99, 102, 103, 120, 127, 130, 231, 290, 311, 318, 319, 321, 340, 451, 454, 456], "pub": [99, 118, 212, 314, 435], "5556": 99, "zeromqsockethandl": 99, "enqueu": [99, 128, 156, 257, 269, 298], "send_json": 99, "uri": [99, 106, 231, 232, 279, 296, 321, 361, 371, 372, 383, 385, 388, 390, 391, 393, 394, 447, 449, 452, 453], "socktyp": [99, 257, 318, 340, 444], "zeromqsocketlisten": 99, "setsockopt_str": 99, "dequeu": [99, 257], "recv_json": 99, "django": [99, 150, 280, 284, 366, 444, 452], "specialfilt": 99, "mail_admin": 99, "adminemailhandl": 99, "myproject": [99, 365], "runnabl": [99, 120, 375], "gz": [99, 207, 223, 263, 279, 314, 337, 375, 399, 428, 435, 437, 442, 449, 451], "f_in": [99, 223], "f_out": [99, 223], "copyfileobj": [99, 106, 223, 314, 457], "rh": [99, 180, 452], "six": [99, 101, 162, 172, 214, 215, 282, 285, 300, 301, 320, 353, 371, 374, 397, 443, 451, 453, 456, 457], "zcat": 99, "02": [99, 100, 172, 175, 255, 269, 314, 344, 398, 426, 437, 439, 440, 441, 451, 452, 455], "767": [99, 382], "996": 99, "997": 99, "998": 99, "spawn": [99, 118, 124, 126, 131, 132, 135, 156, 245, 277, 291, 319, 340, 343, 449, 453, 457, 458], "stop_ev": 99, "heterogen": [99, 115, 324, 417, 445], "bunch": [99, 122, 189, 196, 276, 414, 437, 438, 439, 440, 443], "config_initi": 99, "config_work": 99, "config_listen": 99, "hang": [99, 103, 106, 129, 269, 310, 315, 340, 440, 451], "5424": [99, 257], "compliant": [99, 120, 139, 172, 183, 184, 185, 187, 190, 191, 192, 196, 197, 198, 204, 224, 250, 259, 293, 313, 320, 344, 371, 383, 384, 401, 405, 439, 442, 444, 449, 452, 455, 456], "ufeffunicod": 99, "feff": [99, 105, 148], "xef": [99, 139, 371, 410], "xbb": [99, 410], "xbf": [99, 410], "readili": [99, 246, 269, 323, 447, 453], "parseabl": [99, 285, 313], "serialis": [99, 148, 306, 388], "structuredmessag": 99, "fnum": 99, "specialis": [99, 106, 320, 324, 363, 406], "jsonencod": [99, 250, 455], "unicode_escap": [99, 148], "set_valu": 99, "snowman": [99, 449], "u2603": 99, "chown": [99, 135, 277, 314, 452], "owned_file_handl": 99, "puls": 99, "chowntest": 99, "orthogon": 99, "getmessag": [99, 255, 389], "firstli": [99, 306, 324], "secondli": 99, "cater": [99, 182, 256, 257], "myfilt": [99, 451], "param": [99, 133, 185, 186, 192, 194, 198, 231, 243, 277, 287, 320, 365, 371, 372, 375, 394, 395, 406, 444, 450, 451, 458], "noshow": 99, "onelineexceptionformatt": 99, "formatexcept": [99, 255], "exc_text": [99, 255, 257], "configure_log": 99, "2015": [99, 172, 308, 431, 454], "07": [99, 172, 255, 259, 301, 325, 344, 355, 400, 442, 443, 455, 458], "logtest7": 99, "nzerodivisionerror": 99, "simplist": [99, 366], "render": [99, 105, 120, 178, 187, 190, 212, 288, 319, 353, 358, 386, 403, 418, 436, 440, 443, 444, 447, 457], "audibl": [99, 166], "speech": 99, "tt": [99, 172], "frequenc": [99, 216, 323, 344, 377, 382, 390, 443], "swamp": 99, "spoken": 99, "espeak": 99, "ttshandler": 99, "femal": [99, 323], "voic": [99, 439], "s150": 99, "ven": 99, "f3": [99, 114], "popen": [99, 120, 127, 131, 135, 197, 237, 277, 288, 310, 318, 338, 340, 375, 403, 441, 443, 452, 453, 455, 456, 457], "goodby": [99, 134, 212, 282, 347, 418], "parameteris": [99, 363, 448], "log_if_error": 99, "target_handl": 99, "flush_level": 99, "flushlevel": [99, 257], "write_lin": 99, "decorated_foo": 99, "undecor": [99, 215, 324], "bufferinghandl": [99, 257], "har": [99, 145, 365, 451, 453], "bufferingsmtphandl": 99, "mailhost": [99, 256, 257], "mailport": 99, "starttl": [99, 237, 257, 317, 321, 443, 451, 452], "login": [99, 212, 218, 237, 272, 277, 292, 317, 372, 451], "nto": [99, 317], "nsubject": 99, "metavar": [99, 189, 276, 375, 444, 449, 450, 451], "addresse": [99, 257], "102": [99, 175, 230, 249, 323, 444, 451, 457, 458], "eleven": 99, "eleventh": 99, "utcformatt": 99, "console1": 99, "console2": 99, "501": [99, 106, 230, 234, 277, 451], "sat": [99, 143, 172, 321, 323], "revert": [99, 160, 200, 212, 231, 232, 306, 337, 340, 430, 444, 452, 455], "loggingcontext": 99, "old_level": 99, "ev": [99, 321], "logctx": 99, "generalis": 99, "scriptnam": 99, "subpars": [99, 114, 451, 456], "add_subpars": [99, 114, 451, 456], "start_cmd": 99, "add_pars": [99, 114, 451], "stop_cmd": 99, "restart_cmd": 99, "log_level": 99, "plural": [99, 219, 444, 450, 456], "rfind": [99, 265, 324, 443, 451, 452, 454], "ui": [99, 383, 437], "pyside2": 99, "pyqt5": 99, "qthandler": 99, "qthread": 99, "qtcore": 99, "qtgui": 99, "qtwidget": 99, "pyqtsign": 99, "pyqtslot": 99, "qobject": 99, "slotfunc": 99, "ctname": 99, "currentthread": [99, 179, 343, 447, 450], "objectnam": 99, "qthreadnam": 99, "isinterruptionrequest": 99, "1f": [99, 300, 359], "qwidget": 99, "orang": [99, 150, 275, 361, 417], "textedit": 99, "te": 99, "qplaintextedit": 99, "monospac": [99, 236, 342], "qfont": 99, "nosuchfont": 99, "setstylehint": 99, "setfont": 99, "setreadonli": 99, "pb": [99, 258], "qpushbutton": 99, "work_button": 99, "log_button": 99, "clear_button": 99, "update_statu": 99, "abouttoquit": 99, "force_quit": 99, "lai": [99, 204, 421], "qvboxlayout": 99, "addwidget": 99, "setfixeds": 99, "900": [99, 424], "manual_upd": 99, "clear_displai": 99, "start_thread": [99, 340], "seten": 99, "worker_thread": 99, "setobjectnam": 99, "workerthread": 99, "movetothread": 99, "kill_thread": 99, "requestinterrupt": 99, "isrun": 99, "appendhtml": 99, "qapplic": 99, "exec_": 99, "2009": [99, 172, 301, 320, 367, 401, 438, 444, 446], "3164": 99, "hail": 99, "2003": [99, 172, 255, 388, 398, 426, 440, 443], "widespread": [99, 191, 409, 438, 451], "sysloghandler5424": 99, "tz_offset": 99, "msgid": [99, 189, 198], "isoformat": [99, 172, 179, 320, 400, 440, 455, 456], "has_offset": 99, "hr": [99, 323], "hostnam": [99, 106, 120, 130, 135, 148, 173, 198, 212, 231, 237, 247, 257, 269, 277, 287, 295, 317, 318, 321, 371, 372, 394, 424, 437, 440, 444, 449, 451, 452, 453, 456], "gethostnam": [99, 103, 135, 277, 318], "procid": 99, "sdata": 99, "structured_data": 99, "sd": 99, "sdid": 99, "dv": [99, 340], "specir": 99, "12345": [99, 165, 214, 415, 417, 440, 446, 455], "bozz": [99, 256], "fizz": 99, "buzz": 99, "54321": [99, 417], "rab": 99, "zab": 99, "zzif": 99, "loggerwrit": 99, "info_fp": 99, "debug_fp": 99, "merci": [99, 403], "slghtly": 99, "bufferingloggerwrit": 99, "52": [99, 100, 102, 133, 172, 262, 300, 301, 321, 323, 325, 359, 417, 419, 441, 444], "unhelp": [99, 437], "garbl": 99, "unexpectedli": [99, 107, 160, 304, 315, 317, 365, 415, 439, 449, 454], "supposedli": [99, 370], "circumv": [99, 384], "pointless": 99, "pablo": [100, 444, 447, 448, 449, 454, 456, 457, 458], "galindo": [100, 447, 448, 449, 456, 457, 458], "vibrant": 100, "ecosystem": [100, 282], "interpos": 100, "have_perf_trampolin": 100, "1000000": [100, 157, 172, 210, 214, 269, 290, 345, 416, 444, 455], "hertz": [100, 382], "my_script": 100, "analyz": [100, 101, 108, 164, 174, 266, 282, 283, 301, 313, 321, 359, 363, 401, 410, 442, 443, 444, 451], "91": [100, 323], "08": [100, 172, 198, 234, 255, 321, 344, 400, 458], "_start": 100, "90": [100, 101, 140, 145, 249, 269, 300, 323, 361, 457], "71": [100, 359, 431, 449, 450], "__libc_start_main": 100, "88": [100, 172, 323, 359, 454], "pymain_run_python": 100, "constprop": 100, "_pyrun_anyfileobject": 100, "_pyrun_simplefileobject": 100, "run_mod": 100, "54": [100, 133, 300, 314, 323, 398, 440, 447, 448], "65": [100, 300, 314, 323, 324, 424, 437, 443, 444, 454], "_pyeval_vector": 100, "_pylong_add": 100, "97": [100, 105, 116, 214, 265, 324, 444, 451], "_pyobject_malloc": 100, "_py_eval_evalframedefault": 100, "58": [100, 148, 300, 323, 325], "89": [100, 140, 175, 215, 318, 323, 416, 424, 425, 446, 451], "86": [100, 210, 323, 325, 359, 361], "43": [100, 150, 172, 212, 321, 324, 345, 416, 451, 457, 458], "62": [100, 175, 227, 229, 359], "77": [100, 140, 175, 359, 361, 451], "activate_stack_trampolin": [100, 331, 449], "deactivate_stack_trampolin": [100, 331, 449], "do_profiled_stuff": 100, "non_profiled_stuff": 100, "fno": [100, 431, 447], "mno": 100, "leaf": [100, 224, 277, 354, 363], "dwarf": [100, 403], "brett": [101, 290, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458], "cannon": [101, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458], "2020": [101, 324, 400, 401, 444, 448, 458], "caniusepython3": 101, "tox": 101, "worst": [101, 102, 103, 165, 177, 179, 225, 403, 407, 430, 441, 455, 456], "trove": [101, 440], "classifi": [101, 216, 239, 289, 440, 444], "oldest": [101, 133, 216, 257, 343, 359, 378, 444, 451, 456], "implic": [101, 238, 269, 282, 371, 384, 405], "cheat": [101, 363], "sheet": [101, 143, 361, 363], "backport": [101, 175, 236, 239, 240, 337, 363, 366, 397, 443, 447, 454, 455, 456, 457, 458], "pariti": [101, 447], "conserv": [101, 438, 441], "diff": [101, 136, 179, 182, 365, 438, 441, 444, 451], "2002": [101, 105, 172, 247, 401, 439, 440], "confluenc": 101, "brittl": 101, "pose": [101, 120, 437, 441], "isdecim": [101, 324, 325], "isnumer": [101, 324], "edg": [101, 165, 166, 182, 190, 214, 221, 340, 342, 361, 424, 452, 453], "x00": [101, 165, 224, 246, 247, 270, 301, 318, 324, 327, 374], "indexbyt": 101, "inevit": 101, "importlib2": 101, "absolute_import": [101, 108, 411, 442], "print_funct": [101, 108, 411, 443], "werror": [101, 430, 431], "lint": [101, 383, 449], "discov": [101, 103, 109, 172, 185, 194, 233, 340, 365, 390, 438, 439, 440, 444, 451, 453], "amk": [102, 301, 440, 443, 444], "gentler": [102, 301], "regex": [102, 153, 209, 254, 284, 301, 365, 438, 442, 443, 451, 453, 456], "tex": 102, "automata": 102, "akm": 102, "za": [102, 105, 301, 324, 410, 439], "z0": [102, 105, 301, 325, 410], "9_": [102, 105, 301, 410], "dotal": [102, 301], "ct": [102, 103], "caaat": 102, "repetit": [102, 114, 142, 224, 249, 258, 262, 301, 324, 345, 358, 365, 367, 376, 403, 405, 409, 439], "bcd": [102, 249], "abcbd": 102, "abcb": 102, "bc": [102, 143, 150, 236, 249, 324, 437], "quantifi": [102, 249, 296, 301, 448], "brew": 102, "homebrew": 102, "reductionist": 102, "bent": 102, "ignorecas": [102, 301, 325], "bloat": 102, "latex": [102, 443, 458], "stage": [102, 343, 372, 376, 385, 437, 458], "findal": [102, 150, 301, 388, 426, 453], "findit": [102, 266, 301, 439], "tempo": 102, "clarifi": [102, 324, 366, 415, 424, 442, 443, 451, 453], "drummer": 102, "drum": 102, "piper": 102, "lord": 102, "cook": [102, 166], "callable_iter": 102, "fromag": 102, "1998": [102, 107, 300, 401], "multilin": [102, 148, 157, 236, 301, 317, 365, 449, 451, 458], "i\u0307": [102, 301], "0130": [102, 301], "latin": [102, 105, 114, 130, 148, 184, 212, 228, 301, 313, 337, 364, 405, 439, 440, 443, 446, 451, 454, 455, 456, 458], "capit": [102, 105, 175, 301, 324, 325, 363, 364, 402, 405, 416, 437, 456, 458], "\u0131": [102, 301], "0131": [102, 301], "dotless": [102, 301], "\u017f": [102, 301], "017f": [102, 301], "212a": [102, 301], "kelvin": [102, 301], "\u017fpam": 102, "french": [102, 105, 344, 454, 456], "\u00e9": 102, "\u00e7": 102, "unreli": [102, 166, 301], "cultur": [102, 104, 219, 254, 301, 427], "charref": 102, "9a": [102, 301], "fa": [102, 301], "crow": 102, "servo": 102, "cro": 102, "ervo": 102, "etern": [102, 133], "recit": 102, "bclass": 102, "declassifi": 102, "subtleti": [102, 172, 232], "collis": [102, 224, 273, 312, 416, 436, 447, 453, 458], "x08class": 102, "x08": [102, 327, 374], "dissect": [102, 245, 438, 439], "subgroup": [102, 180, 202, 301, 448, 451, 457], "822": [102, 105, 189, 191, 219, 231, 317, 344, 439], "agent": [102, 106, 259, 317, 331, 372, 373, 439, 443], "thunderbird": 102, "x11": [102, 347, 353, 372, 379], "20061227": 102, "ababababab": 102, "upward": [102, 166, 279, 282, 361, 366], "parenthesi": [102, 116, 236, 402, 406, 441], "abcd": [102, 105, 150, 179, 249, 440, 443, 447], "backrefer": [102, 301], "spring": [102, 172, 214, 415], "keystrok": [102, 145, 166, 315, 437, 444], "confusingli": [102, 106, 347, 410, 437], "chose": [102, 238, 277, 409, 442], "subexpress": 102, "punctuat": [102, 105, 313, 325, 410, 455], "groupdict": [102, 301], "jane": [102, 104], "internald": [102, 237], "mon": [102, 143, 172, 198, 440], "sec": [102, 135, 344, 345, 454], "zonen": 102, "zoneh": 102, "zonem": 102, "rc": [102, 165, 197, 279, 328, 334, 340, 375, 386], "autoexec": 102, "subn": [102, 301, 444, 446, 449, 450, 454], "sweet": [102, 249], "p2": [102, 165, 249, 270, 328, 402, 416, 441, 447, 448, 454], "leftmost": [102, 140, 150, 179, 182, 215, 224, 301, 405, 441, 456, 457], "shoe": 102, "abxd": [102, 301, 456], "carriag": [102, 167, 196, 197, 246, 301, 313, 324, 342, 383, 394, 410, 440, 442], "hexrepl": 102, "65490": 102, "49152": 102, "0xffd2": 102, "0xc000": 102, "bbbb": 102, "deed": 102, "swordfish": 102, "sdeedfish": 102, "bword": 102, "superstit": 102, "insuper": 102, "resist": [102, 224, 314, 438, 444, 452], "temptat": [102, 365, 438], "backtrack": [102, 301], "pain": [102, 254, 437, 442], "dirti": 102, "terribli": 102, "neatli": [102, 159, 444], "pat": [102, 178, 454], "unclear": [102, 449], "jeffrei": [102, 301, 321, 443, 444, 447, 448, 451], "friedl": [102, 301], "reilli": [102, 301, 345, 429, 439, 454], "flavour": [102, 105, 238, 279, 337, 367, 442], "misunderstood": 103, "000": [103, 150, 165, 172, 175, 224, 249, 268, 290, 365, 436, 449, 451, 452], "foot": [103, 301, 323, 426], "hope": [103, 202, 311, 363, 425, 436, 437, 438, 452, 455, 457], "decent": [103, 424], "inet": [103, 318], "endpoint": [103, 120, 127, 150, 201, 231, 318, 361, 451], "switchboard": 103, "town": 103, "berkelei": [103, 173, 445], "wildfir": 103, "unbeliev": 103, "repli": [103, 172, 192, 212, 234, 259, 269, 317, 372], "serversocket": 103, "snmp": 103, "clientsocket": 103, "client_thread": 103, "chat": 103, "recycl": [103, 110, 343], "beast": 103, "peer": [103, 124, 127, 201, 202, 310, 321], "etiquett": 103, "signon": 103, "forev": [103, 124, 133, 291, 310, 438, 439, 440, 441, 452], "stumbl": 103, "eot": [103, 167], "yuck": [103, 425], "shrug": 103, "righter": 103, "mysocket": [103, 250], "mysend": 103, "totals": 103, "msglen": [103, 318], "myrec": 103, "bytes_recd": 103, "2048": [103, 321, 381], "onto": [103, 159, 164, 166, 180, 202, 225, 237, 282, 289, 313, 326, 361, 363, 365, 367, 407, 419, 437, 443, 449], "nasti": [103, 338], "competit": 103, "x86": [103, 165, 283, 327, 431, 436, 443, 448, 456], "amd64": [103, 285, 327, 334], "arm": [103, 454], "risc": 103, "ntohl": [103, 318], "htonl": [103, 318], "ntoh": [103, 318, 447, 456], "hton": [103, 318, 447, 456], "advisori": [103, 259, 403, 430, 437], "riddanc": 103, "neglect": [103, 381], "habit": [103, 219, 259, 416], "indefinit": [103, 143, 166, 172, 234, 249, 253, 257, 259, 315, 444, 448, 453, 454], "dumb": [103, 454, 455, 456, 457], "screw": 103, "setblock": [103, 277, 311, 318, 321], "o_nonblock": [103, 277, 452, 454], "indistinguish": [103, 269, 290], "o_ndelai": [103, 204, 277], "tcp_nodelai": [103, 120, 444, 455, 456], "nut": 103, "drive": [103, 220, 225, 236, 276, 277, 278, 279, 337, 340, 347, 365, 397, 401, 436, 449, 452, 453, 454], "crazi": 103, "suck": 103, "brain": [103, 441], "cake": 103, "ready_to_read": 103, "ready_to_writ": 103, "in_error": 103, "potential_read": 103, "potential_writ": 103, "potential_err": 103, "sensibl": [103, 106, 114, 120, 157, 172, 224, 243, 276, 343, 366, 367, 371, 405, 441, 444, 455, 456], "healthi": 103, "outbound": 103, "andrew": [104, 105, 166, 401, 437, 439, 440, 441, 442, 447, 448, 449, 451, 452, 453, 455, 456, 457, 458], "dalk": [104, 401, 439, 440, 442], "student_tupl": 104, "student_object": 104, "secondari": [104, 120, 150, 236, 249, 290, 331, 413, 423, 424, 425, 444, 445, 447], "multisort": 104, "timsort": [104, 451], "dsu": 104, "lexicograph": [104, 249, 324, 405, 417, 442], "schwartzian": 104, "scale": [104, 126, 300, 310, 323, 353, 363, 437, 440, 443, 455, 456], "lighter": [104, 365], "heavier": 104, "cmp": [104, 205, 214, 324, 437, 438, 441, 445], "strcoll": [104, 215, 254, 451], "cmp_to_kei": [104, 214, 215, 324, 444, 451], "interestingli": [104, 301, 419], "standard_wai": 104, "double_revers": 104, "newgrad": 104, "japanes": [105, 148, 254, 441, 456], "hebrew": [105, 148], "russian": [105, 148], "emoji": [105, 451, 457], "\u00e8": 105, "\u00ed": 105, "roman": [105, 350, 364, 440], "\u2170": 105, "0x10ffff": [105, 214, 331, 452], "265e": 105, "0x265e": 105, "0061": 105, "0062": 105, "0063": 105, "007b": 105, "2167": 105, "\u2177": 105, "2168": 105, "\u2178": 105, "nine": [105, 175, 323, 334, 453], "265f": 105, "pawn": 105, "1f600": 105, "grin": 105, "1f609": 105, "wink": 105, "paper": [105, 114, 144, 300, 318, 361, 365, 440], "glyph": [105, 197, 236], "diagon": [105, 416, 447], "horizont": [105, 166, 167, 353, 361, 410], "toolkit": [105, 236, 249, 346, 347, 414, 434, 437], "114": [105, 116, 214], "111": [105, 214, 249, 323, 325, 436], "0x50": 105, "79": [105, 359, 416], "74": [105, 323, 427, 457, 458], "68": [105, 175, 214, 300, 344, 388, 452, 457], "6f": 105, "6e": [105, 210], "0x00": [105, 167], "ram": [105, 175, 442], "gigabyt": [105, 384], "intoler": 105, "strcpy": 105, "resynchron": [105, 452], "consortium": [105, 385], "chronologi": 105, "computerphil": 105, "youtub": [105, 249], "channel": [105, 127, 165, 190, 201, 212, 256, 269, 318, 321, 377, 439, 452], "tom": [105, 356, 439, 442, 447, 451, 453], "scott": [105, 440, 442, 457], "jukka": [105, 454], "korpela": 105, "joel": [105, 455], "spolski": 105, "rudiment": 105, "fichier": 105, "trouv\u00e9": 105, "r\u00e9pertoir": 105, "greek": [105, 148], "u0394": 105, "u00000394": 105, "xnn": 105, "x80abc": 105, "ufffdabc": 105, "iso_8859_1": 105, "57344": 105, "ue000": 105, "xmlcharrefreplac": [105, 148, 214, 246, 324, 440], "unnnn": 105, "namereplac": [105, 148, 214, 246, 454], "40960": 105, "1972": [105, 320, 440, 441, 442], "xea": 105, "x80": [105, 283, 439], "x80abcd": 105, "xde": 105, "xb4": 105, "ua000": 105, "ua000abcd": 105, "u07b4": 105, "yi": 105, "syllabl": 105, "IT": 105, "comfort": [105, 182], "xac": 105, "u1234": [105, 148, 250], "u20ac": [105, 445, 454], "u00008000": 105, "172": [105, 452], "4660": 105, "8364": [105, 214], "32768": [105, 209, 321, 327, 399], "dose": 105, "annoy": [105, 439, 440, 445, 452, 457], "accent": [105, 313], "abcd\u00e9": 105, "inspir": [105, 157, 189, 249, 250, 365, 401, 402, 437, 438, 440, 443, 447, 448, 451, 452], "263": [105, 238, 355, 442], "fifth": [105, 166, 180, 236, 324, 344], "bidirect": [105, 120, 127, 152, 269, 324, 326, 364, 437], "233": [105, 215, 416, 424, 425], "0x0bf2": 105, "3972": [105, 444], "6000": [105, 224, 269], "13231": 105, "00e9": 105, "WITH": [105, 148, 319, 364, 401, 405], "0bf2": 105, "tamil": 105, "thousand": [105, 224, 242, 254, 289, 290, 301, 325, 384, 416, 455, 456], "0f84": 105, "mn": [105, 410], "tibetan": 105, "halanta": 105, "1770": 105, "lo": [105, 140, 324, 363, 410, 446], "tagbanwa": 105, "sa": [105, 143, 172, 318, 323], "33af": 105, "rad": [105, 440], "subcategori": 105, "nonspac": [105, 410], "\u00ea": 105, "00ea": 105, "0065": 105, "0302": 105, "circumflex": [105, 354], "casefold": [105, 114, 136, 150, 324, 452, 454, 457], "german": [105, 148, 254, 324, 361, 453], "\u00df": [105, 148, 324, 452], "00df": 105, "street": [105, 114, 301], "g\u00fcrzenichstra\u00df": 105, "g\u00fcrzenichstrass": 105, "inequ": [105, 175, 184, 191, 365, 405, 443, 451], "compare_str": 105, "nfd": [105, 364], "single_char": 105, "multiple_char": 105, "nfc": [105, 364, 457], "nfkc": [105, 326, 364, 371, 410], "nfkd": [105, 364], "caseless": [105, 324, 452], "compare_caseless": 105, "nd": [105, 214, 236, 243, 301, 324, 410], "57": [105, 172, 440, 452, 457, 458], "thai": [105, 148, 401], "arab": [105, 148, 175, 324, 437, 444, 451], "u0e55": 105, "u0e57": 105, "pragmat": 105, "ned": [105, 444, 451, 453, 458], "batcheld": 105, "marc": [105, 219, 320, 437, 438, 439, 440, 442, 452], "andr\u00e9": [105, 219, 320, 437, 438, 439, 440, 442], "lemburg": [105, 219, 320, 437, 438, 439, 440, 442], "slide": [105, 386], "europython": 105, "transmiss": [105, 167, 197, 257, 283, 383], "gib": [105, 258, 288, 337, 340, 397, 437, 440, 442], "u4500": 105, "blah": [105, 258, 276], "autodetect": [105, 286, 337, 372, 438, 442], "converg": [105, 323], "u4500abc": 105, "xe4": 105, "x94": [105, 224], "occas": [105, 106, 280, 295, 315, 327, 340, 419, 442, 453], "vulner": [105, 120, 131, 182, 226, 282, 296, 309, 313, 320, 328, 363, 386, 387, 388, 389, 394, 395, 399, 442], "bytestream": 105, "streamrecod": 105, "new_f": 105, "getdecod": [105, 148], "getread": [105, 148], "getwrit": [105, 148], "beazlei": [105, 439, 451], "gut": 105, "benjamin": [105, 443, 444, 446, 448, 449, 451, 452, 453, 454, 455, 456, 457], "peterson": [105, 443, 444, 446, 448, 449, 451, 452, 453, 454, 455, 456, 457], "alexand": [105, 443, 444, 446, 449, 451, 454, 455, 456], "belopolski": [105, 443, 444, 446, 449, 451, 454, 455, 456], "brandl": [105, 442, 443, 444, 446, 451, 452, 454, 455], "ezio": [105, 444, 451, 452, 453, 454], "melotti": [105, 444, 451, 452, 453, 454], "\u00e9ric": [105, 448, 452, 453, 457], "araujo": [105, 448, 452, 453, 457], "nichola": [105, 440, 447], "bastin": [105, 441], "mariu": [105, 437], "gedmina": 105, "kent": [105, 321, 340, 365, 438, 442, 443], "johnson": [105, 442, 443], "ken": [105, 347, 447, 448, 449, 455, 456, 457, 458], "krugler": 105, "martin": [105, 219, 437, 439, 440, 441, 442, 443, 444, 451, 452, 453, 454, 455, 457], "von": [105, 219, 300, 403, 437, 439, 440, 441, 442, 443, 444, 451, 452, 453, 457], "l\u00f6wi": [105, 219, 437, 439, 440, 441, 442, 443, 444, 451, 452, 453, 457], "terri": [105, 417, 447, 448, 454, 455, 456, 457, 458], "reedi": [105, 440, 447, 448, 454, 455, 456, 457, 458], "serhii": [105, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458], "storchaka": [105, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458], "eryk": [105, 448], "sun": [105, 143, 172, 234, 261, 323, 344, 448], "chad": [105, 440, 442, 443], "whitacr": 105, "graham": [105, 417, 443, 448], "wideman": 105, "michael": [106, 416, 417, 438, 439, 440, 441, 442, 443, 444, 450, 451, 452, 453, 454, 457, 458], "foord": [106, 444, 451], "urlopen": [106, 156, 159, 215, 232, 289, 370, 371, 372, 426, 442, 443, 444, 450, 451, 452, 453, 454], "2616": [106, 231, 370, 372, 383, 451], "supplementari": [106, 318], "namedtemporaryfil": [106, 189, 338, 443, 449], "tmp_file": 106, "req": [106, 321, 366, 372, 451], "the_pag": 106, "transmit": [106, 120, 127, 231, 317, 318, 339, 383, 384, 394, 441, 457], "someserv": 106, "northampton": 106, "urlencod": [106, 231, 257, 371, 372, 451, 454], "upload": [106, 438, 442, 444, 454, 456, 458], "hundredweight": 106, "tin": [106, 259], "door": [106, 114, 322], "somebodi": 106, "url_valu": 106, "full_url": [106, 372, 453], "dislik": [106, 366], "user_ag": 106, "win64": [106, 437, 454], "x64": [106, 443], "pretend_serv": 106, "getaddrinfo": [106, 120, 124, 135, 318, 401, 454, 455, 456], "404": [106, 230, 231, 234, 250, 372, 383, 394, 395, 416, 447, 454], "403": [106, 230, 234, 416, 447], "401": [106, 230, 372, 416, 447, 454], "299": [106, 212, 230], "599": [106, 212, 230], "basehttprequesthandl": [106, 231, 234, 370, 383, 451, 452], "shortmessag": [106, 234], "longmessag": [106, 234, 365, 444], "101": [106, 114, 230, 249, 300, 323, 325, 359, 366, 419, 436, 444, 451], "201": [106, 230, 249, 347, 437], "202": [106, 172, 224, 230], "203": [106, 230], "204": [106, 230, 234, 361], "205": [106, 230, 234, 378], "206": [106, 230], "304": [106, 230, 234, 456], "305": [106, 164, 230], "307": [106, 230, 282, 372], "unauthor": [106, 230], "402": [106, 230, 359], "payment": [106, 249], "charg": [106, 238, 401, 427], "405": [106, 230, 375], "406": [106, 230], "407": [106, 230], "408": [106, 230], "409": [106, 230], "410": [106, 230], "412": [106, 215, 230], "precondit": [106, 321, 439, 451], "413": [106, 230], "414": [106, 175, 230, 359, 410, 440], "415": [106, 230], "media": [106, 277, 301, 401], "416": [106, 230, 359], "417": [106, 230, 234], "502": [106, 230, 441], "503": [106, 230], "504": [106, 230, 324], "respond": [106, 212, 231, 234, 236, 257, 295, 318, 321, 331, 347, 366, 383, 394, 395, 444], "fish": [106, 282, 366, 367, 375, 428, 453], "doctyp": [106, 229, 231, 296, 372, 385, 388, 451, 457], "w3c": [106, 229, 231, 372, 385, 386, 390, 403, 438, 447, 455, 456, 457, 458], "dtd": [106, 229, 296, 372, 384, 389, 390, 391, 457], "w3": [106, 229, 296, 372, 386, 388, 401], "tr": [106, 166, 229, 296, 372, 386, 388, 401], "xhtml1": [106, 372], "someurl": 106, "httpmessag": [106, 234], "openerdirector": [106, 453], "lift": [106, 332, 361, 449, 455, 456, 457], "add_handl": [106, 372], "some_handler_inst": 106, "build_open": [106, 232, 372], "install_open": [106, 372], "httpbasicauthhandl": 106, "realm": [106, 197, 372], "cpanel": 106, "httppasswordmgr": 106, "httppasswordmgrwithdefaultrealm": [106, 372], "add_password": [106, 372], "password_mgr": [106, 372], "knew": [106, 273, 445], "top_level_url": 106, "a_url": 106, "proxyhandl": 106, "http_proxi": [106, 372], "unknownhandl": 106, "httpdefaulterrorhandl": [106, 372], "httpredirecthandl": 106, "ftphandler": 106, "datahandl": [106, 453], "httperrorprocessor": 106, "8080": [106, 231, 232, 318, 372, 394], "userinfo": [106, 372], "joe": [106, 223, 361, 372, 454, 457], "proxy_support": 106, "request_method": [106, 372, 383], "getproxi": [106, 372], "setdefaulttimeout": [106, 318], "voidspac": [106, 444], "uk": [106, 156, 232, 324, 344, 444], "lee": [106, 441, 442, 444, 448, 451, 456], "snif": 106, "msie": [106, 233], "sv1": 106, "net": [106, 172, 224, 232, 277, 301, 310, 399, 401, 409, 436, 437, 438, 439, 440, 441, 442, 443, 445, 452], "clr": 106, "4322": 106, "aspn": [106, 262], "contributor": [107, 116, 401, 445, 448], "collabor": [107, 440], "institut": [107, 401], "virtualenv": [107, 375, 436, 452], "predecessor": [107, 221, 440, 451], "mainten": [107, 199, 308, 410, 425, 436, 447, 449, 450, 451, 452, 453, 456, 457, 458], "evolut": [107, 437, 438], "somepackag": 107, "launcher": [107, 375, 396, 423, 444, 453, 455, 456], "wheel": [107, 179, 239, 300, 431, 447, 448, 449, 457, 458], "diminish": 107, "featurenam": [108, 391], "optionalreleas": 108, "mandatoryreleas": 108, "compilerflag": 108, "0a3": 108, "getoptionalreleas": 108, "getmandatoryreleas": 108, "predict": [108, 214, 246, 323, 331, 388, 403, 430, 436, 451, 458], "compiler_flag": [108, 214], "nested_scop": [108, 411, 438, 439], "0b1": 108, "227": 108, "0a1": 108, "0a2": 108, "328": [108, 214, 238, 407, 445, 452], "with_stat": [108, 411, 442, 443], "3105": [108, 445], "unicode_liter": [108, 411, 443], "3112": [108, 445], "generator_stop": [108, 202, 411, 454], "479": [108, 202, 455, 456], "tbd": [108, 450], "563": [108, 363, 402, 411], "postpon": [108, 166, 238, 363, 402, 403, 448], "council": [108, 448], "649": [108, 404], "helloworld": [109, 410], "tim": [109, 325, 345, 436, 437, 438, 439, 440, 441, 442, 444, 448, 449, 453, 454, 455, 458], "beauti": [109, 179], "condition": [109, 255, 301, 340, 458], "phrase": [109, 230, 231, 237, 276, 372, 405, 409, 410, 440, 443, 447, 452, 454], "reusabl": [109, 363, 383, 453], "proactiv": 109, "exemplifi": [109, 256, 416], "hypothet": [109, 276, 318, 437], "bandclass": 109, "teacher": [109, 361], "search_stud": 109, "student_nam": 109, "intra": [109, 179], "fenc": 109, "did_user_define_their_nam": 109, "my_nam": [109, 366], "print_user_nam": 109, "dinsdal": 109, "uncom": [109, 189, 236, 439, 449], "jabberwocki": 109, "light": [110, 152, 165, 166, 443, 444, 446], "weight": [110, 150, 165, 191, 300, 323, 325, 350, 365, 455], "locktyp": 110, "start_new_thread": [110, 135], "interrupt_main": [110, 447], "raise_sign": [110, 315], "allocate_lock": 110, "unlock": [110, 132, 204, 259, 268, 269, 287, 340, 343, 403, 442], "get_id": [110, 315, 330, 343, 344, 452], "get_native_id": [110, 343, 457], "openbsd": [110, 212, 265, 277, 318, 343, 344, 454, 456], "netbsd": [110, 285, 318, 343, 344, 448, 456], "dragonflybsd": [110, 318, 343], "stack_siz": [110, 343, 442], "768": [110, 343], "timeout_max": [110, 343], "a_lock": 110, "surviv": [110, 165, 216, 378], "3141": [111, 273, 445], "abcmeta": [111, 403, 443, 451, 452, 453], "myabc": 111, "get_cache_token": [111, 453], "get_iter": 111, "myiter": [111, 363], "update_abstractmethod": 111, "my_abstract_method": 111, "my_abstract_classmethod": 111, "my_abstract_staticmethod": 111, "my_abstract_properti": 111, "_get_x": 111, "_set_x": 111, "__isabstractmethod__": [111, 452], "_fget": 111, "_fset": 111, "_fdel": 111, "abstractclassmethod": [111, 451, 452], "abstractstaticmethod": [111, 451, 452], "abstractproperti": [111, 443, 452], "programnam": 114, "store_const": [114, 276], "append_const": [114, 276], "helpformatt": [114, 276], "myprogram": 114, "cd": [114, 179, 249, 365, 392, 443], "subdir": [114, 205, 259, 340], "print_help": [114, 276], "parent_pars": 114, "foo_pars": 114, "bar_pars": 114, "yyi": [114, 407], "rawdescriptionhelpformatt": 114, "rawtexthelpformatt": 114, "metavartypehelpformatt": 114, "dedent": [114, 236, 342, 354, 355, 402, 406, 410], "nbar": 114, "convert_arg_line_to_arg": 114, "getpreferredencod": [114, 246, 254, 277, 328, 448, 449, 456], "codepag": [114, 331, 449], "set_default": [114, 276], "foonlei": 114, "store_fals": [114, 276], "foon": 114, "argumenterror": [114, 165], "_storeact": 114, "option_str": 114, "absent": [114, 150, 166, 256, 280, 318, 325, 372, 451], "f1": [114, 179, 205, 256, 269, 324, 402, 415], "f2": [114, 179, 205, 269, 324, 402], "f4": [114, 439], "booleanoptionalact": [114, 449, 450], "format_usag": 114, "fooaction": 114, "yy": 114, "infil": [114, 116, 134, 250, 313, 357, 427, 446, 451], "_io": [114, 177, 451, 455], "argumenttypeerror": 114, "distanc": [114, 144, 145, 258, 262, 323, 347, 350, 361, 448, 457], "code_point": 114, "source_fil": 114, "dest_fil": 114, "datapath": 114, "short_titl": 114, "tale": 114, "citi": [114, 321, 373, 401], "downstream": [114, 400, 448], "jsondecodeerror": [114, 250, 454], "scissor": 114, "frobbl": 114, "foo_bar": [114, 276, 367], "xyzz": 114, "badger": 114, "inher": [114, 115, 343, 375, 388], "cautiou": [114, 250, 259, 371], "bacon": [114, 150, 179, 238, 266, 324, 358, 372, 403], "bac": 114, "mmm": [114, 237], "ba": [114, 243, 249, 397, 447, 454], "parser_class": 114, "svn": [114, 153, 334, 371, 440, 442, 443, 444, 451], "cmd1": 114, "cmd2": 114, "parser_a": 114, "parser_b": 114, "parser_foo": 114, "parser_bar": 114, "xyzyx": 114, "subparser_nam": 114, "subparser1": 114, "subparser2": 114, "dat": [114, 173, 436], "add_argument_group": 114, "group1": [114, 301, 418], "group2": [114, 418], "exclusive_group": 114, "736": 114, "get_default": 114, "print_usag": [114, 276], "format_help": 114, "parse_known_arg": 114, "arg_lin": 114, "myargumentpars": 114, "errorcatchingargumentpars": 114, "parse_intermixed_arg": [114, 456], "parse_known_intermixed_arg": 114, "unpars": [114, 116, 188, 239, 296, 390, 458], "doit": 114, "monkei": [114, 363, 366, 367, 449], "optionpars": [114, 276, 440, 442], "add_opt": [114, 276, 440], "disable_interspersed_arg": [114, 276], "callback_": 114, "optionerror": [114, 276], "optionvalueerror": [114, 276], "compactli": [115, 414, 427, 440], "typecod": [115, 135, 269, 362, 427, 445], "frombyt": [115, 318, 451, 458], "fromunicod": 115, "buffer_info": 115, "byteswap": [115, 453], "fromfil": [115, 179, 445], "fromstr": [115, 388, 451, 458], "unicodestr": 115, "enc": [115, 321], "tobyt": [115, 324, 444, 451, 458], "tofil": [115, 179, 445], "tostr": [115, 388, 444, 451, 453, 458], "tolist": [115, 324, 439, 444, 451], "u2641": 115, "asdl": [116, 442, 447, 458], "stmt": [116, 320, 345, 443], "type_ignor": [116, 354], "argtyp": [116, 165], "functiondef": 116, "decorator_list": 116, "type_com": [116, 354, 406, 457], "type_param": [116, 363, 402, 406, 411], "asyncfunctiondef": 116, "classdef": [116, 402], "typealia": [116, 363], "augassign": [116, 406], "annassign": 116, "orels": [116, 443], "asyncfor": 116, "withitem": 116, "asyncwith": 116, "match_cas": 116, "excepthandl": 116, "finalbodi": 116, "trystar": 116, "importfrom": 116, "end_lineno": [116, 180, 202, 358, 406, 447, 457], "end_col_offset": [116, 180, 406, 457], "boolop": 116, "namedexpr": 116, "binop": [116, 443], "unaryop": 116, "ifexp": 116, "elt": 116, "setcomp": [116, 406], "dictcomp": [116, 406], "generatorexp": 116, "yieldfrom": 116, "cmpop": 116, "formattedvalu": 116, "joinedstr": 116, "expr_context": 116, "matmult": [116, 406], "lshift": [116, 275, 406], "rshift": [116, 275, 406], "bitor": [116, 406], "bitxor": [116, 406], "bitand": [116, 406], "uadd": [116, 406], "usub": [116, 406], "noteq": [116, 406], "lte": [116, 406], "gte": [116, 406], "isnot": [116, 406], "notin": [116, 406], "ifs": 116, "is_async": [116, 294], "posonlyarg": 116, "vararg": [116, 243], "kwonlyarg": [116, 243], "kw_default": 116, "asnam": 116, "context_expr": 116, "optional_var": 116, "matchvalu": 116, "matchsingleton": 116, "matchsequ": 116, "matchmap": 116, "matchclass": 116, "kwd_attr": 116, "kwd_pattern": 116, "matchstar": 116, "matcha": 116, "matchor": 116, "typeignor": 116, "typevar": [116, 180, 324, 330, 362, 363, 402, 448, 449], "paramspec": [116, 180, 324, 363, 402, 406, 447, 449], "typevartupl": [116, 180, 324, 363, 402, 406, 448, 449], "_ast": [116, 442, 451], "aka": [116, 182, 334, 384, 397, 403, 436, 448, 456], "_field": [116, 150, 363, 443, 444], "source_lin": 116, "nameconst": [116, 449, 450, 457], "extslic": [116, 458], "fantast": 116, "snake": [116, 150], "func_typ": [116, 406, 457], "115": [116, 249, 325, 359], "sin": [116, 144, 175, 262, 403, 440], "collaps": [116, 185, 247, 278, 279, 342, 453], "soc": 116, "otherexcept": [116, 202], "subpattern": [116, 402, 416, 447], "overal": [116, 164, 172, 183, 216, 225, 256, 270, 276, 290, 301, 325, 327, 345, 359, 403, 419, 444, 448, 453, 454], "nomin": [116, 323], "point2d": [116, 363], "point3d": [116, 150, 363], "wildcard": [116, 178, 209, 220, 279, 313, 328, 365, 388, 410, 416, 418, 450, 456, 457], "outermost": [116, 243, 324, 343, 415], "decorator1": 116, "decorator2": 116, "3115": [116, 362, 402, 403, 445, 452], "base1": [116, 415], "base2": [116, 415], "other_func": 116, "feature_vers": [116, 354, 457], "flags_valu": 116, "pycf_optimized_ast": [116, 450], "pycf_type_com": 116, "misplac": 116, "ast_obj": 116, "literal_ev": [116, 214, 443, 451, 456], "node_or_str": 116, "oneself": 116, "denial": [116, 214, 250, 324, 337, 384, 403, 430, 448], "get_docstr": 116, "cleandoc": [116, 243], "get_source_seg": [116, 457], "fix_missing_loc": 116, "increment_lineno": 116, "copy_loc": 116, "new_nod": 116, "old_nod": 116, "iter_field": 116, "fieldnam": [116, 150, 164, 443, 446], "iter_child_nod": 116, "nodevisitor": [116, 443, 457], "generic_visit": 116, "nodetransform": [116, 443], "visit_num": [116, 457], "visit_str": [116, 457], "visit_byt": [116, 457], "visit_nameconst": [116, 457], "visit_ellipsi": [116, 457], "visit_const": [116, 457], "rewritenam": 116, "visit_nam": 116, "new_tre": 116, "yourtransform": 116, "annotate_field": 116, "include_attribut": 116, "pycf_allow_top_level_await": [116, 214, 457, 458], "asttoken": 116, "leoast": 116, "unifi": [116, 148, 179, 182, 282, 364, 415, 453], "libcst": [116, 458], "codemod": 116, "parso": [116, 458], "recoveri": [116, 190, 237, 308, 372, 406], "ipc": [117, 124, 127, 245, 318], "bridg": [117, 123, 347, 451], "emscripten": [117, 153, 156, 199, 204, 212, 218, 222, 231, 234, 237, 245, 265, 269, 277, 287, 292, 304, 310, 311, 315, 317, 318, 319, 321, 328, 331, 335, 343, 372, 375, 379, 394, 395, 400, 431, 448], "wasi": [117, 153, 156, 199, 201, 202, 204, 212, 218, 222, 231, 234, 237, 245, 265, 269, 277, 287, 292, 304, 310, 311, 315, 317, 318, 319, 321, 328, 331, 335, 343, 372, 375, 379, 394, 395, 400, 431, 448], "webassembli": [117, 153, 156, 199, 204, 212, 218, 222, 231, 234, 237, 265, 269, 277, 287, 292, 304, 310, 311, 315, 317, 318, 319, 321, 328, 331, 335, 343, 372, 375, 379, 394, 395, 400, 448], "wasm32": [117, 153, 156, 199, 204, 212, 218, 222, 231, 234, 237, 245, 265, 269, 277, 287, 292, 304, 310, 311, 315, 317, 318, 319, 321, 328, 331, 335, 343, 372, 375, 379, 394, 395, 400, 431, 448], "taskgroup": [118, 133, 448], "create_task": [118, 119, 120, 122, 123, 124, 128, 132, 133, 448, 454, 456, 457], "current_task": [118, 122, 133, 449, 456, 458], "all_task": [118, 122, 133, 456, 458], "wait_for": [118, 128, 131, 132, 133, 269, 343, 448, 457, 458], "shield": [118, 457], "to_thread": [118, 133, 458], "run_coroutine_threadsaf": [118, 119, 133, 447, 454, 455], "as_complet": [118, 123, 133, 156, 449, 457], "amongst": [118, 261, 321, 375], "fifo": [118, 128, 150, 249, 269, 277, 279, 298, 311, 322, 337, 455, 456], "priorityqueu": [118, 128, 298, 324, 443], "lifoqueu": [118, 128, 298, 324, 443], "lifo": [118, 150, 298, 324, 365], "workload": [118, 128, 458], "create_subprocess_exec": [118, 120, 126, 131, 328, 457], "create_subprocess_shel": [118, 120, 131, 457], "open_connect": [118, 120, 127, 130, 454, 456], "open_unix_connect": [118, 130], "start_serv": [118, 120, 127, 130, 160, 343, 456], "start_unix_serv": [118, 120, 130], "boundedsemaphor": [118, 269, 343, 452, 457], "barrier": [118, 269, 361, 448, 451], "cancellederror": [118, 121, 123, 129, 132, 133, 156, 457], "brokenbarriererror": [118, 132, 343, 448, 451], "trap": [119, 159, 175, 345, 439, 441, 452], "pythonasynciodebug": [119, 120, 177, 430], "set_debug": [119, 120, 124, 216, 454], "logger": [119, 159, 256, 257, 269, 314, 335, 363, 365, 440, 444, 446, 450, 451, 452, 453, 454, 456, 457, 458], "threadsaf": [119, 215, 249, 255, 300], "call_soon": [119, 123, 124, 127, 130, 363, 456], "call_at": [119, 120, 124, 456], "slow_callback_dur": 119, "call_soon_threadsaf": [119, 120, 124, 456], "fut": [119, 123], "coro_func": 119, "run_in_executor": [119, 120, 124, 133, 458], "coro": [119, 120, 122, 129, 133, 454], "set_except": [119, 123, 133, 135, 156, 165, 455], "321": [119, 175], "source_traceback": 119, "base_ev": [120, 331, 405], "prefac": [120, 127, 424], "get_running_loop": [120, 123, 124, 127, 130, 133, 456], "get_event_loop": [120, 124, 126, 449, 454, 455, 456], "get_event_loop_polici": [120, 124, 126], "set_event_loop": [120, 124, 125, 126, 129, 457], "new_event_loop": [120, 124, 126, 129, 457], "timerhandl": 120, "create_serv": [120, 124, 127, 130, 318, 454, 455, 456, 457], "selectoreventloop": [120, 125, 126, 131, 448], "proactoreventloop": [120, 125, 126, 131, 448, 457], "showcas": [120, 127], "run_until_complet": [120, 124, 454, 455, 457], "run_forev": [120, 124], "is_run": [120, 124], "is_clos": [120, 124, 127, 130, 454, 455, 456], "idempot": [120, 127, 157, 215, 449, 456], "irrevers": [120, 308], "shutdown_asyncgen": [120, 124, 331, 405, 455], "aclos": [120, 151, 159, 405, 447, 458], "shutdown_default_executor": [120, 129, 458], "multithread": [120, 131, 133, 224, 254, 269, 300, 328, 366, 383, 440, 449, 458], "567": [120, 123, 160, 175, 325, 427, 446, 456], "create_futur": [120, 122, 123, 124, 127, 454, 455], "set_task_factori": [120, 124, 133, 454], "get_task_factori": [120, 124, 454], "create_connect": [120, 122, 124, 127, 130, 318, 321, 443, 444, 448, 451, 454, 456, 457], "protocol_factori": [120, 127], "proto": [120, 130, 283, 318, 363, 372], "local_addr": [120, 127, 130], "server_hostnam": [120, 130, 321, 451, 456], "ssl_handshake_timeout": [120, 130, 456], "ssl_shutdown_timeout": [120, 130], "happy_eyeballs_delai": [120, 130, 457], "interleav": [120, 130, 182, 269, 444, 451, 456, 457], "all_error": [120, 212, 318, 448], "af_inet6": [120, 318], "chronolog": [120, 455], "synopsi": [120, 295, 321], "connection_mad": [120, 124, 127], "sslcontext": [120, 127, 130, 212, 231, 237, 257, 287, 317, 321, 372, 394, 444, 447, 449, 450, 451, 452, 453, 454, 455, 456], "create_default_context": [120, 321, 444, 450, 453], "certif": [120, 127, 130, 212, 231, 237, 257, 287, 340, 372, 394, 443, 449, 450, 456], "eyebal": [120, 457], "8305": 120, "250": [120, 212, 290, 317, 320, 361, 444], "local_host": 120, "local_port": 120, "handshak": [120, 130, 321, 447, 453, 454, 455, 456, 457], "60": [120, 130, 140, 145, 156, 172, 175, 185, 249, 289, 300, 321, 323, 344, 358, 359, 361, 374, 410, 440, 442, 448, 451, 455, 457], "dual": [120, 318, 321, 401, 410], "undesir": [120, 321, 438, 442, 448], "datatrack": 120, "ietf": [120, 224, 247, 321, 327], "rfc6555": 120, "create_datagram_endpoint": [120, 124, 127, 448, 455, 456, 457, 458], "remote_addr": [120, 127], "reuse_port": [120, 130, 318], "allow_broadcast": 120, "datagram": [120, 124, 257, 319, 321, 427, 448], "af_unix": [120, 125, 269, 318, 319], "sock_dgram": [120, 257, 318, 319, 444], "remote_host": 120, "remote_port": 120, "so_reuseport": [120, 318, 340], "broadcast": [120, 247, 318], "preexist": 120, "reuse_address": [120, 130, 448, 455, 456, 457, 458], "so_reuseaddr": [120, 318, 340, 448, 455, 456, 457, 458], "uid": [120, 135, 234, 237, 277, 279, 286, 287, 292, 304, 314, 322, 337, 443, 444, 452, 454, 457], "incom": [120, 127, 202, 225, 234, 250, 269, 319, 321, 387, 449, 451], "packet": [120, 127, 247, 257, 318, 319, 394, 444], "create_unix_connect": [120, 124, 125, 127, 130], "af_unspec": [120, 130, 318], "ai_pass": [120, 130, 318], "backlog": [120, 130, 269, 318, 454], "time_wait": [120, 318], "expir": [120, 133, 201, 232, 233, 269, 307, 311, 315, 317, 318, 321, 328, 343, 344, 372, 452], "serve_forev": [120, 127, 130, 160, 234, 269, 315, 319, 383, 394, 395, 442, 443, 452, 456], "create_unix_serv": [120, 124, 125, 127, 130, 456], "connect_accepted_socket": [120, 124, 127, 447, 455], "sendfil": [120, 121, 124, 127, 277, 314, 318, 321, 383, 452, 454, 456], "sendfilenotavailableerror": [120, 121], "syscal": [120, 121, 202, 277, 304, 314, 447, 454, 455, 457], "start_tl": [120, 124, 130, 448, 456], "server_sid": [120, 321], "coder": 120, "sporad": [120, 277], "add_read": [120, 124, 125, 127, 130], "remove_read": [120, 124], "add_writ": [120, 124, 125], "remove_writ": [120, 124], "sock_recv": [120, 124, 456], "nbyte": [120, 127, 135, 268, 270, 296, 308, 318, 324], "sock_recv_into": [120, 124, 456], "recv_into": [120, 318, 321, 442, 444], "sock_recvfrom": [120, 124, 448], "recvfrom": [120, 318, 347, 454], "sock_recvfrom_into": [120, 124, 448], "recvfrom_into": [120, 318, 442, 444], "sock_sendal": [120, 124, 456], "sendal": [120, 318, 319, 321, 454], "sock_sendto": [120, 124, 448], "sendto": [120, 124, 127, 135, 318, 319, 454], "sock_connect": [120, 124, 454], "inet_pton": [120, 247, 318, 453, 457, 458], "sock_accept": [120, 124, 456], "sock_sendfil": [120, 124, 456], "getnameinfo": [120, 124, 135, 318, 401, 456], "sockaddr": [120, 135, 318], "connect_read_pip": [120, 124, 125, 127, 131], "readtransport": [120, 127, 456], "connect_write_pip": [120, 124, 125, 127, 131], "writetransport": [120, 127], "subprocess_exec": [120, 124, 125, 126, 131], "subprocess_shel": [120, 124, 125, 127, 131], "add_signal_handl": [120, 124, 125], "uncatch": 120, "remove_signal_handl": [120, 124, 125], "blocking_io": [120, 133], "urandom": [120, 224, 269, 277, 300, 321, 441, 444, 448, 449, 453, 454, 455], "cpu_bound": 120, "set_default_executor": [120, 124, 448, 457], "set_exception_handl": [120, 124], "call_exception_handl": [120, 124], "get_exception_handl": [120, 124, 454, 455], "default_exception_handl": [120, 124], "asyncgen": 120, "get_debug": [120, 124, 216, 454], "subprocessprotocol": 120, "devnul": [120, 131, 269, 277, 315, 328, 452], "universal_newlin": [120, 131, 328, 441, 456], "subprocesstransport": [120, 127], "get_context": [120, 133, 156, 269, 449, 450, 453], "srv": [120, 160, 456], "wait_clos": [120, 130, 456], "get_loop": [120, 123, 129, 456], "client_connect": 120, "is_serv": [120, 456], "trsock": 120, "transportsocket": 120, "mypolici": [120, 452], "defaulteventlooppolici": [120, 126], "selectselector": [120, 125, 311], "set_event_loop_polici": [120, 124, 126], "iocp": 120, "msdn": [120, 277], "abstracteventloop": [120, 122, 126, 458], "purposefulli": 120, "hello_world": 120, "reschedul": [120, 133], "display_d": [120, 133], "end_tim": [120, 133], "socketpair": [120, 127, 130, 315, 318, 441, 456], "rsock": [120, 127, 130], "wsock": [120, 127, 130], "recept": [120, 127, 130], "ask_exit": 120, "signam": [120, 315], "3600": [120, 127, 133, 159, 172], "exceed": [121, 133, 175, 201, 202, 214, 257, 289, 304, 342, 358, 397, 399, 440, 441, 443, 455], "deadlin": [121, 133, 307], "invalidstateerror": [121, 123, 133, 156], "incompletereaderror": [121, 130], "limitoverrunerror": [121, 130], "baseeventloop": 122, "successor": [122, 221, 401], "_make_socket_transport": 122, "_register_task": 122, "_unregister_task": 122, "_enter_task": 122, "_leave_task": 122, "base_futur": 123, "isfutur": 123, "_asyncio_future_block": 123, "ensure_futur": [123, 133, 454, 455], "iscoroutin": [123, 133, 243, 449, 454], "isawait": [123, 151, 243, 366, 454], "mid": [123, 133], "wrap_futur": 123, "set_result": [123, 127, 133, 156], "add_done_callback": [123, 133, 156, 456], "remove_done_callback": [123, 133], "set_aft": 123, "mimic": [123, 172, 243, 255, 327, 358, 361, 444, 446], "lifecycl": [124, 378, 444, 453], "call_lat": [124, 456], "get_extra_info": [124, 127, 130, 160, 457], "set_protocol": [124, 127], "get_protocol": [124, 127], "is_read": [124, 127, 456], "pause_read": [124, 127, 456], "resume_read": [124, 127, 456], "writelin": [124, 127, 130, 148, 179, 246, 437], "can_write_eof": [124, 127, 130], "write_eof": [124, 127, 130, 321], "get_write_buffer_s": [124, 127], "get_write_buffer_limit": [124, 127, 454], "water": [124, 310, 454], "set_write_buffer_limit": [124, 127], "get_pid": [124, 127], "get_pipe_transport": [124, 127], "get_returncod": [124, 127], "send_sign": [124, 127, 131, 328, 443], "connection_lost": [124, 127], "pause_writ": [124, 127], "resume_writ": [124, 127], "drain": [124, 127, 130, 132, 321, 451], "data_receiv": [124, 127], "eof_receiv": [124, 127], "get_buff": [124, 127], "buffer_upd": [124, 127], "datagram_receiv": [124, 127], "error_receiv": [124, 127], "pipe_data_receiv": [124, 127], "pipe_connection_lost": [124, 127], "process_exit": [124, 127], "abstracteventlooppolici": [124, 126, 449], "proactor_ev": 125, "windows_ev": 125, "windows_util": [125, 456], "hpet": 125, "set_child_watch": [125, 126, 449], "kqueueselector": [125, 311], "pollselector": [125, 311, 456], "get_child_watch": [126, 449], "abstractchildwatch": [126, 449], "windowsselectoreventlooppolici": [126, 456], "windowsproactoreventlooppolici": [126, 456], "threadedchildwatch": [126, 131, 449], "multiloopchildwatch": [126, 449], "safechildwatch": [126, 449], "fastchildwatch": [126, 449], "prohibit": [126, 182, 246, 250, 321, 383, 405, 447, 448, 456, 457, 458], "add_child_handl": 126, "returncod": [126, 127, 131, 328, 454, 457], "remove_child_handl": 126, "attach_loop": 126, "detach": [126, 135, 142, 246, 258, 277, 318, 321, 353, 378, 381, 405, 451, 452], "is_act": [126, 221], "inact": [126, 131, 416, 443], "sigchld": [126, 277, 315], "reap": 126, "waitpid": [126, 245, 277, 291, 442, 453, 454], "pidfdchildwatch": [126, 449, 458], "pidfd": [126, 315], "goldilock": 126, "linearli": [126, 310, 323], "myeventlooppolici": 126, "eventloop": 126, "basetransport": [127, 130, 457], "datagramtransport": 127, "baseprotocol": 127, "bufferedprotocol": [127, 456, 457], "datagramprotocol": [127, 448], "outgo": [127, 189, 318, 321, 449, 451, 452], "getsockopt": [127, 318, 321, 444, 455], "peernam": [127, 130], "getpeernam": [127, 160, 318, 321], "socknam": 127, "getsocknam": [127, 130, 318, 321], "sslsocket": [127, 321, 444, 447, 453, 454, 456, 458], "cipher": [127, 157, 224, 431, 444, 447, 451, 452, 454, 455, 456], "peercert": 127, "getpeercert": [127, 321, 443, 453], "ssl_object": 127, "sslobject": [127, 321, 363, 454, 456], "watermark": [127, 130], "opportun": [127, 133, 148, 307, 367, 436], "list_of_data": 127, "addr": [127, 130, 160, 247, 311, 318, 321, 340, 395, 451, 454], "sigkil": [127, 131, 269, 277, 315, 328, 338, 441, 456], "sigterm": [127, 131, 269, 315, 328, 443], "terminateprocess": [127, 131, 135, 269, 277, 328, 443, 444], "unidirect": [127, 269], "reassembl": 127, "sizehint": [127, 148, 310], "recipi": [127, 189, 197, 198, 317, 319, 401], "undeliver": 127, "enobuf": [127, 201], "echoserverprotocol": 127, "8888": [127, 130], "echoclientprotocol": 127, "on_con_lost": 127, "myprotocol": 127, "dateprotocol": 127, "exit_futur": 127, "pipe_clos": 127, "check_for_exit": 127, "get_dat": [127, 131, 259], "qsize": [128, 269, 298], "get_nowait": [128, 249, 269, 298], "queueempti": 128, "unfinish": [128, 232, 269, 298], "task_don": [128, 269, 298, 442, 454], "unblock": [128, 132, 221, 269, 298, 315], "queueful": 128, "priority_numb": [128, 298], "sleep_for": 128, "slept": 128, "total_sleep_tim": 128, "started_at": 128, "total_slept_for": 128, "return_except": [128, 133], "loop_factori": [129, 449], "tcp_echo_cli": 130, "client_connected_cb": 130, "readexactli": [130, 455], "readuntil": [130, 454, 455], "at_eof": 130, "feed_eof": 130, "handle_echo": 130, "print_http_head": 130, "urlsplit": [130, 371, 444, 455], "wait_for_data": 130, "base_subprocess": 131, "proc": [131, 229, 277, 328, 455], "zzz": [131, 407], "stdout_data": [131, 328, 441], "stderr_data": [131, 328, 441], "ctrl_c_event": [131, 277, 315, 328, 444], "ctrl_break_ev": [131, 277, 315, 328, 444], "creationflag": [131, 328, 441], "create_new_process_group": [131, 328], "fair": [132, 321, 347, 365, 371, 439, 455], "waiter": [132, 343], "waiter_task": 132, "awaken": [132, 343], "is_set": [132, 343, 447, 450], "cond": [132, 137, 331, 363, 442], "wake": [132, 236, 310, 315, 343, 443], "notify_al": [132, 343, 447, 450], "sem": 132, "example_barri": 132, "housekeep": [132, 343], "n_wait": [132, 343], "0x1053bb7c8": 133, "say_aft": 133, "task1": [133, 427], "task2": [133, 427], "tg": 133, "function_that_returns_a_future_object": 133, "some_python_coroutin": 133, "leverag": [133, 240, 269, 453, 458], "background_task": 133, "some_coro": 133, "robustli": [133, 444], "uncancel": [133, 448], "another_coro": 133, "bubbl": [133, 402], "baseexceptiongroup": [133, 202, 358, 402, 448, 450], "aw": 133, "aggreg": [133, 182, 249, 320, 365, 448], "stronger": [133, 367], "subtask": 133, "eager_task_factori": [133, 449], "create_eager_task_factori": [133, 449], "custom_task_constructor": 133, "long_running_task": 133, "overdu": 133, "new_deadlin": 133, "timeout_at": 133, "yai": [133, 424], "return_when": [133, 156], "all_complet": [133, 156], "first_complet": [133, 156], "first_except": [133, 156], "earliest_result": 133, "took": [133, 159, 290, 345, 437], "eager_start": 133, "eagerli": [133, 375, 456], "get_stack": [133, 137], "newest": 133, "print_stack": [133, 255, 358, 454], "get_coro": [133, 457], "get_nam": [133, 330, 457], "deni": [133, 201, 319, 403, 440], "cancel_m": 133, "ineffect": [133, 453], "make_request_with_timeout": 133, "make_request": 133, "make_another_request": 133, "unrelated_cod": 133, "fashion": [133, 156, 158, 160, 223, 250, 269, 290, 301, 318, 358, 363, 388, 402, 403, 405, 416, 441, 444, 452, 453], "suppres": 133, "_exit": [134, 202, 203, 277], "unregistr": [134, 311], "counterfil": 134, "_count": 134, "incrcount": 134, "savecount": 134, "adject": [134, 421], "donni": 134, "sector": 134, "breakpointhook": [135, 214, 331, 425, 430, 456], "run_fil": [135, 430], "run_interactivehook": [135, 331], "run_startup": [135, 430], "run_stdin": [135, 430], "addressof": [135, 165], "call_funct": [135, 165, 448, 455], "func_point": 135, "cdata": [135, 165, 296, 385, 390, 391], "create_string_buff": [135, 165, 442], "create_unicode_buff": [135, 165], "dlopen": [135, 165, 277, 331, 431, 439, 442], "dlsym": [135, 165], "get_errno": [135, 165, 443], "get_last_error": [135, 165, 443], "set_errno": [135, 165, 443], "set_last_error": [135, 165, 443], "string_at": [135, 165, 203, 452], "wstring_at": [135, 165], "code_object": 135, "flock": [135, 204, 259], "lockf": [135, 204, 259, 277, 439, 443, 452], "whenc": [135, 204, 246, 265, 277, 421, 439], "sendcmd": [135, 212], "get_object": [135, 216, 447, 457], "get_referr": [135, 216, 359, 447], "root_dir": [135, 220, 314, 447, 449], "dir_fd": [135, 214, 220, 277, 314, 447, 448, 452], "get_osfhandl": [135, 268], "open_osfhandl": [135, 268], "add_dll_directori": [135, 277, 457], "chdir": [135, 159, 277, 314, 331, 426, 448, 451, 452, 458], "chflag": [135, 277, 314, 322, 443, 452], "gid": [135, 222, 277, 279, 292, 337, 443, 444, 452, 454], "forkpti": [135, 277], "fwalk": [135, 277, 452, 456], "topdown": [135, 277], "onerror": [135, 277, 284, 314, 449, 450, 456], "follow_symlink": [135, 277, 279, 314, 447, 450, 452], "getxattr": [135, 277, 452], "killpg": [135, 277, 440], "pgid": [135, 277], "src_dir_fd": [135, 277], "dst_dir_fd": [135, 277], "listdriv": [135, 277, 449], "listmount": [135, 277, 449], "listvolum": [135, 277, 449], "listxattr": [135, 277, 452], "posix_spawn": [135, 277, 457], "putenv": [135, 277, 288, 458], "removexattr": [135, 277, 452], "scandir": [135, 220, 277, 279, 455, 456, 457], "setxattr": [135, 277, 452], "startfil": [135, 277], "cwd": [135, 212, 277, 279, 328, 340, 375, 441, 457], "show_cmd": [135, 277], "unsetenv": [135, 277, 443, 458], "utim": [135, 277, 314, 452], "followlink": [135, 277, 443], "rglob": [135, 279, 448, 449, 450], "find_class": [135, 282], "putlin": [135, 287], "prlimit": [135, 304, 453], "setrlimit": [135, 304, 340], "copymod": [135, 314], "copystat": [135, 314, 452], "make_arch": [135, 314, 444, 449, 451, 454, 457], "base_nam": [135, 314], "base_dir": 135, "unpack_arch": [135, 314, 449, 451], "extract_dir": [135, 314], "pthread_kil": [135, 277, 315, 452], "thread_id": [135, 315, 344], "signalnum": [135, 315], "gethostbyaddr": [135, 277, 318], "gethostbynam": [135, 318], "getservbynam": [135, 318], "servicenam": [135, 318], "protocolnam": [135, 318], "getservbyport": [135, 318, 441], "sendmsg": [135, 318, 449, 452, 454], "sethostnam": [135, 318, 452], "connection_handl": [135, 320], "enable_load_extens": [135, 320, 431, 444, 447, 451], "load_extens": [135, 320, 444, 447, 449, 451], "_current_except": [135, 331, 449], "_current_fram": [135, 331, 425, 442], "_getframemodulenam": [135, 331], "excepthook": [135, 331, 340, 343, 425, 438, 447, 457, 458], "set_asyncgen_hooks_fin": [135, 331], "set_asyncgen_hooks_firstit": [135, 331], "closelog": [135, 335, 449], "openlog": [135, 335, 449], "logopt": [135, 335], "setlogmask": [135, 335], "maskpri": [135, 335], "mkdtemp": [135, 277, 338, 340, 378, 449], "fullpath": [135, 338], "mkstemp": [135, 269, 338], "fullurl": [135, 372], "connectregistri": [135, 381], "computer_nam": [135, 381], "createkei": [135, 381], "sub_kei": [135, 381], "deletekei": [135, 381], "deletevalu": [135, 381], "disablereflectionkei": [135, 381, 443, 444], "enablereflectionkei": [135, 381, 443, 444], "enumkei": [135, 381], "enumvalu": [135, 381], "expandenvironmentstr": [135, 381, 443], "loadkei": [135, 381], "file_nam": [135, 381], "openkei": [135, 381], "pyhkei": [135, 381], "queryinfokei": [135, 381], "queryreflectionkei": [135, 381, 443, 444], "queryvalu": [135, 381], "value_nam": [135, 381], "savekei": [135, 381], "setvalu": [135, 381], "_winapi": 135, "createfil": 135, "desired_access": 135, "share_mod": 135, "creation_disposit": 135, "flags_and_attribut": 135, "createjunct": 135, "src_path": 135, "dst_path": 135, "createnamedpip": 135, "open_mod": 135, "pipe_mod": 135, "createpip": 135, "createprocess": [135, 328], "application_nam": 135, "command_lin": [135, 328], "current_directori": 135, "openprocess": 135, "process_id": [135, 318], "exit_cod": [135, 202], "pyobj_fromptr": 135, "4648": [136, 309], "facto": [136, 166, 232, 240, 337, 371, 394, 421], "ascii85": [136, 453], "uuencod": [136, 139, 148], "76": [136, 191, 323, 359, 361, 394], "2045": [136, 183, 185, 191, 192, 194, 394], "b64encod": [136, 224], "altchar": 136, "b64decod": [136, 224, 452], "a2b_base64": [136, 139], "standard_b64encod": 136, "standard_b64decod": 136, "urlsafe_b64encod": 136, "urlsafe_b64decod": 136, "b32encod": 136, "b32decod": [136, 453], "map01": 136, "oh": 136, "ey": [136, 175, 179, 416, 442, 449, 454, 457], "b32hexencod": [136, 447], "b32hexdecod": [136, 447], "b16encod": 136, "b16decod": 136, "a85encod": [136, 453], "foldspac": 136, "wrapcol": 136, "adob": [136, 453], "btoa": 136, "a85decod": [136, 453], "ignorechar": 136, "x0b": [136, 324, 374], "b85encod": [136, 453], "b85decod": [136, 453], "decodebyt": [136, 148, 458], "encodebyt": [136, 148, 458], "zgf0ysb0bybizsblbmnvzgvk": 136, "deploi": [136, 191, 229, 328, 347, 383, 400, 434, 451, 457, 458], "1521": [136, 299], "multipurpos": [136, 299], "bdbquit": 137, "bpbynumb": 137, "bplist": 137, "deletem": 137, "bpformat": 137, "bpprint": 137, "botfram": 137, "stopfram": 137, "returnfram": 137, "trace_dispatch": 137, "c_call": [137, 331], "c_return": [137, 331, 332], "c_except": [137, 331], "dispatch_lin": 137, "user_lin": 137, "dispatch_cal": 137, "user_cal": 137, "dispatch_return": 137, "user_return": 137, "dispatch_except": 137, "user_except": 137, "is_skipped_lin": 137, "module_nam": [137, 238, 269, 340, 447, 456], "stop_her": 137, "break_her": 137, "break_anywher": 137, "argument_list": [137, 402, 405], "return_valu": [137, 180, 366, 367, 451, 453, 455], "do_clear": 137, "set_step": 137, "set_next": 137, "set_return": 137, "set_until": 137, "set_trac": [137, 182, 214, 280, 331, 430, 456], "set_continu": 137, "set_quit": 137, "dispatch_": 137, "set_break": 137, "clear_break": 137, "clear_bpbynumb": 137, "clear_all_file_break": 137, "clear_all_break": 137, "get_bpbynumb": 137, "get_break": 137, "get_file_break": 137, "get_all_break": 137, "format_stack_entri": 137, "frame_lineno": 137, "lprefix": 137, "runev": [137, 280], "runctx": [137, 290, 357], "runcal": [137, 280, 290, 457], "checkfuncnam": 137, "a2b_": [139, 452], "a2b_uu": 139, "b2a_uu": [139, 456], "backtick": [139, 445, 456], "strict_mod": 139, "3548": [139, 441], "b2a_base64": [139, 455], "a2b_qp": 139, "b2a_qp": 139, "quotetab": [139, 148, 299], "istext": 139, "1522": [139, 299], "linefe": [139, 197, 313, 325, 410, 440], "crc_hqx": [139, 448], "crc": [139, 397, 399], "ccitt": 139, "polynomi": [139, 249, 262], "0x1021": 139, "binhex4": [139, 458], "crc32": [139, 224, 399, 426, 427], "010x": 139, "b2a_hex": [139, 148], "bytes_per_sep": [139, 324], "hexlifi": 139, "xb9": 139, "x01": [139, 246, 247, 270, 318, 327, 374], "b901ef": 139, "b9": 139, "ef": [139, 150, 249, 371, 392], "b9_01ef": 139, "b901": 139, "a2b_hex": [139, 148, 453], "hexstr": 139, "invers": [139, 143, 144, 172, 175, 190, 198, 200, 214, 233, 247, 262, 275, 282, 300, 313, 320, 323, 324, 344, 405, 406, 443, 449, 450, 457], "liber": [139, 182], "fromhex": [139, 324, 419, 443, 448, 455, 456], "85": [139, 323, 454], "bisect_left": 140, "partit": [140, 249, 300, 314, 318, 324, 442, 454, 457], "bisect_right": 140, "insort_left": 140, "domin": [140, 232], "insort_right": 140, "insort": [140, 427], "logarithm": [140, 175, 225, 300, 324, 399, 440, 443, 446, 451, 452], "stateless": 140, "precomput": 140, "sortedcollect": 140, "straight": [140, 191, 195, 214, 269, 331, 365, 378, 386, 416, 419, 437, 445, 457], "awkward": [140, 226, 338, 457], "find_lt": 140, "find_l": 140, "find_gt": 140, "find_g": 140, "exam": [140, 323], "score": [140, 179, 320, 323, 427], "70": [140, 172, 175, 300, 323, 342, 359, 416, 426, 427], "fdcba": 140, "titan": 140, "cameron": 140, "bird": 140, "1963": 140, "hitchcock": 140, "alien": [140, 343], "1986": [140, 172], "1960": 140, "by_year": 140, "romanc": 140, "hiller": 140, "_f": 141, "decompress": [142, 148, 207, 223, 384, 399, 426, 442, 447, 451, 452, 454, 455], "bz2file": [142, 258, 444, 446, 447, 452, 453, 458], "bz2compressor": 142, "bz2decompressor": [142, 454], "compresslevel": [142, 223, 337, 397, 456, 458], "xb": [142, 223, 258], "rt": [142, 214, 223, 258, 340, 361], "wt": [142, 214, 223, 258, 323], "bufferediobas": [142, 214, 223, 231, 234, 246, 258, 282, 319, 338, 347, 383, 443, 444, 448, 451, 452, 454, 455], "peek": [142, 150, 223, 246, 258, 378, 451], "seekabl": [142, 246, 377, 397, 443], "read1": [142, 223, 246], "compressor": [142, 258, 399], "decompressor": [142, 258, 399], "max_length": [142, 258, 399, 454], "uncompress": [142, 223, 258, 314, 337, 377, 396, 397, 399, 447, 451], "needs_input": [142, 258], "unused_data": [142, 258, 399], "donec": 142, "rhoncu": 142, "qui": 142, "sapien": 142, "sit": [142, 392], "amet": 142, "molesti": 142, "fusc": 142, "scelerisqu": 142, "vel": 142, "augu": 142, "nec": 142, "ullamcorp": 142, "nam": 142, "rutrum": 142, "pretium": 142, "placerat": 142, "aliquam": 142, "tristiqu": 142, "lorem": 142, "cursu": 142, "interdum": 142, "laoreet": 142, "mi": [142, 236, 442], "ultric": 142, "puru": 142, "pulvinar": 142, "gravida": 142, "euismod": 142, "magna": 142, "variu": 142, "justo": 142, "tincidunt": 142, "feugiat": 142, "pharetra": 142, "lacu": 142, "risu": 142, "vehicula": 142, "maecena": 142, "feli": 142, "pellentesqu": 142, "semper": 142, "nunc": 142, "nibh": 142, "ac": [142, 148, 150, 166, 249, 300, 301, 401, 431, 440], "elementum": 142, "dolor": 142, "luctu": 142, "curabitur": 142, "lacinia": 142, "ornar": 142, "consectetur": 142, "vestibulum": 142, "ratio": [142, 179, 210, 262, 323, 324, 361, 419, 452], "513595166163142": 142, "gen_data": 142, "chunksiz": [142, 156, 269, 285, 454], "nonrandom": 142, "myfil": [142, 246, 277, 365, 397, 415, 418, 427], "cal": [143, 372, 373], "european": [143, 148, 444], "setfirstweekdai": 143, "gregorian": [143, 172], "prolept": [143, 172], "dershowitz": [143, 172], "reingold": [143, 172], "calendr": [143, 172], "prescrib": [143, 412], "8601": [143, 172, 179, 254, 320, 394, 448, 455], "firstweekdai": 143, "iterweekdai": 143, "itermonthd": [143, 456], "itermonthdai": 143, "itermonthdays2": 143, "itermonthdays3": [143, 456], "itermonthdays4": [143, 456], "monthdatescalendar": 143, "monthdays2calendar": 143, "monthdayscalendar": 143, "yeardatescalendar": 143, "yeardays2calendar": 143, "yeardayscalendar": 143, "textcalendar": 143, "formatmonth": 143, "theyear": 143, "themonth": 143, "center": [143, 145, 166, 175, 236, 237, 243, 324, 325, 347, 353, 361, 401, 403, 421, 441, 443, 452], "prmonth": 143, "formatyear": 143, "pryear": 143, "htmlcalendar": [143, 456], "withyear": 143, "formatyearpag": 143, "css": [143, 229, 451, 456], "cascad": 143, "cssclass": 143, "tue": [143, 172], "wed": [143, 172, 344], "fri": [143, 198, 451, 452], "cssclass_nodai": 143, "cssclasses_weekday_head": 143, "cssclass_month_head": 143, "formatmonthnam": 143, "cssclass_month": 143, "cssclass_year": 143, "cssclass_year_head": 143, "singular": [143, 219], "customhtmlc": 143, "nowrap": 143, "ital": [143, 166, 350], "localetextcalendar": [143, 448], "localehtmlcalendar": [143, 448], "formatweekdai": 143, "lc_time": [143, 254], "isleap": 143, "leapdai": 143, "y1": [143, 405, 416, 447, 449], "y2": [143, 214, 416, 447, 449], "centuri": [143, 172, 344, 451], "weekhead": 143, "monthrang": 143, "monthcalendar": 143, "prcal": 143, "timegm": [143, 344], "epoch": [143, 198, 232, 237, 259, 278, 320, 321, 337, 344, 394, 438], "day_nam": 143, "day_abbr": 143, "month_nam": [143, 410], "januari": [143, 172, 300, 344, 401, 410, 438, 449, 450], "month_abbr": 143, "march": [143, 172, 324, 344, 361, 401, 426, 437, 441, 453], "april": [143, 172, 410, 423, 437, 438], "august": [143, 442], "septemb": [143, 410, 437, 442, 452, 454], "octob": [143, 172, 401, 437, 439, 440, 443, 447, 448, 449, 457, 458], "illegalmontherror": 143, "illegalweekdayerror": 143, "mo": [143, 172, 219, 301, 324, 440, 455, 457], "tu": [143, 440], "fr": [143, 219, 259, 300, 410, 440, 456], "su": 143, "centr": 143, "stylesheet": [143, 444], "kahan": 144, "elementari": [144, 166, 361], "annex": [144, 262, 364, 410, 443], "sqrt": [144, 156, 175, 262, 323, 441, 442, 443, 451, 457], "4142135623730951j": 144, "modulu": [144, 273, 324, 331, 443, 451, 457], "phi": [144, 262], "counterclockwis": [144, 361], "radian": [144, 175, 262, 300, 361, 440, 457], "atan2": [144, 262], "\u03c0": [144, 262], "141592653589793": [144, 419, 451], "rect": [144, 165, 443], "log10": [144, 175, 262, 443], "aco": [144, 262], "arc": [144, 262, 361, 443, 444, 446, 451], "cosin": [144, 175, 262], "asin": [144, 262], "sine": [144, 175, 262], "atan": [144, 262, 443], "tangent": [144, 262, 361], "tan": [144, 262], "acosh": [144, 262, 443], "asinh": [144, 262, 443], "atanh": [144, 262, 443], "cosh": [144, 262], "sinh": [144, 262], "tanh": [144, 262], "isfinit": [144, 262, 451], "isinf": [144, 262, 324, 443], "isnan": [144, 262, 323, 324, 417, 443], "isclos": [144, 262, 419, 454], "rel_tol": [144, 262, 454], "1e": [144, 214, 262, 325, 327, 405, 454], "abs_tol": [144, 262, 454], "toler": [144, 247, 262, 454, 456], "485": [144, 262], "tau": [144, 262, 455], "\u03c4": [144, 262, 455], "infj": [144, 455], "nanj": [144, 455], "curv": [144, 321, 361, 452], "enlighten": 144, "ado": 144, "iserl": 144, "powel": 144, "art": [144, 150, 182, 225], "clarendon": 144, "1987": [144, 148, 172], "pp165": 144, "211": [144, 452], "completekei": [145, 280], "use_rawinput": 145, "cmdloop": 145, "intro": [145, 321, 434, 444], "banner": [145, 147], "do_help": 145, "do_shel": 145, "postcmd": 145, "complete_foo": 145, "begidx": 145, "endidx": 145, "help_bar": 145, "help_": 145, "onecmd": 145, "precmd": 145, "emptylin": 145, "nonempti": [145, 180, 301, 324, 361, 379, 403], "completedefault": 145, "complete_": 145, "displaywidth": 145, "preloop": 145, "postloop": 145, "solicit": 145, "identchar": 145, "lastcmd": 145, "cmdqueue": 145, "doc_head": 145, "misc_head": 145, "undoc_head": 145, "ruler": 145, "drawn": [145, 166, 255, 277, 361], "do_forward": 145, "playback": [145, 450], "do_playback": 145, "turtleshel": 145, "do_right": 145, "do_left": 145, "do_goto": 145, "do_hom": 145, "do_circl": 145, "do_posit": 145, "do_head": [145, 234], "do_color": 145, "do_undo": 145, "do_reset": 145, "do_by": 145, "bye": [145, 160, 237, 361, 452], "do_record": 145, "rose": [145, 249, 455], "spiral": 145, "180": [145, 224, 323, 361, 451], "cprofil": [146, 442], "rot_13": [146, 148], "idlelib": [146, 347, 440], "pstat": [146, 290, 426, 438, 442], "turtledemo": [146, 236], "interactiveinterpret": [147, 454], "__console__": 147, "interactiveconsol": [147, 302], "readfunc": 147, "exitmsg": 147, "raw_input": [147, 445], "compile_command": [147, 149], "runsourc": [147, 320], "showsyntaxerror": 147, "runcod": 147, "showtraceback": [147, 454], "stuf": 147, "resetbuff": 147, "codecinfo": [148, 442], "getincrementalencod": [148, 452], "getincrementaldecod": 148, "encodedfil": 148, "data_encod": 148, "file_encod": 148, "transcod": [148, 383, 451], "iterencod": [148, 250], "base64_codec": 148, "iterdecod": 148, "bom_b": 148, "bom_l": 148, "bom_utf8": 148, "bom_utf16": 148, "bom_utf16_b": 148, "bom_utf16_l": 148, "bom_utf32": 148, "bom_utf32_b": 148, "bom_utf32_l": 148, "xdf": [148, 224, 286], "u266c": 148, "223": 148, "9836": 148, "strict_error": 148, "ignore_error": [148, 314], "replace_error": 148, "hh": [148, 172, 237, 344, 410, 437], "xxxx": [148, 277, 410], "xxxxxxxx": [148, 277, 410], "backslashreplace_error": 148, "xmlcharrefreplace_error": 148, "namereplace_error": 148, "d800": 148, "dfff": 148, "register_error": [148, 214, 246, 324, 440], "error_handl": [148, 389], "lookup_error": [148, 440], "getstat": [148, 300], "setstat": [148, 300], "utf_8": 148, "rescan": [148, 284], "recov": [148, 179, 202, 210, 331, 390, 444, 449, 451], "firstlin": [148, 177], "huge": [148, 246, 437, 453], "greedi": [148, 301], "reposit": [148, 150, 246], "resp": [148, 254, 289, 454], "frontend": 148, "adher": [148, 157, 234, 250, 257, 269, 409, 416], "0x0": 148, "00ff": [148, 451, 452], "charmap": 148, "BE": [148, 234, 401], "fffe": 148, "NO": [148, 182, 237, 401], "ligatur": 148, "2060": [148, 237], "joiner": [148, 454], "payload": [148, 183, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 231, 239, 444], "00000000": 148, "0000007f": 148, "0xxxxxxx": 148, "00000080": 148, "000007ff": 148, "110xxxxx": 148, "10xxxxxx": 148, "00000800": 148, "0000ffff": 148, "1110xxxx": 148, "00010000": 148, "0010ffff": 148, "11110xxx": 148, "notepad": [148, 410], "0xef": 148, "0xbb": 148, "0xbf": 148, "improb": 148, "diaeresi": 148, "iso8859": 148, "utf16": 148, "utf32": 148, "dash": [148, 166, 185, 194, 301, 313, 383], "euro": [148, 214, 444, 445], "ebcdic": [148, 453], "pc": [148, 166, 261, 382, 397, 410, 431, 436, 443, 448], "646": [148, 363], "big5": [148, 441], "tw": 148, "csbig5": 148, "chines": [148, 441], "big5hksc": [148, 441], "hksc": 148, "cp037": 148, "ibm037": 148, "ibm039": 148, "cp273": [148, 453], "273": [148, 258, 270, 398], "ibm273": 148, "csibm273": 148, "cp424": 148, "ibm424": 148, "cp437": [148, 397], "437": 148, "ibm437": 148, "cp500": 148, "ibm500": 148, "western": [148, 344], "europ": [148, 156, 344, 400, 444], "cp720": [148, 444, 451], "cp737": 148, "cp775": 148, "ibm775": 148, "baltic": 148, "cp850": 148, "850": [148, 444], "ibm850": 148, "cp852": 148, "852": 148, "ibm852": 148, "central": [148, 172, 183, 194, 214, 437, 438, 439, 440, 442, 451], "eastern": [148, 172, 344, 455], "cp855": 148, "855": [148, 210], "ibm855": 148, "bulgarian": 148, "byelorussian": 148, "macedonian": 148, "serbian": 148, "cp856": 148, "cp857": 148, "857": 148, "ibm857": 148, "turkish": 148, "cp858": [148, 444], "858": 148, "ibm858": 148, "cp860": 148, "860": 148, "ibm860": 148, "portugues": 148, "cp861": 148, "861": [148, 279], "ibm861": 148, "iceland": [148, 442], "cp862": 148, "862": 148, "ibm862": 148, "cp863": 148, "863": 148, "ibm863": 148, "cp864": 148, "ibm864": 148, "cp865": 148, "865": 148, "ibm865": 148, "danish": 148, "cp866": 148, "866": [148, 179, 457], "ibm866": 148, "cp869": 148, "869": [148, 449], "gr": 148, "ibm869": 148, "cp874": 148, "cp875": 148, "cp932": [148, 441], "932": 148, "ms932": 148, "mskanji": 148, "kanji": 148, "cp949": [148, 441], "949": 148, "ms949": 148, "uhc": 148, "korean": [148, 441, 456], "cp950": [148, 441], "950": 148, "ms950": 148, "cp1006": 148, "urdu": 148, "cp1026": 148, "ibm1026": 148, "cp1125": [148, 453], "1125": 148, "ibm1125": 148, "cp866u": 148, "ruscii": 148, "ukrainian": [148, 453, 456], "cp1140": 148, "ibm1140": 148, "cp1250": [148, 157], "1250": 148, "cp1251": 148, "1251": 148, "1252": [148, 423, 427], "cp1253": 148, "1253": 148, "cp1254": 148, "1254": [148, 301], "cp1255": 148, "1255": 148, "cp1256": 148, "1256": 148, "cp1257": 148, "1257": 148, "cp1258": 148, "1258": 148, "vietnames": 148, "euc_jp": 148, "eucjp": 148, "uji": 148, "ji": [148, 441], "euc_jis_2004": 148, "jisx0213": [148, 441], "eucjis2004": 148, "euc_jisx0213": 148, "eucjisx0213": 148, "euc_kr": 148, "euckr": 148, "ksc5601": 148, "ks_c": 148, "5601": 148, "ksx1001": 148, "ks_x": 148, "gb2312": [148, 364, 441, 452], "csiso58gb231280": 148, "euc": [148, 184, 441], "cn": 148, "euccn": 148, "eucgb2312": 148, "1980": [148, 179, 397, 443], "ir": 148, "gbk": [148, 441], "936": 148, "cp936": 148, "ms936": 148, "gb18030": [148, 441], "hz": [148, 441, 452], "hzgb": 148, "gb": [148, 321], "2312": 148, "iso2022_jp": 148, "csiso2022jp": 148, "iso2022jp": 148, "2022": [148, 172, 184, 224, 426, 441, 448], "jp": [148, 184, 401, 441], "iso2022_jp_1": 148, "iso2022_jp_2": 148, "iso2022_jp_2004": 148, "2004": [148, 172, 353, 401, 441], "iso2022_jp_3": 148, "iso2022_jp_ext": 148, "iso2022_kr": 148, "csiso2022kr": 148, "iso2022kr": 148, "kr": [148, 441], "latin_1": [148, 184], "cp819": 148, "iso8859_2": 148, "latin2": 148, "iso8859_3": 148, "latin3": 148, "l3": 148, "esperanto": 148, "maltes": 148, "iso8859_4": 148, "latin4": 148, "l4": 148, "iso8859_5": 148, "cyril": 148, "iso8859_6": 148, "iso8859_7": 148, "greek8": 148, "iso8859_8": 148, "iso8859_9": 148, "latin5": 148, "l5": 148, "iso8859_10": 148, "latin6": 148, "l6": [148, 452], "nordic": 148, "iso8859_11": 148, "iso8859_13": 148, "latin7": 148, "l7": 148, "iso8859_14": 148, "latin8": 148, "l8": 148, "celtic": 148, "iso8859_15": 148, "latin9": 148, "l9": 148, "iso8859_16": 148, "latin10": 148, "l10": 148, "johab": [148, 441], "cp1361": 148, "ms1361": 148, "koi8_r": 148, "koi8_t": [148, 454], "tajik": [148, 454], "koi8_u": 148, "kz1048": [148, 454], "kz_1048": 148, "strk1048_2002": 148, "rk1048": 148, "kazakh": [148, 454], "mac_cyril": 148, "maccyril": 148, "mac_greek": 148, "macgreek": 148, "mac_iceland": 148, "maciceland": 148, "mac_latin2": 148, "maclatin2": 148, "maccentraleurop": 148, "mac_centeuro": 148, "mac_roman": 148, "macroman": 148, "mac_turkish": 148, "macturkish": 148, "ptcp154": 148, "csptcp154": 148, "pt154": 148, "cp154": 148, "asian": [148, 364, 441], "shift_ji": 148, "csshiftji": 148, "shiftji": 148, "sji": 148, "s_ji": 148, "shift_jis_2004": 148, "shiftjis2004": 148, "sjis_2004": 148, "sjis2004": 148, "shift_jisx0213": 148, "shiftjisx0213": 148, "sjisx0213": 148, "s_jisx0213": 148, "utf_32": 148, "u32": 148, "utf_32_b": 148, "32be": 148, "utf_32_l": 148, "32le": 148, "utf_16": 148, "u16": 148, "utf_16_b": 148, "16be": 148, "utf_16_l": 148, "16le": 148, "utf_7": 148, "u7": 148, "u8": 148, "cp65001": [148, 452], "asymmetr": 148, "3490": [148, 440], "oem": [148, 455], "cp_oemcp": [148, 455], "palmo": 148, "3492": [148, 440], "raw_unicode_escap": 148, "bewar": [148, 202, 210, 250, 269, 312, 320, 321, 338, 407, 426, 445], "unicode_intern": [148, 452, 457], "base_64": 148, "bz2_codec": [148, 453], "hex_codec": [148, 453], "quopri_codec": 148, "quotedprint": 148, "quoted_print": 148, "uu_codec": 148, "uu": [148, 401, 439, 448, 449, 450], "zlib_codec": 148, "rot13": [148, 453], "caesar": 148, "cypher": 148, "encrypt": [148, 222, 237, 256, 287, 292, 308, 317, 321, 397, 437, 439, 440, 444, 451, 452, 453], "nameprep": [148, 326], "idn": [148, 321, 456], "5891": 148, "5895": 148, "alliancefran\u00e7ais": [148, 440], "nu": [148, 440], "xn": [148, 321, 440, 456], "alliancefranais": [148, 440], "npb": [148, 440], "allowunassign": 148, "toascii": 148, "usestd3asciirul": 148, "outcom": [149, 157, 275, 363, 365, 366, 402, 417], "commandcompil": 149, "subcontext": 150, "new_child": [150, 453], "baselin": [150, 345, 350], "bach": 150, "rembrandt": 150, "gogh": 150, "opera": [150, 379, 442], "carmen": 150, "584": [150, 277, 362, 378, 458], "multicontext": 150, "enthought": [150, 436], "codetool": 150, "pylookup": 150, "guest": [150, 318], "command_line_arg": 150, "flatten": [150, 185, 190, 191, 192, 194, 197, 249, 282, 324, 363, 417, 447, 449, 453, 454, 458], "deepchainmap": 150, "inner": [150, 159, 180, 224, 226, 243, 280, 301, 320, 324, 361, 363, 388, 402, 404, 417, 441, 444, 451, 452], "eleph": 150, "lion": 150, "topmost": [150, 331, 442], "rapid": [150, 420, 457], "talli": [150, 444, 451, 452], "cnt": 150, "hamlet": [150, 437], "most_common": [150, 444], "1143": 150, "966": 150, "762": 150, "631": 150, "546": [150, 359], "514": [150, 257, 436, 440, 448], "471": 150, "bag": [150, 189, 402, 415], "multiset": [150, 451], "gallahad": [150, 417, 446], "sausag": [150, 214, 324], "list_of_pair": 150, "intersect": [150, 324, 361, 403, 417, 440, 441, 443, 444], "minu": [150, 166, 175, 214, 216, 262, 314, 324, 325, 327, 343, 354, 405, 411, 421, 456], "unnecessarili": [150, 277], "knuth": [150, 175], "donald": [150, 321, 444, 453], "cc": [150, 192, 198, 249, 259, 317, 321, 339, 431, 440, 449, 450, 452], "maxlen": [150, 249, 363, 443, 444], "pronounc": [150, 451], "deck": [150, 300], "movement": [150, 166, 225, 361, 443, 451], "appendleft": [150, 441], "extendleft": 150, "popleft": [150, 249, 298, 417, 427, 441], "ghi": [150, 165, 255, 313, 441], "jkl": 150, "pyshel": [150, 175, 236, 301, 455, 456, 457], "moving_averag": 150, "39": [150, 172, 182, 269, 277, 344, 431, 441, 447, 452, 457, 458], "44": [150, 175, 270, 300, 310, 364, 447, 452, 457, 458], "robin": [150, 277, 388, 417, 457], "roundrobin": [150, 249], "delete_nth": 150, "bring": [150, 172, 236, 249, 325, 366, 447, 448, 453, 454, 457, 458], "dup": [150, 277, 318], "rot": [150, 439], "roll": [150, 172, 257, 320, 338, 340, 365, 415, 442, 443], "default_factori": [150, 170, 363], "__missing__": [150, 324, 366, 402, 403, 442, 451], "mississippi": [150, 324], "constant_factori": 150, "ran": [150, 182, 202, 328, 365, 443, 444, 449], "typenam": [150, 289, 320, 443], "field_nam": [150, 325], "_1": [150, 444, 446], "_3": 150, "_sourc": [150, 456], "_field_default": [150, 363], "employeerecord": 150, "depart": [150, 214, 324], "paygrad": 150, "emp": 150, "_make": [150, 320, 327], "employe": [150, 363, 415], "companydata": 150, "fetchal": [150, 320, 442], "somenamedtupl": 150, "_asdict": [150, 443, 444, 446, 457], "_replac": [150, 371, 443], "partnum": 150, "inventori": [150, 170, 275], "newpric": 150, "pixel": [150, 347, 350, 353, 361], "premium": 150, "hypot": [150, 262, 457], "714": 150, "018": 150, "hardcov": 150, "isbn": [150, 347, 429], "writeabl": [150, 165, 214, 246, 261, 321, 328], "part_numb": 150, "simplenamespac": [150, 289, 362, 375, 458], "lru": [150, 215], "k1": [150, 378], "k2": [150, 378], "popitem": [150, 151, 157, 249, 259, 324, 403, 438, 440, 444], "od": [150, 444, 451], "move_to_end": [150, 451], "acdeb": 150, "bacd": 150, "od1": [150, 444], "od2": [150, 444], "468": 150, "lastupdatedordereddict": 150, "timeboundedlru": 150, "maxag": 150, "multihitlrucach": 150, "maxrequest": 150, "cache_aft": 150, "uncached_kei": 150, "request_count": 150, "cached_kei": 150, "function_result": 150, "uncach": [150, 277, 451], "supplant": 150, "initialdata": 150, "compli": [150, 175, 250, 259, 296, 401, 443], "format_map": [150, 324, 451, 454], "isprint": [150, 167, 324, 454], "maketran": [150, 324, 446, 451, 454], "_collections_abc": 151, "mutablesequ": [151, 324, 363, 445, 452, 454], "isdisjoint": [151, 324], "mutableset": [151, 324, 363], "mappingview": [151, 324, 363], "itemsview": [151, 324, 363], "keysview": [151, 324, 363], "valuesview": [151, 324, 363], "asyncgener": [151, 324, 363, 455], "asend": [151, 405, 458], "athrow": [151, 405, 450, 458], "__buffer__": [151, 243, 403, 449], "gencoro": 151, "688": [151, 403], "myvar": 151, "listbasedset": 151, "lst": [151, 280], "abcdef": [151, 165, 246, 249, 301, 444, 453], "defghi": [151, 249], "_from_iter": 151, "_hash": 151, "orderedset": 151, "yiq": [152, 453], "hl": 152, "hue": [152, 448], "satur": [152, 451], "hsv": 152, "poynton": 152, "colorfaq": 152, "cambridgeincolour": 152, "htm": [152, 172, 234, 439, 440, 441, 442, 443, 444, 445], "rgb_to_yiq": 152, "yiq_to_rgb": 152, "rgb_to_hl": 152, "hls_to_rgb": 152, "rgb_to_hsv": 152, "hsv_to_rgb": 152, "qq": 153, "destdir": 153, "strip_prefix": 153, "prepend_prefix": 153, "coexist": [153, 425], "cpu_count": [153, 156, 269, 277, 447, 453], "uncheck": [153, 407, 430, 456], "source_date_epoch": [153, 293, 456], "hardlink": [153, 337, 458], "dupe": [153, 458], "consolid": [153, 270, 440, 452, 455], "multilevel": 153, "pyo": [153, 238, 359, 440, 443, 444, 453], "getrecursionlimit": [153, 202, 236, 331, 425, 437, 449], "compile_dir": [153, 454, 456], "maxlevel": [153, 289, 303], "ddir": 153, "rx": [153, 301], "invalidation_mod": [153, 293, 456], "stripdir": [153, 458], "prependdir": [153, 458], "limit_sl_dest": [153, 458], "hardlink_dup": [153, 458], "pycinvalidationmod": [153, 293], "compile_fil": [153, 454], "fullnam": [153, 238, 240, 241, 284, 398, 440], "compile_path": [153, 454], "skip_curdir": 153, "multitask": [154, 347], "preemptiv": 154, "323": [156, 455], "1235": 156, "chop": [156, 269, 278, 437, 441, 445], "cancel_futur": [156, 458], "src1": [156, 451], "dest1": [156, 451], "src2": [156, 451], "dest2": [156, 451], "src3": [156, 451], "dest3": [156, 451], "src4": 156, "dest4": [156, 451], "wait_on_b": 156, "wait_on_a": 156, "wait_on_futur": 156, "thread_name_prefix": [156, 455], "initarg": [156, 269, 456], "gracefulli": [156, 301, 315, 343, 405, 424, 444, 451], "brokenthreadpool": 156, "foxnew": 156, "cnn": [156, 173], "wsj": 156, "nonexist": [156, 383], "subdomain": 156, "load_url": 156, "promptli": [156, 269, 301, 418], "future_to_url": 156, "mp_context": [156, 269, 456], "max_tasks_per_child": 156, "61": [156, 324, 344, 441], "brokenprocesspool": 156, "abruptli": [156, 321, 338, 343], "start_method": 156, "112272535095293": 156, "112582705942171": 156, "115280095190773": 156, "115797848077099": 156, "1099726899285419": 156, "is_prim": 156, "sqrt_n": 156, "set_running_or_notify_cancel": 156, "woken": [156, 443], "not_don": 156, "3148": 156, "brokenexecutor": 156, "mini": [157, 210, 214, 324, 403, 410, 421, 444, 446, 448], "javascript": [157, 229, 233, 245, 250, 282, 416, 421, 447], "serveraliveinterv": 157, "compressionlevel": 157, "forwardx11": 157, "forg": 157, "hg": [157, 279, 321, 440, 444, 451], "topsecret": 157, "50022": 157, "configfil": 157, "another_config": 157, "read_str": [157, 451, 454], "nport": 157, "48484": 157, "read_dict": [157, 451, 456, 457, 458], "21212": 157, "getboolean": 157, "getint": 157, "getfloat": 157, "3de": [157, 321, 455], "cbc": [157, 318], "monster": [157, 342], "batchmod": 157, "sectcr": 157, "14159265359": [157, 419, 421], "choru": 157, "lumberjack": [157, 289, 358], "night": 157, "key_without_valu": 157, "harm": [157, 215, 276, 451], "can_values_be_as_wel": 157, "does_that_mean_anything_speci": 157, "multiline_valu": 157, "basicinterpol": [157, 448], "home_dir": 157, "my_dir": 157, "my_pictur": 157, "extendedinterpol": [157, 448, 451], "zc": 157, "buildout": [157, 451], "library_dir": 157, "system_dir": 157, "macports_dir": 157, "arthur": [157, 324, 457], "shed": 157, "last_nam": [157, 164, 301], "jackson": [157, 453], "twosh": 157, "python_dir": 157, "optionxform": 157, "defaultsect": 157, "visibli": [157, 236], "section_nam": 157, "section_proxi": 157, "dict_typ": [157, 286], "section1": 157, "key1": [157, 402, 458], "key2": [157, 402, 458], "key3": [157, 458], "value3": [157, 458], "section2": 157, "keya": 157, "valuea": 157, "keyb": 157, "valueb": 157, "keyc": 157, "valuec": 157, "section3": 157, "allow_no_valu": [157, 444], "sample_config": [157, 444], "mysqld": [157, 444], "mysql": [157, 212, 444], "old_password": 157, "acid": [157, 449], "innodb": 157, "space_around_delimit": 157, "comment_prefix": 157, "inline_comment_prefix": 157, "shebang": [157, 375, 396, 423, 435, 452, 455], "enabled_extens": 157, "another_extens": 157, "disabled_by_com": 157, "yet_another_extens": 157, "read_fil": [157, 256, 449], "empty_lines_in_valu": 157, "gotcha": 157, "she": 157, "proport": [157, 300, 323], "default_sect": 157, "parser_inst": 157, "getdecim": 157, "boolean_st": 157, "unsuit": [157, 300, 309, 388, 427, 438, 444], "anotherkei": 157, "larch": 157, "optcr": 157, "downright": 157, "counterintuit": 157, "add_sect": [157, 451], "an_int": 157, "a_bool": 157, "a_float": 157, "1415": [157, 175, 443], "evil": [157, 444], "nooptionerror": [157, 444], "remove_opt": [157, 276], "duplicatesectionerror": [157, 451], "duplicateoptionerror": [157, 451], "has_sect": 157, "acknowledg": [157, 167, 337], "has_opt": [157, 276], "expandus": [157, 220, 232, 272, 278, 279, 302, 314, 328, 454, 457], "readfp": [157, 263, 444, 448, 449], "nosectionerror": 157, "fileobject": [157, 447], "remove_sect": 157, "cfgparser": 157, "max_interpolation_depth": 157, "interpolationerror": 157, "interpolationdeptherror": 157, "interpolationmissingoptionerror": 157, "interpolationsyntaxerror": 157, "missingsectionheadererror": 157, "parsingerror": [157, 448, 449], "notimplementedtyp": [158, 362, 447], "ellipsistyp": [158, 362, 447], "pager": [158, 295], "abstractcontextmanag": [159, 324, 363, 455], "abstractasynccontextmanag": [159, 324, 363, 456], "contextmanag": [159, 324, 363, 442, 443, 451, 455], "managed_resourc": 159, "acquire_resourc": 159, "release_resourc": 159, "contextdecor": [159, 451], "shot": [159, 310, 456], "asynccontextmanag": [159, 363, 367, 403, 456], "get_connect": 159, "acquire_db_connect": 159, "release_db_connect": 159, "get_all_us": 159, "my_gener": 159, "nullcontext": [159, 447, 456], "enter_result": 159, "ignore_except": 159, "process_fil": 159, "file_or_path": 159, "send_http": 159, "aiohttp": 159, "clientsess": 159, "somefil": [159, 193, 219, 277, 313, 357], "someotherfil": 159, "redirect_stdout": [159, 453, 454], "new_target": [159, 349], "redirect_stderr": [159, 454], "relinquish": [159, 270, 277, 343, 344], "mycontext": 159, "contextbaseclass": 159, "asynccontextdecor": [159, 447], "exitstack": [159, 448, 452, 456, 457], "enter_context": [159, 448], "pop_al": 159, "close_fil": 159, "asyncexitstack": [159, 448, 456, 457], "enter_async_context": [159, 448], "push_async_exit": 159, "push_async_callback": [159, 457], "need_special_resourc": 159, "acquire_special_resourc": 159, "release_special_resourc": 159, "acquisit": [159, 204, 255, 343, 451], "resourcemanag": 159, "check_resource_ok": 159, "_cleanup_on_error": 159, "exc_detail": 159, "cleanup_need": 159, "perform_oper": 159, "cleanup_resourc": 159, "cb": [159, 249, 324], "track_entry_and_exit": [159, 451], "exc_typ": [159, 315, 324, 331, 340, 343, 358, 367, 403, 445, 448], "exc_tb": [159, 315, 324], "load_widget": [159, 451], "singleus": 159, "rlock": [159, 269, 443, 447, 450, 451, 454], "write_to_stream": 159, "reentranc": [159, 298], "outer_stack": 159, "inner_stack": 159, "copy_context": 160, "bleed": 160, "old_valu": 160, "client_addr_var": 160, "client_addr": 160, "render_goodby": 160, "8081": 160, "telnet": [160, 371, 443, 455], "memo": [161, 282, 283, 406, 455], "copied_list": 161, "original_list": 161, "__copy__": [161, 449], "__deepcopy__": 161, "__replace__": [161, 450], "constructor_ob": 162, "dispatch_t": [162, 282, 452], "pickle_c": 162, "4180": 164, "tabular": 164, "dictread": [164, 455, 457], "dictwrit": [164, 451], "csvfile": 164, "fmtparam": 164, "list_dialect": 164, "quote_nonnumer": 164, "unquot": [164, 185, 194, 198, 229, 285, 371, 372], "spamread": 164, "quotechar": 164, "bake": [164, 301], "bean": [164, 301], "stringifi": [164, 358, 448], "spamwrit": 164, "quote_minim": 164, "writerow": [164, 451, 454], "register_dialect": 164, "unregister_dialect": 164, "get_dialect": 164, "new_limit": [164, 442], "restkei": 164, "restval": 164, "first_nam": [164, 301], "clees": [164, 388, 416, 457], "extrasact": 164, "writehead": [164, 451], "doublequot": 164, "excel_tab": 164, "unix_dialect": [164, 451], "sniffer": [164, 318], "sniff": 164, "has_head": [164, 232, 372], "heurist": [164, 179, 186, 192, 214, 446, 451], "quote_al": 164, "linetermin": 164, "quote_non": 164, "escapechar": 164, "quote_notnul": [164, 449], "quote_str": [164, 449], "quote_": 164, "skipinitialspac": 164, "csvreader": 164, "line_num": [164, 301, 442], "csvwriter": 164, "passwd": [164, 212, 279, 292, 339, 365, 372, 441, 442, 443], "someiter": 164, "unixpwd": 164, "linend": 164, "c_int": [165, 269, 442], "c_long": [165, 324], "cdll": [165, 442, 457], "windll": [165, 443], "oledl": [165, 443], "cdecl": 165, "stdcall": 165, "hresult": 165, "kernel32": [165, 331], "libc": [165, 245, 277, 285, 328, 431, 442], "loadlibrari": 165, "_funcptr": 165, "getmodulehandlea": 165, "myownfunct": 165, "239": 165, "_stdcallfuncptr": 165, "user32": 165, "getmodulehandl": 165, "hmodul": 165, "lpcstr": 165, "lpmodulenam": 165, "getmodulehandlew": 165, "lpcwstr": 165, "yapaxi": 165, "310": 165, "rand": [165, 321], "1804289383": 165, "0x1d000000": 165, "erron": [165, 261, 276, 361, 384, 400, 437, 453, 454, 456, 458], "c_bool": [165, 443], "_bool": [165, 327, 443], "c_char": [165, 269], "c_wchar": 165, "c_byte": 165, "c_ubyt": 165, "c_short": [165, 269], "c_ushort": 165, "c_uint": 165, "c_ulong": 165, "c_longlong": 165, "__int64": 165, "c_ulonglong": 165, "c_size_t": 165, "c_ssize_t": [165, 451], "c_time_t": 165, "time_t": 165, "c_float": [165, 442], "c_doubl": [165, 269, 442], "c_longdoubl": 165, "c_char_p": [165, 442], "c_wchar_p": 165, "c_void_p": 165, "140018365411392": 165, "65533": 165, "c_": 165, "139966785747344": 165, "139966783348904": 165, "x00lo": 165, "c_buffer": 165, "beer": 165, "1234": [165, 175, 247, 295, 311, 324, 355, 374, 417, 443, 447, 454], "140000": [165, 325], "arm64": [165, 458], "inhibit": [165, 238, 296], "_as_parameter_": 165, "200000": [165, 345], "37": [165, 234, 300, 324, 325, 359, 382, 426, 441, 444, 446, 447, 448, 456, 457, 458], "000000": [165, 172, 439], "from_param": 165, "typecheck": [165, 363], "restyp": [165, 442], "1150640792": 165, "strchr": 165, "8059983": 165, "validhandl": 165, "winerror": [165, 202], "486539264": 165, "silli": [165, 276, 367], "126": [165, 247, 359, 457], "errcheck": 165, "byref": [165, 443], "sscanf": 165, "1400001049": 165, "_fields_": [165, 269, 324], "upperleft": 165, "lowerright": 165, "ofs": 165, "_pack_": 165, "pragma": 165, "bigendianstructur": [165, 324], "littleendianstructur": 165, "bigendianunion": 165, "littleendianunion": 165, "first_16": 165, "second_16": 165, "tenpointsarraytyp": 165, "artifici": [165, 332, 388, 403, 425, 449, 453], "mystruct": [165, 269], "point_arrai": 165, "arr": [165, 269, 419], "pt": 165, "teninteg": 165, "c_long_array_10": 165, "oor": 165, "scene": [165, 361, 415, 421, 436], "lp_c_long": 165, "null_ptr": 165, "c_byte_array_4": 165, "c1": [165, 324], "c2": 165, "cfunctyp": 165, "winfunctyp": 165, "qsort": 165, "intarray5": 165, "ia": 165, "cmpfunc": 165, "py_cmp_func": 165, "cmp_func": 165, "in_dll": 165, "pythonapi": [165, 442], "0x30c00a0": 165, "struct_frozen": 165, "get_cod": [165, 238, 398, 453], "frozent": 165, "_pyimport_frozenbootstrap": 165, "_frozen_importlib": [165, 269], "31764": 165, "_frozen_importlib_extern": 165, "41499": 165, "__hello__": 165, "p1": [165, 249, 270, 328, 402, 441, 448, 454], "hm": 165, "temp0": 165, "temp1": 165, "short_arrai": 165, "find_librari": [165, 455], "dylib": 165, "ldconfig": 165, "objdump": 165, "ld_library_path": [165, 455], "libm": [165, 431], "libbz2": [165, 431], "agl": 165, "default_mod": 165, "use_errno": [165, 443], "use_last_error": [165, 443], "winmod": [165, 457], "dumpbin": 165, "succeed": [165, 318, 365, 402, 418, 441], "pydll": 165, "manpag": [165, 277, 318, 455], "rtld_now": [165, 277, 452], "setlasterror": 165, "hijack": 165, "rtld_global": [165, 277, 331, 452, 457], "rtld_local": [165, 277, 452, 457], "_handl": 165, "prefabr": 165, "libraryload": 165, "dlltype": 165, "pyfunctyp": 165, "func_spec": 165, "paramflag": 165, "name_or_ordin": 165, "vtbl_index": 165, "iid": [165, 353], "messageboxw": 165, "winuserapi": 165, "winapi": [165, 314, 328], "hwnd": 165, "lptext": 165, "lpcaption": 165, "uint": 165, "utyp": 165, "wintyp": 165, "caption": 165, "getwindowrect": 165, "lprect": 165, "obj_or_typ": 165, "init_or_s": 165, "dllcanunloadnow": 165, "_ctype": [165, 401, 444, 456], "dllgetclassobject": 165, "find_msvcrt": 165, "formaterror": [165, 259], "lasterror": [165, 443], "memmov": [165, 443], "enlarg": 165, "_cdata": 165, "_object": 165, "from_buff": [165, 443], "from_buffer_copi": [165, 443], "from_address": 165, "_b_base_": 165, "_b_needsfree_": 165, "_simplecdata": 165, "c_int8": 165, "c_int16": 165, "c_int32": 165, "c_int64": 165, "c_uint8": 165, "c_uint16": 165, "c_uint32": 165, "c_uint64": 165, "py_object": [165, 442], "wparam": 165, "dword": 165, "pnext": 165, "_anonymous_": 165, "_u": 165, "lptdesc": 165, "typedesc": 165, "lpadesc": 165, "arraydesc": 165, "hreftyp": 165, "vt": [165, 167, 363, 410], "vartyp": 165, "td": [165, 172, 363, 450], "vt_ptr": 165, "some_typ": 165, "_length_": 165, "_type_": 165, "_pointer": 165, "a_norm": 166, "baudrat": 166, "beep": [166, 382, 423, 455], "driver": [166, 182, 201, 219, 277, 318, 340, 381, 382, 391, 440], "color_cont": [166, 447], "color_numb": 166, "pair_numb": 166, "a_": 166, "def_prog_mod": 166, "reset_prog_mod": 166, "def_shell_mod": 166, "reset_shell_mod": 166, "delay_output": 166, "ground": 166, "erasechar": 166, "cup": 166, "cud": 166, "cud1": 166, "cuu1": 166, "cuu": 166, "vpa": 166, "cr": [166, 167, 197, 410, 456], "confin": [166, 182], "bell": [166, 167, 347, 410, 442], "flushinp": 166, "typeahead": 166, "getmous": 166, "key_mous": 166, "bstate": 166, "buttonn_press": 166, "buttonn_releas": 166, "buttonn_click": 166, "buttonn_double_click": 166, "buttonn_triple_click": 166, "button_shift": 166, "button_ctrl": 166, "button_alt": 166, "button5_": [166, 447], "getsyx": 166, "getwin": 166, "putwin": 166, "has_extended_color_support": [166, 447], "256color": 166, "has_ic": 166, "has_il": 166, "region": [166, 236, 265, 268, 270, 277, 301, 347, 353, 361, 415, 443, 446, 448], "has_kei": [166, 437, 438, 439, 440, 445], "init_color": [166, 447], "fg": [166, 249, 324, 347, 353], "bg": [166, 347, 353, 361], "use_default_color": [166, 441], "is_term_res": 166, "nline": [166, 177], "ncol": 166, "resize_term": 166, "isendwin": 166, "deiniti": 166, "keynam": 166, "alt": [166, 167, 229, 236, 353, 437], "killchar": 166, "longnam": [166, 337], "terminfo": 166, "mouseinterv": 166, "elaps": [166, 257, 269, 277, 290, 311, 318, 343, 344, 365, 451], "mousemask": 166, "availmask": 166, "oldmask": 166, "napm": 166, "pminrow": 166, "pmincol": 166, "sminrow": 166, "smincol": 166, "smaxrow": 166, "smaxcol": 166, "nl": [166, 167, 229, 318, 354, 355, 371, 401, 410, 443], "nonl": 166, "vertic": [166, 167, 221, 280, 324, 325, 342, 347, 350, 352, 353, 361, 402, 409, 410], "motion": [166, 323, 349], "noqiflush": 166, "intr": 166, "susp": 166, "noraw": 166, "pair_cont": [166, 447], "putp": 166, "tput": 166, "putchar": 166, "qiflush": 166, "resetti": 166, "savetti": 166, "resizeterm": 166, "sigwinch": [166, 315], "get_escdelai": [166, 458], "set_escdelai": [166, 458], "get_tabs": [166, 458], "set_tabs": [166, 458], "setsyx": 166, "setupterm": 166, "termattr": 166, "termnam": 166, "tigetflag": 166, "capnam": 166, "tigetnum": 166, "tigetstr": 166, "tparm": 166, "4h": [166, 327], "breakout": 166, "unctrl": [166, 167], "ungetch": [166, 268], "update_lines_col": [166, 454], "unget_wch": [166, 452], "get_wch": [166, 452], "ungetmous": 166, "use_env": 166, "newterm": 166, "subwindow": 166, "addnstr": 166, "20190511": 166, "stuck": 166, "attroff": 166, "attron": 166, "attrset": 166, "bkgd": 166, "bkgdset": 166, "bl": 166, "acs_vlin": 166, "acs_hlin": 166, "acs_urcorn": 166, "acs_llcorn": 166, "acs_lrcorn": 166, "vertch": 166, "horch": 166, "chgat": [166, 443], "touchlin": 166, "redisplai": [166, 302, 440], "repaint": 166, "clearok": 166, "clrtobot": 166, "clrtoeol": 166, "cursyncup": 166, "delch": 166, "deleteln": 166, "derwin": 166, "subwin": 166, "echochar": 166, "getbegyx": 166, "getbkgd": 166, "getmaxyx": 166, "getparyx": 166, "getyx": 166, "hline": 166, "idcok": 166, "idlok": 166, "immedok": 166, "degrad": [166, 451], "wrefresh": 166, "inch": [166, 347], "insch": 166, "insdelln": 166, "insertln": 166, "insnstr": 166, "insstr": 166, "instr": [166, 180, 340, 453], "is_linetouch": 166, "is_wintouch": 166, "new_i": 166, "new_x": 166, "mvderwin": 166, "mvwin": 166, "notimeout": 166, "overlai": 166, "destwin": 166, "dminrow": 166, "dmincol": 166, "dmaxrow": 166, "dmaxcol": 166, "redrawln": 166, "beg": 166, "redrawwin": 166, "rendit": 166, "scrollok": 166, "setscrreg": 166, "standend": 166, "standout": 166, "subpad": 166, "syncdown": 166, "syncok": 166, "syncup": 166, "touchwin": 166, "untouchwin": 166, "vline": 166, "__version__": [166, 179, 234, 365, 452, 454, 458], "ncurses_vers": [166, 457], "a_altcharset": 166, "dim": 166, "a_invi": 166, "a_ital": 166, "a_protect": 166, "a_horizont": 166, "a_left": 166, "a_low": 166, "a_right": 166, "a_top": 166, "a_vert": 166, "a_attribut": 166, "a_chartext": 166, "a_color": 166, "key_": 166, "keycap": 166, "key_min": 166, "key_break": 166, "key_down": 166, "arrow": [166, 236, 280, 353, 361, 418], "key_right": 166, "key_backspac": 166, "key_f0": 166, "key_fn": 166, "key_dl": 166, "key_il": 166, "key_dc": 166, "key_ic": 166, "key_eic": 166, "key_clear": 166, "key_eo": 166, "key_eol": 166, "key_sf": 166, "key_sr": 166, "key_npag": 166, "key_stab": 166, "key_ctab": 166, "key_catab": 166, "key_ent": 166, "key_sreset": 166, "key_reset": 166, "key_print": 166, "key_ll": 166, "key_a1": 166, "key_a3": 166, "key_b2": 166, "key_c1": 166, "key_c3": 166, "key_btab": 166, "key_beg": 166, "key_cancel": 166, "key_clos": 166, "key_command": 166, "key_copi": 166, "key_creat": 166, "key_end": 166, "key_exit": 166, "key_find": 166, "key_help": 166, "key_mark": 166, "key_messag": 166, "key_mov": 166, "key_next": 166, "key_open": 166, "key_opt": 166, "key_previ": 166, "prev": [166, 353], "key_redo": 166, "redo": [166, 236], "key_refer": 166, "key_refresh": 166, "key_replac": 166, "key_restart": 166, "key_resum": 166, "key_sav": 166, "key_sbeg": 166, "key_scancel": 166, "key_scommand": 166, "key_scopi": 166, "key_screat": 166, "key_sdc": 166, "key_sdl": 166, "key_select": 166, "key_send": 166, "key_seol": 166, "key_sexit": 166, "key_sfind": 166, "key_shelp": 166, "key_shom": 166, "key_sic": 166, "key_sleft": 166, "key_smessag": 166, "key_smov": 166, "key_snext": 166, "key_sopt": 166, "key_sprevi": 166, "key_sprint": 166, "key_sredo": 166, "key_sreplac": 166, "key_sright": 166, "key_srsum": 166, "key_ssav": 166, "key_ssuspend": 166, "key_sundo": 166, "key_suspend": 166, "key_undo": 166, "key_res": 166, "key_max": 166, "key_f1": 166, "key_f2": 166, "key_f3": 166, "key_f4": 166, "twelv": [166, 353], "crude": 166, "acs_bbss": 166, "acs_block": 166, "solid": [166, 452, 453], "acs_board": 166, "acs_bsb": 166, "acs_bssb": 166, "acs_bsss": 166, "acs_bte": 166, "acs_bullet": 166, "bullet": [166, 282], "acs_ckboard": 166, "stippl": 166, "acs_darrow": 166, "acs_degre": 166, "acs_diamond": 166, "acs_gequ": 166, "acs_lantern": 166, "lantern": 166, "acs_larrow": 166, "acs_lequ": 166, "acs_lte": 166, "acs_nequ": 166, "acs_pi": 166, "acs_plu": 166, "acs_rarrow": 166, "acs_rte": 166, "acs_s1": 166, "acs_s3": 166, "acs_s7": 166, "acs_s9": 166, "acs_sbb": 166, "acs_sbsb": 166, "acs_sbss": 166, "acs_ssbb": 166, "acs_ssb": 166, "acs_sssb": 166, "acs_ssss": 166, "crossov": 166, "acs_sterl": 166, "pound": [166, 179, 413], "sterl": 166, "acs_tte": 166, "acs_uarrow": 166, "color_blu": 166, "color_cyan": 166, "greenish": 166, "color_green": 166, "color_magenta": 166, "purplish": 166, "color_yellow": 166, "netscap": [166, 232, 259, 379, 438, 441, 443, 449], "bbedit": [166, 434], "framemak": 166, "uli": 166, "ulx": 166, "lry": 166, "lrx": 166, "stripspac": 166, "do_command": 166, "land": [166, 273], "soh": 167, "stx": 167, "etx": 167, "enq": 167, "enquiri": 167, "bel": [167, 410], "ht": [167, 323, 361], "ff": [167, 179, 214, 301, 410], "dle": 167, "dc1": 167, "xon": 167, "dc2": 167, "dc3": 167, "xoff": 167, "dc4": 167, "nak": 167, "syn": 167, "etb": 167, "em": [167, 301], "esc": 167, "sp": [167, 224, 229], "mnemon": [167, 256, 321, 353, 439], "teleprint": 167, "predat": [167, 179, 269, 371], "isalpha": [167, 324, 450], "isdigit": [167, 308, 324], "islow": [167, 308, 324], "isascii": [167, 324, 456], "isblank": 167, "iscntrl": 167, "0x1f": [167, 447, 449, 450], "0x7f": [167, 324], "isgraph": 167, "ispunct": 167, "isspac": [167, 324], "isxdigit": 167, "hexdigit": [167, 325, 410], "isctrl": 167, "ismeta": 167, "anded": 167, "ored": 167, "controlnam": 167, "thirti": [167, 298], "bottom_panel": 168, "new_panel": 168, "top_panel": 168, "update_panel": 168, "set_userptr": 168, "userptr": 168, "557": [170, 359, 456], "inventoryitem": 170, "unit_pric": 170, "quantity_on_hand": 170, "total_cost": 170, "unsafe_hash": [170, 363], "match_arg": [170, 363], "kw_onli": [170, 363, 447], "weakref_slot": 170, "dunder": [170, 410, 457], "nonetheless": [170, 237], "__match_args__": [170, 402, 403, 416, 447], "__weakref__": [170, 378, 403], "class_or_inst": 170, "classvar": [170, 363, 448, 455], "initvar": 170, "asdict": 170, "dict_factori": [170, 320], "astupl": 170, "tuple_factori": 170, "make_dataclass": 170, "cls_name": [170, 200], "add_on": 170, "__post_init__": 170, "forewarn": 170, "is_dataclass": 170, "is_dataclass_inst": 170, "frozeninstanceerror": 170, "databasetyp": 170, "my_databas": 170, "intconversiondescriptor": 170, "_default": 170, "datetyp": 172, "differenti": [172, 175, 302, 372, 447, 451, 452, 455, 458], "categor": [172, 276, 301, 376, 405], "polit": [172, 212, 437], "daylight": [172, 198, 344, 400, 458], "metr": 172, "mile": 172, "est": [172, 344, 451, 455], "edt": [172, 344, 452, 455], "minyear": 172, "maxyear": 172, "customiz": [172, 347, 420, 444], "utcoffset": 172, "29000": 172, "29156": 172, "tiebreak": 172, "t1": [172, 175, 249, 363, 375], "t2": [172, 175, 249, 363, 375], "t3": [172, 175, 276, 363], "uuuuuu": 172, "68400": 172, "delta1": 172, "delta2": 172, "total_second": [172, 444], "270": [172, 361], "another_year": 172, "84": [172, 323, 455, 457], "31536000": 172, "ten_year": 172, "3650": 172, "nine_year": 172, "3285": 172, "three_year": 172, "1095": 172, "2038": [172, 344], "fromordin": [172, 456], "toordin": 172, "fromisoformat": [172, 320, 448, 456], "date_str": 172, "yyyi": [172, 237], "ddd": 172, "2019": [172, 323, 430, 457], "20191204": 172, "2021": [172, 443, 447], "w01": 172, "dd": [172, 237, 249, 276], "fromisocalendar": [172, 457], "isocalendar": [172, 457, 458], "date2": 172, "date1": 172, "comparand": 172, "timetupl": 172, "struct_tim": [172, 237, 259, 344, 455], "ydai": 172, "isocalendard": 172, "mktime": [172, 198, 344, 451], "2007": [172, 347, 401, 443], "my_birthdai": 172, "time_to_birthdai": 172, "730920": 172, "730920th": 172, "70th": 172, "ic": [172, 270, 327, 443], "tz": [172, 340, 344, 400, 449, 450], "gettimeofdai": [172, 344, 450], "utcnow": [172, 449, 450], "utcfromtimestamp": [172, 321, 449, 450], "2011": [172, 192, 321, 388, 401, 403, 430, 451], "20111104": 172, "04t00": 172, "23z": 172, "20111104t000523": 172, "2t00": 172, "283000": 172, "14400": 172, "datetime2": 172, "datetime1": 172, "timetz": 172, "astimezon": [172, 179, 400, 452, 455, 457], "astz": 172, "dt": [172, 198, 394, 400, 458], "fromutc": 172, "tm_isdst": [172, 344], "utctimetupl": 172, "spill": 172, "timespec": [172, 455], "ddthh": 172, "ffffff": [172, 361], "132263": 172, "18t15": 172, "27t00": 172, "000100": 172, "25t00": 172, "01t12": 172, "79043": 172, "79060": 172, "325": [172, 175, 442], "30pm": 172, "kabul": 172, "afghanistan": 172, "1945": 172, "thereaft": [172, 236, 254, 372, 423], "kabultz": 172, "utc_move_d": 172, "1944": 172, "pep495": 172, "tz1": 172, "dt1": 172, "dt2": 172, "dt3": 172, "midnight": [172, 257, 443, 451, 454], "obscur": [172, 182, 366, 443, 453, 454, 456], "13936": [172, 454], "time_str": 172, "t04": 172, "t042301": 172, "000384": 172, "384": [172, 442, 447, 449, 458], "01z": 172, "123456": 172, "geograph": 172, "dston": 172, "dstoff": 172, "america": [172, 400, 401, 444, 458], "york": 172, "straddl": 172, "dtoff": 172, "dtdst": 172, "tzinfo_exampl": 172, "_time": 172, "stdoffset": 172, "dstoffset": 172, "altzon": [172, 344], "dstdiff": 172, "localtimezon": 172, "stamp": [172, 361, 415, 440, 441], "dst_diff": 172, "_isdst": 172, "first_sunday_on_or_aft": 172, "days_to_go": 172, "olson": 172, "pytz": 172, "twinsun": 172, "sourceforg": [172, 437, 438, 440, 443], "2am": 172, "dststart_2007": 172, "dstend_2007": 172, "dststart_1987_2006": 172, "dstend_1987_2006": 172, "1967": [172, 361, 444], "dststart_1967_1986": 172, "dstend_1967_1986": 172, "us_dst_rang": 172, "dststart": 172, "dstend": 172, "1966": 172, "ustimezon": 172, "reprnam": 172, "stdname": [172, 290], "dstname": [172, 314], "gap": [172, 257, 259, 451], "std_time": 172, "dst_time": 172, "cst": 172, "cdt": 172, "mountain": 172, "mst": 172, "mdt": 172, "pacif": [172, 400], "pst": [172, 400, 458], "pdt": [172, 400, 458], "0500": [172, 198], "u0": [172, 455], "tzdata": [172, 400, 458], "globe": 172, "civil": 172, "59pm": 172, "en_u": [172, 454], "de_d": [172, 254, 454], "sonntag": 172, "montag": 172, "samstag": 172, "dez": 172, "januar": 172, "februar": 172, "dezemb": 172, "0002": 172, "2014": [172, 321, 443, 444, 453], "9998": [172, 455], "pm": [172, 182, 254, 280, 331, 344, 450], "000001": 172, "hhmm": [172, 237, 344], "0400": [172, 452], "1030": 172, "063415": 172, "030712": 172, "345216": 172, "002": [172, 290, 324], "1988": [172, 179, 337, 443], "c89": [172, 443], "broadli": [172, 363, 444], "01t00": 172, "0330": 172, "japan": [172, 254], "jst": 172, "gent": 172, "oracl": [173, 320, 442, 452], "whichdb": [173, 445], "unread": [173, 282, 372, 446, 454], "0o666": [173, 277, 279], "prevail": [173, 405], "umask": [173, 277, 279, 328, 340, 456], "cabl": 173, "open_flag": 173, "firstkei": 173, "nextkei": 173, "reorgan": [173, 183, 438, 443, 446, 448, 455, 457], "unwritten": 173, "pag": 173, "dumbdbm": [173, 445], "breakdown": [174, 175], "bottleneck": [174, 215, 446], "intrus": 174, "paramount": 175, "excerpt": [175, 457], "3000000000000003": 175, "5511151231257827e": 175, "017": 175, "customari": [175, 342, 401, 425, 430], "monetari": [175, 254, 442, 456], "schoolbook": 175, "multiplicand": [175, 427], "5600": 175, "getcontext": [175, 427, 441], "prec": [175, 427, 441, 442, 443], "142857": [175, 182], "1428571428571428571428571429": [175, 441], "modest": [175, 426], "inexact": [175, 277, 419, 452], "prejudic": 175, "unround": 175, "coeffici": [175, 249, 262, 323, 324, 325, 440, 453], "round_ceil": [175, 441], "round_down": [175, 441], "round_floor": 175, "round_half_down": 175, "round_half_even": [175, 441], "round_half_up": 175, "round_up": 175, "round_05up": 175, "clamp": [175, 451, 452], "invalidoper": [175, 441, 443, 444, 452], "divisionbyzero": [175, 441], "subnorm": 175, "floatoper": [175, 452], "sticki": [175, 322, 337, 353], "emin": [175, 452], "emax": [175, 452], "140000000000000124344978758017532527446746826171875": 175, "4142135623730951": 175, "414213562373095048801688724": 175, "1415926535": 175, "7182818285": 175, "85987": 175, "85988": 175, "1e9999999999999999999": 175, "circu": [175, 214, 414], "87": [175, 237, 323, 328], "5058": 175, "718281828459045235360287471": [175, 443], "ln": [175, 236, 443, 452], "302585092994045684017991455": 175, "quantiz": [175, 452], "setcontext": 175, "basiccontext": [175, 452], "extendedcontext": [175, 452], "myothercontext": 175, "142857142857142857142857142857142857142857142857142857142857": 175, "142857143": [175, 441], "143": [175, 237, 359, 361, 439], "clear_flag": 175, "355": [175, 210], "113": [175, 210, 424], "14159292": 175, "112": [175, 323, 359, 447, 457, 458], "snan": [175, 444], "devan\u0101gar\u012b": 175, "fullwidth": 175, "uff10": 175, "uff19": 175, "losslessli": [175, 179, 403, 419, 449, 451], "100000000000000088817841970012523233890533447265625": [175, 446, 451], "00000": 175, "321e": 175, "as_integer_ratio": [175, 210, 324, 419, 443, 455, 457], "denomin": [175, 210, 273, 324, 419, 443, 455, 457], "157": [175, 455], "as_tupl": [175, 443], "decimaltupl": 175, "compare_sign": 175, "compare_tot": 175, "unaffect": [175, 314, 344, 403, 411, 430, 440, 443, 455], "compare_total_mag": 175, "copy_ab": 175, "conjug": [175, 273, 324, 443], "copy_neg": 175, "copy_sign": 175, "561702493119680037517373933e": 175, "from_float": [175, 210, 419, 444, 446, 451], "0x1": [175, 324, 419, 443, 446, 447, 449, 450], "999999999999ap": 175, "1000000000000000055511151231257827021181583404541015625": [175, 419, 444], "fma": 175, "fuse": 175, "is_canon": [175, 444], "is_finit": 175, "is_infinit": 175, "is_nan": 175, "is_norm": [175, 364, 457], "is_qnan": 175, "is_sign": 175, "is_snan": 175, "is_subnorm": 175, "is_zero": 175, "logb": 175, "logical_and": 175, "logical_invert": 175, "logical_or": 175, "logical_xor": 175, "max_mag": 175, "min_mag": 175, "next_minu": 175, "next_plu": 175, "next_toward": 175, "closest": [175, 210, 214, 262, 402, 419, 443, 444, 449], "321000e": 175, "number_class": 175, "41421356": 175, "etini": 175, "remainder_near": 175, "same_quantum": 175, "scaleb": 175, "to_eng_str": [175, 441], "123e": 175, "23e": 175, "to_integr": 175, "to_integral_valu": 175, "to_integral_exact": 175, "localcontext": [175, 324, 442, 443], "calculate_someth": 175, "halt": [175, 201, 276, 279, 365, 416, 453], "defaultcontext": [175, 452], "max_prec": [175, 452], "min_emin": [175, 452], "max_emax": [175, 452], "02e": 175, "weaker": [175, 438], "999": [175, 270], "create_decim": [175, 443, 452], "23e999": 175, "23000e": 175, "clear_trap": 175, "copy_decim": 175, "4445": 175, "0023": 175, "create_decimal_from_float": 175, "etop": 175, "recount": 175, "divide_int": 175, "qnan": 175, "msd": 175, "xor": [175, 200, 275, 324, 405], "to_sci_str": [175, 441], "scientif": [175, 323, 325, 429, 436, 443], "425000000": [175, 452], "999999999999999999": [175, 452], "min_etini": 175, "849999999": 175, "1999999999999999997": 175, "have_thread": [175, 452], "have_contextvar": [175, 431], "decimalexcept": 175, "inward": 175, "outward": 175, "loss": [175, 214, 232, 246, 259, 262, 344, 372, 396, 401, 405, 419, 439, 441, 443, 447, 451, 455, 456, 457], "stricter": [175, 366, 437, 438, 442, 448, 452, 454, 456], "amplifi": 175, "seminumer": 175, "11111113": 175, "11111111": [175, 324], "51111111": 175, "5111111": 175, "20000": [175, 345], "0000003": 175, "0060000": 175, "affin": 175, "indetermin": [175, 331, 353, 376, 418], "854": 175, "complianc": [175, 183, 192, 197, 383, 385, 452, 453], "accustom": 175, "0e": 175, "1000026": 175, "applicationwid": 175, "moneyfmt": 175, "curr": 175, "dp": 175, "trailneg": 175, "monei": [175, 328], "currenc": [175, 254, 442], "1234567": [175, 210, 427, 446], "8901": [175, 458], "234": [175, 325, 427, 446, 454], "568": 175, "123456789": 175, "141592653589793238462643383": 175, "na": [175, 308, 447, 448, 449, 450, 457, 458], "da": [175, 249, 301, 454, 455], "389056098930650227230427461": 175, "38905609893": 175, "0j": [175, 214, 324, 394], "taylor": [175, 443], "8775825618903727161162815826": 175, "87758256189": 175, "4794255386042030002732879352": 175, "479425538604": 175, "twoplac": 175, "214": [175, 290], "72": [175, 236, 249, 323, 361, 441, 442], "105": [175, 323], "4314": 175, "2e2": 175, "2e": 175, "1416": [175, 417], "00005": 175, "5000": 175, "remove_expon": 175, "5e": [175, 327], "141592653589793115997963468544185161590576171875": 175, "spuriou": [175, 279, 315, 446], "ill": [175, 286, 451, 456], "104": [175, 323, 451, 457, 458], "23456789": 175, "2345678": 175, "2345": 175, "pypy3": 175, "libmpdec": [175, 431, 452], "karatsuba": [175, 440], "bignum": [175, 324, 452], "904625697166532776746648320380374280103671755200316906558262375061821325312": 175, "overalloc": [175, 324, 457], "8gb": 175, "500mb": 175, "maxdigit": [175, 331], "getsizeof": [175, 331, 340, 359, 425, 443, 448], "524288112": 175, "tighter": [175, 402, 441, 452], "sigsegv": [177, 203, 315, 430, 452], "sigfp": [177, 203, 315, 430, 452], "sigabrt": [177, 203, 277, 315, 430, 452], "sigbu": [177, 203, 315, 430, 452], "sigil": [177, 203, 315, 430, 452], "iobas": [177, 179, 202, 204, 246, 355, 430, 450, 457], "readm": [177, 212, 236, 246, 279, 431, 435, 436, 437, 451, 455, 456], "269": 177, "unclos": [177, 236, 320, 447, 451, 455], "rst": [177, 279, 431, 435, 456], "18748": [177, 457], "modal": [178, 348, 351], "askfloat": 178, "askinteg": 178, "askstr": 178, "buttonbox": 178, "initialdir": 178, "initialfil": 178, "filetyp": [178, 444, 450, 453], "defaultextens": 178, "askopenfil": 178, "asksaveasfil": 178, "savea": 178, "askopenfilenam": 178, "asksaveasfilenam": 178, "askdirectori": 178, "mustexist": 178, "cancel_command": 178, "dirs_double_ev": 178, "dirs_select_ev": 178, "files_double_ev": 178, "files_select_ev": 178, "filter_command": 178, "get_filt": 178, "get_select": 178, "dir_or_fil": 178, "curdir": [178, 205, 277, 278, 314, 347], "ok_ev": 178, "set_filt": 178, "set_select": 178, "loadfiledialog": 178, "ok_command": 178, "savefiledialog": 178, "ratcliff": 179, "obershelp": 179, "hyperbol": [179, 443], "gestalt": 179, "longest": [179, 225, 247, 249, 278, 410, 439, 442, 454], "cubic": 179, "autojunk": 179, "intralin": 179, "htmldiff": [179, 441, 454], "contextu": [179, 255], "tabsiz": [179, 324, 342], "wrapcolumn": 179, "linejunk": 179, "charjunk": 179, "is_character_junk": 179, "make_fil": [179, 454], "fromlin": 179, "tolin": 179, "fromdesc": 179, "todesc": 179, "numlin": 179, "hyperlink": 179, "make_t": 179, "context_diff": 179, "fromfiled": 179, "tofiled": 179, "lineterm": 179, "uniformli": [179, 243, 300], "eggi": 179, "hamster": 179, "get_close_match": 179, "cutoff": 179, "appel": 179, "peach": 179, "puppi": 179, "pineappl": 179, "is_line_junk": 179, "constitut": [179, 247, 313, 371, 401, 447], "nois": [179, 276, 277, 323], "ntwo": 179, "nthree": 179, "ore": 179, "ntree": 179, "nemu": 179, "emu": 179, "unified_diff": 179, "diff_byt": [179, 454], "dfunc": 179, "metzen": 179, "dr": [179, 212, 342, 451], "dobb": 179, "journal": 179, "isjunk": 179, "synch": 179, "bjunk": [179, 453], "bpopular": [179, 453], "b2j": 179, "set_seq": 179, "set_seq2": 179, "set_seq1": 179, "find_longest_match": 179, "alo": 179, "ahi": 179, "blo": 179, "bhi": 179, "maxim": [179, 180, 185, 214, 216, 224, 236, 340, 415], "get_matching_block": [179, 442], "abxcd": 179, "get_opcod": 179, "j1": [179, 435], "j2": 179, "qabxcd": 179, "abycdf": 179, "get_grouped_opcod": 179, "cluster": [179, 214, 318, 323, 430, 443], "quick_ratio": 179, "real_quick_ratio": 179, "tide": 179, "diet": 179, "bcde": [179, 249, 444], "volatil": [179, 270], "text1": 179, "text2": 179, "flat": [179, 190, 193, 347, 353, 387], "interlin": 179, "file_mtim": 179, "st_mtime": [179, 223, 277, 279, 322, 337, 440], "fromdat": 179, "todat": 179, "tf": [179, 451], "file1": [179, 367, 444], "file2": [179, 367, 444], "r1": [179, 231, 361, 371], "r2": [179, 231, 361, 371], "ndiff_output": 179, "file1_or_file2": 179, "sed": 179, "ioerror": [179, 202, 204, 207, 214, 219, 232, 243, 246, 268, 269, 314, 315, 370, 398, 425, 443, 444, 445, 452], "sprai": 179, "iff": [179, 182], "fcompar": 179, "f1name": 179, "f2name": 179, "crack": 179, "qr": 179, "noisi": [179, 276], "qseen": 179, "rseen": 179, "whichfil": 179, "show_cach": 180, "alist": [180, 286, 403], "disassembli": [180, 252, 283, 340, 456], "load_glob": [180, 457], "load_fast": [180, 453], "first_lin": 180, "current_offset": [180, 453], "analys": 180, "get_instruct": [180, 453], "from_traceback": [180, 453], "codeobj": 180, "code_info": [180, 451], "show_cod": [180, 451, 453], "distb": [180, 453], "lasti": 180, "disco": 180, "findlinestart": 180, "co_lin": [180, 447, 450], "co_firstlineno": [180, 243, 403], "co_lnotab": [180, 243, 403, 447, 449, 450, 455], "findlabel": 180, "stack_effect": [180, 453], "oparg": [180, 449], "baseopcod": 180, "baseopnam": 180, "argval": [180, 340], "argrepr": 180, "start_offset": [180, 258], "extended_arg": 180, "cache_offset": 180, "end_offset": [180, 202, 358, 447], "starts_lin": 180, "line_numb": [180, 332], "is_jump_target": 180, "jump_target": 180, "nop": [180, 416], "pop_top": 180, "end_for": 180, "quicken": [180, 448], "unary_neg": 180, "unary_not": 180, "unary_invert": 180, "get_it": 180, "get_yield_from_it": 180, "to_bool": 180, "binary_op": [180, 448], "lh": 180, "binary_subscr": 180, "store_subscr": 180, "delete_subscr": 180, "binary_slic": [180, 449], "store_slic": [180, 449], "get_await": 180, "co_iterable_coroutin": [180, 243], "get_ait": 180, "get_anext": 180, "end_async_for": [180, 457], "cleanup_throw": [180, 449], "before_async_with": 180, "set_add": 180, "list_append": [180, 441], "map_add": [180, 457], "return_const": [180, 449], "consti": 180, "co_const": [180, 243, 403], "yield_valu": 180, "setup_annot": [180, 455], "pop_except": 180, "push_exc_info": [180, 448], "check_exc_match": [180, 448], "check_eg_match": [180, 448], "with_except_start": 180, "context_manag": 180, "load_assertion_error": [180, 458], "load_build_class": 180, "__build_class__": [180, 425], "before_with": [180, 448], "get_len": 180, "match_map": 180, "match_sequ": 180, "match_kei": [180, 448], "store_nam": [180, 321], "namei": 180, "co_nam": [180, 243, 403, 454], "store_fast": 180, "store_glob": 180, "delete_nam": 180, "unpack_sequ": 180, "unpack_ex": 180, "leftov": [180, 276], "store_attr": 180, "delete_attr": 180, "delete_glob": 180, "load_const": [180, 451, 453], "load_nam": [180, 451], "load_loc": [180, 449], "load_from_dict_or_deref": [180, 449], "load_from_dict_or_glob": [180, 449], "build_tupl": 180, "build_list": 180, "build_set": 180, "build_map": 180, "build_const_key_map": [180, 455], "build_str": [180, 455], "list_extend": 180, "set_upd": 180, "dict_upd": 180, "dict_merg": 180, "load_attr": [180, 447, 449], "call_kw": 180, "load_super_attr": [180, 449], "compare_op": [180, 451, 458], "cmp_op": 180, "is_op": [180, 458], "contains_op": [180, 458], "import_nam": [180, 406], "import_from": [180, 406], "jump_forward": 180, "jump_backward": [180, 448], "jump_backward_no_interrupt": [180, 448], "pop_jump_if_tru": [180, 448], "pop_jump_if_fals": [180, 448, 451], "pop_jump_if_not_non": 180, "pop_jump_if_non": 180, "for_it": 180, "var_num": 180, "load_fast_check": [180, 449], "load_fast_and_clear": [180, 449], "delete_fast": 180, "make_cel": [180, 448], "load_deref": 180, "load_classderef": [180, 449, 453], "store_deref": 180, "delete_deref": 180, "copy_free_var": [180, 448], "raise_vararg": 180, "ascend": [180, 290, 324], "call_function_ex": [180, 455], "push_nul": [180, 448], "load_method": [180, 449, 456], "make_funct": [180, 447, 455], "set_function_attribut": 180, "0x02": [180, 455], "0x08": [180, 403], "build_slic": 180, "convert_valu": 180, "format_simpl": 180, "match_class": [180, 448], "return_gener": [180, 448], "have_argu": [180, 449, 450], "hasarg": [180, 449, 450], "call_intrinsic_1": [180, 449], "intrinsic_1_invalid": 180, "intrinsic_print": 180, "intrinsic_import_star": 180, "intrinsic_stopiteration_error": 180, "intrinsic_async_gen_wrap": 180, "aync": 180, "intrinsic_unary_posit": 180, "intrinsic_list_to_tupl": 180, "intrinsic_typevar": 180, "intrinsic_paramspec": 180, "intrinsic_typevartupl": 180, "intrinsic_subscript_gener": 180, "intrinsic_typealia": 180, "typealiastyp": [180, 363, 402, 411, 449], "call_intrinsic_2": [180, 449], "intrinsic_2_invalid": 180, "intrinsic_prep_reraise_star": 180, "intrinsic_typevar_with_bound": 180, "intrinsic_typevar_with_constraint": 180, "intrinsic_set_function_type_param": 180, "__type_params__": [180, 324, 363, 402, 403, 404], "setup_fin": [180, 448], "setup_cleanup": 180, "setup_with": [180, 448], "pop_block": [180, 448], "jump_no_interrupt": 180, "undirect": 180, "load_closur": 180, "min_pseudo_opcod": [180, 450], "opmap": 180, "hasconst": 180, "hasfre": 180, "hasnam": 180, "hasjump": 180, "hasloc": 180, "hascompar": 180, "hasexc": [180, 449], "hasjrel": 180, "hasjab": 180, "expositori": 182, "265252859812191058636308480000000": 182, "ridicul": 182, "1e100": [182, 262, 405, 410], "1e300": 182, "testmod": [182, 340, 426, 441, 446], "test_doctest": 182, "testfil": [182, 442], "giant": 182, "720": [182, 451, 457], "__test__": 182, "blanklin": [182, 441], "normalize_whitespac": 182, "trial": [182, 300, 323, 345, 440], "crumb": 182, "your_dict": 182, "rapidli": [182, 290], "ndetail": 182, "transcript": 182, "ignore_exception_detail": [182, 444], "tild": [182, 220, 278, 354], "dont_accept_true_for_1": 182, "dont_accept_blanklin": 182, "oop": [182, 418], "comparison_flag": 182, "report_udiff": [182, 441], "report_cdiff": [182, 441], "report_ndiff": [182, 441], "ndiff": [182, 438, 439], "report_only_first_failur": 182, "fail_fast": [182, 453], "reporting_flag": 182, "register_optionflag": 182, "my_flag": 182, "directive_opt": 182, "on_or_off": 182, "directive_option_nam": 182, "hermion": 182, "harri": [182, 442], "7948648": 182, "0x00ac18f0": 182, "qualiti": [182, 277, 287, 308, 403, 451], "14285714285714285": [182, 421], "142857142857": 182, "contriv": 182, "utterli": [182, 445], "module_rel": 182, "optionflag": [182, 340], "extraglob": 182, "raise_on_error": 182, "failure_count": [182, 340], "test_count": [182, 340], "slate": [182, 337, 407, 447, 448, 453, 454], "mortem": [182, 280, 331, 415, 449, 450], "exclude_empti": 182, "run_docstring_exampl": 182, "nonam": [182, 397], "compileflag": 182, "systemat": 182, "discoveri": [182, 317, 394, 448, 451, 453, 454], "load_test": [182, 340, 454], "my_module_with_doctest": 182, "addtest": [182, 365], "doctestsuit": [182, 365, 440, 454], "testsuit": [182, 340, 365, 440, 453, 454], "docfilesuit": [182, 442], "teardown": [182, 340, 365, 366, 367, 444], "failureexcept": [182, 365], "tear": [182, 365], "set_unittest_reportflag": 182, "test_find": 182, "doctestcas": 182, "testcas": [182, 340, 365, 366, 367, 401, 426, 444, 446, 448, 449, 451, 452, 453, 457], "docfilecas": 182, "runtest": [182, 365], "revolv": [182, 225], "exc_msg": 182, "format_exception_onli": [182, 358, 447, 450], "get_doctest": 182, "get_exampl": 182, "report_start": 182, "report_success": 182, "report_unexpected_except": 182, "report_failur": 182, "clear_glob": 182, "report_": 182, "check_output": [182, 328, 444, 453], "output_differ": 182, "debugrunn": 182, "cont": 182, "script_from_exampl": 182, "testsourc": 182, "post_mortem": [182, 280, 443], "debug_src": 182, "sketch": [182, 232, 416, 429, 442, 443, 447], "unexpectedexcept": 182, "doctestfailur": 182, "invalu": [182, 301], "amaz": [182, 439], "skimp": 182, "prose": 182, "attitud": 182, "coher": [182, 215], "narr": 182, "blur": [182, 249], "_regrtest_top": 182, "2821": 183, "nntp": [183, 371, 441, 452, 458], "5322": [183, 185, 188, 190, 192, 194, 196, 197, 317], "6532": [183, 194, 196, 197, 454, 456], "2046": [183, 186, 191], "2047": [183, 191, 192, 197, 198, 224, 451], "2183": [183, 185, 194], "2231": [183, 185, 191, 194, 198], "subcompon": 183, "emailmessag": [183, 185, 186, 189, 190, 191, 194, 196, 197, 231, 372, 450, 453, 455], "multipart": [183, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 450], "forego": [183, 401], "promot": [183, 225, 401, 416, 443, 448], "emailpolici": [183, 186, 192, 197, 452, 454], "offic": [183, 401], "input_charset": [184, 185], "default_charset": 184, "outright": 184, "header_encod": 184, "qp": 184, "body_encod": 184, "output_charset": [184, 185, 444, 448, 457], "input_codec": 184, "output_codec": 184, "get_body_encod": 184, "7bit": [184, 186, 187, 190, 192, 197, 259, 451, 452], "get_output_charset": 184, "header_encode_lin": 184, "maxlength": [184, 269], "add_charset": 184, "header_enc": 184, "body_enc": 184, "add_codec": 184, "add_alia": 184, "codecnam": 184, "rfc822": [185, 186, 193, 194, 195, 196, 237, 439, 441], "envelop": [185, 190, 194, 196, 237, 259, 317], "from_": [185, 259, 353], "as_str": [185, 190, 191, 194, 453], "unixfrom": [185, 190, 194, 453], "maxheaderlen": [185, 190, 194, 453], "max_line_length": [185, 194, 197, 452], "mbox": [185, 190, 442], "mangle_from_": [185, 190, 197, 454], "as_byt": [185, 189, 190, 194, 197, 239, 453], "bytesgener": [185, 186, 190, 194, 197, 317, 451], "__bytes__": [185, 190, 194, 324, 363, 403, 448, 453, 454], "is_multipart": [185, 188, 194, 196], "cte": [185, 186, 187, 192, 194, 197, 320], "get_content_maintyp": [185, 189, 194], "set_unixfrom": [185, 194], "get_unixfrom": [185, 194], "set_payload": [185, 195], "set_cont": [185, 186, 187, 189, 194, 196, 197], "get_payload": [185, 189, 193, 195, 451], "invalidbase64paddingdefect": [185, 188], "invalidbase64charactersdefect": [185, 188], "8bit": [185, 186, 187, 190, 191, 192, 196, 197, 451, 452], "get_cont": [185, 186, 189, 194, 197], "iter_part": [185, 194, 196], "set_charset": 185, "get_charset": [185, 194], "2822": [185, 191, 198, 231, 234, 259, 344, 426, 439], "bias": [185, 194, 300, 323, 440], "contravent": 185, "mymessag": [185, 194], "get_al": [185, 194, 198, 383], "extant": [185, 194], "roolz": [185, 194], "failobj": [185, 194], "add_head": [185, 194, 195, 366, 372, 383], "_param": [185, 194, 195, 383], "disposit": [185, 186, 192, 194, 237, 277, 315, 376, 383, 454], "bud": [185, 194, 383], "gif": [185, 194, 195, 220, 347, 361, 383, 442], "fu\u00dfbal": [185, 194], "ppt": [185, 194], "fu": 185, "dfballer": 185, "replace_head": [185, 194], "get_content_typ": [185, 189, 194, 450], "maintyp": [185, 186, 189, 190, 192, 193, 194], "get_default_typ": [185, 194], "get_content_subtyp": [185, 194], "subpart": [185, 187, 188, 190, 193, 194, 195, 196], "set_default_typ": [185, 194], "get_param": [185, 198], "collapse_rfc2231_valu": [185, 198], "rawparam": 185, "set_param": [185, 194, 453], "requot": [185, 194], "del_param": [185, 194], "set_typ": 185, "make_": 185, "add_": [185, 186], "get_filenam": [185, 189, 194, 238, 398, 453], "get_boundari": [185, 194], "set_boundari": [185, 188, 194], "headerparseerror": [185, 188, 194], "get_content_charset": [185, 194], "get_content_disposit": [185, 194, 454], "deliveri": [185, 189, 194, 196, 259, 277, 300, 315, 318], "_structur": [185, 193, 194], "preambl": [185, 189, 194, 283], "armor": [185, 194], "epilogu": [185, 194], "clear_cont": [186, 194], "typ": [186, 237, 363, 449], "mimepart": [186, 194, 453], "add_get_handl": 186, "add_set_handl": 186, "typekei": 186, "raw_data_manag": [186, 197], "content_manag": [186, 194, 197, 453], "cid": [186, 189, 318], "headernam": 186, "headervalu": 186, "mimetext": [187, 195, 454], "_subtyp": [187, 195], "_charset": [187, 195, 219], "mimeaudio": [187, 195], "mimeimag": [187, 188, 189, 195], "encode_quopri": 187, "unprint": 187, "encode_base64": [187, 195], "drawback": [187, 276, 456], "encode_7or8bit": 187, "encode_noop": 187, "messageerror": 188, "messageparseerror": [188, 259], "boundaryerror": 188, "multipartconversionerror": [188, 195], "add_payload": 188, "mimenonmultipart": [188, 195], "feedpars": [188, 441], "messagedefect": 188, "noboundaryinmultipartdefect": 188, "startboundarynotfounddefect": 188, "closeboundarynotfounddefect": 188, "firstheaderlineiscontinuationdefect": 188, "misplacedenvelopeheaderdefect": 188, "missingheaderbodyseparatordefect": 188, "malformedheaderdefect": 188, "multipartinvariantviolationdefect": [188, 196], "invalidbase64lengthdefect": 188, "invaliddatedefect": 188, "textfil": 189, "send_messag": [189, 197, 317, 451, 454], "bytespars": [189, 190, 196, 451], "messagefil": 189, "uncommon": [189, 238, 419, 442], "parsestr": [189, 196, 386, 387, 389, 437, 454], "someone_els": 189, "display_nam": [189, 192, 452], "reunion": 189, "pngfile": 189, "img_data": 189, "add_attach": [189, 194], "png": [189, 195, 229, 347], "abspath": [189, 278, 279, 375, 444], "isfil": [189, 278, 279, 337, 413, 451, 457], "guess_typ": [189, 234, 263, 383], "msgfile": 189, "message_from_binary_fil": [189, 196, 197, 451], "sanit": [189, 431], "guess_extens": [189, 263], "03d": [189, 255, 324], "make_msgid": [189, 198], "pourquoi": 189, "pa": 189, "asperg": 189, "pour": 189, "ce": [189, 324, 436, 437], "midi": [189, 225], "pep\u00e9": 189, "pew": 189, "pepe": 189, "penelop": 189, "pussycat": 189, "fabrett": 189, "salut": 189, "cett": 189, "recett": 189, "sera": 189, "s\u00fbrement": 189, "un": [189, 192, 243, 411, 424, 447, 453], "tr\u00e8": 189, "bon": 189, "repa": 189, "yummli": 189, "roast": 189, "asparagu": 189, "epicuri": 189, "203718": 189, "asparagus_cid": 189, "add_altern": [189, 194], "href": [189, 227, 229, 231, 388, 444], "img": [189, 229], "peel": 189, "jpg": [189, 246, 278, 394, 427, 442], "add_rel": [189, 194], "jpeg": [189, 195, 347, 421, 443], "magic_html_pars": 189, "html_text": 189, "partfil": 189, "preview": [189, 245], "useless": [189, 212, 366, 386, 447, 457], "get_bodi": [189, 194, 196], "preferencelist": [189, 194], "richest": 189, "content_typ": [189, 192], "iter_attach": [189, 194], "matthew": [189, 448, 453], "dixon": 189, "cowl": 189, "necess": 190, "smime": 190, "outfp": 190, "THE": [190, 406], "refold": [190, 197, 452], "rewrap": [190, 215], "manheaderlen": 190, "linesep": [190, 191, 192, 197, 214, 246, 277, 317, 328, 452], "cte_typ": [190, 192, 197, 452], "craft": [190, 282, 407, 421, 451], "amessag": 190, "transfer_encod": 190, "decodedgener": [190, 455], "part_info": 190, "_mangle_from_": 190, "refold_sourc": [190, 197, 452], "worldwid": [191, 224, 401], "slew": 191, "xf6stal": 191, "f6stal": 191, "maxlinelen": 191, "header_nam": [191, 372, 383], "continuation_w": 191, "splitchar": 191, "decode_head": [191, 452], "decoded_str": 191, "make_head": [191, 452], "decoded_seq": 191, "header_factori": [192, 197, 452], "basehead": [192, 194], "unstructuredhead": 192, "headerdefect": 192, "max_count": [192, 197], "_myattr": 192, "myattr": 192, "unstructur": 192, "datehead": 192, "wild": [192, 411], "format_datetim": [192, 198, 452], "addresshead": 192, "idna": [192, 364, 371, 440], "singleaddresshead": 192, "uniqueunstructuredhead": 192, "mimeversionhead": 192, "parameterizedmimehead": 192, "supplement": [192, 202, 216, 277, 436, 443, 453], "contenttypehead": 192, "contentdispositionhead": 192, "content_disposit": 192, "contenttransferencod": 192, "base_class": 192, "default_class": 192, "use_default_map": 192, "uniquedatehead": 192, "resent": [192, 198, 259, 317], "uniquesingleaddresshead": 192, "uniqueaddresshead": 192, "bcc": [192, 317], "contenttransferencodinghead": 192, "messageidhead": 192, "map_to_typ": 192, "addr_spec": [192, 452], "5321": [192, 452], "body_line_iter": 193, "typed_subpart_iter": 193, "include_default": 193, "message_from_fil": [193, 196], "6531": [194, 197, 317, 454], "mboxmessag": 194, "is_attach": 194, "make_rel": 194, "make_altern": 194, "make_mix": 194, "epilog": [194, 276, 442, 451], "ordinarili": [195, 313], "dice": 195, "mimebas": 195, "_maintyp": 195, "nonmultipart": 195, "mimemultipart": 195, "_subpart": 195, "mimeappl": 195, "_data": [195, 215], "_encod": 195, "audio": [195, 340, 377, 382, 437, 450], "_audiodata": 195, "au": [195, 321, 425], "aiff": [195, 425], "aifc": [195, 377, 437, 448, 449, 450, 458], "_imagedata": 195, "tiff": [195, 347, 442], "pbm": 195, "pgm": [195, 347], "ppm": [195, 347], "rast": 195, "xbm": [195, 347], "bmp": [195, 236, 347, 452, 453, 456, 457], "webp": [195, 347, 454], "exr": 195, "mimemessag": 195, "_msg": 195, "_text": 195, "cloth": 196, "bytesfeedpars": [196, 451], "conduc": 196, "_factori": 196, "message_factori": [196, 197, 455], "stitch": 196, "fed": [196, 224, 229, 269, 296, 388, 442], "bytesheaderpars": [196, 452], "headerpars": [196, 452], "_class": 196, "headersonli": 196, "parsebyt": 196, "message_from_byt": [196, 451], "message_from_str": [196, 452], "mybyt": 196, "dispar": 197, "settabl": [197, 236, 376, 437, 439], "mymsg": [197, 453], "compat_smtp": 197, "compat_strict": 197, "raise_on_defect": [197, 452], "compat_strict_smtp": 197, "commut": [197, 214, 249, 449], "policy100": 197, "policy80": 197, "apolici": 197, "78": [197, 270, 452], "fold_binari": 197, "register_defect": 197, "handle_defect": 197, "header_max_count": 197, "faithfulli": [197, 325, 331], "header_source_pars": 197, "sourcelin": 197, "unfold": 197, "header_store_pars": 197, "header_fetch_pars": 197, "smtputf8": [197, 317, 454], "stype": 197, "rejoin": 197, "refold_head": 197, "somepolici": 197, "isdst": [198, 449, 450], "idstr": 198, "strengthen": 198, "parseaddr": 198, "constitu": [198, 239, 385], "realnam": 198, "formataddr": [198, 452], "email_address": 198, "getaddress": 198, "fieldvalu": 198, "tos": 198, "resent_to": 198, "resent_cc": 198, "all_recipi": 198, "parsed": 198, "mailer": 198, "parsedate_tz": 198, "greenwich": [198, 344], "parsedate_to_datetim": [198, 452], "mktime_tz": 198, "formatd": [198, 441], "timev": 198, "usegmt": 198, "decode_rfc2231": 198, "encode_rfc2231": 198, "fallback_charset": 198, "decode_param": 198, "453": 199, "pipx": [199, 444, 453], "altinstal": [199, 431, 435, 444, 451, 453], "default_pip": 199, "nomenclatur": [200, 331], "enumtyp": [200, 448], "intenum": [200, 230, 315, 318, 321, 324, 455], "strenum": [200, 230, 447, 448], "intflag": [200, 243, 301, 321, 324, 455], "reprenum": [200, 448], "enumcheck": [200, 448], "named_flag": 200, "nonmemb": [200, 448], "global_enum": [200, 448], "show_flag_valu": 200, "some_var": 200, "enummeta": [200, 403, 448, 449], "timeperiod": 200, "powersofthre": 200, "otherstyl": 200, "something_els": 200, "AND": [200, 247, 320, 401, 405], "_numeric_repr_": 200, "crimson": 200, "neon": 200, "0x18": 200, "strictflag": 200, "0b0": 200, "10100": 200, "00111": 200, "conformflag": 200, "ejectflag": 200, "keepflag": 200, "regexflag": [200, 301, 448, 456], "myintenum": 200, "errorcod": [201, 296], "eperm": [201, 202, 452], "enoent": [201, 202, 310, 452], "esrch": [201, 202], "eio": 201, "enxio": 201, "e2big": 201, "enoexec": 201, "ebadf": [201, 310, 455, 458], "echild": [201, 202], "eagain": [201, 202, 204, 277], "enomem": 201, "eacc": [201, 202, 204, 238, 452], "efault": 201, "enotblk": 201, "ebusi": 201, "eexist": [201, 202, 277], "exdev": [201, 277], "enodev": 201, "enotdir": [201, 202], "eisdir": [201, 202], "einval": [201, 277], "enfil": 201, "emfil": 201, "enotti": 201, "typewrit": 201, "etxtbsi": 201, "efbig": 201, "enospc": 201, "espip": 201, "erof": 201, "emlink": 201, "epip": [201, 202, 315], "erang": 201, "edeadlk": 201, "enametoolong": 201, "enolck": 201, "enosi": 201, "enotempti": 201, "eloop": 201, "ewouldblock": [201, 202], "enomsg": 201, "eidrm": 201, "echrng": 201, "el2nsync": 201, "el3hlt": 201, "el3rst": 201, "elnrng": 201, "eunatch": 201, "enocsi": 201, "csi": 201, "el2hlt": 201, "ebad": 201, "ebadr": 201, "exful": 201, "enoano": 201, "anod": 201, "ebadrqc": 201, "ebadslt": 201, "edeadlock": 201, "ebfont": 201, "enostr": 201, "enodata": [201, 277], "etim": 201, "enosr": 201, "enonet": 201, "enopkg": 201, "eremot": 201, "enolink": 201, "eadv": 201, "advertis": [201, 317, 321, 401, 443, 453, 454, 457], "esrmnt": 201, "srmount": 201, "ecomm": 201, "eproto": 201, "emultihop": 201, "multihop": 201, "edotdot": 201, "ebadmsg": 201, "eoverflow": 201, "enotuniq": 201, "ebadfd": 201, "eremchg": 201, "elibacc": 201, "elibbad": 201, "elibscn": 201, "elibmax": 201, "elibexec": 201, "eilseq": 201, "erestart": 201, "estrpip": 201, "euser": 201, "enotsock": 201, "edestaddrreq": 201, "emsgsiz": 201, "eprototyp": 201, "enoprotoopt": 201, "eprotonosupport": 201, "esocktnosupport": 201, "eopnotsupp": 201, "enotsup": 201, "epfnosupport": 201, "eafnosupport": 201, "eaddrinus": 201, "eaddrnotavail": 201, "enetdown": 201, "enetunreach": 201, "enetreset": 201, "econnabort": [201, 202], "econnreset": [201, 202], "enotconn": [201, 453], "eshutdown": [201, 202], "etoomanyref": 201, "splice": [201, 277, 447], "etimedout": [201, 202, 443], "econnrefus": [201, 202], "ehostdown": 201, "ehostunreach": 201, "ealreadi": [201, 202], "estal": 201, "stale": [201, 238, 453], "nf": [201, 277], "euclean": 201, "enotnam": 201, "xenix": 201, "enavail": 201, "eisnam": 201, "eremoteio": 201, "edquot": 201, "eqful": 201, "enotcap": [201, 202], "ecancel": 201, "eownerdead": 201, "enotrecover": 201, "recover": [201, 308, 390], "inappropri": [202, 319, 326, 403], "new_exc": 202, "original_exc": 202, "with_traceback": [202, 411], "3134": [202, 445], "someexcept": [202, 365, 445], "add_not": [202, 418, 448], "__notes__": [202, 358], "rescu": 202, "perror": 202, "environmenterror": [202, 425, 452], "abandon": [202, 347, 390, 451], "characters_written": 202, "475": [202, 214, 277, 310, 311, 315, 318, 344], "rework": [202, 438, 439, 440, 442, 444, 451, 455], "565": 202, "dubiou": [202, 376], "mygroup": [202, 321], "eg": [202, 232, 237, 277, 321, 402], "apport": 203, "sigaltstack": 203, "catastroph": [203, 451], "dump_traceback": [203, 454], "all_thread": 203, "print_tb": [203, 358, 454], "is_en": 203, "dump_traceback_lat": [203, 454], "cancel_dump_traceback_lat": 203, "watchdog": 203, "dup2": [203, 277, 315, 448, 454, 456], "0x00007fb899f39700": [203, 452], "486": [203, 452], "f_add_seal": 204, "f_get_seal": 204, "f_seal_": 204, "seal": [204, 451, 456], "memfd_creat": [204, 277, 457], "f_getpath": 204, "f_ofd_getlk": [204, 458], "f_ofd_setlk": [204, 458], "f_ofd_setlkw": [204, 458], "f_getpipe_sz": 204, "f_setpipe_sz": 204, "f_dup2fd": [204, 448], "f_dup2fd_cloexec": [204, 448], "fd_cloexec": [204, 448], "ficlon": 204, "ficlonerang": 204, "reflink": [204, 277], "btrf": [204, 277], "ocfs2": 204, "xf": [204, 276, 277, 415], "mutate_flag": 204, "simplif": 204, "getpgrp": [204, 277], "13341": 204, "tiocgpgrp": 204, "lock_un": 204, "lock_sh": 204, "lock_ex": 204, "lock_nb": 204, "seek_set": [204, 246, 265, 277, 320, 442, 446], "seek_cur": [204, 246, 265, 277, 320, 442, 446], "seek_end": [204, 246, 265, 277, 320, 442, 446], "svr4": 204, "f_setfl": 204, "lockdata": 204, "hhllhh": 204, "f_wrlck": 204, "f_setlkw": 204, "o_shlock": [204, 277, 442], "o_exlock": [204, 277, 442], "clear_cach": [205, 400, 453], "cmpfile": 205, "dir1": 205, "dir2": 205, "mtime": [205, 223, 238, 277, 337, 373, 457], "default_ignor": [205, 453], "pardir": [205, 277], "report_partial_closur": 205, "report_full_closur": 205, "left_list": 205, "right_list": 205, "left_onli": 205, "right_onli": 205, "common_dir": 205, "common_fil": 205, "common_funni": 205, "same_fil": 205, "diff_fil": 205, "funny_fil": 205, "mydircmp": 205, "print_diff_fil": 205, "dcmp": 205, "sub_dcmp": 205, "openhook": [207, 442], "hook_compress": [207, 447], "inplac": 207, "filelineno": 207, "isfirstlin": 207, "isstdin": 207, "nextfil": 207, "bak": 207, "fi": [207, 214], "hook_encod": [207, 455], "fnmatchcas": [209, 365], "normcas": [209, 278], "reobj": 209, "other_fract": 210, "limit_denomin": 210, "414213": 210, "1414213": 210, "125": [210, 249, 421, 424, 443], "7e": 210, "2476979795053773": [210, 451], "2251799813685248": [210, 451], "gcd": [210, 262, 454, 458], "515": [210, 325, 448], "supportsint": [210, 363, 448, 457], "is_integ": [210, 324], "flt": 210, "from_decim": [210, 451], "max_denomin": 210, "1415926535897932": 210, "4503599627370497": 210, "9007199254740992": 210, "__floor__": [210, 262, 366, 403], "greatest": [210, 262, 324], "__ceil__": [210, 262, 366, 403], "ceil": [210, 262, 273, 304, 324, 403, 443, 457], "__round__": [210, 214, 363, 366, 403, 445], "ndigit": [210, 214, 403, 419], "40g": 210, "1428571428571428571428571428571428571429": 210, "1_234_567": 210, "141593e": 210, "old_pric": 210, "new_pric": 210, "499": [210, 212, 230], "tower": [210, 323, 361, 443, 445], "959": 212, "2640": [212, 458], "230": [212, 451, 455], "retrlin": 212, "1176": 212, "1063": 212, "sr": 212, "226": [212, 230], "retrbinari": 212, "retr": [212, 287], "221": 212, "acct": 212, "source_address": [212, 231, 317, 318, 444, 451, 452], "ftp1": [212, 451], "proftpd": [212, 451], "154": [212, 270, 359, 441, 451], "cento": [212, 448, 451, 456], "fedora": [212, 331, 431, 435, 447, 451, 458], "4217": 212, "prot_p": 212, "check_hostnam": [212, 231, 237, 287, 317, 321, 372, 449, 455], "has_sni": [212, 231, 237, 287, 317, 321, 372], "keyfil": [212, 237, 257, 287, 317, 321, 437, 449, 455], "certfil": [212, 237, 287, 317, 321, 437, 449, 455], "pureftpd": 212, "nlst": [212, 452], "6jack": 212, "antilink": 212, "blogbench": 212, "bsdcam": 212, "clockspe": 212, "djbdn": 212, "jedi": 212, "eacceler": 212, "favicon": 212, "ico": 212, "francoton": 212, "fugu": 212, "libpuzzl": 212, "metalog": 212, "minidentd": 212, "udf": 212, "php": [212, 394, 437, 439], "jenkin": [212, 365], "skein": [212, 224], "webdav": [212, 230], "phpaudit": 212, "phpbench": 212, "pincast": 212, "ping": [212, 437, 438, 439, 442], "posto": 212, "public_kei": 212, "ftpd": 212, "qscan": 212, "qtc": 212, "shared": 212, "skycach": 212, "ucarp": 212, "error_repli": 212, "error_temp": 212, "error_perm": 212, "error_proto": [212, 287, 452], "set_debuglevel": [212, 231, 287, 317, 454], "getwelcom": [212, 287], "disclaim": [212, 377, 401], "voidcmd": 212, "blocksiz": [212, 231, 277, 337, 456], "transfercmd": 212, "set_pasv": [212, 438], "passiv": [212, 243, 436, 438], "storbinari": [212, 443, 444], "stor": 212, "storlin": [212, 443], "eprt": 212, "epsv": 212, "pasv": 212, "ntransfercmd": 212, "mlsd": [212, 452], "3659": 212, "fromnam": 212, "tonam": 212, "mkd": 212, "rmd": 212, "unilater": 212, "ssl_version": [212, 321, 449], "protocol_sslv23": [212, 321, 447], "auth": [212, 237, 257, 317, 321, 440, 454], "ccc": [212, 327, 353, 452], "plaintext": [212, 237, 452], "nat": [212, 318, 452], "prot_c": 212, "anext": [214, 447], "async_iter": 214, "0b11": 214, "0b1010": [214, 445], "0b1110": 214, "1110": 214, "pythonbreakpoint": [214, 331, 430, 456], "dont_inherit": [214, 453], "pycf_": 214, "inaccur": [214, 439, 441], "__initializing__": 214, "_clearcach": 214, "pack_into": [214, 327, 442], "unpack_from": [214, 327, 442], "perimet": 214, "season": 214, "summer": [214, 344, 442, 443], "complementari": [214, 262, 300, 444, 451], "floatvalu": 214, "digitpart": [214, 410], "floatnumb": [214, 405, 410], "003": [214, 403, 421, 430, 449], "1e6": 214, "0x2a": [214, 325], "__trunc__": [214, 262, 366, 403, 448, 450], "010": [214, 249, 340], "classinfo": 214, "mydata": [214, 343, 386, 427, 451], "process_block": 214, "keyfunc": [214, 249], "featureless": 214, "0o70": 214, "0o12": 214, "write_through": [214, 246, 452], "default_buffer_s": [214, 246, 328], "nnn": [214, 229, 372], "untransl": [214, 246], "somedir": 214, "o_rdonli": [214, 268, 269, 277], "spamspam": 214, "bufferedread": [214, 246, 337, 443, 444, 451], "bufferedwrit": [214, 246, 443, 451], "bufferedrandom": [214, 246, 443], "rawiobas": [214, 246, 443, 452, 454], "3j": [214, 273, 444], "inv_bas": 214, "forcibli": [214, 452, 453], "_x": [214, 247, 443, 455], "_voltag": 214, "displayhook": [214, 331, 425, 438], "675": [214, 363], "salari": [214, 324, 415], "argn": 214, "regular_funct": 214, "fsum": [214, 262, 323, 419, 443], "summat": [214, 262, 419, 449], "object_or_typ": 214, "type2": [214, 363], "spice": 214, "transpos": [214, 249, 417, 441], "fo": [214, 217, 439], "manifest": [214, 340, 444], "zip_longest": [214, 249, 445], "x2": [214, 405, 416, 447, 449], "attain": 214, "till": [214, 269, 290, 321, 458], "sau": 214, "_temp": 214, "pythoncaseok": [214, 430, 438, 458], "user_funct": 215, "evict": 215, "3628800": 215, "479001600": 215, "sequence_of_numb": [215, 457], "stdev": [215, 323, 448, 457], "count_vowel": 215, "vowel": 215, "aeiouaeiou": 215, "cache_paramet": 215, "cache_info": [215, 451], "currsiz": [215, 451], "cache_clear": [215, 451], "predictor": 215, "impur": 215, "get_pep": 215, "httperror": [215, 370, 372, 453], "290": 215, "308": [215, 230, 405], "320": [215, 365], "218": 215, "279": 215, "9991": 215, "cacheinfo": [215, 451], "fib": [215, 416, 425], "377": [215, 416, 424, 425], "610": [215, 416, 424, 425], "total_ord": [215, 403, 405, 444, 451, 453], "_is_valid_operand": 215, "lastnam": [215, 320, 451, 457], "firstnam": [215, 320, 451], "unrecognis": [215, 256, 452], "farg": 215, "fkeyword": 215, "newkeyword": 215, "basetwo": 215, "10010": 215, "partialmethod": [215, 324, 453, 457], "_aliv": 215, "set_stat": 215, "set_dead": 215, "initial_miss": 215, "strength": [215, 323, 448], "eh": [215, 448], "uniontyp": [215, 324, 362, 363, 448], "fun_num": 215, "615": [215, 400, 458], "0x1035a2840": 215, "0x103fe0000": 215, "dict_kei": [215, 444], "singledispatchmethod": [215, 457], "wrapper_assign": 215, "wrapper_upd": 215, "17482": 215, "my_decor": [215, 442], "debug_leak": 216, "debug_saveal": 216, "uncollect": [216, 451], "set_threshold": 216, "threshold0": 216, "threshold1": 216, "threshold2": 216, "sweep": [216, 442], "youngest": 216, "get_count": [216, 442], "count0": 216, "count1": 216, "count2": 216, "get_threshold": 216, "referr": 216, "lazaru": 216, "hole": [216, 277, 313, 338, 444, 447], "gc_ref": 216, "unfreez": [216, 456], "get_freeze_count": [216, 456], "debug_uncollect": [216, 451], "debug_stat": 216, "debug_collect": 216, "shortopt": 217, "longopt": 217, "frob": [217, 367], "getopterror": 217, "gnu_getopt": [217, 440], "intermix": [217, 456], "posixly_correct": 217, "cfoo": 217, "optlist": 217, "ho": 217, "getpasswarn": 218, "getus": [218, 237, 277, 287], "lname": 218, "getlogin": [218, 277], "i18n": [219, 325, 437, 444], "l10n": [219, 437], "monolingu": 219, "bindtextdomain": [219, 254], "localedir": 219, "lc_messag": [219, 254], "lc_all": [219, 254, 340, 427, 430, 448, 450, 456], "textdomain": [219, 254], "dgettext": [219, 254], "ngettext": 219, "dngettext": 219, "pgettext": [219, 457], "dpgettext": 219, "npgettext": 219, "dnpgettext": 219, "dcgettext": [219, 254], "unimpl": [219, 232], "myapplic": 219, "class_": 219, "lgettext": [219, 448, 457], "lngettext": [219, 448, 457], "_info": 219, "_fallback": 219, "add_fallback": 219, "_pars": 219, "albeit": [219, 363, 416], "gnome": [219, 323, 441, 452], "jame": [219, 398, 401, 437, 440, 442, 444, 448, 449, 456], "henstridg": [219, 437, 444], "mylog": [219, 446, 451], "xgettext": 219, "fran\u00e7oi": [219, 452, 453, 454], "pinard": 219, "xpot": 219, "pygettext": [219, 454], "msgfmt": [219, 444], "lang1": 219, "lang2": 219, "lang3": 219, "language1": 219, "mollusk": 219, "albatross": 219, "rat": 219, "penguin": [219, 402], "n_": 219, "markthisstringfortransl": 219, "funk": [219, 437], "juan": [219, 444], "ib\u00e1\u00f1ez": 219, "palomar": 219, "barri": [219, 437, 438, 439, 441, 442, 443, 449, 451, 452, 453, 454, 455, 456, 457], "warsaw": [219, 437, 438, 439, 441, 442, 443, 449, 451, 452, 453, 454, 456, 457], "gustavo": [219, 439, 440, 441, 442], "niemey": [219, 439, 440, 441, 442], "redhat": 219, "concert": [220, 447, 451], "subshel": [220, 277], "expandvar": [220, 278, 328, 443], "include_hidden": 220, "altsep": [220, 236, 277, 279, 448], "inordin": [220, 279], "iglob": [220, 447, 454, 455], "unc": [220, 277, 278, 279, 397], "sharepoint": [220, 278, 397], "quo": 220, "vadi": 220, "card": [220, 300, 301, 411], "topologicalsort": [221, 458], "topolog": [221, 440, 458], "node": [221, 224, 225, 229, 247, 277, 278, 279, 285, 318, 321, 331, 353, 354, 374, 386, 387, 388, 390, 427, 431, 437, 440, 442, 443, 444, 447, 448, 451, 455, 456, 457, 458], "vertex": [221, 361], "acycl": 221, "get_readi": 221, "static_ord": 221, "topological_sort": 221, "task_queu": [221, 269], "finalized_tasks_queu": 221, "cycleerror": 221, "node_group": 221, "ts2": 221, "gr_name": [222, 440], "gr_passwd": 222, "gr_gid": [222, 328, 440], "gr_mem": 222, "yp": 222, "getgrnam": [222, 328, 440], "getgrgid": [222, 455], "getgral": 222, "gunzip": 223, "badgzipfil": [223, 457], "fileobj": [223, 224, 311, 315, 337, 452], "discern": 223, "slowest": [223, 340, 361, 365, 399, 449], "unseek": [223, 377, 397, 451, 453, 454], "wbit": [223, 399], "file_cont": [223, 258], "s_in": 223, "s_out": 223, "fip": [224, 321], "sha1": [224, 431, 442, 444, 449, 451], "sha224": [224, 442, 444, 451], "sha256": [224, 239, 318, 321, 431, 442, 444, 451], "sha384": [224, 321, 442, 444, 451], "sha512": [224, 431, 442, 444, 451], "sha": [224, 374, 442, 443, 447, 451, 452, 455], "rsa": [224, 321, 447], "md5": [224, 226, 237, 317, 320, 321, 374, 431, 442, 443, 444, 445, 449, 451, 453, 457, 458], "1321": 224, "adler32": [224, 399], "hexdigest": [224, 226, 320, 442], "sha3_224": [224, 455], "sha3_256": [224, 455], "sha3_384": [224, 455], "sha3_512": [224, 455], "shake_128": [224, 455], "shake_256": [224, 455], "blake2b": [224, 448, 455, 458], "algorithms_guarante": [224, 444, 451], "openssl": [224, 226, 321, 340, 431, 437, 442, 443, 444, 447, 448, 449, 451, 453, 454, 455, 456, 458], "algorithms_avail": [224, 444, 451], "seealso": 224, "sha3": [224, 431, 448, 449, 458], "keccak": [224, 448, 455], "usedforsecur": [224, 309], "insecur": [224, 272, 309, 312, 320, 321, 421, 442, 449, 451], "sha2": [224, 321, 449, 458], "hacl": [224, 449], "spammish": 224, "x03": [224, 270, 318, 324, 327, 374], "x1e": [224, 324], "xdd": 224, "ae": [224, 318, 321, 440], "x15": [224, 327], "x93": 224, "xc5": 224, "xfe": 224, "x00o": 224, "xa5u": 224, "xfd": 224, "xf7": 224, "xbcn": 224, "x84": [224, 443], "xa6": 224, "xaf": [224, 443], "x0c": [224, 324, 374], "x95": 224, "x0fk": 224, "x06": [224, 374], "031edd7d41651593c5fe5c006fa5752b37fddff7bc4e843aa6af0c950f4b9406": 224, "condens": [224, 256, 442], "upstream": [224, 320, 457], "digest_s": [224, 226, 453], "block_siz": [224, 226, 453], "incept": 224, "length_in_bit": 224, "44709d6fcb83d92a76dcb0b668c98e1b1d3dafe7": 224, "file_digest": [224, 448], "socketio": 224, "mac1": 224, "digestmod": [224, 226, 453, 457], "mac2": 224, "stretch": [224, 236, 353, 361, 385, 456], "brute": [224, 308], "tunabl": [224, 277, 451], "salt": [224, 308, 403, 430, 451, 452], "pbkdf2_hmac": [224, 444, 447, 449, 453], "hash_nam": 224, "dklen": 224, "pkc": [224, 321, 453], "pseudorandom": [224, 300, 321], "nist": [224, 440], "800": [224, 258, 442, 444, 447, 451, 455], "132": 224, "stackexchang": 224, "pbkdf2": [224, 447], "our_app_it": 224, "500_000": [224, 324], "dk": 224, "15530bba69924174860db778f2c6f8104d3aaf9d26241840c8c4a641c8d000a9": 224, "scrypt": [224, 455], "maxmem": 224, "7914": 224, "mib": [224, 258, 269, 314, 448, 457], "7693": 224, "fanout": 224, "leaf_siz": 224, "node_offset": 224, "node_depth": 224, "inner_s": 224, "last_nod": 224, "salt_siz": 224, "person_s": 224, "max_key_s": 224, "max_digest_s": 224, "6ff843ba685842aa82031d3f53c48b66326df7639a63d128974c5c14f31a0f33343a8c65551134ed1ae0f2b0dd2bb495dc81039e3eeb0aa1bb0388bbeac29183": 224, "d24f26cf8de66472d58d4e1b1774b4c9158b1f4c": 224, "6fa1d8fcfd719046d762": 224, "eb6ec15daf9546254f0809": 224, "1bf21a98c78a1c376ae9": 224, "567004bf96e4a25773ebf4": 224, "indifferenti": 224, "3d363ff7401e02026f4a4687d4863c": 224, "symmetr": [224, 270, 300, 321, 324, 403, 405, 417, 437, 439, 440, 441, 452], "tamper": [224, 282], "compare_digest": [224, 226, 308, 444, 452], "secret_kei": 224, "pseudorandomli": 224, "auth_siz": 224, "good_sig": 224, "alic": 224, "43b3c982cf697e0c5ab22172d1ca7421": 224, "bob": [224, 269, 363, 434, 442, 443, 444, 446, 452], "0102030405060708090a0b0c0d0e0f00": 224, "e3c8102868d28b5ff85fc35dda07329970d1a01e273c37481326fe0c861c8142": 224, "signer": 224, "likelihood": [224, 323, 457], "106": [224, 249, 323, 436, 439], "salt1": 224, "h1": [224, 229, 231, 256, 395], "salt2": 224, "h2": [224, 231, 256, 386], "serious": 224, "summarili": 224, "files_hash_person": 224, "block_hash_person": 224, "20d9cd024d4fb086aae819a1432dd2466de12947831b75c5a30cf2676095d3b4": 224, "cf68fb5761b9c44e7878bfb2c4c9aea52264a80b75005e65619778de59f383a3": 224, "orig_kei": 224, "rm5epjai72qck3rgbpw3vpnfzy5ozothi": 224, "khy6h21km": 224, "enc_kei": 224, "kencrypt": 224, "mac_kei": 224, "kmac": 224, "rbpb15": 224, "z9t": 224, "agffno5wuhb77vbri6f9iv2qixu7whw": 224, "g9gthfe1yluxy1zwplyk1": 224, "nwfu0wseb0krcjhdep": 224, "h00": 224, "h01": 224, "h10": 224, "3ad2a9b37c6070e374c7a8c508fe20ca86b6ed54e286e93a0318e95e881db5aa": 224, "jean": [224, 401, 443, 444, 452], "philipp": [224, 401, 442, 447], "aumasson": [224, 401], "samuel": [224, 318, 401, 440, 442, 455, 458], "neve": [224, 401, 455], "zooko": [224, 401], "wilcox": 224, "hearn": 224, "christian": [224, 401, 437, 441, 443, 447, 448, 449, 450, 452, 453, 455, 456, 457, 458], "winnerlein": 224, "finalist": 224, "henzen": 224, "willi": 224, "meier": 224, "raphael": 224, "phan": 224, "chacha": 224, "daniel": [224, 440, 443, 444, 447, 448, 451, 453, 454, 455], "bernstein": [224, 401, 443], "pyblake2": 224, "dmitri": [224, 441, 454, 455], "chestnykh": [224, 455], "heim": [224, 401, 443, 447, 448, 449, 450, 452, 453, 455, 456, 457, 458], "law": [224, 323, 344, 401, 442], "neighbor": [224, 388, 439, 440], "warranti": [224, 401, 457], "cc0": 224, "creativecommon": 224, "publicdomain": 224, "alexandr": [224, 443, 444, 446, 451, 453], "sokolovskii": 224, "nvlpub": 224, "gov": [224, 232, 440], "nistpub": 224, "csrc": 224, "cryptographic_hash_funct": 224, "rfc8018": 224, "cryptographi": [224, 226, 308, 318], "nistspecialpublication800": 224, "heapifi": [225, 300, 427], "heappush": [225, 427, 440, 443], "heappop": [225, 249, 427, 440, 443], "heappushpop": [225, 443], "heapreplac": [225, 300], "heapsort": 225, "alongsid": [225, 333, 396, 401, 410, 436], "tie": 225, "breaker": [225, 449], "prioritizeditem": [225, 298], "pq": [225, 301], "entry_find": 225, "add_task": 225, "remove_task": 225, "pop_task": 225, "tournament": 225, "sport": 225, "winner": [225, 300], "oppon": 225, "loser": 225, "percol": 225, "speedi": 225, "terribl": 225, "cleverli": 225, "fuzzili": 225, "melt": 225, "nowadai": [225, 337], "tape": [225, 337], "rewind": [225, 246, 377], "spectacular": 225, "2104": [226, 439], "verif": [226, 256, 320, 321, 324, 371, 451], "digest_con": 226, "crypto_memcmp": 226, "x3e": [227, 229], "lenient": 227, "html5": [228, 452, 453], "name2codepoint": [228, 229], "codepoint2nam": 228, "entitydef": 228, "html4": [228, 229], "whatwg": [228, 371], "multipag": 228, "convert_charref": [229, 453, 454], "myhtmlpars": 229, "handle_starttag": 229, "handle_endtag": 229, "handle_data": 229, "insofar": [229, 259, 411], "unprocess": 229, "getpo": 229, "get_starttag_text": 229, "handle_startendtag": 229, "handle_entityref": 229, "handle_charref": 229, "handle_com": 229, "condcom": 229, "ie9": 229, "handle_decl": 229, "decl": 229, "handle_pi": 229, "sgml": [229, 260, 392, 443], "unknown_decl": 229, "ent": 229, "startswith": [229, 277, 324, 331, 365, 375, 397, 426, 437, 440, 442, 443, 446, 452, 454, 457], "buff": 229, "er": 229, "pan": 229, "soup": 229, "httpstatu": [230, 454, 458], "switching_protocol": 230, "7231": 230, "2518": 230, "103": [230, 249, 323, 324, 359, 436, 444, 451, 458], "early_hint": [230, 458], "8297": 230, "non_authoritative_inform": 230, "no_cont": 230, "reset_cont": 230, "partial_cont": 230, "7233": 230, "207": [230, 290], "multi_statu": 230, "4918": 230, "208": 230, "already_report": 230, "5842": 230, "im_us": 230, "3229": 230, "multiple_choic": 230, "moved_perman": [230, 441], "see_oth": 230, "not_modifi": 230, "7232": [230, 444], "use_proxi": 230, "temporary_redirect": 230, "permanent_redirect": 230, "7238": 230, "bad_request": 230, "7235": 230, "payment_requir": 230, "not_found": [230, 231], "method_not_allow": 230, "not_accept": 230, "proxy_authentication_requir": 230, "request_timeout": 230, "length_requir": 230, "precondition_fail": 230, "request_entity_too_larg": 230, "request_uri_too_long": 230, "unsupported_media_typ": 230, "requested_range_not_satisfi": 230, "expectation_fail": 230, "418": [230, 416, 447, 452, 458], "im_a_teapot": [230, 458], "htcpcp": 230, "2324": 230, "421": [230, 331], "misdirected_request": 230, "7540": 230, "422": 230, "unprocessable_ent": 230, "423": 230, "424": [230, 453], "failed_depend": 230, "too_earli": [230, 458], "8470": 230, "upgrade_requir": 230, "428": [230, 279, 453], "precondition_requir": 230, "6585": 230, "429": [230, 453], "too_many_request": 230, "431": 230, "request_header_fields_too_larg": 230, "unavailable_for_legal_reason": 230, "obstacl": 230, "7725": 230, "internal_server_error": 230, "not_impl": 230, "bad_gatewai": 230, "service_unavail": 230, "gateway_timeout": 230, "http_version_not_support": 230, "506": [230, 308, 455], "variant_also_negoti": 230, "negoti": [230, 321, 443, 452], "2295": 230, "507": 230, "insufficient_storag": 230, "508": 230, "loop_detect": 230, "510": 230, "not_extend": 230, "2774": 230, "511": [230, 397, 455], "network_authentication_requir": 230, "is_inform": 230, "199": 230, "is_success": 230, "is_redirect": 230, "399": 230, "is_client_error": 230, "is_server_error": 230, "httpmethod": 230, "5789": 230, "h3": 231, "h4": 231, "httpsconnect": [231, 372, 443, 444, 451, 453, 456], "unverifi": [231, 232, 372], "_create_unverified_context": [231, 444, 453], "post_handshake_auth": [231, 321, 457], "cert_fil": [231, 372, 449], "alpn": [231, 321, 372, 447, 450, 454], "set_alpn_protocol": [231, 321, 372, 454], "key_fil": [231, 372, 449], "debuglevel": [231, 317, 372, 454], "parse_head": [231, 234, 450], "httpexcept": 231, "notconnect": 231, "invalidurl": 231, "unknownprotocol": 231, "unknowntransferencod": 231, "unimplementedfilemod": 231, "incompleteread": 231, "improperconnectionst": 231, "cannotsendrequest": 231, "cannotsendhead": 231, "responsenotreadi": 231, "badstatuslin": 231, "linetoolong": 231, "remotedisconnect": [231, 454], "getrespons": [231, 454], "http_port": 231, "https_port": 231, "encode_chunk": 231, "reconnect": [231, 454], "set_tunnel": [231, 394, 451], "tunnel": [231, 451], "get_proxy_response_head": 231, "putrequest": 231, "skip_host": 231, "skip_accept_encod": 231, "puthead": 231, "endhead": [231, 455], "message_bodi": 231, "7230": [231, 372], "amt": 231, "gethead": 231, "geturl": [231, 371, 372], "getcod": [231, 372], "data1": [231, 367], "data2": [231, 367], "12524": 231, "issue12524": 231, "filecont": 231, "2965": [232, 372], "2109": [232, 233], "cookie2": 232, "loaderror": 232, "delayload": 232, "blocked_domain": 232, "allowed_domain": 232, "rfc2965": 232, "rfc2109_as_netscap": 232, "hide_cookie2": 232, "strict_domain": 232, "strict_rfc2965_unverifi": 232, "strict_ns_unverifi": 232, "strict_ns_domain": 232, "domainliber": 232, "strict_ns_set_initial_dollar": 232, "strict_ns_set_path": 232, "secure_protocol": 232, "wss": [232, 371], "websocket": [232, 245], "downgrad": 232, "make_cooki": 232, "curl": [232, 435, 436], "cookie_spec": 232, "kristol": 232, "errata": [232, 250], "2964": 232, "add_cookie_head": 232, "get_full_url": [232, 372], "get_head": [232, 363, 372], "header_item": [232, 372], "add_unredirected_head": [232, 372], "origin_req_host": [232, 372], "get_origin_req_host": [232, 372, 453], "extract_cooki": 232, "set_ok": 232, "approv": [232, 289, 372, 436, 437, 444], "set_polici": 232, "set_cookie_if_ok": 232, "set_cooki": 232, "clear_session_cooki": 232, "ignore_discard": 232, "ignore_expir": 232, "wipe": 232, "mozillacookiejar": 232, "lynx": [232, 379, 441], "clobber": [232, 276], "lwpcookiejar": 232, "libwww": [232, 441], "cookie3": 232, "return_ok": 232, "domain_return_ok": 232, "path_return_ok": 232, "mycookiepolici": 232, "i_dont_want_to_store_this_cooki": 232, "tighten": [232, 437, 444, 451], "loos": [232, 343], "benign": 232, "blocklist": 232, "allowlist": [232, 371], "set_blocked_domain": 232, "coyot": 232, "193": [232, 361, 445], "is_block": 232, "set_allowed_domain": 232, "is_not_allow": 232, "nz": 232, "domainstrictnodot": 232, "domainstrictnondomain": 232, "domainrfc2965match": 232, "domainstrict": 232, "acm": [232, 300], "rocket_launch": 232, "expiri": 232, "is_expir": 232, "comment_url": 232, "rfc2109": 232, "port_specifi": 232, "domain_specifi": 232, "domain_initial_dot": 232, "has_nonstandard_attr": 232, "get_nonstandard_attr": 232, "set_nonstandard_attr": 232, "cj": 232, "httpcookieprocessor": [232, 441], "serializ": [233, 250], "2068": [233, 344], "ascii_lett": [233, 308, 325, 439, 445], "cookieerror": 233, "basecooki": 233, "simplecooki": 233, "value_decod": 233, "value_encod": 233, "real_valu": 233, "coded_valu": [233, 454, 456], "js_output": 233, "rawdata": 233, "http_cooki": 233, "httponli": [233, 443], "samesit": 233, "csrf": 233, "lax": [233, 442], "isreservedkei": 233, "outputstr": 233, "fig": 233, "newton": [233, 301], "wafer": 233, "rocki": [233, 443], "chip": [233, 444], "ahoi": 233, "vienna": 233, "finger": [233, 445], "keebler": 233, "everybodi": 233, "fudg": 233, "012": [233, 249, 324, 438], "oreo": 233, "doublestuff": 233, "twix": 233, "httpserver": [234, 315, 383], "server_class": [234, 383], "handler_class": [234, 383], "server_address": [234, 319, 383], "8000": [234, 315, 383, 394, 395, 442, 457], "httpd": [234, 263, 315, 383, 442], "requesthandlerclass": [234, 319, 383], "server_nam": [234, 383, 395], "server_port": [234, 383], "threadinghttpserv": [234, 456], "threadingmixin": [234, 319, 456], "client_address": [234, 319, 383], "do_spam": 234, "close_connect": 234, "handle_one_request": 234, "requestlin": 234, "3986": [234, 371, 444, 454, 456], "hier": 234, "request_vers": 234, "messageclass": 234, "rfile": [234, 319], "wfile": [234, 319, 455], "server_vers": 234, "basehttp": 234, "sys_vers": 234, "version_str": 234, "error_message_format": [234, 453], "send_error": [234, 453], "error_content_typ": 234, "protocol_vers": [234, 237], "send_head": 234, "send_response_onli": 234, "handle_expect_100": 234, "send_respons": 234, "date_time_str": 234, "end_head": [234, 452], "flush_head": [234, 452], "log_request": 234, "log_error": 234, "log_messag": 234, "1994": [234, 401], "log_date_time_str": 234, "address_str": 234, "simplehttprequesthandl": [234, 315, 456], "do_get": 234, "simplehttp": 234, "extensions_map": 234, "list_directori": 234, "webserv": 234, "index_pag": 234, "9000": [234, 363, 405], "cgihttprequesthandl": [234, 450], "empt": 234, "cgi_directori": 234, "htbin": 234, "do_post": 234, "decad": 234, "unmaintain": [234, 337, 450, 451, 453, 455], "scrub": 234, "nefari": 234, "smart": [236, 439], "namag": 236, "aqua": [236, 434], "unsav": 236, "undon": [236, 361, 366, 367], "clipboard": [236, 347, 455, 456, 457], "scrollabl": 236, "reformat": [236, 259, 276, 440], "tabifi": 236, "untabifi": 236, "toggl": [236, 318, 353, 424, 457, 458], "chitespac": 236, "autosav": 236, "pane": [236, 353], "zoom": 236, "momentarili": [236, 259], "deiconifi": 236, "idlerc": 236, "squeez": [236, 455, 456, 457], "leftarrow": 236, "rightarrow": 236, "pageup": 236, "pagedown": 236, "popup": [236, 340], "100000000": 236, "uncolor": 236, "idlestartup": 236, "pythonstartup": [236, 302, 316, 331, 413, 430, 453], "masquerad": [236, 366, 435], "tcpconnect": 236, "irv": [236, 417], "6543": 236, "tcplisten": 236, "antiviru": [236, 340], "taught": [236, 323], "admin": 236, "zombi": [236, 269, 319, 340, 442, 452], "pythonw": [236, 269, 316, 331, 434, 436, 439, 455, 456], "dismiss": [236, 361], "glitch": 236, "active_count": [236, 269, 343, 443, 447, 450], "__stdin__": [236, 331, 425], "__stdout__": [236, 314, 331, 425], "__stderr__": [236, 331, 340, 425], "pyw": [236, 413, 436, 439], "setrecursionlimit": [236, 282, 331, 425, 437, 448, 449], "plane": [236, 262, 361, 447], "x02": [236, 247, 270, 318, 327, 374], "x07": [236, 270, 374], "x08c": 236, "loopback": [236, 247, 340], "transient": [236, 256, 320], "f5": [236, 437], "mousewheel": 236, "scrollbar": [236, 347, 352, 353, 361], "toc": 236, "dock": 236, "zzdummi": 236, "434": 236, "imap4_ssl": [237, 452, 458], "imap4_stream": [237, 458], "imap4rev1": 237, "1730": 237, "imap4_port": 237, "logout": [237, 454, 457], "noop": [237, 269, 287, 317], "d25if65hy903weo": 237, "imap4_ssl_port": 237, "ssl_context": [237, 449], "993": 237, "internaldate2tupl": 237, "datestr": 237, "int2ap": 237, "parseflag": 237, "flagstr": 237, "time2internald": 237, "date_tim": [237, 397], "expung": 237, "uw": 237, "message_set": 237, "authobject": [237, 317], "checkpoint": [237, 331], "new_mailbox": 237, "deleteacl": [237, 441], "acl": [237, 314], "5161": [237, 454], "6855": [237, 454], "message_part": 237, "getacl": [237, 439], "cyru": 237, "getannot": 237, "getquota": 237, "rfc2087": 237, "getquotaroot": 237, "folder": [237, 259, 375, 434, 436], "login_cram_md5": 237, "cram": [237, 317], "lsub": 237, "myright": [237, 441], "2342": [237, 439], "message_num": 237, "proxyauth": 237, "authoris": 237, "oldmailbox": 237, "newmailbox": 237, "criterion": [237, 282, 403, 437], "msgnum": 237, "ldj": 237, "inbox": [237, 259], "setacl": [237, 439], "setannot": 237, "setquota": 237, "sort_criteria": 237, "search_criterion": 237, "flag_list": 237, "3501": 237, "gmail": 237, "threading_algorithm": 237, "unsubscrib": 237, "unselect": [237, 458], "xatom": 237, "utf8_en": [237, 454], "comprehend": 238, "235": 238, "488": [238, 293, 340, 430], "3120": [238, 410, 445], "anchor": [238, 240, 279, 321, 333, 347, 353, 444, 450, 453], "subpkg": 238, "invalidate_cach": [238, 398, 447, 452, 456], "rebound": [238, 404, 411, 415], "redefinit": [238, 403], "resourceload": [238, 456], "inspectload": [238, 453, 454], "executionload": 238, "fileload": [238, 452, 453], "sourceload": [238, 452, 453], "find_spec": [238, 284, 331, 398, 407, 447, 449, 450, 453, 454, 456], "spec_from_load": [238, 447], "pathfind": [238, 407, 447, 448, 453, 456], "get_resource_read": [238, 240, 241, 456], "resourceread": [238, 240, 241, 449, 450, 456], "get_data": [238, 284, 372, 398, 443, 453], "get_sourc": [238, 253, 398, 453], "source_to_cod": [238, 453, 454], "sourceless": [238, 452, 454], "path_stat": [238, 452], "path_mtim": [238, 452], "set_data": 238, "traversableresourc": [238, 241, 449, 450], "artifact": [238, 240, 241, 452], "correl": [238, 241, 323, 447, 448, 449], "open_resourc": [238, 241], "resource_path": [238, 241], "is_resourc": [238, 241, 448, 450], "priori": [238, 241], "as_fil": [238, 240, 241, 449], "iterdir": [238, 241, 279, 397], "is_dir": [238, 241, 277, 279, 397, 450, 455, 457], "is_fil": [238, 241, 277, 279, 397, 450, 454, 457], "joinpath": [238, 241, 279, 397], "read_byt": [238, 241, 265, 279, 397, 454], "read_text": [238, 239, 240, 241, 246, 279, 397, 448, 450, 454], "source_suffix": [238, 449], "debug_bytecode_suffix": 238, "bytecode_suffix": [238, 449], "optimized_bytecode_suffix": 238, "extension_suffix": [238, 449], "all_suffix": [238, 243], "getmodulenam": [238, 243, 455], "builtinimport": [238, 269, 447, 448, 455], "allevi": [238, 437], "frozenimport": [238, 447, 448, 453], "windowsregistryfind": [238, 436, 447, 448, 455], "filefind": [238, 284, 447, 448, 452], "loader_detail": 238, "sourcelessfileload": [238, 452, 455], "extensionfileload": [238, 452, 453, 455], "namespaceload": [238, 453], "path_find": 238, "my_namespac": 238, "loader_st": 238, "submodule_search_loc": [238, 407], "has_loc": [238, 407], "magic_numb": [238, 449, 453], "cache_from_sourc": [238, 449, 450, 451, 453, 454, 455], "debug_overrid": [238, 450, 454], "get_tag": [238, 449, 451], "decode_sourc": [238, 453], "source_byt": 238, "resolve_nam": [238, 284, 458], "module_from_spec": [238, 362, 449, 454], "spec_from_file_loc": [238, 449, 455], "source_hash": [238, 456], "_incompatible_extension_module_restrict": 238, "disable_check": 238, "ly": [238, 257, 301, 421], "lazyload": [238, 454, 455], "lazy_load": 238, "file_path": 238, "lazy_import": 238, "lazy_typ": 238, "spammetapathfind": 238, "spampathentryfind": 238, "absolute_nam": 238, "parent_nam": 238, "child_nam": 238, "rpartit": [238, 324, 442, 444, 451], "parent_modul": 238, "pkg_resourc": [239, 240, 449], "discover": [239, 294, 436, 453], "dist": [239, 258, 262, 279, 361, 442, 451, 454, 457], "package_distribut": 239, "importlib_metadata": [239, 447, 458], "entrypoint": [239, 320, 447, 449, 450], "console_script": 239, "entry_point": 239, "ep": 239, "setup_keyword": [239, 440], "egg_info": 239, "0x103528488": 239, "entry_points_select": 239, "wheel_metadata": 239, "packagemetadata": 239, "566": 239, "requires_python": [239, 289], "quickest": [239, 423], "packagepath": [239, 457], "purepath": [239, 277, 279, 447, 448, 449, 450, 458], "859": 239, "_hook": 239, "pathdistribut": 239, "0x101e0cef0": 239, "filehash": 239, "bykw5omccfazvcoyqwkkkemovymafor34mmkbx8r1ni": 239, "text_typ": 239, "posixpath": [239, 278, 279], "gustav": 239, "always_iter": 239, "pytest": [239, 365], "cov": 239, "packages_distribut": [239, 447], "pyyaml": [239, 444, 446], "jaraco": 239, "find_distribut": 239, "distributionfind": 239, "pycach": [240, 331], "importlib_resourc": [240, 456, 458], "getmemb": [243, 337, 454], "set_coroutine_origin_tracking_depth": [243, 331, 425, 456], "__code__": [243, 324, 403, 445, 457], "__defaults__": [243, 403, 445], "__kwdefaults__": [243, 403, 453], "tb_frame": [243, 362, 403], "tb_lasti": [243, 362, 403], "tb_lineno": [243, 358, 362, 403], "tb_next": [243, 358, 362, 403, 456], "f_back": [243, 358, 403, 448], "f_code": [243, 403, 440, 448], "f_lineno": [243, 403, 440, 447, 448, 455], "f_trace": [243, 331, 403, 448], "co_flag": [243, 403], "bitmap": [243, 310, 347, 353], "co_": 243, "co_kwonlyargcount": [243, 403], "co_nloc": [243, 403], "co_stacks": [243, 403], "gi_fram": [243, 442], "gi_run": 243, "gi_cod": [243, 443, 454], "gi_yieldfrom": [243, 454], "cr_await": 243, "cr_frame": 243, "cr_run": 243, "cr_code": 243, "cr_origin": [243, 331], "getmembers_stat": [243, 448], "ismodul": 243, "isclass": [243, 403], "ismethod": 243, "isfunct": 243, "isgeneratorfunct": [243, 443], "isgener": [243, 443], "iscoroutinefunct": [243, 366, 449, 454], "markcoroutinefunct": [243, 449], "gen_coro": 243, "isasyncgenfunct": 243, "agen": [243, 405], "isasyncgen": 243, "istraceback": 243, "isfram": 243, "iscod": 243, "isbuiltin": 243, "ismethodwrapp": [243, 448], "methodwrappertyp": [243, 362, 448, 456], "isroutin": 243, "isabstract": [243, 443], "ismethoddescriptor": 243, "isdatadescriptor": 243, "isgetsetdescriptor": 243, "ismemberdescriptor": 243, "getdoc": [243, 403, 454, 457], "getcom": [243, 295], "getfil": 243, "getmodul": 243, "getsourcefil": 243, "getsourcelin": 243, "getsourc": 243, "follow_wrap": [243, 454], "eval_str": 243, "stringiz": [243, 447], "return_annot": 243, "boundargu": [243, 452, 454, 458], "bind_parti": 243, "omiss": [243, 296, 318], "new_sig": 243, "anno": 243, "from_cal": [243, 447, 448, 454], "globaln": [243, 363], "localn": [243, 363], "mysignatur": 243, "implicit0": [243, 455], "keyword_onli": 243, "positional_onli": 243, "var_posit": 243, "var_keyword": 243, "apply_default": [243, 454], "getclasstre": 243, "getfullargspec": [243, 295, 448, 453, 454, 455], "fullargspec": 243, "varkw": 243, "kwonlydefault": 243, "getargspec": [243, 448, 453, 454, 455], "getargvalu": [243, 454], "arginfo": 243, "formatargvalu": [243, 454], "formatarg": 243, "formatvararg": 243, "formatvarkw": 243, "formatvalu": 243, "getmro": 243, "getcallarg": [243, 444, 454], "getclosurevar": [243, 452], "closurevar": 243, "__signature__": [243, 453], "conting": 243, "frameinfo": [243, 448], "code_context": 243, "lifespan": 243, "handle_stackframe_without_leak": 243, "currentfram": [243, 448], "getframeinfo": [243, 448], "getouterfram": [243, 448, 454], "getinnerfram": [243, 448, 454], "getattr_stat": [243, 363, 449, 451], "_foo": 243, "slot_descriptor": 243, "getset_descriptor": 243, "wrapper_descriptor": [243, 441], "descriptor_typ": 243, "getgeneratorst": [243, 451], "gen_creat": [243, 451], "gen_run": 243, "gen_suspend": [243, 451], "gen_clos": [243, 451], "getcoroutinest": [243, 454], "coro_cr": 243, "coro_run": 243, "coro_suspend": 243, "coro_clos": 243, "getasyncgenst": [243, 449], "ag_run": [243, 458], "ag_fram": 243, "agen_cr": 243, "agen_run": 243, "agen_suspend": 243, "agen_clos": 243, "getgeneratorloc": [243, 452], "getcoroutineloc": [243, 454], "getasyncgenloc": [243, 449], "co_optim": 243, "co_newloc": 243, "co_vararg": 243, "co_varkeyword": 243, "co_nest": 243, "co_gener": 243, "co_coroutin": [243, 457], "co_async_gener": 243, "bufferflag": [243, 403, 449], "c_contigu": [243, 324], "f_contigu": [243, 324], "any_contigu": 243, "contig_ro": 243, "strided_ro": 243, "records_ro": 243, "full_ro": 243, "bore": [245, 416, 444], "novel": [245, 270, 439, 440, 442], "enjoi": [245, 363, 388, 449], "glibc": [245, 247, 277, 304, 448, 453, 457, 458], "sandbox": [245, 306, 331], "sdk": [245, 431, 458], "wasm": [245, 431], "nodej": 245, "wasmtim": 245, "pyodid": [245, 448], "pyscript": 245, "xmlhttprequest": 245, "snapshot": [245, 322, 453], "markdown": [246, 447], "md": 246, "long_descript": 246, "686": [246, 277], "597": [246, 447], "pythonwarndefaultencod": [246, 430, 447], "text_encod": 246, "blksize": [246, 383], "stacklevel": [246, 255, 376, 442], "unsupportedoper": [246, 279, 450], "unoptim": [246, 454], "bufferedrwpair": [246, 443], "readal": [246, 447, 453], "readinto1": [246, 454], "seek_": 246, "seek_hol": [246, 277, 452], "seek_data": [246, 277, 452], "immin": 246, "latenc": [246, 257, 277, 416, 444, 447, 455], "initial_byt": 246, "getbuff": [246, 451], "ab56ef": 246, "buffer_s": [246, 296, 443], "line_buff": 246, "nsecond": [246, 424], "incrementalnewlinedecod": 246, "reconstruct": [246, 282, 289, 355, 383, 419, 421], "reentrant": [246, 298, 343, 453], "subnet": [247, 452, 454], "downsid": [247, 436, 452, 456], "3232235521": [247, 325], "xc0": [247, 439], "xa8": 247, "max_prefixlen": 247, "reverse_point": [247, 454], "arpa": [247, 454], "ip6": [247, 454], "is_multicast": 247, "multicast": [247, 318, 340, 374], "3171": 247, "2373": 247, "is_priv": 247, "is_glob": [247, 330, 453], "is_unspecifi": 247, "5735": 247, "is_reserv": [247, 279], "is_loopback": 247, "3330": 247, "is_link_loc": 247, "3927": 247, "0b11000000101010000000000000000001": 247, "2001_0db8_0000_0000_0000_0000_0000_1000": 247, "_n": 247, "0x2001_0db8_0000_0000_0000_0000_0000_1000": 247, "longhand": 247, "4291": 247, "0abc": 247, "0007": 247, "0def": 247, "scope_id": [247, 318, 458], "4007": 247, "fe80": 247, "ff02": 247, "5678": [247, 374], "is_site_loc": 247, "3879": 247, "4193": 247, "ipv4_map": 247, "sixtofour": 247, "6to4": 247, "3056": 247, "teredo": 247, "4380": 247, "nbit": 247, "ff00": 247, "cisco": 247, "network_address": 247, "broadcast_address": 247, "with_prefixlen": 247, "with_netmask": 247, "with_hostmask": 247, "prefixlen": 247, "wholli": [247, 388], "address_exclud": 247, "n1": 247, "n2": 247, "prefixlen_diff": 247, "new_prefix": 247, "supernet": [247, 454], "subnet_of": [247, 456], "supernet_of": [247, 456], "compare_network": 247, "db00": 247, "anycast": 247, "v4_int_to_pack": 247, "v6_int_to_pack": 247, "summarize_address_rang": [247, 454], "ipaddr": 247, "collapse_address": [247, 454], "get_mixed_type_kei": 247, "sortabl": [247, 257], "apl": [249, 446, 451], "sml": 249, "recast": [249, 451], "algebra": [249, 429, 443], "succinctli": [249, 415], "tabul": [249, 324, 386], "vec1": 249, "vec2": [249, 363], "p0": 249, "plast": 249, "p_n": 249, "abcdefg": [249, 275, 448], "q0": 249, "q1": 249, "from_iter": [249, 443], "pred": [249, 375], "pairwis": [249, 361, 447], "it1": 249, "it2": 249, "itn": 249, "fillvalu": [249, 303, 443], "ax": 249, "combinator": [249, 300, 446, 457], "bd": 249, "addabl": 249, "110": [249, 287, 323, 325, 416], "amort": 249, "1296": 249, "loan": 249, "annual": [249, 458], "account_upd": 249, "bal": 249, "pmt": 249, "1_000": 249, "960": 249, "918": 249, "874": 249, "828": 249, "779": [249, 359], "728": [249, 286], "674": 249, "559": 249, "497": 249, "flattened_data": 249, "violet": [249, 361], "unflatten": 249, "013": 249, "023": 249, "uniq": [249, 441], "BY": [249, 320, 401], "uniquekei": 249, "aaaabbbccdaabbb": 249, "aaaabbbccd": 249, "aaaa": [249, 301, 444], "bbb": 249, "tgtkei": 249, "currkei": 249, "currvalu": 249, "_grouper": 249, "nexti": 249, "021": 249, "210": [249, 449], "odomet": 249, "ai": 249, "bx": 249, "cy": 249, "dx": [249, 323], "dy": 249, "011": 249, "prod": [249, 262, 457], "dequ": [249, 298, 324, 363, 378, 402, 405, 417, 427, 441, 442, 443, 444, 448, 451, 454, 455], "mydequ": 249, "newval": 249, "uneven": [249, 300], "num_act": 249, "incub": 249, "sliding_window": 249, "iter_index": 249, "superior": 249, "repeatfunc": 249, "list_of_list": 249, "ncycl": 249, "all_equ": 249, "first_tru": 249, "aabcadeaf": 249, "seq_index": 249, "iter_except": 249, "grouper": 249, "gxx": 249, "cdef": 249, "defg": 249, "sakki": [249, 444], "is_odd": 249, "subslic": [249, 300], "getitem": [249, 275, 367, 439], "before_and_aft": 249, "abcdefghi": 249, "all_upp": 249, "true_iter": 249, "remainder_iter": 249, "unique_everseen": 249, "abbccad": 249, "dedupl": 249, "unique_justseen": 249, "powerset": 249, "sum_of_squar": 249, "1400": 249, "sumprod": [249, 262, 449], "matmul": [249, 275, 454], "m2": [249, 439, 444, 448, 452], "matric": [249, 438], "convolv": 249, "convolut": 249, "betterexplain": 249, "kuxjwb4lzsa": 249, "padded_sign": 249, "windowed_sign": 249, "polynomial_from_root": 249, "x\u00b3": 249, "4x\u00b2": 249, "17x": [249, 447], "polynomial_ev": 249, "horner": 249, "polynomial_deriv": 249, "3x\u00b2": 249, "8x": 249, "siev": 249, "isqrt": [249, 262, 457], "1_000_000_000_000_007": 249, "360620266859": 249, "1_000_000_000_000_403": 249, "1000000000000403": 249, "nth_combin": 249, "comb": [249, 262, 323, 417, 448, 457], "7159": [250, 454], "4627": 250, "ecma": 250, "sort_kei": [250, 286, 451], "custom_json": 250, "x08ar": 250, "as_complex": 250, "dct": 250, "object_hook": 250, "parse_float": [250, 356], "complexencod": 250, "unord": [250, 269, 324, 403, 417], "skipkei": [250, 286], "ensure_ascii": [250, 454], "check_circular": 250, "allow_nan": 250, "item_separ": 250, "key_separ": 250, "parse_int": 250, "parse_const": 250, "object_pairs_hook": [250, 444, 446], "deseri": [250, 270, 282, 320, 400, 421, 444, 448, 453, 455], "num_str": [250, 356], "jsondecod": [250, 444, 455], "raw_decod": 250, "extran": [250, 290, 347], "bigobject": 250, "colno": [250, 301, 454], "forbid": [250, 282, 321, 324, 384, 444], "weird_json": 250, "voluntarili": [250, 277], "mp_film": 250, "1971": [250, 320, 323], "holi": [250, 320, 325, 417], "grail": [250, 320, 379, 417, 449], "2028": 250, "2029": 250, "ecmascript": [250, 385], "iskeyword": [251, 324], "issoftkeyword": 251, "softkwlist": 251, "detect_encod": [253, 355], "getlin": [253, 359, 454], "module_glob": [253, 376], "clearcach": 253, "checkcach": 253, "lazycach": [253, 454], "_local": [254, 458], "localeconv": [254, 324, 427, 455, 456], "lc_numer": [254, 324, 454, 455, 456], "decimal_point": [254, 324], "thousands_sep": [254, 324], "char_max": 254, "lc_monetari": 254, "int_curr_symbol": 254, "currency_symbol": [254, 427], "p_cs_preced": 254, "n_cs_preced": 254, "p_sep_by_spac": 254, "n_sep_by_spac": 254, "mon_decimal_point": 254, "frac_digit": [254, 427], "int_frac_digit": 254, "mon_thousands_sep": 254, "mon_group": 254, "positive_sign": 254, "negative_sign": 254, "p_sign_posn": 254, "n_sign_posn": 254, "d_t_fmt": 254, "d_fmt": 254, "t_fmt": 254, "t_fmt_ampm": 254, "day_7": 254, "abday_1": 254, "abday_7": 254, "mon_1": 254, "mon_12": 254, "abmon_1": 254, "abmon_12": 254, "radixchar": 254, "thousep": 254, "yesexpr": 254, "noexpr": 254, "crncystr": 254, "era": [254, 442], "emperor": 254, "reign": 254, "era_d_t_fmt": 254, "era_d_fmt": 254, "era_t_fmt": 254, "alt_digit": 254, "getdefaultlocal": [254, 430, 448, 449, 450], "envvar": [254, 340], "1766": 254, "getlocal": [254, 448, 450], "lc_": 254, "do_setlocal": [254, 277], "localenam": 254, "string1": [254, 320, 417], "string2": [254, 320, 417], "lc_collat": 254, "format_str": [254, 325, 427, 442, 449, 454, 456], "deloc": [254, 454], "atof": [254, 441, 442], "loc": 254, "xe4n": 254, "umlaut": 254, "classif": [254, 276, 410], "bind_textdomain_codeset": [254, 441, 448, 457], "grip": [255, 353], "geteffectivelevel": 255, "getchild": [255, 444], "getchildren": [255, 444, 451, 457, 458], "stack_info": 255, "clientip": 255, "fblogg": 255, "hdlr": 255, "findcal": 255, "lno": 255, "sinfo": 255, "hashandl": 255, "createlock": [255, 257], "tidi": [255, 365, 440, 442, 443], "emiss": [255, 340], "formattim": 255, "preparatori": 255, "formatstack": 255, "uuu": 255, "strptime": [255, 321, 344, 394, 439, 440, 442, 451], "default_time_format": 255, "default_msec_format": 255, "print_except": [255, 257, 358, 447], "linefmt": 255, "formathead": 255, "formatfoot": 255, "footer": [255, 321], "impart": 255, "tracebacktyp": [255, 358, 362, 403, 456], "msec": [255, 345, 454], "0f": [255, 451], "004": 255, "896": [255, 323], "\u00e0": 255, "la": [255, 442], "tasknam": 255, "merge_extra": 255, "entrant": 255, "getloggerclass": 255, "throttl": 255, "28524": 255, "addlevelnam": 255, "getlevelnamesmap": [255, 448], "reinstat": [255, 415], "gethandlerbynam": [255, 256], "gethandlernam": 255, "attrdict": 255, "reconstitut": [255, 282], "orderli": 255, "klass": 255, "capturewarn": [255, 376], "formatwarn": [255, 376, 443], "282": [255, 314], "inabl": [256, 277, 401], "dictconfigur": 256, "dictconfigclass": 256, "uncustom": 256, "rawconfigpars": [256, 444, 448, 453], "default_logging_config_port": 256, "decrypt": [256, 321, 397], "trust": [256, 269, 282, 284, 287, 321, 328, 337, 371, 435, 436, 443, 444, 450, 453, 457], "victim": 256, "customis": [256, 361], "allow_foo": 256, "logconfig": 256, "compel": [256, 444], "customformatterfactori": 256, "_after_": 256, "wherebi": [256, 282], "my_app": 256, "tld": 256, "support_team": 256, "dev_team": 256, "houston": 256, "mykei": 256, "config_dict": 256, "baseconfigur": 256, "qhand": 256, "queue_factori": 256, "customlisten": 256, "hand_name_1": 256, "hand_name_2": 256, "log01": 256, "logger_log01": 256, "hand01": 256, "handler_hand01": 256, "form01": 256, "formatter_form01": 256, "log02": 256, "log03": 256, "log04": 256, "log05": 256, "log06": 256, "log07": 256, "hand02": 256, "hand03": 256, "hand04": 256, "hand05": 256, "hand06": 256, "hand07": 256, "hand08": 256, "hand09": 256, "form02": 256, "form03": 256, "form04": 256, "form05": 256, "form06": 256, "form07": 256, "form08": 256, "form09": 256, "logger_pars": 256, "_defaultformatt": 256, "handler_hand02": 256, "handler_hand03": 256, "handler_hand04": 256, "default_udp_logging_port": 256, "handler_hand05": 256, "syslog_udp_port": [256, 257], "log_us": [256, 257, 335], "handler_hand06": 256, "handler_hand07": 256, "user1": [256, 448], "user2": [256, 448], "handler_hand08": 256, "handler_hand09": 256, "9022": 256, "typifi": 256, "customfield": 256, "setstream": [257, 456], "42378": 257, "newsyslog": 257, "logrot": 257, "inod": [257, 277, 322], "st_ino": [257, 277, 322, 449], "reopenifneed": [257, 455], "precursor": 257, "namer": 257, "rotation_filenam": 257, "rollov": [257, 338, 453], "getfilestodelet": 257, "default_nam": [257, 403], "predetermin": 257, "dorollov": 257, "attim": [257, 453], "w0": 257, "w6": 257, "w1": [257, 415], "d_": 257, "makesocket": 257, "record_attr_dict": 257, "datalen": 257, "createsocket": [257, 448], "retrystart": 257, "retryfactor": 257, "retrymax": 257, "rsyslog": 257, "monterei": 257, "gh": [257, 270, 301, 328, 363, 431, 447, 448, 449, 450], "91070": 257, "12168": 257, "append_nul": [257, 452], "12419": 257, "encodeprior": 257, "log_": 257, "log_alert": [257, 335], "crit": 257, "log_crit": [257, 335], "log_debug": [257, 335], "emerg": [257, 416, 437], "panic": [257, 440], "log_emerg": [257, 335], "log_err": [257, 335], "log_info": [257, 335], "log_notic": [257, 335], "log_warn": [257, 335], "log_auth": [257, 335], "authpriv": 257, "log_authpriv": [257, 335], "cron": 257, "log_cron": [257, 335], "log_daemon": [257, 335], "log_ftp": 257, "kern": 257, "log_kern": [257, 335], "lpr": 257, "log_lpr": [257, 335], "log_mail": [257, 335], "log_new": [257, 335], "log_syslog": [257, 335], "uucp": 257, "log_uucp": [257, 335], "local0": 257, "log_local0": [257, 335], "local1": 257, "log_local1": 257, "local2": 257, "log_local2": 257, "local3": 257, "log_local3": 257, "local4": 257, "log_local4": 257, "local5": 257, "log_local5": 257, "local6": 257, "log_local6": 257, "local7": 257, "log_local7": [257, 335], "mapprior": 257, "hammond": [257, 436, 437, 439, 440, 452], "dllname": [257, 457], "logtyp": 257, "win32servic": 257, "slimmer": 257, "geteventcategori": 257, "geteventtyp": 257, "getmessageid": 257, "credenti": [257, 318, 372, 436, 454], "getsubject": 257, "shouldflush": 257, "flushonclos": 257, "settarget": 257, "userid": [257, 363, 455], "cleartext": 257, "maplogrecord": 257, "simplequeu": [257, 269, 324, 456, 458], "enqueue_sentinel": 257, "lzmafil": [258, 453], "lzmaerror": 258, "lzmadecompressor": [258, 454], "lzmacompressor": 258, "format_xz": 258, "format_alon": 258, "format_raw": 258, "format_auto": 258, "check_non": 258, "check_crc32": 258, "check_crc64": 258, "check_sha256": 258, "preset_extrem": 258, "preset_default": 258, "memlimit": 258, "check_unknown": 258, "is_check_support": 258, "liblzma": [258, 431, 448], "filter_lzma1": 258, "filter_lzma2": 258, "filter_delta": 258, "bcj": 258, "filter_x86": 258, "filter_ia64": 258, "filter_arm": 258, "filter_armthumb": 258, "filter_powerpc": 258, "filter_sparc": 258, "dict_siz": 258, "lc": 258, "mode_fast": 258, "mode_norm": 258, "nice_len": 258, "mf": 258, "mf_hc3": 258, "mf_hc4": 258, "mf_bt2": 258, "mf_bt3": 258, "mf_bt4": 258, "exploit": [258, 277, 337, 384, 403, 430, 453], "data_in": 258, "data_out": 258, "lzc": 258, "out1": 258, "out2": 258, "out3": 258, "out4": 258, "lzf": 258, "my_filt": 258, "noteworthi": [259, 420, 437, 438], "iterkei": [259, 439, 440, 441, 443, 445], "itervalu": [259, 439, 440, 441, 445], "iteritem": [259, 439, 440, 441, 445], "get_messag": 259, "get_byt": [259, 451], "get_str": [259, 451], "get_fil": [259, 451], "externalclasherror": 259, "qmail": 259, "cur": [259, 320], "courier": [259, 347, 350], "exclam": [259, 280, 325, 353, 354, 382, 410], "list_fold": 259, "get_fold": 259, "nosuchmailboxerror": 259, "add_fold": 259, "remove_fold": 259, "notemptyerror": 259, "deserv": [259, 425, 437], "inventor": [259, 347], "shortcom": [259, 440], "mboxo": 259, "mh_sequenc": 259, "mh_profil": 259, "get_sequ": 259, "set_sequ": 259, "correspondingli": [259, 301, 437], "nmh": 259, "gpl": [259, 401, 439], "rmail": 259, "037": 259, "014": 259, "abridg": 259, "attract": [259, 443, 445], "get_label": 259, "multichannel": 259, "memorandum": 259, "newsread": 259, "composit": [259, 331, 353, 364, 407, 417, 448], "bounc": [259, 437], "get_subdir": 259, "get_flag": 259, "set_subdir": 259, "set_flag": 259, "add_flag": 259, "remove_flag": 259, "set_dat": 259, "get_info": 259, "set_info": 259, "unseen": 259, "mua": [259, 321, 456], "get_from": 259, "set_from": 259, "time_": 259, "add_sequ": 259, "remove_sequ": 259, "set_label": 259, "add_label": 259, "remove_label": 259, "get_vis": 259, "set_vis": 259, "update_vis": 259, "list_nam": 259, "list_id": 259, "unmarsh": [261, 448], "unauthent": [261, 296, 321, 384, 386, 387, 388, 389, 394, 395], "therein": [261, 282], "stem": [261, 279, 397, 444, 448], "binomi": [262, 300], "\u207f": 262, "copysign": [262, 443], "fab": 262, "fmod": [262, 405], "frexp": 262, "mantissa": [262, 300, 441, 443], "\u00b2": 262, "lcm": [262, 458], "ldexp": [262, 300], "modf": 262, "nextaft": [262, 449, 458], "ulp": [262, 300, 331, 443, 458], "halfwai": [262, 445], "trunc": [262, 273, 324, 403, 443], "denorm": [262, 331], "epsilon": [262, 331, 443], "cbrt": [262, 448], "cube": [262, 323, 421, 424, 448], "718281": 262, "exp2": [262, 448], "expm1": [262, 444, 451], "0000050000069649e": 262, "0000050000166668e": 262, "log1p": [262, 443], "log2": [262, 451, 452], "bit_length": [262, 300, 324, 444, 446], "quadrant": 262, "euclidean": [262, 457], "qx": 262, "norm": [262, 410], "hypotenus": 262, "triangl": [262, 361], "pythagorean": 262, "theorem": [262, 323, 324], "hyperbola": 262, "erfc": [262, 444, 451, 456], "gamma": [262, 300, 444, 451], "lgamma": [262, 444, 451], "141592": 262, "283185": 262, "circumfer": 262, "vi": [262, 302], "hart": 262, "celebr": 262, "pie": [262, 320], "guess_all_extens": 263, "knownfil": 263, "rebuilt": [263, 452, 454], "read_mime_typ": 263, "add_typ": 263, "suffix_map": 263, "recognit": 263, "tgz": [263, 435], "encodings_map": 263, "types_map": [263, 443], "common_typ": 263, "types_map_inv": 263, "read_windows_registri": 263, "access_read": 265, "access_writ": 265, "access_copi": 265, "access_default": 265, "prot": 265, "tagnam": [265, 353, 385, 386, 387], "allocationgranular": 265, "map_shar": 265, "prot_writ": 265, "prot_read": 265, "map_priv": 265, "lieu": [265, 401], "pages": 265, "madvis": [265, 457], "advic": [265, 277, 436, 449, 450], "pagefil": 265, "write_byt": [265, 279, 454], "madv_norm": 265, "madv_random": 265, "madv_sequenti": 265, "madv_willne": 265, "madv_dontne": 265, "madv_remov": 265, "madv_dontfork": 265, "madv_dofork": 265, "madv_hwpoison": 265, "madv_merg": 265, "madv_unmerg": 265, "madv_soft_offlin": 265, "madv_hugepag": 265, "madv_nohugepag": 265, "madv_dontdump": 265, "madv_dodump": 265, "madv_fre": 265, "madv_nosync": 265, "madv_autosync": 265, "madv_nocor": 265, "madv_cor": 265, "madv_protect": 265, "madv_free_reus": 265, "map_denywrit": 265, "map_execut": 265, "map_anon": 265, "map_anonym": 265, "map_popul": 265, "map_stack": 265, "map_aligned_sup": 265, "map_conc": 265, "addpackagepath": 266, "pkg_name": [266, 340, 359], "replacepackag": 266, "oldnam": 266, "newnam": [266, 427], "replace_path": 266, "run_script": 266, "oldpath": 266, "newpath": 266, "baconhamegg": 266, "globalnam": 266, "badmodul": 266, "_type": 266, "_inverted_registri": 266, "_slotnam": 266, "_compil": [266, 290], "isstr": 266, "_sre": [266, 454], "_optimize_unicod": 266, "_constant": [266, 324], "repeat_on": 266, "makedict": 266, "at_end_lin": 266, "_expand": 266, "_parser": [266, 290], "_patternend": 266, "sre_flag_unicod": 266, "inttyp": 266, "typetyp": 266, "lk_": 268, "lk_lock": 268, "lk_rlck": 268, "lk_nblck": 268, "lk_nbrlck": 268, "lk_unlck": 268, "setmod": 268, "o_append": [268, 277], "fdopen": [268, 277, 318, 403], "xe0": 268, "keycod": [268, 347], "getwch": [268, 443], "putch": 268, "putwch": [268, 443], "unicode_char": 268, "ungetwch": 268, "heapmin": 268, "set_error_mod": 268, "out_": 268, "report_errmod": 268, "out_to_default": 268, "sink": 268, "out_to_stderr": 268, "out_to_msgbox": 268, "crtsetreportmod": 268, "_crtdbgreport": 268, "crt_": 268, "crtdbg_": 268, "crtsetreportfil": 268, "crtdbg_mode_fil": 268, "shuld": 268, "crt_warn": 268, "crt_error": 268, "unrecover": [268, 390], "crt_assert": 268, "crtdbg_mode_debug": 268, "crtdbg_mode_wndw": 268, "crtdbg_report_mod": 268, "getppid": [269, 277], "set_start_method": [269, 449, 450, 453], "33725": [269, 457], "sharedmemori": [269, 270], "reboot": [269, 279, 453], "mp": [269, 440], "duplex": 269, "parent_conn": 269, "child_conn": 269, "liabl": [269, 378, 401], "1415927": 269, "offload": 269, "imap_unord": 269, "apply_async": [269, 443], "multiple_result": 269, "patienc": 269, "poolwork": 269, "is_al": [269, 343, 443, 458], "orphan": 269, "authkei": [269, 270], "waitforsingleobject": 269, "waitformultipleobject": 269, "processerror": 269, "buffertooshort": 269, "recv_bytes_into": 269, "authenticationerror": 269, "joinablequeu": [269, 454], "infinitesim": 269, "cancel_join_thread": 269, "conn1": 269, "conn2": 269, "feeder": [269, 363], "sem_getvalu": 269, "join_thread": [269, 340], "allow_exit_without_flush": 269, "3770": 269, "active_children": 269, "sched_getaffin": [269, 277, 452], "parent_process": 269, "freeze_support": 269, "get_all_start_method": [269, 453], "get_start_method": [269, 453], "allow_non": [269, 394, 395, 440], "set_execut": 269, "set_forkserver_preload": 269, "send_byt": 269, "recv_byt": 269, "arr1": 269, "arr2": 269, "solitari": 269, "unown": 269, "sem_timedwait": 269, "typecode_or_typ": 269, "get_lock": 269, "size_or_initi": 269, "rawarrai": 269, "rawvalu": 269, "get_obj": 269, "875": 269, "375": [269, 323], "1111111111111111": 269, "515625": 269, "0625": [269, 424], "640625": 269, "syncmanag": 269, "basemanag": [269, 270], "shutdown_timeout": 269, "get_serv": 269, "xmlrpclib": [269, 439, 440, 441, 442, 443, 444, 445], "50000": [269, 345], "typeid": [269, 457], "proxytyp": [269, 378], "method_to_typeid": 269, "create_method": 269, "baseproxi": 269, "_callmethod": 269, "_exposed_": 269, "_method_to_typeid_": 269, "_z": 269, "mathsclass": 269, "mymanag": 269, "queuemanag": 269, "get_queu": 269, "listproxi": 269, "l_outer": 269, "d_first_inn": 269, "lproxi": 269, "remoteerror": 269, "_getvalu": 269, "deregist": 269, "maxtasksperchild": [269, 444], "apach": [269, 321, 394, 401, 428, 437, 455], "mod_wsgi": [269, 328], "error_callback": 269, "asyncresult": 269, "map_async": [269, 443, 452], "lazier": 269, "starmap_async": [269, 452], "outstand": [269, 401], "deliver_challeng": 269, "answer_challeng": 269, "af_pip": 269, "last_accept": 269, "object_list": 269, "waitabl": [269, 277, 310, 344, 448], "1729": 269, "pipenam": 269, "servernam": 269, "get_logg": 269, "log_to_stderr": 269, "doom": [269, 442], "mainprocess": 269, "pymp": 269, "threadpool": 269, "_bootstrap": [269, 359], "_pid": 269, "5155": 269, "5313": 269, "5331": 269, "_h": 269, "generatorproxi": 269, "get_operator_modul": 269, "foo1": [269, 301], "foo2": [269, 301], "94": [269, 300, 444], "calculatestar": 269, "pow3": 269, "imap_it": 269, "imap_unordered_it": 269, "tgot": 269, "imapiter": 269, "applyresult": 269, "number_of_process": 269, "tasks1": 269, "tasks2": 269, "done_queu": 269, "multicor": 270, "smp": 270, "sharedmemorymanag": 270, "shm_a": 270, "shm_b": 270, "howdi": 270, "ndarrai": 270, "np": [270, 452], "shm": 270, "dtype": [270, 363], "psm_21467_46075": 270, "existing_shm": 270, "int64": 270, "888": 270, "shareablelist": 270, "smm": 270, "psm_6572_7512": 270, "raw_shm": 270, "another_sl": 270, "psm_6572_12221": 270, "depict": 270, "do_work": [270, 277], "total_result": 270, "storabl": 270, "10m": 270, "106939": 270, "nul_bug_demo": 270, "dry": [270, 276], "deserialized_sl": 270, "netrcparseerror": 272, "poor": [273, 287, 290, 301, 438, 439], "myfoo": 273, "myintegr": 273, "do_my_adding_stuff": 273, "othertypeiknowabout": 273, "do_my_other_adding_stuff": 273, "intellig": [273, 276, 278, 280], "_operator_fallback": 273, "monomorphic_oper": 273, "fallback_oper": 273, "__r": 273, "_add": 273, "__not__": 275, "inv": [275, 454], "__inv__": 275, "truediv": 275, "66": [275, 366, 417, 438, 443], "__concat__": 275, "countof": [275, 458], "delitem": 275, "indexof": [275, 458], "setitem": [275, 367], "extractor": [275, 441], "resolve_attr": 275, "cdefg": 275, "soldier": 275, "rank": [275, 323, 388, 449], "captain": [275, 455], "dotterbart": 275, "banana": [275, 324, 417, 426], "pear": [275, 417, 426], "iadd": 275, "iand": 275, "iconcat": 275, "__iconcat__": 275, "ifloordiv": 275, "ilshift": 275, "imod": 275, "imul": 275, "imatmul": [275, 454], "ior": 275, "ipow": 275, "irshift": 275, "isub": 275, "itruediv": 275, "ixor": 275, "yourscript": 276, "foutfil": 276, "qfoutfil": 276, "acquaint": 276, "execl": [276, 277], "pf": [276, 353], "ffoo": 276, "controversi": [276, 439], "contradictori": 276, "whatsoev": [276, 307, 401], "mutant": 276, "oddbal": 276, "rightli": 276, "humbl": 276, "opt_str": 276, "jam": 276, "n42": 276, "vewwi": 276, "wabbit": 276, "novic": 276, "bland": [276, 442, 443], "clue": 276, "optiongroup": 276, "optioncontain": 276, "add_option_group": 276, "get_option_group": 276, "print_vers": 276, "get_vers": 276, "4x": [276, 447, 449, 452, 453, 455], "suppress_usag": 276, "option_list": 276, "standard_option_list": 276, "option_class": 276, "conflict_handl": 276, "indentedhelpformatt": 276, "titledhelpformatt": 276, "add_help_opt": 276, "make_opt": 276, "irrelev": [276, 444], "callback_arg": 276, "callback_kwarg": 276, "suppress_help": 276, "fbar": 276, "mypkg": [276, 365], "check_choic": 276, "poke": 276, "enable_interspersed_arg": 276, "get_opt": 276, "set_conflict_handl": 276, "optionconflicterror": 276, "whittl": 276, "set_usag": 276, "get_usag": 276, "overkil": 276, "rarg": 276, "optionvalu": 276, "record_foo_seen": 276, "saw_foo": 276, "check_ord": 276, "moon": 276, "check_moon": 276, "is_moon_ful": 276, "store_valu": 276, "hairi": 276, "intricaci": 276, "stab": 276, "vararg_callback": 276, "floatabl": 276, "vararg_attr": 276, "check_mytyp": 276, "wind": 276, "sillier": 276, "check_complex": 276, "myoption": 276, "store_act": 276, "typed_act": 276, "always_typed_act": 276, "take_act": 276, "ding": [276, 458], "dong": 276, "ensure_valu": 276, "optparse_pars": 276, "valv": 276, "badoptionerror": 276, "ambiguousoptionerror": 276, "threat": 277, "getuid": 277, "unam": [277, 285, 331, 334, 337, 451, 452], "device_encod": 277, "nonsens": [277, 453], "ctermid": 277, "environb": [277, 328, 451], "supports_bytes_environ": [277, 451], "fchdir": [277, 454], "getcwd": [277, 278, 279, 340, 383, 426, 456], "getenvb": [277, 451], "get_exec_path": 277, "getegid": 277, "geteuid": 277, "getgid": 277, "getgrouplist": [277, 452], "getgroup": 277, "setgroup": [277, 328], "privileg": [277, 318, 322, 344, 381, 415, 452, 455], "macosx_deployment_target": 277, "getpwuid": [277, 292], "getpgid": [277, 440], "getprior": [277, 452], "prio_process": 277, "prio_pgrp": 277, "prio_us": 277, "setprior": [277, 452], "prio_darwin_thread": 277, "prio_darwin_process": 277, "prio_darwin_bg": 277, "prio_darwin_nonui": 277, "getresuid": [277, 444], "ruid": 277, "euid": 277, "suid": 277, "getresgid": [277, 444], "rgid": 277, "egid": 277, "sgid": 277, "initgroup": [277, 444], "setegid": 277, "seteuid": 277, "setgid": [277, 337], "superus": 277, "setn": 277, "nstype": 277, "reassoci": 277, "clone_new": 277, "pidfd_open": [277, 449, 458], "clone_newut": 277, "clone_newpid": 277, "clone_newnet": 277, "unshar": [277, 304], "setpgrp": 277, "setpgid": [277, 328], "pgrp": 277, "setregid": [277, 328], "setresgid": [277, 444], "setresuid": [277, 444], "setreuid": [277, 328], "getsid": [277, 441], "setsid": [277, 328], "setuid": [277, 337], "sysnam": [277, 285], "nodenam": [277, 285, 385], "disassoci": 277, "clone_": 277, "clone_fil": 277, "clone_f": 277, "clone_newcgroup": 277, "clone_newipc": 277, "clone_newn": 277, "clone_newtim": 277, "clone_newus": 277, "clone_sighand": 277, "clone_sysvsem": 277, "clone_thread": 277, "clone_vm": 277, "decept": [277, 440], "closerang": [277, 443], "fd_low": 277, "fd_high": 277, "copy_file_rang": 277, "offset_src": 277, "offset_dst": 277, "procf": 277, "sysf": 277, "fd2": 277, "fchmod": [277, 443, 454], "fchown": [277, 443, 454], "fdatasync": [277, 454], "filedescriptor": 277, "fpathconf": 277, "95": [277, 296, 300, 323, 359, 440, 443], "98": [277, 318, 324, 381, 443, 444, 451], "pathconf_nam": 277, "pathconf": [277, 452], "fstat": [277, 278, 322, 439, 452, 454], "stat_result": [277, 279, 337, 440, 454, 457], "fstatvf": [277, 439, 454], "statvf": [277, 439, 443, 452], "fsync": [277, 454], "_commit": 277, "get_block": [277, 454], "set_block": [277, 454], "f_lock": 277, "f_tlock": 277, "f_ulock": 277, "f_test": 277, "login_tti": 277, "leader": [277, 313], "lseek": [277, 442, 452], "0o777": [277, 279], "o_wronli": [277, 315], "o_rdwr": [277, 315], "o_creat": 277, "o_excl": [277, 338], "o_trunc": 277, "o_dsync": 277, "o_rsync": 277, "o_sync": 277, "o_noctti": 277, "o_cloexec": [277, 452], "o_noinherit": 277, "o_short_liv": 277, "o_temporari": [277, 338], "o_random": 277, "o_sequenti": 277, "o_evtonli": [277, 447], "o_fsync": [277, 447], "o_symlink": [277, 447], "o_nofollow_ani": [277, 447], "o_async": 277, "o_direct": 277, "o_directori": 277, "o_nofollow": 277, "o_noatim": 277, "o_path": [277, 453], "o_tmpfil": [277, 338, 453], "openpti": [277, 291, 450], "slave": [277, 291, 347], "pipe2": [277, 452], "ORing": [277, 321], "posix_falloc": [277, 452, 454], "posix_fadvis": [277, 452, 454], "posix_fadv_norm": 277, "posix_fadv_sequenti": 277, "posix_fadv_random": 277, "posix_fadv_noreus": 277, "posix_fadv_willne": 277, "posix_fadv_dontne": 277, "pread": [277, 452, 454, 456], "preadv": [277, 456], "rwf_hipri": 277, "rwf_nowait": 277, "sysconf": [277, 318, 450], "sc_iov_max": [277, 318], "readv": [277, 452, 454, 456], "pwrite": [277, 452, 454, 456], "pwritev": [277, 456], "rwf_dsync": 277, "rwf_sync": 277, "rwf_append": 277, "writev": [277, 452, 454, 456], "out_fd": 277, "in_fd": 277, "sf_nodiskio": 277, "sf_mnowait": 277, "sf_sync": 277, "sf_nocach": 277, "splice_f_mov": 277, "splice_f_nonblock": 277, "splice_f_mor": 277, "tcgetpgrp": 277, "tcsetpgrp": 277, "pg": 277, "ttynam": 277, "get_terminal_s": [277, 314, 452], "stdout_fileno": 277, "terminal_s": [277, 314], "close_fd": [277, 328, 441, 451, 456, 457], "get_inherit": [277, 318, 453], "set_inherit": [277, 310, 318, 453], "get_handle_inherit": [277, 453], "set_handle_inherit": [277, 328, 453], "supports_fd": [277, 452], "faccessat": 277, "supports_dir_fd": [277, 452], "supports_follow_symlink": [277, 314], "effective_id": [277, 452], "f_ok": [277, 314], "r_ok": 277, "w_ok": 277, "x_ok": [277, 314], "supports_effective_id": [277, 452], "uf_nodump": [277, 322], "uf_immut": [277, 322, 443], "uf_append": [277, 322, 443], "uf_opaqu": [277, 322], "uf_nounlink": [277, 322], "uf_compress": [277, 322], "uf_hidden": [277, 322], "sf_archiv": [277, 322], "sf_immut": [277, 322], "sf_append": [277, 322], "sf_nounlink": [277, 322], "sf_snapshot": [277, 322], "s_isuid": [277, 322], "s_isgid": [277, 322], "s_enfmt": [277, 322], "s_isvtx": [277, 322], "s_iread": [277, 322], "s_iwrit": [277, 314, 322], "s_iexec": [277, 322], "s_irwxu": [277, 322], "s_irusr": [277, 322], "s_iwusr": [277, 322, 337], "s_ixusr": [277, 322, 337], "s_irwxg": [277, 322], "s_irgrp": [277, 322], "s_iwgrp": [277, 322], "s_ixgrp": [277, 322], "s_irwxo": [277, 322], "s_iroth": [277, 322], "s_iwoth": [277, 322, 337], "s_ixoth": [277, 322, 337], "chroot": 277, "getcwdb": [277, 445, 457], "lchflag": [277, 443], "lchmod": [277, 279, 443], "lchown": [277, 440], "xxxxxxxxxxxx": 277, "lstat": [277, 278, 279, 322, 340, 449, 452, 457], "vista": [277, 353], "repars": [277, 457], "junction": [277, 278, 279, 314, 449, 457], "exist_ok": [277, 279, 454], "21082": 277, "mkfifo": [277, 452, 454], "rendezv": [277, 451], "mknod": [277, 440, 452, 454], "0o600": 277, "s_ifreg": [277, 322], "s_ifchr": [277, 322], "s_ifblk": [277, 322], "s_ififo": [277, 322], "makedev": [277, 440], "st_dev": [277, 322, 449], "st_rdev": [277, 449], "readlink": [277, 279, 452, 457, 458], "realpath": [277, 278, 279, 436, 447, 457], "prune": [277, 279], "direntri": [277, 449, 454, 455], "opendir": 277, "readdir": [277, 454], "findfirstfilew": 277, "findnextfilew": 277, "scandir_path": 277, "s_isdir": [277, 322], "dirent": 277, "d_type": 277, "dt_unknown": 277, "is_symlink": [277, 279, 457], "islink": [277, 278, 279, 457], "is_junct": [277, 279, 449], "isjunct": [277, 278, 449], "st_nlink": [277, 322], "st_ctime": [277, 322, 449], "st_birthtim": [277, 442, 449], "statinfo": 277, "st_mode": [277, 279, 322, 453, 457], "33188": 277, "7876932": 277, "234881026": 277, "st_uid": [277, 322], "st_gid": [277, 322], "st_size": [277, 279, 322, 439], "264": [277, 327, 439], "st_atim": [277, 322], "1297230295": 277, "1297230027": 277, "st_atime_n": 277, "nanosecond": [277, 344, 345, 381, 442, 448, 452, 457, 458], "st_mtime_n": 277, "st_ctime_n": 277, "st_birthtime_n": 277, "fat32": 277, "st_block": 277, "st_blksize": 277, "st_flag": [277, 442], "st_gen": [277, 442], "st_fstype": [277, 456], "st_rsize": 277, "st_creator": 277, "st_type": 277, "st_file_attribut": [277, 322, 454], "dwfileattribut": [277, 454], "by_handle_file_inform": [277, 454], "getfileinformationbyhandl": [277, 454], "file_attribute_": 277, "file_attribute_arch": [277, 322], "st_reparse_tag": [277, 322, 457], "file_attribute_reparse_point": [277, 322], "io_reparse_tag_": 277, "f_bsize": 277, "f_frsize": 277, "f_block": 277, "f_bfree": 277, "f_bavail": 277, "f_file": 277, "f_ffree": 277, "f_favail": 277, "f_flag": 277, "f_namemax": 277, "f_fsid": 277, "st_rdonli": 277, "st_nosuid": 277, "st_nodev": 277, "st_noexec": 277, "st_synchron": 277, "st_mandlock": 277, "st_write": 277, "st_append": 277, "st_immut": 277, "st_noatim": 277, "st_nodiratim": 277, "st_relatim": 277, "atim": 277, "target_is_directori": [277, 279, 452], "morph": 277, "unprivileg": 277, "secreatesymboliclinkprivileg": 277, "unelev": 277, "atime_n": 277, "mtime_n": 277, "dirpath": [277, 279], "resumpt": [277, 332, 455], "cv": [277, 343, 361, 437, 438, 439, 440, 441, 442], "getsiz": [277, 278], "dirfd": 277, "rootfd": 277, "mfd_cloexec": 277, "mfd_": 277, "memfd": 277, "mfd_allow_s": 277, "mfd_hugetlb": 277, "mfd_huge_shift": 277, "mfd_huge_mask": 277, "mfd_huge_64kb": 277, "mfd_huge_512kb": 277, "mfd_huge_1mb": 277, "mfd_huge_2mb": 277, "mfd_huge_8mb": 277, "mfd_huge_16mb": 277, "mfd_huge_32mb": 277, "mfd_huge_256mb": 277, "mfd_huge_512mb": 277, "mfd_huge_1gb": 277, "mfd_huge_2gb": 277, "mfd_huge_16gb": 277, "mfd_huge": 277, "eventfd": [277, 447], "initv": 277, "efd_cloexec": 277, "efd_nonblock": 277, "efd_semaphor": 277, "eventfd_read": 277, "eventfd_writ": 277, "efc_cloexec": 277, "xattr_replac": 277, "xattr_creat": 277, "xattr_size_max": 277, "adddlldirectori": 277, "execlp": 277, "execvp": [277, 328], "ex_ok": 277, "exit_success": 277, "ex_usag": 277, "ex_dataerr": 277, "ex_noinput": 277, "ex_nous": 277, "ex_nohost": 277, "ex_unavail": 277, "ex_softwar": 277, "ex_oserr": 277, "ex_osfil": 277, "ex_cantcreat": 277, "ex_ioerr": 277, "ex_tempfail": 277, "retryabl": 277, "ex_protocol": 277, "ex_noperm": 277, "ex_config": 277, "ex_notfound": 277, "cygwin": [277, 331, 338, 436, 438, 440, 457], "longstand": [277, 449, 452], "pidfd_nonblock": [277, 449], "waitid": [277, 452, 454], "plock": 277, "waitstatus_to_exitcod": [277, 291, 458], "file_act": 277, "setpgroup": 277, "resetid": 277, "setsigmask": 277, "setsigdef": 277, "posix_spawnp": 277, "posix_spawn_open": 277, "posix_spawn_clos": 277, "posix_spawn_dup2": 277, "new_fd": 277, "posix_spawn_file_actions_addopen": 277, "posix_spawn_file_actions_addclos": 277, "posix_spawn_file_actions_adddup2": 277, "posix_spawn_setpgroup": 277, "posix_spawn_resetid": 277, "posix_spawn_setsid": 277, "posix_spawn_setsid_np": 277, "posix_spawn_setsigmask": 277, "sigdef": 277, "posix_spawn_setsigdef": 277, "sched_param": 277, "posix_spawn_setschedparam": 277, "posix_spawn_setschedul": 277, "after_in_par": 277, "after_in_child": 277, "spawnl": 277, "spawnlp": [277, 328], "spawnv": 277, "spawnvp": [277, 328], "p_nowait": [277, 328], "p_wait": [277, 328], "p_nowaito": 277, "p_detach": 277, "p_overlai": 277, "shellexecut": 277, "normpath": [277, 278, 444], "comspec": [277, 328, 452, 453], "children_us": 277, "children_system": 277, "getprocesstim": 277, "idtyp": 277, "p_pid": 277, "p_pgid": 277, "p_all": 277, "p_pidfd": [277, 458], "wexit": 277, "wstop": 277, "wcontinu": 277, "wnohang": 277, "wnowait": 277, "siginfo_t": [277, 315], "si_pid": [277, 315], "si_uid": [277, 315], "si_signo": [277, 315], "si_statu": [277, 315], "si_cod": [277, 315, 458], "cld_exit": 277, "wuntrac": 277, "wait3": [277, 442, 454], "getrusag": [277, 304, 442], "wait4": [277, 442, 454], "cld_kill": [277, 458], "cld_dump": 277, "cld_trap": 277, "cld_stop": [277, 458], "cld_continu": 277, "wifexit": 277, "wexitstatu": 277, "wifsign": 277, "wtermsig": 277, "wifstop": 277, "wstopsig": 277, "wcoredump": 277, "wifcontinu": 277, "sigcont": [277, 315], "ptrace": 277, "sched_oth": 277, "sched_batch": 277, "sched_idl": 277, "sched_sporad": 277, "sched_fifo": 277, "sched_rr": 277, "sched_reset_on_fork": 277, "sched_prior": 277, "sched_setparam": [277, 452], "sched_setschedul": [277, 452], "sched_getparam": [277, 452], "sched_get_priority_min": [277, 452], "sched_get_priority_max": [277, 452], "sched_getschedul": [277, 452], "sched_rr_get_interv": [277, 452], "quantum": 277, "sched_yield": [277, 452], "sched_setaffin": [277, 452], "confstr": 277, "confstr_nam": 277, "undetermin": 277, "getloadavg": 277, "unobtain": 277, "sysconf_nam": 277, "sc_minsigstksz": 277, "extsep": 277, "defpath": [277, 314], "rtld_lazi": [277, 331, 452], "rtld_nodelet": [277, 452], "rtld_noload": [277, 452], "rtld_deepbind": [277, 452], "setdlopenflag": [277, 331, 425, 439, 452], "getdlopenflag": [277, 331, 425, 439], "getrandom": [277, 454, 455], "entropi": [277, 321, 455], "environment": [277, 372, 430], "grnd_random": 277, "grnd_nonblock": 277, "524": [277, 455], "bcryptgenrandom": [277, 448], "systemrandom": [277, 300, 308], "getentropi": [277, 454], "cryptgenrandom": [277, 448], "ntpath": [278, 279, 456], "lexist": [278, 441, 457], "isdir": [278, 279, 284, 337, 457], "ismount": [278, 453, 457], "unrepresent": [278, 279, 457], "commonpath": [278, 454], "commonprefix": [278, 454], "userprofil": [278, 457], "homepath": 278, "homedr": 278, "getatim": 278, "getmtim": 278, "getctim": 278, "isab": [278, 279], "getvolumepathnam": 278, "isdevdr": 278, "std": [278, 331, 344, 442], "1003": 278, "relpath": [278, 279, 443, 449], "filepath": 278, "samefil": [278, 279, 453, 454], "path1": 278, "path2": 278, "sameopenfil": 278, "fp1": 278, "fp2": 278, "samestat": [278, 279, 453], "stat1": 278, "stat2": 278, "splitdriv": [278, 456], "splitroot": [278, 449], "sam": [278, 401, 437, 448], "cshrc": [278, 434], "supports_unicode_filenam": [278, 440], "windowspath": 279, "purewindowspath": 279, "test_pathlib": 279, "pathseg": 279, "pureposixpath": 279, "lib64": [279, 331, 333, 431, 458], "na\u00efv": [279, 438], "apache2": 279, "an_absolute_path": 279, "regroup": 279, "pathmod": 279, "gar": 279, "as_posix": 279, "as_uri": 279, "is_absolut": 279, "is_relative_to": [279, 450], "case_sensit": [279, 449], "relative_to": [279, 449, 450], "walk_up": [279, 449], "941": 279, "error_messag": 279, "subpath": [279, 398], "with_nam": 279, "antoin": [279, 443, 444, 446, 447, 449, 451, 452, 453, 454, 455, 456, 457, 458], "751": 279, "with_stem": 279, "851": 279, "with_suffix": 279, "with_seg": [279, 449], "mypath": 279, "session_id": 279, "798": 279, "is_mount": [279, 456, 457], "is_block_devic": [279, 457], "is_char_devic": [279, 457], "is_fifo": [279, 457], "is_socket": [279, 457], "956": 279, "1327883547": 279, "852554": 279, "33277": 279, "0o444": 279, "33060": 279, "nonexistentfil": 279, "film": [279, 323, 363], "_templat": 279, "_build": 279, "_static": 279, "top_down": 279, "on_error": [279, 363], "mimick": 279, "my_binary_fil": 279, "my_text_fil": 279, "write_text": [279, 454], "mylink": 279, "symlink_to": [279, 447, 457], "other_path": 279, "hardlink_to": [279, 447, 457], "missing_ok": 279, "abnorm": [280, 331, 371, 451], "pdbrc": [280, 448, 451, 455, 458], "nosigint": [280, 451], "readrc": [280, 455], "elp": 280, "hel": 280, "_frame": 280, "_retval": 280, "_except": 280, "reak": 280, "tbreak": 280, "ear": 280, "bpnumber": 280, "uncondit": [280, 332, 367, 410], "some_vari": 280, "tep": 280, "unt": 280, "il": [280, 321, 409, 453], "eturn": 280, "ont": 280, "inu": 280, "ump": 280, "ist": 280, "longlist": 280, "rg": 280, "whati": 280, "undisplai": [280, 451], "classinst": 280, "unalia": 280, "list_opt": 280, "uit": 280, "retval": [280, 332, 438], "excnumb": 280, "tackl": [282, 437], "3154": [282, 453], "574": [282, 359, 457], "highest_protocol": [282, 440], "default_protocol": [282, 312, 447], "buffer_callback": 282, "pickleerror": 282, "unpicklingerror": 282, "picklebuff": 282, "persistent_id": 282, "persistent_load": 282, "reducer_overrid": [282, 457], "superflu": [282, 318, 320], "elig": [282, 405, 451], "__getstate__": [282, 366, 440, 448], "picklestr": [282, 283], "worthwhil": [282, 442, 452], "__setstate__": [282, 366, 440, 457], "__getnewargs_ex__": 282, "list_of_item": 282, "sixth": [282, 439, 457], "memorecord": 282, "dbpickler": 282, "dbunpickl": 282, "type_tag": 282, "key_id": 282, "fight": [282, 451], "INTO": [282, 320], "italian": [282, 361], "disturb": 282, "someclass": [282, 363, 366, 367, 437], "reduce_someclass": 282, "mypickl": 282, "textread": 282, "endswith": [282, 324, 375, 437, 440, 442, 443, 454], "new_read": 282, "myclass": [282, 403, 415], "my_attribut": 282, "unpickled_class": 282, "massiv": [282, 441, 442, 454], "eschew": 282, "reconstructor": 282, "zerocopybytearrai": 282, "_reconstruct": 282, "unseri": [282, 451], "new_b": 282, "nsystem": 282, "ntr": 282, "inoffens": 282, "safe_builtin": 282, "restrictedunpickl": 282, "restricted_load": 282, "cbuiltin": [282, 446], "neval": 282, "4j": [282, 402, 410, 417, 443], "intim": [283, 285], "binint1": 283, "tuple2": 283, "binput": 283, "indentlevel": 283, "genop": 283, "opcodeinfo": 283, "moduleinfo": [284, 455], "module_find": 284, "ispkg": 284, "extend_path": 284, "pth": [284, 316, 331, 333, 430, 437, 455], "find_load": [284, 398, 407, 447, 448, 449, 450, 452, 453, 456], "get_import": 284, "path_item": 284, "get_load": [284, 449, 450], "module_or_nam": 284, "iter_import": [284, 452], "iter_modul": [284, 452, 455], "walk_packag": [284, 452, 455, 456], "12915": 284, "pyramid": 284, "is_64bit": 285, "system_alia": 285, "mac_ver": 285, "amdk6": 285, "python_build": 285, "buildno": 285, "builddat": 285, "python_compil": 285, "python_branch": 285, "scm": [285, 375, 450], "python_implement": 285, "python_revis": 285, "python_vers": 285, "python_version_tupl": 285, "market": [285, 442], "dega": 285, "java_v": 285, "vminfo": 285, "osinfo": 285, "vm_name": 285, "vm_releas": 285, "vm_vendor": 285, "os_nam": 285, "os_vers": 285, "os_arch": 285, "win32_ver": 285, "csd": 285, "uniprocessor": 285, "win32_edit": 285, "enterpris": 285, "iotuap": 285, "serverstandard": 285, "nanoserv": 285, "win32_is_iot": 285, "iot": 285, "versioninfo": 285, "dev_stag": 285, "non_release_vers": 285, "libc_ver": 285, "16384": 285, "freedesktop_os_releas": [285, 447], "freedesktop": [285, 447, 452], "pretty_nam": 285, "id_lik": 285, "version_id": 285, "variant_id": 285, "get_like_distro": 285, "nskeyedarchiv": [286, 457], "nskeyedunarchiv": 286, "fmt_xml": [286, 453], "fmt_binari": [286, 453], "invalidfileexcept": 286, "pl": 286, "astr": 286, "doodah": 286, "afloat": 286, "anint": 286, "adict": 286, "anotherstr": 286, "athirdstr": 286, "xe4ssig": 286, "ma": [286, 447, 448], "atruevalu": 286, "afalsevalu": 286, "gunk": 286, "somemoredata": 286, "adat": 286, "1939": 287, "stl": [287, 453], "2595": 287, "pop3_ssl": [287, 451, 458], "obsolesc": 287, "mailserv": [287, 426], "pop3_port": 287, "pop3_ssl_port": 287, "995": [287, 455], "fetchmail": 287, "noncompli": 287, "greet": [287, 317, 320, 363, 454], "capa": [287, 453], "2449": 287, "pass_": 287, "apop": 287, "rpop": 287, "mesg_num": 287, "dele": 287, "eudora": 287, "qpop": 287, "disconnect": [287, 317, 320, 381, 457], "rset": [287, 317], "signoff": 287, "howmuch": 287, "uidl": 287, "mesgnum": 287, "6856": [287, 444, 451, 454], "nummessag": 287, "thinli": 288, "disguis": [288, 301, 403], "off_t": 288, "getconf": 288, "lfs_cflag": 288, "d_largefile64_sourc": 288, "d_file_offset_bit": 288, "sort_dict": [289, 457], "underscore_numb": [289, 447], "tup": [289, 361, 363], "pformat": [289, 453], "isread": 289, "isrecurs": 289, "saferepr": 289, "sampleproject": 289, "project_info": 289, "author_email": 289, "pypa": [289, 375], "googlegroup": 289, "bugtrack_url": 289, "osi": 289, "webpag": 289, "description_content_typ": 289, "docs_url": 289, "download_url": [289, 442], "last_dai": 289, "last_month": 289, "last_week": 289, "home_pag": 289, "maintainer_email": 289, "package_url": 289, "project_url": 289, "homepag": 289, "release_url": 289, "requires_dist": 289, "lsprof": 290, "rosen": 290, "ted": 290, "czotter": 290, "imit": [290, 443], "ncall": 290, "tottim": 290, "percal": 290, "cumtim": 290, "759": 290, "937": 290, "598": 290, "_code": 290, "435": [290, 453], "_parse_sub": 290, "induc": [290, 400], "subfunct": [290, 452], "restat": 290, "output_fil": 290, "sort_ord": 290, "sort_stat": 290, "sortkei": 290, "strip_dir": 290, "print_stat": 290, "cull": 290, "print_cal": 290, "print_calle": 290, "timeunit": 290, "subcal": 290, "pr": [290, 437], "sortbi": 290, "create_stat": 290, "dump_stat": 290, "coalesc": 290, "printout": 290, "pcall": 290, "nfl": 290, "reverse_ord": 290, "percentag": [290, 323, 325, 421, 443], "get_stats_profil": 290, "statsprofil": 290, "functionprofil": 290, "tick": [290, 304, 344], "lag": 290, "probabilist": 290, "exception": 290, "god": 290, "alarm": [290, 315, 453], "8ghz": 290, "i5": 290, "process_tim": [290, 344, 345, 452, 457], "04e": 290, "bia": [290, 451], "your_computed_bia": 290, "your_time_func": 290, "lone": [290, 317, 405], "cleanest": 290, "your_integer_time_func": 290, "_lsprof": 290, "perf_count": [290, 344, 345, 452, 457], "thoroughli": [291, 324, 422], "master_read": 291, "stdin_read": 291, "baffl": 291, "pseudotermin": 291, "typescript": 291, "use_python": 291, "pw_name": 292, "pw_passwd": 292, "pw_uid": [292, 328], "pw_gid": 292, "pw_geco": 292, "pw_dir": 292, "pw_shell": 292, "getpwnam": [292, 328], "getpwal": 292, "pycompileerror": 293, "dfile": 293, "dorais": 293, "checked_hash": 293, "unchecked_hash": 293, "filen": 293, "readmodul": 294, "readmodule_ex": 294, "pagin": 295, "pythondoc": 295, "pyexpat": [296, 384, 401, 431, 437, 440, 442, 443, 444], "xmlparsertyp": 296, "parsercr": 296, "errorstr": 296, "namespace_separ": 296, "repertoir": [296, 317, 443], "startelementhandl": 296, "endelementhandl": 296, "xmln": [296, 372, 388, 444], "elem1": [296, 442], "elem2": [296, 442], "isfin": 296, "parsefil": 296, "setbas": 296, "externalentityrefhandl": 296, "notationdeclhandl": 296, "unparsedentitydeclhandl": 296, "getbas": 296, "getinputcontext": 296, "externalentityparsercr": 296, "ordered_attribut": 296, "specified_attribut": 296, "setparamentitypars": 296, "xml_param_entity_parsing_nev": 296, "xml_param_entity_parsing_unless_standalon": 296, "xml_param_entity_parsing_alwai": 296, "useforeigndtd": 296, "startdoctypedeclhandl": 296, "enddoctypedeclhandl": 296, "xml_error_cant_change_feature_once_pars": 296, "buffer_text": [296, 440], "characterdatahandl": 296, "buffer_us": 296, "errorbyteindex": 296, "errorcolumnnumb": 296, "errorlinenumb": 296, "currentbyteindex": 296, "currentcolumnnumb": 296, "currentlinenumb": 296, "handlernam": 296, "xmldeclhandl": 296, "doctypenam": 296, "systemid": [296, 385, 390], "publicid": [296, 385, 390], "has_internal_subset": 296, "elementdeclhandl": 296, "attlistdeclhandl": 296, "elnam": 296, "attnam": 296, "idref": 296, "processinginstructionhandl": 296, "startcdatasectionhandl": 296, "endcdatasectionhandl": 296, "entitynam": 296, "notationnam": 296, "ndata": [296, 390], "entitydeclhandl": 296, "is_parameter_ent": 296, "startnamespacedeclhandl": 296, "endnamespacedeclhandl": 296, "commenthandl": 296, "defaulthandl": 296, "defaulthandlerexpand": 296, "notstandalonehandl": 296, "xml_error_not_standalon": 296, "xml_error_external_entity_handl": 296, "some_xml_docu": 296, "start_el": [296, 387], "end_el": [296, 387], "char_data": 296, "child1": [296, 366], "child2": [296, 366], "xml_ctype_ani": 296, "xml_ctype_choic": 296, "xml_ctype_empti": 296, "xml_ctype_mix": 296, "xml_ctype_nam": 296, "xml_ctype_seq": 296, "xml_cquant_non": 296, "xml_cquant_opt": 296, "xml_cquant_plu": 296, "xml_cquant_rep": 296, "xml_error_": 296, "constant_nam": 296, "xml_error_async_ent": 296, "xml_error_attribute_external_entity_ref": 296, "xml_error_bad_char_ref": 296, "xml_error_binary_entity_ref": 296, "xml_error_duplicate_attribut": 296, "xml_error_incorrect_encod": 296, "xml_error_invalid_token": 296, "xml_error_junk_after_doc_el": 296, "xml_error_misplaced_xml_pi": 296, "xml_error_no_el": 296, "xml_error_no_memori": 296, "xml_error_param_entity_ref": 296, "xml_error_partial_char": 296, "xml_error_recursive_entity_ref": 296, "xml_error_syntax": 296, "xml_error_tag_mismatch": 296, "xml_error_unclosed_token": 296, "xml_error_undefined_ent": 296, "xml_error_unknown_encod": 296, "xml_error_unclosed_cdata_sect": 296, "xml_error_unexpected_st": 296, "xml_error_entity_declared_in_p": 296, "xml_error_feature_requires_xml_dtd": 296, "xml_error_unbound_prefix": 296, "undeclar": 296, "xml_error_undeclaring_prefix": 296, "xml_error_incomplete_p": 296, "xml_error_xml_decl": 296, "xml_error_text_decl": 296, "xml_error_publicid": 296, "xml_error_suspend": 296, "xml_error_not_suspend": 296, "xml_error_abort": 296, "xml_error_finish": 296, "xml_error_suspend_p": 296, "xml_error_reserved_prefix_xml": 296, "xml_error_reserved_prefix_xmln": 296, "xml_error_reserved_namespace_uri": 296, "xml_error_invalid_argu": 296, "xml_error_no_buff": 296, "xml_error_amplification_limit_breach": 296, "amplif": 296, "breach": [296, 401], "rec": [296, 386, 388], "xml11": [296, 386, 388], "20060816": [296, 386, 388], "encodingdecl": [296, 386, 388], "compet": [298, 451], "upperbound": 298, "uninterrupt": [298, 315], "decodestr": [299, 458], "encodestr": [299, 458], "lognorm": 300, "mise": 300, "mersenn": [300, 440], "twister": [300, 440], "19937": 300, "devis": 300, "getrandbit": [300, 441, 453], "matsumoto": [300, 401], "nishimura": [300, 401], "equidistribut": 300, "vol": 300, "randbyt": [300, 458], "token_byt": [300, 308], "randint": [300, 451], "cum_weight": 300, "2080": 300, "raffl": 300, "grand": [300, 388], "prize": 300, "10000000": 300, "binomialvari": [300, 449], "equat": [300, 457], "triangular": [300, 323, 443], "midpoint": [300, 323], "betavari": 300, "expovari": [300, 449], "lambd": [300, 449], "gammavari": 300, "gauss": [300, 323], "mu": [300, 323, 457], "sigma": [300, 323, 457], "lognormvari": 300, "vonmisesvari": 300, "kappa": 300, "paretovari": 300, "pareto": 300, "weibullvari": 300, "weibul": 300, "seeder": 300, "37444887175646646": 300, "1800146073117523": 300, "148957571865031": 300, "roulett": 300, "spin": 300, "jack": [300, 301, 324, 401, 417, 421, 439, 440, 442, 446], "king": [300, 301, 437, 457], "settl": [300, 443], "10_000": [300, 323], "4169": 300, "quartil": [300, 323, 457], "2_500": 300, "7_500": 300, "7958": 300, "resampl": 300, "thoughtco": 300, "3126155": 300, "fmean": [300, 323, 457], "73": [300, 359, 427, 441, 457, 458], "drug": 300, "placebo": 300, "denni": [300, 447, 448, 449, 458], "shasha": 300, "manda": 300, "wilson": [300, 440, 441, 454, 458], "observed_diff": 300, "new_diff": 300, "reshuffl": 300, "4f": 300, "hypothesi": 300, "multiserv": 300, "quantil": [300, 323, 457], "average_arrival_interv": 300, "average_service_tim": 300, "stdev_service_tim": 300, "num_serv": 300, "arrival_tim": 300, "1_000_000": [300, 455], "next_server_avail": 300, "service_dur": 300, "service_complet": 300, "hacker": 300, "jake": [300, 444, 446, 457], "vanderpla": 300, "econom": 300, "marketplac": 300, "norvig": 300, "random_product": 300, "random_permut": 300, "random_combin": 300, "random_combination_with_replac": 300, "\u2075\u00b3": 300, "05954861408025609": 300, "2\u2075\u00b2": 300, "2\u2075\u00b3": 300, "geometr": [300, 323, 361, 448], "fullrandom": 300, "0x10_0000_0000_0000": 300, "87925541791544": 300, "\u00b9\u2070\u2077\u2074": 300, "allen": [300, 321, 451], "downei": 300, "frie09": 301, "nfoo2": 301, "possess": [301, 324, 381, 448], "aaaab": 301, "aaab": 301, "aaaaaa": 301, "ailmsux": 301, "imsx": 301, "x7f": 301, "lookahead": [301, 402, 406, 441], "isaac": 301, "asimov": 301, "lookbehind": [301, 454], "theth": 301, "bfoo": 301, "foo3": 301, "py3": [301, 428, 446, 451], "py2": [301, 428, 451], "typographi": 301, "\u00fc": 301, "noflag": 301, "nicer": [301, 367, 447], "fullmatch": [301, 453], "0a3b9": 301, "fell": [301, 416, 426, 438, 439, 440], "z_": [301, 410], "z_0": 301, "npy_": 301, "npy_myfunc": 301, "dashrepl": 301, "matchobj": 301, "pro": 301, "gram": [301, 406], "sand": 301, "new_str": 301, "number_of_subs_mad": 301, "metacharact": [301, 328, 441], "legal_char": 301, "ascii_lowercas": [301, 325, 439], "abcdefghijklmnopqrstuvwxyz0123456789": 301, "digits_r": 301, "purg": 301, "endpo": 301, "ogr": 301, "doggi": 301, "og": [301, 340], "groupindex": 301, "groupn": 301, "physicist": 301, "reynold": 301, "a1b2c3": 301, "c3": [301, 371, 403, 440, 452], "1632": 301, "cba": 301, "remove_thi": 301, "toni": [301, 443], "tiremove_thisg": 301, "tiger": 301, "lastindex": 301, "lastgroup": 301, "displaymatch": 301, "poker": [301, 361], "player": [301, 325, 361], "9tjqk": 301, "akt5q": 301, "akt5": 301, "akt": 301, "727ak": 301, "717ak": 301, "717": 301, "718ak": 301, "354aa": 301, "5c": 301, "ee": [301, 324, 446], "nb": [301, 445], "nx": 301, "ross": [301, 444, 446, 452, 458], "mcfluff": 301, "834": 301, "345": [301, 441, 446, 452], "155": 301, "elm": 301, "ronald": [301, 442, 443, 444, 451, 453, 458], "heathmor": 301, "892": 301, "3428": 301, "finlei": 301, "avenu": [301, 401, 439], "frank": 301, "burger": 301, "925": 301, "541": 301, "7625": 301, "662": 301, "dogwood": 301, "heather": 301, "albrecht": 301, "548": 301, "326": 301, "4584": 301, "919": 301, "park": 301, "telephon": 301, "hous": [301, 455], "inner_word": 301, "professor": [301, 323], "abdolmalek": 301, "poefsrosr": 301, "aealmlobdk": 301, "pslaee": 301, "reorpt": 301, "abnsec": 301, "plmrptoi": 301, "pofsros": 301, "aodlambelk": 301, "plase": 301, "reoprt": 301, "yuor": 301, "asnebc": 301, "potlmrpi": 301, "polic": 301, "02d": 301, "IF": [301, 401], "THEN": 301, "FOR": 301, "gosub": 301, "token_specif": 301, "tok_regex": 301, "line_start": 301, "inputrc": 302, "libedit": [302, 431], "editlin": [302, 431], "editrc": 302, "ON": [302, 401], "rl_complet": 302, "parse_and_bind": [302, 305], "rl_parse_and_bind": 302, "read_init_fil": [302, 305], "rl_read_init_fil": 302, "get_line_buff": [302, 305], "rl_line_buff": 302, "insert_text": [302, 305], "rl_insert_text": 302, "rl_redisplai": 302, "read_history_fil": 302, "read_histori": 302, "write_history_fil": 302, "write_histori": 302, "append_history_fil": [302, 454], "nelement": 302, "append_histori": 302, "get_history_length": 302, "set_history_length": 302, "history_truncate_fil": 302, "clear_histori": 302, "get_current_history_length": [302, 440], "get_history_item": [302, 440], "history_get": 302, "remove_history_item": 302, "remove_histori": 302, "replace_history_item": 302, "replace_history_entri": 302, "add_histori": 302, "set_auto_histori": [302, 455], "set_startup_hook": 302, "rl_startup_hook": 302, "set_pre_input_hook": 302, "rl_pre_input_hook": 302, "set_complet": [302, 305], "entry_func": 302, "rl_completion_match": 302, "rl_attempted_completion_funct": 302, "get_complet": 302, "get_completion_typ": 302, "rl_completion_typ": 302, "get_begidx": 302, "get_endidx": 302, "libreadlin": [302, 431], "set_completer_delim": 302, "get_completer_delim": 302, "rl_completer_word_break_charact": 302, "set_completion_display_matches_hook": 302, "rl_completion_display_matches_hook": 302, "longest_match_length": 302, "python_histori": [302, 316, 422], "histfil": 302, "unruli": 302, "h_len": 302, "prev_h_len": 302, "new_h_len": 302, "historyconsol": 302, "init_histori": 302, "save_histori": 302, "maxtupl": 303, "maxlist": 303, "maxarrai": 303, "maxdict": 303, "maxset": 303, "maxfrozenset": 303, "maxdequ": 303, "maxstr": 303, "maxlong": 303, "maxoth": 303, "arepr": 303, "repr1": 303, "repr_typ": 303, "subobj": 303, "myrepr": 303, "repr_textiowrapp": 303, "getrlimit": 304, "rlim_infin": 304, "rlimit_nofil": 304, "cap_sys_resourc": 304, "rlimit_cor": [304, 340], "rlimit_cpu": 304, "sigxcpu": 304, "rlimit_fs": 304, "rlimit_data": 304, "rlimit_stack": 304, "rlimit_rss": 304, "rlimit_nproc": 304, "rlimit_ofil": 304, "rlimit_memlock": 304, "rlimit_vmem": 304, "rlimit_a": 304, "rlimit_msgqueu": [304, 453], "rlimit_nic": [304, 453], "rlim_cur": 304, "rlimit_rtprio": [304, 453], "rlimit_rttim": [304, 453], "rlimit_sigpend": [304, 453], "rlimit_sbs": [304, 453], "mbuf": 304, "rlimit_swap": [304, 453], "overcommit": 304, "sysctl": 304, "rlimit_npt": [304, 453], "rlimit_kqueu": 304, "kqueue": [304, 311, 443, 454], "rusage_": 304, "rusage_self": 304, "ru_utim": 304, "ru_stim": 304, "ru_maxrss": 304, "ru_ixrss": 304, "ru_idrss": 304, "ru_isrss": 304, "ru_minflt": 304, "ru_majflt": 304, "ru_nswap": 304, "ru_inblock": 304, "ru_oublock": 304, "ru_msgsnd": 304, "ru_msgrcv": 304, "ru_nsign": 304, "ru_nvcsw": 304, "voluntari": 304, "ru_nivcsw": 304, "involuntari": 304, "getpages": [304, 450], "rusage_children": 304, "rusage_both": 304, "rusage_thread": 304, "mod_nam": 306, "init_glob": 306, "run_nam": 306, "alter_si": 306, "run_path": [306, 430, 444], "path_nam": 306, "338": [306, 407, 430], "snow": [306, 448, 449, 452, 453, 454, 455, 456, 457], "timefunc": [307, 452], "delayfunc": 307, "print_tim": 307, "print_some_tim": 307, "enterab": [307, 452], "1_650_000_000": 307, "1652342830": 307, "3640375": 307, "3642538": 307, "3643398": 307, "1652342835": 307, "3694863": 307, "3696074": 307, "1652342840": 307, "369612": 307, "3697174": 307, "soonest": [307, 452], "randbelow": 308, "randbit": 308, "xebr": 308, "x17d": 308, "xae": 308, "xd4": 308, "xe3": [308, 443], "xb6": 308, "xe2": [308, 443], "xebp1": 308, "x8b": 308, "token_hex": 308, "f9bf78b9a18ce6d46a0cd2b0b86df9da": 308, "token_urlsaf": 308, "drmhze6epcv0fn_81bj": 308, "token_": 308, "xkcd": 308, "passphras": 308, "mktemp": [309, 338, 372], "devpol": [310, 311, 452, 453, 454], "epoll_create1": 310, "epoll_cloexec": 310, "kq_filter_read": 310, "kq_ev_add": 310, "fflag": 310, "udata": 310, "rlist": 310, "wlist": 310, "xlist": 310, "parameterless": [310, 415], "winsock": [310, 318], "pipe_buf": [310, 451], "eventmask": [310, 443], "pollin": 310, "pollpri": 310, "pollout": 310, "die": 310, "epollin": 310, "epollout": 310, "epollpri": 310, "urgent": 310, "epollerr": 310, "assoc": 310, "epollhup": 310, "epollet": 310, "epolloneshot": 310, "epollexclus": 310, "epollrdhup": 310, "epollrdnorm": 310, "epollrdband": 310, "band": 310, "epollwrnorm": 310, "epollwrband": 310, "epollmsg": 310, "fromfd": [310, 318], "maxev": 310, "scalabl": [310, 437], "pollerr": 310, "pollhup": 310, "hung": 310, "pollrdhup": 310, "pollnval": 310, "changelist": 310, "max_ev": 310, "eventlist": 310, "sektion": 310, "kq_filter_writ": 310, "kq_filter_aio": 310, "aio": 310, "kq_filter_vnod": 310, "kq_filter_proc": 310, "kq_filter_netdev": 310, "kq_filter_sign": 310, "kq_filter_tim": 310, "kq_ev_delet": 310, "kq_ev_en": 310, "permitscontrol": 310, "kq_ev_dis": 310, "disablesev": 310, "kq_ev_oneshot": 310, "kq_ev_clear": 310, "kq_ev_sysflag": 310, "kq_ev_flag1": 310, "kq_ev_eof": 310, "kq_ev_error": 310, "kq_note_lowat": 310, "kq_note_delet": 310, "kq_note_writ": 310, "kq_note_extend": 310, "kq_note_attrib": 310, "kq_note_link": 310, "kq_note_renam": 310, "kq_note_revok": 310, "revok": 310, "kq_note_exit": 310, "kq_note_fork": 310, "kq_note_exec": 310, "kq_note_pctrlmask": 310, "kq_note_pdatamask": 310, "kq_note_track": 310, "kq_note_child": 310, "note_track": 310, "kq_note_trackerr": 310, "kq_note_linkup": 310, "kq_note_linkdown": 310, "kq_note_linkinv": 310, "baseselector": 311, "epollselector": [311, 456], "defaultselector": [311, 315], "devpollselector": [311, 454, 456], "event_read": [311, 315], "event_writ": 311, "selectorkei": 311, "get_kei": 311, "get_map": 311, "epol": [311, 443, 453, 454, 458], "sel": [311, 315], "shelf": [312, 324, 451, 453], "writeback": 312, "handier": 312, "ndbm": [312, 403, 431, 450, 457], "keyencod": 312, "bsddbshelf": [312, 324], "set_loc": 312, "bsddb": [312, 440, 443, 444], "pybsddb": [312, 440, 443, 444, 445], "hashopen": 312, "btopen": 312, "rnopen": 312, "dbfilenameshelf": [312, 324], "klist": 312, "BUT": [312, 401], "minilanguag": 313, "split_command": 313, "boom": [313, 366, 367], "plug": 313, "remote_command": 313, "ssh": [313, 314, 371], "instream": 313, "punctuation_char": [313, 455], "wordchar": 313, "ini": [313, 451], "get_token": 313, "push_token": 313, "read_token": 313, "pushback": 313, "sourcehook": 313, "push_sourc": 313, "pop_sourc": 313, "newstream": 313, "newfil": 313, "lexer": 313, "error_lead": 313, "whitespace_split": 313, "escapedquot": 313, "donotsepar": 313, "fsrc": 314, "fdst": 314, "uncontrol": 314, "samefileerror": [314, 453], "ignore_pattern": [314, 340, 443], "copy_funct": [314, 451, 454], "ignore_dangling_symlink": [314, 451], "dirs_exist_ok": [314, 457], "onexc": [314, 449, 450], "suscept": [314, 436], "avoids_symlink_attack": 314, "excinfo": 314, "mv": [314, 452], "disk_usag": [314, 452], "needcurrentdirectoryforexepathw": [314, 449], "nodefaultcurrentdirectoryinexepath": 314, "python33": 314, "srcname": 314, "33671": [314, 457], "userspac": [314, 452, 457], "outfd": [314, 457], "infd": [314, 457], "fcopyfil": 314, "_logpath": 314, "reattempt": 314, "remove_readonli": 314, "xztar": [314, 454], "dry_run": [314, 340], "gztar": [314, 451, 455], "bztar": [314, 451], "register_archive_format": [314, 451], "pax": [314, 337, 443, 457], "get_archive_format": [314, 451], "extra_arg": [314, 451], "supports_root_dir": 314, "unregister_archive_format": 314, "register_unpack_format": 314, "get_unpack_format": 314, "unregister_unpack_format": 314, "archive_nam": 314, "myarchiv": [314, 427, 451], "tarek": [314, 334, 443, 444, 451, 454], "tzvf": 314, "drwx": 314, "609": 314, "authorized_kei": 314, "id_dsa": 314, "1675": 314, "id_rsa": 314, "397": [314, 436, 454], "37192": 314, "known_host": 314, "please_add": 314, "do_not_add": 314, "my_arch": 314, "air": 315, "sigmask": 315, "sig_block": 315, "sig_unblock": 315, "sig_setmask": 315, "getsign": 315, "pthread_sigmask": [315, 452], "sigpend": [315, 452], "sigwait": [315, 452], "ctrl_": 315, "sigprocmask": 315, "sigquit": [315, 328], "sigalrm": 315, "sigbreak": 315, "bu": [315, 381], "sigcld": 315, "sighup": 315, "hangup": 315, "death": [315, 452], "sigstkflt": 315, "coprocessor": 315, "sigusr1": 315, "sigusr2": 315, "nsig": 315, "valid_sign": 315, "itimer_r": 315, "itimer_virtu": 315, "sigvtalrm": 315, "itimer_prof": 315, "sigprof": 315, "itimererror": 315, "setitim": [315, 443, 450], "getitim": [315, 443], "strsignal": 315, "sigwaitinfo": [315, 452, 454], "sigtimedwait": [315, 452, 454], "pidfd_send_sign": [315, 458], "siginfo": 315, "sigstop": 315, "warn_on_full_buff": [315, 456], "wakeup": [315, 452, 456], "siginterrupt": [315, 443, 452], "sigset": 315, "si_errno": 315, "si_band": 315, "ttys0": 315, "spamcontext": 315, "exc_val": [315, 324], "interrupt_read": 315, "interrupt_writ": 315, "subsubdirectori": 316, "bletch": 316, "sitecustom": [316, 333, 413, 444, 453], "usercustom": [316, 333, 413, 453], "enable_user_sit": 316, "__interactivehook__": [316, 331, 425, 430, 453], "user_sit": 316, "getusersitepackag": [316, 413, 444, 451], "appdata": [316, 436, 443], "user_bas": [316, 444], "getuserbas": [316, 444, 451], "pythonuserbas": [316, 430, 443], "addsitedir": 316, "sitedir": 316, "known_path": 316, "getsitepackag": [316, 444, 451], "370": [316, 430, 445], "esmtp": 317, "821": 317, "1869": 317, "local_hostnam": 317, "fqdn": 317, "helo": 317, "ehlo": [317, 452], "getfqdn": [317, 318], "smtpconnecterror": 317, "smtp_ssl": [317, 443, 452, 458], "465": 317, "lmtp": [317, 443, 452, 458], "lmtp_port": 317, "smtpexcept": [317, 453], "smtpserverdisconnect": 317, "smtpresponseexcept": 317, "smtp_code": 317, "smtp_error": 317, "smtpsenderrefus": 317, "smtprecipientsrefus": 317, "smtpdataerror": 317, "smtpheloerror": 317, "smtpnotsupportederror": 317, "smtpauthenticationerror": 317, "docmd": 317, "helo_resp": 317, "has_extn": 317, "ehlo_resp": 317, "does_esmtp": 317, "esmtp_featur": 317, "ehlo_or_helo_if_need": 317, "vrfy": 317, "foil": 317, "spammer": 317, "initial_response_ok": 317, "4954": 317, "auth_cram_md5": 317, "auth_plain": 317, "auth_login": 317, "from_addr": [317, 451], "to_addr": [317, 451], "mail_opt": [317, 454], "rcpt_option": 317, "8bitmim": [317, 454], "dsn": 317, "rcpt": 317, "smtpnotsupport": 317, "transliter": 318, "dare": 318, "inaddr_ani": 318, "inaddr_broadcast": 318, "flowinfo": 318, "sin6_flowinfo": 318, "sin6_scope_id": 318, "sockaddr_in6": 318, "af_netlink": [318, 442], "tipc": [318, 443], "af_tipc": 318, "addr_typ": 318, "v1": [318, 327], "v2": [318, 327, 401, 442, 443], "tipc_addr_nameseq": 318, "tipc_addr_nam": 318, "tipc_addr_id": 318, "tipc_zone_scop": 318, "tipc_cluster_scop": 318, "tipc_node_scop": 318, "af_can": 318, "can0": 318, "can_isotp": 318, "rx_addr": 318, "tx_addr": 318, "can_j1939": [318, 458], "pgn": 318, "ecu": 318, "sysproto_control": 318, "pf_system": [318, 452], "af_bluetooth": 318, "btproto_l2cap": 318, "bdaddr": 318, "psm": 318, "bluetooth": 318, "btproto_rfcomm": 318, "btproto_hci": 318, "device_id": 318, "btproto_sco": 318, "af_alg": [318, 455], "feat": 318, "aead": [318, 321], "skcipher": 318, "rng": 318, "drbg_nopr_ctr_aes256": 318, "32bit": [318, 439], "af_vsock": [318, 456], "vsock": 318, "af_packet": 318, "ifnam": 318, "pkttype": 318, "hatyp": 318, "ethernet": 318, "eth_p_al": 318, "ethertype_": 318, "packet_host": 318, "packet_broadcast": 318, "packet_multicast": 318, "packet_otherhost": 318, "promiscu": 318, "packet_outgo": 318, "arp": 318, "af_qipcrtr": 318, "qualcomm": 318, "ipproto_udplit": 318, "setsockopt": [318, 321, 444, 455], "udplite_send_cscov": 318, "udplite_recv_cscov": 318, "af_hyperv": 318, "hyper": 318, "vm_id": 318, "service_id": 318, "vmid": 318, "hv_guid_zero": 318, "hv_guid_broadcast": 318, "hv_guid_wildcard": 318, "hv_guid_children": 318, "hv_guid_loopback": 318, "hv_guid_par": 318, "v6": 318, "nondeterminist": 318, "settimeout": [318, 321, 372, 440], "herror": 318, "h_errno": 318, "gethostbyname_ex": 318, "hstrerror": 318, "gaierror": 318, "gai_strerror": 318, "eai_": 318, "af_": [318, 453], "sock_": [318, 453], "addressfamili": 318, "socketkind": 318, "sock_raw": 318, "sock_rdm": 318, "sock_seqpacket": 318, "sock_cloexec": [318, 456], "sock_nonblock": [318, 456], "so_": 318, "somaxconn": [318, 454], "msg_": 318, "sol_": 318, "scm_": 318, "ipproto_": 318, "ipport_": 318, "inaddr_": 318, "ip_": 318, "ipv6_": 318, "ai_": 318, "ni_": 318, "tcp_": 318, "so_domain": [318, 455], "so_protocol": [318, 455], "so_peersec": [318, 455], "so_passsec": [318, 455], "tcp_user_timeout": [318, 455, 456], "tcp_congest": [318, 455, 456], "tcp_fastopen": 318, "tcp_keepcnt": 318, "tcp_notsent_lowat": [318, 456], "tcp_keepidl": 318, "tcp_keepintvl": 318, "ip_recvto": [318, 447], "tcp_keepal": 318, "tcp_connection_info": 318, "tcp_info": 318, "so_rtabl": 318, "so_user_cooki": 318, "so_mark": 318, "tcp_md5sig": 318, "tcp_thin_linear_timeout": 318, "tcp_thin_dupack": 318, "tcp_repair": 318, "tcp_repair_queu": 318, "tcp_queue_seq": 318, "tcp_repair_opt": 318, "tcp_timestamp": 318, "tcp_cc_info": 318, "tcp_save_syn": 318, "tcp_saved_syn": 318, "tcp_repair_window": 318, "tcp_fastopen_connect": 318, "tcp_ulp": 318, "tcp_md5sig_ext": 318, "tcp_fastopen_kei": 318, "tcp_fastopen_no_cooki": 318, "tcp_zerocopy_rec": 318, "tcp_inq": 318, "tcp_tx_delai": 318, "ip_pktinfo": 318, "ip_unblock_sourc": 318, "ip_block_sourc": 318, "ip_add_source_membership": 318, "ip_drop_source_membership": 318, "pf_can": [318, 452], "sol_can_": 318, "can_": 318, "can_bcm": [318, 453], "can_bcm_": 318, "bcm": 318, "can_bcm_can_fd_fram": 318, "can_raw_fd_fram": [318, 454], "can_raw": 318, "can_raw_join_filt": [318, 458], "tp": [318, 340, 361, 363], "15765": 318, "sae": 318, "j1939": 318, "af_divert": 318, "pf_divert": 318, "divert": 318, "pf_packet": 318, "packet_": 318, "af_rd": 318, "pf_rd": [318, 452], "sol_rd": 318, "rds_": 318, "sio_rcval": 318, "sio_keepalive_v": 318, "sio_loopback_fast_path": [318, 455], "rcvall_": 318, "wsaioctl": [318, 443], "tipc_": 318, "sol_alg": [318, 455], "alg_": [318, 455], "ioctl_vm_sockets_get_local_cid": 318, "vmaddr": 318, "so_vm": 318, "af_link": [318, 453], "has_ipv6": 318, "bdaddr_ani": 318, "bdaddr_loc": 318, "hci_filt": 318, "hci_time_stamp": 318, "hci_data_dir": 318, "scm_creds2": 318, "local_cr": 318, "local_creds_persist": 318, "so_passcr": 318, "so_incoming_cpu": 318, "hv_protocol_raw": 318, "hvsocket_connect_timeout": 318, "hvsocket_connect_timeout_max": 318, "hvsocket_connected_suspend": 318, "hvsocket_address_flag_passthru": 318, "ethertype_arp": 318, "ethertype_ip": 318, "ethertype_ipv6": 318, "ethertype_vlan": 318, "802": 318, "overrul": 318, "ipproto_mptcp": [318, 447], "global_default": 318, "getdefaulttimeout": 318, "dualstack_ipv6": 318, "has_dualstack_ipv6": [318, 457], "fromshar": [318, 456], "sockettyp": 318, "ai_numerichost": 318, "canonnam": 318, "ai_canonnam": 318, "ipproto_tcp": 318, "2606": 318, "2800": 318, "220": [318, 321, 416], "248": 318, "1893": 318, "25c8": 318, "1946": 318, "93": [318, 457, 458], "184": 318, "216": [318, 421, 424], "aliaslist": 318, "ipaddrlist": 318, "getprotobynam": 318, "icmp": 318, "inet_aton": [318, 457, 458], "ip_str": 318, "quad": [318, 439], "in_addr": 318, "inet_ntoa": 318, "packed_ip": 318, "inet_ntop": [318, 453], "address_famili": [318, 319], "in6_addr": 318, "5aef": 318, "2b": [318, 455], "cmsg_len": 318, "ancillari": [318, 452], "recvmsg": [318, 452, 454], "3542": 318, "cmsg_space": 318, "if_nameindex": [318, 457], "fb605b73": 318, "aac2": 318, "49a6": 318, "9a2f": 318, "25416aea0573": 318, "ethernet_32770": 318, "vethernet": 318, "if_nametoindex": [318, 457], "if_nam": 318, "if_indextonam": [318, 457], "if_index": 318, "send_fd": [318, 458], "scm_right": 318, "recv_fd": [318, 458], "maxfd": 318, "optnam": [318, 455], "getblock": [318, 456], "gettimeout": [318, 321], "ancbufs": 318, "ancdata": 318, "msg_flag": 318, "cmsg_level": 318, "cmsg_type": 318, "cmsg_data": 318, "unconnect": [318, 443], "sol_socket": 318, "recvmsg_into": [318, 452], "scatter": [318, 439, 440, 444], "b1": [318, 361], "b2": [318, 361], "0123456789": [318, 324, 325], "b3": 318, "lamb": [318, 416], "sendmsg_afalg": [318, 455], "iv": 318, "assoclen": 318, "optlen": [318, 455], "optval": 318, "halv": [318, 441, 444], "shut_rd": 318, "shut_wr": 318, "shut_rdwr": [318, 321], "50007": 318, "af": 318, "ipproto_ip": 318, "ip_hdrincl": 318, "rcvall_on": 318, "65565": 318, "rcvall_off": 318, "can_fram": 318, "can_frame_fmt": 318, "ib3x8": 318, "can_frame_s": 318, "build_can_fram": 318, "can_id": 318, "can_dlc": 318, "ljust": [318, 324, 421, 441, 452], "dissect_can_fram": 318, "vcan0": 318, "3bsd": 318, "stuart": 318, "sechrest": 318, "leffler": 318, "3493": 318, "bind_and_activ": [319, 395, 443], "server_bind": [319, 395, 443], "server_activ": [319, 395, 443], "baseserv": [319, 452], "unixstreamserv": 319, "unixdatagramserv": 319, "infrequ": 319, "forkingmixin": [319, 452, 456], "baserequesthandl": 319, "server_clos": [319, 383, 456], "abrupt": 319, "daemon_thread": 319, "autonom": [319, 401], "threadingudpserv": 319, "block_on_clos": [319, 456], "forkingtcpserv": 319, "forkingudpserv": 319, "forkingunixstreamserv": 319, "forkingunixdatagramserv": 319, "threadingunixstreamserv": 319, "threadingunixdatagramserv": 319, "datagramrequesthandl": 319, "deaf": [319, 451], "get_request": 319, "verify_request": 319, "handle_error": [319, 455], "handle_timeout": [319, 443, 444], "poll_interv": 319, "service_act": [319, 452], "request_queue_s": 319, "socket_typ": 319, "finish_request": 319, "mytcphandl": 319, "tcpclient": 319, "myudphandl": 319, "threadedtcprequesthandl": 319, "cur_thread": 319, "threadedtcpserv": 319, "server_thread": 319, "nonstandard": [320, 426, 431, 442], "postgresql": [320, 442], "gerhard": [320, 439, 442, 443, 444], "h\u00e4ring": [320, 439, 442, 443, 444], "249": [320, 442, 449], "dialect": [320, 440, 442, 451], "w3school": 320, "sqlite_mast": 320, "executemani": [320, 450], "hollywood": 320, "bowl": 320, "1982": [320, 323, 344], "1983": [320, 323], "brian": [320, 409, 437, 440, 441, 443, 444, 451, 452, 453, 456], "1979": [320, 323], "new_con": 320, "new_cur": 320, "detect_typ": 320, "check_same_thread": 320, "cached_stat": 320, "legacy_transaction_control": 320, "operationalerror": 320, "register_convert": 320, "parse_decltyp": 320, "parse_colnam": 320, "programmingerror": [320, 448, 449], "threadsafeti": [320, 448], "complete_stat": 320, "enable_callback_traceback": 320, "evil_trac": 320, "set_trace_callback": [320, 450, 452], "exc_valu": [320, 331, 340, 343, 358, 403, 444, 445, 448], "register_adapt": 320, "sqlite_ok": 320, "sqlite_deni": 320, "sqlite_ignor": 320, "authorizer_callback": 320, "set_author": [320, 448, 450], "apilevel": 320, "paramstyl": 320, "qmark": 320, "sqlite_vers": 320, "sqlite_version_info": 320, "sqlite_threadsaf": 320, "pysqlit": [320, 442, 444, 451], "sqlite_dbconfig_defens": 320, "sqlite_dbconfig_dqs_ddl": 320, "sqlite_dbconfig_dqs_dml": 320, "sqlite_dbconfig_enable_fkei": 320, "sqlite_dbconfig_enable_fts3_token": 320, "sqlite_dbconfig_enable_load_extens": 320, "sqlite_dbconfig_enable_qpsg": 320, "sqlite_dbconfig_enable_trigg": 320, "sqlite_dbconfig_enable_view": 320, "sqlite_dbconfig_legacy_alter_t": 320, "sqlite_dbconfig_legacy_file_format": 320, "sqlite_dbconfig_no_ckpt_on_clos": 320, "sqlite_dbconfig_reset_databas": 320, "sqlite_dbconfig_trigger_eqp": 320, "sqlite_dbconfig_trusted_schema": 320, "sqlite_dbconfig_writable_schema": 320, "setconfig": [320, 449], "getconfig": [320, 449], "c3ref": 320, "c_dbconfig_defens": 320, "blobopen": [320, 448], "rowid": 320, "zeroblob": 320, "rollback": [320, 442, 443, 448], "executescript": 320, "sql_script": 320, "create_funct": [320, 450], "md5sum": 320, "acbd18db4cc2f85cedef654fccc4a4d8": 320, "create_aggreg": [320, 450], "n_arg": 320, "aggregate_class": 320, "mysum": 320, "create_window_funct": [320, 448], "num_param": 320, "notsupportederror": 320, "windowfunct": 320, "udfwinfunc": 320, "windowsumint": 320, "sumint": 320, "AS": [320, 401], "sum_i": 320, "create_col": [320, 448], "collate_revers": 320, "4th": 320, "5th": 320, "set_progress_handl": [320, 450], "progress_handl": 320, "databaseerror": 320, "trace_callback": 320, "fulltext": [320, 451], "fts3": 320, "ingredi": 320, "broccoli": 320, "stew": 320, "pepper": 320, "chees": [320, 416, 429], "pumpkin": 320, "onion": 320, "garlic": 320, "celeri": 320, "flour": 320, "butter": 320, "iterdump": 320, "getlimit": [320, 448], "1000000000": 320, "sqlite_limit_sql_length": 320, "setlimit": [320, 448], "sqlite_limit_attach": 320, "sqlite_dbconfig": 320, "in_transact": 320, "uncommit": [320, 451], "row_factori": 320, "text_factori": 320, "austria": [320, 388], "\u00f6sterreich": 320, "barfoo": 320, "total_chang": 320, "dml": 320, "row1": 320, "row2": 320, "fetchmani": 320, "arrays": 320, "setinputs": 320, "setoutputs": 320, "lastrowid": [320, 455], "rowcount": 320, "blob_col": 320, "246": [320, 443], "sqlite_errorcod": [320, 448], "sqlite_errornam": [320, 448], "interfaceerror": [320, 448], "dataerror": 320, "integrityerror": 320, "internalerror": 320, "stock": [320, 442, 451], "first_appear": 320, "1957": 320, "__conform__": 320, "adapt_point": 320, "convert_point": 320, "adapt_date_iso": 320, "adapt_datetime_iso": 320, "adapt_datetime_epoch": 320, "convert_d": 320, "convert_datetim": 320, "convert_timestamp": 320, "1985": 320, "1984": 320, "varchar": 320, "nosuchdb": 320, "mem1": 320, "con1": 320, "con2": 320, "6378": 320, "namedtuple_factori": 320, "ddl": [320, 455], "tlsv1": [321, 450, 453], "get_verified_chain": 321, "get_unverified_chain": 321, "wrap_socket": [321, 443, 444, 447, 449, 451, 456], "644": [321, 447, 449], "ssock": 321, "protocol_tls_cli": [321, 447], "cert": [321, 435, 444, 453], "load_verify_loc": [321, 453], "cabundl": 321, "pem": [321, 435, 453], "protocol_tls_serv": [321, 447], "load_cert_chain": [321, 450, 452], "certchain": 321, "8443": 321, "server_auth": [321, 453], "cafil": [321, 372, 444, 450, 453], "capath": [321, 372, 450, 453], "cadata": [321, 453], "op_no_sslv2": [321, 447, 451], "op_no_sslv3": [321, 447], "rc4": 321, "verify_mod": 321, "cert_requir": 321, "load_default_cert": [321, 453], "keylog_filenam": 321, "sslkeylogfil": 321, "ssl3": 321, "client_auth": [321, 453], "chacha20": [321, 455], "poly1305": [321, 455], "protocol_tl": [321, 447, 450], "sslerror": [321, 451], "superimpos": 321, "x509": [321, 372], "certificate_verify_fail": 321, "sslzeroreturnerror": 321, "sslwantreaderror": [321, 454], "sslwantwriteerror": [321, 454], "sslsyscallerror": 321, "ssleoferror": 321, "sslcertverificationerror": [321, 456], "verify_cod": 321, "verify_messag": 321, "certificateerror": 321, "rand_byt": [321, 449, 452], "prng": 321, "rand_statu": 321, "rand_add": 321, "csprng": 321, "rand_egd": [321, 447], "1750": 321, "cert_time_to_second": [321, 454], "cert_tim": 321, "notbefor": 321, "notaft": 321, "2018": [321, 448, 456], "1515144883": 321, "5280": [321, 454], "get_server_certif": [321, 447, 452], "ca_cert": 321, "protocol_sslv3": [321, 447, 450], "der_cert_to_pem_cert": 321, "der_cert_byt": 321, "der": [321, 374, 443, 453], "blob": [321, 367, 448], "pem_cert_to_der_cert": 321, "pem_cert_str": 321, "get_default_verify_path": [321, 453], "set_default_verify_path": [321, 453], "defaultverifypath": 321, "openssl_cafile_env": 321, "openssl_cafil": 321, "openssl_capath_env": 321, "openssl_capath": 321, "enum_certif": [321, 453], "cert_byt": 321, "encoding_typ": 321, "x509_asn": 321, "509": [321, 443, 453], "asn": 321, "pkcs_7_asn": 321, "oid": [321, 374, 378], "trustworthi": 321, "enum_crl": [321, 453], "crl": [321, 453], "cert_non": 321, "cert_opt": 321, "verifymod": 321, "cert_": 321, "verify_default": [321, 453], "verify_flag": [321, 453], "revoc": [321, 453], "verify_crl_check_leaf": [321, 453], "issuer": 321, "verify_crl_check_chain": [321, 453], "verify_x509_strict": [321, 453], "verify_allow_proxy_cert": 321, "verify_x509_trusted_first": 321, "verify_x509_partial_chain": [321, 447], "verifyflag": 321, "verify_": 321, "minimum_vers": [321, 447, 456], "maximum_vers": [321, 447, 456], "protocol_tlsv1": [321, 447, 450], "protocol_tlsv1_1": [321, 447, 450, 453], "protocol_tlsv1_2": [321, 447, 450, 453], "op_al": 321, "ssl_op_al": 321, "sslv2": [321, 451], "sslv3": [321, 450, 452, 454], "op_no_tlsv1": [321, 447], "op_no_tlsv1_1": [321, 447], "op_no_tlsv1_2": [321, 447], "op_no_tlsv1_3": [321, 447], "op_no_renegoti": 321, "renegoti": [321, 444], "hellorequest": 321, "clienthello": 321, "0h": 321, "op_cipher_server_prefer": [321, 452], "op_single_dh_us": 321, "dh": [321, 447], "secreci": [321, 447], "op_single_ecdh_us": 321, "ecdh": 321, "op_enable_middlebox_compat": 321, "op_no_compress": [321, 452], "op_": 321, "op_no_ticket": 321, "ticket": 321, "op_ignore_unexpected_eof": [321, 447], "op_enable_ktl": 321, "op_legacy_server_connect": 321, "unpatch": [321, 366, 397], "has_alpn": [321, 454], "7301": [321, 444, 451, 454], "has_never_check_common_nam": 321, "hostname_checks_common_nam": [321, 456], "has_ecdh": 321, "ellipt": [321, 452], "diffi": [321, 452], "hellman": [321, 452], "6066": 321, "has_npn": 321, "set_npn_protocol": [321, 447, 450, 452], "has_sslv2": 321, "has_sslv3": 321, "has_tlsv1": 321, "has_tlsv1_1": [321, 456], "has_tlsv1_2": 321, "has_tlsv1_3": 321, "channel_binding_typ": 321, "get_channel_bind": [321, 452], "openssl_vers": [321, 444, 451], "2k": 321, "openssl_version_info": [321, 444, 451], "openssl_version_numb": [321, 444, 451], "268443839": 321, "0x100020bf": 321, "alert_description_handshake_failur": 321, "alert_description_internal_error": 321, "alert_description_": 321, "5246": 321, "set_servername_callback": [321, 453], "alertdescript": 321, "sslerrornumb": 321, "ssl_error_": 321, "tlsversion": [321, 450], "minimum_support": 321, "maximum_support": 321, "tlsv1_1": [321, 450], "tlsv1_2": 321, "tlsv1_3": 321, "atop": [321, 442, 443], "diverg": [321, 439], "ssl_read_ex": 321, "ssl_write_ex": 321, "unencrypt": 321, "do_handshak": [321, 453, 454], "match_hostnam": [321, 447, 449, 451, 453, 454, 456], "binary_form": 321, "3280": 321, "subjectaltnam": 321, "rdn": 321, "countrynam": 321, "organizationnam": 321, "startcom": 321, "organizationalunitnam": 321, "commonnam": 321, "serialnumb": 321, "95f0": 321, "571208": 321, "sle257ohy9fvq07z": 321, "stateorprovincenam": 321, "california": [321, 401], "localitynam": 321, "san": [321, 373], "francisco": [321, 373], "electron": [321, 401], "frontier": 321, "eff": 321, "emailaddress": 321, "hostmast": 321, "x509v3": [321, 453], "crldistributionpoint": [321, 453], "caissuer": 321, "ocsp": [321, 453], "shared_ciph": [321, 454], "cb_type": 321, "5929": 321, "selected_alpn_protocol": [321, 454], "selected_npn_protocol": [321, 447, 450], "npn": [321, 447], "verify_client_post_handshak": [321, 457], "pha": 321, "certificaterequest": 321, "pythn": [321, 456], "pyth\u00f6n": [321, 456], "sslsession": [321, 455], "session_reus": 321, "protocol_": 321, "sslv23": 321, "ecc": [321, 447], "224": [321, 442], "cert_store_stat": [321, 453], "x509_ca": 321, "get_ca_cert": [321, 453], "get_ciph": [321, 455], "set_ciph": 321, "aesgcm": 321, "ecdsa": [321, 451], "alg_bit": 321, "aes256": 321, "gcm": 321, "kx": 321, "50380848": 321, "kea": 321, "strength_bit": 321, "aes128": 321, "50380847": 321, "spdy": 321, "agre": [321, 327, 401], "sni_callback": 321, "openssl_no_tlsext": 321, "server_name_callback": 321, "load_dh_param": [321, 452], "dhfile": 321, "set_ecdh_curv": [321, 452], "curve_nam": 321, "prime256v1": 321, "vincent": [321, 448, 454, 455], "bernat": 321, "do_handshake_on_connect": 321, "suppress_ragged_eof": 321, "sslsocket_class": 321, "sni": [321, 449, 453, 456], "wrap_bio": [321, 454, 456], "sslobject_class": 321, "session_stat": 321, "ssl_sock": 321, "verisign": 321, "keylog": 321, "nss": 321, "wireshark": 321, "num_ticket": 321, "2197947391": 321, "op_no_ssl": [321, 450], "op_no_tl": [321, 450], "1k": 321, "security_level": 321, "1422": 321, "agenc": [321, 401], "bui": [321, 442], "keyout": 321, "provinc": 321, "mystat": 321, "widgit": 321, "myserv": 321, "myorgan": 321, "digicert": 321, "cacert": 321, "digicertsha2extendedvalidationserverca": 321, "crl3": 321, "g1": [321, 361], "crl4": 321, "01bb6f00122b177f36cab49cea8b6b26": 321, "businesscategori": 321, "311": 321, "delawar": 321, "3359300": 321, "streetaddress": 321, "postalcod": 321, "03894": 321, "4801": 321, "nh": 321, "wolfeboro": 321, "testpypi": 321, "pythonhost": 321, "nhost": 321, "linuxfr": 321, "nginx": 321, "sameorigin": 321, "45679": 321, "varnish": 321, "2188": 321, "lcy1134": 321, "lcy": 321, "63072000": 321, "includesubdomain": 321, "mycertfil": 321, "mykeyfil": 321, "bindsocket": 321, "myaddr": 321, "10023": 321, "newsocket": 321, "connstream": 321, "deal_with_cli": 321, "memorybio": [321, 454], "ticket_lifetime_hint": 321, "has_ticket": 321, "client_context": 321, "disjunct": [321, 406], "rekei": 321, "steve": [321, 438, 443, 449, 454, 455, 456, 457, 458], "4086": 321, "schiller": 321, "dierk": 321, "eastlak": 321, "7525": 321, "dtl": 321, "s_ischr": 322, "s_isblk": 322, "s_isreg": 322, "s_isfifo": 322, "s_islnk": 322, "s_issock": 322, "s_isdoor": 322, "s_isport": 322, "s_iswht": 322, "whiteout": 322, "s_imod": 322, "s_ifmt": 322, "s_i": 322, "walktre": 322, "visitfil": 322, "rwxrwxrwx": [322, 452], "s_ifdoor": [322, 453], "s_ifport": [322, 453], "s_ifwht": [322, 453], "s_ifsock": 322, "s_iflnk": [322, 457], "s_ifdir": 322, "v7": [322, 337], "file_attribute_compress": 322, "file_attribute_devic": 322, "file_attribute_directori": 322, "file_attribute_encrypt": 322, "file_attribute_hidden": 322, "file_attribute_integrity_stream": 322, "file_attribute_norm": 322, "file_attribute_not_content_index": 322, "file_attribute_no_scrub_data": 322, "file_attribute_offlin": 322, "file_attribute_readonli": 322, "file_attribute_sparse_fil": 322, "file_attribute_system": 322, "file_attribute_temporari": 322, "file_attribute_virtu": 322, "io_reparse_tag_symlink": 322, "io_reparse_tag_mount_point": 322, "io_reparse_tag_appexeclink": 322, "competitor": 323, "scipi": [323, 419, 426, 429, 436], "statistician": 323, "minitab": 323, "matlab": 323, "input_data": 323, "median_low": 323, "median_high": 323, "median_group": 323, "multimod": [323, 457], "geometric_mean": [323, 457], "harmonic_mean": [323, 455], "harmon": 323, "50th": 323, "percentil": [323, 457], "pstdev": 323, "pvarianc": 323, "varianc": [323, 363, 426, 448, 449, 453, 455, 457], "covari": [323, 363, 447], "pearson": [323, 447], "spearman": [323, 449], "linear_regress": [323, 447], "slope": 323, "statisticserror": 323, "625": [323, 419, 457], "5625": [323, 424], "outlier": 323, "tendenc": 323, "unbias": 323, "\u03bc": 323, "quizz": 323, "homework": 323, "midterm": 323, "92": [323, 457, 458], "83": [323, 359, 426, 453], "reciproc": 323, "travel": [323, 361], "journei": 323, "interpol": [323, 324, 405, 421, 451, 454, 455], "frederick": 323, "gravett": 323, "wallnau": 323, "8th": 323, "ssmedian": 323, "gnumer": 323, "aabbbbccddddeeffffgg": 323, "986893273527251": 323, "dispers": 323, "815": 323, "\u03c3\u00b2": 323, "s\u00b2": 323, "freedom": [323, 388, 411], "xbar": 323, "0810874155219827": 323, "3720238095238095": [323, 426], "01875": 323, "108": [323, 359, 436], "bessel": 323, "decil": [323, 457], "0th": 323, "100th": 323, "empir": 323, "129": 323, "109": [323, 359, 436], "119": [323, 359, 457], "121": [323, 444], "107": [323, 436], "joint": [323, 401], "kepler": 323, "planetari": 323, "orbital_period": 323, "225": [323, 361, 437], "687": 323, "4331": [323, 453], "10_756": 323, "30_687": 323, "60_190": 323, "dist_from_sun": 323, "150": [323, 361, 365, 440, 444], "228": 323, "778": 323, "1_400": 323, "2_900": 323, "4_500": 323, "imperfect": [323, 342], "9882": 323, "orbit": 323, "period_squar": 323, "dist_cub": 323, "films_tot": 323, "from_sampl": [323, 457], "cdf": [323, 457], "inv_cdf": 323, "percent": [323, 325, 354, 371, 372, 401, 427, 436, 443, 445, 451], "agreement": [323, 437, 457], "zscore": 323, "temperature_februari": 323, "celsiu": 323, "fahrenheit": [323, 457], "birth_weight": 323, "drug_effect": 323, "1060": [323, 457], "195": [323, 455], "1100": [323, 446], "1200": 323, "928": 323, "1192": 323, "810": 323, "958": 323, "1011": [323, 325], "1109": 323, "1162": 323, "1224": 323, "1310": 323, "analyt": 323, "3652260728": 323, "4582495471": 323, "6582483453": 323, "4591308524824727": 323, "8035946855390597": 323, "175091447274739": 323, "750": 323, "attende": 323, "8402": [323, 453], "8675309": 323, "8398": 323, "gender": 323, "train": 323, "height_mal": 323, "height_femal": 323, "weight_mal": 323, "170": [323, 361], "weight_femal": 323, "foot_size_mal": 323, "foot_size_femal": 323, "male": 323, "posterior": 323, "prior_mal": 323, "prior_femal": 323, "posterior_mal": 323, "posterior_femal": 323, "posteriori": 323, "smooth": 323, "kde_norm": 323, "kernel_h": 323, "x_i": 323, "f_hat": 323, "xarr": 323, "yarr": 323, "unadorn": 324, "widen": 324, "0b100101": [324, 444, 446], "lstrip": [324, 440], "100101": 324, "bit_count": [324, 447], "0b10011": 324, "x04": [324, 374, 439], "xff": [324, 452], "xfc": 324, "xe8": 324, "x10": [324, 439], "64512": 324, "16711680": 324, "little_ord": 324, "tohexstr": 324, "0x3": 324, "a7p10": 324, "3740": 324, "d380000000000p": 324, "hash_info": [324, 331, 403, 425, 451, 453], "invmod": 324, "hash_fract": 324, "coprim": 324, "hash_valu": 324, "fermat": 324, "hash_float": 324, "hash_complex": 324, "breadth": [324, 361, 427], "gg": 324, "haunt": 324, "economi": 324, "subrang": 324, "linspac": 324, "zoot": 324, "digraph": 324, "fillchar": 324, "expandtab": [324, 342], "t012": 324, "t0123": 324, "t01234": 324, "0123": 324, "01234": 324, "ideograph": 324, "007f": [324, 410], "0660": [324, 437], "superscript": 324, "kharosthi": 324, "numeric_typ": 324, "isidentifi": 324, "2155": 324, "vulgar": 324, "istitl": 324, "uncas": 324, "justifi": [324, 347, 353, 421, 443], "spaciou": 324, "cmowz": 324, "removeprefix": [324, 458], "testhook": 324, "basetestcas": 324, "removesuffix": [324, 458], "misctest": 324, "tmpdirmixin": 324, "rindex": [324, 444, 451, 452], "rjust": [324, 421, 441, 452], "rsplit": [324, 441, 444, 451], "ipz": 324, "mississ": 324, "x1c": 324, "x1d": 324, "x85": 324, "u2028": 324, "u2029": 324, "nde": 324, "rkl": 324, "kl": 324, "comment_str": 324, "swapcas": 324, "bill": [324, 421, 437, 443], "capword": [324, 325], "zfill": [324, 421, 440], "00042": 324, "0042": 324, "sprintf": [324, 437, 439], "parenthesis": 324, "somenam": 324, "237": [324, 445], "1e50": 324, "ieee754": 324, "emphasis": 324, "usefulli": [324, 444], "2ef0": 324, "f1f2": 324, "xf0": 324, "xf1": 324, "xf2": 324, "f0f1f2": 324, "f0": 324, "f0_f1f2": 324, "uuddlrlrab": 324, "55554444": 324, "4c524c52": 324, "4142": 324, "aeiou": 324, "shrt": 324, "fillbyt": 324, "abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz": [324, 444], "abcabc1": 324, "abc1": 324, "abcabc": 324, "abcdefghijklmnopqrstuvwxyz": [324, 325, 444], "461": 324, "subview": 324, "abcefg": 324, "0x7f3ddc9f4350": 324, "bce": 324, "22222222": 324, "33333333": 324, "44444444": 324, "zbcefg": 324, "z123fg": 324, "rvalu": 324, "z1spam": 324, "3118": [324, 445, 457], "bepoint": 324, "616263": 324, "toreadonli": 324, "byte_length": 324, "new_items": 324, "1d": 324, "zyz": 324, "ayz": 324, "3d": [324, 421], "2d": [324, 421], "32000": 324, "32001": 324, "32002": 324, "sjoerd": [324, 421, 437, 443], "cardin": 324, "disjoint": 324, "issubset": [324, 440], "issuperset": [324, 440], "symmetric_differ": [324, 440], "intersection_upd": [324, 440, 443], "difference_upd": [324, 443, 458], "symmetric_difference_upd": [324, 440], "4098": [324, 417, 421], "4127": [324, 417, 421], "salad": 324, "juic": 324, "mappingproxi": 324, "synchronis": [324, 452], "send_post_request": 324, "chainmap": [324, 363, 449, 452, 453, 456], "weakkeydictionari": [324, 378, 442], "weakmethod": [324, 378, 453], "weakset": [324, 378, 444, 448], "weakvaluedictionari": [324, 378, 427, 442], "__unpacked__": 324, "union_object": 324, "whoami": 324, "_namedintconst": 324, "cve": [324, 444, 448], "10735": [324, 448], "set_int_max_str_digit": [324, 331, 340], "5432": 324, "i_squar": 324, "7144": 324, "578966293710682886880994035146873798396722250538762761564": 324, "9252925514383915483333812743580549779436104706260696366600": 324, "571186405732": 324, "get_int_max_str_digit": [324, 331], "upper_bound": [324, 405], "68000": 324, "lower_bound": [324, 405], "4004": 324, "current_limit": 324, "ascii_uppercas": [325, 439], "0123456789abcdefabcdef": 325, "octdigit": [325, 410], "01234567": 325, "formfe": [325, 342, 410], "3101": 325, "vformat": 325, "repack": 325, "literal_text": 325, "get_field": 325, "used_kei": 325, "get_valu": 325, "check_unused_arg": 325, "used_arg": 325, "format_field": 325, "convert_field": 325, "arg_nam": 325, "attribute_nam": 325, "element_index": 325, "index_str": 325, "thou": [325, 451], "shalt": [325, 451], "quest": [325, 417], "ton": 325, "grouping_opt": 325, "000000120": 325, "682": [325, 448], "378": [325, 359], "insignific": 325, "significand": [325, 331], "abra": 325, "cad": 325, "24n": 325, "81w": 325, "coord": [325, 449], "5j": [325, 424], "test1": [325, 402], "test2": [325, 402], "2a": 325, "101010": 325, "0o52": [325, 443], "0b101010": 325, "1234567890": [325, 443], "890": 325, "02x": 325, "c0a80001": 325, "dxob": 325, "1010": [325, 457], "flufl": 325, "noun": 325, "ific": 325, "safe_substitut": [325, 427, 441], "is_valid": [325, 448], "get_identifi": [325, 330, 448], "kung": 325, "pao": 325, "idpattern": 325, "_a": 325, "braceidpattern": 325, "unbrac": 325, "3454": [326, 440], "mkstringprep": [326, 440], "in_table_a1": 326, "tablea": 326, "in_table_b1": 326, "tableb": 326, "map_table_b2": 326, "map_table_b3": 326, "in_table_c11": 326, "tablec": 326, "in_table_c12": 326, "in_table_c11_c12": 326, "in_table_c21": 326, "in_table_c22": 326, "in_table_c21_c22": 326, "in_table_c3": 326, "in_table_c4": 326, "in_table_c5": 326, "in_table_c6": 326, "in_table_c7": 326, "in_table_c8": 326, "in_table_c9": 326, "in_table_d1": 326, "in_table_d2": 326, "iter_unpack": [327, 453], "1700": 327, "10c": 327, "cccccccccc": 327, "0c": 327, "hhhh": [327, 437], "bhl": 327, "99999": 327, "x32": 327, "x12": [327, 374], "serialnum": 327, "gradelevel": 327, "10shhb": 327, "4658": 327, "ci": [327, 431, 436, 456, 457], "0x12131415": 327, "x14": 327, "x13": 327, "llh0l": 327, "lhl": 327, "llh": 327, "revisit": 327, "qh6xq": 327, "qqh": 327, "qqh6x": 327, "capture_output": [328, 456], "other_popen_kwarg": 328, "completedprocess": [328, 454], "timeoutexpir": 328, "calledprocesserror": [328, 444, 454], "crw": [328, 454], "systemroot": 328, "system32": [328, 436], "check_returncod": 328, "subprocesserror": 328, "symmetri": [328, 437], "check_cal": 328, "preexec_fn": [328, 441, 457], "startupinfo": [328, 441, 456], "restore_sign": 328, "start_new_sess": [328, 457], "pass_fd": [328, 457], "extra_group": 328, "pipes": 328, "process_group": 328, "lpapplicationnam": 328, "lpcommandlin": 328, "vike": 328, "unintent": 328, "seldom": 328, "uwsgi": 328, "handle_list": 328, "lpattributelist": [328, 456], "sigpip": 328, "sigxfz": 328, "sigxfsz": 328, "assembli": [328, 409], "create_new_consol": 328, "above_normal_priority_class": 328, "below_normal_priority_class": 328, "high_priority_class": 328, "idle_priority_class": 328, "normal_priority_class": 328, "realtime_priority_class": 328, "create_no_window": 328, "detached_process": 328, "create_default_error_mod": 328, "create_breakaway_from_job": 328, "ifconfig": 328, "qemu": [328, 457], "oss": [328, 440, 452], "hadn": 328, "dwflag": 328, "hstdinput": 328, "hstdoutput": 328, "hstderror": 328, "wshowwindow": 328, "startf_usestdhandl": 328, "startf_useshowwindow": 328, "ncmdshow": 328, "showwindow": 328, "sw_showdefault": 328, "sw_hide": 328, "startupinfoex": 328, "updateprocthreadattribut": 328, "error_invalid_paramet": 328, "std_input_handl": 328, "conin": 328, "std_output_handl": 328, "conout": 328, "std_error_handl": 328, "realtim": 328, "non_existent_fil": 328, "mycmd": 328, "myarg": 328, "dmesg": 328, "hda": 328, "retcod": 328, "child_stdin": 328, "child_stdout": 328, "child_stderr": 328, "child_stdout_and_stderr": 328, "popen4": 328, "somestr": 328, "capturestderr": 328, "getstatusoutput": [328, 453], "getoutput": 328, "_use_vfork": 328, "nnnnnn": 328, "_use_posix_spawn": 328, "knob": 328, "compile_typ": 330, "symbolt": [330, 458], "get_typ": [330, 372, 453], "get_lineno": 330, "is_optim": 330, "is_nest": 330, "has_children": 330, "get_children": [330, 353], "get_symbol": 330, "get_paramet": 330, "get_loc": 330, "get_glob": 330, "get_nonloc": 330, "get_fre": 330, "get_method": [330, 372, 452], "is_referenc": 330, "is_import": 330, "is_paramet": 330, "is_nonloc": 330, "is_declared_glob": [330, 444], "is_loc": 330, "is_annot": 330, "is_fre": 330, "is_assign": 330, "is_namespac": 330, "some_func": 330, "get_namespac": 330, "abiflag": [331, 425, 431, 451, 457], "3149": 331, "unobserv": 331, "__cantrace__": 331, "stdlib_module_nam": [331, 447], "call_trac": [331, 425], "_clear_type_cach": [331, 425], "_debugmallocstat": [331, 425], "dllhandl": 331, "_emscripten_info": 331, "emscripten_vers": 331, "v14": 331, "__breakpointhook__": [331, 425], "__displayhook__": [331, 425], "__excepthook__": [331, 343, 425, 447], "__unraisablehook__": [331, 425], "dynload": [331, 333, 431], "underdevelop": 331, "no_user_sit": [331, 451], "ignore_environ": [331, 451], "hash_random": 331, "division_warn": [331, 451, 452], "1999": [331, 344, 372, 401], "iec": 331, "dbl_epsilon": 331, "dig": 331, "dbl_dig": 331, "mant_dig": [331, 443], "dbl_mant_dig": 331, "dbl_max_exp": 331, "max_10_exp": 331, "dbl_max_10_exp": 331, "min_exp": 331, "dbl_min_exp": 331, "min_10_exp": 331, "dbl_min_10_exp": 331, "flt_radix": 331, "flt_round": 331, "14159265358979": 331, "15g": 331, "9876543211234567": 331, "16g": 331, "9876543211234568": 331, "float_repr_styl": [331, 425, 444], "getallocatedblock": [331, 425, 453], "getunicodeinterneds": [331, 449], "getandroidapilevel": [331, 456], "getdefaultencod": [331, 425], "rtld_": 331, "_enablelegacywindowsfsencod": [331, 430, 455], "getswitchinterv": [331, 425, 458], "unidentifi": 331, "getprofil": [331, 343, 425, 443, 447], "gettrac": [331, 343, 425, 443, 447], "getwindowsvers": [331, 444, 455], "service_pack": [331, 444], "service_pack_minor": [331, 444], "service_pack_major": [331, 444], "suite_mask": [331, 444], "product_typ": [331, 444], "platform_vers": [331, 455], "ver_platform_win32_nt": 331, "ver_nt_workst": 331, "workstat": 331, "ver_nt_domain_control": 331, "ver_nt_serv": 331, "getversionex": 331, "osversioninfoex": 331, "get_asyncgen_hook": [331, 425], "asyncgen_hook": 331, "firstit": 331, "get_coroutine_origin_tracking_depth": [331, 425, 456], "hash_bit": 331, "seed_bit": 331, "0x010502f0": 331, "bits_per_digit": [331, 431, 444, 446], "sizeof_digit": [331, 444, 446], "engag": 331, "maxunicod": [331, 425, 452], "0xffff": [331, 452], "find_modul": [331, 398, 407, 440, 447, 448, 449, 452, 453, 456], "freebsd8": 331, "linux2": [331, 452], "linux3": [331, 452], "aix5": 331, "aix7": [331, 457], "coarser": 331, "suse": [331, 431, 458], "profilefunc": 331, "timeslic": 331, "tracefunc": 331, "lnotab_not": [331, 455], "set_asyncgen_hook": [331, 405, 425], "is_stack_trampoline_act": [331, 449], "thread_info": [331, 425, 452], "tracebacklimit": 331, "exc_traceback": [331, 340, 343, 358, 445, 448], "api_vers": [331, 425, 440], "releaselevel": [331, 444, 446], "winver": 331, "xa": 331, "2a3": 331, "citat": 331, "9899": 331, "jtc1": 331, "sc22": 331, "wg14": 331, "n1256": 331, "use_tool_id": 332, "free_tool_id": 332, "get_tool": 332, "debugger_id": 332, "coverage_id": 332, "profiler_id": 332, "optimizer_id": 332, "oblig": [332, 401, 437], "c_rais": 332, "exception_handl": 332, "py_resum": 332, "py_return": 332, "py_start": 332, "py_throw": 332, "py_unwind": 332, "py_yield": 332, "380": [332, 405], "get_ev": 332, "tool_id": 332, "set_ev": 332, "event_set": 332, "get_local_ev": 332, "codetyp": [332, 362, 450, 457], "set_local_ev": 332, "register_callback": 332, "instruction_offset": 332, "destination_offset": 332, "untaken": 332, "nuanc": 333, "landmark": [333, 436, 455], "majorvers": 333, "minorvers": 333, "python311": 333, "py_enable_shar": 334, "libdir": [334, 435], "posix_prefix": [334, 451], "posix_hom": [334, 451], "posix_us": [334, 451], "posix_venv": [334, 448], "nt_user": [334, 451], "nt_venv": [334, 448], "osx_framework_us": 334, "platstdlib": [334, 451], "platlib": [334, 451], "purelib": [334, 375, 451], "platinclud": [334, 451], "get_scheme_nam": 334, "get_default_schem": 334, "_get_default_schem": 334, "get_preferred_schem": [334, 448], "get_path": [334, 444, 451], "_get_preferred_schem": 334, "redistributor": [334, 444], "_install_schem": 334, "get_path_nam": 334, "get_python_vers": [334, 451], "get_platform": [334, 451], "i586": [334, 451], "sun4u": 334, "64bit": [334, 449], "intel64": 334, "em64t": 334, "macosx": [334, 379, 434, 448, 449, 450, 451], "ppc": [334, 434, 443, 451], "ppc64": 334, "i386": [334, 435, 436, 454], "fat": [334, 381], "is_python_build": [334, 444, 450], "parse_config_h": 334, "get_config_h_filenam": 334, "ac_apple_universal_build": 334, "aix_genuine_cplusplu": 334, "arflag": 334, "log_mask": 335, "pri": 335, "log_upto": 335, "log_pid": 335, "log_con": 335, "log_ndelai": 335, "log_odelai": 335, "log_nowait": 335, "log_perror": 335, "file_or_dir": 336, "filename_onli": 336, "nannynag": 336, "process_token": 336, "ustar": [337, 443], "longlink": 337, "10240": 337, "readerror": 337, "compressionerror": 337, "is_tarfil": 337, "tarerror": 337, "streamerror": 337, "extracterror": 337, "errorlevel": 337, "headererror": 337, "frombuf": 337, "filtererror": 337, "absolutepatherror": 337, "outsidedestinationerror": 337, "specialfileerror": [337, 444], "absolutelinkerror": 337, "linkoutsidedestinationerror": 337, "ustar_format": 337, "gnu_format": 337, "pax_format": [337, 443], "default_format": [337, 455], "ignore_zero": 337, "pax_head": 337, "getnam": [337, 343, 391, 447, 450], "extractal": [337, 397, 442, 443, 454], "numeric_own": [337, 454], "set_attr": 337, "extractfil": 337, "extraction_filt": 337, "fully_trust": 337, "arcnam": [337, 397], "addfil": 337, "gettarinfo": 337, "fromtarfil": 337, "tobuf": 337, "regtyp": 337, "aregtyp": 337, "lnktype": 337, "symtyp": 337, "dirtyp": 337, "fifotyp": 337, "conttyp": 337, "chrtype": 337, "blktype": 337, "gnutype_spars": 337, "linknam": 337, "gname": 337, "new_tarinfo": 337, "old_tarinfo": 337, "isreg": 337, "issym": 337, "islnk": 337, "ischr": 337, "isblk": 337, "isfifo": 337, "isdev": 337, "706": [337, 449], "tar_filt": 337, "data_filt": 337, "fully_trusted_filt": 337, "crucial": [337, 407, 437], "tinker": 337, "my_tarfil": 337, "warn_the_us": 337, "statefulfilt": 337, "filter_func": 337, "file_count": 337, "brian_1979": [337, 397], "source1": [337, 397], "sourcen": [337, 397], "output_dir": [337, 397], "filternam": 337, "py_fil": 337, "quux": 337, "bsdtar": 337, "libarch": 337, "ancient": [337, 442], "seventh": 337, "miscalcul": 337, "temporaryfil": 338, "temporarydirectori": [338, 451], "spooledtemporaryfil": [338, 443, 448, 452], "delete_on_clos": [338, 449], "max_siz": [338, 363], "spool": 338, "_file": 338, "ignore_cleanup_error": 338, "gettempprefix": 338, "gettempprefixb": 338, "tmpdir": 338, "searchabl": [338, 407], "gettempdir": 338, "tempdir": [338, 378], "gettempdirb": 338, "unsuspect": 338, "tmpdirnam": [338, 451], "beaten": 338, "punch": 338, "tmptjujjt": 338, "tcgetattr": [339, 360], "iflag": 339, "oflag": 339, "lflag": 339, "ispe": 339, "ospe": 339, "vmin": 339, "vtime": 339, "tcsetattr": [339, 360], "tcsanow": 339, "tcsadrain": 339, "tcsaflush": [339, 360], "tcsendbreak": 339, "tcdrain": 339, "tcflush": 339, "tciflush": 339, "tcoflush": 339, "tcioflush": 339, "tcflow": 339, "tcooff": 339, "tcoon": 339, "tcioff": 339, "tcion": 339, "tcgetwins": 339, "ws_row": 339, "ws_col": 339, "tiocgwinsz": 339, "tiocgsiz": 339, "tcsetwins": 339, "winsiz": 339, "tiocswinsz": 339, "tiocssiz": 339, "regrtest": [340, 359, 431, 440, 444], "test_": [340, 397], "pyunit": [340, 438], "mytestcase1": 340, "test_feature_on": 340, "test_feature_two": 340, "mytestcase2": 340, "whitebox": 340, "blackbox": 340, "improp": [340, 403, 449], "crop": 340, "anomal": 340, "testfuncacceptssequencesmixin": 340, "mysuperwhammyfunct": 340, "test_func": 340, "acceptlist": 340, "acceptstr": 340, "accepttupl": 340, "beck": [340, 365, 438], "test_main": 340, "testload": [340, 365, 366, 444, 448, 449, 450, 454], "loadtestsfrommodul": [340, 365, 448, 449, 450, 454], "test_spam": 340, "uall": [340, 440], "largefil": 340, "pcbuild": [340, 436, 443], "testfail": 340, "resourcedeni": 340, "skiptest": [340, 365, 444, 453], "is_jython": 340, "is_android": 340, "unix_shel": 340, "loopback_timeout": 340, "internet_timeout": 340, "transient_internet": 340, "short_timeout": 340, "buildbot": [340, 365], "long_timeout": 340, "pipe_max_s": 340, "sock_max_s": 340, "test_support_dir": 340, "test_home_dir": 340, "test_data_dir": 340, "max_py_ssize_t": 340, "max_memus": 340, "set_memlimit": 340, "real_max_memus": 340, "missing_c_docstr": 340, "with_doc_str": [340, 431], "have_docstr": 340, "test_http_url": 340, "always_eq": 340, "never_eq": 340, "busy_retri": 340, "sleeping_retri": 340, "init_delai": 340, "max_delai": 340, "backoff": 340, "is_resource_en": 340, "python_is_optim": 340, "o0": 340, "with_pymalloc": 340, "_testcapi": [340, 431], "sortdict": 340, "findfil": 340, "match_test": [340, 359], "set_match_test": 340, "accept_pattern": 340, "run_unittest": 340, "run_doctest": [340, 359], "get_pages": 340, "check_impl_detail": 340, "record_original_stdout": 340, "get_original_stdout": 340, "args_from_interpreter_flag": 340, "optim_args_from_interpreter_flag": 340, "captured_stdin": 340, "captured_stdout": 340, "captured_stderr": 340, "assertequ": [340, 365, 366, 367, 426, 444, 448, 449, 451, 453, 457], "disable_faulthandl": 340, "gc_collect": 340, "disable_gc": 340, "swap_attr": 340, "new_val": 340, "swap_item": 340, "flush_std_stream": 340, "print_warn": 340, "wait_process": 340, "calcobjs": 340, "calcvobjs": 340, "checksizeof": 340, "anticipate_failur": 340, "expectedfailur": [340, 365, 446], "system_must_validate_cert": 340, "run_with_local": 340, "catstr": 340, "run_with_tz": 340, "requires_freebsd_vers": 340, "min_vers": 340, "requires_linux_vers": 340, "requires_mac_vers": 340, "requires_ieee_754": 340, "requires_zlib": 340, "requires_gzip": 340, "requires_bz2": 340, "requires_lzma": 340, "requires_resourc": 340, "requires_docstr": 340, "requires_limited_api": 340, "cpython_onli": 340, "impl_detail": 340, "no_trac": 340, "refcount_test": 340, "bigmemtest": 340, "memus": 340, "bigmem": 340, "_4g": 340, "bigaddrspacetest": 340, "check_syntax_error": 340, "errtext": 340, "open_urlresourc": 340, "reap_children": 340, "hog": 340, "refleak": [340, 449], "get_attribut": 340, "catch_unraisable_except": 340, "load_package_test": 340, "pkg_dir": 340, "standard_test": [340, 365], "detect_api_mismatch": 340, "ref_api": 340, "other_api": 340, "test_inst": 340, "object_to_patch": 340, "run_in_subinterp": 340, "check_free_after_iter": 340, "missing_compiler_execut": 340, "cmd_name": 340, "check__all__": 340, "test_cas": [340, 365], "name_of_modul": 340, "not_export": 340, "_csv": 340, "misctestcas": 340, "test__all__": 340, "othertestcas": 340, "bar_const": 340, "foo_const": 340, "_bar": 340, "skip_if_broken_multiprocessing_synchron": 340, "check_disallow_instanti": 340, "adjust_int_max_str_digit": 340, "max_digit": 340, "suppresscrashreport": 340, "seterrormod": 340, "coredump": 340, "savesign": 340, "matcher": [340, 367], "match_valu": 340, "ipv6_en": 340, "find_unused_port": 340, "elicit": 340, "ephemer": [340, 378], "bind_port": 340, "s_server": 340, "so_exclusiveaddrus": 340, "bind_unix_socket": 340, "skip_unless_bind_unix_socket": 340, "resource_nam": 340, "interpreter_requires_environ": 340, "skipif": [340, 365], "assert_python": 340, "pythonusersit": 340, "run_python_until_end": 340, "env_var": 340, "__isol": 340, "__cleanenv": 340, "__cwd": 340, "assert_python_ok": 340, "assert_python_failur": 340, "spawn_python": 340, "kill_python": 340, "make_script": 340, "script_dir": 340, "script_basenam": 340, "omit_suffix": 340, "make_zip_script": 340, "zip_dir": 340, "zip_basenam": 340, "script_nam": [340, 383], "name_in_zip": 340, "make_pkg": 340, "init_sourc": 340, "make_zip_pkg": 340, "bytecodetestcas": 340, "get_disassembly_as_str": 340, "assertinbytecod": 340, "_unspecifi": 340, "assertnotinbytecod": 340, "reap_thread": 340, "threading_cleanup": 340, "original_valu": 340, "threading_setup": 340, "wait_threads_exit": 340, "catch_threading_except": 340, "fs_nonascii": 340, "savedcwd": 340, "testfn": 340, "testfn_nonascii": 340, "testfn_unencod": 340, "testfn_undecod": 340, "testfn_unicod": 340, "environmentvarguard": [340, 443], "fakepath": 340, "can_symlink": 340, "can_xattr": 340, "xattr": 340, "change_cwd": 340, "create_empty_fil": 340, "fd_count": 340, "fs_is_case_insensit": 340, "make_bad_fd": 340, "skip_unless_symlink": 340, "skip_unless_xattr": 340, "temp_cwd": 340, "tempcwd": 340, "temp_dir": 340, "temp_umask": 340, "import_fresh_modul": 340, "reinsert": [340, 353, 444, 446], "py_warn": 340, "_warn": [340, 447], "c_warn": 340, "required_on": 340, "modules_setup": 340, "modules_cleanup": 340, "oldmodul": 340, "make_legacy_pyc": 340, "cleanimport": 340, "dirsonsyspath": 340, "ignore_warn": 340, "catch_warn": [340, 376, 443, 448, 449], "simplefilt": [340, 376, 443, 444, 448], "warning_help": 340, "test_suppress_warn": 340, "check_no_resource_warn": 340, "check_syntax_warn": 340, "check_warn": [340, 443], "regexp": [340, 451], "warningcategori": 340, "warningrecord": 340, "hei": 340, "warningsrecord": 340, "textwrapp": [342, 440, 453], "initial_ind": 342, "subsequent_ind": 342, "expand_tab": 342, "replace_whitespac": 342, "fix_sentence_end": 342, "break_long_word": 342, "drop_whitespac": [342, 443], "break_on_hyphen": 342, "max_lin": [342, 453], "thello": 342, "nworld": 342, "frankenstein": 342, "insec": 342, "camelcas": 343, "activecount": [343, 443, 447, 450], "main_thread": [343, 453], "settrace_all_thread": [343, 449], "setprofile_all_thread": [343, 449], "_threading_loc": 343, "threadgroup": 343, "setnam": [343, 447, 450], "native_id": [343, 457], "tid": 343, "isdaemon": [343, 443, 447, 450], "setdaemon": [343, 443, 447, 450], "an_item_is_avail": 343, "get_an_available_item": 343, "make_an_item_avail": 343, "notifyal": [343, 447, 450], "dutch": [343, 410], "scientist": 343, "edsger": 343, "dijkstra": 343, "awoken": 343, "maxconnect": 343, "pool_sema": 343, "connectdb": 343, "isset": [343, 447, 450], "accept_connect": 343, "process_server_connect": 343, "make_connect": [343, 394], "process_client_connect": 343, "awri": 343, "some_lock": 343, "1969": 344, "acronym": 344, "compromis": [344, 374, 399, 416], "wisdom": 344, "tm_gmtoff": [344, 455], "tm_zone": [344, 455], "tm": 344, "1993": 344, "pthread_getcpuclockid": [344, 456], "clk_id": 344, "clock_getr": [344, 452], "clock_gettim": [344, 452, 458], "clock_gettime_n": [344, 456], "clock_settim": [344, 452], "clock_realtim": [344, 448], "clock_settime_n": [344, 456], "get_clock_info": [344, 452], "thread_tim": [344, 456, 458], "ntp": 344, "monotonic_n": [344, 456], "perf_counter_n": [344, 345, 456], "process_time_n": [344, 456], "suspens": [344, 403, 405], "clock_nanosleep": [344, 448], "nanosleep": [344, 448], "tm_year": [344, 439], "tm_mon": 344, "tm_mdai": 344, "tm_hour": 344, "tm_min": 344, "tm_sec": 344, "tm_wdai": 344, "tm_ydai": 344, "335": 344, "time_n": [344, 456], "thread_time_n": [344, 456], "clock_thread_cputime_id": [344, 458], "tzset": 344, "meridian": 344, "julian": [344, 453, 454], "05edt": 344, "m4": 344, "m10": 344, "aest": 344, "10aedt": 344, "tzfile": 344, "datafil": [344, 440], "australia": 344, "melbourn": 344, "egypt": 344, "eet": 344, "eest": 344, "clock_boottim": [344, 456], "clock_monoton": [344, 448, 456], "discontinu": [344, 372], "settimeofdai": 344, "clock_highr": 344, "nonadjust": 344, "clock_monotonic_raw": 344, "clock_process_cputime_id": 344, "clock_prof": [344, 456], "clock_tai": 344, "ptp": 344, "clock_uptim": [344, 456], "uptim": [344, 456], "clock_uptime_raw": [344, 457], "asleep": 344, "1123": [344, 446], "usec": [345, 454], "3018611848820001": 345, "2727368790656328": 345, "23702679807320237": 345, "19665591977536678": 345, "default_tim": 345, "autorang": [345, 455], "time_taken": 345, "wallclock": 345, "nsec": 345, "5000000": 345, "0877": 345, "41440500499993504": 345, "7246671520006203": 345, "3955516149999312": 345, "40183617287970225": 345, "37027556854118704": 345, "38344867356679524": 345, "3712595970846668": 345, "37866875250654886": 345, "9138244460009446": 345, "5829014980008651": 345, "04215312199994514": 345, "08588060699912603": 345, "stupid": 345, "chief": [346, 419], "virtu": [346, 396], "famou": 346, "vastli": 346, "woefulli": 347, "tkdoc": 347, "roseman": [347, 447, 458], "978": 347, "1999149567": 347, "alan": [347, 442, 443, 449, 450, 456], "moor": [347, 439, 440, 443, 453, 454, 456], "1788835886": 347, "lutz": 347, "0596158101": 347, "ousterhout": 347, "jone": [347, 440, 442, 453, 454], "0321336330": 347, "xlib": 347, "cocoa": [347, 434, 451], "gdi": 347, "screennam": 347, "usetk": 347, "argv0": 347, "winfo_id": 347, "winfo_par": 347, "loadtk": 347, "commondialog": [347, 348], "filedialog": 347, "simpledialog": 347, "frm": 347, "grid": [347, 352, 353], "geometri": [347, 352, 353], "lbl": 347, "btn": [347, 353, 361], "winfo_x": 347, "winfo_height": 347, "winfo_view": 347, "winfo": 347, "reenter": 347, "idiosyncrat": 347, "relief": [347, 353], "groov": 347, "placer": 347, "qualit": 347, "183": 347, "parcel": [347, 353], "ipadx": 347, "ipadi": 347, "padx": 347, "padi": 347, "textvari": [347, 353], "onvalu": 347, "offvalu": 347, "stringvar": [347, 353], "intvar": 347, "doublevar": 347, "booleanvar": 347, "entrythingi": 347, "print_cont": 347, "wm": 347, "_root": 347, "compass": 347, "sw": 347, "nw": 347, "gray25": 347, "gray50": 347, "hourglass": 347, "questhead": 347, "contrib": 347, "gumbi": 347, "print_it": 347, "rrggbb": 347, "rrrgggbbb": 347, "rrrrggggbbbb": 347, "160": [347, 359, 361, 401], "cursorfont": 347, "xc_": 347, "xc_hand2": 347, "hand2": 347, "179": 347, "centimetr": 347, "millimetr": 347, "5i": 347, "widthxheight": 347, "200x100": 347, "3i": 347, "2i": 347, "2c": 347, "4c": 347, "43c": 347, "sunken": 347, "ridg": 347, "scrollcommand": [347, 353], "3tk": 347, "turn_r": 347, "activeforeground": 347, "send_ev": 347, "keysym": 347, "keysym_num": 347, "x_root": 347, "y_root": 347, "entryconfig": 347, "bitmapimag": 347, "photoimag": [347, 457], "pillow": [347, 425], "createfilehandl": 347, "deletefilehandl": 347, "maxbytecount": 347, "chooser": 348, "picker": 348, "askcolor": 348, "buttonpress": 349, "dnd_start": 349, "dnd_accept": 349, "old_target": 349, "dnd_leav": 349, "dnd_enter": 349, "dnd_commit": 349, "dnd_end": 349, "dndhandler": 349, "buttonreleas": 349, "on_mot": 349, "on_releas": 349, "slant": [350, 437], "emphasi": 350, "overstrik": 350, "strikeout": 350, "displayof": 350, "cget": [350, 353], "ascent": 350, "descent": 350, "linespac": 350, "nametofont": 350, "showinfo": 351, "showwarn": [351, 376, 443], "showerror": 351, "askquest": 351, "askokcancel": 351, "askretrycancel": 351, "askyesno": 351, "askyesnocancel": 351, "vbar": [352, 354], "anti": [353, 361, 367], "checkbutton": 353, "labelfram": 353, "menubutton": 353, "panedwindow": 353, "radiobutton": 353, "tile": [353, 361, 444], "monograph": 353, "bw": 353, "tlabel": 353, "ttkstyle": 353, "bindtag": 353, "viewabl": 353, "xscrollcommand": 353, "yscrollcommand": 353, "statespec": 353, "instat": 353, "inquir": [353, 454], "bbox": 353, "icursor": 353, "xview": 353, "exportselect": 353, "selection_get": 353, "listbox": 353, "postcommand": 353, "dropdown": 353, "comboboxselect": 353, "newindex": 353, "enable_travers": 353, "tab_id": 353, "notebooktabchang": 353, "unmanag": 353, "autoincr": 353, "recur": 353, "southeast": 353, "displaycolumn": 353, "yview": 353, "selectmod": 353, "treeviewselect": 353, "treeviewopen": 353, "treeviewclos": 353, "offscreen": 353, "set_children": 353, "newchildren": 353, "minwidth": 353, "imagenam": 353, "identify_row": 353, "identify_column": 353, "identify_region": 353, "identify_el": 353, "reattach": 353, "selection_set": [353, 457], "selection_add": 353, "selection_remov": 353, "selection_toggl": 353, "tag_bind": 353, "tag_configur": 353, "tag_ha": 353, "winfo_class": 353, "somewidget": 353, "query_opt": 353, "tbutton": 353, "colored_btn": 353, "layoutspec": 353, "tmenubutton": 353, "mbtn": 353, "element_cr": 353, "elementnam": 353, "etyp": [353, 358, 447], "vsapi": 353, "6a": 353, "imagespec": 353, "interior": [353, 361, 438, 439], "themenam": 353, "element_nam": 353, "element_opt": 353, "theme_cr": 353, "theme_set": 353, "tcombobox": 353, "green2": 353, "green4": 353, "fieldbackground": 353, "green3": 353, "olivedrab1": 353, "olivedrab2": 353, "combo": 353, "theme_nam": 353, "theme_us": 353, "themechang": 353, "caviti": 353, "whichsid": 353, "nswe": 353, "sublayout": 353, "tok_nam": 354, "istermin": 354, "isnontermin": 354, "iseof": 354, "endmark": [354, 355, 406], "lpar": [354, 355], "rpar": [354, 355], "lsqb": 354, "rsqb": 354, "amper": 354, "lbrace": 354, "rbrace": [354, 406], "eqequ": 354, "notequ": 354, "lessequ": 354, "greaterequ": 354, "leftshift": 354, "rightshift": 354, "doublestar": 354, "plusequ": 354, "minequ": 354, "starequ": 354, "slashequ": 354, "percentequ": 354, "amperequ": 354, "vbarequ": 354, "circumflexequ": 354, "leftshiftequ": 354, "rightshiftequ": 354, "doublestarequ": 354, "doubleslash": 354, "doubleslashequ": 354, "atequ": 354, "rarrow": 354, "colonequ": 354, "soft_keyword": [354, 406], "fstring_start": [354, 406, 449], "fstring_middl": [354, 406, 449], "fstring_end": [354, 406, 449], "errortoken": [354, 449], "n_token": 354, "nt_offset": 354, "exact_typ": 355, "srow": 355, "scol": 355, "erow": 355, "ecol": 355, "generate_token": [355, 445, 449], "untoken": 355, "lossless": 355, "tokenerror": [355, 449], "decistmt": 355, "3e": 355, "007": 355, "13th": 355, "21716034272e": 355, "217160342717258261933904529e": 355, "toknum": 355, "tokval": 355, "say_hello": 355, "tomli": 356, "kit": [356, 447], "tomldecodeerror": 356, "toml_str": 356, "listfunc": 357, "coverdir": 357, "trackcal": 357, "countfunc": 357, "countcal": 357, "ignoremod": 357, "ignoredir": 357, "runfunc": [357, 457], "coverageresult": 357, "write_result": 357, "show_miss": 357, "tracer": [357, 361, 443], "print_last": 358, "extract_tb": 358, "extract_stack": 358, "format_list": 358, "extracted_list": 358, "format_except": [358, 447], "format_exc": 358, "format_tb": [358, 359], "format_stack": 358, "clear_fram": [358, 453], "walk_stack": [358, 454], "walk_tb": [358, 454], "lookup_lin": 358, "capture_loc": 358, "max_group_width": 358, "max_group_depth": 358, "from_except": 358, "show_group": [358, 450], "frame_gen": 358, "cheaper": [358, 456], "from_list": 358, "format_frame_summari": [358, 448], "frame_summari": 358, "run_user_cod": 358, "envdir": 358, "bright_side_of_lif": 358, "formatted_lin": 358, "another_funct": 358, "lumberstack": 358, "an_error": 358, "take_snapshot": 359, "top_stat": 359, "716": 359, "4855": 359, "39328": 359, "284": 359, "521": 359, "3199": 359, "167": 359, "368": 359, "244": 359, "2315": 359, "381": 359, "185": [359, 446], "243": [359, 438], "133": 359, "347": [359, 442], "262": 359, "1446": 359, "911": 359, "1454": 359, "2131": 359, "148": 359, "344": 359, "snapshot1": 359, "snapshot2": 359, "compare_to": 359, "8173": 359, "4428": 359, "71332": 359, "39369": 359, "117": [359, 438], "940": 359, "8106": 359, "571": 359, "298": 359, "589": [359, 363, 457], "1005": 359, "166": 359, "7423": 359, "1526": 359, "217": 359, "1334": 359, "848": 359, "1465": 359, "784": 359, "491": 359, "476": 359, "969": 359, "offlin": [359, 436], "903": 359, "870": 359, "1036": 359, "934": 359, "1068": 359, "619": 359, "1581": 359, "1614": 359, "938": 359, "1728": 359, "test_pickletool": 359, "1276": 359, "test_runn": 359, "976": 359, "display_failur": 359, "761": 359, "1563": 359, "main_in_temp_cwd": 359, "run_glob": 359, "display_top": 359, "key_typ": 359, "filter_trac": 359, "419": [359, 446], "_b85chars2": 359, "_b85char": 359, "306": 359, "_a85chars2": 359, "_a85char": 359, "293": 359, "class_definit": 359, "testmethod": 359, "_hexdig": 359, "_weakrefset": 359, "142": [359, 417, 421], "_b32tab2": 359, "_b32tab": 359, "6220": 359, "3602": 359, "5303": 359, "get_traced_memori": 359, "reset_peak": [359, 458], "large_sum": 359, "first_siz": 359, "first_peak": 359, "small_sum": 359, "second_s": 359, "second_peak": 359, "664": 359, "3592984": 359, "804": 359, "29704": 359, "optimis": [359, 403], "clear_trac": 359, "get_object_traceback": 359, "get_traceback_limit": 359, "meaningfulli": 359, "get_tracemalloc_memori": 359, "is_trac": 359, "nframe": [359, 377, 430], "total_nfram": 359, "filename_pattern": 359, "all_fram": 359, "traceback_limit": [359, 383], "old_snapshot": 359, "size_diff": 359, "count_diff": 359, "most_recent_first": [359, 456], "cfmakeraw": 360, "cfmakecbreak": 360, "setraw": 360, "setcbreak": 360, "walli": 361, "feurzeig": 361, "seymour": 361, "papert": 361, "cynthia": 361, "solomon": 361, "clockwis": 361, "intric": 361, "learner": 361, "classroom": 361, "anew": [361, 407, 458], "clearscreen": 361, "fillcolor": 361, "begin_fil": 361, "end_fil": 361, "joi": 361, "whom": [361, 401], "360": 361, "bgcolor": 361, "bk": 361, "setpo": [361, 377], "setposit": 361, "teleport": 361, "seti": 361, "sethead": 361, "seth": 361, "clearstamp": 361, "xcor": 361, "ycor": 361, "pendown": 361, "pd": 361, "penup": 361, "pu": 361, "pensiz": 361, "isdown": 361, "pencolor": 361, "showturtl": 361, "hideturtl": 361, "isvis": 361, "resizemod": 361, "shapes": 361, "turtles": 361, "shearfactor": 361, "tiltangl": [361, 448], "tilt": 361, "shapetransform": 361, "get_shapepoli": 361, "onclick": 361, "onreleas": 361, "ondrag": 361, "begin_poli": 361, "end_poli": 361, "get_poli": 361, "getturtl": 361, "getpen": 361, "getscreen": 361, "setundobuff": 361, "undobufferentri": 361, "bgpic": 361, "resetscreen": 361, "screensiz": 361, "setworldcoordin": 361, "onkei": 361, "onkeyreleas": 361, "onkeypress": 361, "onscreenclick": 361, "ontim": 361, "colormod": 361, "getcanva": 361, "getshap": 361, "register_shap": 361, "addshap": 361, "window_height": 361, "window_width": 361, "textinput": 361, "numinput": 361, "exitonclick": 361, "337": 361, "vec2d": 361, "fill_gap": 361, "polygon": 361, "240": 361, "to_angl": 361, "inscrib": 361, "semicircl": 361, "colorstr": 361, "diamet": 361, "canva": [361, 443, 449, 457], "stamp_id": 361, "stampid": 361, "astamp": 361, "unused_stamp_id": 361, "undobuff": 361, "speedstr": 361, "speedvalu": 361, "440": 361, "27876": 361, "60254": 361, "fullcircl": 361, "grad": 361, "gon": 361, "gradian": 361, "5707963267948966": 361, "thick": 361, "turtleshap": 361, "pendict": 361, "nores": 361, "stretchfactor": 361, "penstat": 361, "33cc8c": 361, "brown": [361, 443], "5490196078431373": 361, "140": [361, 444], "32c18f": 361, "colorstring1": 361, "colorstring2": 361, "g2": 361, "285078": 361, "a0c8f0": 361, "fillstat": 361, "arial": 361, "fontnam": 361, "fontsiz": 361, "fonttyp": 361, "shapenam": 361, "rmode": 361, "outlinewidth": 361, "stretch_wid": 361, "stretch_len": 361, "perpendicular": 361, "shear": 361, "t11": 361, "t12": 361, "t21": 361, "t22": 361, "myturtl": 361, "glow": 361, "unglow": 361, "handdraw": 361, "myfavouriteshap": 361, "mick": [361, 437, 440, 442], "pet": 361, "_screen": 361, "addcompon": 361, "poly1": 361, "poly2": 361, "shapelist": 361, "myshap": 361, "800080": 361, "picnam": 361, "nopic": 361, "backgroundimag": 361, "landscap": [361, 443], "canvwidth": 361, "canvheight": 361, "canvaswidth": 361, "canvasheight": 361, "1500": 361, "llx": 361, "lly": 361, "urx": 361, "distort": 361, "octagon": 361, "acceler": [361, 437, 438, 442, 445, 452, 453], "xdummi": 361, "ydummi": 361, "nim": 361, "minval": 361, "maxval": 361, "stake": 361, "cmode": 361, "turtlegraphicserror": 361, "scrolledcanva": 361, "thusli": 361, "480": 361, "turtlegraph": 361, "using_idl": 361, "_cfg": 361, "startx": 361, "leftright": 361, "starti": 361, "topbottom": 361, "200x200": 361, "titlebar": 361, "zoo": [361, 402], "rawpen": 361, "playground": 361, "type_": 361, "poli": [361, 437], "tooltip": 361, "backgroundcolor": 361, "write_docstringdict": 361, "turtle_docstringdict": 361, "turtle_docstringdict_german": 361, "glingl": 361, "aon": 361, "undobuffers": 361, "exampleturtl": 361, "examplescreen": 361, "docstringdict": 361, "turtle_docstringdict_italian": 361, "bytedesign": 361, "sourcecod": 361, "chao": 361, "verhulst": 361, "colormix": 361, "forest": 361, "fractalcurv": 361, "hilbert": 361, "koch": 361, "lindenmay": 361, "ethnomathemat": 361, "indian": 361, "kolam": 361, "minimal_hanoi": 361, "hanoi": 361, "disc": 361, "nimstick": 361, "minimalist": 361, "peac": 361, "penros": 361, "aperiod": 361, "kite": 361, "dart": 361, "planet_and_moon": 361, "rosett": 361, "round_danc": 361, "danc": [361, 417], "sorting_anim": 361, "two_canvas": 361, "canvas": 361, "yinyang": 361, "tdemo_nim": 361, "tdemo_round_d": 361, "new_class": [362, 452], "exec_bodi": 362, "prepare_class": [362, 452], "__prepare__": [362, 366, 403, 453, 455], "resolve_bas": [362, 403, 456], "560": [362, 403], "__mro_entries__": [362, 403, 456], "get_original_bas": [362, 403, 449], "__orig_bases__": [362, 449], "typeddict": [362, 363, 447, 450, 457], "listiter": 362, "lambdatyp": 362, "generatortyp": 362, "coroutinetyp": [362, 454], "asyncgeneratortyp": 362, "celltyp": 362, "builtinfunctiontyp": 362, "builtinmethodtyp": 362, "wrapperdescriptortyp": [362, 456], "methoddescriptortyp": [362, 456], "classmethoddescriptortyp": [362, 456], "t_origin": 362, "t_arg": 362, "getsetdescriptortyp": 362, "memberdescriptortyp": 362, "capsuletyp": 362, "dynamicclassattribut": [362, 448, 453], "gen_func": 362, "typing_extens": 363, "standardis": 363, "544": [363, 457], "runtime_check": [363, 447, 449, 457], "586": [363, 447, 457, 458], "591": [363, 457], "593": [363, 458], "613": 363, "647": 363, "typeguard": [363, 447], "655": 363, "notrequir": [363, 448], "literalstr": [363, 448], "681": 363, "dataclass_transform": [363, 448, 449], "692": 363, "698": 363, "new_vector": 363, "connectionopt": 363, "broadcast_messag": 363, "some_id": [363, 455], "524313": [363, 455], "get_user_nam": 363, "user_id": 363, "user_a": 363, "42351": 363, "user_b": 363, "23413": 363, "54341": 363, "some_valu": 363, "adminuserid": 363, "prouserid": 363, "get_next_item": 363, "async_queri": 363, "on_success": 363, "on_upd": 363, "batch_proc": 363, "cb_result": 363, "good_cb": 363, "bad_cb": 363, "maxitem": 363, "paramspecvari": 363, "returntyp": 363, "arg1typ": 363, "arg2typ": 363, "notify_by_email": 363, "idiomat": [363, 415, 417], "prouser": 363, "teamus": 363, "make_new_us": 363, "user_class": 363, "new_non_team_us": 363, "basicus": 363, "loggedvar": 363, "zero_all_var": 363, "weirdtrio": 363, "oldt": 363, "contravari": 363, "oldb": 363, "oldweirdtrio": 363, "linkedlist": 363, "vec": [363, 417], "inproduct": 363, "type1": 363, "aesthet": 363, "legacy_pars": 363, "hatch": [363, 444], "hash_a": 363, "hash_b": 363, "typesaf": 363, "unpython": 363, "bucket": [363, 403], "unconstrain": 363, "anystr": [363, 450], "greet_bad": 363, "greet_prop": 363, "run_queri": [363, 448], "arbitrary_str": [363, 448], "literal_str": 363, "never_call_m": 363, "int_or_str": 363, "noreturn": 363, "reveal_typ": [363, 448], "return_self": 363, "subclassoffoo": 363, "returns_egg": 363, "boxofstr": 363, "make_box_of_str": 363, "with_lock": 363, "my_lock": 363, "sum_threadsaf": 363, "validate_simpl": 363, "open_help": 363, "starship": [363, 442, 455], "enterprise_d": 363, "fastconnector": 363, "__metadata__": 363, "no_type_check": [363, 448], "valuerang": 363, "ann1": 363, "include_extra": [363, 458], "is_str": 363, "is_str_list": 363, "typea": 363, "typeb": 363, "kt": 363, "lookup_nam": 363, "infer_vari": 363, "strsequenc": 363, "strorbytessequ": 363, "print_capit": 363, "stringsubclass": 363, "print_ab": 363, "supportsab": 363, "__covariant__": 363, "__contravariant__": 363, "__infer_variance__": 363, "__bound__": [363, 402, 404], "__constraints__": [363, 402], "move_first_element_to_last": 363, "get_shap": 363, "happili": 363, "array2": 363, "float_array_1d": 363, "int_array_2d": 363, "yup": 363, "intfunc": [363, 449], "add_log": 363, "add_two": 363, "paramspecarg": [363, 447], "paramspeckwarg": [363, 447], "get_origin": [363, 457], "listorset": [363, 402], "notgener": 363, "__value__": [363, 404, 411], "_field_typ": [363, 457, 458], "first_us": 363, "__supertype__": 363, "genproto": 363, "poni": 363, "closabl": 363, "checkabl": [363, 449], "__total__": 363, "__required_keys__": 363, "__optional_keys__": 363, "supportsbyt": [363, 448], "supportscomplex": [363, 448], "supportsfloat": 363, "supportsindex": [363, 457], "supportsround": 363, "textio": 363, "binaryio": 363, "assert_typ": [363, 448], "complex_funct": 363, "assert_nev": [363, 448], "eq_default": 363, "order_default": 363, "kw_only_default": 363, "frozen_default": [363, 449], "field_specifi": 363, "create_model": [363, 448], "customermodel": [363, 448], "modelbas": 363, "modelmeta": 363, "__dataclass_transform__": 363, "meanwhil": 363, "get_overload": [363, 448], "clear_overload": [363, 448], "__final__": [363, 448], "no_type_check_decor": [363, 450], "log_statu": 363, "__override__": 363, "type_check_onli": 363, "fetch_respons": 363, "unsubscript": 363, "get_arg": [363, 447, 448, 457, 458], "get_protocol_memb": [363, 450], "is_protocol": [363, 450], "is_typeddict": [363, 447], "forwardref": 363, "expensive_mod": 363, "sometyp": [363, 454], "local_var": 363, "anothertyp": 363, "other_fun": 363, "count_word": 363, "keep_posit": 363, "abstractset": 363, "t_co": 363, "ct_co": 363, "add_unicode_checkmark": 363, "u2713": 363, "kt_co": 363, "vt_co": 363, "get_position_in_index": 363, "word_list": 363, "_vt_co": 363, "yieldtyp": 363, "sendtyp": 363, "echo_round": 363, "contravariantli": 363, "infinite_stream": 363, "covariantli": 363, "invariantli": 363, "undecid": 363, "91896": [363, 449, 450], "92332": [363, 448, 449, 450], "94309": [363, 449], "106309": [363, 450], "105578": 363, "ucd": [364, 410, 452, 453], "east_asian_width": 364, "unistr": [364, 437], "00c7": [364, 405], "cedilla": [364, 405], "0043": [364, 405], "0327": [364, 405], "2160": 364, "0049": 364, "kd": 364, "kc": 364, "unidata_vers": 364, "ucd_3_2_0": [364, 442], "solidu": 364, "etter": 364, "ppercas": 364, "u0660": [364, 437], "rabic": 364, "umber": 364, "namealias": [364, 410], "namedsequ": 364, "junit": [365, 438], "taxonomi": 365, "unittestgui": 365, "appveyor": 365, "teststringmethod": 365, "test_upp": 365, "test_isupp": 365, "asserttru": [365, 444, 448, 449, 451], "assertfals": [365, 444, 448, 449], "test_split": 365, "assertrais": [365, 426, 444, 446, 448, 449, 452], "crux": 365, "test_module1": 365, "test_module2": 365, "test_modul": [365, 367], "testclass": 365, "test_method": 365, "test_someth": [365, 366, 367, 456], "failfast": [365, 444], "foo_test": [365, 456], "sometest": [365, 456], "bar_test": [365, 456], "test_foo": [365, 367, 456], "footest": [365, 456], "project_directori": 365, "_test": [365, 451], "proj": 365, "test_mypkg": 365, "functiontestcas": 365, "defaultwidgetsizetestcas": 365, "test_default_widget_s": 365, "widgettestcas": 365, "test_widget_res": 365, "texttestrunn": 365, "test_widget": 365, "testsometh": 365, "makesometh": 365, "makesomethingdb": 365, "deletesomethingdb": 365, "testresult": [365, 444, 446, 450, 452], "mytestcas": 365, "test_noth": 365, "test_format": 365, "skipunless": [365, 446], "test_windows_support": 365, "test_maybe_skip": 365, "external_resource_avail": 365, "005": 365, "myskippedtestcas": 365, "test_not_run": 365, "expectedfailuretestcas": 365, "test_fail": 365, "skipunlesshasattr": 365, "numberstest": [365, 453], "test_even": [365, 453], "defaulttestresult": 365, "assertnotequ": [365, 448, 449, 451], "asserti": [365, 367, 444], "assertisnot": [365, 444], "assertisnon": [365, 444, 446], "assertisnotnon": [365, 444, 446], "assertin": [365, 444], "assertnotin": [365, 444], "assertisinst": [365, 444], "assertnotisinst": [365, 444], "assertraisesregex": [365, 448, 449, 452], "assertwarn": [365, 451, 452], "assertwarnsregex": [365, 451, 452], "addtypeequalityfunc": [365, 444], "assertmultilineequ": [365, 444], "assertlog": [365, 447, 453], "assertnolog": [365, 447], "the_except": 365, "error_cod": 365, "assertraisesregexp": [365, 444, 446, 448, 449], "somewarn": 365, "legacy_funct": [365, 451], "frobnic": [365, 378], "assertalmostequ": [365, 444, 448, 449, 451], "assertnotalmostequ": [365, 444, 448, 449, 451], "assertgreat": [365, 444], "assertgreaterequ": [365, 444], "assertless": [365, 444], "assertlessequ": [365, 444], "assertregex": [365, 448, 449, 451], "assertnotregex": [365, 448, 449], "assertcountequ": [365, 451], "assertregexpmatch": [365, 444, 448, 449, 451], "assertsequenceequ": [365, 444, 446], "assertlistequ": [365, 444, 446], "asserttupleequ": [365, 444, 446], "assertsetequ": [365, 444, 446], "assertdictequ": [365, 444, 446], "seq_typ": 365, "assertxyi": 365, "maxdiff": [365, 451], "counttestcas": 365, "shortdescript": 365, "texttestresult": [365, 449], "addcleanup": [365, 366, 367, 444, 457], "entercontext": [365, 448], "docleanup": [365, 444], "addclasscleanup": [365, 457], "enterclasscontext": [365, 448], "doclasscleanup": 365, "isolatedasynciotestcas": [365, 448, 450, 457], "asyncsetup": [365, 457], "asyncteardown": [365, 457], "addasynccleanup": 365, "enterasynccontext": [365, 448], "_async_connect": 365, "asyncconnect": [365, 457], "test_respons": 365, "status_cod": [365, 457], "on_cleanup": 365, "testfunc": 365, "_removetestatindex": [365, 453], "testrunn": 365, "defaulttestload": 365, "synthet": [365, 449], "loadtestsfromtestcas": [365, 448, 450], "testcaseclass": 365, "gettestcasenam": [365, 448, 449, 450], "unoffici": [365, 454], "use_load_test": [365, 449, 454], "loadtestsfromnam": [365, 444], "sampletest": 365, "sampletestcas": 365, "test_on": [365, 367], "test_two": [365, 367], "test_thre": 365, "start_dir": 365, "top_level_dir": 365, "testmethodprefix": 365, "loadtestsfrom": 365, "sorttestmethodsus": 365, "suiteclass": [365, 444], "testnamepattern": 365, "unexpectedsuccess": 365, "collecteddur": 365, "shouldstop": 365, "testsrun": 365, "starttest": 365, "stoptest": 365, "tb_local": 365, "wassuccess": 365, "starttestrun": [365, 444], "stoptestrun": [365, 444], "adderror": 365, "formatted_err": 365, "addfailur": 365, "addsuccess": 365, "addskip": 365, "addexpectedfailur": 365, "addunexpectedsuccess": 365, "addsubtest": 365, "adddur": 365, "resultclass": 365, "wd": [365, 376, 442, 444, 453, 455], "_makeresult": 365, "defaulttest": [365, 453], "catchbreak": 365, "testprogram": [365, 449, 450], "testcase1": 365, "testcase2": 365, "testcase3": 365, "test_class": 365, "this_dir": 365, "package_test": 365, "basetestsuit": 365, "_errorhold": 365, "_connect": [365, 394], "createexpensiveconnectionobject": 365, "createconnect": 365, "closeconnect": 365, "addmodulecleanup": [365, 457], "entermodulecontext": [365, 448], "domodulecleanup": 365, "installhandl": 365, "registerresult": 365, "removeresult": 365, "test_signal_handl": 365, "replai": 366, "productionclass": [366, 367], "assert_called_with": [366, 367], "side_effect": [366, 455], "classname2": [366, 367], "classname1": [366, 367], "mockclass1": [366, 367], "mockclass2": [366, 367], "mock_method": [366, 367], "assert_called_once_with": [366, 367], "newkei": [366, 367], "newvalu": [366, 367], "foobarbaz": 366, "wheeeeee": 366, "specc": [366, 367], "autospec": [366, 367], "mock_funct": 366, "fishi": 366, "noncallablemock": 366, "noncallablemagicmock": 366, "new_cal": 366, "spec_set": [366, 367], "assret": 366, "asert": 366, "aseert": 366, "assrt": 366, "configure_mock": [366, 367], "assert_cal": [366, 455], "assert_called_onc": [366, 455], "wow": 366, "assert_any_cal": 366, "assert_has_cal": [366, 367], "any_ord": [366, 367], "mock_cal": [366, 367], "assert_not_cal": [366, 454], "reset_mock": [366, 455], "mock_add_spec": 366, "attach_mock": [366, 367], "method_cal": [366, 367], "some_mock": 366, "_get_child_mock": [366, 367], "call_count": [366, 367], "call_arg": [366, 367], "w00t": 366, "call_args_list": [366, 367], "140161580456576": [366, 367], "propertymock": 366, "mock_foo": [366, 367], "mockiti": 366, "this_foo": 366, "asyncmock": [366, 367, 457], "async_func": 366, "asyncmockmixin": 366, "_mock_cal": 366, "exampleclass": 366, "sync_foo": 366, "async_foo": 366, "a_mock": 366, "assert_await": 366, "coroutine_mock": 366, "assert_awaited_onc": [366, 367], "assert_awaited_with": 366, "assert_awaited_once_with": 366, "assert_any_await": 366, "assert_has_await": 366, "await_args_list": 366, "assert_not_await": 366, "await_count": 366, "await_arg": 366, "threadingmock": 366, "default_timeout": 366, "wait_until_cal": 366, "wait_until_any_call_with": 366, "bang": 366, "not_a_child": 366, "thing1": 366, "thing2": 366, "normal_argu": 366, "mock_class": 366, "mockclass": 366, "mock_th": 366, "mock_stdout": 366, "non_existing_attribut": 366, "honour": 366, "class_method": [366, 367], "in_dict": 366, "testsampl": 366, "test_sampl": 366, "patched_foo": 366, "first_patch": 366, "second_patch": 366, "test_funct": 366, "mock_exit": 366, "new_mock": [366, 367], "mytest": [366, 367], "patcher1": 366, "patcher2": 366, "fiddlier": [366, 367], "bonu": [366, 438], "stopal": 366, "mock_ord": 366, "foo_on": 366, "foo_two": 366, "static_method": [366, 367], "mock1": 366, "mock2": 366, "foobl": [366, 367], "__getinitargs__": 366, "__getformat__": 366, "call_list": [366, 367], "kall": [366, 441], "abstractbasicauthhandl": 366, "abstractdigestauthhandl": 366, "abstracthttphandl": [366, 455], "basehandl": [366, 383], "_noncallablemock__get_return_valu": 366, "_noncallablemock__get_side_effect": 366, "_noncallablemock__return_value_doc": 366, "_noncallablemock__set_return_valu": 366, "_noncallablemock__set_side_effect": 366, "my_mock": 366, "irrespect": 366, "read_data": [366, 367, 421], "deplet": 366, "rewound": 366, "fiddli": 366, "bibbl": 366, "assret_called_once_with": 366, "dandi": 366, "assret_called_with": 366, "has_data": [366, 372, 453], "mock_request": 366, "thankfulli": 366, "somethingfortest": 366, "submock": 366, "attribute1": 366, "not_submock": 366, "sample_nam": 366, "new_attribut": 366, "attribute2": 366, "mock_inst": 367, "some_method": [367, 394], "old_method": 367, "mock_open": [367, 453], "data_dict": 367, "open_side_effect": 367, "file3": 367, "file_handl": 367, "testabl": 367, "backendprovid": 367, "get_endpoint": 367, "create_cal": 367, "start_cal": 367, "mock_backend": 367, "mock_respons": 367, "mock_dat": 367, "mocksomeclass": 367, "not_a_test": 367, "patcher": 367, "whilst": 367, "nuisanc": 367, "grob": 367, "mock_frob": 367, "copy_call_arg": 367, "copyingmock": 367, "mock_bar": 367, "mock_spam": 367, "create_patch": 367, "my_dict": 367, "mymock": 367, "has_been_cal": 367, "adaptor": 367, "blip": 367, "expected_cal": 367, "fifti": [367, 401], "some_obj": 367, "match_foo": 367, "match_wrong": 367, "pyhamcrest": 367, "hamcrest": 367, "match_equ": 367, "urlerror": [370, 372, 443], "hdr": [370, 372], "contenttooshorterror": [370, 372], "urlretriev": [370, 372, 375], "gopher": 371, "hdl": [371, 401], "mailto": [371, 401], "prospero": 371, "rsync": 371, "rtsp": 371, "rtspu": 371, "sftp": 371, "shttp": 371, "snew": 371, "urlpars": [371, 375, 443, 444, 445, 450, 451, 455], "urlstr": 371, "allow_frag": 371, "netloc": [371, 444, 451], "parseresult": [371, 444, 451], "1808": [371, 454], "7eguido": 371, "parse_q": [371, 443, 447, 450, 455, 456, 457, 458], "keep_blank_valu": 371, "strict_pars": 371, "max_num_field": 371, "doseq": 371, "parse_qsl": [371, 443, 447, 450, 455, 456, 457, 458], "urlunpars": 371, "2396": [371, 444, 454, 456], "c0": 371, "urlunsplit": 371, "urljoin": [371, 454], "urldefrag": [371, 451], "defens": 371, "improperli": [371, 403, 437, 453], "splitresult": 371, "defragresult": [371, 451], "defragresultbyt": 371, "parseresultbyt": [371, 451], "splitresultbyt": 371, "unreserv": 371, "quote_from_byt": 371, "ni\u00f1o": 371, "20ni": 371, "b1o": 371, "quote_plu": [371, 451], "2fel": 371, "unquote_plu": 371, "unquote_to_byt": 371, "quote_via": [371, 454], "std66": 371, "2732": [371, 444, 451], "urn": [371, 374], "2368": 371, "1738": 371, "addinfourl": 372, "httprespons": [372, 444, 452], "fancyurlopen": [372, 450], "_proxi": 372, "urllib2": [372, 441, 443, 444, 445], "cadefault": [372, 450], "handler_ord": 372, "pathname2url": 372, "url2pathnam": 372, "spoof": 372, "firefox": [372, 379, 442, 449], "i686": 372, "gecko": 372, "20071127": 372, "camel": [372, 443, 451], "request_host": 372, "no_proxi": 372, "cern": 372, "ncsa": 372, "uiuc": 372, "is_authent": 372, "basicauth": 372, "passwd_mgr": 372, "update_authent": 372, "40x": 372, "unredirect": 372, "remove_head": [372, 453], "set_proxi": [372, 394, 453], "header_valu": 372, "add_data": [372, 453], "get_host": [372, 453], "get_selector": [372, 453], "is_unverifi": [372, 453], "http_respons": 372, "http_error_404": 372, "_open": 372, "http_error_": 372, "_error": 372, "_request": 372, "_respons": 372, "default_open": 372, "unknown_open": 372, "add_par": 372, "adopt": [372, 407, 416, 438, 439, 440, 443, 458], "http_error_default": 372, "redirect_request": 372, "newurl": 372, "http_error_30": 372, "http_error_301": 372, "http_error_302": 372, "http_error_303": 372, "http_error_307": 372, "http_error_308": 372, "find_user_password": 372, "authuri": 372, "http_error_auth_req": 372, "authreq": 372, "http_error_401": 372, "http_error_407": 372, "http_open": 372, "https_open": 372, "file_open": 372, "data_open": 372, "2397": 372, "ftp_open": 372, "setmaxconn": 372, "https_respons": 372, "equiv": 372, "xhtm": 372, "ngot": 372, "auth_handl": 372, "pdq": 372, "mahler": 372, "8092": 372, "klem": 372, "kadidd": 372, "ehopp": 372, "proxy_handl": 372, "3128": 372, "proxy_auth_handl": 372, "addhead": 372, "musi": [372, 373], "requestb": 372, "xrbl82xr": 372, "reporthook": 372, "local_filenam": 372, "urlcleanup": 372, "open_unknown": 372, "30x": [372, 452], "maxtri": 372, "prompt_user_passwd": 372, "550": 372, "_urlopen": 372, "robotfilepars": [373, 455], "robotstxt": 373, "set_url": 373, "can_fetch": 373, "userag": 373, "spider": [373, 437], "crawl_delai": 373, "crawl": [373, 455], "request_r": 373, "requestr": 373, "site_map": 373, "sitemap": 373, "rp": 373, "rrate": 373, "uuid1": [374, 442, 456], "uuid3": [374, 442], "uuid4": [374, 442], "uuid5": [374, 442], "is_saf": [374, 456], "relai": [374, 456], "safeuuid": 374, "bytes_l": 374, "time_low": 374, "time_mid": 374, "time_hi_vers": 374, "clock_seq_hi_vari": 374, "clock_seq_low": 374, "12345678": 374, "567812345678": 374, "12345678123456781234567812345678": 374, "x34": 374, "x56": [374, 437], "x78": 374, "0x12345678": 374, "0x1234": 374, "0x5678": 374, "0x12": 374, "0x34": 374, "0x567812345678": 374, "0x12345678123456781234567812345678": 374, "clock_seq": 374, "reserved_nc": 374, "rfc_4122": 374, "reserved_microsoft": 374, "reserved_futur": 374, "getnod": [374, 456], "administ": [374, 437, 443, 456], "namespace_dn": [374, 442], "namespace_url": 374, "namespace_oid": 374, "namespace_x500": 374, "nc": 374, "x500": 374, "a8098c1a": [374, 442], "f86e": [374, 442], "11da": [374, 442], "bd1a": [374, 442], "00112444be1e": [374, 442], "6fa459ea": [374, 442], "ee8a": [374, 442], "3ca4": [374, 442], "894e": [374, 442], "db77e160355": [374, 442], "16fd2706": [374, 442], "8baf": [374, 442], "433b": [374, 442], "82eb": [374, 442], "8c7fada847da": [374, 442], "886313e1": [374, 442], "3b8a": [374, 442], "5372": [374, 442], "9b90": [374, 442], "0c9aee199e5d": [374, 442], "00010203": 374, "0405": 374, "0607": 374, "0809": 374, "0a0b0c0d0e0f": 374, "x05": 374, "x0e": 374, "x0f": 374, "movabl": 375, "copyabl": 375, "python35": [375, 428], "myenv": 375, "dep": 375, "env_dir": 375, "gitignor": 375, "powershel": [375, 436, 457], "executionpolici": 375, "remotesign": 375, "currentus": 375, "zsh": 375, "csh": [375, 428, 453], "tcsh": [375, 441], "virtual_env": [375, 454], "system_site_packag": 375, "with_pip": [375, 453], "upgrade_dep": 375, "scm_ignore_fil": 375, "create_": [375, 449], "_ignore_fil": 375, "create_git_ignore_fil": 375, "builder": [375, 385, 386, 388], "ensure_directori": 375, "create_configur": 375, "setup_python": 375, "setup_script": 375, "post_setup": 375, "holder": [375, 401, 416, 444], "__venv_dir__": 375, "install_script": 375, "env_nam": 375, "__venv_name__": [375, 458], "__venv_prompt__": [375, 458], "inc_path": 375, "lib_path": 375, "bin_path": 375, "bin_nam": 375, "__venv_bin_name__": 375, "env_ex": 375, "__venv_python__": 375, "env_exec_cmd": 375, "upgrade_depend": 375, "redirector": [375, 456], "extendedenvbuild": 375, "easy_instal": [375, 449], "nodist": 375, "nopip": 375, "install_setuptool": 375, "install_pip": 375, "binpath": 375, "distpath": 375, "ez_setup": 375, "system_sit": 375, "use_symlink": 375, "warrant": [376, 445], "filterwarn": [376, 430, 438, 440], "resetwarn": [376, 451], "user_n": 376, "fxn": 376, "skip_file_prefix": 376, "deprecated_api": 376, "_warn_skip": 376, "one_wai": 376, "r_luxury_yacht": 376, "t_wobbler_mangrov": 376, "another_wai": 376, "__warningregistry__": 376, "waveform": [377, 382], "pcm": 377, "wave_format_extens": 377, "ksdataformat_subtype_pcm": 377, "getnchannel": 377, "mono": 377, "stereo": [377, 425], "getsampwidth": 377, "getframer": 377, "getnfram": 377, "getcomptyp": 377, "getcompnam": 377, "getparam": [377, 453], "nchannel": 377, "sampwidth": 377, "framer": 377, "comptyp": 377, "compnam": 377, "readfram": 377, "getmark": [377, 450], "setnfram": 377, "setparam": 377, "writeframesraw": [377, 453], "writefram": [377, 453], "setnchannel": 377, "setsampwidth": [377, 453], "setframer": 377, "setcomptyp": 377, "__callback__": [378, 453], "callableproxytyp": 378, "getweakrefcount": 378, "getweakref": 378, "keyref": [378, 442], "valueref": [378, 442], "0x7fc859830220": 378, "referencetyp": 378, "do_something_us": 378, "extendedref": 378, "__counter": 378, "_id2obj_dict": 378, "id2obj": 378, "kenni": [378, 453], "newobj": 378, "_final": 378, "unloading_modul": 378, "autorais": [379, 442], "open_new": [379, 442], "open_new_tab": [379, 442], "epiphani": 379, "kfmclient": 379, "konqueror": [379, 442], "kfm": 379, "genericbrows": 379, "elink": [379, 442], "w3m": 379, "windowsdefault": 379, "macosxosascript": [379, 450], "safari": 379, "chrome": [379, 452], "chromium": [379, 452], "kde": 379, "kdedir": 379, "mosaic": [379, 449], "galeon": [379, 449], "skipston": [379, 449], "iceap": [379, 449], "closekei": 381, "hkei": 381, "computernam": 381, "createkeyex": [381, 444], "key_writ": 381, "subkei": [381, 436], "deletekeyex": [381, 444], "key_wow64_64kei": 381, "wow64": 381, "setvalueex": 381, "reg_expand_sz": 381, "windir": 381, "flushkei": 381, "flusher": 381, "hkey_us": 381, "se_restore_privileg": 381, "regloadkei": 381, "key_read": 381, "openkeyex": 381, "1601": 381, "queryvalueex": 381, "sebackupprivileg": 381, "security_attribut": 381, "reg_sz": 381, "key_set_valu": 381, "hkey_classes_root": 381, "subordin": [381, 444], "hkey_performance_data": 381, "hkey_current_config": 381, "hkey_dyn_data": 381, "key_all_access": 381, "standard_rights_requir": 381, "key_query_valu": 381, "key_create_sub_kei": 381, "key_enumerate_sub_kei": 381, "key_notifi": 381, "key_create_link": 381, "standard_rights_writ": 381, "standard_rights_read": 381, "key_execut": 381, "key_wow64_32kei": 381, "reg_binari": 381, "reg_dword": 381, "reg_dword_little_endian": 381, "reg_dword_big_endian": 381, "reg_link": 381, "reg_multi_sz": 381, "reg_non": 381, "reg_qword": [381, 455], "reg_qword_little_endian": 381, "reg_resource_list": 381, "reg_full_resource_descriptor": 381, "reg_resource_requirements_list": 381, "speaker": 382, "playsound": [382, 455], "messagebeep": [382, 455], "mb_ok": 382, "mb_iconasterisk": 382, "mb_iconexclam": 382, "mb_iconhand": 382, "mb_iconquest": 382, "snd_filenam": 382, "snd_alia": 382, "snd_nodefault": 382, "systemasterisk": 382, "systemexclam": 382, "systemhand": 382, "systemquest": 382, "snd_loop": 382, "snd_async": 382, "snd_memori": 382, "snd_purg": 382, "snd_nostop": 382, "snd_nowait": 382, "systemdefault": 382, "3333": 383, "wsgienviron": 383, "guess_schem": 383, "url_schem": 383, "fastcgi": 383, "request_uri": 383, "include_queri": 383, "application_uri": 383, "path_info": 383, "query_str": [383, 448], "shift_path_info": 383, "setup_testing_default": 383, "http_host": 383, "make_serv": [383, 442], "simple_app": 383, "start_respons": [383, 451], "ret": 383, "is_hop_by_hop": 383, "hop": 383, "filewrapp": [383, 448, 457], "filelik": 383, "wsgiserv": 383, "wsgirequesthandl": 383, "demo_app": 383, "set_app": 383, "get_app": 383, "get_environ": 383, "base_environ": 383, "get_stderr": 383, "middlewar": 383, "nonconform": 383, "validator_app": 383, "cgihandl": 383, "basecgihandl": 383, "run_onc": 383, "iiscgihandl": 383, "allowpathinfo": 383, "metabas": 383, "allowpathinfoforscriptmap": 383, "path_transl": 383, "vhost": 383, "iis7": 383, "simplehandl": [383, 437, 450], "scgi": 383, "get_stdin": 383, "add_cgi_var": 383, "_write": 383, "_flush": 383, "inputstream": 383, "errorstream": 383, "wsgi_multithread": 383, "wsgi_multiprocess": 383, "wsgi_run_onc": 383, "os_environ": 383, "server_softwar": 383, "origin_serv": 383, "get_schem": 383, "setup_environ": 383, "wsgi_file_wrapp": 383, "log_except": 383, "retarget": 383, "error_output": 383, "error_statu": 383, "error_head": 383, "error_bodi": 383, "spit": 383, "file_wrapp": 383, "http_version": 383, "read_environ": [383, 451], "startrespons": 383, "wsgiapplic": 383, "hello_world_app": 383, "mime_typ": 383, "billion": 384, "laugh": [384, 452], "blowup": 384, "bomb": [384, 397], "relianc": 384, "expat_vers": 384, "parseerror": [384, 388, 444, 451], "unexpand": 384, "countermeasur": 384, "xpath": [384, 458], "getdomimplement": [385, 386], "omg": [385, 386], "registerdomimplement": 385, "python_dom": 385, "hasfeatur": 385, "empty_namespac": 385, "namespaceuri": [385, 391], "xml_namespac": 385, "xmlns_namespac": 385, "xhtml_namespac": 385, "nodetyp": [385, 386], "createdocu": [385, 386], "qualifiednam": 385, "createdocumenttyp": 385, "element_nod": 385, "attribute_nod": 385, "text_nod": [385, 386], "cdata_section_nod": 385, "entity_nod": 385, "processing_instruction_nod": [385, 386], "comment_nod": 385, "document_nod": 385, "document_type_nod": 385, "notation_nod": 385, "parentnod": 385, "previouss": 385, "nextsibl": 385, "childnod": [385, 386, 437], "firstchild": 385, "lastchild": 385, "localnam": [385, 390, 391], "nodevalu": 385, "hasattribut": 385, "haschildnod": 385, "issamenod": 385, "uncontroversi": 385, "appendchild": [385, 386, 437], "newchild": 385, "insertbefor": [385, 437], "refchild": 385, "removechild": [385, 437], "oldchild": 385, "replacechild": 385, "clonenod": 385, "getelementsbytagnam": [385, 386, 437], "getelementsbytagnamen": 385, "internalsubset": 385, "documentel": [385, 386, 437], "createel": 385, "createelementn": 385, "createtextnod": [385, 386], "createcom": 385, "createprocessinginstruct": 385, "createattribut": 385, "setattributenod": 385, "createattributen": 385, "hasattributen": 385, "getattribut": [385, 387, 403], "getattributenod": 385, "getattributen": 385, "getattributenoden": 385, "removeattribut": 385, "notfounderr": 385, "removeattributenod": 385, "oldattr": 385, "removeattributen": 385, "qname": [385, 390, 391], "setattribut": 385, "newattr": [385, 439], "inuseattributeerr": 385, "setattributenoden": 385, "setattributen": 385, "domexcept": [385, 386], "domstringsizeerr": 385, "hierarchyrequesterr": 385, "indexsizeerr": 385, "invalidaccesserr": 385, "invalidcharactererr": 385, "invalidmodificationerr": 385, "invalidstateerr": 385, "namespaceerr": 385, "removenameditem": 385, "notsupportederr": 385, "nodataallowederr": 385, "nomodificationallowederr": 385, "syntaxerr": 385, "wrongdocumenterr": 385, "domstring_size_err": 385, "hierarchy_request_err": 385, "index_size_err": 385, "inuse_attribute_err": 385, "invalid_access_err": 385, "invalid_character_err": 385, "invalid_modification_err": 385, "invalid_state_err": 385, "namespace_err": 385, "not_found_err": 385, "not_supported_err": 385, "no_data_allowed_err": 385, "no_modification_allowed_err": 385, "syntax_err": 385, "wrong_document_err": 385, "domstr": [385, 386], "somevalu": 385, "anothervalu": 385, "_get_somevalu": 385, "_get_anothervalu": 385, "_set_anothervalu": 385, "corba": 385, "profici": 386, "dom1": 386, "datasourc": 386, "dom2": 386, "dom3": 386, "myxml": 386, "filename_or_fil": 386, "grasp": 386, "newdoc": 386, "some_tag": 386, "top_el": 386, "writexml": [386, 457], "addind": 386, "newl": 386, "subnod": 386, "prologu": 386, "toxml": [386, 387, 437, 440, 457], "toprettyxml": [386, 440, 457], "slideshow": 386, "nodelist": [386, 403], "handleslideshow": 386, "handleslideshowtitl": 386, "handletoc": 386, "handleslid": 386, "handleslidetitl": 386, "handlepoint": 386, "ul": [386, 439], "_get_foo": 386, "_set_foo": 386, "domtimestamp": 386, "entityrefer": 386, "make_pars": [387, 389, 391, 437], "feature_external_g": [387, 389, 390], "setfeatur": [387, 389, 391], "sales_item": 387, "expandnod": 387, "start_docu": 387, "end_docu": 387, "processing_instruct": 387, "ignorable_whitespac": 387, "documentfactori": 387, "contenthandl": [387, 389, 391, 392, 437], "sax2dom": 387, "stream_or_str": 387, "default_bufs": 387, "getev": 387, "celementtre": [388, 442, 451, 452], "liechtenstein": 388, "gdppc": 388, "141100": 388, "switzerland": 388, "singapor": 388, "59900": 388, "malaysia": 388, "panama": 388, "13600": 388, "costa": 388, "rica": 388, "colombia": 388, "country_data": 388, "getroot": [388, 442], "country_data_as_str": 388, "attrib": [388, 442], "read_ev": 388, "mytag": 388, "sometext": 388, "0x7fa66db2be58": 388, "iterpars": [388, 453], "new_rank": 388, "subel": [388, 451], "sometag": 388, "fiction": 388, "actor": [388, 416, 457], "lancelot": [388, 417], "archi": 388, "leach": 388, "sir": [388, 416, 446, 457], "gunther": 388, "clement": [388, 455], "xml_text": 388, "real_person": 388, "countrydata": 388, "dublin": 388, "purl": 388, "grandchildren": 388, "beneath": 388, "canonic": [388, 457], "xml_data": 388, "from_fil": [388, 397, 400, 455], "c14n": [388, 457], "normalis": 388, "c14n_output": 388, "out_fil": 388, "inputfil": 388, "with_com": 388, "strip_text": 388, "rewrite_prefix": 388, "qname_aware_tag": 388, "qname_aware_attr": 388, "exclude_attr": 388, "exclude_tag": 388, "fromstringlist": [388, 451], "isel": 388, "processinginstruct": [388, 390, 442], "register_namespac": [388, 444, 451], "xml_declar": [388, 444], "default_namespac": [388, 444], "short_empty_el": [388, 392, 453], "tostringlist": [388, 451, 453], "xmlid": 388, "elementinclud": [388, 442], "xi": 388, "xpointer": 388, "para": 388, "default_load": 388, "base_url": 388, "max_depth": 388, "itertext": [388, 444, 451], "unprefix": 388, "findtext": 388, "iterfind": [388, 451], "makeel": 388, "convei": 388, "perceptu": 388, "reorder_attribut": 388, "_setroot": 388, "0xb77e6fac": 388, "0xb77ec26c": 388, "0xb77ec2ac": 388, "0xb77ec1cc": 388, "text_or_uri": 388, "element_factori": 388, "comment_factori": 388, "pi_factori": 388, "insert_com": 388, "insert_pi": 388, "pubid": 388, "start_n": [388, 457], "end_n": [388, 457], "c14nwritertarget": 388, "attrs_dict": 388, "maxdepth": 388, "examplexml": 388, "parser_list": 389, "create_pars": [389, 391], "filename_or_stream": 389, "errorhandl": [389, 391, 430, 443], "saxparseexcept": [389, 390], "inputsourc": [389, 390, 392, 454], "attributesn": [389, 390], "saxnotrecognizedexcept": [389, 391], "saxnotsupportedexcept": [389, 391], "focal": 389, "getexcept": 389, "feature_namespac": 390, "feature_namespace_prefix": 390, "feature_string_intern": 390, "feature_valid": 390, "feature_external_p": 390, "all_featur": 390, "property_lexical_handl": 390, "property_declaration_handl": 390, "sax2lib": 390, "declhandl": 390, "property_dom_nod": 390, "property_xml_str": 390, "all_properti": 390, "setdocumentloc": 390, "documenthandl": [390, 391], "startdocu": 390, "enddocu": 390, "startprefixmap": 390, "endprefixmap": 390, "startel": [390, 391, 437], "endel": [390, 437], "startelementn": [390, 391], "endelementn": 390, "ignorablewhitespac": 390, "skippedent": 390, "notationdecl": 390, "unparsedentitydecl": 390, "resolveent": [390, 391], "fatalerror": 390, "setproperti": [390, 391], "startdtd": [390, 441], "public_id": 390, "system_id": [390, 391], "enddtd": 390, "startcdata": 390, "endcdata": 390, "entityresolv": 391, "attributesimpl": 391, "attributesnsimpl": 391, "getcontenthandl": 391, "setcontenthandl": [391, 437], "getdtdhandl": 391, "dtdhandler": 391, "setdtdhandl": 391, "getentityresolv": 391, "setentityresolv": 391, "geterrorhandl": 391, "seterrorhandl": 391, "getfeatur": 391, "getproperti": 391, "propertynam": 391, "formed": 391, "getcolumnnumb": 391, "getlinenumb": 391, "getpublicid": 391, "getsystemid": 391, "setpublicid": 391, "setsystemid": 391, "setencod": 391, "setbytestream": 391, "bytefil": 391, "getbytestream": 391, "setcharacterstream": 391, "charfil": 391, "getcharacterstream": 391, "getlength": 391, "gettyp": [391, 442], "getvaluebyqnam": 391, "getnamebyqnam": 391, "getqnamebynam": 391, "getqnam": 391, "amp": [392, 451], "quoteattr": 392, "xmlgener": 392, "xmlfilterbas": 392, "prepare_input_sourc": 392, "use_datetim": [394, 442], "use_builtin_typ": [394, 395, 458], "safetransport": 394, "ontosi": 394, "i4": 394, "i8": [394, 443], "biginteg": 394, "2147483648": 394, "2147483647": [394, 410, 442], "nil": [394, 440], "bigdecim": 394, "listmethod": [394, 395], "methodsignatur": [394, 395], "methodhelp": [394, 395], "simplexmlrpcserv": [394, 439, 441, 442, 443, 444, 445], "register_funct": [394, 395, 456], "python_logo": 394, "fetched_python_logo": 394, "faultcod": 394, "faultstr": 394, "errmsg": 394, "boxcar": 394, "register_multicall_funct": [394, 395], "methodrespons": 394, "betti": 394, "userland": 394, "getstatenam": 394, "proxiedtransport": 394, "proxy_head": 394, "httpconnect": [394, 443, 444, 451, 453, 454, 455, 456], "requesthandl": 395, "simplexmlrpcrequesthandl": [395, 441, 444], "logrequest": 395, "register_inst": 395, "allow_dotted_nam": 395, "_dispatch": 395, "intrud": 395, "register_introspection_funct": 395, "multical": 395, "rpc_path": [395, 442], "rpc2": [395, 442], "adder_funct": 395, "serverproxi": [395, 454, 457], "exampleservic": 395, "getdata": 395, "currenttim": 395, "getcurrenttim": 395, "nkeyboard": 395, "request_text": 395, "docxmlrpcrequesthandl": 395, "set_server_titl": 395, "server_titl": 395, "set_server_nam": 395, "set_server_document": 395, "server_document": 395, "pyz": [396, 454], "mainfn": 396, "deflat": [396, 399], "create_arch": [396, 456], "get_interpret": 396, "old_arch": 396, "new_arch": 396, "pyzw": 396, "pkzip": [397, 398, 437], "zip64": [397, 442], "badzipfil": 397, "largezipfil": 397, "getinfo": 397, "infolist": 397, "is_zipfil": [397, 444], "zip_stor": 397, "zip_defl": [397, 427], "zip_bzip2": 397, "zip_lzma": 397, "phil": [397, 398, 443], "katz": [397, 398], "allowzip64": [397, 453], "strict_timestamp": 397, "metadata_encod": 397, "2107": 397, "myzip": 397, "namelist": 397, "force_zip64": 397, "zipextfil": [397, 451], "file_s": [397, 439], "appreci": [397, 401, 415], "printdir": 397, "setpassword": 397, "testzip": 397, "compress_typ": [397, 444], "writestr": [397, 444], "zinfo_or_arcnam": 397, "zinfo_or_directori": 397, "grandchild": 397, "zipp": 397, "writepi": [397, 453], "filterfunc": [397, 453], "zf": 397, "myprog": 397, "notest": 397, "testal": [397, 443], "bogu": [397, 444], "create_system": 397, "create_vers": 397, "extract_vers": 397, "flag_bit": 397, "internal_attr": 397, "external_attr": 397, "header_offset": 397, "compress_s": 397, "ahlstrom": [398, 437, 440], "zipimporterror": 398, "archivepath": 398, "8467": [398, 440], "jwzthread": [398, 440], "adler": [399, 401], "max_wbit": 399, "z_best_spe": 399, "z_best_compress": 399, "z_no_compress": 399, "z_default_compress": 399, "compressobj": 399, "memlevel": 399, "def_mem_level": 399, "z_default_strategi": 399, "zdict": 399, "z_filter": 399, "z_huffman_onli": 399, "z_rle": 399, "z_fix": 399, "def_buf_s": 399, "decompressobj": 399, "z_no_flush": 399, "z_partial_flush": 399, "z_sync_flush": 399, "z_full_flush": 399, "z_block": 399, "z_finish": 399, "unconsumed_tail": 399, "unconsum": 399, "zlib_vers": 399, "zlib_runtime_vers": [399, 452], "los_angel": [400, 458], "dt_add": 400, "495": 400, "dt_utc": 400, "zoneinfonotfounderror": 400, "tzpath": [400, 431], "reset_tzpath": 400, "pythontzpath": 400, "invalidtzpathwarn": 400, "fobj": [400, 413], "no_cach": 400, "only_kei": 400, "new_york": 400, "asia": 400, "tokyo": 400, "cldr": 400, "kwajalein": 400, "01t03": 400, "europe_berlin_pkl": 400, "berlin": 400, "europe_berlin_pkl_nc": 400, "available_timezon": 400, "posixrul": 400, "cautionari": [400, 441], "1990": [401, 443], "netherland": 401, "reston": 401, "virginia": 401, "pythonlab": [401, 437, 439], "intellectu": 401, "sponsor": 401, "opensourc": 401, "thru": 401, "license": 401, "herebi": 401, "nonexclus": 401, "royalti": 401, "herein": 401, "OF": [401, 406], "merchant": 401, "THAT": 401, "WILL": 401, "infring": 401, "consequenti": 401, "partnership": 401, "ventur": 401, "saratoga": 401, "santa": 401, "clara": 401, "95051": 401, "1895": 401, "preston": [401, 456], "20191": 401, "1013": 401, "feder": 401, "commonwealth": 401, "notwithstand": [401, 437], "tortiou": 401, "_random": 401, "sci": 401, "hiroshima": 401, "mat": [401, 444], "mt": 401, "mt2002": 401, "emt19937ar": 401, "mt19937": 401, "takuji": 401, "makoto": 401, "init_genrand": 401, "init_by_arrai": 401, "init_kei": 401, "key_length": 401, "redistribut": 401, "exemplari": 401, "procur": 401, "liabil": 401, "tort": 401, "SUCH": 401, "emt": 401, "1996": 401, "asynchat": [401, 443, 448, 453], "asyncor": [401, 441, 443, 448], "rush": [401, 437], "timothi": 401, "mallei": [401, 440], "timo": 401, "alum": 401, "industri": 401, "whielacronx": 401, "mojam": 401, "montanaro": [401, 437, 440, 441, 442, 443], "bioreason": 401, "automatrix": 401, "lanc": 401, "ellinghous": 401, "cathedr": 401, "republ": 401, "jansen": [401, 439, 440, 454], "lab": [401, 415, 437, 439, 440], "laboratori": 401, "sublicens": 401, "furnish": 401, "noninfring": 401, "doug": 401, "pyhash": [401, 431], "marek": 401, "majkowski": 401, "dan": [401, 441, 442, 451, 452, 453, 454, 458], "popcount": 401, "majek": 401, "csiphash": 401, "supercop": 401, "crypto_auth": 401, "djb": 401, "little2": 401, "131002": 401, "siphash": [401, 453], "gai": [401, 444, 446], "20220517033456": 401, "netlib": 401, "lucent": 401, "BEING": 401, "ITS": 401, "reproduct": 401, "licensor": 401, "authorship": 401, "editori": [401, 437], "verbal": 401, "conspicu": 401, "perpetu": [401, 453], "irrevoc": 401, "patent": 401, "litig": 401, "counterclaim": 401, "lawsuit": 401, "alleg": 401, "contributori": 401, "promin": [401, 445], "addendum": 401, "constru": 401, "grossli": 401, "goodwil": 401, "stoppag": 401, "malfunct": 401, "indemn": 401, "indemnifi": 401, "defend": 401, "clark": [401, 452], "loup": 401, "gailli": 401, "misrepres": 401, "plainli": 401, "jloup": 401, "madler": 401, "alumni": 401, "caltech": 401, "owen": 401, "_decim": [401, 431, 452], "stefan": [401, 444, 448, 452, 453, 454, 455, 456, 457, 458], "krah": [401, 444, 452, 455], "xmltestdata": 401, "c14n2": 401, "ercim": 401, "keio": 401, "beihang": 401, "incarn": 402, "if_stmt": [402, 406], "while_stmt": [402, 406], "for_stmt": [402, 406], "try_stmt": [402, 406], "with_stmt": [402, 406], "match_stmt": [402, 406], "funcdef": 402, "async_with_stmt": 402, "async_for_stmt": 402, "async_funcdef": 402, "stmt_list": [402, 412], "compound_stmt": [402, 406, 412], "simple_stmt": [402, 406], "assignment_express": [402, 405, 406], "target_list": [402, 405, 411], "starred_list": [402, 405], "try1_stmt": 402, "try2_stmt": 402, "try3_stmt": 402, "with_stmt_cont": 402, "with_item": [402, 406], "hit_except": 402, "subject_expr": [402, 406], "case_block": [402, 406], "star_named_express": [402, 406], "named_express": [402, 406], "prerequisit": [402, 445], "636": [402, 416, 447], "ebnf": [402, 406], "open_sequence_pattern": [402, 406], "as_pattern": [402, 406], "or_pattern": [402, 406], "literal_pattern": [402, 406], "capture_pattern": [402, 406], "wildcard_pattern": [402, 406], "value_pattern": [402, 406], "group_pattern": [402, 406], "sequence_pattern": [402, 406], "mapping_pattern": [402, 406], "class_pattern": [402, 406], "closed_pattern": [402, 406], "signed_numb": [402, 406], "name_or_attr": [402, 406], "name1": [402, 442], "name2": [402, 442], "maybe_sequence_pattern": [402, 406], "maybe_star_pattern": [402, 406], "star_pattern": [402, 406], "p3": 402, "items_pattern": [402, 406], "key_value_pattern": [402, 406], "double_star_pattern": [402, 406], "pattern_argu": 402, "positional_pattern": [402, 406], "keyword_pattern": [402, 406], "parameter_list": [402, 405], "defparamet": 402, "parameter_list_no_posonli": 402, "parameter_list_stararg": 402, "614": [402, 458], "whats_on_the_telli": 402, "570": [402, 457], "3107": [402, 416, 445, 454, 456], "eager": [402, 429, 449], "3129": [402, 445], "318": 402, "param1": 402, "param2": 402, "do_stuff": 402, "some_coroutin": 402, "suite2": 402, "aenter": 402, "aexit": 402, "amax": 402, "overly_gener": 402, "simpletypevar": 402, "typevarwithbound": 402, "typevarwithconstraint": 402, "simpletypevartupl": 402, "simpleparamspec": 402, "type_params_of_func": 402, "liberti": 402, "some_default": 402, "default_of_arg": 402, "bound_of_t": 402, "type_params_of_bag": 402, "type_params_of_listorset": 402, "value_of_listorset": 402, "neumann": 403, "illus": [403, 419, 451], "affix": 403, "__closure__": [403, 445], "cell_cont": 403, "0x2000": 403, "0x10": 403, "0x1000": 403, "co_posit": [403, 448], "precari": 403, "parentclass": 403, "ocert": [403, 430], "asymmetri": 403, "verbosemodul": 403, "562": 403, "__objclass__": 403, "unlist": 403, "philosoph": 403, "australianphilosoph": 403, "bruce": 403, "mysubclass": 403, "__classcell__": [403, 455, 457], "3135": [403, 444, 445], "boundless": 403, "class_of_obj": 403, "breakfast": 403, "__rtruediv__": 403, "__rfloordiv__": [403, 447], "a_tupl": 403, "__release_buffer__": 403, "unbind": 404, "simpleexpr": 404, "repair": [404, 436], "bnf": [405, 409, 438], "othernam": [405, 437], "enclosur": 405, "parenth_form": 405, "list_displai": 405, "dict_displai": 405, "set_displai": 405, "generator_express": 405, "yield_atom": 405, "__spam": [405, 415], "_ham__spam": 405, "stringliter": 405, "bytesliter": 405, "imagnumb": 405, "starred_express": [405, 406, 411], "unparenthes": [405, 447, 458], "comp_for": 405, "or_test": 405, "comp_it": 405, "comp_if": 405, "530": 405, "dict_item_list": 405, "dict_comprehens": 405, "dict_item": 405, "or_expr": [405, 410], "448": 405, "yield_express": [405, 410, 411], "expression_list": [405, 411, 412], "subiter": [405, 452], "subgener": 405, "yield_from": [405, 448], "attributeref": [405, 411], "slice_list": 405, "slice_item": 405, "proper_slic": 405, "positional_argu": 405, "starred_and_keyword": 405, "keywords_argu": 405, "positional_item": 405, "keyword_item": 405, "x1": [405, 416, 447, 449], "x3": 405, "x4": 405, "ym": 405, "await_expr": 405, "u_expr": 405, "m_expr": 405, "a_expr": 405, "shift_expr": [405, 406], "and_expr": 405, "xor_expr": 405, "comp_oper": 405, "op1": 405, "op2": 405, "opn": 405, "reflex": 405, "and_test": 405, "not_test": 405, "conditional_express": [405, 410], "lambda_expr": 405, "starred_item": 405, "expr4": 405, "expr5": 405, "roundoff": 405, "0041": 405, "precompos": 405, "u00c7": 405, "u0043": 405, "u0327": 405, "peg": [406, 447, 448, 449, 458], "617": [406, 447, 448, 458], "_pypegen_pars": 406, "reserved_keyword": 406, "n_keyword_list": 406, "start_rul": 406, "file_rul": 406, "interactive_rul": 406, "eval_rul": 406, "py_func_type_input": 406, "func_type_rul": 406, "grammat": 406, "invalid_": 406, "rule_nam": 406, "e1": [406, 451], "e2": 406, "first_alt": 406, "second_alt": 406, "mod_ti": [406, 447], "_pypegen_make_modul": 406, "statement_newlin": 406, "_pyast_interact": 406, "arena": [406, 430, 442, 458], "_pyast_express": 406, "type_express": 406, "_pyast_functiontyp": 406, "asdl_stmt_seq": 406, "_pypegen_seq_flatten": 406, "_pypegen_singleton_seq": 406, "stmt_ty": 406, "_pyast_pass": 406, "_pypegen_interactive_exit": 406, "type_alia": 406, "star_express": 406, "_pyast_expr": 406, "return_stmt": [406, 411], "import_stmt": [406, 411], "raise_stmt": [406, 411], "del_stmt": [406, 411], "yield_stmt": [406, 411], "assert_stmt": [406, 411], "_pyast_break": 406, "_pyast_continu": 406, "global_stmt": [406, 411], "nonlocal_stmt": [406, 411], "function_def": 406, "class_def": 406, "annotated_rh": 406, "yield_expr": 406, "check_vers": 406, "_pyast_annassign": 406, "expr_ti": 406, "_pypegen_set_expr_context": 406, "single_target": 406, "single_subscript_attribute_target": 406, "asdl_expr_seq": 406, "star_target": 406, "tc": 406, "_pyast_assign": 406, "new_type_com": 406, "_pyast_augassign": 406, "invalid_assign": 406, "augoper": 406, "_pypegen_augoper": 406, "_pyast_return": 406, "_pyast_rais": 406, "_pyast_glob": 406, "asdl_identifier_seq": 406, "_pypegen_map_names_to_id": 406, "_pyast_nonloc": 406, "del_target": 406, "_pyast_delet": 406, "invalid_del_stmt": 406, "_pyast_assert": 406, "invalid_import": 406, "dotted_as_nam": 406, "_pyast_import": 406, "dotted_nam": 406, "import_from_target": 406, "_pyast_importfrom": 406, "_pypegen_seq_count_dot": 406, "asdl_alias_seq": 406, "import_from_as_nam": 406, "alias_ti": 406, "_pypegen_alias_for_star": 406, "invalid_import_from_target": 406, "_pyast_alia": 406, "_pypegen_join_names_with_dot": 406, "invalid_block": 406, "class_def_raw": 406, "_pypegen_class_def_decor": 406, "invalid_class_def_raw": 406, "_pyast_classdef": 406, "function_def_raw": 406, "_pypegen_function_def_decor": 406, "invalid_def_raw": 406, "func_type_com": 406, "_pyast_functiondef": 406, "arguments_ti": 406, "_pypegen_empty_argu": 406, "_pyast_asyncfunctiondef": 406, "invalid_paramet": 406, "slash_no_default": 406, "asdl_arg_seq": 406, "param_no_default": 406, "param_with_default": 406, "star_etc": 406, "_pypegen_make_argu": 406, "slash_with_default": 406, "slashwithdefault": 406, "_pypegen_slash_with_default": 406, "staretc": 406, "invalid_star_etc": 406, "param_maybe_default": 406, "_pypegen_star_etc": 406, "param_no_default_star_annot": 406, "arg_ti": 406, "invalid_kwd": 406, "_pypegen_add_type_comment_to_arg": 406, "param_star_annot": 406, "namedefaultpair": 406, "_pypegen_name_default_pair": 406, "_pyast_arg": 406, "star_annot": 406, "invalid_default": 406, "invalid_if_stmt": 406, "elif_stmt": 406, "_pyast_if": 406, "else_block": 406, "invalid_elif_stmt": 406, "invalid_else_stmt": 406, "invalid_while_stmt": 406, "_pyast_whil": 406, "invalid_for_stmt": 406, "_pyast_for": 406, "_pyast_asyncfor": 406, "invalid_for_target": 406, "invalid_with_stmt_ind": 406, "asdl_withitem_seq": 406, "_pyast_with": 406, "_pyast_asyncwith": 406, "invalid_with_stmt": 406, "withitem_ti": 406, "_pyast_withitem": 406, "invalid_with_item": 406, "invalid_try_stmt": 406, "finally_block": 406, "_pyast_tri": 406, "asdl_excepthandler_seq": 406, "except_block": 406, "except_star_block": 406, "_pyast_trystar": 406, "excepthandler_ti": 406, "invalid_except_stmt_ind": 406, "_pyast_excepthandl": 406, "invalid_except_stmt": 406, "invalid_except_star_stmt_ind": 406, "invalid_finally_stmt": 406, "asdl_match_case_seq": 406, "_pyast_match": 406, "invalid_match_stmt": 406, "_pyast_tupl": 406, "_pypegen_seq_insert_in_front": 406, "match_case_ti": 406, "invalid_case_block": 406, "_pyast_match_cas": 406, "pattern_ti": 406, "asdl_pattern_seq": 406, "_pyast_matchsequ": 406, "pattern_capture_target": 406, "_pyast_matcha": 406, "invalid_as_pattern": 406, "asdl_seq_len": 406, "asdl_seq_get": 406, "_pyast_matchor": 406, "_pyast_matchvalu": 406, "complex_numb": 406, "_pyast_matchsingleton": 406, "literal_expr": 406, "_pyast_const": 406, "signed_real_numb": 406, "imaginary_numb": 406, "_pyast_binop": 406, "_pyast_unaryop": 406, "real_numb": 406, "_pypegen_ensure_r": 406, "_pypegen_ensure_imaginari": 406, "_pyast_attribut": 406, "asdl_seq": 406, "_pyast_matchstar": 406, "_pyast_matchmap": 406, "_pypegen_get_pattern_kei": 406, "_pypegen_get_pattern": 406, "keypatternpair": 406, "_pypegen_key_pattern_pair": 406, "_pyast_matchclass": 406, "invalid_class_pattern": 406, "_pyast_typealia": 406, "asdl_type_param_seq": 406, "type_param_seq": 406, "type_param_ti": 406, "type_param_bound": 406, "_pyast_typevar": 406, "raise_syntax_error_starting_from": 406, "tuple_kind": 406, "_pyast_typevartupl": 406, "_pyast_paramspec": 406, "invalid_express": 406, "invalid_legacy_express": 406, "_pyast_ifexp": 406, "lambdef": 406, "_pyast_yieldfrom": 406, "_pyast_yield": 406, "bitwise_or": 406, "_pyast_star": 406, "_pyast_namedexpr": 406, "invalid_named_express": 406, "_pyast_boolop": 406, "compare_op_bitwise_or_pair": 406, "_pyast_compar": 406, "asdl_int_seq": 406, "_pypegen_get_cmpop": 406, "_pypegen_get_expr": 406, "cmpopexprpair": 406, "eq_bitwise_or": 406, "noteq_bitwise_or": 406, "lte_bitwise_or": 406, "lt_bitwise_or": 406, "gte_bitwise_or": 406, "gt_bitwise_or": 406, "notin_bitwise_or": 406, "in_bitwise_or": 406, "isnot_bitwise_or": 406, "is_bitwise_or": 406, "_pypegen_cmpop_expr_pair": 406, "tok": 406, "_pypegen_check_barry_as_flufl": 406, "bitwise_xor": 406, "bitwise_and": 406, "await_primari": 406, "_pyast_await": 406, "_pyast_cal": 406, "_pyast_subscript": 406, "_pyast_slic": 406, "invalid_group": 406, "lambda_param": 406, "_pyast_lambda": 406, "invalid_lambda_paramet": 406, "lambda_paramet": 406, "lambda_slash_no_default": 406, "lambda_param_no_default": 406, "lambda_param_with_default": 406, "lambda_star_etc": 406, "lambda_slash_with_default": 406, "invalid_lambda_star_etc": 406, "lambda_param_maybe_default": 406, "lambda_kwd": 406, "invalid_lambda_kwd": 406, "fstring_replacement_field": 406, "_pypegen_constant_from_token": 406, "debug_expr": 406, "fstring_convers": 406, "fstring_full_format_spec": 406, "_pypegen_formatted_valu": 406, "invalid_replacement_field": 406, "resulttokenwithmetadata": 406, "conv_token": 406, "conv": [406, 427, 454], "_pypegen_check_fstring_convers": 406, "fstring_format_spec": 406, "_pypegen_setup_full_format_spec": 406, "_pypegen_decoded_constant_from_token": 406, "fstring": 406, "_pypegen_joined_str": 406, "_pypegen_constant_from_str": 406, "_pypegen_concatenate_str": 406, "_pyast_list": 406, "_pyast_set": 406, "double_starred_kvpair": 406, "_pyast_dict": 406, "_pypegen_get_kei": 406, "_pypegen_get_valu": 406, "invalid_double_starred_kvpair": 406, "keyvaluepair": 406, "_pypegen_key_value_pair": 406, "kvpair": 406, "for_if_claus": 406, "asdl_comprehension_seq": 406, "comprehension_ti": 406, "_pyast_comprehens": 406, "_pyast_listcomp": 406, "invalid_comprehens": 406, "_pyast_setcomp": 406, "_pyast_generatorexp": 406, "_pyast_dictcomp": 406, "invalid_dict_comprehens": 406, "invalid_argu": 406, "_pypegen_collect_call_seq": 406, "_pypegen_dummy_nam": 406, "check_null_allow": 406, "_pypegen_seq_extract_starred_expr": 406, "asdl_keyword_seq": 406, "_pypegen_seq_delete_starred_expr": 406, "kwarg_or_star": 406, "kwarg_or_double_star": 406, "_pypegen_join_sequ": 406, "invalid_starred_express": 406, "keywordorstar": 406, "invalid_kwarg": 406, "_pypegen_keyword_or_star": 406, "keyword_ti": 406, "_pyast_keyword": 406, "star_targets_list_seq": 406, "star_targets_tuple_seq": 406, "target_with_star_atom": 406, "t_primari": 406, "t_lookahead": 406, "star_atom": 406, "del_t_atom": 406, "_pypegen_seq_append_to_end": 406, "invalid_double_type_com": 406, "raise_syntax_error_known_loc": 406, "raise_syntax_error_known_rang": 406, "_pypegen_get_last_comprehension_item": 406, "pypegen_last_item": 406, "_pypegen_nonparen_genexp_in_cal": 406, "_pypegen_arguments_parsing_error": 406, "_without_invalid": 406, "expression_without_invalid": 406, "_pypegen_check_legacy_stmt": 406, "kf": 406, "dsfsdf": 406, "_pypegen_get_expr_nam": 406, "invalid_ann_assign_target": 406, "raise_syntax_error_invalid_target": 406, "raise_indentation_error": 406, "invalid_parameters_help": 406, "raise_syntax_error": 406, "invalid_lambda_parameters_help": 406, "for_target": 406, "invalid_class_argument_pattern": 406, "pypegen_first_item": 406, "invalid_kvpair": 406, "raise_error_known_loc": 406, "raise_syntax_error_on_next_token": 406, "invalid_conversion_charact": 406, "immateri": 407, "reinitialis": 407, "mpf": 407, "_init_module_attr": 407, "atyp": 407, "module_repr": [407, 447, 448, 449, 453], "subpackage1": 407, "modulex": 407, "modulei": 407, "subpackage2": 407, "modulez": 407, "modulea": 407, "lloyd": 409, "hugunin": 409, "lc_letter": 409, "angular": 409, "vim": [410, 434, 453], "fileencod": 410, "bram": [410, 439], "moolenaar": 410, "2100": 410, "maart": 410, "mei": 410, "juni": 410, "augustu": 410, "oktob": 410, "unwis": 410, "uax": 410, "3131": [410, 445], "xid_start": 410, "xid_continu": 410, "other_id_start": 410, "id_start": 410, "mc": 410, "other_id_continu": 410, "id_continu": 410, "connector": 410, "proplist": 410, "derivedcoreproperti": 410, "breakag": [410, 437, 438, 440, 449, 456], "stringprefix": 410, "shortstr": 410, "longstr": 410, "shortstringitem": 410, "longstringitem": 410, "shortstringchar": 410, "stringescapeseq": 410, "longstringchar": 410, "bytesprefix": 410, "shortbyt": 410, "longbyt": 410, "shortbytesitem": 410, "longbytesitem": 410, "shortbyteschar": 410, "bytesescapeseq": 410, "longbyteschar": 410, "ur": [410, 445], "reintroduc": [410, 447], "codebas": [410, 448, 453, 454], "ooo": 410, "0o377": [410, 448, 449], "mistyp": 410, "literal_char": 410, "replacement_field": 410, "f_express": 410, "abc5": 410, "34567": [410, 455], "0x400": 410, "mill": 410, "decinteg": 410, "bininteg": 410, "octinteg": 410, "hexinteg": 410, "nonzerodigit": 410, "bindigit": 410, "0o177": 410, "0b100110111": 410, "79228162514264337593543950336": 410, "0xdeadbeef": 410, "100_000_000_000": 410, "0b_1110_0101": 410, "pointfloat": 410, "exponentfloat": 410, "077e010": 410, "77e10": 410, "14e": 410, "0e0": 410, "14_15_93": 410, "14j": 410, "10j": 410, "001j": 410, "1e100j": 410, "14_15_93j": 410, "expression_stmt": 411, "assignment_stmt": 411, "augmented_assignment_stmt": 411, "annotated_assignment_stmt": 411, "pass_stmt": 411, "break_stmt": 411, "continue_stmt": 411, "future_stmt": 411, "type_stmt": 411, "3132": [411, 445], "augtarget": 411, "augop": 411, "expression1": 411, "expression2": 411, "tracebackobj": 411, "relative_modul": 411, "fbb": 411, "subpkg2": 411, "subpkg1": 411, "236": 411, "3104": [411, 445], "value_of_point": 411, "ish": 413, "qualif": [413, 430, 453], "pythonrc": 413, "startup_fil": 413, "photo": [414, 427], "awk": [414, 437], "reptil": 414, "invit": [414, 434, 453], "mundan": 414, "partak": 415, "neat": [415, 439], "the_answ": 415, "scope_test": 415, "do_loc": 415, "do_nonloc": 415, "do_glob": 415, "realpart": 415, "imagpart": 415, "canin": 415, "fido": 415, "buddi": 415, "mistaken": [415, 437, 451], "add_trick": 415, "priorit": 415, "warehous": [415, 451], "w2": 415, "headach": 415, "addtwic": 415, "legitim": 415, "worthi": 415, "derivedclassnam": 415, "baseclassnam": 415, "base3": 415, "bottommost": 415, "_spam": 415, "intraclass": 415, "items_list": 415, "__updat": 415, "mappingsubclass": 415, "_mapping__upd": 415, "_mappingsubclass__upd": 415, "pervad": 415, "str_iter": 415, "0x10c90e650": 415, "rev": 415, "0x00a1db50": 415, "golf": 415, "xvec": 415, "yvec": 415, "260": [415, 436, 444, 455], "unique_word": 415, "valedictorian": 415, "gpa": 415, "graduat": [415, 454, 457], "pun": 416, "defenestr": 416, "han": [416, 440, 447], "\u00e9l\u00e9onor": 416, "\u666f\u592a\u90ce": 416, "active_us": 416, "myemptyclass": 416, "initlog": 416, "rust": 416, "http_error": [416, 447], "teapot": [416, 447], "where_i": 416, "grass": [416, 447], "987": [416, 424, 425], "1597": 416, "10042ed0": 416, "fib2": [416, 425], "f100": 416, "ask_ok": 416, "vooooom": 416, "bereft": 416, "daisi": 416, "cheeseshop": 416, "limburg": 416, "runni": 416, "shopkeep": 416, "palin": 416, "shop": [416, 429], "pos1": 416, "pos2": 416, "pos_or_kwd": 416, "kwd1": 416, "kwd2": 416, "standard_arg": 416, "pos_only_arg": 416, "kwd_only_arg": 416, "combined_exampl": 416, "pos_onli": 416, "kwd_onli": 416, "write_multiple_item": 416, "scoop": [416, 445], "bleedin": 416, "demis": 416, "make_incrementor": 416, "uppercamelcas": 416, "lowercase_with_underscor": 416, "slightest": 416, "kiwi": 417, "tangerin": 417, "grape": 417, "7j": 417, "freshfruit": 417, "loganberri": 417, "passion": 417, "weapon": 417, "14159": [417, 419], "3x4": 417, "transposed_row": 417, "88888": 417, "basket": 417, "crabgrass": 417, "alacazam": [417, 441], "tel": 417, "sape": 417, "4139": 417, "brave": 417, "tic": 417, "tac": 417, "toe": 417, "raw_data": 417, "filtered_data": 417, "string3": 417, "trondheim": 417, "hammer": [417, 437], "non_nul": 417, "lesser": 417, "this_fail": 418, "hither": 418, "flew": 418, "bool_return": 418, "undertaken": 418, "0001100110011001100110011001100110011001100110011": 419, "3602879701896397": 419, "10000000000000001": 419, "12g": [419, 437], "beget": 419, "peril": 419, "unduli": 419, "casual": 419, "3537115888337719": 419, "1125899906842624": 419, "921f9f01b866ep": 419, "10430216751806065": 419, "266310978": 419, "67179024": 419, "143401161448607": 419, "143401161400469": 419, "266262841": 419, "31058735": 419, "003244936839808227": 419, "042173697819788e": 419, "042178034628478e": 419, "0051575902860057365": 419, "strive": [419, 444], "7205759403792794": 419, "17f": 419, "36028797018963968": 419, "referendum": 421, "yes_vot": 421, "42_572_654": 421, "no_vot": 421, "43_132_495": 421, "vote": [421, 437, 442, 451], "42572654": 421, "40000": 421, "dcab": 421, "7678": 421, "phone": [421, 427, 451], "10d": 421, "eel": 421, "hovercraft": 421, "roach": [421, 455, 457], "horribl": 421, "manfr": 421, "8637678": 421, "tidili": 421, "4d": 421, "729": 421, "00012": 421, "workfil": 421, "0123456789abcdef": 421, "6th": 421, "constantli": [421, 454], "korn": 422, "ipython": [422, 443, 447], "bpython": 422, "guru": 423, "excursu": 423, "entireti": 423, "the_world_is_flat": 423, "666666666666667": 424, "rabbit": 424, "thingi": 424, "glu": 424, "ium": 424, "unununium": 424, "tho": 424, "supercalifragilisticexpialidoci": [424, 427], "fibo": 425, "itemnam": 425, "utilis": 425, "uf": 425, "_framework": 425, "_git": 425, "_home": 425, "callstat": [425, 456, 458], "wavread": 425, "wavwrit": 425, "aiffread": 425, "aiffwrit": 425, "auread": 425, "auwrit": 425, "vocod": 425, "karaok": 425, "echofilt": 425, "atten": 425, "contrarili": 425, "subitem": 425, "subsubitem": 425, "specific_submodul": 425, "dozen": [426, 443, 451], "python312": [426, 427], "accesslog": 426, "installdir": [426, 431], "tea": 426, "70710678118654757": 426, "17970987693706186": 426, "6071428571428572": 426, "worldtimeapi": 426, "01t01": 426, "689215": 426, "soothsay": 426, "jcaesar": 426, "1964": 426, "14368": 426, "witch": 426, "wrist": 426, "226805979": 426, "57535828626024577": 426, "54962537085770791": 426, "effortless": 426, "teststatisticalfunct": 426, "test_averag": 426, "english_unit": 427, "villag": 427, "folk": 427, "nottingham": 427, "ditch": 427, "fund": [427, 437, 442, 448], "nottinghamfolk": 427, "unladen": [427, 451], "elect": [427, 451], "photofil": 427, "img_1074": 427, "img_1076": 427, "img_1077": 427, "batchrenam": 427, "seqnum": 427, "ashley_": 427, "ashley_0": 427, "ashley_1": 427, "ashley_2": 427, "iiihh": 427, "comp_siz": 427, "uncomp_s": 427, "filenames": 427, "decoupl": [427, 448, 454, 456], "asynczip": 427, "4000": 427, "700": 427, "22222": 427, "26932": 427, "task3": 427, "task4": 427, "unsearch": 427, "starting_nod": 427, "breadth_first_search": 427, "gen_mov": 427, "is_goal": 427, "lua": 427, "financi": 427, "regulatori": 427, "cent": 427, "09999999999999995": 427, "142857142857142857142857142857142857": 427, "nova": 428, "136kb": 428, "whl": 428, "kenneth": 428, "reitz": 428, "kennethreitz": 428, "akuchl": 428, "reinforc": 429, "skim": 429, "sizabl": [429, 438, 439], "596": [429, 458], "00797": 429, "pyvideo": 429, "fourier": 429, "solver": 429, "newsgroup": [429, 441], "clerk": 429, "bbdehiioqssuvvwx": 430, "0b2": 430, "0c076caaa8": 430, "20161005": 430, "wdefault": [430, 444, 451], "walwai": [430, 440], "wmodul": 430, "wonc": 430, "wignor": 430, "wi": 430, "frozen_modul": 430, "importlib_bootstrap": 430, "importlib_bootstrap_extern": 430, "showalloccount": [430, 455, 458], "oldpars": [430, 458], "selftest": 430, "4294967295": [430, 455], "encodingnam": 430, "pythondumprefsfil": 430, "c11": [431, 448, 450, 452], "autoconf": [431, 449, 450], "acloc": [431, 449, 450], "stdint": 431, "tiran": 431, "cpython_autoconf": 431, "autoreconf": 431, "ivf": 431, "_sqlite": 431, "pylong_bits_in_digit": [431, 448], "dbmlibord": [431, 444], "py_coerce_c_local": 431, "freelist": [431, 448], "_bundl": [431, 447], "pystat": 431, "pythonstat": 431, "py_stat": 431, "_stats_on": 431, "_stats_off": 431, "_stats_clear": 431, "_stats_dump": 431, "summarize_stat": 431, "deopt": 431, "pyeval": 431, "demateri": 431, "attemp": 431, "uop": 431, "703": 431, "pkg_config": 431, "pkg_config_libdir": 431, "pkg_config_path": 431, "cpp": [431, 440], "cppflag": [431, 440], "include_dir": [431, 437], "library_directori": 431, "machdep": 431, "bzip2_cflag": 431, "bzip2_lib": 431, "curses_cflag": 431, "curses_lib": 431, "libncurs": 431, "libncursesw": 431, "gdbm_cflag": 431, "gdbm_lib": 431, "libb2_cflag": 431, "libb2_lib": 431, "libb2": [431, 448], "blake2": [431, 448, 455, 458], "libedit_cflag": 431, "libedit_lib": 431, "libffi_cflag": 431, "libffi_lib": 431, "libffi": [431, 444, 448, 456], "liblzma_cflag": 431, "liblzma_lib": 431, "libreadline_cflag": 431, "libreadline_lib": 431, "libsqlite3_cflag": 431, "libsqlite3_lib": 431, "libsqlite3": [431, 448], "libuuid_cflag": 431, "libuuid_lib": 431, "libuuid": 431, "panel_cflag": 431, "panel_lib": 431, "libpanel": 431, "libpanelw": 431, "tcltk_cflag": [431, 448], "tcltk_lib": [431, 448], "tcltk": [431, 447, 448, 451, 458], "zlib_cflag": 431, "zlib_lib": 431, "libzlib": 431, "memf": 431, "noderawf": 431, "eprefix": 431, "bolt": [431, 449], "profile_task": [431, 458], "clang": [431, 449, 453, 455], "llvm": [431, 455], "profdata": 431, "interposit": [431, 447], "testtimeout": 431, "gold": 431, "thinlto": [431, 448, 449], "fdata": 431, "bolt_instrument_flag": 431, "bolt_apply_flag": 431, "gprof": [431, 441], "fstrict": 431, "gettotalrefcount": 431, "__lltrace__": 431, "_pyobject_assert": 431, "ndebug": 431, "py_safe_downcast": 431, "getobject": [431, 457], "valgrind": [431, 444, 451, 455], "addresssanit": 431, "asan": 431, "memorysanit": 431, "msan": 431, "undefinedbehaviorsanit": 431, "ubsan": 431, "libpythonmajor": [431, 447], "lib1": 431, "mpdec": 431, "with_editlin": 431, "have_libreadlin": 431, "rpath": [431, 435, 447], "fnv": [431, 453], "siphash13": [431, 448], "siphash24": [431, 448], "shake": [431, 448, 455, 458], "universalsdk": [431, 442, 458], "sdkdir": 431, "arch": [431, 443], "universal2": [431, 458], "config_sit": 431, "aarch64": 431, "ac_cv_buggy_getaddrinfo": 431, "ac_cv_file__dev_ptmx": 431, "ac_cv_file__dev_ptc": 431, "hostrunn": 431, "makesetup": [431, 448], "testopt": 431, "testpythonopt": 431, "buildbottest": 431, "distclean": 431, "py_build_core_builtin": 431, "_asyncio": 431, "py_build_core_modul": 431, "pyapi_data": [431, 440], "py_exported_symbol": 431, "py_imported_symbol": 431, "configure_cppflag": 431, "basecppflag": 431, "py_cppflag": 431, "cflags_nodist": 431, "65320": 431, "harden": 431, "heighten": 431, "compileall_opt": [431, 449], "j0": [431, 449], "extra_cflag": 431, "configure_cflag": 431, "configure_cflags_nodist": 431, "basecflag": 431, "cflags_alias": 431, "dtoa": [431, 444], "ccshare": 431, "fpic": 431, "cflagsforshar": 431, "py_cflag": 431, "py_cflags_nodist": 431, "py_stdmodule_cflag": 431, "py_core_cflag": 431, "dpy_build_cor": 431, "py_builtin_module_cflag": 431, "dpy_build_core_builtin": 431, "_testemb": 431, "configure_ldflag": 431, "stomp": 431, "ldflags_nodist": 431, "configure_ldflags_nodist": 431, "lib_dir": 431, "lrt": 431, "ldshare": 431, "py_ldflag": 431, "bldshare": 431, "py_core_ldflag": 431, "py_ldflags_nodist": 431, "savag": 434, "bobsavag": 434, "pythonlaunch": 434, "textwrangl": 434, "barebon": 434, "textmat": [434, 453], "macrom": 434, "gvim": 434, "macvim": 434, "aquamac": 434, "qa1067": 434, "hashcollis": 434, "hkn": 434, "idle_intro": 434, "pyobjc": 434, "wxpython": 434, "riverbankcomput": 434, "pythonmac": 434, "preinstal": 435, "distro": [435, 447], "maint": 435, "opensus": 435, "portal": 435, "fedoraproject": 435, "packaging_tutorial_gnu_hello": 435, "slackbook": 435, "slackwar": 435, "pkg_add": 435, "1p2": 435, "cnf": 435, "pki": 435, "install_sw": 435, "xzf": 435, "pushd": 435, "openssldir": 435, "j8": 435, "popd": 435, "msi": [436, 442, 454, 456], "longpathsen": 436, "currentcontrolset": 436, "installallus": 436, "targetdir": 436, "defaultalluserstargetdir": 436, "programfil": 436, "defaultjustformetargetdir": 436, "localappdata": 436, "defaultcustomtargetdir": 436, "associatefil": 436, "prependpath": [436, 448], "appendpath": [436, 448], "include_doc": 436, "include_debug": 436, "include_dev": 436, "include_ex": 436, "include_launch": 436, "installlauncherallus": 436, "include_lib": 436, "include_pip": 436, "include_symbol": 436, "include_tcltk": 436, "include_test": 436, "include_tool": 436, "launcheronli": 436, "simpleinstal": 436, "simpleinstalldescript": 436, "elev": 436, "unattend": 436, "pythonsoftwarefound": 436, "8_qbz5n2kfra8p0": 436, "localcach": 436, "windowsapp": 436, "package_nam": 436, "vf": 436, "systemx86": 436, "test_fil": 436, "hklm": 436, "msix": 436, "uwp": 436, "nugetclidl": 436, "excludevers": 436, "outputdirectori": 436, "pythonx86": 436, "msbuild": 436, "python37": 436, "ucrtbas": 436, "anaconda": 436, "panda": 436, "conda": 436, "canopi": 436, "winpython": 436, "prebuilt": 436, "my_python_lib": 436, "procthread": 436, "set_1": 436, "wsl": 436, "pythoncor": [436, 448], "insenit": 436, "oneith": 436, "provabl": 436, "pylauncher_no_search_path": 436, "xpython": 436, "py_python": 436, "py_python3": 436, "pylauncher_debug": 436, "pylauncher_dryrun": 436, "pylauncher_allow_instal": 436, "pylauncher_always_instal": 436, "rc_bad_venv_cfg": 436, "rc_create_process": 436, "rc_instal": 436, "rc_internal_error": 436, "rc_no_commandlin": 436, "rc_no_python": 436, "rc_no_venv_cfg": 436, "hive": 436, "hkcu": 436, "apploc": 436, "mfc": 436, "golden": [436, 453], "ongo": [436, 456], "mosh": [437, 438, 439, 441], "zadka": [437, 438, 439, 441], "steadi": 437, "paid": 437, "contractu": 437, "cnri": 437, "6final": 437, "0beta1": 437, "fourfold": 437, "schneider": 437, "kamp": 437, "checkin": 437, "submitt": 437, "ka": [437, 438, 439, 442], "yee": [437, 438, 439, 442], "scraper": 437, "indiffer": 437, "him": 437, "lockstep": 437, "elementwis": [437, 438], "objectwis": 437, "536": 437, "countless": 437, "stormi": 437, "01ff": 437, "777": [437, 454], "setdefaultencod": 437, "unichr": [437, 439, 442], "encode_func": 437, "decode_func": 437, "stream_read": 437, "stream_writ": 437, "ustr": 437, "u2000ab": 437, "utf8_encod": 437, "utf8_decod": 437, "utf8_streamread": 437, "utf8_streamwrit": 437, "sre": [437, 439], "workhors": 437, "ew": [437, 452], "argu": [437, 439, 444], "endless": [437, 439, 442], "lengthier": [437, 438], "thoma": [437, 438, 441, 442, 443, 444, 447, 448, 449, 453, 454, 455, 456], "wouter": [437, 438, 441, 442, 443, 444, 454, 457], "strop": 437, "hlinuxtnam": 437, "joke": 437, "jpython": 437, "realis": 437, "myself": 437, "suspect": 437, "tobi": 437, "kelsei": 437, "tiedemann": 437, "neil": [437, 438, 439, 440, 442, 444, 451, 454, 455, 456, 457], "schemenau": [437, 438, 439, 440, 442, 444, 451, 454, 457], "overrod": 437, "tismer": [437, 453], "rewrot": [437, 440], "jeremi": [437, 438, 439, 440, 441, 442, 443, 444], "hylton": [437, 438, 439, 440, 441, 442, 443, 444], "isomorph": 437, "trashcan": [437, 448, 450, 458], "__cmp__": [437, 438, 440, 443, 444, 445], "itanium": [437, 454], "trent": [437, 440, 442, 453], "pythonc": 437, "dyld": 437, "wart": [437, 445], "291": 437, "1beta1": 437, "runawai": 437, "gpf": 437, "find_recursionlimit": 437, "listobject": 437, "no_strict_list_append": 437, "0alpha1": 437, "gvr": [437, 439, 440, 441, 444, 455], "reaction": [437, 438], "x123456": 437, "3l": 437, "abcabcabc": 437, "4l": 437, "18446744073709551616": [437, 444], "subtlest": 437, "longval": 437, "17g": [437, 446], "0999999999999996": 437, "fulton": [437, 441, 455], "extensionclass": 437, "myextensionclass": 437, "importdl": 437, "reorganis": 437, "dynload_": 437, "pyport": 437, "vladimir": [437, 438, 440, 447, 449, 457], "marangozov": [437, 438, 440], "pymem": [437, 442], "objimpl": 437, "gusi": 437, "yakov": 437, "markovitch": 437, "charl": [437, 444, 449, 452, 453, 454, 455, 456], "waldman": 437, "affair": 437, "arduou": 437, "ritual": 437, "wildli": 437, "shepherd": [437, 440], "ward": [437, 439, 440, 441, 442, 454], "tarbal": 437, "py_modul": 437, "module1": 437, "module2": 437, "expat_extens": 437, "define_macro": 437, "xml_n": 437, "xmltok": 437, "xmlpars": 437, "xmlrole": 437, "sdist": [437, 438, 442, 444, 455, 456], "bdist_rpm": 437, "bdist_wininst": [437, 447, 457, 458], "xmllib": 437, "mullend": [437, 443], "tag1": 437, "perslist": 437, "persona": 437, "claudiu": [437, 453, 454], "denmark": 437, "son": 437, "nephew": 437, "20th": 437, "4dom": 437, "fourthought": 437, "xmlproc": 437, "lar": [437, 440, 441, 442, 443, 444, 451, 452], "garshol": 437, "sgmlop": 437, "nntplib": [437, 441, 444, 446, 448, 449, 450, 451], "gallew": 437, "httplib": [437, 440, 441, 443, 444, 445], "pipelin": 437, "create_lin": 437, "create_polygon": 437, "oliv": 437, "andrich": 437, "exitfunc": [437, 441, 445], "cmpcach": 437, "dircmp": [437, 442, 453], "macmillan": 437, "catalog": [437, 438, 440], "linuxaudiodev": [437, 440, 443], "twin": 437, "sunaudiodev": [437, 443], "bosch": 437, "prescod": [437, 438, 439, 442], "fetchabl": 437, "userstr": [437, 454, 458], "browsercontrol": 437, "_winreg": [437, 443, 444, 445], "tutt": 437, "imputil": [437, 440, 444], "ihook": [437, 440, 443, 444], "vanilla": 437, "stdwin": 437, "packmail": 437, "whatsound": 437, "zmod": 437, "bolen": [437, 439], "gregg": 437, "hauser": 437, "detlef": [437, 440], "lannert": [437, 440], "aahz": [437, 441, 442], "maruch": 437, "tobia": 437, "polzin": 437, "russ": 437, "schmidt": 437, "clumsier": [438, 439], "list_attribut": [438, 439], "unknow": [438, 439], "compulsori": [438, 439, 440], "crunch": 438, "tp_richcmp": 438, "ascher": 438, "spare": 438, "toolbox": [438, 439, 440], "aycock": 438, "spark": 438, "userdict": [438, 440, 443], "135143996": 438, "py_tpflags_checktyp": 438, "middleton": 438, "vault": 438, "parnassu": 438, "retir": 438, "wayback": 438, "catalogu": 438, "bdist_": 438, "sean": [438, 440, 441, 442, 444], "reifschneid": [438, 440, 441, 442, 444], "addict": 438, "purcel": 438, "sequencematch": [438, 442, 443, 453], "gellekum": 438, "pyxml": 438, "ninth": 438, "edward": [438, 439, 441, 442], "136": 438, "underestim": [438, 439, 440, 441, 442, 443], "afoul": [438, 440], "getc": 438, "jeff": [438, 440, 453, 455], "epler": 438, "xreadlin": [438, 440, 441], "xrang": [438, 439, 440, 441, 445], "preliminari": [438, 447, 456], "ben": [438, 442, 448, 454], "wolfson": 438, "vestigi": 438, "ancestri": 438, "shrunk": 438, "340k": 438, "majewski": 438, "jason": [438, 440, 443, 449, 450, 453, 457, 458], "tishler": [438, 440], "risco": [438, 445], "dietmar": 438, "schwertberg": 438, "unixwar": 438, "billi": 438, "alli": 438, "graem": 438, "goodger": [438, 439, 441], "grave": 438, "hudson": [438, 439, 440, 442], "irregular": 439, "dark": 439, "userlist": 439, "safeguard": 439, "esoter": [439, 442], "__metaclass__": [439, 443, 445], "lockablefil": 439, "posixfil": [439, 443], "__methods__": [439, 445], "defstat": 439, "eiffel": 439, "postcondit": 439, "eiffelmethod": 439, "pre_f": 439, "post_f": 439, "zodb": 439, "get_par": 439, "__coerce__": [439, 444], "get_siz": 439, "set_siz": 439, "new_attr": 439, "corp": 439, "0x8116870": 439, "crew": [439, 440, 442], "0x8117f90": [439, 440], "www2": [439, 440], "arizona": [439, 440], "ipd266": [439, 440], "harbor": [439, 440], "magnu": [439, 440], "hetland": [439, 440], "1234567890123": 439, "1234567890123l": 439, "18446744073709551616l": 439, "herald": 439, "erupt": 439, "storm": 439, "acidli": 439, "sarcast": 439, "110000": 439, "261": 439, "x9c": 439, "xc9": 439, "xc1": 439, "nand": 439, "666": 439, "5r92": 439, "qe": 439, "ee8v4": 439, "v8": 439, "f5d": 439, "6yd86yt": 439, "f5r": 439, "f5r8f": 439, "s92p": 439, "86yd": 439, "5t": 439, "71i": 439, "5x": [439, 449, 455, 456], "sheesh": 439, "furrfu": 439, "__unicode__": [439, 444], "headlin": 439, "oreillynet": 439, "meerkat": 439, "getchannel": 439, "freshmeat": 439, "4549": 439, "3dgamer": 439, "52719": 439, "xsl": 439, "html2fo": 439, "memberst_mtim": 439, "mathewson": 439, "ichiro": 439, "itojun": 439, "hagino": 439, "bigcharset": 439, "2487": 439, "pier": [439, 440], "lauder": [439, 440], "anthoni": [439, 441, 442, 456, 457, 458], "baxter": [439, 441, 442], "michel": [439, 440, 452, 453, 454, 455, 456, 457, 458], "pelleti": 439, "rfc2822": 439, "grunt": 439, "generator": 439, "itamar": [439, 449], "shtull": 439, "traur": 439, "implementor": [439, 444, 455], "py_tpflags_gc": 439, "pyobject_gc_init": 439, "pyobject_gc_fini": 439, "pygc_head_s": 439, "pyobject_as_gc": 439, "pyobject_from_gc": 439, "untyp": 439, "meth_oldarg": [439, 445], "vsprintf": 439, "overrun": [439, 444], "527": 439, "683": [439, 449], "82": 439, "macpython": 439, "osa": 439, "quicktim": 439, "cleanfutur": 439, "gpled": 439, "ftpmirror": 439, "romberg": 439, "pyrange_new": [439, 442], "sneakili": 439, "rhythm": 439, "borland": 439, "stephen": [439, 448], "hansen": [439, 458], "installermast": 439, "0a": 439, "stolk": 439, "bremmer": 439, "keith": 439, "brigg": 439, "carel": 439, "felling": 439, "mclai": 439, "donnel": 439, "joona": 439, "paalasma": 439, "jen": 439, "reinhardt": 439, "welbourn": 439, "polish": 440, "berkeleydb": [440, 443, 444], "immutableset": [440, 441], "union_upd": 440, "ungainli": 440, "martelli": [440, 443], "suzuki": 440, "hisao": 440, "nyman": 440, "inadequ": 440, "getcwdu": 440, "hodgson": 440, "irrit": 440, "execfil": [440, 441, 445], "__builtin__": [440, 445, 446], "walter": [440, 441, 442, 443, 457], "d\u00f6rwald": [440, 441, 442, 457], "quixot": 440, "richard": [440, 442, 443, 452, 453], "toss": 440, "sundri": 440, "kevin": [440, 441, 443, 444, 449, 451], "alti": 440, "cole": [440, 441, 451], "mcnamara": [440, 442], "cliff": [440, 444], "cpickl": [440, 442, 444, 445], "fanciest": 440, "__safe_for_unpickling__": 440, "rip": 440, "dcba": 440, "innocu": 440, "welter": 440, "fakeseq": 440, "calc_item": 440, "underw": [440, 441, 442, 443], "dylan": 440, "simionato": 440, "029035": 440, "pedroni": [440, 442], "setcheckinterv": [440, 458], "getcheckinterv": [440, 458], "_socket": 440, "u4000": 440, "u4001abc": 440, "simon": 440, "brun": 440, "0045": 440, "goofi": 440, "0goofi": 440, "basestr": [440, 445, 453], "oren": [440, 449, 452, 456], "tirosh": [440, 452], "christoph": [440, 454], "craig": 440, "set_lineno": 440, "idiosyncrasi": 440, "hotspot": 440, "pyston": [440, 441, 442, 445], "orendorff": [440, 443], "bsddb185": 440, "db2pickl": 440, "pickle2db": 440, "bsddb3": [440, 445], "sampmodul": 440, "samp": 440, "robert": [440, 442, 443, 444, 454, 456], "weber": [440, 454], "\u00e5strand": [440, 441], "lg": 440, "xlinux": 440, "dad": 440, "priorityqu": 440, "connor": [440, 453, 455], "idlefork": 440, "tino": 440, "ifilt": 440, "deg": 440, "loadavg": 440, "geert": [440, 454], "otkidach": 440, "stat_float_tim": [440, 442, 452, 456], "1034791200": 440, "6335014": 440, "ossaudiodev": [440, 448, 449, 450, 454], "fitzroi": 440, "dale": [440, 452], "sn": 440, "nos": 440, "3407": 440, "3805": 440, "1505": 440, "7023": 440, "2401": 440, "2267": 440, "9733": 440, "8083": 440, "9195": 440, "rexec": 440, "bastion": 440, "rotor": [440, 441], "gilfix": 440, "exc_clear": [440, 445], "gust\u00e4bel": [440, 441, 442, 443, 444, 451, 452], "whit": 440, "defi": 440, "auguri": 440, "sparrow": 440, "dummy_thread": [440, 456, 458], "timer1": 440, "timer2": 440, "laptop": 440, "36831796169281006": 440, "37441694736480713": 440, "35304892063140869": 440, "17574405670166016": 440, "18193507194519043": 440, "17565798759460449": 440, "tix": [440, 450, 455], "031107": 440, "tcl_obj": 440, "wantobject": 440, "tkapp": 440, "dictmixin": 440, "seqdict": 440, "lookalik": 440, "keylist": [440, 441], "valuelist": 440, "docxmlrpcserv": [440, 442, 443, 445], "quinlan": [440, 441, 444, 451], "3491": 440, "30t21": 440, "994956": 440, "827738": 440, "optik": [440, 441, 442], "0x400cad4c": 440, "0x400cad2c": 440, "iinput": 440, "llength": 440, "undistinguish": 440, "pymemcompat": 440, "libpython2": 440, "ondrej": 440, "palkovski": 440, "dl_export": 440, "dl_import": 440, "pyarg_noarg": 440, "pystring_new": 440, "test_bufio": 440, "emx": 440, "macintyr": [440, 442], "weaklink": [440, 458], "atheo": 440, "hurd": 440, "openvm": 440, "mist": 440, "nifti": 440, "richi": 440, "hindl": 440, "0xffffffff": [440, 455], "0xffffffffl": 440, "get_distutil_opt": 440, "bauer": 440, "chermsid": 440, "fraser": 440, "kelli": [440, 452, 453], "gerber": 440, "chri": [440, 442, 443, 452, 454, 455], "lambert": [440, 453], "lalo": 440, "netzer": 440, "neal": [440, 442, 443], "norwitz": [440, 442, 443], "nowak": 440, "francesco": 440, "ricciardi": 440, "suzi": 440, "radic": 441, "481": 441, "arbcd": 441, "wxy": 441, "unif": 441, "8589934592": 441, "svensson": 441, "get_all_link": 441, "jiwon": [441, 452], "seo": [441, 452], "hye": [441, 442], "shik": [441, 442], "untrain": 441, "deco": 441, "0x402ef0d4": 441, "require_int": 441, "_deco": 441, "bend": 441, "func_nam": [441, 445], "smith": [441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "979728": 441, "russel": 441, "pythondecoratorlibrari": 441, "popen2": [441, 443], "dpkg": 441, "deb": 441, "unawar": 441, "0001100110011": 441, "inaccuraci": [441, 444], "1000000000000001": [441, 446], "magnifi": 441, "dodg": 441, "12f": 441, "100000000000": 441, "7956": 441, "64739884393063583815028902": 441, "1275": 441, "9184": 441, "123456789012": 441, "351364": 441, "18288201344": 441, "18288201344j": 441, "trigonometr": 441, "1828820134592177245001": 441, "facundo": [441, 443], "batista": [441, 443], "lahei": 441, "speleotrov": 441, "cowlishaw": 441, "rexx": 441, "cgixmlrpcrequesthandl": 441, "resolve_dotted_attribut": 441, "dima": 441, "dorfman": 441, "gtk": [441, 443], "pyos_ascii_strtod": [441, 444, 446], "pyos_ascii_atof": [441, 444, 446], "pyos_ascii_formatd": 441, "buf_len": 441, "glib": 441, "kindli": [441, 443], "relicens": 441, "rei": 441, "carneiro": 441, "colormap": 441, "overflowwarn": 441, "izip": 441, "method_descriptor": 441, "armin": [441, 442, 443, 444, 446, 451, 452, 453], "rigo": [441, 442, 443], "vasiliev": 441, "cjkcodec": 441, "prc": 441, "roc": 441, "roman8": 441, "iso_8859": 441, "pctp": 441, "belmont": [441, 447, 448], "j\u00f6rg": 441, "lehmann": 441, "gass": 441, "tenfold": 441, "eland": 441, "yve": [441, 448], "dionn": 441, "arnaud": [441, 452], "mazin": 441, "key_val": 441, "0x402c2080": 441, "0x402c2090": 441, "bookmark": 441, "j\u00fcrgen": 441, "erhard": 441, "cryptoapi": 441, "trevor": 441, "perrin": [441, 447], "beni": 441, "cherniavski": 441, "raynor": 441, "hector": 441, "urtubia": 441, "30000": 441, "sidestep": 441, "unlucki": 441, "quietli": 441, "elegantli": 441, "mpz": 441, "jar": 441, "loper": 441, "doctestfind": 441, "doctestrunn": [441, 450], "outputcheck": 441, "ambiti": 441, "objn": 441, "py_is_nan": 441, "pyeval_threadsiniti": [441, 450, 458], "tsc": 441, "pentium": 441, "misnam": [441, 451], "powerpc": [441, 442, 443], "tracebackobject": 441, "pytracebackobject": 441, "dircach": [441, 443], "lexicalhandl": [441, 447], "korai": 441, "dyck": 441, "hamish": 441, "lawson": 441, "sadruddin": 441, "rejeb": 441, "356": 442, "458": 442, "true_valu": 442, "false_valu": 442, "voter": 442, "true_v": 442, "false_v": 442, "rarer": 442, "pygtk": 442, "open_item": 442, "open_func": 442, "item_path": 442, "popup_menu": 442, "pypackag": 442, "numarrai": 442, "oldpackag": 442, "gpg": 442, "unclean": 442, "holger": 442, "krekel": 442, "tidier": 442, "pylib": 442, "pycheck": 442, "exception1": 442, "exception2": 442, "hackish": 442, "trivia": 442, "phillip": [442, 443, 446, 451, 455], "ebi": [442, 443, 446, 451], "288": 442, "20160321211320": 442, "sidh": 442, "000178": 442, "sugalski": 442, "db_connect": [442, 443], "databaseconnect": [442, 443], "flawlessli": [442, 443], "db_transact": [442, 443], "mgr1": [442, 443], "mgr2": [442, 443], "version2": 442, "whatsnew": 442, "lp64_wp": 442, "travi": [442, 443, 444], "oliph": [442, 443, 444], "zerodict": 442, "is_image_fil": 442, "lynn": 442, "bethard": [442, 444, 451, 454], "needforspe": 442, "sprint": [442, 443], "reykjavik": 442, "ewt": 442, "llc": 442, "ccp": 442, "peak": [442, 458], "mcintyr": [442, 443], "ippolito": [442, 443, 444, 446], "diederich": [442, 446], "audioop": [442, 448, 449, 450, 458], "immisch": 442, "nel": 442, "mezzo": 442, "cammin": 442, "nostra": 442, "vita": 442, "ritrovai": 442, "una": 442, "selva": 442, "oscura": 442, "che": 442, "diritta": 442, "smarrita": 442, "init_lett": 442, "hotshot": 442, "josh": [442, 443, 454, 455, 457, 458], "spoerri": 442, "bjorn": 442, "tilleniu": 442, "mh": 442, "maildir": [442, 444], "gregori": [442, 443, 444, 446, 447, 448, 449, 450, 453, 455, 456, 457], "msilib": [442, 443, 448, 449, 450], "cab": 442, "schroeder": 442, "antti": 442, "louko": 442, "diego": [442, 457], "petten\u00f2": 442, "gr\u00e9goir": 442, "pybench": 442, "regsub": 442, "statcach": 442, "tzpars": 442, "whrandom": 442, "kiendl": 442, "biondi": 442, "netlink": 442, "linuxjourn": 442, "7356": 442, "group_mask": 442, "getfamili": 442, "getproto": 442, "spwd": [442, 448, 449, 450, 455], "ih3": 442, "187": 442, "blai": 442, "subvers": [442, 443, 444, 451, 456], "45313": 442, "45315": 442, "45355": 442, "45356m": 442, "iterkeyref": 442, "itervalueref": 442, "oleg": [442, 449], "broytmann": 442, "oussoren": [442, 443, 444, 451, 453, 458], "atle": 442, "heller": [442, 443, 444], "dl": [442, 443], "strfry": 442, "71828": 442, "1783957616": 442, "20180410025338": 442, "theller": 442, "elementpath": [442, 456], "20201124024954": 442, "effbot": [442, 444], "textnod": 442, "planet": 442, "rss10": 442, "svg": 442, "10px": 442, "320px": 442, "tran": 442, "qty": 442, "rhat": 442, "msoft": 442, "140000000000001": 442, "simple_serv": [442, 455], "wsgi_app": 442, "20160331090247": 442, "supervis": 442, "for_loop": 442, "339": 442, "pyparser_astfromstr": [442, 447], "pyparser_astfromfil": [442, 447], "pyast_compil": [442, 447], "ehresman": 442, "kurt": 442, "kaiser": 442, "evan": [442, 458], "256k": 442, "py_loc": 442, "py_local_inlin": 442, "py_local_aggress": 442, "pyerr_warn": 442, "lll": 442, "2573": 442, "pymem_": 442, "_malloc": 442, "_free": 442, "ralf": [442, 443], "gross": 442, "kunstlev": 442, "iain": 442, "pryor": 442, "rovner": 442, "weikart": 442, "361": 443, "259": 443, "py3kwarn": 443, "py_py3kwarningflag": 443, "3100": 443, "committe": 443, "jira": 443, "launchpad": 443, "trac": 443, "upfront": 443, "stellenbosch": 443, "africa": 443, "ream": 443, "python26": 443, "39916800": 443, "51090942171709440000": 443, "8222838654177922817725562880000000": 443, "33452526613163807108170062053440751665152000000000": 443, "mgr": 443, "15511187532873822802242430164693032110632597200169861120000": 443, "jess": [443, 446, 454, 455, 456], "noller": [443, 446], "oudkerk": [443, 452, 453], "last_login": 443, "npython": 443, "6a1": 443, "61261m": 443, "5367": 443, "mp4": 443, "banquet": 443, "invoic": 443, "750000e": 443, "6564": 443, "talin": 443, "2to3": [443, 444, 445, 448, 449, 450, 451], "u751f": 443, "u3080": 443, "u304": 443, "u3000": 443, "u3054": 443, "u3081": 443, "u305f": 443, "u307": 443, "pystringobject": 443, "u21ef": 443, "u3244": 443, "x87": 443, "x89": 443, "u31ef": 443, "cstringio": [443, 445], "stutzbach": [443, 444, 451], "verdon": 443, "doerwald": 443, "lownd": 443, "pybuf_lock": 443, "carl": [443, 444, 449, 451, 452, 457, 458], "bank": 443, "vagu": 443, "printabletyp": 443, "drawabl": 443, "draw_doubl": 443, "aranguren": 443, "0o21": 443, "0b101111": 443, "052": 443, "173": 443, "0b10101101": 443, "1101": 443, "0b1101": 443, "patrick": [443, 447], "maupin": 443, "undergo": 443, "yasskin": [443, 444, 451], "guil": 443, "r5r": 443, "66666666666666663": 443, "40000000000000002": 443, "7074029114692207l": 443, "2251799813685248l": 443, "6004799503160661l": 443, "18014398509481984l": 443, "andi": [443, 446], "chu": [443, 446], "1739468": [443, 446, 454], "2196": 443, "ud": 443, "1686487": 443, "amauri": [443, 444, 446, 451], "forgeot": [443, 444, 446, 451], "3473": 443, "2719": 443, "abc123": 443, "cdf246": 443, "1635": 443, "1640": 443, "3008": 443, "e000000000000p": 443, "5555555555555p": 443, "niceti": 443, "dickinson": [443, 444, 446, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458], "2235": 443, "austin": 443, "1537": 443, "1473257": 443, "1444529": 443, "cplx": 443, "1491866": 443, "bengt": 443, "richter": 443, "1193128": 443, "1591665": 443, "im_self": 443, "im_func": 443, "1631171": 443, "jacob": [443, 448, 449], "1700288": 443, "py_tpflags_have_version_tag": 443, "1878": 443, "pitrou": [443, 444, 446, 447, 449, 451, 452, 453, 454, 455, 456, 457, 458], "1819": 443, "jvm": 443, "josiah": [443, 452], "carlson": [443, 452], "1736190": 443, "jes\u00fa": [443, 444, 452, 455, 456], "cea": [443, 444, 452, 455, 456], "avi\u00f3n": [443, 444, 452, 455, 456], "jcea": [443, 444, 445], "programacion": [443, 445], "dbshelv": 443, "barn": [443, 456], "fiori": 443, "nubi": 443, "1817": 443, "600362": 443, "polar": 443, "1381": 443, "var_typ": 443, "amplitud": 443, "dq": 443, "morsel": [443, 454, 456], "arvin": 443, "schnell": 443, "1638033": 443, "fabian": 443, "kreutz": 443, "insert_mod": 443, "1158": 443, "7182818": 443, "9999999895305022877376682436": 443, "1221598": 443, "1739906": 443, "1001604": 443, "iter1": 443, "iter2": 443, "getmoduleinfo": [443, 455], "getarg": 443, "izip_longest": 443, "2n": 443, "2138": 443, "brouwer": 443, "2819": 443, "711019": 443, "lenton": 443, "wine": 443, "petrosyan": 443, "inst_nam": 443, "_helper": 443, "levinson": 443, "1663329": 443, "horcicka": 443, "1181": 443, "1273829": 443, "1115886": 443, "barran": 443, "1339796": 443, "957650": 443, "1393667": 443, "1106316": 443, "exception_hierarchi": 443, "standarderror": [443, 445], "2439": 443, "achim": 443, "gaedk": 443, "1137": 443, "shawn": 443, "ligocki": 443, "1727780": 443, "wladmir": 443, "laan": 443, "1681432": 443, "hoyt": [443, 454], "schmitt": 443, "846388": 443, "3487": 443, "lorenz": 443, "2250": 443, "1861": 443, "pollobj": 443, "1657": 443, "ziad\u00e9": [443, 444, 451, 454], "2663": 443, "1583": 443, "guilherm": [443, 444, 446, 453, 455, 456], "polo": [443, 444, 446, 453, 455, 456], "2240": 443, "2033": 443, "leif": 443, "hedstrom": 443, "957003": 443, "3207": 443, "fenner": 443, "829951": 443, "alberto": [443, 452], "bertogli": 443, "1646": 443, "pomran": 443, "pedro": 443, "werneck": 443, "742598": 443, "1193577": 443, "remahl": 443, "1534": 443, "schuppeni": 443, "2898": 443, "1648": 443, "telnetlib": [443, 448, 449, 450], "damien": [443, 453], "miller": [443, 453], "1537850": 443, "dustin": 443, "mitchel": [443, 448], "test_support": [443, 445], "transientresourc": 443, "sf": 443, "3781": 443, "wrec": 443, "dwayn": 443, "bailei": 443, "1581073": 443, "2871": 443, "erik": [443, 448, 449, 456], "demain": 443, "1533909": 443, "2906": 443, "gregor": 443, "lingl": 443, "1513695": 443, "ftpwrapper": 443, "3811": 443, "1599845": 443, "_send_traceback_head": 443, "1330538": 443, "riku": 443, "lindblad": 443, "2985": 443, "251": 443, "sysmodul": 443, "467924": 443, "zipinfo": [443, 455], "horler": 443, "1775025": 443, "alexei": [443, 453, 454], "borzenkov": 443, "1734346": 443, "ronach": [443, 444, 446, 451, 452, 453], "abcdefghijklm": 443, "stararg": 443, "iterable1": 443, "__hex__": [443, 445], "__oct__": [443, 445], "in_json": 443, "simplejson": [443, 444], "data_struct": 443, "lastaccess": 443, "plist_str": 443, "writeplisttostr": 443, "new_struct": 443, "readplistfromstr": 443, "writeplist": [443, 453], "readplist": [443, 453, 456], "1649190": 443, "outset": 443, "1798": 443, "janssen": 443, "352": [443, 445, 448], "audiodev": 443, "bgenloc": 443, "buildtool": 443, "bundlebuild": 443, "fpformat": 443, "gensuitemodul": 443, "imageop": 443, "imgfil": 443, "mhlib": 443, "mimetool": 443, "multifil": 443, "toaiff": 443, "gopherlib": [443, 445], "mimewrit": 443, "mimifi": 443, "rgbimg": 443, "duncan": 443, "grisbi": 443, "pyfile_incusecount": 443, "pyfile_decusecount": 443, "1675423": 443, "1629": 443, "1530959": 443, "free_list": 443, "numfre": 443, "_maxfreelist": 443, "patchcheck": 443, "nt4": 443, "sp4": 443, "1753245": 443, "getinteg": 443, "flori": 443, "bruynoogh": 443, "2125": 443, "macf": 443, "macostool": 443, "1490190": 443, "_builtinsuit": 443, "aepack": 443, "aetool": 443, "aetyp": 443, "applesingl": 443, "appletrawmain": 443, "appletrunn": 443, "argvemul": 443, "audio_mac": 443, "autogil": 443, "carbon": [443, 451], "cfmfile": 443, "codewarrior": 443, "colorpick": 443, "easydialog": 443, "findertool": 443, "icglu": 443, "icopen": 443, "macerror": 443, "macresourc": 443, "miniaefram": 443, "nav": 443, "osaterminologi": 443, "pimp": 443, "pixmapwrapp": 443, "stdsuit": 443, "systemev": 443, "terminalcommand": 443, "cddb": 443, "cdplayer": 443, "fl": 443, "flp": 443, "fm": 443, "glw": 443, "gl": 443, "IN": [443, 455], "panelpars": 443, "readcd": 443, "sv": 443, "torgb": 443, "videoread": 443, "1683368": 443, "conversionsyntax": 443, "1706815": 443, "dict1": 443, "dict2": 443, "ralph": 443, "corderoi": 443, "lambach": 443, "michlmayr": 443, "warner": 443, "373": 444, "7319": 444, "reenabl": 444, "iscal": [444, 445], "sequenceinclud": [444, 445], "qwarn": 444, "446": 444, "744": 444, "073": 444, "709": 444, "551": 444, "616": [444, 458], "is_verbos": 444, "1mb": 444, "configdict": 444, "netlog": 444, "netlogg": 444, "loggeradapt": [444, 450], "viewkei": 444, "viewvalu": 444, "viewitem": 444, "vk": 444, "revamp": [444, 451], "vassalotti": [444, 446, 451, 453], "0x37f850": 444, "0x37f080": 444, "122": [444, 455], "mb": 444, "2335": 444, "aaa": 444, "aaaaa": 444, "2333": 444, "codereview": 444, "appspot": [444, 446, 451], "53094": [444, 446, 451], "icc": [444, 446], "suncc": 444, "7117": 444, "295147905179352891391": 444, "9514790517935283e": 444, "65535l": 444, "9514790517935289e": 444, "3166": 444, "1811": 444, "meador": [444, 452], "5211": 444, "5237": [444, 446], "1588": 444, "7988": 444, "3382": 444, "7994": [444, 453], "124": [444, 446, 451, 453], "johansson": [444, 446], "victor": [444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "stinner": [444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "3439": [444, 446], "7902": 444, "1583863": 444, "4759": 444, "5982": 444, "7604": 444, "belchenko": 444, "1616979": [444, 451], "8016": 444, "kaliszewski": 444, "4764": 444, "5677": 444, "lingard": 444, "7362": 444, "8268": 444, "7140": 444, "curtin": [444, 451, 452, 453, 456], "survivor": 444, "4074": 444, "4688": [444, 446], "long_info": 444, "4258": [444, 446, 457], "5260": 444, "5512": 444, "1087418": 444, "5176": 444, "4715": 444, "gawain": [444, 451], "bolton": [444, 451], "6713": [444, 451], "florent": [444, 451], "xicluna": [444, 451], "7462": [444, 451], "7622": [444, 451], "mcguir": [444, 446], "5084": [444, 446], "5670": 444, "maru": 444, "senthil": [444, 447, 451, 453, 454, 455, 456, 457, 458], "kumaran": [444, 447, 451, 453, 454, 455, 456, 457, 458], "5142": 444, "7703": 444, "2devel9": 444, "8156": 444, "hagen": 444, "f\u00fcrstenau": 444, "3860": 444, "1696199": [444, 446], "field1": 444, "field2": 444, "_2": [444, 446], "1818": [444, 446], "8729": 444, "kindahl": 444, "7005": 444, "cookielib": [444, 445], "3924": 444, "1515": 444, "4606": 444, "klose": [444, 452, 455], "8142": 444, "5788": 444, "4796": 444, "2531": [444, 451], "8257": [444, 451], "6595": 444, "jos\u00e9": 444, "conti": 444, "7633": 444, "6857": 444, "7279": 444, "anatoli": 444, "techtonik": 444, "7585": 444, "8688": 444, "lennart": 444, "regebro": 444, "7490": 444, "murrai": [444, 451, 453, 454, 455], "1368247": 444, "5812": 444, "8294": [444, 451], "oversight": [444, 452, 454, 456], "ftp_tl": [444, 449, 451, 452, 458], "giampaolo": [444, 449, 451, 452, 454, 456, 457], "rodola": [444, 449, 451, 454, 456], "2054": 444, "mouzo": 444, "6845": 444, "5479": 444, "nir": [444, 451, 452, 456], "7471": [444, 451], "jacqu": 444, "frechet": 444, "4272": 444, "tadek": 444, "pietraszek": 444, "2846": [444, 451], "chenet": [444, 451], "7418": [444, 451], "kristj\u00e1n": [444, 451, 453], "valur": [444, 451, 453], "j\u00f3nsson": [444, 451, 453], "4879": 444, "eldon": 444, "ziegler": 444, "derek": [444, 446], "morr": [444, 446], "1655": [444, 446], "_pyio": [444, 446, 449], "4991": 444, "chambon": 444, "6939": 444, "5032": 444, "4816": 444, "4136": [444, 446], "5381": 444, "1607951": 444, "6896": 444, "nirina": 444, "raseliarison": 444, "3366": 444, "lekma": 444, "5585": 444, "cazabon": 444, "6963": 444, "1664": [444, 446], "6508": 444, "calderon": [444, 452], "7333": 444, "zsolt": 444, "cserna": 444, "7242": 444, "matt": [444, 453, 454], "giuca": 444, "5827": 444, "3426": 444, "laban": [444, 446], "4739": [444, 446], "6816": 444, "3002": 444, "francoi": 444, "natali": [444, 452, 453, 454], "8354": 444, "6693": [444, 451], "8104": 444, "nagl": 444, "disable_nagle_algorithm": 444, "6192": 444, "6267": 444, "7133": 444, "ssl_mode_auto_retri": 444, "8222": 444, "8322": [444, 451], "beda": 444, "kosata": 444, "8484": [444, 451], "8321": [444, 451], "bbhhiillqq": 444, "1523": 444, "8300": 444, "disk0s2": 444, "52g": 444, "49g": 444, "0g": 444, "1068268": 444, "8451": 444, "4285": [444, 446], "7766": 444, "unnot": 444, "7357": 444, "tarinfo": [444, 451], "lesher": 444, "1674032": 444, "unihan": 444, "ander": [444, 447, 456], "chrigstr\u00f6m": 444, "1571184": 444, "8024": 444, "2987": [444, 451], "1080": 444, "200c": 444, "417a": 444, "ampersand": 444, "style1": 444, "muller": 444, "2746": 444, "encode_threshold": 444, "5511": 444, "kuba": 444, "wieczorek": 444, "4710": 444, "7610": [444, 451], "gabriel": [444, 448], "genellina": 444, "4756": 444, "6003": 444, "anydbm": [444, 445], "file_util": 444, "distutils2": 444, "tck": 444, "tcl8": 444, "tkcmd": 444, "ttk_intro": 444, "screenshot": 444, "2983": [444, 446], "franklin": 444, "walzer": [444, 451], "2618": 444, "unittest2": 444, "nose": 444, "6001": 444, "impati": 444, "dyer": 444, "8074": 444, "1034053": 444, "5663": 444, "4444": 444, "fixtur": 444, "setupmodul": [444, 457], "teardownmodul": 444, "setupclass": [444, 457], "teardownclass": 444, "5679": 444, "2578": 444, "7031": 444, "assertnotregexpmatch": [444, 448, 449], "8038": 444, "assertitemsequ": 444, "assertdictcontainssubset": [444, 446, 449, 451], "roddi": 444, "6866": 444, "fern\u00e1ndez": 444, "3379": 444, "5728": 444, "awkwardli": 444, "20210619163128": 444, "shtml": 444, "xmlparser": [444, 453, 457], "getiter": [444, 451, 457, 458], "childless": 444, "20200703234532": 444, "6472": [444, 451], "bt": 444, "8032": 444, "3632": 444, "4293": 444, "7033": [444, 451], "horsen": 444, "7528": 444, "7767": [444, 451], "pysys_setargvex": [444, 448, 450, 451], "updatepath": 444, "pysys_setargv": [444, 448, 450], "trojan": 444, "hors": 444, "5983": 444, "5753": [444, 451], "py_isalnum": 444, "py_isalpha": [444, 450], "py_isdigit": 444, "py_islow": 444, "py_isspac": 444, "py_isupp": 444, "py_isxdigit": 444, "py_tolow": [444, 450], "py_toupp": 444, "5793": 444, "pyeval_callobject": [444, 450, 451, 458], "8276": [444, 451], "pystring_fromformat": 444, "pystring_fromformatv": 444, "7228": 444, "1590864": 444, "_shutdown": 444, "1722344": 444, "t_string_inplac": 444, "3102": [444, 445], "arfrev": [444, 451], "freht": [444, 451], "taifersar": [444, 451], "arahesi": [444, 451], "7609": 444, "2422": [444, 451], "6491": 444, "x87_double_round": 444, "2937": 444, "ldcxxshare": 444, "1222585": 444, "clinton": 444, "roi": 444, "3585": 444, "6094": 444, "ucnhash_capi": [444, 447], "pycobject": [444, 446, 451], "vtabl": 444, "pycobject_asvoidptr": 444, "5630": [444, 446], "crtassem": 444, "crt_assembly_vers": 444, "vc_assembly_publickeytoken": 444, "libraries_assembly_name_prefix": 444, "cournapeau": 444, "4365": 444, "7347": 444, "_beginthreadex": 444, "3582": 444, "miki": [444, 451], "tebeka": [444, 451], "1220212": 444, "hirokazu": [444, 452], "yamamoto": [444, 452, 456], "5913": 444, "mimelib": 444, "4969": 444, "4865": 444, "28440": 444, "so_setfib": 444, "kyle": [444, 447, 455, 456, 457, 458], "vanderbeek": 444, "8235": 444, "iobench": 444, "ccbench": 444, "throughput": [444, 456], "5464": 444, "ziga": 444, "seilnacht": 444, "1180193": 444, "randse": 444, "6152": [444, 454], "7312": 444, "piotr": 444, "o\u017carowski": 444, "8233": 444, "1533": 444, "5920": 444, "6101": 444, "7853": 444, "leander": 444, "anand": [444, 451], "pillai": [444, 451], "7150": 444, "7348": 444, "5080": 444, "pythonshowrefcount": 444, "31733": 444, "count_alloc": [444, 455, 458], "pythonshowalloccount": 444, "31692": 444, "gaynor": [444, 447, 454], "21306": 444, "1g": 444, "zachari": [444, 450, 453, 454, 456], "ware": [444, 450, 453, 454, 456], "21462": 444, "21304": 444, "21671": 444, "0224": 444, "tls1": 444, "reid": [444, 451], "21308": 444, "21305": 444, "21307": 444, "stufft": [444, 453], "deili": [444, 451, 453, 458], "pythonhttpsverifi": 444, "_https_verify_certif": 444, "autotool": [444, 454, 455], "pregener": [444, 454, 455], "23404": [444, 454, 455], "philip": [444, 449, 451, 455], "jenvei": [444, 451], "ryan": [444, 452, 453, 455, 456], "lovett": 444, "hugh": 444, "secker": 444, "walker": 444, "cruft": 445, "wealth": 445, "softspac": 445, "retrain": 445, "corollari": 445, "incompar": 445, "maxint": 445, "0720": 445, "0o720": 445, "loudli": 445, "unixi": 445, "3138": 445, "some_sequ": 445, "274": 445, "vindic": 445, "3109": 445, "3110": 445, "crutch": 445, "item1": 445, "item2": 445, "3113": 445, "b_c": 445, "371": 445, "3127": 445, "3108": 445, "irix": 445, "beo": 445, "instabl": 445, "disobei": 445, "copy_reg": 445, "markupbas": 445, "_markupbas": [445, 447], "dbhash": 445, "htmlparser": [445, 447, 452, 453, 454, 458], "htmlentitydef": 445, "basehttpserv": 445, "cgihttpserv": 445, "simplehttpserv": 445, "acquire_lock": [445, 449], "release_lock": [445, 449], "jumpahead": 445, "tmpnam": 445, "tempnam": 445, "tmpfile": 445, "secondaryexcept": 445, "primary_except": 445, "__getslice__": 445, "__setslice__": 445, "__delslice__": 445, "3114": 445, "func_x": 445, "__x__": 445, "func_closur": 445, "func_cod": 445, "func_default": 445, "func_dict": 445, "func_doc": 445, "func_glob": 445, "__nonzero__": 445, "3111": 445, "tru64": 445, "3123": 445, "pynumber_coerc": 445, "pynumber_coerceex": 445, "pymember_get": 445, "pymember_set": 445, "nb_nonzero": 445, "with_cycle_gc": 445, "contort": 445, "8901234": 446, "12j": 446, "600000": 446, "901": 446, "120000j": 446, "underwai": 446, "camelot": 446, "5675": [446, 451], "mattia": [446, 451], "br\u00e4ndstr\u00f6m": [446, 451], "4707": 446, "199999999999ap": 446, "1580": 446, "grew": [446, 451], "namesak": 446, "lv": 446, "ov": 446, "oe": 446, "_0": 446, "query_field": 446, "userqueri": 446, "4384": 446, "vajda": 446, "4195": 446, "4201": 446, "5228": 446, "testgizmo": 446, "test_gizmo_on_window": 446, "test_gimzo_without_required_librari": 446, "builtout": 446, "test_division_by_zero": 446, "confound": 446, "remap": 446, "c__builtin__": 446, "nset": 446, "np0": 446, "lp1": 446, "nl1l": 446, "nal2l": 446, "nal3l": 446, "natp2": 446, "nrp3": 446, "6137": 446, "sunpro": 446, "4753": 446, "4868": 446, "roger": [446, 458], "serwi": 446, "5150": [446, 451], "lisandro": 446, "dalcrin": 446, "5175": 446, "pynumber_int": 446, "4910": 446, "5914": 446, "7182818284590451": 446, "718281828459045": 446, "salgado": [447, 448, 454, 457, 458], "635": 447, "12782": 447, "632": [447, 449], "wstr": [447, 449], "624": [447, 448], "ctxmanag": 447, "ctxmanager1": 447, "ctxmanager2": 447, "example1": 447, "example2": 447, "ctxmanager3": 447, "example3": 447, "lysandro": [447, 449, 458], "nikola": [447, 449, 458], "40334": [447, 458], "some_other_cod": 447, "eol": 447, "42864": 447, "batuhan": [447, 448, 449, 458], "taskaya": [447, 448, 449, 458], "40176": 447, "43914": 447, "rocket": 447, "event_horizon": 447, "42997": 447, "unparenthesis": 447, "43017": 447, "43822": 447, "build_dyson_spher": 447, "notenoughscienceerror": 447, "notenoughresourceserror": 447, "43149": 447, "43823": 447, "44305": 447, "43797": 447, "all_black_hol": 447, "revel": 447, "41064": 447, "lel": 447, "namedtoplo": 447, "38530": 447, "schwarzschild_black_hol": 447, "schwarschild_black_hol": 447, "pattern_1": 447, "action_1": 447, "pattern_2": 447, "action_2": 447, "pattern_3": 447, "action_3": 447, "action_wildcard": 447, "scala": 447, "elixir": 447, "imper": 447, "insur": 447, "test_vari": 447, "maggi": [447, 457], "moss": 447, "prado": 447, "41428": 447, "yurii": [447, 448, 458], "karaba": [447, 448, 458], "44490": 447, "jin": [447, 448, 449, 455, 456, 457, 458], "41559": 447, "jell": [447, 448, 449, 450, 455, 456], "zijlstra": [447, 448, 449, 450, 455, 456], "43783": 447, "mendoza": [447, 448], "unannot": 447, "strcach": 447, "log_prefix": 447, "mikhail": 447, "golubev": 447, "41923": 447, "43766": 447, "traut": [447, 448, 449], "nikla": [447, 448], "fieka": 447, "29882": 447, "sweenei": [447, 448, 449, 458], "40890": 447, "37999": 447, "shkop": 447, "38302": 447, "shannon": [447, 448, 449, 452, 456, 457, 458], "42990": 447, "joshua": [447, 454], "bronson": [447, 457], "pope": 447, "justin": [447, 452], "wang": [447, 449, 456], "31861": 447, "43682": 447, "42737": 447, "43901": 447, "42725": 447, "effectless": 447, "43475": 447, "donghe": [447, 448, 449, 450, 457, 458], "45000": 447, "gr\u00f6nholm": [447, 448, 457], "41332": 447, "9694": 447, "lorentsen": [447, 456], "zackeri": [447, 448, 457, 458], "spytz": [447, 448, 457, 458], "31956": 447, "clearbreakpoint": 447, "irit": [447, 448, 449, 450], "katriel": [447, 448, 449, 450], "24160": 447, "4356": 447, "hai": [447, 448], "shi": [447, 448], "41842": 447, "42195": [447, 458], "joongi": 447, "kim": 447, "41229": 447, "gringauz": 447, "41543": 447, "kintscher": 447, "petter": [447, 457], "jansson": 447, "36982": 447, "39273": 447, "42269": 447, "43532": 447, "bdist_wheel": [447, 448, 457, 458], "42802": 447, "42133": 447, "normalize_encod": [447, 458], "39337": 447, "enum_nam": 447, "ethan": [447, 448, 449, 452, 453, 454, 455, 456, 457, 458], "furman": [447, 449, 452, 453, 454, 455, 456], "40066": 447, "41816": 447, "inada": [447, 448, 449, 450, 454, 455, 456, 457, 458], "naoki": [447, 448, 449, 450, 454, 455, 456, 457, 458], "43712": 447, "5758": 447, "44466": 447, "43439": 447, "38144": 447, "43669": 447, "38820": 447, "43880": 447, "40645": 447, "hilton": [447, 448, 449, 458], "43008": [447, 458], "40468": [447, 458], "33962": [447, 458], "sidebar": 447, "tal": [447, 454, 455, 456, 457], "einat": [447, 454, 455, 456, 457], "37903": 447, "37892": 447, "44010": 447, "pyi": [447, 448, 458], "waygood": [447, 448, 449, 450, 458], "45447": [447, 448, 458], "95191": [447, 448], "relatedli": 447, "from_funct": [447, 448, 454], "43817": 447, "38200": 447, "rto": 447, "peix": 447, "xin": 447, "41440": 447, "eventfd2": 447, "41001": 447, "41625": 447, "43106": 447, "barnei": [447, 449, 450], "gale": [447, 449, 450], "43757": 447, "35498": 447, "yaroslav": 447, "pankovych": 447, "21041": 447, "link_to": [447, 448, 457], "39950": 447, "39906": 447, "28468": 447, "sblondon": 447, "42914": 447, "lewi": 447, "gaul": 447, "43080": 447, "schevchenko": 447, "38731": 447, "readline_ex": 447, "avir": 447, "srivastava": 447, "38307": 447, "34204": 447, "tymoteusz": 447, "wo\u0142od\u017ako": 447, "38490": 447, "42413": 447, "mptcp": 447, "rui": 447, "cunha": 447, "43571": 447, "ToS": 447, "dscp": 447, "ecn": 447, "sauthoff": 447, "44077": 447, "43794": 447, "43788": 447, "43791": 447, "43799": 447, "43920": 447, "43789": 447, "43811": 447, "hynek": [447, 452, 453], "schlawack": [447, 452, 453], "43998": 447, "31870": 447, "42333": 447, "l0x": 447, "40849": 447, "erlend": [447, 448, 449, 450], "aasland": [447, 448, 449, 450], "43762": 447, "23427": 447, "42955": 447, "43356": 447, "mario": [447, 456], "corchero": [447, 456], "42251": 447, "42308": 447, "bussonni": [447, 450, 456, 457], "26389": 447, "beek": 447, "41810": 447, "42345": [447, 458], "41792": 447, "38908": 447, "sebastian": [447, 448, 450], "rittau": [447, 448, 450], "38291": 447, "yan": 447, "choi": 447, "39385": 447, "parse_multipart": [447, 450, 455, 456, 457, 458], "goldschmidt": [447, 455, 456, 457, 458], "42967": [447, 455, 456, 457, 458], "jonathan": [447, 452, 454, 457], "gossag": 447, "35018": 447, "42131": 447, "desmond": 447, "cheong": 447, "14678": 447, "41334": 447, "41006": 447, "41718": 447, "yuri": [447, 448, 451, 452, 453, 454, 455, 456, 457, 458], "selivanov": [447, 448, 451, 452, 453, 454, 455, 456, 457, 458], "42093": 447, "42927": 447, "micropython": 447, "38980": 447, "_compress": 447, "decompressread": 447, "09x": 447, "20x": [447, 449], "32x": 447, "11x": 447, "18x": 447, "lin": [447, 448], "41486": 447, "42202": 447, "str1": 447, "str2": 447, "crochemor": 447, "41972": 447, "dino": [447, 455, 458], "viehland": [447, 455, 458], "43452": 447, "jeroen": [447, 455, 457, 458], "demey": [447, 455, 457, 458], "43575": 447, "43287": 447, "41922": 447, "41873": 447, "41870": 447, "43785": 447, "0in": [447, 449, 450], "1or": [447, 449, 450], "0if": [447, 449, 450], "1els": [447, 449, 450], "0x1for": [447, 449, 450], "43833": 447, "37319": 447, "26131": 447, "zimport": 447, "42134": 447, "43672": 447, "42135": 447, "set_package_wrapp": [447, 448], "set_loader_wrapp": [447, 448], "module_for_load": [447, 448, 449, 453], "impimport": [447, 448, 449], "impload": [447, 448, 449], "43720": 447, "42137": 447, "frozenload": [447, 448], "builtinload": [447, 448], "42136": 447, "optimizedunicod": [447, 448, 449], "42264": 447, "enable_shared_cach": [447, 448, 449], "24464": 447, "87889": 447, "41139": 447, "sslsslcontext": 447, "protocol_sslv2": 447, "rand_pseudo_byt": [447, 449, 452], "pythonthreaddebug": [447, 448], "44584": 447, "41974": 447, "parserbas": 447, "berker": [447, 453, 454, 455, 456, 457], "peksag": [447, 453, 454, 455, 456, 457], "31844": 447, "_pyunicode_name_capi": 447, "42157": 447, "graminit": 447, "pyparser_simpleparsestringflag": [447, 458], "pyparser_simpleparsestringflagsfilenam": [447, 458], "pyparser_simpleparsefileflag": [447, 458], "pynode_compil": [447, 458], "42299": 447, "pymodule_getwarningsmodul": 447, "42599": 447, "37324": 447, "multifold": 447, "svetlov": [447, 448, 453, 456, 457, 458], "stanlei": [447, 455, 456, 457, 458], "42392": 447, "42639": 447, "42393": 447, "_node": 447, "io_modul": 447, "import_importmodul": 447, "source_bytes_object": 447, "source_buf": 447, "wordcod": [447, 455], "36020": 447, "sergei": [447, 448, 458], "fedoseev": [447, 458], "40744": 447, "40810": 447, "xavier": [447, 453, 455, 456], "gay": [447, 453, 455, 456], "petazzoni": 447, "27640": 447, "42856": 447, "43103": 447, "manoli": 447, "stamatogiannaki": 447, "42603": 447, "43466": 447, "petr": [447, 448, 449, 454, 456, 457, 458], "viktorin": [447, 448, 449, 454, 457, 458], "43795": 447, "40792": 447, "30155": 447, "matveev": [447, 449, 457], "41756": 447, "41784": 447, "1635741": 447, "42262": 447, "42423": 447, "41832": 447, "41073": 447, "43277": 447, "36465": [447, 457], "43688": 447, "43753": 447, "43916": 447, "43908": [447, 448], "40943": 447, "new_refcnt": 447, "0x030900a4": [447, 448], "39573": [447, 448], "40839": 447, "pyunicode_fromunicod": [447, 448, 449, 452, 458], "36346": [447, 458], "42260": 447, "30459": 447, "odictobject": 447, "parser_interfac": 447, "picklebufobject": 447, "pyarena": 447, "pyctyp": 447, "pyfp": [447, 458], "pytim": [447, 450], "sim": 447, "35134": [447, 448, 457], "py_frozenmain": 447, "26241": 447, "pyunicode_internimmort": [447, 448, 449], "41692": 447, "py_unicode_str": 447, "41123": [447, 448], "py_unicode_strlen": [447, 452], "py_unicode_strcat": [447, 452], "py_unicode_strcpi": [447, 452], "py_unicode_strncpi": [447, 452], "py_unicode_strcmp": [447, 452], "py_unicode_strncmp": [447, 452], "py_unicode_strchr": [447, 452], "py_unicode_strrchr": [447, 452], "pyunicode_getmax": [447, 452], "41103": 447, "pylong_fromunicod": 447, "pyunicode_asunicodecopi": [447, 452], "_py_checkrecursionlimit": [447, 458], "ceval": 447, "recursion_limit": [447, 448], "41834": 447, "py_allow_recurs": 447, "py_end_allow_recurs": 447, "recursion_crit": 447, "41936": 447, "pyos_initinterrupt": 447, "41713": 447, "pyast_valid": 447, "43244": 447, "pyst_getscop": 447, "pysymtable_build": 447, "pysymtable_buildobject": 447, "pysymtable_fre": 447, "py_symtablestr": 447, "py_symtablestringobject": 447, "43868": 447, "winbas": 447, "_mod": 447, "pyast_compileex": 447, "pyast_compileobject": 447, "pyfuture_fromast": 447, "pyfuture_fromastobject": 447, "pyparser_astfromfileobject": 447, "pyparser_astfromfilenam": 447, "pyparser_astfromstringobject": 447, "pyarena_new": 447, "pyarena_fre": 447, "pyarena_malloc": 447, "pyarena_addpyobject": 447, "use_trac": [447, 448], "43760": [447, 448], "25x": 448, "680": 448, "594": [448, 449, 450], "manhattan_dist": 448, "point_1": 448, "point_2": 448, "magic_arithmet": 448, "add_count": 448, "query_us": 448, "query_count": 448, "ammar": [448, 455, 456, 457], "askar": [448, 455, 456, 457], "43950": 448, "45292": 448, "45607": 448, "zac": 448, "hatfield": 448, "dodd": 448, "otherpython": 448, "tensorflow": 448, "rahtz": 448, "43224": 448, "pradeep": 448, "kumar": [448, 449], "srinivasan": 448, "sile": 448, "panther": 448, "47087": 448, "mylock": 448, "myint": 448, "balf": [448, 449], "46534": 448, "table_nam": 448, "47088": 448, "bleanei": 448, "327": 448, "91860": 448, "bont": [448, 449], "46725": 448, "33346": 448, "12022": 448, "44471": 448, "70766": 448, "26579": 448, "57684": 448, "90153": 448, "broke": 448, "grainger": 448, "91181": 448, "24234": 448, "29410": 448, "45711": 448, "_pyerr_stackitem": 448, "bastian": 448, "neuburg": 448, "44934": 448, "46142": 448, "tane": 448, "hukkinen": 448, "40059": 448, "42012": 448, "90908": 448, "90927": 448, "91218": 448, "duprat": 448, "87518": 448, "34975": 448, "46805": 448, "filip": [448, 452, 453, 457], "la\u00edn": 448, "25625": 448, "44674": 448, "kabir": 448, "kwatra": 448, "91973": 448, "ganssl": [448, 449, 456, 457, 458], "80010": 448, "aflag": 448, "kirpichev": 448, "44258": 448, "some_fract": 448, "44547": 448, "46014": 448, "47095": 448, "_sha3": 448, "tiny_sha3": 448, "47098": 448, "89313": 448, "weipeng": [448, 457], "hong": [448, 457], "30533": 448, "hakan": 448, "\u00e7elik": 448, "29418": 448, "88116": 448, "andrei": 448, "kulakovin": 448, "88024": 448, "kiril": 448, "pinchuk": 448, "88457": 448, "gideon": 448, "45917": 448, "ajith": 448, "ramachandran": 448, "44357": 448, "44339": 448, "46917": 448, "antoni": 448, "44019": 448, "44611": 448, "eisuk": 448, "kawasima": 448, "22276": 448, "33392": 448, "433030": 448, "46245": 448, "klausner": 448, "30512": 448, "29980": 448, "44491": 448, "44688": 448, "aviv": [448, 455, 457], "palivoda": [448, 455, 457], "shahaf": [448, 454], "16379": 448, "24139": 448, "45243": 448, "45613": 448, "45828": 448, "44092": 448, "41930": 448, "34916": 448, "24905": 448, "keho": 448, "90465": 448, "46328": 448, "miro": 448, "hron\u010dok": 448, "45413": 448, "carei": 448, "metcalf": 448, "70363": 448, "sem_clockwait": 448, "41710": 448, "sz\u0151ke": 448, "21302": 448, "45429": 448, "info_patchlevel": 448, "91827": 448, "stacksummari": [448, 454], "44569": 448, "tracebackexcept": [448, 450, 454], "33809": 448, "90633": 448, "90572": 448, "90638": 448, "samodya": 448, "abeysiriwardan": 448, "89026": 448, "43923": 448, "shantanu": [448, 449, 450], "jain": [448, 449, 450], "91154": 448, "90500": 448, "89263": 448, "adrian": [448, 449, 456], "garcia": [448, 449], "badarasco": 448, "88970": 448, "91137": 448, "loosen": 448, "_type_check": 448, "beauregard": 448, "90802": 448, "rosenstein": 448, "85542": 448, "nikita": [448, 449, 450], "sobolev": [448, 449, 450], "90353": 448, "90711": 448, "90729": 448, "45190": 448, "45046": 448, "47074": 448, "turnbul": 448, "28080": 448, "ezeh": 448, "49083": 448, "miguel": [448, 450], "brito": 448, "88261": 448, "28307": 448, "90564": 448, "behnel": [448, 453, 454, 456, 457], "68264": 448, "91165": 448, "272": 448, "46845": 448, "msoxzw": 448, "91487": 448, "37295": 448, "90415": 448, "44987": 448, "pyperform": 448, "ubuntu": [448, 456], "aditya": [448, 449], "sped": [448, 451, 454, 457, 458], "44590": 448, "7x": 448, "45256": 448, "outperform": 448, "superinstruct": 448, "brunthal": 448, "brandt": [448, 449, 458], "bucher": [448, 449, 458], "45947": 448, "45340": 448, "40116": 448, "40222": 448, "91404": 448, "2x": [448, 449, 452, 455], "bloomberg": 448, "async_gen_wrap": 448, "prep_reraise_star": 448, "binary_": 448, "inplace_": 448, "call_function_kw": [448, 455], "call_method": [448, 456], "kw_name": 448, "precal": [448, 449], "dup_top": 448, "dup_top_two": 448, "rot_two": 448, "rot_thre": 448, "rot_four": [448, 457], "rot_n": 448, "jump_if_not_exc_match": [448, 458], "jump_absolut": 448, "pop_jump_backward_if_": 448, "pop_jump_forward_if_": 448, "not_non": 448, "setup_async_with": 448, "jump_if_true_or_pop": [448, 449], "jump_if_false_or_pop": [448, 449], "89874": [448, 449], "copy_dict_without_kei": 448, "gen_start": 448, "19072": 448, "89519": [448, 449], "81548": 448, "44977": 448, "crypt": [448, 449, 450, 455], "sndhdr": [448, 449, 450], "imghdr": [448, 449, 450], "xdrlib": [448, 449, 450], "cgitb": [448, 449, 450], "mailcap": [448, 449, 450], "sunau": [448, 449, 450, 458], "47061": 448, "68966": 448, "smtpd": [448, 449, 455, 458], "hugo": [448, 449, 450, 453, 458], "kemenad": [448, 449, 450, 458], "47022": 448, "lib2to3": [448, 449, 450, 458], "40360": [448, 458], "sre_compil": [448, 450], "sre_const": [448, 450, 454], "sre_pars": [448, 450], "47152": 448, "safeconfigpars": [448, 449, 451], "45173": 448, "legacyinterpol": [448, 449, 450], "46607": 448, "open_binari": [448, 450], "open_text": [448, 450], "read_binari": [448, 450], "90817": [448, 449, 450], "resetlocal": [448, 449, 450], "91760": [448, 449, 450], "92728": 448, "settiltangl": [448, 449, 450], "45837": 448, "unplan": 448, "jingchen": 448, "90224": 448, "untest": [448, 450], "42255": 448, "findtestcas": [448, 449, 450], "makesuit": [448, 449, 450], "5846": 448, "usageexit": [448, 449, 450], "carlo": 448, "dam\u00e1zio": 448, "67048": [448, 449], "failunless": [448, 449], "failif": [448, 449], "failunlessequ": [448, 449], "failifequ": [448, 449], "failunlessalmostequ": [448, 449], "failifalmostequ": [448, 449], "failunlessrais": [448, 449], "assert_": [448, 449, 451], "illia": 448, "volochii": 448, "43216": 448, "corowrapp": 448, "45129": 448, "binhex": [448, 458], "a2b_hqx": [448, 458], "b2a_hqx": [448, 458], "rlecode_hqx": [448, 458], "rldecode_hqx": 448, "45085": 448, "bdist_msi": [448, 458], "45124": 448, "domeventstream": [448, 457], "45132": 448, "ldgettext": [448, 457], "ldngettext": [448, 457], "nulltransl": 448, "set_output_charset": [448, 457], "44235": 448, "formatargspec": [448, 454], "from_builtin": [448, 454], "45320": 448, "46483": 448, "mailmanproxi": [448, 458], "35800": [448, 458], "tkapptyp": [448, 458], "38371": [448, 458], "23882": 448, "__set_format__": 448, "__setformat__": 448, "46852": 448, "experimental_isolated_subinterpret": 448, "pynch": 448, "37330": 448, "93351": 448, "43234": 448, "46659": 448, "sriniva": [448, 456], "reddi": [448, 456], "thatiparthi": [448, 456], "\u0c36": 448, "\u0c30": 448, "\u0c28": 448, "\u0c35": 448, "\u0c38": 448, "\u0c21": 448, "\u0c24": 448, "\u0c1f": 448, "\u0c2a\u0c30": 448, "41137": 448, "40465": [448, 458], "47066": 448, "35859": 448, "84461": 448, "90473": 448, "95085": 448, "46656": 448, "45440": 448, "46640": 448, "py_no_nan": 448, "46996": 448, "libnsl": 448, "libcrypt": 448, "egeberg": 448, "45847": 448, "45747": 448, "45763": 448, "gilbert": 448, "45433": 448, "holman": 448, "44340": 448, "45522": 448, "45548": 448, "45570": 448, "45571": 448, "43974": 448, "rhel": [448, 456], "ltk8": 448, "ltkstub8": 448, "ltcl8": 448, "rhel7": 448, "sizeof_void_p": 448, "45569": 448, "42035": 448, "tornetta": 448, "43931": 448, "45459": 448, "46613": 448, "46906": 448, "46343": 448, "89653": 448, "46608": 448, "exception_t": 448, "46841": 448, "92154": 448, "94936": 448, "py_trashcan_safe_begin": [448, 450, 458], "py_trashcan_safe_end": [448, 450, 458], "py_trashcan_begin": [448, 450, 458], "py_trashcan_end": [448, 450, 458], "mytype_dealloc": [448, 450], "0x03080000": [448, 457], "cpy_trashcan_begin": 448, "cpy_trashcan_end": 448, "44263": 448, "new_typ": 448, "_py_set_typ": 448, "_py_set_s": 448, "0x030b0000": 448, "45434": 448, "cellobject": 448, "genobject": 448, "longintrepr": 448, "pyunicode_check_intern": 448, "46007": 448, "93937": 448, "f_blockstack": 448, "f_gen": 448, "f_iblock": 448, "f_stackdepth": 448, "f_state": 448, "f_frame": 448, "f_localsplu": 448, "localsplu": 448, "f_valuestack": 448, "pyframe_fasttolocalswitherror": 448, "pyframe_localstofast": 448, "0x030900b1": 448, "pythoncapi_compat": 448, "40429": 448, "recursion_depth": [448, 458], "recursion_remain": 448, "stackcheck_count": 448, "0x030b00a2": 448, "0x030a00a1": 448, "cframe": 448, "c_tracefunc": 448, "c_profilefunc": 448, "pythoncapi": [448, 450], "pysys_addwarnoptionunicod": [448, 450, 456], "pysys_addwarnopt": [448, 450, 456], "pysys_addxopt": [448, 450], "pysys_haswarnopt": [448, 450], "pysys_setpath": [448, 450], "py_setpath": [448, 450, 457], "py_setprogramnam": [448, 450], "py_setpythonhom": [448, 450], "py_setstandardstreamencod": [448, 450, 453], "_py_setprogramfullpath": [448, 450], "88279": 448, "ob_shash": [448, 449, 450], "46864": 448, "pyunicode_as_data": [448, 449, 452], "pyunicode_as_unicod": [448, 449, 452], "pyunicode_asunicodeands": [448, 449, 452, 458], "pyunicode_asunicod": [448, 449, 452, 458], "pyunicode_get_data_s": [448, 449, 452], "pyunicode_get_s": [448, 449, 452], "pyunicode_gets": [448, 449, 452], "pyunicode_is_compact": 448, "pyunicode_is_readi": 448, "pyunicode_wstr_length": [448, 458], "_pyunicode_asunicod": [448, 458], "pyframe_blocksetup": 448, "pyframe_blockpop": 448, "py_adjust_erange1": 448, "py_adjust_erange2": 448, "py_overflow": 448, "py_set_erange_if_overflow": 448, "py_set_errno_on_math_error": 448, "45412": 448, "py_unicode_copi": [448, 452, 458], "py_unicode_fil": [448, 452, 458], "pystrhex": 448, "py_force_doubl": 448, "py_is_infin": 448, "45474": 448, "pyheaptype_get_memb": 448, "40170": [448, 458], "have_py_set_53bit_precis": 448, "pyunicode_encod": [448, 452], "pyunicode_encodeascii": [448, 452], "pyunicode_encodelatin1": [448, 452], "pyunicode_encodeutf7": [448, 452], "pyunicode_encodeutf8": [448, 452], "pyunicode_encodeutf16": [448, 452], "pyunicode_encodeutf32": [448, 452], "pyunicode_encodeunicodeescap": [448, 452], "pyunicode_encoderawunicodeescap": [448, 452], "pyunicode_encodecharmap": [448, 452], "pyunicode_translatecharmap": [448, 452], "pyunicode_encodedecim": [448, 452], "pyunicode_transformdecimaltoascii": [448, 452], "44029": 448, "turner": 449, "693": 449, "ergonom": 449, "95299": 449, "labeledtupl": 449, "hashablesequ": 449, "intorstrsequ": 449, "103764": 449, "eden": 449, "alkalin": 449, "ascension": 449, "playlist": 449, "ski": 449, "cristi\u00e1n": 449, "maureira": 449, "frede": 449, "marta": 449, "g\u00f3mez": 449, "102856": 449, "anticip": [449, 455], "_xxsubinterpretersmodul": 449, "104210": 449, "103082": 449, "102500": 449, "meyer": [449, 452, 457, 458], "98254": 449, "99139": 449, "blech": 449, "somethin": 449, "98931": 449, "91058": 449, "franek": 449, "magiera": 449, "103629": 449, "get_color": 449, "goodchild": 449, "badchild": 449, "get_colour": 449, "troxler": 449, "101561": 449, "96670": 449, "98401": 449, "477": 449, "some_it": 449, "100581": 449, "678": 449, "77757": 449, "103590": 449, "97922": 449, "60203": 449, "90751": 449, "bradshaw": 449, "furkan": 449, "onder": 449, "101264": 449, "neumaier": 449, "100425": 449, "87995": 449, "96123": 449, "98658": 449, "91166": 449, "bower": 449, "102853": 449, "104140": 449, "104138": 449, "98024": 449, "94597": 449, "99388": 449, "6x": 449, "pranav": 449, "thulasiram": 449, "bhat": 449, "100344": 449, "102748": 449, "78530": 449, "princ": [449, 450], "roshan": [449, 450], "103636": [449, 450], "94216": 449, "100161": 449, "coomb": [449, 450, 453, 457, 458], "97930": 449, "carlton": 449, "gibson": 449, "99247": 449, "krennwalln": 449, "79940": 449, "103193": 449, "98363": 449, "100485": 449, "goergen": 449, "94906": 449, "93312": 449, "machalow": 449, "99547": 449, "dower": [449, 454, 455, 456, 457, 458], "102519": 449, "99726": 449, "triad": 449, "101000": 449, "stanislav": 449, "zmiev": 449, "90385": 449, "domenico": 449, "ragusa": 449, "84538": 449, "tian": [449, 450], "gao": [449, 450], "103693": 449, "81620": 449, "100234": 449, "74696": 449, "triplet": 449, "102828": 449, "103179": 449, "77617": 449, "autocommit": 449, "83638": 449, "103015": 449, "103489": 449, "95861": 449, "102778": 449, "103176": 449, "evgeni": [449, 458], "zorin": 449, "58451": 449, "93503": 449, "94473": 449, "mac\u00eda": 449, "101827": 449, "102433": 449, "hasx": 449, "fourteen": 449, "74690": 449, "badaracco": 449, "103699": 449, "99957": 449, "96734": 449, "test_thread": 449, "test_timeout": 449, "barriertest": 449, "test_default_timeout": 449, "518": 449, "eventtest": 449, "158": 449, "48330": 449, "chhina": 449, "88597": 449, "wstr_length": 449, "92536": 449, "modzelewski": 449, "90536": 449, "101525": 449, "91524": 449, "103793": 449, "103497": 449, "93429": 449, "102859": 449, "92925": 449, "94163": 449, "99005": 449, "101799": 449, "90997": 449, "end_send": 449, "101441": 449, "93143": 449, "wenyang": 449, "101632": 449, "97681": 449, "97669": 449, "92248": [449, 450], "90953": [449, 450], "100160": 449, "103857": 449, "william": [449, 450, 453], "72346": [449, 450], "93963": [449, 450], "101588": [449, 450], "84559": [449, 450], "97850": [449, 450], "master_open": [449, 450], "slave_open": [449, 450], "soumendra": 449, "ganguli": 449, "85984": 449, "forkserv": [449, 453], "90016": 449, "101698": 449, "83122": 449, "ofei": 449, "chan": 449, "65961": 449, "ceas": [449, 450], "hoffmann": 449, "103487": 449, "101866": [449, 450], "84540": 449, "90765": 449, "rawturtl": [449, 450], "50096": 449, "86421": 449, "57281": 449, "87999": [449, 450], "96580": 449, "89336": 449, "92584": 449, "pradyun": 449, "gedam": 449, "95083": 449, "94172": 449, "94196": 449, "94199": 449, "set_packag": [449, 453], "set_load": [449, 453], "98040": 449, "nullimport": [449, 452], "get_mag": [449, 453], "get_suffix": 449, "new_modul": 449, "load_sourc": 449, "init_builtin": 449, "load_compil": 449, "load_dynam": 449, "load_packag": 449, "lock_held": 449, "search_error": 449, "py_sourc": 449, "c_extens": 449, "py_resourc": 449, "pkg_directori": 449, "c_builtin": 449, "py_frozen": 449, "py_coderesourc": 449, "imp_hook": 449, "openwrapp": 449, "94169": 449, "94226": 449, "aiosmtpd": 449, "iarygin": 449, "93243": 449, "92548": 449, "cwe": 449, "295": 449, "isident": 449, "teyit": 449, "modernis": 449, "_texttestresult": 449, "89325": 449, "firebird": 449, "102871": 449, "94383": 449, "94379": 449, "suspici": 449, "rstlint": 449, "julien": [449, 456], "palard": [449, 456], "98179": 449, "1e25": 449, "86388": 449, "fromfile_prefix_char": 449, "94352": 449, "98393": 449, "99127": 449, "93939": 449, "va_start": 449, "93207": 449, "89536": 449, "99289": 449, "loongarch": 449, "loongarch64": 449, "gnusf": 449, "gnuf32": 449, "zhang": [449, 455, 456, 457], "90656": 449, "python_for_regen": 449, "89886": [449, 450], "jit": [449, 455], "pyunstable_": 449, "101101": 449, "103509": 449, "wenzel": 449, "jakob": 449, "93012": 449, "93274": 449, "98586": 449, "frost": 449, "92257": 449, "91052": 449, "91051": 449, "91054": 449, "91248": 449, "101578": 449, "_pyerr_chainexceptions1": 449, "_pyerr_chainexcept": [449, 450], "102755": 449, "_py_immortal_refcnt": 449, "_py_isimmort": 449, "py_build_cor": 449, "sstate_interned_immort": 449, "sstate_interned_immortal_stat": 449, "eddi": [449, 457], "elizondo": [449, 457], "84436": 449, "104110": 449, "105387": 449, "98836": 449, "95781": 449, "georgi": 449, "95504": 449, "95589": 449, "_pyobject_visitmanageddict": 449, "_pyobject_clearmanageddict": 449, "98724": 449, "_py_reftot": 449, "_py_getglobalreftot": 449, "104668": 449, "pylong_": 449, "ericsnowcurr": 449, "699": 449, "ma_version_tag": [449, 450], "ramvikram": 449, "101193": 449, "77782": 449, "95388": 449, "t_doubl": 449, "quirki": 449, "47146": 449, "braun": 449, "102192": 449, "py_unicode_wid": [449, 450], "92651": 449, "85858": 449, "99482": 449, "_use_broken_old_ctypes_structure_semantics_": 449, "99285": 449, "106487": 450, "sqlalchemi": 450, "orm": 450, "81283": 450, "108113": 450, "80480": 450, "108751": 450, "107122": 450, "108794": 450, "62948": 450, "enable_speci": 450, "_opcod": 450, "105481": 450, "is_pseudo": 450, "max_pseudo_opcod": 450, "89812": 450, "73435": 450, "77609": 450, "105793": 450, "exc_numb": 450, "106676": 450, "108464": 450, "105539": 450, "tk_busy_hold": 450, "tk_busy_configur": 450, "tk_busy_cget": 450, "tk_busy_forget": 450, "tk_busy_curr": 450, "tk_busy_statu": 450, "klappnas": 450, "72684": 450, "105292": 450, "104873": 450, "envbuild": [450, 453], "108125": 450, "107369": 450, "setpointertyp": 450, "item_typ": 450, "105733": 450, "106535": 450, "105566": 450, "105570": 450, "107116": 450, "setmark": 450, "wave_read": 450, "wave_writ": 450, "105096": 450, "107948": 450, "108278": 450, "109319": 450, "97879": 450, "quoter": 450, "88168": 450, "102029": 450, "errorduringimport": 450, "check_hom": 450, "splitattr": 450, "splithost": 450, "splitnport": 450, "splitpasswd": 450, "splitport": 450, "splitqueri": 450, "splittag": 450, "splittyp": 450, "splitus": 450, "splitvalu": 450, "telnetlib3": 450, "exscript": 450, "104773": 450, "104780": 450, "92871": 450, "104804": 450, "104886": 450, "104876": 450, "104835": 450, "fieldstorag": [450, 453, 454, 456], "puremag": 450, "pam": 450, "_crypt": [450, 458], "bcrypt": 450, "passlib": 450, "argon2": 450, "legacycrypt": 450, "toma": 450, "roun": 450, "104786": 450, "104992": 450, "75552": 450, "105111": 450, "104783": 450, "105376": 450, "105382": 450, "105546": 450, "105687": 450, "105875": 450, "108634": 450, "interlock": 450, "104922": 450, "105922": 450, "105927": 450, "106521": 450, "106307": 450, "108511": 450, "106168": 450, "86493": 450, "106004": 450, "108314": 450, "108014": 450, "_pylong_asint": 450, "ieeefp": 450, "have_ieeefp_h": 450, "108765": 450, "unistd": 450, "futim": 450, "tolow": 450, "56166": 450, "py_unicode_typ": 450, "105156": 450, "105145": 450, "105396": 450, "vstinner": 450, "106320": 450, "pyeval_callobjectwithkeyword": [450, 458], "pyeval_callfunct": [450, 458], "pyeval_callmethod": [450, 458], "pycfunction_cal": 450, "105107": 450, "pyobject_checkreadbuff": 450, "pyobject_ascharbuff": 450, "pyobject_asreadbuff": 450, "pyobject_aswritebuff": 450, "85275": 450, "pyeval_initthread": [450, 451, 458], "105182": 450, "pyeval_acquirelock": [450, 451, 457], "pyeval_releaselock": [450, 451], "_pyobject_callmethodnoarg": 450, "_pyobject_callmethodonearg": 450, "_pyobject_callonearg": 450, "_pyobject_fastcalldict": 450, "_pyobject_vectorcal": 450, "_pyobject_vectorcallmethod": 450, "_pyvectorcall_funct": 450, "106084": 450, "_pyobject_fastcal": 450, "106023": 450, "106316": 450, "_pyinterpreterstate_get": 450, "392": 451, "sneezi": 451, "sleepi": 451, "skycaptain": 451, "manage_cloud": 451, "helm": 451, "parser_l": 451, "missil": 451, "torpedo": 451, "parser_m": 451, "vessel": 451, "console_prior": 451, "694": 451, "commonplac": 451, "unladen10": 451, "py32": 451, "pyload": [451, 453], "pypycload": [451, 453], "pyshar": 451, "32m": 451, "33md": 451, "soabi": 451, "32mu": 451, "ext_suffix": [451, 453], "status": 451, "salient": 451, "pathwai": 451, "0o24": 451, "7094": 451, "shl": 451, "project_nam": 451, "lowercaseddict": 451, "lcd": 451, "placeholderdict": 451, "6081": 451, "marcin": 451, "wojdyr": 451, "1772833": 451, "9666": 451, "9337": 451, "abcdefgh": [451, 453], "9757": 451, "4617": 451, "8413": 451, "10093": 451, "477863": 451, "9213": 451, "2690": 451, "10889": 451, "10518": 451, "aggrav": 451, "9425": 451, "undergon": 451, "4661": 451, "10321": 451, "treebuild": [451, 457], "get_phone_numb": 451, "phonenumb": 451, "phonelist": 451, "user_request": 451, "4805": 451, "980": 451, "baker": 451, "498245": 451, "577479": 451, "10586": 451, "10593": 451, "terrenc": 451, "9567": 451, "3445": 451, "8814": 451, "prob_dist": 451, "renew": 451, "resequenc": 451, "simsalabim": 451, "get_vot": 451, "ballot": 451, "conduct_elect": 451, "all_polls_clos": 451, "lockbox": 451, "seal_ballot": 451, "deposit": 451, "8777": 451, "923754": 451, "accept2dyear": [451, 452], "guesswork": 451, "1289118": 451, "5094": 451, "6641": 451, "2706": 451, "1777412": 451, "8013": 451, "10827": 451, "013671875": 451, "013765762467652909": 451, "682689492137086": 451, "31731050786291404": 451, "gamma_funct": 451, "801": 451, "4551": 451, "950730698041": 451, "temperatur": 451, "from_fahrenheit": 451, "from_celsiu": 451, "urban": [451, 453], "5867": 451, "rec_len": 451, "loc_start": 451, "loc_len": 451, "change_loc": 451, "record_numb": 451, "byte_stream": 451, "g3805": 451, "storeroom": 451, "chassi": 451, "x7899": 451, "cog": 451, "l6988": 451, "sprocket": 451, "showroom": 451, "5506": 451, "9826": 451, "9840": 451, "susan": 451, "salesl": 451, "talbot": 451, "5975": 451, "abraham": 451, "1537721": 451, "duti": 451, "9110": 451, "8188": 451, "2305843009213693951": 451, "314159": 451, "1000003": 451, "8540": [451, 452], "log1": 451, "rodol\u00e0": [451, 452, 457], "4972": [451, 454], "8046": 451, "1286": 451, "8806": 451, "7461": 451, "10554": 451, "s\u00e9bastien": 451, "sabl\u00e9": 451, "9862": 451, "3488": 451, "9962": 451, "1675951": 451, "redact": 451, "902": 451, "general_quest": 451, "3514": 451, "prion": 451, "py_todo": 451, "1399": 451, "semaphore_not": 451, "md2": 451, "dsawithsha": 451, "mdc2": 451, "md4": 451, "ripemd160": 451, "dsa": 451, "dsaencrypt": 451, "0x101739a10": 451, "sehensw\u00fcrdigkeiten": 451, "sehensw": 451, "xc3": 451, "xbcrdigkeiten": 451, "bzip": 451, "in_transit": 451, "shashwat": 451, "8845": 451, "8524": 451, "9794": 451, "2818": 451, "8850": 451, "1589": 451, "5639": 451, "4870": 451, "dysfunct": 451, "nntp_ssl": [451, 458], "9360": 451, "vant": 451, "1926": 451, "httpshandler": 451, "9003": 451, "lorenzo": [451, 453], "catucci": [451, 453], "4471": 451, "10980": 451, "10620": 451, "my_proj_dir": 451, "9754": 451, "test_anagram": 451, "volumin": 451, "9424": 451, "misimpl": 451, "optic": 451, "9025": 451, "8807": 451, "handle_accept": 451, "6706": 451, "5178": 451, "rodolpho": 451, "eckhardt": 451, "10220": 451, "0x1022bd788": 451, "pydoc3": 451, "ron": 451, "newloc": 451, "nofre": 451, "_randbelow": 451, "binary_modulo": 451, "binary_multipli": 451, "binary_add": [451, 453], "binary_floor_divid": 451, "9147": 451, "rai": [451, 453], "9523": 451, "raymondhetting": 451, "os2": 451, "os2_hom": 451, "python32": 451, "bindir": 451, "binlibdest": 451, "includepi": 451, "libdest": 451, "platbas": 451, "projectbas": 451, "py_version_nodot": 451, "py_version_short": 451, "userbas": 451, "antonio": 451, "cuni": 451, "ilya": [451, 456], "sandler": 451, "pluggabl": [451, 453, 455], "ambv": 451, "zope9": 451, "plone": 451, "zope9instal": 451, "zope9inst": 451, "beef": 451, "cafe": 451, "5417": 451, "aff": 451, "8fa3": 451, "telenovela": 451, "d\u00f3nde": 451, "est\u00e1": 451, "elisa": 451, "bfd": 451, "f3nde": 451, "mahn": 451, "5468": 451, "9873": 451, "steffen": 451, "daod": 451, "nurpmeso": 451, "9124": 451, "10199": 451, "7316": 451, "torsten": [451, 452], "landschoff": [451, 452], "850728": 451, "kleckner": 451, "8844": 451, "operation": 451, "6690": 451, "9410": 451, "3873": 451, "9915": 451, "7451": 451, "10314": 451, "10x": [451, 452, 453, 456], "15x": [451, 458], "3001": 451, "stringlib": 451, "differenc": 451, "andress": 451, "bennett": 451, "8685": 451, "1569291": 451, "3709": [451, 452], "schaaf": [451, 452], "10160": 451, "christo": 451, "georgiou": 451, "7113": 451, "mobil": 451, "kannada": 451, "0cf1": 451, "0cf2": 451, "tai": 451, "lue": 451, "19da": 451, "disqualifi": 451, "cheatsheet": 451, "jog": 451, "adjunct": 451, "9528": 451, "7962": 451, "aquatk": 451, "6075": 451, "changeset": [451, 453], "385": 451, "workflow": 451, "10679": 451, "bupjo": 451, "5127": 451, "9203": 451, "wctype": 451, "9210": 451, "9778": 451, "py_va_copi": 451, "va_copi": 451, "2443": 451, "8837": 451, "buildscript": 451, "8990": 451, "setfilesystemencod": 451, "6shhbbb": 451, "gif87a": 451, "10783": 451, "expaterror": 451, "10711": 451, "10272": 451, "398": 452, "segreg": 452, "13411": 452, "10181": 452, "u0010ffff": 452, "recombin": 452, "udbff": 452, "udfff": 452, "13054": 452, "becker": 452, "3561": 452, "gather_t": 452, "acc": 452, "renaud": 452, "blanch": 452, "zbigniew": 452, "j\u0119drzejewski": 452, "szmek": 452, "_extra_attribut": 452, "0x7f46b9fe31e0": 452, "amend": 452, "2377": 452, "13959": 452, "14605": 452, "14646": 452, "growth": 452, "exposur": 452, "delin": 452, "12753": 452, "13201": 452, "petri": 452, "lehtinen": 452, "12170": 452, "12380": 452, "10516": 452, "11388": 452, "13748": 452, "gruszczy\u0144ski": [452, 453, 457], "13521": 452, "9260": 452, "4966": 452, "3144": 452, "nadeem": [452, 453], "vawda": [452, 453], "\u00f8yvind": 452, "karlsen": 452, "6715": 452, "darren": 452, "11610": 452, "10868": 452, "1172711": 452, "ywjj": 452, "catalin": 452, "iacob": 452, "13641": 452, "13637": 452, "5863": 452, "pbzip2": 452, "1625": 452, "13216": 452, "65001": 452, "cp_utf8": 452, "chcp": 452, "cjk": 452, "12016": 452, "u52ff": 452, "u65bd": 452, "u65bc": 452, "u4eba": 452, "u3002": 452, "npj": 452, "l6hk": 452, "12100": 452, "11089": 452, "11297": 452, "11085": 452, "13121": 452, "13585": 452, "mksalt": [452, 456], "10924": 452, "ncursesw": 452, "waddwstr": 452, "i\u00f1igo": 452, "serna": 452, "6755": 452, "15006": 452, "7652": 452, "100x": 452, "bytereef": 452, "mpdecim": 452, "quickstart": 452, "120x": 452, "telco": 452, "psycopg": 452, "12x": 452, "watchexp": 452, "465484": 452, "72000": 452, "89ric": 452, "pal": 452, "salli": 452, "bonzo": 452, "bonz": 452, "ought": 452, "8594": 452, "12139": 452, "parsabl": [452, 458], "11072": 452, "13227": 452, "15061": 452, "13295": 452, "kuhn": 452, "13464": 452, "htmlparseerror": 452, "15114": [452, 453, 454], "14538": 452, "13993": 452, "13960": 452, "13358": 452, "1745761": 452, "755670": 452, "13357": 452, "12629": 452, "1200313": 452, "670664": 452, "13273": 452, "12888": 452, "7311": 452, "11113": 452, "15156": 452, "sijin": 452, "joseph": [452, 455], "8808": 452, "13062": 452, "15153": 452, "townshend": 452, "12760": 452, "11888": 452, "12021": 452, "12328": 452, "4892": 452, "6064": 452, "12708": 452, "gmane": 452, "committ": 452, "1755": 452, "9795": 452, "lagerwal": 452, "10882": 452, "4761": 452, "10755": 452, "14626": 452, "supports_follows_symlink": 452, "10784": 452, "8828": 452, "14127": 452, "13609": 452, "12720": 452, "9344": 452, "dlfcn": [452, 455], "13226": 452, "14210": 452, "14166": 452, "3665": 452, "13449": 452, "8684": 452, "delayfunct": 452, "13245": 452, "6397": 452, "12442": 452, "sandro": 452, "tosi": 452, "12191": 452, "15238": 452, "12715": 452, "niehof": 452, "9993": 452, "4489": 452, "8407": 452, "1870": 452, "elho": 452, "trevino": 452, "juhana": 452, "jauhiainen": 452, "orr\u00f9": [452, 453, 457, 458], "boswel": 452, "8739": 452, "paulo": 452, "scardin": 452, "11281": 452, "11289": 452, "kasun": 452, "herath": 452, "8809": 452, "watson": 452, "6560": 452, "heiko": 452, "wundram": 452, "socketcan": 452, "lwn": 452, "253425": 452, "fuch": [452, 457], "tiago": 452, "gon\u00e7alv": 452, "10141": 452, "reliable_datagram_socket": 452, "goderbau": 452, "13777": 452, "10866": 452, "warkentin": 452, "11109": 452, "11688": 452, "12049": 452, "11183": 452, "simpkin": 452, "12803": 452, "13626": 452, "13627": 452, "scram": 452, "jacek": [452, 455], "konieczni": 452, "12551": 452, "13634": 452, "colin": 452, "14204": 452, "14837": 452, "11811": 452, "13635": 452, "14807": 452, "3163": 452, "8513": 452, "5870": 452, "11223": 452, "5689": 452, "9957": 452, "13857": 452, "10968": 452, "clock_": 452, "10278": 452, "14386": 452, "14588": 452, "winston": 452, "ewert": 452, "10775": 452, "1673007": 452, "xdg": 452, "gvf": 452, "calmett": 452, "13620": 452, "14493": 452, "12646": 452, "12306": 452, "14624": 452, "14738": 452, "15026": 452, "osf": 452, "9856": 452, "11377": 452, "13374": 452, "13988": 452, "py_unicode_match": [452, 458], "pyunicode_encodembc": 452, "12326": 452, "13847": 452, "14180": 452, "1079": 452, "1690608": 452, "11291": 452, "assertsameel": 452, "_clamp": 452, "sslfakefil": 452, "13550": 452, "smalltabl": 452, "pymemoryviewobject": [452, 454], "memoryobject": [452, 454], "xxxmodul": 452, "14040": 452, "10998": 452, "11591": 452, "rdmurrai": 453, "bitdanc": 453, "16499": 453, "16475": 453, "3156": 453, "450": 453, "454": 453, "8713": 453, "18891": 453, "18214": 453, "unvers": 453, "pip3": 453, "hex_decod": 453, "bz2_encod": 453, "68656c6c6f": 453, "7475": 453, "17827": 453, "17828": 453, "19619": 453, "stone": 453, "everyon": 453, "berman": 453, "18111": 453, "18416": 453, "kang": 453, "hao": 453, "12892": 453, "bierenfeld": 453, "1097797": 453, "19668": 453, "15958": 453, "16772": 453, "17934": 453, "popa": [453, 454], "18690": 453, "19078": 453, "16148": 453, "declin": 453, "eli": [453, 455], "benderski": 453, "aprano": [453, 455, 457], "16832": 453, "bruno": [453, 454], "dupui": 453, "16049": 453, "17818": 453, "storchacha": 453, "16486": 453, "8311": 453, "maystr": 453, "11175": 453, "12866": 453, "19641": 453, "16685": 453, "17839": 453, "a85": 453, "morrison": 453, "17618": 453, "16613": 453, "fcc": 453, "ntsc": 453, "lander": [453, 456], "14323": 453, "15806": 453, "piraeu": 453, "19266": 453, "inflex": [453, 454], "15805": 453, "19282": 453, "kluyver": [453, 454, 455], "11816": 453, "17916": 453, "19722": 453, "16522": 453, "11390": 453, "3158": 453, "18600": 453, "email6": 453, "levitt": 453, "18149": 453, "15442": 453, "horev": 453, "kati": 453, "10042": 453, "thorn": 453, "12428": 453, "16351": 453, "18582": 453, "18532": 453, "jona": [453, 456], "borgstr\u00f6m": 453, "18240": 453, "17276": 453, "247": 453, "18775": 453, "2927": 453, "13633": 453, "karl": [453, 458], "cow": 453, "12921": 453, "malt": 453, "swart": 453, "17764": 453, "15627": 453, "18072": 453, "18193": 453, "18192": 453, "18194": 453, "18058": 453, "19152": 453, "18626": 453, "unravel": 453, "aaron": 453, "13266": 453, "18929": 453, "19030": 453, "broader": 453, "17481": 453, "17159": 453, "routeabl": 453, "17400": 453, "9556": 453, "ce46195b56a9": 453, "16110": 453, "15452": 453, "bump": 453, "19219": 453, "valeri": 453, "4885": 453, "18999": 453, "19946": 453, "16694": 453, "nelson": 453, "yogesh": 453, "chaudhari": 453, "17914": 453, "11939": 453, "9035": 453, "uapi": 453, "18673": 453, "16596": 453, "osborn": 453, "18764": 453, "14455": 453, "4473": 453, "prettyprint": 453, "19132": 453, "17150": 453, "19674": 453, "20710": 453, "barnett": 453, "16203": 453, "lope": 453, "tavar": 453, "13592": 453, "17087": 453, "16595": 453, "19324": 453, "19343": 453, "16488": 453, "18794": 453, "13896": 453, "atsuo": 453, "ishimoto": 453, "1492704": 453, "smtpserver": [453, 454, 455], "smtpchannel": [453, 454, 455], "async_chat": 453, "11959": 453, "2118": 453, "15359": 453, "7171": 453, "poq": 453, "13773": 453, "16692": 453, "19689": 453, "18138": 453, "18143": 453, "18147": 453, "christien": 453, "8813": 453, "19292": 453, "17134": 453, "8109": 453, "calissu": 453, "18379": 453, "_stat": 453, "11016": 453, "hiem": 453, "17804": 453, "zack": 453, "weinberg": 453, "16624": 453, "getstatu": 453, "10197": 453, "18901": 453, "18878": 453, "au_writ": 453, "19261": 453, "13390": 453, "5845": 453, "13477": 453, "18585": 453, "18725": 453, "18882": 453, "1565525": 453, "mathia": 453, "panzenb\u00f6ck": 453, "16423": 453, "18978": 453, "kachayev": [453, 454], "16464": 453, "wozniak": 453, "17485": 453, "brecht": [453, 454, 455], "17272": 453, "15701": 453, "subtest": 453, "16997": 453, "jyrki": 453, "pulliainen": 453, "15132": 453, "zach": 453, "16935": 453, "melin": 453, "ramnani": 453, "16709": 453, "wardil": 453, "mcclure": 453, "11798": 453, "18937": 453, "17457": 453, "17015": 453, "toshio": 453, "kuratomi": 453, "17467": 453, "15417": 453, "19552": 453, "17487": 453, "17616": 453, "5202": 453, "14631": 453, "15528": 453, "17643": 453, "xmlpullpars": 453, "17741": 453, "ariel": 453, "poliak": 453, "14377": 453, "pyzipfil": 453, "19274": 453, "mallard": 453, "17201": 453, "plagu": 453, "14621": 453, "dsl": 453, "17162": 453, "bastien": 453, "montagn": 453, "16129": 453, "1772673": 453, "ysj": 453, "7330": 453, "dhiru": 453, "kholia": 453, "18596": 453, "16632": 453, "18338": 453, "18920": 453, "18922": 453, "18569": 453, "gcov": 453, "lcov": 453, "v\u00e1clav": 453, "\u0161milauer": 453, "16421": 453, "17853": 453, "pyfailmalloc": 453, "18408": 453, "18520": 453, "18807": 453, "18818": 453, "heanei": [453, 454], "vajraski": [453, 454], "kok": [453, 454], "19201": 453, "19222": [453, 454], "19223": 453, "3x": 453, "14625": 453, "probe": 453, "linear_prob": 453, "18771": 453, "19218": 453, "19209": 453, "19205": 453, "9548": 453, "16034": 453, "16674": 453, "15596": 453, "15758": 453, "bryant": 453, "18020": 453, "18756": 453, "endtim": 453, "readplistfrombyt": [453, 456], "writeplisttobyt": 453, "18823": 453, "19375": 453, "16135": 453, "e52df05b496a": 453, "14470": 453, "16136": 453, "shlib_suffix": 453, "16754": 453, "tick_count": 453, "19199": 453, "tara": 453, "lyapun": 453, "15641": 453, "type_int64": 453, "riti": 453, "15480": 453, "isbjunk": 453, "isbpopular": 453, "sm": 453, "13248": [453, 455], "_gestalt": 453, "_mac_ver_lookup": 453, "_mac_ver_gstalt": 453, "_bcd2str": 453, "badli": 453, "18393": 453, "17323": 453, "17115": 453, "module_to_load": 453, "19413": 453, "18065": 453, "is_frozen": 453, "felt": [453, 457], "interstiti": 453, "17434": 453, "b32": 453, "18011": 453, "9177": 453, "14794": 453, "16290": 453, "16967": 453, "17094": 453, "20625": 453, "19555": 453, "15204": 453, "16333": 453, "20784": 453, "16742": 453, "f_tstate": 453, "14432": 453, "elvi": [454, 455, 456, 457, 458], "pranskevichu": [454, 455, 456, 457, 458], "478": 454, "441": 454, "arnon": 454, "yaari": 454, "9951": 454, "23632": 454, "benno": 454, "lesli": 454, "24450": 454, "19235": 454, "lc_type": 454, "19977": 454, "22638": 454, "22796": 454, "rudimentari": 454, "http_get": 454, "nathaniel": [454, 456], "landau": 454, "girdhar": [454, 455], "detract": 454, "500000": 454, "evid": 454, "lehtosalo": 454, "intermitt": 454, "conceal": 454, "unguard": 454, "pernici": 454, "angelico": [454, 455], "99998": 454, "00003": 454, "00001": 454, "barker": 454, "19676": 454, "22286": 454, "23681": 454, "22682": 454, "22681": 454, "24064": 454, "17636": 454, "23491": 454, "allow_abbrev": 454, "paugh": 454, "j3": [454, 456], "eriksson": 454, "14910": 454, "proactor": 454, "22560": 454, "21326": 454, "yann": [454, 455], "sionneau": [454, 455], "uvloop": [454, 455], "korenberg": [454, 455], "jiryu": [454, 455], "davi": [454, 455], "nikolau": 454, "rath": 454, "15955": 454, "20289": 454, "24270": 454, "17442": 454, "16991": 454, "19505": 454, "23704": 454, "abscissa": 454, "jevnik": [454, 457], "22189": 454, "devin": 454, "jeanpierr": 454, "23086": 454, "24018": 454, "24184": 454, "16104": 454, "19628": 454, "21338": 454, "11271": 454, "21527": 454, "getlist": 454, "18159": 454, "22389": 454, "23171": 454, "4254": 454, "18039": 454, "2052": 454, "17445": 454, "build_ext": 454, "5309": 454, "bdist": 454, "16314": 454, "glenn": 454, "15916": 454, "milan": [454, 456], "oberkirch": [454, 456], "20098": 454, "abhilash": 454, "raj": 454, "21083": 454, "24211": 454, "claud": 454, "paroz": 454, "16324": 454, "21706": 454, "wei": 454, "wu": 454, "23566": 454, "14373": 454, "13968": 454, "55555": 454, "6666": 454, "13742": 454, "demian": [454, 455], "21793": 454, "panter": [454, 455], "3566": 454, "maciej": 454, "szulik": 454, "21800": 454, "openexr": 454, "vignali": 454, "20295": 454, "fabric": 454, "anech": 454, "20197": 454, "17621": 454, "21156": 454, "20383": 454, "20726": 454, "20334": 454, "24190": 454, "17373": 454, "20691": 454, "24017": 454, "24400": 454, "16808": 454, "20578": 454, "16531": 454, "leon": 454, "20480": 454, "21650": 454, "19361": 454, "17911": 454, "c\u00e9dric": [454, 457], "krier": [454, 457], "13918": 454, "20537": 454, "22788": 454, "queuelisten": 454, "23185": 454, "22486": [454, 458], "sharedctyp": 454, "21565": 454, "rosenberg": [454, 458], "22955": 454, "21176": 454, "22524": 454, "21719": 454, "22181": 454, "22054": 454, "23668": 454, "rafik": 454, "draoui": 454, "10395": 454, "19775": 454, "21539": 454, "19776": 454, "mayank": 454, "tripathi": 454, "19777": 454, "spam42": 454, "welborn": 454, "20218": 454, "23611": 454, "21804": 454, "aac": 454, "sre_match": 454, "9179": 454, "22437": 454, "1519638": 454, "22578": 454, "cauet": 454, "22940": 454, "18931": 454, "19840": 454, "5411": 454, "22018": 454, "21076": 454, "decode_data": [454, 455], "process_messag": [454, 455], "19662": 454, "21795": 454, "21725": 454, "14758": 454, "15014": 454, "gavin": 454, "chappel": 454, "16914": 454, "22027": 454, "whathdr": 454, "18615": 454, "22043": 454, "17552": 454, "23853": 454, "21455": 454, "21965": 454, "suboptim": 454, "20188": 454, "20421": 454, "20951": 454, "akira": 454, "19940": 454, "23186": 454, "23239": 454, "10203": 454, "sinclair": 454, "jessica": 454, "mckellar": 454, "13583": 454, "23342": 454, "set_coroutine_wrapp": [454, 456, 457], "get_coroutine_wrapp": [454, 456, 457], "22696": 454, "23437": 454, "21717": 454, "vogt": 454, "23193": 454, "21549": 454, "gindi": 454, "18983": 454, "2527": 454, "_fix": 454, "20035": 454, "framesummari": 454, "kazakov": 454, "22619": 454, "16662": 454, "19746": 454, "22936": 454, "kushal": [454, 455], "21238": 454, "21262": 454, "magicmock": 454, "johann": 454, "baiter": 454, "20968": 454, "h\u00e5kan": 454, "l\u00f6vdahl": 454, "23581": 454, "23568": 454, "17660": 454, "httppasswordmgrwithpriorauth": 454, "matej": 454, "cepl": [454, 458], "19494": 454, "akshit": 454, "khurana": [454, 456], "samwys": 454, "13866": 454, "22366": 454, "22118": 454, "torr": 454, "navarret": 454, "silentghost": [454, 455], "5800": 454, "20627": 454, "22960": 454, "2175": 454, "10590": 454, "23252": 454, "23001": 454, "findfirstfil": 454, "findnextfil": 454, "23605": 454, "21233": 454, "albert": [454, 456], "marku": 454, "21486": 454, "21487": 454, "20826": 454, "23266": 454, "23133": 454, "15381": 454, "22003": 454, "20416": 454, "23344": 454, "15027": 454, "19380": 454, "23206": 454, "22540": 454, "22847": 454, "23488": 454, "23910": 454, "22464": 454, "23573": 454, "_py_char2wchar": 454, "_py_wchar2char": 454, "18395": 454, "18711": 454, "24268": 454, "amd": [454, 455], "gnu32": 454, "win_amd64": 454, "win_ia64": 454, "win_arm": 454, "_d": 454, "legalchar": 454, "23671": 454, "linux_distribut": 454, "1322": 454, "24248": 454, "20438": 454, "22407": 454, "23622": 454, "chaput": 454, "6623": 454, "23464": 454, "21205": 454, "htmlparsererror": 454, "21047": 454, "16518": 454, "22834": 454, "23014": 454, "22818": 454, "2211": 454, "nnnn": 454, "pot": 454, "24284": 454, "15582": 454, "7830": 454, "22453": 454, "20204": 454, "max_path": 455, "python36": 455, "gonzalez": [455, 456], "ivan": [455, 456, 457], "levkivskyi": [455, 456, 457], "lisa": [455, 457], "1_000_000_000_000_000": 455, "1000000000000000": 455, "0x_ff_ff_ff_ff": 455, "ffff_ffff": 455, "ticker": 455, "pluginbas": 455, "plugin1": 455, "plugin2": 455, "teichmann": 455, "intfield": 455, "int_field": 455, "some_fil": 455, "dusti": 455, "koo": 455, "zevenhoven": 455, "27350": 455, "0x7fbcd41666f8": 455, "forbiddenbyt": 455, "0x7fbcd41666fc": 455, "ouch": 455, "1233329": 455, "1a": 455, "test_byt": 455, "648": 455, "0x00007fbcdbd32700": 455, "test_hex": 455, "26516": 455, "26564": 455, "21590": 455, "nikhil": 455, "benesch": 455, "barnert": 455, "25958": 455, "emanuel": 455, "26823": 455, "15767": 455, "23722": [455, 457], "26492": 455, "26146": 455, "28613": 455, "27041": 455, "27040": 455, "28370": 455, "25593": 455, "26221": 455, "27392": 455, "27456": [455, 456], "28003": 455, "26081": 455, "28544": 455, "25357": 455, "628": 455, "23229": 455, "27598": 455, "25987": 455, "28720": 455, "17941": 455, "25628": 455, "26482": 455, "27664": 455, "25609": 455, "24773": 455, "ashlei": 455, "anderson": 455, "12006": 455, "alessandro": 455, "cucci": 455, "19475": 455, "27661": 455, "25928": 455, "27819": 455, "24277": 455, "27331": 455, "20476": 455, "27959": 455, "23591": 455, "23848": 455, "hackman": 455, "25788": 455, "26470": 455, "26798": 455, "16113": 455, "bertoni": 455, "joan": 455, "daemen": 455, "micha\u00ebl": 455, "peeter": 455, "gill": 455, "assch": 455, "ronni": 455, "keer": 455, "27928": 455, "rolf": 455, "krahl": 455, "12319": 455, "tkfont": 455, "swiegart": 455, "24225": 455, "autocomplet": [455, 456], "louie": [455, 456], "15786": [455, 456], "cheryl": [455, 456, 457], "sabella": [455, 456, 457], "1612262": [455, 456], "wohlgang": [455, 456], "27099": [455, 456], "13802": [455, 456], "31860": [455, 456], "maxlin": [455, 456], "33642": [455, 456], "33768": [455, 456], "33679": [455, 456], "dpi": [455, 456], "sharper": [455, 456], "33656": [455, 456], "1529353": [455, 456, 457], "19611": 455, "churn": 455, "27172": 455, "17909": 455, "marian": 455, "horban": 455, "24884": 455, "davin": [455, 457], "pott": [455, 457], "6766": 455, "25994": 455, "27186": 455, "24164": 455, "25382": 455, "8637": 455, "24879": 455, "18844": 455, "ython": 455, "433028": 455, "24454": 455, "xiang": [455, 456, 457], "27177": 455, "tyler": 455, "crompton": 455, "26870": 455, "25011": 455, "25209": 455, "1521950": 455, "wolfgang": 455, "langner": 455, "26587": 455, "lordthorsen": 455, "16864": 455, "stoke": 455, "26536": 455, "26907": 455, "27744": 455, "crypto": 455, "omar": [455, 456], "sandov": [455, 456], "26273": [455, 456], "26404": 455, "26721": 455, "27850": 455, "27766": 455, "28043": 455, "19500": 455, "warhawk": 455, "28025": 455, "28085": 455, "27181": [455, 457], "11734": 455, "26741": 455, "6135": 455, "27781": 455, "27932": 455, "st\u00e9phane": [455, 456], "wirtel": [455, 456], "25485": 455, "6422": 455, "23552": 455, "trace_add": 455, "trace_remov": 455, "trace_info": 455, "trace_vari": 455, "trace_vdelet": 455, "trace_vinfo": 455, "22115": 455, "domainfilt": 455, "26588": 455, "280": 455, "newtyp": 455, "189": 455, "amit": 455, "saha": 455, "26323": 455, "21271": 455, "nikolai": 455, "bogoychev": 455, "16099": 455, "balcerzak": 455, "22829": 455, "26568": 455, "26567": 455, "rouault": 455, "23026": 455, "27982": 455, "26885": 455, "26039": 455, "26243": 455, "16764": 455, "demur": 455, "rume": 455, "26647": 455, "28050": 455, "24870": 455, "25227": 455, "25267": 455, "25301": 455, "25349": 455, "25399": 455, "25401": 455, "snider": 455, "26574": 455, "26249": 455, "27056": 455, "27574": 455, "25596": 455, "26032": 455, "25638": 455, "25873": 455, "25869": 455, "25971": 455, "py_long_long": 455, "17884": 455, "ndk": 455, "lollipop": 455, "26865": 455, "alecsandru": 455, "patrascu": 455, "26359": 455, "5319": 455, "26282": 455, "0b4": 455, "223967b49e49": 455, "27243": 455, "27364": 455, "25791": 455, "mariatta": 455, "25002": 455, "21708": 455, "extra_path": 455, "27919": 455, "26129": 455, "26754": 455, "22493": 455, "28022": 455, "25154": 455, "ffi": 455, "fullmodnam": 455, "find_lines_from_cod": 455, "find_lin": 455, "find_str": 455, "find_executable_lin": 455, "tk_menubar": 455, "tk_bindfortravers": 455, "cdrom": 455, "cdio": 455, "stropt": 455, "chronic": 455, "h2py": 455, "show_track_count": 455, "23034": 455, "balogh": 455, "2091": 455, "25768": 455, "20059": 455, "taddei": 455, "ko\u0142odziej": 455, "23883": 455, "18018": 455, "23430": 455, "getspnam": 455, "26685": 455, "18726": 455, "holden": 455, "27842": 455, "method_crypt": 455, "25287": 455, "lita": 455, "cho": 455, "21815": 455, "jakub": 455, "stasiak": 455, "26335": 455, "ramchandra": 455, "17211": 455, "25953": 455, "plugin": 455, "format_valu": 455, "25483": 455, "27078": 455, "27140": 455, "build_map_unpack_with_cal": 455, "build_tuple_unpack_with_cal": 455, "call_function_var": 455, "call_function_var_kw": 455, "make_closur": 455, "27095": 455, "27213": 455, "28257": 455, "store_annot": [455, 456], "27985": 455, "pyexc_recursionerrorinst": [455, 456], "22898": [455, 456], "30697": [455, 456], "31900": [455, 456], "33899": [455, 456, 457], "37228": [455, 456, 457, 458], "advent": 456, "glare": 456, "advers": 456, "from_str": 456, "validate_b": 456, "tss": 456, "brai": 456, "masayuki": 456, "coars": 456, "ja": 456, "ko": 456, "12844": 456, "18896": 456, "xiao": 456, "28927": 456, "32677": 456, "29546": 456, "30024": 456, "28974": 456, "30579": 456, "33053": 456, "31415": 456, "32248": 456, "14191": 456, "32314": [456, 457], "32436": 456, "32311": 456, "23749": 456, "31819": 456, "32250": 456, "32251": 456, "32269": 456, "32391": 456, "32410": 456, "32415": 456, "32418": 456, "32662": 456, "32741": 456, "quentin": 456, "dawan": 456, "31245": 456, "create_accepted_socket": 456, "aspinal": 456, "29970": 456, "marat": 456, "sharafutdinov": 456, "31943": 456, "32193": 456, "32356": 456, "32066": 456, "30508": 456, "33792": 456, "30103": 456, "oz": 456, "tiram": 456, "30095": 456, "32320": 456, "31650": 456, "21423": 456, "moreau": 456, "31540": 456, "bakker": 456, "10049": 456, "29679": 456, "30241": 456, "mohr": 456, "kulakov": 456, "29302": 456, "sanyam": 456, "21862": 456, "blowfish": 456, "31664": 456, "31702": 456, "15873": 456, "5288": 456, "32630": 456, "11822": 456, "11913": 456, "31801": 456, "33217": 456, "32227": 456, "zekun": 456, "31558": 456, "32433": 456, "soffer": 456, "31945": 456, "pierr": [456, 457], "quentel": 456, "29654": 456, "28707": 456, "31639": 456, "5680": [456, 457], "37627": [456, 457], "saimadhav": [456, 457], "heblikar": [456, 457], "17535": [456, 457], "garvit": 456, "khatri": 456, "29851": 456, "30436": 456, "30526": 456, "15216": 456, "20825": 456, "30537": 456, "10379": 456, "30520": 456, "30522": 456, "31080": 456, "29962": 456, "nitish": 456, "chandra": 456, "22589": 456, "20486": 456, "30596": 456, "vitor": 456, "pereira": 456, "30794": 456, "18966": 456, "28682": 456, "25996": 456, "16500": 456, "31368": 456, "19930": 456, "32441": 456, "32659": 456, "ry": 456, "30897": 456, "31389": 456, "32206": 456, "bernhard": 456, "wiedemann": 456, "29708": 456, "feanil": 456, "patel": 456, "31128": 456, "14976": 456, "31690": 456, "25054": 456, "30215": 456, "30349": 456, "10076": 456, "30050": 456, "32373": 456, "32454": 456, "29728": 456, "cathi": 456, "averi": 456, "27584": 456, "28134": 456, "lele": 456, "gaifax": 456, "27645": 456, "31843": 456, "31399": 456, "libssl": 456, "libressl": 456, "32185": 456, "mandeep": 456, "singh": 456, "23033": 456, "blacklist": 456, "whitelist": 456, "31429": 456, "28414": 456, "32947": 456, "20995": 456, "29136": 456, "30622": 456, "33618": 456, "32951": 456, "32609": 456, "1198569": 456, "bo": [456, 457], "bayl": [456, 457], "32102": [456, 457], "clegg": 456, "31756": 456, "segev": 456, "19764": 456, "grace": 456, "25942": 456, "31353": 456, "28740": 456, "32591": 456, "32025": 456, "spinbox": [456, 457], "32585": 456, "32121": 456, "manuel": 456, "krebber": 456, "29377": 456, "32265": 456, "32717": 456, "haag": 456, "32071": 456, "20804": 456, "30541": 456, "theun": 456, "ratnadeep": 456, "debnath": 456, "16285": 456, "22807": 456, "32107": 456, "20361": 456, "32043": 456, "32230": 456, "31975": 456, "31648": 456, "simplexmlrpcdispatch": 456, "7769": 456, "irmen": 456, "jong": 456, "31072": 456, "zhime": 456, "31638": 456, "21417": 456, "30693": 456, "25658": 456, "28411": 456, "victorin": 456, "23699": 456, "31338": 456, "30054": 456, "31574": 456, "28761": 456, "28769": 456, "milman": 456, "28280": 456, "27867": 456, "10381": 456, "30708": 456, "abid": 456, "29102": 456, "29240": 456, "28822": 456, "31370": 456, "27979": 456, "nuget": 456, "30450": 456, "29300": 456, "29507": 456, "29452": 456, "29286": 456, "29585": 456, "31333": 456, "26110": 456, "32296": 456, "32348": 456, "32355": 456, "32351": 456, "31970": 456, "32226": 456, "elliot": 456, "gorokhovski": 456, "28685": 456, "31179": 456, "32544": 456, "\u0454": 456, "24821": 456, "28638": 456, "32403": 456, "28564": 456, "30285": 456, "31671": 456, "30014": 456, "eugen": 456, "toder": 456, "29469": 456, "11549": 456, "70x": 456, "wielgosik": 456, "24700": 456, "26121": 456, "31344": 456, "32305": 456, "32303": 456, "32690": 456, "32304": 456, "10544": [456, 457], "28894": 456, "openfp": [456, 458], "31985": 456, "32253": 456, "25988": 456, "28847": 456, "28692": 456, "29576": 456, "chi": 456, "hsuan": 456, "yen": 456, "9850": 456, "_dummy_thread": [456, 458], "28332": 456, "28124": 456, "28799": 456, "nix": 456, "jessi": 456, "trusti": 456, "xenial": 456, "sle": 456, "sp3": 456, "splitunc": 456, "_internaldict": 456, "_overlap": 456, "install_misc": 456, "vander": 456, "weel": 456, "29218": 456, "fpectl": 456, "29137": 456, "30291": 456, "0p": 456, "30362": 456, "30406": 456, "32670": 456, "31709": 456, "32012": 456, "32023": 456, "31233": 456, "33540": 456, "31151": 456, "24744": 456, "29193": 456, "29192": 456, "21071": 456, "29979": 456, "30399": 456, "utkarsh": 456, "upadhyai": 456, "30302": 456, "32308": 456, "29995": 456, "32331": 456, "33169": 456, "32327": 456, "sottil": [456, 457, 458], "26510": 456, "31778": 456, "28292": 456, "32792": 456, "nemec": 456, "33097": 456, "tocknel": 456, "23835": 456, "32550": 456, "28137": 456, "latent": 456, "22257": 456, "25612": 456, "34247": 456, "affection": 457, "tusk": 457, "discount": 457, "clean_nam": 457, "allowed_nam": 457, "emili": 457, "morehous": 457, "35224": 457, "impair": 457, "36540": 457, "33499": 457, "21536": 457, "36722": 457, "36721": 457, "eric_idl": 457, "member_sinc": 457, "075": 457, "theta": 457, "36817": 457, "pywidestringlist": 457, "py_runmain": 457, "_pyruntimest": 457, "36763": 457, "36974": [457, 458], "36785": 457, "32489": 457, "33073": 457, "37819": 457, "20092": 457, "copyright_year_pattern": 457, "eunic": 457, "30688": 457, "r\u00e9mi": [457, 458], "lapeyr": [457, 458], "33462": 457, "34641": 457, "simpson": 457, "homer": 457, "marg": 457, "bart": 457, "cuthbert": 457, "jordan": 457, "32117": 457, "15248": 457, "32417": 457, "1054041": 457, "37032": 457, "137": 457, "diophantin": 457, "4258\ud835\udc65": 457, "147\ud835\udc66": 457, "369": 457, "36027": 457, "j\u00f6rn": 457, "heissler": 457, "glaser": 457, "olivi": 457, "grisel": 457, "35900": 457, "chardet": 457, "34632": 457, "33416": 457, "35766": 457, "37028": 457, "32528": 457, "34687": 457, "meili": 457, "29883": 457, "23057": 457, "36999": 457, "34270": 457, "twisteroid": 457, "ambassador": 457, "33530": 457, "34616": 457, "35864": 457, "sanderson": 457, "29235": 457, "selik": 457, "34003": 457, "31680": 457, "36085": 457, "36004": 457, "36772": 457, "21145": 457, "taskmanag": 457, "32380": 457, "36016": 457, "franz": 457, "glasner": 457, "2504": 457, "guo": 457, "teo": 457, "34898": 457, "6584": 457, "13153": 457, "4603": [457, 458], "johnni": [457, 458], "najera": [457, 458], "38944": [457, 458], "37765": [457, 458], "audioclip": 457, "bit_rat": 457, "kilohertz": 457, "36326": 457, "1015": 457, "1045": 457, "34659": 457, "31553": 457, "jupyt": 457, "notebook": 457, "33897": 457, "33089": 457, "35606": 457, "yash": 457, "aggarw": 457, "keller": 457, "37128": 457, "37178": 457, "35431": 457, "650320427": 457, "650320426": 457, "36887": 457, "33083": 457, "32941": 457, "35813": 457, "26836": 457, "37834": 457, "33721": 457, "36264": 457, "joannah": [457, 458], "nanjeky": [457, 458], "26978": 457, "jon": [457, 458], "janzen": [457, 458], "26707": 457, "30670": 457, "22640": 457, "20849": 457, "gerlach": 457, "30661": 457, "17561": 457, "37007": 457, "34670": 457, "35904": 457, "35892": 457, "equiprob": 457, "36546": 457, "normaldist": 457, "36018": 457, "temperature_feb": 457, "356099432828281": 457, "3184678262814532": 457, "2039930378537762": 457, "el_ni\u00f1o": 457, "climat": 457, "830080526611674": 457, "294144947901014": 457, "672102882379219": 457, "000027119750287": 457, "647488369766392": 457, "36829": 457, "36268": 457, "1230540": 457, "tesler": 457, "36084": 457, "selection_from": 457, "selection_pres": 457, "selection_rang": 457, "selection_to": 457, "juliett": 457, "monsel": 457, "34829": 457, "moveto": 457, "23831": 457, "transparency_get": 457, "transparency_set": 457, "25451": 457, "35702": 457, "lat_long": 457, "grid_squar": 457, "xy_coordin": 457, "get_statu": 457, "1415926536": 457, "belang": 457, "euresti": 457, "32285": 457, "37966": 457, "26467": 457, "24412": 457, "strandmark": 457, "35047": 457, "32972": 457, "testrequest": 457, "test_get": 457, "32718": 457, "36669": 457, "17239": 457, "28238": 457, "13611": 457, "36676": 457, "36673": 457, "35153": 457, "35537": 457, "smb": 457, "33695": 457, "pygc_head": [457, 458], "33597": 457, "bolsterle": 457, "30977": 457, "35664": 457, "32492": 457, "33234": 457, "36012": 457, "23867": 457, "35582": 457, "36127": 457, "26219": 457, "36707": 457, "8m": 457, "37m": 457, "35081": 457, "pyobject_init_var": [457, 458], "_py_dealloc": 457, "35059": 457, "pybytearray_init": 457, "pybytearray_fini": 457, "35713": 457, "33818": 457, "dualiti": 457, "32430": 457, "36048": 457, "35810": [457, 458], "37221": 457, "38234": 457, "37481": 457, "29209": 457, "34075": 457, "9372": 457, "36320": 457, "32892": 457, "36917": 457, "36921": 457, "34790": [457, 458], "33710": 457, "isal": [457, 458], "35283": 457, "sharedmemoryserv": 457, "36492": 457, "36952": 457, "macpath": 457, "35471": 457, "35345": 457, "36895": 457, "25427": 457, "36297": 457, "30262": 457, "36933": 457, "34850": 457, "35459": 457, "36793": 457, "aix3": 457, "36588": 457, "_py_isfin": 457, "36475": 457, "37412": 457, "34651": 457, "37951": 457, "36348": 457, "treeview": 457, "31508": 457, "roja": 457, "34160": 457, "32749": 457, "pycore_pyst": 457, "35886": 457, "2122": 457, "33106": 457, "32751": [457, 458], "37027": 457, "kb2533623": 457, "pgen": 457, "36623": 457, "pyeval_reinitthread": 457, "36728": 457, "36381": 457, "foo_struct": [457, 458], "foo_new": 457, "33407": 457, "32388": 457, "pynode_addchild": 457, "pyparser_addtoken": 457, "libpython38": 457, "mingw": 457, "python38": 457, "gendef": 457, "dlltool": 457, "binutil": 457, "37351": 457, "unrol": 457, "break_loop": 457, "continue_loop": 457, "setup_loop": 457, "setup_except": 457, "begin_fin": 457, "call_fin": 457, "pop_fin": 457, "end_fin": 457, "with_cleanup_start": 457, "17611": 457, "33041": 457, "var_access_benchmark": [457, 458], "35884": 457, "read_loc": [457, 458], "read_nonloc": [457, 458], "read_glob": [457, 458], "read_builtin": [457, 458], "read_classvar_from_class": [457, 458], "read_classvar_from_inst": [457, 458], "read_instancevar": [457, 458], "read_instancevar_slot": [457, 458], "read_namedtupl": [457, 458], "read_boundmethod": [457, 458], "write_loc": [457, 458], "write_nonloc": [457, 458], "write_glob": [457, 458], "write_classvar": [457, 458], "write_instancevar": [457, 458], "write_instancevar_slot": [457, 458], "read_list": [457, 458], "read_dequ": [457, 458], "read_strdict": [457, 458], "write_list": [457, 458], "write_dequ": [457, 458], "write_dict": [457, 458], "write_strdict": [457, 458], "list_append_pop": [457, 458], "deque_append_pop": [457, 458], "deque_append_popleft": [457, 458], "loop_overhead": [457, 458], "i7": [457, 458], "4960hq": [457, 458], "36384": [457, 458], "achraf": 457, "merzouki": 457, "_abc": 458, "_bz2": 458, "_codec": 458, "_contextvar": 458, "_functool": 458, "_json": 458, "multiphas": 458, "_hashlib": 458, "_posixsubprocess": 458, "36144": 458, "39939": 458, "greet_al": 458, "ta\u015fkaya": 458, "39481": 458, "pythonoldpars": 458, "ngalim": 458, "siregar": 458, "37444": 458, "20443": 458, "37388": 458, "28029": 458, "39702": 458, "40257": 458, "30773": 458, "40824": 458, "41848": 458, "43755": 458, "17005": 458, "37995": 458, "38870": 458, "39638": 458, "34037": 458, "38692": 458, "32309": 458, "typererror": 458, "ido": 458, "37404": 458, "lum\u00edr": 458, "frenzi": 458, "balhar": 458, "40495": 458, "38112": 458, "39349": 458, "39812": 458, "39207": 458, "38312": 458, "24416": 458, "40698": 458, "38602": 458, "39259": 458, "38379": 458, "39322": 458, "xof": 458, "37630": 458, "40479": 458, "39509": 458, "rhode": 458, "39507": 458, "38615": 458, "40375": 458, "39336": 458, "39791": 458, "36350": 458, "39775": 458, "oleksandr": 458, "pavliuk": 458, "34788": 458, "39648": 458, "ananthakrishnan": 458, "39479": 458, "39288": 458, "39310": 458, "30966": 458, "38493": 458, "38713": 458, "39413": 458, "39395": 458, "40094": 458, "girt": 458, "folkmani": 458, "30618": 458, "hopper": 458, "lidral": 458, "porter": 458, "20523": 458, "bordum": 458, "37376": 458, "40286": 458, "38712": 458, "39329": 458, "tatschner": 458, "25780": 458, "40291": 458, "shinya": 458, "okano": 458, "28724": 458, "thread_cputim": 458, "40192": 458, "mat\u011bjek": 458, "mat\u011bj": 458, "charalampo": 458, "strataki": 458, "1294959": 458, "jendrik": 458, "seipp": 458, "13601": 458, "huon": 458, "40630": 458, "varoquaux": 458, "konstantin": 458, "kashin": 458, "39926": 458, "37663": 458, "eoln": 458, "mefistot": 458, "39011": 458, "32856": 458, "40010": 458, "closefrom": 458, "mast": 458, "conrad": 458, "kubilai": 458, "kocak": 458, "38061": 458, "87x": 458, "37986": 458, "37207": 458, "kapun": 458, "8425": 458, "thrash": 458, "37257": 458, "39434": 458, "37348": 458, "39586": 458, "37315": 458, "35712": 458, "28286": 458, "splitlist": 458, "hexbin4": 458, "rledecode_hqx": 458, "39353": 458, "34822": 458, "augload": 458, "augstor": 458, "39639": 458, "39969": 458, "39988": 458, "39877": 458, "33262": 458, "colvin": 458, "xgtitl": 458, "39366": 458, "38916": 458, "call_profil": 458, "37414": 458, "37392": 458, "pyimport_cleanup": 458, "36710": 458, "37312": 458, "37320": 458, "37804": 458, "36543": 458, "36409": 458, "pygen_needsfin": 458, "15088": 458, "39351": 458, "39350": 458, "39357": 458, "39377": 458, "34793": 458, "39489": 458, "40182": 458, "has_exec": 458, "40208": 458, "40967": 458, "39239": 458, "39562": 458, "34538": 458, "37742": 458, "aiudi": 458, "34775": 458, "latex_latin1": 458, "jordon": 458, "xu": 458, "37751": 458, "foo_travers": 458, "0x03090000": 458, "29548": 458, "34880": 458, "39156": 458, "setenv": 458, "10945": 458, "isysroot": 458, "34956": 458, "33125": 458, "36044": 458, "37707": 458, "marcel": 458, "plch": 458, "38787": 458, "40421": 458, "39947": 458, "37194": 458, "38644": 458, "39542": 458, "40024": 458, "40241": 458, "_pyobject_functionstr": 458, "37645": 458, "37483": 458, "38500": 458, "39984": 458, "38650": 458, "pycore_gc": 458, "39882": 458, "37540": 458, "pyobject_new_var": 458, "pyobject_get_weakrefs_listptr": 458, "pyfpe_start_protect": 458, "pyfpe_end_protect": 458, "38835": 458, "37878": 458, "_py_newrefer": 458, "_py_forgetrefer": 458, "_pytracemalloc_newrefer": 458, "_py_getreftot": 458, "pytrash_unwind_level": 458, "py_trashcan_begin_condit": 458, "_pydebug_printtotalref": 458, "_py_printrefer": 458, "_py_printreferenceaddress": 458, "_py_tracemalloc_config": 458, "_py_addtoallobject": 458, "getfram": 458, "_pythreadstate_getfram": 458, "pythreadframegett": 458, "39946": 458, "37340": 458, "38896": 458, "40428": 458, "pyasyncgen_clearfreelist": 458, "pycontext_clearfreelist": 458, "pydict_clearfreelist": 458, "pyfloat_clearfreelist": 458, "pyframe_clearfreelist": 458, "pylist_clearfreelist": 458, "pymethod_clearfreelist": 458, "pycfunction_clearfreelist": 458, "pyset_clearfreelist": 458, "pytuple_clearfreelist": 458, "pyunicode_clearfreelist": 458, "_pyunicode_clearstaticstr": 458, "39465": 458, "_pybytes_insertthousandsgroupinglocal": 458, "_pybytes_insertthousandsgroup": 458, "_py_initializefromarg": 458, "_py_initializefromwidearg": 458, "_pyfloat_repr": 458, "_pyfloat_digit": 458, "_pyfloat_digitsinit": 458, "pyframe_extendstack": 458, "_pyaiterwrapper_typ": 458, "pynullimporter_typ": 458, "pycmpwrapper_typ": 458, "pysortwrapper_typ": 458, "pynoargsfunct": 458, "39372": 458, "lawrenc": 458, "anna": 458, "41100": 458, "essai": 460, "nontrivi": 460}, "objects": {"": [[64, 0, 1, "c.CO_FUTURE_DIVISION", "CO_FUTURE_DIVISION"], [56, 1, 1, "c.METH_CLASS", "METH_CLASS"], [56, 1, 1, "c.METH_COEXIST", "METH_COEXIST"], [56, 1, 1, "c.METH_FASTCALL", "METH_FASTCALL"], [56, 1, 1, "c.METH_KEYWORDS", "METH_KEYWORDS"], [56, 1, 1, "c.METH_METHOD", "METH_METHOD"], [56, 1, 1, "c.METH_NOARGS", "METH_NOARGS"], [56, 1, 1, "c.METH_O", "METH_O"], [56, 1, 1, "c.METH_STATIC", "METH_STATIC"], [56, 1, 1, "c.METH_VARARGS", "METH_VARARGS"], [41, 1, 1, "c.PYMEM_DOMAIN_MEM", "PYMEM_DOMAIN_MEM"], [41, 1, 1, "c.PYMEM_DOMAIN_OBJ", "PYMEM_DOMAIN_OBJ"], [41, 1, 1, "c.PYMEM_DOMAIN_RAW", "PYMEM_DOMAIN_RAW"], [4, 1, 1, "c.PY_MAJOR_VERSION", "PY_MAJOR_VERSION"], [4, 1, 1, "c.PY_MICRO_VERSION", "PY_MICRO_VERSION"], [4, 1, 1, "c.PY_MINOR_VERSION", "PY_MINOR_VERSION"], [4, 1, 1, "c.PY_RELEASE_LEVEL", "PY_RELEASE_LEVEL"], [4, 1, 1, "c.PY_RELEASE_SERIAL", "PY_RELEASE_SERIAL"], [10, 1, 1, "c.PY_VECTORCALL_ARGUMENTS_OFFSET", "PY_VECTORCALL_ARGUMENTS_OFFSET"], [4, 1, 1, "c.PY_VERSION_HEX", "PY_VERSION_HEX"], [35, 2, 1, "c.PyAIter_Check", "PyAIter_Check"], [62, 4, 1, "c.PyASCIIObject", "PyASCIIObject"], [53, 2, 1, "c.PyAnySet_Check", "PyAnySet_Check"], [53, 2, 1, "c.PyAnySet_CheckExact", "PyAnySet_CheckExact"], [5, 2, 1, "c.PyArg_Parse", "PyArg_Parse"], [5, 2, 1, "c.PyArg_ParseTuple", "PyArg_ParseTuple"], [5, 2, 1, "c.PyArg_ParseTupleAndKeywords", "PyArg_ParseTupleAndKeywords"], [5, 2, 1, "c.PyArg_UnpackTuple", "PyArg_UnpackTuple"], [5, 2, 1, "c.PyArg_VaParse", "PyArg_VaParse"], [5, 2, 1, "c.PyArg_VaParseTupleAndKeywords", "PyArg_VaParseTupleAndKeywords"], [5, 2, 1, "c.PyArg_ValidateKeywordArguments", "PyArg_ValidateKeywordArguments"], [61, 4, 1, "c.PyAsyncMethods", "PyAsyncMethods"], [7, 1, 1, "c.PyBUF_ANY_CONTIGUOUS", "PyBUF_ANY_CONTIGUOUS"], [7, 1, 1, "c.PyBUF_CONTIG", "PyBUF_CONTIG"], [7, 1, 1, "c.PyBUF_CONTIG_RO", "PyBUF_CONTIG_RO"], [7, 1, 1, "c.PyBUF_C_CONTIGUOUS", "PyBUF_C_CONTIGUOUS"], [7, 1, 1, "c.PyBUF_FORMAT", "PyBUF_FORMAT"], [7, 1, 1, "c.PyBUF_FULL", "PyBUF_FULL"], [7, 1, 1, "c.PyBUF_FULL_RO", "PyBUF_FULL_RO"], [7, 1, 1, "c.PyBUF_F_CONTIGUOUS", "PyBUF_F_CONTIGUOUS"], [7, 1, 1, "c.PyBUF_INDIRECT", "PyBUF_INDIRECT"], [7, 1, 1, "c.PyBUF_MAX_NDIM", "PyBUF_MAX_NDIM"], [7, 1, 1, "c.PyBUF_ND", "PyBUF_ND"], [7, 1, 1, "c.PyBUF_RECORDS", "PyBUF_RECORDS"], [7, 1, 1, "c.PyBUF_RECORDS_RO", "PyBUF_RECORDS_RO"], [7, 1, 1, "c.PyBUF_SIMPLE", "PyBUF_SIMPLE"], [7, 1, 1, "c.PyBUF_STRIDED", "PyBUF_STRIDED"], [7, 1, 1, "c.PyBUF_STRIDED_RO", "PyBUF_STRIDED_RO"], [7, 1, 1, "c.PyBUF_STRIDES", "PyBUF_STRIDES"], [7, 1, 1, "c.PyBUF_WRITABLE", "PyBUF_WRITABLE"], [6, 2, 1, "c.PyBool_Check", "PyBool_Check"], [6, 2, 1, "c.PyBool_FromLong", "PyBool_FromLong"], [6, 0, 1, "c.PyBool_Type", "PyBool_Type"], [61, 4, 1, "c.PyBufferProcs", "PyBufferProcs"], [7, 2, 1, "c.PyBuffer_FillContiguousStrides", "PyBuffer_FillContiguousStrides"], [7, 2, 1, "c.PyBuffer_FillInfo", "PyBuffer_FillInfo"], [7, 2, 1, "c.PyBuffer_FromContiguous", "PyBuffer_FromContiguous"], [7, 2, 1, "c.PyBuffer_GetPointer", "PyBuffer_GetPointer"], [7, 2, 1, "c.PyBuffer_IsContiguous", "PyBuffer_IsContiguous"], [7, 2, 1, "c.PyBuffer_Release", "PyBuffer_Release"], [7, 2, 1, "c.PyBuffer_SizeFromFormat", "PyBuffer_SizeFromFormat"], [7, 2, 1, "c.PyBuffer_ToContiguous", "PyBuffer_ToContiguous"], [8, 4, 1, "c.PyByteArrayObject", "PyByteArrayObject"], [8, 2, 1, "c.PyByteArray_AS_STRING", "PyByteArray_AS_STRING"], [8, 2, 1, "c.PyByteArray_AsString", "PyByteArray_AsString"], [8, 2, 1, "c.PyByteArray_Check", "PyByteArray_Check"], [8, 2, 1, "c.PyByteArray_CheckExact", "PyByteArray_CheckExact"], [8, 2, 1, "c.PyByteArray_Concat", "PyByteArray_Concat"], [8, 2, 1, "c.PyByteArray_FromObject", "PyByteArray_FromObject"], [8, 2, 1, "c.PyByteArray_FromStringAndSize", "PyByteArray_FromStringAndSize"], [8, 2, 1, "c.PyByteArray_GET_SIZE", "PyByteArray_GET_SIZE"], [8, 2, 1, "c.PyByteArray_Resize", "PyByteArray_Resize"], [8, 2, 1, "c.PyByteArray_Size", "PyByteArray_Size"], [8, 0, 1, "c.PyByteArray_Type", "PyByteArray_Type"], [9, 4, 1, "c.PyBytesObject", "PyBytesObject"], [9, 2, 1, "c.PyBytes_AS_STRING", "PyBytes_AS_STRING"], [9, 2, 1, "c.PyBytes_AsString", "PyBytes_AsString"], [9, 2, 1, "c.PyBytes_AsStringAndSize", "PyBytes_AsStringAndSize"], [9, 2, 1, "c.PyBytes_Check", "PyBytes_Check"], [9, 2, 1, "c.PyBytes_CheckExact", "PyBytes_CheckExact"], [9, 2, 1, "c.PyBytes_Concat", "PyBytes_Concat"], [9, 2, 1, "c.PyBytes_ConcatAndDel", "PyBytes_ConcatAndDel"], [9, 2, 1, "c.PyBytes_FromFormat", "PyBytes_FromFormat"], [9, 2, 1, "c.PyBytes_FromFormatV", "PyBytes_FromFormatV"], [9, 2, 1, "c.PyBytes_FromObject", "PyBytes_FromObject"], [9, 2, 1, "c.PyBytes_FromString", "PyBytes_FromString"], [9, 2, 1, "c.PyBytes_FromStringAndSize", "PyBytes_FromStringAndSize"], [9, 2, 1, "c.PyBytes_GET_SIZE", "PyBytes_GET_SIZE"], [9, 2, 1, "c.PyBytes_Size", "PyBytes_Size"], [9, 0, 1, "c.PyBytes_Type", "PyBytes_Type"], [56, 4, 1, "c.PyCFunction", "PyCFunction"], [56, 4, 1, "c.PyCFunctionWithKeywords", "PyCFunctionWithKeywords"], [56, 4, 1, "c.PyCMethod", "PyCMethod"], [36, 2, 1, "c.PyCallIter_Check", "PyCallIter_Check"], [36, 2, 1, "c.PyCallIter_New", "PyCallIter_New"], [36, 0, 1, "c.PyCallIter_Type", "PyCallIter_Type"], [10, 2, 1, "c.PyCallable_Check", "PyCallable_Check"], [11, 4, 1, "c.PyCapsule", "PyCapsule"], [11, 2, 1, "c.PyCapsule_CheckExact", "PyCapsule_CheckExact"], [11, 4, 1, "c.PyCapsule_Destructor", "PyCapsule_Destructor"], [11, 2, 1, "c.PyCapsule_GetContext", "PyCapsule_GetContext"], [11, 2, 1, "c.PyCapsule_GetDestructor", "PyCapsule_GetDestructor"], [11, 2, 1, "c.PyCapsule_GetName", "PyCapsule_GetName"], [11, 2, 1, "c.PyCapsule_GetPointer", "PyCapsule_GetPointer"], [11, 2, 1, "c.PyCapsule_Import", "PyCapsule_Import"], [11, 2, 1, "c.PyCapsule_IsValid", "PyCapsule_IsValid"], [11, 2, 1, "c.PyCapsule_New", "PyCapsule_New"], [11, 2, 1, "c.PyCapsule_SetContext", "PyCapsule_SetContext"], [11, 2, 1, "c.PyCapsule_SetDestructor", "PyCapsule_SetDestructor"], [11, 2, 1, "c.PyCapsule_SetName", "PyCapsule_SetName"], [11, 2, 1, "c.PyCapsule_SetPointer", "PyCapsule_SetPointer"], [12, 4, 1, "c.PyCellObject", "PyCellObject"], [12, 2, 1, "c.PyCell_Check", "PyCell_Check"], [12, 2, 1, "c.PyCell_GET", "PyCell_GET"], [12, 2, 1, "c.PyCell_Get", "PyCell_Get"], [12, 2, 1, "c.PyCell_New", "PyCell_New"], [12, 2, 1, "c.PyCell_SET", "PyCell_SET"], [12, 2, 1, "c.PyCell_Set", "PyCell_Set"], [12, 0, 1, "c.PyCell_Type", "PyCell_Type"], [13, 4, 1, "c.PyCodeEvent", "PyCodeEvent"], [13, 4, 1, "c.PyCodeObject", "PyCodeObject"], [13, 2, 1, "c.PyCode_AddWatcher", "PyCode_AddWatcher"], [13, 2, 1, "c.PyCode_Addr2Line", "PyCode_Addr2Line"], [13, 2, 1, "c.PyCode_Addr2Location", "PyCode_Addr2Location"], [13, 2, 1, "c.PyCode_Check", "PyCode_Check"], [13, 2, 1, "c.PyCode_ClearWatcher", "PyCode_ClearWatcher"], [13, 2, 1, "c.PyCode_GetCellvars", "PyCode_GetCellvars"], [13, 2, 1, "c.PyCode_GetCode", "PyCode_GetCode"], [13, 2, 1, "c.PyCode_GetFreevars", "PyCode_GetFreevars"], [13, 2, 1, "c.PyCode_GetNumFree", "PyCode_GetNumFree"], [13, 2, 1, "c.PyCode_GetVarnames", "PyCode_GetVarnames"], [13, 2, 1, "c.PyCode_NewEmpty", "PyCode_NewEmpty"], [13, 0, 1, "c.PyCode_Type", "PyCode_Type"], [13, 4, 1, "c.PyCode_WatchCallback", "PyCode_WatchCallback"], [14, 2, 1, "c.PyCodec_BackslashReplaceErrors", "PyCodec_BackslashReplaceErrors"], [14, 2, 1, "c.PyCodec_Decode", "PyCodec_Decode"], [14, 2, 1, "c.PyCodec_Decoder", "PyCodec_Decoder"], [14, 2, 1, "c.PyCodec_Encode", "PyCodec_Encode"], [14, 2, 1, "c.PyCodec_Encoder", "PyCodec_Encoder"], [14, 2, 1, "c.PyCodec_IgnoreErrors", "PyCodec_IgnoreErrors"], [14, 2, 1, "c.PyCodec_IncrementalDecoder", "PyCodec_IncrementalDecoder"], [14, 2, 1, "c.PyCodec_IncrementalEncoder", "PyCodec_IncrementalEncoder"], [14, 2, 1, "c.PyCodec_KnownEncoding", "PyCodec_KnownEncoding"], [14, 2, 1, "c.PyCodec_LookupError", "PyCodec_LookupError"], [14, 2, 1, "c.PyCodec_NameReplaceErrors", "PyCodec_NameReplaceErrors"], [14, 2, 1, "c.PyCodec_Register", "PyCodec_Register"], [14, 2, 1, "c.PyCodec_RegisterError", "PyCodec_RegisterError"], [14, 2, 1, "c.PyCodec_ReplaceErrors", "PyCodec_ReplaceErrors"], [14, 2, 1, "c.PyCodec_StreamReader", "PyCodec_StreamReader"], [14, 2, 1, "c.PyCodec_StreamWriter", "PyCodec_StreamWriter"], [14, 2, 1, "c.PyCodec_StrictErrors", "PyCodec_StrictErrors"], [14, 2, 1, "c.PyCodec_Unregister", "PyCodec_Unregister"], [14, 2, 1, "c.PyCodec_XMLCharRefReplaceErrors", "PyCodec_XMLCharRefReplaceErrors"], [62, 4, 1, "c.PyCompactUnicodeObject", "PyCompactUnicodeObject"], [64, 5, 1, "c.PyCompilerFlags", "PyCompilerFlags"], [15, 4, 1, "c.PyComplexObject", "PyComplexObject"], [15, 2, 1, "c.PyComplex_AsCComplex", "PyComplex_AsCComplex"], [15, 2, 1, "c.PyComplex_Check", "PyComplex_Check"], [15, 2, 1, "c.PyComplex_CheckExact", "PyComplex_CheckExact"], [15, 2, 1, "c.PyComplex_FromCComplex", "PyComplex_FromCComplex"], [15, 2, 1, "c.PyComplex_FromDoubles", "PyComplex_FromDoubles"], [15, 2, 1, "c.PyComplex_ImagAsDouble", "PyComplex_ImagAsDouble"], [15, 2, 1, "c.PyComplex_RealAsDouble", "PyComplex_RealAsDouble"], [15, 0, 1, "c.PyComplex_Type", "PyComplex_Type"], [33, 4, 1, "c.PyConfig", "PyConfig"], [33, 2, 1, "c.PyConfig_Clear", "PyConfig_Clear"], [33, 2, 1, "c.PyConfig_InitIsolatedConfig", "PyConfig_InitIsolatedConfig"], [33, 2, 1, "c.PyConfig_InitPythonConfig", "PyConfig_InitPythonConfig"], [33, 2, 1, "c.PyConfig_Read", "PyConfig_Read"], [33, 2, 1, "c.PyConfig_SetArgv", "PyConfig_SetArgv"], [33, 2, 1, "c.PyConfig_SetBytesArgv", "PyConfig_SetBytesArgv"], [33, 2, 1, "c.PyConfig_SetBytesString", "PyConfig_SetBytesString"], [33, 2, 1, "c.PyConfig_SetString", "PyConfig_SetString"], [33, 2, 1, "c.PyConfig_SetWideStringList", "PyConfig_SetWideStringList"], [17, 4, 1, "c.PyContext", "PyContext"], [17, 4, 1, "c.PyContextToken", "PyContextToken"], [17, 2, 1, "c.PyContextToken_CheckExact", "PyContextToken_CheckExact"], [17, 0, 1, "c.PyContextToken_Type", "PyContextToken_Type"], [17, 4, 1, "c.PyContextVar", "PyContextVar"], [17, 2, 1, "c.PyContextVar_CheckExact", "PyContextVar_CheckExact"], [17, 2, 1, "c.PyContextVar_Get", "PyContextVar_Get"], [17, 2, 1, "c.PyContextVar_New", "PyContextVar_New"], [17, 2, 1, "c.PyContextVar_Reset", "PyContextVar_Reset"], [17, 2, 1, "c.PyContextVar_Set", "PyContextVar_Set"], [17, 0, 1, "c.PyContextVar_Type", "PyContextVar_Type"], [17, 2, 1, "c.PyContext_CheckExact", "PyContext_CheckExact"], [17, 2, 1, "c.PyContext_Copy", "PyContext_Copy"], [17, 2, 1, "c.PyContext_CopyCurrent", "PyContext_CopyCurrent"], [17, 2, 1, "c.PyContext_Enter", "PyContext_Enter"], [17, 2, 1, "c.PyContext_Exit", "PyContext_Exit"], [17, 2, 1, "c.PyContext_New", "PyContext_New"], [17, 0, 1, "c.PyContext_Type", "PyContext_Type"], [19, 4, 1, "c.PyCoroObject", "PyCoroObject"], [19, 2, 1, "c.PyCoro_CheckExact", "PyCoro_CheckExact"], [19, 2, 1, "c.PyCoro_New", "PyCoro_New"], [19, 0, 1, "c.PyCoro_Type", "PyCoro_Type"], [20, 2, 1, "c.PyDateTime_Check", "PyDateTime_Check"], [20, 2, 1, "c.PyDateTime_CheckExact", "PyDateTime_CheckExact"], [20, 2, 1, "c.PyDateTime_DATE_GET_FOLD", "PyDateTime_DATE_GET_FOLD"], [20, 2, 1, "c.PyDateTime_DATE_GET_HOUR", "PyDateTime_DATE_GET_HOUR"], [20, 2, 1, "c.PyDateTime_DATE_GET_MICROSECOND", "PyDateTime_DATE_GET_MICROSECOND"], [20, 2, 1, "c.PyDateTime_DATE_GET_MINUTE", "PyDateTime_DATE_GET_MINUTE"], [20, 2, 1, "c.PyDateTime_DATE_GET_SECOND", "PyDateTime_DATE_GET_SECOND"], [20, 2, 1, "c.PyDateTime_DATE_GET_TZINFO", "PyDateTime_DATE_GET_TZINFO"], [20, 2, 1, "c.PyDateTime_DELTA_GET_DAYS", "PyDateTime_DELTA_GET_DAYS"], [20, 2, 1, "c.PyDateTime_DELTA_GET_MICROSECONDS", "PyDateTime_DELTA_GET_MICROSECONDS"], [20, 2, 1, "c.PyDateTime_DELTA_GET_SECONDS", "PyDateTime_DELTA_GET_SECONDS"], [20, 4, 1, "c.PyDateTime_Date", "PyDateTime_Date"], [20, 4, 1, "c.PyDateTime_DateTime", "PyDateTime_DateTime"], [20, 0, 1, "c.PyDateTime_DateTimeType", "PyDateTime_DateTimeType"], [20, 0, 1, "c.PyDateTime_DateType", "PyDateTime_DateType"], [20, 4, 1, "c.PyDateTime_Delta", "PyDateTime_Delta"], [20, 0, 1, "c.PyDateTime_DeltaType", "PyDateTime_DeltaType"], [20, 2, 1, "c.PyDateTime_FromDateAndTime", "PyDateTime_FromDateAndTime"], [20, 2, 1, "c.PyDateTime_FromDateAndTimeAndFold", "PyDateTime_FromDateAndTimeAndFold"], [20, 2, 1, "c.PyDateTime_FromTimestamp", "PyDateTime_FromTimestamp"], [20, 2, 1, "c.PyDateTime_GET_DAY", "PyDateTime_GET_DAY"], [20, 2, 1, "c.PyDateTime_GET_MONTH", "PyDateTime_GET_MONTH"], [20, 2, 1, "c.PyDateTime_GET_YEAR", "PyDateTime_GET_YEAR"], [20, 2, 1, "c.PyDateTime_TIME_GET_FOLD", "PyDateTime_TIME_GET_FOLD"], [20, 2, 1, "c.PyDateTime_TIME_GET_HOUR", "PyDateTime_TIME_GET_HOUR"], [20, 2, 1, "c.PyDateTime_TIME_GET_MICROSECOND", "PyDateTime_TIME_GET_MICROSECOND"], [20, 2, 1, "c.PyDateTime_TIME_GET_MINUTE", "PyDateTime_TIME_GET_MINUTE"], [20, 2, 1, "c.PyDateTime_TIME_GET_SECOND", "PyDateTime_TIME_GET_SECOND"], [20, 2, 1, "c.PyDateTime_TIME_GET_TZINFO", "PyDateTime_TIME_GET_TZINFO"], [20, 0, 1, "c.PyDateTime_TZInfoType", "PyDateTime_TZInfoType"], [20, 4, 1, "c.PyDateTime_Time", "PyDateTime_Time"], [20, 0, 1, "c.PyDateTime_TimeType", "PyDateTime_TimeType"], [20, 0, 1, "c.PyDateTime_TimeZone_UTC", "PyDateTime_TimeZone_UTC"], [20, 2, 1, "c.PyDate_Check", "PyDate_Check"], [20, 2, 1, "c.PyDate_CheckExact", "PyDate_CheckExact"], [20, 2, 1, "c.PyDate_FromDate", "PyDate_FromDate"], [20, 2, 1, "c.PyDate_FromTimestamp", "PyDate_FromTimestamp"], [20, 2, 1, "c.PyDelta_Check", "PyDelta_Check"], [20, 2, 1, "c.PyDelta_CheckExact", "PyDelta_CheckExact"], [20, 2, 1, "c.PyDelta_FromDSU", "PyDelta_FromDSU"], [21, 2, 1, "c.PyDescr_IsData", "PyDescr_IsData"], [21, 2, 1, "c.PyDescr_NewClassMethod", "PyDescr_NewClassMethod"], [21, 2, 1, "c.PyDescr_NewGetSet", "PyDescr_NewGetSet"], [21, 2, 1, "c.PyDescr_NewMember", "PyDescr_NewMember"], [21, 2, 1, "c.PyDescr_NewMethod", "PyDescr_NewMethod"], [21, 2, 1, "c.PyDescr_NewWrapper", "PyDescr_NewWrapper"], [22, 4, 1, "c.PyDictObject", "PyDictObject"], [22, 2, 1, "c.PyDictProxy_New", "PyDictProxy_New"], [22, 2, 1, "c.PyDict_AddWatcher", "PyDict_AddWatcher"], [22, 2, 1, "c.PyDict_Check", "PyDict_Check"], [22, 2, 1, "c.PyDict_CheckExact", "PyDict_CheckExact"], [22, 2, 1, "c.PyDict_Clear", "PyDict_Clear"], [22, 2, 1, "c.PyDict_ClearWatcher", "PyDict_ClearWatcher"], [22, 2, 1, "c.PyDict_Contains", "PyDict_Contains"], [22, 2, 1, "c.PyDict_ContainsString", "PyDict_ContainsString"], [22, 2, 1, "c.PyDict_Copy", "PyDict_Copy"], [22, 2, 1, "c.PyDict_DelItem", "PyDict_DelItem"], [22, 2, 1, "c.PyDict_DelItemString", "PyDict_DelItemString"], [22, 2, 1, "c.PyDict_GetItem", "PyDict_GetItem"], [22, 2, 1, "c.PyDict_GetItemRef", "PyDict_GetItemRef"], [22, 2, 1, "c.PyDict_GetItemString", "PyDict_GetItemString"], [22, 2, 1, "c.PyDict_GetItemStringRef", "PyDict_GetItemStringRef"], [22, 2, 1, "c.PyDict_GetItemWithError", "PyDict_GetItemWithError"], [22, 2, 1, "c.PyDict_Items", "PyDict_Items"], [22, 2, 1, "c.PyDict_Keys", "PyDict_Keys"], [22, 2, 1, "c.PyDict_Merge", "PyDict_Merge"], [22, 2, 1, "c.PyDict_MergeFromSeq2", "PyDict_MergeFromSeq2"], [22, 2, 1, "c.PyDict_New", "PyDict_New"], [22, 2, 1, "c.PyDict_Next", "PyDict_Next"], [22, 2, 1, "c.PyDict_SetDefault", "PyDict_SetDefault"], [22, 2, 1, "c.PyDict_SetItem", "PyDict_SetItem"], [22, 2, 1, "c.PyDict_SetItemString", "PyDict_SetItemString"], [22, 2, 1, "c.PyDict_Size", "PyDict_Size"], [22, 0, 1, "c.PyDict_Type", "PyDict_Type"], [22, 2, 1, "c.PyDict_Unwatch", "PyDict_Unwatch"], [22, 2, 1, "c.PyDict_Update", "PyDict_Update"], [22, 2, 1, "c.PyDict_Values", "PyDict_Values"], [22, 2, 1, "c.PyDict_Watch", "PyDict_Watch"], [22, 4, 1, "c.PyDict_WatchCallback", "PyDict_WatchCallback"], [22, 4, 1, "c.PyDict_WatchEvent", "PyDict_WatchEvent"], [34, 1, 1, "c.PyDoc_STR", "PyDoc_STR"], [34, 1, 1, "c.PyDoc_STRVAR", "PyDoc_STRVAR"], [23, 2, 1, "c.PyErr_BadArgument", "PyErr_BadArgument"], [23, 2, 1, "c.PyErr_BadInternalCall", "PyErr_BadInternalCall"], [23, 2, 1, "c.PyErr_CheckSignals", "PyErr_CheckSignals"], [23, 2, 1, "c.PyErr_Clear", "PyErr_Clear"], [23, 2, 1, "c.PyErr_DisplayException", "PyErr_DisplayException"], [23, 2, 1, "c.PyErr_ExceptionMatches", "PyErr_ExceptionMatches"], [23, 2, 1, "c.PyErr_Fetch", "PyErr_Fetch"], [23, 2, 1, "c.PyErr_Format", "PyErr_Format"], [23, 2, 1, "c.PyErr_FormatV", "PyErr_FormatV"], [23, 2, 1, "c.PyErr_GetExcInfo", "PyErr_GetExcInfo"], [23, 2, 1, "c.PyErr_GetHandledException", "PyErr_GetHandledException"], [23, 2, 1, "c.PyErr_GetRaisedException", "PyErr_GetRaisedException"], [23, 2, 1, "c.PyErr_GivenExceptionMatches", "PyErr_GivenExceptionMatches"], [23, 2, 1, "c.PyErr_NewException", "PyErr_NewException"], [23, 2, 1, "c.PyErr_NewExceptionWithDoc", "PyErr_NewExceptionWithDoc"], [23, 2, 1, "c.PyErr_NoMemory", "PyErr_NoMemory"], [23, 2, 1, "c.PyErr_NormalizeException", "PyErr_NormalizeException"], [23, 2, 1, "c.PyErr_Occurred", "PyErr_Occurred"], [23, 2, 1, "c.PyErr_Print", "PyErr_Print"], [23, 2, 1, "c.PyErr_PrintEx", "PyErr_PrintEx"], [23, 2, 1, "c.PyErr_ResourceWarning", "PyErr_ResourceWarning"], [23, 2, 1, "c.PyErr_Restore", "PyErr_Restore"], [23, 2, 1, "c.PyErr_SetExcFromWindowsErr", "PyErr_SetExcFromWindowsErr"], [23, 2, 1, "c.PyErr_SetExcFromWindowsErrWithFilename", "PyErr_SetExcFromWindowsErrWithFilename"], [23, 2, 1, "c.PyErr_SetExcFromWindowsErrWithFilenameObject", "PyErr_SetExcFromWindowsErrWithFilenameObject"], [23, 2, 1, "c.PyErr_SetExcFromWindowsErrWithFilenameObjects", "PyErr_SetExcFromWindowsErrWithFilenameObjects"], [23, 2, 1, "c.PyErr_SetExcInfo", "PyErr_SetExcInfo"], [23, 2, 1, "c.PyErr_SetFromErrno", "PyErr_SetFromErrno"], [23, 2, 1, "c.PyErr_SetFromErrnoWithFilename", "PyErr_SetFromErrnoWithFilename"], [23, 2, 1, "c.PyErr_SetFromErrnoWithFilenameObject", "PyErr_SetFromErrnoWithFilenameObject"], [23, 2, 1, "c.PyErr_SetFromErrnoWithFilenameObjects", "PyErr_SetFromErrnoWithFilenameObjects"], [23, 2, 1, "c.PyErr_SetFromWindowsErr", "PyErr_SetFromWindowsErr"], [23, 2, 1, "c.PyErr_SetFromWindowsErrWithFilename", "PyErr_SetFromWindowsErrWithFilename"], [23, 2, 1, "c.PyErr_SetHandledException", "PyErr_SetHandledException"], [23, 2, 1, "c.PyErr_SetImportError", "PyErr_SetImportError"], [23, 2, 1, "c.PyErr_SetImportErrorSubclass", "PyErr_SetImportErrorSubclass"], [23, 2, 1, "c.PyErr_SetInterrupt", "PyErr_SetInterrupt"], [23, 2, 1, "c.PyErr_SetInterruptEx", "PyErr_SetInterruptEx"], [23, 2, 1, "c.PyErr_SetNone", "PyErr_SetNone"], [23, 2, 1, "c.PyErr_SetObject", "PyErr_SetObject"], [23, 2, 1, "c.PyErr_SetRaisedException", "PyErr_SetRaisedException"], [23, 2, 1, "c.PyErr_SetString", "PyErr_SetString"], [23, 2, 1, "c.PyErr_SyntaxLocation", "PyErr_SyntaxLocation"], [23, 2, 1, "c.PyErr_SyntaxLocationEx", "PyErr_SyntaxLocationEx"], [23, 2, 1, "c.PyErr_SyntaxLocationObject", "PyErr_SyntaxLocationObject"], [23, 2, 1, "c.PyErr_WarnEx", "PyErr_WarnEx"], [23, 2, 1, "c.PyErr_WarnExplicit", "PyErr_WarnExplicit"], [23, 2, 1, "c.PyErr_WarnExplicitObject", "PyErr_WarnExplicitObject"], [23, 2, 1, "c.PyErr_WarnFormat", "PyErr_WarnFormat"], [23, 2, 1, "c.PyErr_WriteUnraisable", "PyErr_WriteUnraisable"], [32, 2, 1, "c.PyEval_AcquireThread", "PyEval_AcquireThread"], [64, 2, 1, "c.PyEval_EvalCode", "PyEval_EvalCode"], [64, 2, 1, "c.PyEval_EvalCodeEx", "PyEval_EvalCodeEx"], [64, 2, 1, "c.PyEval_EvalFrame", "PyEval_EvalFrame"], [64, 2, 1, "c.PyEval_EvalFrameEx", "PyEval_EvalFrameEx"], [51, 2, 1, "c.PyEval_GetBuiltins", "PyEval_GetBuiltins"], [51, 2, 1, "c.PyEval_GetFrame", "PyEval_GetFrame"], [51, 2, 1, "c.PyEval_GetFuncDesc", "PyEval_GetFuncDesc"], [51, 2, 1, "c.PyEval_GetFuncName", "PyEval_GetFuncName"], [51, 2, 1, "c.PyEval_GetGlobals", "PyEval_GetGlobals"], [51, 2, 1, "c.PyEval_GetLocals", "PyEval_GetLocals"], [64, 2, 1, "c.PyEval_MergeCompilerFlags", "PyEval_MergeCompilerFlags"], [32, 2, 1, "c.PyEval_ReleaseThread", "PyEval_ReleaseThread"], [32, 2, 1, "c.PyEval_RestoreThread", "PyEval_RestoreThread"], [32, 2, 1, "c.PyEval_SaveThread", "PyEval_SaveThread"], [32, 2, 1, "c.PyEval_SetProfile", "PyEval_SetProfile"], [32, 2, 1, "c.PyEval_SetProfileAllThreads", "PyEval_SetProfileAllThreads"], [32, 2, 1, "c.PyEval_SetTrace", "PyEval_SetTrace"], [32, 2, 1, "c.PyEval_SetTraceAllThreads", "PyEval_SetTraceAllThreads"], [23, 2, 1, "c.PyException_GetArgs", "PyException_GetArgs"], [23, 2, 1, "c.PyException_GetCause", "PyException_GetCause"], [23, 2, 1, "c.PyException_GetContext", "PyException_GetContext"], [23, 2, 1, "c.PyException_GetTraceback", "PyException_GetTraceback"], [23, 2, 1, "c.PyException_SetArgs", "PyException_SetArgs"], [23, 2, 1, "c.PyException_SetCause", "PyException_SetCause"], [23, 2, 1, "c.PyException_SetContext", "PyException_SetContext"], [23, 2, 1, "c.PyException_SetTraceback", "PyException_SetTraceback"], [24, 2, 1, "c.PyFile_FromFd", "PyFile_FromFd"], [24, 2, 1, "c.PyFile_GetLine", "PyFile_GetLine"], [24, 2, 1, "c.PyFile_SetOpenCodeHook", "PyFile_SetOpenCodeHook"], [24, 2, 1, "c.PyFile_WriteObject", "PyFile_WriteObject"], [24, 2, 1, "c.PyFile_WriteString", "PyFile_WriteString"], [25, 4, 1, "c.PyFloatObject", "PyFloatObject"], [25, 2, 1, "c.PyFloat_AS_DOUBLE", "PyFloat_AS_DOUBLE"], [25, 2, 1, "c.PyFloat_AsDouble", "PyFloat_AsDouble"], [25, 2, 1, "c.PyFloat_Check", "PyFloat_Check"], [25, 2, 1, "c.PyFloat_CheckExact", "PyFloat_CheckExact"], [25, 2, 1, "c.PyFloat_FromDouble", "PyFloat_FromDouble"], [25, 2, 1, "c.PyFloat_FromString", "PyFloat_FromString"], [25, 2, 1, "c.PyFloat_GetInfo", "PyFloat_GetInfo"], [25, 2, 1, "c.PyFloat_GetMax", "PyFloat_GetMax"], [25, 2, 1, "c.PyFloat_GetMin", "PyFloat_GetMin"], [25, 2, 1, "c.PyFloat_Pack2", "PyFloat_Pack2"], [25, 2, 1, "c.PyFloat_Pack4", "PyFloat_Pack4"], [25, 2, 1, "c.PyFloat_Pack8", "PyFloat_Pack8"], [25, 0, 1, "c.PyFloat_Type", "PyFloat_Type"], [25, 2, 1, "c.PyFloat_Unpack2", "PyFloat_Unpack2"], [25, 2, 1, "c.PyFloat_Unpack4", "PyFloat_Unpack4"], [25, 2, 1, "c.PyFloat_Unpack8", "PyFloat_Unpack8"], [26, 4, 1, "c.PyFrameObject", "PyFrameObject"], [26, 2, 1, "c.PyFrame_Check", "PyFrame_Check"], [26, 2, 1, "c.PyFrame_GetBack", "PyFrame_GetBack"], [26, 2, 1, "c.PyFrame_GetBuiltins", "PyFrame_GetBuiltins"], [26, 2, 1, "c.PyFrame_GetCode", "PyFrame_GetCode"], [26, 2, 1, "c.PyFrame_GetGenerator", "PyFrame_GetGenerator"], [26, 2, 1, "c.PyFrame_GetGlobals", "PyFrame_GetGlobals"], [26, 2, 1, "c.PyFrame_GetLasti", "PyFrame_GetLasti"], [26, 2, 1, "c.PyFrame_GetLineNumber", "PyFrame_GetLineNumber"], [26, 2, 1, "c.PyFrame_GetLocals", "PyFrame_GetLocals"], [26, 2, 1, "c.PyFrame_GetVar", "PyFrame_GetVar"], [26, 2, 1, "c.PyFrame_GetVarString", "PyFrame_GetVarString"], [26, 0, 1, "c.PyFrame_Type", "PyFrame_Type"], [53, 2, 1, "c.PyFrozenSet_Check", "PyFrozenSet_Check"], [53, 2, 1, "c.PyFrozenSet_CheckExact", "PyFrozenSet_CheckExact"], [53, 2, 1, "c.PyFrozenSet_New", "PyFrozenSet_New"], [53, 0, 1, "c.PyFrozenSet_Type", "PyFrozenSet_Type"], [27, 4, 1, "c.PyFunctionObject", "PyFunctionObject"], [27, 2, 1, "c.PyFunction_AddWatcher", "PyFunction_AddWatcher"], [27, 2, 1, "c.PyFunction_Check", "PyFunction_Check"], [27, 2, 1, "c.PyFunction_ClearWatcher", "PyFunction_ClearWatcher"], [27, 2, 1, "c.PyFunction_GetAnnotations", "PyFunction_GetAnnotations"], [27, 2, 1, "c.PyFunction_GetClosure", "PyFunction_GetClosure"], [27, 2, 1, "c.PyFunction_GetCode", "PyFunction_GetCode"], [27, 2, 1, "c.PyFunction_GetDefaults", "PyFunction_GetDefaults"], [27, 2, 1, "c.PyFunction_GetGlobals", "PyFunction_GetGlobals"], [27, 2, 1, "c.PyFunction_GetModule", "PyFunction_GetModule"], [27, 2, 1, "c.PyFunction_New", "PyFunction_New"], [27, 2, 1, "c.PyFunction_NewWithQualName", "PyFunction_NewWithQualName"], [27, 2, 1, "c.PyFunction_SetAnnotations", "PyFunction_SetAnnotations"], [27, 2, 1, "c.PyFunction_SetClosure", "PyFunction_SetClosure"], [27, 2, 1, "c.PyFunction_SetDefaults", "PyFunction_SetDefaults"], [27, 2, 1, "c.PyFunction_SetVectorcall", "PyFunction_SetVectorcall"], [27, 0, 1, "c.PyFunction_Type", "PyFunction_Type"], [27, 4, 1, "c.PyFunction_WatchCallback", "PyFunction_WatchCallback"], [27, 4, 1, "c.PyFunction_WatchEvent", "PyFunction_WatchEvent"], [28, 2, 1, "c.PyGC_Collect", "PyGC_Collect"], [28, 2, 1, "c.PyGC_Disable", "PyGC_Disable"], [28, 2, 1, "c.PyGC_Enable", "PyGC_Enable"], [28, 2, 1, "c.PyGC_IsEnabled", "PyGC_IsEnabled"], [32, 2, 1, "c.PyGILState_Check", "PyGILState_Check"], [32, 2, 1, "c.PyGILState_Ensure", "PyGILState_Ensure"], [32, 2, 1, "c.PyGILState_GetThisThreadState", "PyGILState_GetThisThreadState"], [32, 2, 1, "c.PyGILState_Release", "PyGILState_Release"], [29, 4, 1, "c.PyGenObject", "PyGenObject"], [29, 2, 1, "c.PyGen_Check", "PyGen_Check"], [29, 2, 1, "c.PyGen_CheckExact", "PyGen_CheckExact"], [29, 2, 1, "c.PyGen_New", "PyGen_New"], [29, 2, 1, "c.PyGen_NewWithQualName", "PyGen_NewWithQualName"], [29, 0, 1, "c.PyGen_Type", "PyGen_Type"], [56, 4, 1, "c.PyGetSetDef", "PyGetSetDef"], [30, 2, 1, "c.PyImport_AddModule", "PyImport_AddModule"], [30, 2, 1, "c.PyImport_AddModuleObject", "PyImport_AddModuleObject"], [30, 2, 1, "c.PyImport_AddModuleRef", "PyImport_AddModuleRef"], [30, 2, 1, "c.PyImport_AppendInittab", "PyImport_AppendInittab"], [30, 2, 1, "c.PyImport_ExecCodeModule", "PyImport_ExecCodeModule"], [30, 2, 1, "c.PyImport_ExecCodeModuleEx", "PyImport_ExecCodeModuleEx"], [30, 2, 1, "c.PyImport_ExecCodeModuleObject", "PyImport_ExecCodeModuleObject"], [30, 2, 1, "c.PyImport_ExecCodeModuleWithPathnames", "PyImport_ExecCodeModuleWithPathnames"], [30, 2, 1, "c.PyImport_ExtendInittab", "PyImport_ExtendInittab"], [30, 0, 1, "c.PyImport_FrozenModules", "PyImport_FrozenModules"], [30, 2, 1, "c.PyImport_GetImporter", "PyImport_GetImporter"], [30, 2, 1, "c.PyImport_GetMagicNumber", "PyImport_GetMagicNumber"], [30, 2, 1, "c.PyImport_GetMagicTag", "PyImport_GetMagicTag"], [30, 2, 1, "c.PyImport_GetModule", "PyImport_GetModule"], [30, 2, 1, "c.PyImport_GetModuleDict", "PyImport_GetModuleDict"], [30, 2, 1, "c.PyImport_Import", "PyImport_Import"], [30, 2, 1, "c.PyImport_ImportFrozenModule", "PyImport_ImportFrozenModule"], [30, 2, 1, "c.PyImport_ImportFrozenModuleObject", "PyImport_ImportFrozenModuleObject"], [30, 2, 1, "c.PyImport_ImportModule", "PyImport_ImportModule"], [30, 2, 1, "c.PyImport_ImportModuleEx", "PyImport_ImportModuleEx"], [30, 2, 1, "c.PyImport_ImportModuleLevel", "PyImport_ImportModuleLevel"], [30, 2, 1, "c.PyImport_ImportModuleLevelObject", "PyImport_ImportModuleLevelObject"], [30, 2, 1, "c.PyImport_ImportModuleNoBlock", "PyImport_ImportModuleNoBlock"], [30, 2, 1, "c.PyImport_ReloadModule", "PyImport_ReloadModule"], [46, 2, 1, "c.PyIndex_Check", "PyIndex_Check"], [69, 2, 1, "c.PyInit_modulename", "PyInit_modulename"], [43, 2, 1, "c.PyInstanceMethod_Check", "PyInstanceMethod_Check"], [43, 2, 1, "c.PyInstanceMethod_Function", "PyInstanceMethod_Function"], [43, 2, 1, "c.PyInstanceMethod_GET_FUNCTION", "PyInstanceMethod_GET_FUNCTION"], [43, 2, 1, "c.PyInstanceMethod_New", "PyInstanceMethod_New"], [43, 0, 1, "c.PyInstanceMethod_Type", "PyInstanceMethod_Type"], [32, 4, 1, "c.PyInterpreterConfig", "PyInterpreterConfig"], [32, 1, 1, "c.PyInterpreterConfig_DEFAULT_GIL", "PyInterpreterConfig_DEFAULT_GIL"], [32, 1, 1, "c.PyInterpreterConfig_OWN_GIL", "PyInterpreterConfig_OWN_GIL"], [32, 1, 1, "c.PyInterpreterConfig_SHARED_GIL", "PyInterpreterConfig_SHARED_GIL"], [32, 4, 1, "c.PyInterpreterState", "PyInterpreterState"], [32, 2, 1, "c.PyInterpreterState_Clear", "PyInterpreterState_Clear"], [32, 2, 1, "c.PyInterpreterState_Delete", "PyInterpreterState_Delete"], [32, 2, 1, "c.PyInterpreterState_Get", "PyInterpreterState_Get"], [32, 2, 1, "c.PyInterpreterState_GetDict", "PyInterpreterState_GetDict"], [32, 2, 1, "c.PyInterpreterState_GetID", "PyInterpreterState_GetID"], [32, 2, 1, "c.PyInterpreterState_Head", "PyInterpreterState_Head"], [32, 2, 1, "c.PyInterpreterState_Main", "PyInterpreterState_Main"], [32, 2, 1, "c.PyInterpreterState_New", "PyInterpreterState_New"], [32, 2, 1, "c.PyInterpreterState_Next", "PyInterpreterState_Next"], [32, 2, 1, "c.PyInterpreterState_ThreadHead", "PyInterpreterState_ThreadHead"], [35, 2, 1, "c.PyIter_Check", "PyIter_Check"], [35, 2, 1, "c.PyIter_Next", "PyIter_Next"], [35, 2, 1, "c.PyIter_Send", "PyIter_Send"], [37, 4, 1, "c.PyListObject", "PyListObject"], [37, 2, 1, "c.PyList_Append", "PyList_Append"], [37, 2, 1, "c.PyList_AsTuple", "PyList_AsTuple"], [37, 2, 1, "c.PyList_Check", "PyList_Check"], [37, 2, 1, "c.PyList_CheckExact", "PyList_CheckExact"], [37, 2, 1, "c.PyList_GET_ITEM", "PyList_GET_ITEM"], [37, 2, 1, "c.PyList_GET_SIZE", "PyList_GET_SIZE"], [37, 2, 1, "c.PyList_GetItem", "PyList_GetItem"], [37, 2, 1, "c.PyList_GetSlice", "PyList_GetSlice"], [37, 2, 1, "c.PyList_Insert", "PyList_Insert"], [37, 2, 1, "c.PyList_New", "PyList_New"], [37, 2, 1, "c.PyList_Reverse", "PyList_Reverse"], [37, 2, 1, "c.PyList_SET_ITEM", "PyList_SET_ITEM"], [37, 2, 1, "c.PyList_SetItem", "PyList_SetItem"], [37, 2, 1, "c.PyList_SetSlice", "PyList_SetSlice"], [37, 2, 1, "c.PyList_Size", "PyList_Size"], [37, 2, 1, "c.PyList_Sort", "PyList_Sort"], [37, 0, 1, "c.PyList_Type", "PyList_Type"], [38, 4, 1, "c.PyLongObject", "PyLongObject"], [38, 2, 1, "c.PyLong_AsDouble", "PyLong_AsDouble"], [38, 2, 1, "c.PyLong_AsInt", "PyLong_AsInt"], [38, 2, 1, "c.PyLong_AsLong", "PyLong_AsLong"], [38, 2, 1, "c.PyLong_AsLongAndOverflow", "PyLong_AsLongAndOverflow"], [38, 2, 1, "c.PyLong_AsLongLong", "PyLong_AsLongLong"], [38, 2, 1, "c.PyLong_AsLongLongAndOverflow", "PyLong_AsLongLongAndOverflow"], [38, 2, 1, "c.PyLong_AsSize_t", "PyLong_AsSize_t"], [38, 2, 1, "c.PyLong_AsSsize_t", "PyLong_AsSsize_t"], [38, 2, 1, "c.PyLong_AsUnsignedLong", "PyLong_AsUnsignedLong"], [38, 2, 1, "c.PyLong_AsUnsignedLongLong", "PyLong_AsUnsignedLongLong"], [38, 2, 1, "c.PyLong_AsUnsignedLongLongMask", "PyLong_AsUnsignedLongLongMask"], [38, 2, 1, "c.PyLong_AsUnsignedLongMask", "PyLong_AsUnsignedLongMask"], [38, 2, 1, "c.PyLong_AsVoidPtr", "PyLong_AsVoidPtr"], [38, 2, 1, "c.PyLong_Check", "PyLong_Check"], [38, 2, 1, "c.PyLong_CheckExact", "PyLong_CheckExact"], [38, 2, 1, "c.PyLong_FromDouble", "PyLong_FromDouble"], [38, 2, 1, "c.PyLong_FromLong", "PyLong_FromLong"], [38, 2, 1, "c.PyLong_FromLongLong", "PyLong_FromLongLong"], [38, 2, 1, "c.PyLong_FromSize_t", "PyLong_FromSize_t"], [38, 2, 1, "c.PyLong_FromSsize_t", "PyLong_FromSsize_t"], [38, 2, 1, "c.PyLong_FromString", "PyLong_FromString"], [38, 2, 1, "c.PyLong_FromUnicodeObject", "PyLong_FromUnicodeObject"], [38, 2, 1, "c.PyLong_FromUnsignedLong", "PyLong_FromUnsignedLong"], [38, 2, 1, "c.PyLong_FromUnsignedLongLong", "PyLong_FromUnsignedLongLong"], [38, 2, 1, "c.PyLong_FromVoidPtr", "PyLong_FromVoidPtr"], [38, 0, 1, "c.PyLong_Type", "PyLong_Type"], [34, 1, 1, "c.PyMODINIT_FUNC", "PyMODINIT_FUNC"], [61, 4, 1, "c.PyMappingMethods", "PyMappingMethods"], [39, 2, 1, "c.PyMapping_Check", "PyMapping_Check"], [39, 2, 1, "c.PyMapping_DelItem", "PyMapping_DelItem"], [39, 2, 1, "c.PyMapping_DelItemString", "PyMapping_DelItemString"], [39, 2, 1, "c.PyMapping_GetItemString", "PyMapping_GetItemString"], [39, 2, 1, "c.PyMapping_GetOptionalItem", "PyMapping_GetOptionalItem"], [39, 2, 1, "c.PyMapping_GetOptionalItemString", "PyMapping_GetOptionalItemString"], [39, 2, 1, "c.PyMapping_HasKey", "PyMapping_HasKey"], [39, 2, 1, "c.PyMapping_HasKeyString", "PyMapping_HasKeyString"], [39, 2, 1, "c.PyMapping_HasKeyStringWithError", "PyMapping_HasKeyStringWithError"], [39, 2, 1, "c.PyMapping_HasKeyWithError", "PyMapping_HasKeyWithError"], [39, 2, 1, "c.PyMapping_Items", "PyMapping_Items"], [39, 2, 1, "c.PyMapping_Keys", "PyMapping_Keys"], [39, 2, 1, "c.PyMapping_Length", "PyMapping_Length"], [39, 2, 1, "c.PyMapping_SetItemString", "PyMapping_SetItemString"], [39, 2, 1, "c.PyMapping_Size", "PyMapping_Size"], [39, 2, 1, "c.PyMapping_Values", "PyMapping_Values"], [40, 2, 1, "c.PyMarshal_ReadLastObjectFromFile", "PyMarshal_ReadLastObjectFromFile"], [40, 2, 1, "c.PyMarshal_ReadLongFromFile", "PyMarshal_ReadLongFromFile"], [40, 2, 1, "c.PyMarshal_ReadObjectFromFile", "PyMarshal_ReadObjectFromFile"], [40, 2, 1, "c.PyMarshal_ReadObjectFromString", "PyMarshal_ReadObjectFromString"], [40, 2, 1, "c.PyMarshal_ReadShortFromFile", "PyMarshal_ReadShortFromFile"], [40, 2, 1, "c.PyMarshal_WriteLongToFile", "PyMarshal_WriteLongToFile"], [40, 2, 1, "c.PyMarshal_WriteObjectToFile", "PyMarshal_WriteObjectToFile"], [40, 2, 1, "c.PyMarshal_WriteObjectToString", "PyMarshal_WriteObjectToString"], [41, 4, 1, "c.PyMemAllocatorDomain", "PyMemAllocatorDomain"], [41, 4, 1, "c.PyMemAllocatorEx", "PyMemAllocatorEx"], [41, 2, 1, "c.PyMem_Calloc", "PyMem_Calloc"], [41, 2, 1, "c.PyMem_Del", "PyMem_Del"], [41, 2, 1, "c.PyMem_Free", "PyMem_Free"], [41, 2, 1, "c.PyMem_GetAllocator", "PyMem_GetAllocator"], [41, 2, 1, "c.PyMem_Malloc", "PyMem_Malloc"], [41, 1, 1, "c.PyMem_New", "PyMem_New"], [41, 2, 1, "c.PyMem_RawCalloc", "PyMem_RawCalloc"], [41, 2, 1, "c.PyMem_RawFree", "PyMem_RawFree"], [41, 2, 1, "c.PyMem_RawMalloc", "PyMem_RawMalloc"], [41, 2, 1, "c.PyMem_RawRealloc", "PyMem_RawRealloc"], [41, 2, 1, "c.PyMem_Realloc", "PyMem_Realloc"], [41, 1, 1, "c.PyMem_Resize", "PyMem_Resize"], [41, 2, 1, "c.PyMem_SetAllocator", "PyMem_SetAllocator"], [41, 2, 1, "c.PyMem_SetupDebugHooks", "PyMem_SetupDebugHooks"], [56, 4, 1, "c.PyMemberDef", "PyMemberDef"], [56, 2, 1, "c.PyMember_GetOne", "PyMember_GetOne"], [56, 2, 1, "c.PyMember_SetOne", "PyMember_SetOne"], [42, 2, 1, "c.PyMemoryView_Check", "PyMemoryView_Check"], [42, 2, 1, "c.PyMemoryView_FromBuffer", "PyMemoryView_FromBuffer"], [42, 2, 1, "c.PyMemoryView_FromMemory", "PyMemoryView_FromMemory"], [42, 2, 1, "c.PyMemoryView_FromObject", "PyMemoryView_FromObject"], [42, 2, 1, "c.PyMemoryView_GET_BASE", "PyMemoryView_GET_BASE"], [42, 2, 1, "c.PyMemoryView_GET_BUFFER", "PyMemoryView_GET_BUFFER"], [42, 2, 1, "c.PyMemoryView_GetContiguous", "PyMemoryView_GetContiguous"], [56, 4, 1, "c.PyMethodDef", "PyMethodDef"], [43, 2, 1, "c.PyMethod_Check", "PyMethod_Check"], [43, 2, 1, "c.PyMethod_Function", "PyMethod_Function"], [43, 2, 1, "c.PyMethod_GET_FUNCTION", "PyMethod_GET_FUNCTION"], [43, 2, 1, "c.PyMethod_GET_SELF", "PyMethod_GET_SELF"], [43, 2, 1, "c.PyMethod_New", "PyMethod_New"], [43, 2, 1, "c.PyMethod_Self", "PyMethod_Self"], [43, 0, 1, "c.PyMethod_Type", "PyMethod_Type"], [44, 4, 1, "c.PyModuleDef", "PyModuleDef"], [44, 2, 1, "c.PyModuleDef_Init", "PyModuleDef_Init"], [44, 4, 1, "c.PyModuleDef_Slot", "PyModuleDef_Slot"], [44, 2, 1, "c.PyModule_Add", "PyModule_Add"], [44, 2, 1, "c.PyModule_AddFunctions", "PyModule_AddFunctions"], [44, 2, 1, "c.PyModule_AddIntConstant", "PyModule_AddIntConstant"], [44, 1, 1, "c.PyModule_AddIntMacro", "PyModule_AddIntMacro"], [44, 2, 1, "c.PyModule_AddObject", "PyModule_AddObject"], [44, 2, 1, "c.PyModule_AddObjectRef", "PyModule_AddObjectRef"], [44, 2, 1, "c.PyModule_AddStringConstant", "PyModule_AddStringConstant"], [44, 1, 1, "c.PyModule_AddStringMacro", "PyModule_AddStringMacro"], [44, 2, 1, "c.PyModule_AddType", "PyModule_AddType"], [44, 2, 1, "c.PyModule_Check", "PyModule_Check"], [44, 2, 1, "c.PyModule_CheckExact", "PyModule_CheckExact"], [44, 2, 1, "c.PyModule_Create", "PyModule_Create"], [44, 2, 1, "c.PyModule_Create2", "PyModule_Create2"], [44, 2, 1, "c.PyModule_ExecDef", "PyModule_ExecDef"], [44, 2, 1, "c.PyModule_FromDefAndSpec", "PyModule_FromDefAndSpec"], [44, 2, 1, "c.PyModule_FromDefAndSpec2", "PyModule_FromDefAndSpec2"], [44, 2, 1, "c.PyModule_GetDef", "PyModule_GetDef"], [44, 2, 1, "c.PyModule_GetDict", "PyModule_GetDict"], [44, 2, 1, "c.PyModule_GetFilename", "PyModule_GetFilename"], [44, 2, 1, "c.PyModule_GetFilenameObject", "PyModule_GetFilenameObject"], [44, 2, 1, "c.PyModule_GetName", "PyModule_GetName"], [44, 2, 1, "c.PyModule_GetNameObject", "PyModule_GetNameObject"], [44, 2, 1, "c.PyModule_GetState", "PyModule_GetState"], [44, 2, 1, "c.PyModule_New", "PyModule_New"], [44, 2, 1, "c.PyModule_NewObject", "PyModule_NewObject"], [44, 2, 1, "c.PyModule_SetDocString", "PyModule_SetDocString"], [44, 0, 1, "c.PyModule_Type", "PyModule_Type"], [61, 4, 1, "c.PyNumberMethods", "PyNumberMethods"], [46, 2, 1, "c.PyNumber_Absolute", "PyNumber_Absolute"], [46, 2, 1, "c.PyNumber_Add", "PyNumber_Add"], [46, 2, 1, "c.PyNumber_And", "PyNumber_And"], [46, 2, 1, "c.PyNumber_AsSsize_t", "PyNumber_AsSsize_t"], [46, 2, 1, "c.PyNumber_Check", "PyNumber_Check"], [46, 2, 1, "c.PyNumber_Divmod", "PyNumber_Divmod"], [46, 2, 1, "c.PyNumber_Float", "PyNumber_Float"], [46, 2, 1, "c.PyNumber_FloorDivide", "PyNumber_FloorDivide"], [46, 2, 1, "c.PyNumber_InPlaceAdd", "PyNumber_InPlaceAdd"], [46, 2, 1, "c.PyNumber_InPlaceAnd", "PyNumber_InPlaceAnd"], [46, 2, 1, "c.PyNumber_InPlaceFloorDivide", "PyNumber_InPlaceFloorDivide"], [46, 2, 1, "c.PyNumber_InPlaceLshift", "PyNumber_InPlaceLshift"], [46, 2, 1, "c.PyNumber_InPlaceMatrixMultiply", "PyNumber_InPlaceMatrixMultiply"], [46, 2, 1, "c.PyNumber_InPlaceMultiply", "PyNumber_InPlaceMultiply"], [46, 2, 1, "c.PyNumber_InPlaceOr", "PyNumber_InPlaceOr"], [46, 2, 1, "c.PyNumber_InPlacePower", "PyNumber_InPlacePower"], [46, 2, 1, "c.PyNumber_InPlaceRemainder", "PyNumber_InPlaceRemainder"], [46, 2, 1, "c.PyNumber_InPlaceRshift", "PyNumber_InPlaceRshift"], [46, 2, 1, "c.PyNumber_InPlaceSubtract", "PyNumber_InPlaceSubtract"], [46, 2, 1, "c.PyNumber_InPlaceTrueDivide", "PyNumber_InPlaceTrueDivide"], [46, 2, 1, "c.PyNumber_InPlaceXor", "PyNumber_InPlaceXor"], [46, 2, 1, "c.PyNumber_Index", "PyNumber_Index"], [46, 2, 1, "c.PyNumber_Invert", "PyNumber_Invert"], [46, 2, 1, "c.PyNumber_Long", "PyNumber_Long"], [46, 2, 1, "c.PyNumber_Lshift", "PyNumber_Lshift"], [46, 2, 1, "c.PyNumber_MatrixMultiply", "PyNumber_MatrixMultiply"], [46, 2, 1, "c.PyNumber_Multiply", "PyNumber_Multiply"], [46, 2, 1, "c.PyNumber_Negative", "PyNumber_Negative"], [46, 2, 1, "c.PyNumber_Or", "PyNumber_Or"], [46, 2, 1, "c.PyNumber_Positive", "PyNumber_Positive"], [46, 2, 1, "c.PyNumber_Power", "PyNumber_Power"], [46, 2, 1, "c.PyNumber_Remainder", "PyNumber_Remainder"], [46, 2, 1, "c.PyNumber_Rshift", "PyNumber_Rshift"], [46, 2, 1, "c.PyNumber_Subtract", "PyNumber_Subtract"], [46, 2, 1, "c.PyNumber_ToBase", "PyNumber_ToBase"], [46, 2, 1, "c.PyNumber_TrueDivide", "PyNumber_TrueDivide"], [46, 2, 1, "c.PyNumber_Xor", "PyNumber_Xor"], [57, 2, 1, "c.PyOS_AfterFork", "PyOS_AfterFork"], [57, 2, 1, "c.PyOS_AfterFork_Child", "PyOS_AfterFork_Child"], [57, 2, 1, "c.PyOS_AfterFork_Parent", "PyOS_AfterFork_Parent"], [57, 2, 1, "c.PyOS_BeforeFork", "PyOS_BeforeFork"], [57, 2, 1, "c.PyOS_CheckStack", "PyOS_CheckStack"], [57, 2, 1, "c.PyOS_FSPath", "PyOS_FSPath"], [64, 0, 1, "c.PyOS_InputHook", "PyOS_InputHook"], [64, 0, 1, "c.PyOS_ReadlineFunctionPointer", "PyOS_ReadlineFunctionPointer"], [18, 2, 1, "c.PyOS_double_to_string", "PyOS_double_to_string"], [57, 2, 1, "c.PyOS_getsig", "PyOS_getsig"], [57, 2, 1, "c.PyOS_setsig", "PyOS_setsig"], [18, 2, 1, "c.PyOS_snprintf", "PyOS_snprintf"], [18, 2, 1, "c.PyOS_stricmp", "PyOS_stricmp"], [18, 2, 1, "c.PyOS_string_to_double", "PyOS_string_to_double"], [18, 2, 1, "c.PyOS_strnicmp", "PyOS_strnicmp"], [18, 2, 1, "c.PyOS_vsnprintf", "PyOS_vsnprintf"], [56, 4, 1, "c.PyObject", "PyObject"], [41, 4, 1, "c.PyObjectArenaAllocator", "PyObjectArenaAllocator"], [47, 2, 1, "c.PyObject_ASCII", "PyObject_ASCII"], [24, 2, 1, "c.PyObject_AsFileDescriptor", "PyObject_AsFileDescriptor"], [47, 2, 1, "c.PyObject_Bytes", "PyObject_Bytes"], [10, 2, 1, "c.PyObject_Call", "PyObject_Call"], [10, 2, 1, "c.PyObject_CallFunction", "PyObject_CallFunction"], [10, 2, 1, "c.PyObject_CallFunctionObjArgs", "PyObject_CallFunctionObjArgs"], [10, 2, 1, "c.PyObject_CallMethod", "PyObject_CallMethod"], [10, 2, 1, "c.PyObject_CallMethodNoArgs", "PyObject_CallMethodNoArgs"], [10, 2, 1, "c.PyObject_CallMethodObjArgs", "PyObject_CallMethodObjArgs"], [10, 2, 1, "c.PyObject_CallMethodOneArg", "PyObject_CallMethodOneArg"], [10, 2, 1, "c.PyObject_CallNoArgs", "PyObject_CallNoArgs"], [10, 2, 1, "c.PyObject_CallObject", "PyObject_CallObject"], [10, 2, 1, "c.PyObject_CallOneArg", "PyObject_CallOneArg"], [41, 2, 1, "c.PyObject_Calloc", "PyObject_Calloc"], [7, 2, 1, "c.PyObject_CheckBuffer", "PyObject_CheckBuffer"], [65, 2, 1, "c.PyObject_ClearWeakRefs", "PyObject_ClearWeakRefs"], [7, 2, 1, "c.PyObject_CopyData", "PyObject_CopyData"], [3, 2, 1, "c.PyObject_Del", "PyObject_Del"], [47, 2, 1, "c.PyObject_DelAttr", "PyObject_DelAttr"], [47, 2, 1, "c.PyObject_DelAttrString", "PyObject_DelAttrString"], [47, 2, 1, "c.PyObject_DelItem", "PyObject_DelItem"], [47, 2, 1, "c.PyObject_Dir", "PyObject_Dir"], [47, 2, 1, "c.PyObject_Format", "PyObject_Format"], [41, 2, 1, "c.PyObject_Free", "PyObject_Free"], [28, 2, 1, "c.PyObject_GC_Del", "PyObject_GC_Del"], [28, 2, 1, "c.PyObject_GC_IsFinalized", "PyObject_GC_IsFinalized"], [28, 2, 1, "c.PyObject_GC_IsTracked", "PyObject_GC_IsTracked"], [28, 1, 1, "c.PyObject_GC_New", "PyObject_GC_New"], [28, 1, 1, "c.PyObject_GC_NewVar", "PyObject_GC_NewVar"], [28, 2, 1, "c.PyObject_GC_Resize", "PyObject_GC_Resize"], [28, 2, 1, "c.PyObject_GC_Track", "PyObject_GC_Track"], [28, 2, 1, "c.PyObject_GC_UnTrack", "PyObject_GC_UnTrack"], [47, 2, 1, "c.PyObject_GenericGetAttr", "PyObject_GenericGetAttr"], [47, 2, 1, "c.PyObject_GenericGetDict", "PyObject_GenericGetDict"], [47, 2, 1, "c.PyObject_GenericSetAttr", "PyObject_GenericSetAttr"], [47, 2, 1, "c.PyObject_GenericSetDict", "PyObject_GenericSetDict"], [47, 2, 1, "c.PyObject_GetAIter", "PyObject_GetAIter"], [41, 2, 1, "c.PyObject_GetArenaAllocator", "PyObject_GetArenaAllocator"], [47, 2, 1, "c.PyObject_GetAttr", "PyObject_GetAttr"], [47, 2, 1, "c.PyObject_GetAttrString", "PyObject_GetAttrString"], [7, 2, 1, "c.PyObject_GetBuffer", "PyObject_GetBuffer"], [47, 2, 1, "c.PyObject_GetItem", "PyObject_GetItem"], [47, 2, 1, "c.PyObject_GetItemData", "PyObject_GetItemData"], [47, 2, 1, "c.PyObject_GetIter", "PyObject_GetIter"], [47, 2, 1, "c.PyObject_GetOptionalAttr", "PyObject_GetOptionalAttr"], [47, 2, 1, "c.PyObject_GetOptionalAttrString", "PyObject_GetOptionalAttrString"], [47, 2, 1, "c.PyObject_GetTypeData", "PyObject_GetTypeData"], [56, 1, 1, "c.PyObject_HEAD", "PyObject_HEAD"], [56, 1, 1, "c.PyObject_HEAD_INIT", "PyObject_HEAD_INIT"], [47, 2, 1, "c.PyObject_HasAttr", "PyObject_HasAttr"], [47, 2, 1, "c.PyObject_HasAttrString", "PyObject_HasAttrString"], [47, 2, 1, "c.PyObject_HasAttrStringWithError", "PyObject_HasAttrStringWithError"], [47, 2, 1, "c.PyObject_HasAttrWithError", "PyObject_HasAttrWithError"], [47, 2, 1, "c.PyObject_Hash", "PyObject_Hash"], [47, 2, 1, "c.PyObject_HashNotImplemented", "PyObject_HashNotImplemented"], [28, 2, 1, "c.PyObject_IS_GC", "PyObject_IS_GC"], [3, 2, 1, "c.PyObject_Init", "PyObject_Init"], [3, 2, 1, "c.PyObject_InitVar", "PyObject_InitVar"], [47, 2, 1, "c.PyObject_IsInstance", "PyObject_IsInstance"], [47, 2, 1, "c.PyObject_IsSubclass", "PyObject_IsSubclass"], [47, 2, 1, "c.PyObject_IsTrue", "PyObject_IsTrue"], [47, 2, 1, "c.PyObject_Length", "PyObject_Length"], [47, 2, 1, "c.PyObject_LengthHint", "PyObject_LengthHint"], [41, 2, 1, "c.PyObject_Malloc", "PyObject_Malloc"], [3, 1, 1, "c.PyObject_New", "PyObject_New"], [3, 1, 1, "c.PyObject_NewVar", "PyObject_NewVar"], [47, 2, 1, "c.PyObject_Not", "PyObject_Not"], [47, 2, 1, "c.PyObject_Print", "PyObject_Print"], [41, 2, 1, "c.PyObject_Realloc", "PyObject_Realloc"], [47, 2, 1, "c.PyObject_Repr", "PyObject_Repr"], [47, 2, 1, "c.PyObject_RichCompare", "PyObject_RichCompare"], [47, 2, 1, "c.PyObject_RichCompareBool", "PyObject_RichCompareBool"], [41, 2, 1, "c.PyObject_SetArenaAllocator", "PyObject_SetArenaAllocator"], [47, 2, 1, "c.PyObject_SetAttr", "PyObject_SetAttr"], [47, 2, 1, "c.PyObject_SetAttrString", "PyObject_SetAttrString"], [47, 2, 1, "c.PyObject_SetItem", "PyObject_SetItem"], [47, 2, 1, "c.PyObject_Size", "PyObject_Size"], [47, 2, 1, "c.PyObject_Str", "PyObject_Str"], [47, 2, 1, "c.PyObject_Type", "PyObject_Type"], [47, 2, 1, "c.PyObject_TypeCheck", "PyObject_TypeCheck"], [56, 1, 1, "c.PyObject_VAR_HEAD", "PyObject_VAR_HEAD"], [10, 2, 1, "c.PyObject_Vectorcall", "PyObject_Vectorcall"], [10, 2, 1, "c.PyObject_VectorcallDict", "PyObject_VectorcallDict"], [10, 2, 1, "c.PyObject_VectorcallMethod", "PyObject_VectorcallMethod"], [33, 4, 1, "c.PyPreConfig", "PyPreConfig"], [33, 2, 1, "c.PyPreConfig_InitIsolatedConfig", "PyPreConfig_InitIsolatedConfig"], [33, 2, 1, "c.PyPreConfig_InitPythonConfig", "PyPreConfig_InitPythonConfig"], [21, 0, 1, "c.PyProperty_Type", "PyProperty_Type"], [64, 2, 1, "c.PyRun_AnyFile", "PyRun_AnyFile"], [64, 2, 1, "c.PyRun_AnyFileEx", "PyRun_AnyFileEx"], [64, 2, 1, "c.PyRun_AnyFileExFlags", "PyRun_AnyFileExFlags"], [64, 2, 1, "c.PyRun_AnyFileFlags", "PyRun_AnyFileFlags"], [64, 2, 1, "c.PyRun_File", "PyRun_File"], [64, 2, 1, "c.PyRun_FileEx", "PyRun_FileEx"], [64, 2, 1, "c.PyRun_FileExFlags", "PyRun_FileExFlags"], [64, 2, 1, "c.PyRun_FileFlags", "PyRun_FileFlags"], [64, 2, 1, "c.PyRun_InteractiveLoop", "PyRun_InteractiveLoop"], [64, 2, 1, "c.PyRun_InteractiveLoopFlags", "PyRun_InteractiveLoopFlags"], [64, 2, 1, "c.PyRun_InteractiveOne", "PyRun_InteractiveOne"], [64, 2, 1, "c.PyRun_InteractiveOneFlags", "PyRun_InteractiveOneFlags"], [64, 2, 1, "c.PyRun_SimpleFile", "PyRun_SimpleFile"], [64, 2, 1, "c.PyRun_SimpleFileEx", "PyRun_SimpleFileEx"], [64, 2, 1, "c.PyRun_SimpleFileExFlags", "PyRun_SimpleFileExFlags"], [64, 2, 1, "c.PyRun_SimpleString", "PyRun_SimpleString"], [64, 2, 1, "c.PyRun_SimpleStringFlags", "PyRun_SimpleStringFlags"], [64, 2, 1, "c.PyRun_String", "PyRun_String"], [64, 2, 1, "c.PyRun_StringFlags", "PyRun_StringFlags"], [35, 4, 1, "c.PySendResult", "PySendResult"], [36, 2, 1, "c.PySeqIter_Check", "PySeqIter_Check"], [36, 2, 1, "c.PySeqIter_New", "PySeqIter_New"], [36, 0, 1, "c.PySeqIter_Type", "PySeqIter_Type"], [61, 4, 1, "c.PySequenceMethods", "PySequenceMethods"], [52, 2, 1, "c.PySequence_Check", "PySequence_Check"], [52, 2, 1, "c.PySequence_Concat", "PySequence_Concat"], [52, 2, 1, "c.PySequence_Contains", "PySequence_Contains"], [52, 2, 1, "c.PySequence_Count", "PySequence_Count"], [52, 2, 1, "c.PySequence_DelItem", "PySequence_DelItem"], [52, 2, 1, "c.PySequence_DelSlice", "PySequence_DelSlice"], [52, 2, 1, "c.PySequence_Fast", "PySequence_Fast"], [52, 2, 1, "c.PySequence_Fast_GET_ITEM", "PySequence_Fast_GET_ITEM"], [52, 2, 1, "c.PySequence_Fast_GET_SIZE", "PySequence_Fast_GET_SIZE"], [52, 2, 1, "c.PySequence_Fast_ITEMS", "PySequence_Fast_ITEMS"], [52, 2, 1, "c.PySequence_GetItem", "PySequence_GetItem"], [52, 2, 1, "c.PySequence_GetSlice", "PySequence_GetSlice"], [52, 2, 1, "c.PySequence_ITEM", "PySequence_ITEM"], [52, 2, 1, "c.PySequence_InPlaceConcat", "PySequence_InPlaceConcat"], [52, 2, 1, "c.PySequence_InPlaceRepeat", "PySequence_InPlaceRepeat"], [52, 2, 1, "c.PySequence_Index", "PySequence_Index"], [52, 2, 1, "c.PySequence_Length", "PySequence_Length"], [52, 2, 1, "c.PySequence_List", "PySequence_List"], [52, 2, 1, "c.PySequence_Repeat", "PySequence_Repeat"], [52, 2, 1, "c.PySequence_SetItem", "PySequence_SetItem"], [52, 2, 1, "c.PySequence_SetSlice", "PySequence_SetSlice"], [52, 2, 1, "c.PySequence_Size", "PySequence_Size"], [52, 2, 1, "c.PySequence_Tuple", "PySequence_Tuple"], [53, 4, 1, "c.PySetObject", "PySetObject"], [53, 2, 1, "c.PySet_Add", "PySet_Add"], [53, 2, 1, "c.PySet_Check", "PySet_Check"], [53, 2, 1, "c.PySet_CheckExact", "PySet_CheckExact"], [53, 2, 1, "c.PySet_Clear", "PySet_Clear"], [53, 2, 1, "c.PySet_Contains", "PySet_Contains"], [53, 2, 1, "c.PySet_Discard", "PySet_Discard"], [53, 2, 1, "c.PySet_GET_SIZE", "PySet_GET_SIZE"], [53, 2, 1, "c.PySet_New", "PySet_New"], [53, 2, 1, "c.PySet_Pop", "PySet_Pop"], [53, 2, 1, "c.PySet_Size", "PySet_Size"], [53, 0, 1, "c.PySet_Type", "PySet_Type"], [23, 2, 1, "c.PySignal_SetWakeupFd", "PySignal_SetWakeupFd"], [54, 2, 1, "c.PySlice_AdjustIndices", "PySlice_AdjustIndices"], [54, 2, 1, "c.PySlice_Check", "PySlice_Check"], [54, 2, 1, "c.PySlice_GetIndices", "PySlice_GetIndices"], [54, 2, 1, "c.PySlice_GetIndicesEx", "PySlice_GetIndicesEx"], [54, 2, 1, "c.PySlice_New", "PySlice_New"], [54, 0, 1, "c.PySlice_Type", "PySlice_Type"], [54, 2, 1, "c.PySlice_Unpack", "PySlice_Unpack"], [44, 2, 1, "c.PyState_AddModule", "PyState_AddModule"], [44, 2, 1, "c.PyState_FindModule", "PyState_FindModule"], [44, 2, 1, "c.PyState_RemoveModule", "PyState_RemoveModule"], [33, 4, 1, "c.PyStatus", "PyStatus"], [33, 2, 1, "c.PyStatus_Error", "PyStatus_Error"], [33, 2, 1, "c.PyStatus_Exception", "PyStatus_Exception"], [33, 2, 1, "c.PyStatus_Exit", "PyStatus_Exit"], [33, 2, 1, "c.PyStatus_IsError", "PyStatus_IsError"], [33, 2, 1, "c.PyStatus_IsExit", "PyStatus_IsExit"], [33, 2, 1, "c.PyStatus_NoMemory", "PyStatus_NoMemory"], [33, 2, 1, "c.PyStatus_Ok", "PyStatus_Ok"], [58, 4, 1, "c.PyStructSequence_Desc", "PyStructSequence_Desc"], [58, 4, 1, "c.PyStructSequence_Field", "PyStructSequence_Field"], [58, 2, 1, "c.PyStructSequence_GET_ITEM", "PyStructSequence_GET_ITEM"], [58, 2, 1, "c.PyStructSequence_GetItem", "PyStructSequence_GetItem"], [58, 2, 1, "c.PyStructSequence_InitType", "PyStructSequence_InitType"], [58, 2, 1, "c.PyStructSequence_InitType2", "PyStructSequence_InitType2"], [58, 2, 1, "c.PyStructSequence_New", "PyStructSequence_New"], [58, 2, 1, "c.PyStructSequence_NewType", "PyStructSequence_NewType"], [58, 2, 1, "c.PyStructSequence_SET_ITEM", "PyStructSequence_SET_ITEM"], [58, 2, 1, "c.PyStructSequence_SetItem", "PyStructSequence_SetItem"], [58, 0, 1, "c.PyStructSequence_UnnamedField", "PyStructSequence_UnnamedField"], [57, 2, 1, "c.PySys_AddAuditHook", "PySys_AddAuditHook"], [57, 2, 1, "c.PySys_Audit", "PySys_Audit"], [57, 2, 1, "c.PySys_FormatStderr", "PySys_FormatStderr"], [57, 2, 1, "c.PySys_FormatStdout", "PySys_FormatStdout"], [57, 2, 1, "c.PySys_GetObject", "PySys_GetObject"], [57, 2, 1, "c.PySys_GetXOptions", "PySys_GetXOptions"], [57, 2, 1, "c.PySys_ResetWarnOptions", "PySys_ResetWarnOptions"], [57, 2, 1, "c.PySys_SetObject", "PySys_SetObject"], [57, 2, 1, "c.PySys_WriteStderr", "PySys_WriteStderr"], [57, 2, 1, "c.PySys_WriteStdout", "PySys_WriteStdout"], [20, 2, 1, "c.PyTZInfo_Check", "PyTZInfo_Check"], [20, 2, 1, "c.PyTZInfo_CheckExact", "PyTZInfo_CheckExact"], [32, 4, 1, "c.PyThreadState", "PyThreadState"], [32, 2, 1, "c.PyThreadState_Clear", "PyThreadState_Clear"], [32, 2, 1, "c.PyThreadState_Delete", "PyThreadState_Delete"], [32, 2, 1, "c.PyThreadState_DeleteCurrent", "PyThreadState_DeleteCurrent"], [32, 2, 1, "c.PyThreadState_EnterTracing", "PyThreadState_EnterTracing"], [32, 2, 1, "c.PyThreadState_Get", "PyThreadState_Get"], [32, 2, 1, "c.PyThreadState_GetDict", "PyThreadState_GetDict"], [32, 2, 1, "c.PyThreadState_GetFrame", "PyThreadState_GetFrame"], [32, 2, 1, "c.PyThreadState_GetID", "PyThreadState_GetID"], [32, 2, 1, "c.PyThreadState_GetInterpreter", "PyThreadState_GetInterpreter"], [32, 2, 1, "c.PyThreadState_LeaveTracing", "PyThreadState_LeaveTracing"], [32, 2, 1, "c.PyThreadState_New", "PyThreadState_New"], [32, 2, 1, "c.PyThreadState_Next", "PyThreadState_Next"], [32, 2, 1, "c.PyThreadState_SetAsyncExc", "PyThreadState_SetAsyncExc"], [32, 2, 1, "c.PyThreadState_Swap", "PyThreadState_Swap"], [32, 2, 1, "c.PyThread_ReInitTLS", "PyThread_ReInitTLS"], [32, 2, 1, "c.PyThread_create_key", "PyThread_create_key"], [32, 2, 1, "c.PyThread_delete_key", "PyThread_delete_key"], [32, 2, 1, "c.PyThread_delete_key_value", "PyThread_delete_key_value"], [32, 2, 1, "c.PyThread_get_key_value", "PyThread_get_key_value"], [32, 2, 1, "c.PyThread_set_key_value", "PyThread_set_key_value"], [32, 2, 1, "c.PyThread_tss_alloc", "PyThread_tss_alloc"], [32, 2, 1, "c.PyThread_tss_create", "PyThread_tss_create"], [32, 2, 1, "c.PyThread_tss_delete", "PyThread_tss_delete"], [32, 2, 1, "c.PyThread_tss_free", "PyThread_tss_free"], [32, 2, 1, "c.PyThread_tss_get", "PyThread_tss_get"], [32, 2, 1, "c.PyThread_tss_is_created", "PyThread_tss_is_created"], [32, 2, 1, "c.PyThread_tss_set", "PyThread_tss_set"], [20, 2, 1, "c.PyTimeZone_FromOffset", "PyTimeZone_FromOffset"], [20, 2, 1, "c.PyTimeZone_FromOffsetAndName", "PyTimeZone_FromOffsetAndName"], [20, 2, 1, "c.PyTime_Check", "PyTime_Check"], [20, 2, 1, "c.PyTime_CheckExact", "PyTime_CheckExact"], [20, 2, 1, "c.PyTime_FromTime", "PyTime_FromTime"], [20, 2, 1, "c.PyTime_FromTimeAndFold", "PyTime_FromTimeAndFold"], [41, 2, 1, "c.PyTraceMalloc_Track", "PyTraceMalloc_Track"], [41, 2, 1, "c.PyTraceMalloc_Untrack", "PyTraceMalloc_Untrack"], [32, 0, 1, "c.PyTrace_CALL", "PyTrace_CALL"], [32, 0, 1, "c.PyTrace_C_CALL", "PyTrace_C_CALL"], [32, 0, 1, "c.PyTrace_C_EXCEPTION", "PyTrace_C_EXCEPTION"], [32, 0, 1, "c.PyTrace_C_RETURN", "PyTrace_C_RETURN"], [32, 0, 1, "c.PyTrace_EXCEPTION", "PyTrace_EXCEPTION"], [32, 0, 1, "c.PyTrace_LINE", "PyTrace_LINE"], [32, 0, 1, "c.PyTrace_OPCODE", "PyTrace_OPCODE"], [32, 0, 1, "c.PyTrace_RETURN", "PyTrace_RETURN"], [58, 4, 1, "c.PyTupleObject", "PyTupleObject"], [58, 2, 1, "c.PyTuple_Check", "PyTuple_Check"], [58, 2, 1, "c.PyTuple_CheckExact", "PyTuple_CheckExact"], [58, 2, 1, "c.PyTuple_GET_ITEM", "PyTuple_GET_ITEM"], [58, 2, 1, "c.PyTuple_GET_SIZE", "PyTuple_GET_SIZE"], [58, 2, 1, "c.PyTuple_GetItem", "PyTuple_GetItem"], [58, 2, 1, "c.PyTuple_GetSlice", "PyTuple_GetSlice"], [58, 2, 1, "c.PyTuple_New", "PyTuple_New"], [58, 2, 1, "c.PyTuple_Pack", "PyTuple_Pack"], [58, 2, 1, "c.PyTuple_SET_ITEM", "PyTuple_SET_ITEM"], [58, 2, 1, "c.PyTuple_SetItem", "PyTuple_SetItem"], [58, 2, 1, "c.PyTuple_Size", "PyTuple_Size"], [58, 0, 1, "c.PyTuple_Type", "PyTuple_Type"], [59, 4, 1, "c.PyTypeObject", "PyTypeObject"], [59, 2, 1, "c.PyType_AddWatcher", "PyType_AddWatcher"], [59, 2, 1, "c.PyType_Check", "PyType_Check"], [59, 2, 1, "c.PyType_CheckExact", "PyType_CheckExact"], [59, 2, 1, "c.PyType_ClearCache", "PyType_ClearCache"], [59, 2, 1, "c.PyType_ClearWatcher", "PyType_ClearWatcher"], [59, 2, 1, "c.PyType_FromMetaclass", "PyType_FromMetaclass"], [59, 2, 1, "c.PyType_FromModuleAndSpec", "PyType_FromModuleAndSpec"], [59, 2, 1, "c.PyType_FromSpec", "PyType_FromSpec"], [59, 2, 1, "c.PyType_FromSpecWithBases", "PyType_FromSpecWithBases"], [59, 2, 1, "c.PyType_GenericAlloc", "PyType_GenericAlloc"], [59, 2, 1, "c.PyType_GenericNew", "PyType_GenericNew"], [59, 2, 1, "c.PyType_GetDict", "PyType_GetDict"], [59, 2, 1, "c.PyType_GetFlags", "PyType_GetFlags"], [59, 2, 1, "c.PyType_GetModule", "PyType_GetModule"], [59, 2, 1, "c.PyType_GetModuleByDef", "PyType_GetModuleByDef"], [59, 2, 1, "c.PyType_GetModuleState", "PyType_GetModuleState"], [59, 2, 1, "c.PyType_GetName", "PyType_GetName"], [59, 2, 1, "c.PyType_GetQualName", "PyType_GetQualName"], [59, 2, 1, "c.PyType_GetSlot", "PyType_GetSlot"], [47, 2, 1, "c.PyType_GetTypeDataSize", "PyType_GetTypeDataSize"], [59, 2, 1, "c.PyType_HasFeature", "PyType_HasFeature"], [59, 2, 1, "c.PyType_IS_GC", "PyType_IS_GC"], [59, 2, 1, "c.PyType_IsSubtype", "PyType_IsSubtype"], [59, 2, 1, "c.PyType_Modified", "PyType_Modified"], [59, 2, 1, "c.PyType_Ready", "PyType_Ready"], [59, 4, 1, "c.PyType_Slot", "PyType_Slot"], [59, 4, 1, "c.PyType_Spec", "PyType_Spec"], [59, 0, 1, "c.PyType_Type", "PyType_Type"], [59, 2, 1, "c.PyType_Watch", "PyType_Watch"], [59, 4, 1, "c.PyType_WatchCallback", "PyType_WatchCallback"], [23, 2, 1, "c.PyUnicodeDecodeError_Create", "PyUnicodeDecodeError_Create"], [23, 2, 1, "c.PyUnicodeDecodeError_GetEncoding", "PyUnicodeDecodeError_GetEncoding"], [23, 2, 1, "c.PyUnicodeDecodeError_GetEnd", "PyUnicodeDecodeError_GetEnd"], [23, 2, 1, "c.PyUnicodeDecodeError_GetObject", "PyUnicodeDecodeError_GetObject"], [23, 2, 1, "c.PyUnicodeDecodeError_GetReason", "PyUnicodeDecodeError_GetReason"], [23, 2, 1, "c.PyUnicodeDecodeError_GetStart", "PyUnicodeDecodeError_GetStart"], [23, 2, 1, "c.PyUnicodeDecodeError_SetEnd", "PyUnicodeDecodeError_SetEnd"], [23, 2, 1, "c.PyUnicodeDecodeError_SetReason", "PyUnicodeDecodeError_SetReason"], [23, 2, 1, "c.PyUnicodeDecodeError_SetStart", "PyUnicodeDecodeError_SetStart"], [23, 2, 1, "c.PyUnicodeEncodeError_GetEncoding", "PyUnicodeEncodeError_GetEncoding"], [23, 2, 1, "c.PyUnicodeEncodeError_GetEnd", "PyUnicodeEncodeError_GetEnd"], [23, 2, 1, "c.PyUnicodeEncodeError_GetObject", "PyUnicodeEncodeError_GetObject"], [23, 2, 1, "c.PyUnicodeEncodeError_GetReason", "PyUnicodeEncodeError_GetReason"], [23, 2, 1, "c.PyUnicodeEncodeError_GetStart", "PyUnicodeEncodeError_GetStart"], [23, 2, 1, "c.PyUnicodeEncodeError_SetEnd", "PyUnicodeEncodeError_SetEnd"], [23, 2, 1, "c.PyUnicodeEncodeError_SetReason", "PyUnicodeEncodeError_SetReason"], [23, 2, 1, "c.PyUnicodeEncodeError_SetStart", "PyUnicodeEncodeError_SetStart"], [62, 4, 1, "c.PyUnicodeObject", "PyUnicodeObject"], [23, 2, 1, "c.PyUnicodeTranslateError_GetEnd", "PyUnicodeTranslateError_GetEnd"], [23, 2, 1, "c.PyUnicodeTranslateError_GetObject", "PyUnicodeTranslateError_GetObject"], [23, 2, 1, "c.PyUnicodeTranslateError_GetReason", "PyUnicodeTranslateError_GetReason"], [23, 2, 1, "c.PyUnicodeTranslateError_GetStart", "PyUnicodeTranslateError_GetStart"], [23, 2, 1, "c.PyUnicodeTranslateError_SetEnd", "PyUnicodeTranslateError_SetEnd"], [23, 2, 1, "c.PyUnicodeTranslateError_SetReason", "PyUnicodeTranslateError_SetReason"], [23, 2, 1, "c.PyUnicodeTranslateError_SetStart", "PyUnicodeTranslateError_SetStart"], [62, 2, 1, "c.PyUnicode_1BYTE_DATA", "PyUnicode_1BYTE_DATA"], [62, 1, 1, "c.PyUnicode_1BYTE_KIND", "PyUnicode_1BYTE_KIND"], [62, 2, 1, "c.PyUnicode_2BYTE_DATA", "PyUnicode_2BYTE_DATA"], [62, 1, 1, "c.PyUnicode_2BYTE_KIND", "PyUnicode_2BYTE_KIND"], [62, 2, 1, "c.PyUnicode_4BYTE_DATA", "PyUnicode_4BYTE_DATA"], [62, 1, 1, "c.PyUnicode_4BYTE_KIND", "PyUnicode_4BYTE_KIND"], [62, 2, 1, "c.PyUnicode_AsASCIIString", "PyUnicode_AsASCIIString"], [62, 2, 1, "c.PyUnicode_AsCharmapString", "PyUnicode_AsCharmapString"], [62, 2, 1, "c.PyUnicode_AsEncodedString", "PyUnicode_AsEncodedString"], [62, 2, 1, "c.PyUnicode_AsLatin1String", "PyUnicode_AsLatin1String"], [62, 2, 1, "c.PyUnicode_AsMBCSString", "PyUnicode_AsMBCSString"], [62, 2, 1, "c.PyUnicode_AsRawUnicodeEscapeString", "PyUnicode_AsRawUnicodeEscapeString"], [62, 2, 1, "c.PyUnicode_AsUCS4", "PyUnicode_AsUCS4"], [62, 2, 1, "c.PyUnicode_AsUCS4Copy", "PyUnicode_AsUCS4Copy"], [62, 2, 1, "c.PyUnicode_AsUTF16String", "PyUnicode_AsUTF16String"], [62, 2, 1, "c.PyUnicode_AsUTF32String", "PyUnicode_AsUTF32String"], [62, 2, 1, "c.PyUnicode_AsUTF8", "PyUnicode_AsUTF8"], [62, 2, 1, "c.PyUnicode_AsUTF8AndSize", "PyUnicode_AsUTF8AndSize"], [62, 2, 1, "c.PyUnicode_AsUTF8String", "PyUnicode_AsUTF8String"], [62, 2, 1, "c.PyUnicode_AsUnicodeEscapeString", "PyUnicode_AsUnicodeEscapeString"], [62, 2, 1, "c.PyUnicode_AsWideChar", "PyUnicode_AsWideChar"], [62, 2, 1, "c.PyUnicode_AsWideCharString", "PyUnicode_AsWideCharString"], [62, 2, 1, "c.PyUnicode_Check", "PyUnicode_Check"], [62, 2, 1, "c.PyUnicode_CheckExact", "PyUnicode_CheckExact"], [62, 2, 1, "c.PyUnicode_Compare", "PyUnicode_Compare"], [62, 2, 1, "c.PyUnicode_CompareWithASCIIString", "PyUnicode_CompareWithASCIIString"], [62, 2, 1, "c.PyUnicode_Concat", "PyUnicode_Concat"], [62, 2, 1, "c.PyUnicode_Contains", "PyUnicode_Contains"], [62, 2, 1, "c.PyUnicode_CopyCharacters", "PyUnicode_CopyCharacters"], [62, 2, 1, "c.PyUnicode_Count", "PyUnicode_Count"], [62, 2, 1, "c.PyUnicode_DATA", "PyUnicode_DATA"], [62, 2, 1, "c.PyUnicode_Decode", "PyUnicode_Decode"], [62, 2, 1, "c.PyUnicode_DecodeASCII", "PyUnicode_DecodeASCII"], [62, 2, 1, "c.PyUnicode_DecodeCharmap", "PyUnicode_DecodeCharmap"], [62, 2, 1, "c.PyUnicode_DecodeFSDefault", "PyUnicode_DecodeFSDefault"], [62, 2, 1, "c.PyUnicode_DecodeFSDefaultAndSize", "PyUnicode_DecodeFSDefaultAndSize"], [62, 2, 1, "c.PyUnicode_DecodeLatin1", "PyUnicode_DecodeLatin1"], [62, 2, 1, "c.PyUnicode_DecodeLocale", "PyUnicode_DecodeLocale"], [62, 2, 1, "c.PyUnicode_DecodeLocaleAndSize", "PyUnicode_DecodeLocaleAndSize"], [62, 2, 1, "c.PyUnicode_DecodeMBCS", "PyUnicode_DecodeMBCS"], [62, 2, 1, "c.PyUnicode_DecodeMBCSStateful", "PyUnicode_DecodeMBCSStateful"], [62, 2, 1, "c.PyUnicode_DecodeRawUnicodeEscape", "PyUnicode_DecodeRawUnicodeEscape"], [62, 2, 1, "c.PyUnicode_DecodeUTF16", "PyUnicode_DecodeUTF16"], [62, 2, 1, "c.PyUnicode_DecodeUTF16Stateful", "PyUnicode_DecodeUTF16Stateful"], [62, 2, 1, "c.PyUnicode_DecodeUTF32", "PyUnicode_DecodeUTF32"], [62, 2, 1, "c.PyUnicode_DecodeUTF32Stateful", "PyUnicode_DecodeUTF32Stateful"], [62, 2, 1, "c.PyUnicode_DecodeUTF7", "PyUnicode_DecodeUTF7"], [62, 2, 1, "c.PyUnicode_DecodeUTF7Stateful", "PyUnicode_DecodeUTF7Stateful"], [62, 2, 1, "c.PyUnicode_DecodeUTF8", "PyUnicode_DecodeUTF8"], [62, 2, 1, "c.PyUnicode_DecodeUTF8Stateful", "PyUnicode_DecodeUTF8Stateful"], [62, 2, 1, "c.PyUnicode_DecodeUnicodeEscape", "PyUnicode_DecodeUnicodeEscape"], [62, 2, 1, "c.PyUnicode_EncodeCodePage", "PyUnicode_EncodeCodePage"], [62, 2, 1, "c.PyUnicode_EncodeFSDefault", "PyUnicode_EncodeFSDefault"], [62, 2, 1, "c.PyUnicode_EncodeLocale", "PyUnicode_EncodeLocale"], [62, 2, 1, "c.PyUnicode_FSConverter", "PyUnicode_FSConverter"], [62, 2, 1, "c.PyUnicode_FSDecoder", "PyUnicode_FSDecoder"], [62, 2, 1, "c.PyUnicode_Fill", "PyUnicode_Fill"], [62, 2, 1, "c.PyUnicode_Find", "PyUnicode_Find"], [62, 2, 1, "c.PyUnicode_FindChar", "PyUnicode_FindChar"], [62, 2, 1, "c.PyUnicode_Format", "PyUnicode_Format"], [62, 2, 1, "c.PyUnicode_FromEncodedObject", "PyUnicode_FromEncodedObject"], [62, 2, 1, "c.PyUnicode_FromFormat", "PyUnicode_FromFormat"], [62, 2, 1, "c.PyUnicode_FromFormatV", "PyUnicode_FromFormatV"], [62, 2, 1, "c.PyUnicode_FromKindAndData", "PyUnicode_FromKindAndData"], [62, 2, 1, "c.PyUnicode_FromObject", "PyUnicode_FromObject"], [62, 2, 1, "c.PyUnicode_FromString", "PyUnicode_FromString"], [62, 2, 1, "c.PyUnicode_FromStringAndSize", "PyUnicode_FromStringAndSize"], [62, 2, 1, "c.PyUnicode_FromWideChar", "PyUnicode_FromWideChar"], [62, 2, 1, "c.PyUnicode_GET_LENGTH", "PyUnicode_GET_LENGTH"], [62, 2, 1, "c.PyUnicode_GetLength", "PyUnicode_GetLength"], [62, 2, 1, "c.PyUnicode_InternFromString", "PyUnicode_InternFromString"], [62, 2, 1, "c.PyUnicode_InternInPlace", "PyUnicode_InternInPlace"], [62, 2, 1, "c.PyUnicode_IsIdentifier", "PyUnicode_IsIdentifier"], [62, 2, 1, "c.PyUnicode_Join", "PyUnicode_Join"], [62, 2, 1, "c.PyUnicode_KIND", "PyUnicode_KIND"], [62, 2, 1, "c.PyUnicode_MAX_CHAR_VALUE", "PyUnicode_MAX_CHAR_VALUE"], [62, 2, 1, "c.PyUnicode_New", "PyUnicode_New"], [62, 2, 1, "c.PyUnicode_READ", "PyUnicode_READ"], [62, 2, 1, "c.PyUnicode_READY", "PyUnicode_READY"], [62, 2, 1, "c.PyUnicode_READ_CHAR", "PyUnicode_READ_CHAR"], [62, 2, 1, "c.PyUnicode_ReadChar", "PyUnicode_ReadChar"], [62, 2, 1, "c.PyUnicode_Replace", "PyUnicode_Replace"], [62, 2, 1, "c.PyUnicode_RichCompare", "PyUnicode_RichCompare"], [62, 2, 1, "c.PyUnicode_Split", "PyUnicode_Split"], [62, 2, 1, "c.PyUnicode_Splitlines", "PyUnicode_Splitlines"], [62, 2, 1, "c.PyUnicode_Substring", "PyUnicode_Substring"], [62, 2, 1, "c.PyUnicode_Tailmatch", "PyUnicode_Tailmatch"], [62, 2, 1, "c.PyUnicode_Translate", "PyUnicode_Translate"], [62, 0, 1, "c.PyUnicode_Type", "PyUnicode_Type"], [62, 2, 1, "c.PyUnicode_WRITE", "PyUnicode_WRITE"], [62, 2, 1, "c.PyUnicode_WriteChar", "PyUnicode_WriteChar"], [13, 2, 1, "c.PyUnstable_Code_GetExtra", "PyUnstable_Code_GetExtra"], [13, 2, 1, "c.PyUnstable_Code_New", "PyUnstable_Code_New"], [13, 2, 1, "c.PyUnstable_Code_NewWithPosOnlyArgs", "PyUnstable_Code_NewWithPosOnlyArgs"], [13, 2, 1, "c.PyUnstable_Code_SetExtra", "PyUnstable_Code_SetExtra"], [13, 2, 1, "c.PyUnstable_Eval_RequestCodeExtraIndex", "PyUnstable_Eval_RequestCodeExtraIndex"], [23, 2, 1, "c.PyUnstable_Exc_PrepReraiseStar", "PyUnstable_Exc_PrepReraiseStar"], [28, 2, 1, "c.PyUnstable_GC_VisitObjects", "PyUnstable_GC_VisitObjects"], [26, 2, 1, "c.PyUnstable_InterpreterFrame_GetCode", "PyUnstable_InterpreterFrame_GetCode"], [26, 2, 1, "c.PyUnstable_InterpreterFrame_GetLasti", "PyUnstable_InterpreterFrame_GetLasti"], [26, 2, 1, "c.PyUnstable_InterpreterFrame_GetLine", "PyUnstable_InterpreterFrame_GetLine"], [38, 2, 1, "c.PyUnstable_Long_CompactValue", "PyUnstable_Long_CompactValue"], [38, 2, 1, "c.PyUnstable_Long_IsCompact", "PyUnstable_Long_IsCompact"], [28, 2, 1, "c.PyUnstable_Object_GC_NewWithExtraData", "PyUnstable_Object_GC_NewWithExtraData"], [49, 2, 1, "c.PyUnstable_PerfMapState_Fini", "PyUnstable_PerfMapState_Fini"], [49, 2, 1, "c.PyUnstable_PerfMapState_Init", "PyUnstable_PerfMapState_Init"], [59, 2, 1, "c.PyUnstable_Type_AssignVersionTag", "PyUnstable_Type_AssignVersionTag"], [49, 2, 1, "c.PyUnstable_WritePerfMapEntry", "PyUnstable_WritePerfMapEntry"], [56, 4, 1, "c.PyVarObject", "PyVarObject"], [56, 1, 1, "c.PyVarObject_HEAD_INIT", "PyVarObject_HEAD_INIT"], [10, 2, 1, "c.PyVectorcall_Call", "PyVectorcall_Call"], [10, 2, 1, "c.PyVectorcall_Function", "PyVectorcall_Function"], [10, 2, 1, "c.PyVectorcall_NARGS", "PyVectorcall_NARGS"], [65, 2, 1, "c.PyWeakref_Check", "PyWeakref_Check"], [65, 2, 1, "c.PyWeakref_CheckProxy", "PyWeakref_CheckProxy"], [65, 2, 1, "c.PyWeakref_CheckRef", "PyWeakref_CheckRef"], [65, 2, 1, "c.PyWeakref_GET_OBJECT", "PyWeakref_GET_OBJECT"], [65, 2, 1, "c.PyWeakref_GetObject", "PyWeakref_GetObject"], [65, 2, 1, "c.PyWeakref_GetRef", "PyWeakref_GetRef"], [65, 2, 1, "c.PyWeakref_NewProxy", "PyWeakref_NewProxy"], [65, 2, 1, "c.PyWeakref_NewRef", "PyWeakref_NewRef"], [33, 4, 1, "c.PyWideStringList", "PyWideStringList"], [33, 2, 1, "c.PyWideStringList_Append", "PyWideStringList_Append"], [33, 2, 1, "c.PyWideStringList_Insert", "PyWideStringList_Insert"], [21, 2, 1, "c.PyWrapper_New", "PyWrapper_New"], [34, 1, 1, "c.Py_ABS", "Py_ABS"], [34, 1, 1, "c.Py_ALWAYS_INLINE", "Py_ALWAYS_INLINE"], [56, 1, 1, "c.Py_AUDIT_READ", "Py_AUDIT_READ"], [32, 2, 1, "c.Py_AddPendingCall", "Py_AddPendingCall"], [57, 2, 1, "c.Py_AtExit", "Py_AtExit"], [32, 1, 1, "c.Py_BEGIN_ALLOW_THREADS", "Py_BEGIN_ALLOW_THREADS"], [32, 1, 1, "c.Py_BLOCK_THREADS", "Py_BLOCK_THREADS"], [5, 2, 1, "c.Py_BuildValue", "Py_BuildValue"], [64, 2, 1, "c.Py_BytesMain", "Py_BytesMain"], [32, 0, 1, "c.Py_BytesWarningFlag", "Py_BytesWarningFlag"], [34, 1, 1, "c.Py_CHARMASK", "Py_CHARMASK"], [50, 2, 1, "c.Py_CLEAR", "Py_CLEAR"], [64, 2, 1, "c.Py_CompileString", "Py_CompileString"], [64, 2, 1, "c.Py_CompileStringExFlags", "Py_CompileStringExFlags"], [64, 2, 1, "c.Py_CompileStringFlags", "Py_CompileStringFlags"], [64, 2, 1, "c.Py_CompileStringObject", "Py_CompileStringObject"], [50, 2, 1, "c.Py_DECREF", "Py_DECREF"], [34, 1, 1, "c.Py_DEPRECATED", "Py_DEPRECATED"], [32, 0, 1, "c.Py_DebugFlag", "Py_DebugFlag"], [50, 2, 1, "c.Py_DecRef", "Py_DecRef"], [57, 2, 1, "c.Py_DecodeLocale", "Py_DecodeLocale"], [32, 0, 1, "c.Py_DontWriteBytecodeFlag", "Py_DontWriteBytecodeFlag"], [32, 1, 1, "c.Py_END_ALLOW_THREADS", "Py_END_ALLOW_THREADS"], [61, 1, 1, "c.Py_EQ", "Py_EQ"], [54, 0, 1, "c.Py_Ellipsis", "Py_Ellipsis"], [57, 2, 1, "c.Py_EncodeLocale", "Py_EncodeLocale"], [32, 2, 1, "c.Py_EndInterpreter", "Py_EndInterpreter"], [23, 2, 1, "c.Py_EnterRecursiveCall", "Py_EnterRecursiveCall"], [57, 2, 1, "c.Py_Exit", "Py_Exit"], [33, 2, 1, "c.Py_ExitStatusException", "Py_ExitStatusException"], [6, 0, 1, "c.Py_False", "Py_False"], [57, 2, 1, "c.Py_FatalError", "Py_FatalError"], [57, 2, 1, "c.Py_FdIsInteractive", "Py_FdIsInteractive"], [32, 2, 1, "c.Py_Finalize", "Py_Finalize"], [32, 2, 1, "c.Py_FinalizeEx", "Py_FinalizeEx"], [32, 0, 1, "c.Py_FrozenFlag", "Py_FrozenFlag"], [61, 1, 1, "c.Py_GE", "Py_GE"], [34, 1, 1, "c.Py_GETENV", "Py_GETENV"], [61, 1, 1, "c.Py_GT", "Py_GT"], [60, 2, 1, "c.Py_GenericAlias", "Py_GenericAlias"], [60, 0, 1, "c.Py_GenericAliasType", "Py_GenericAliasType"], [33, 2, 1, "c.Py_GetArgcArgv", "Py_GetArgcArgv"], [32, 2, 1, "c.Py_GetBuildInfo", "Py_GetBuildInfo"], [32, 2, 1, "c.Py_GetCompiler", "Py_GetCompiler"], [32, 2, 1, "c.Py_GetCopyright", "Py_GetCopyright"], [32, 2, 1, "c.Py_GetExecPrefix", "Py_GetExecPrefix"], [32, 2, 1, "c.Py_GetPath", "Py_GetPath"], [32, 2, 1, "c.Py_GetPlatform", "Py_GetPlatform"], [32, 2, 1, "c.Py_GetPrefix", "Py_GetPrefix"], [32, 2, 1, "c.Py_GetProgramFullPath", "Py_GetProgramFullPath"], [32, 2, 1, "c.Py_GetProgramName", "Py_GetProgramName"], [32, 2, 1, "c.Py_GetPythonHome", "Py_GetPythonHome"], [32, 2, 1, "c.Py_GetVersion", "Py_GetVersion"], [32, 0, 1, "c.Py_HashRandomizationFlag", "Py_HashRandomizationFlag"], [50, 2, 1, "c.Py_INCREF", "Py_INCREF"], [56, 2, 1, "c.Py_IS_TYPE", "Py_IS_TYPE"], [32, 0, 1, "c.Py_IgnoreEnvironmentFlag", "Py_IgnoreEnvironmentFlag"], [50, 2, 1, "c.Py_IncRef", "Py_IncRef"], [32, 2, 1, "c.Py_Initialize", "Py_Initialize"], [32, 2, 1, "c.Py_InitializeEx", "Py_InitializeEx"], [33, 2, 1, "c.Py_InitializeFromConfig", "Py_InitializeFromConfig"], [32, 0, 1, "c.Py_InspectFlag", "Py_InspectFlag"], [32, 0, 1, "c.Py_InteractiveFlag", "Py_InteractiveFlag"], [56, 2, 1, "c.Py_Is", "Py_Is"], [56, 2, 1, "c.Py_IsFalse", "Py_IsFalse"], [32, 2, 1, "c.Py_IsFinalizing", "Py_IsFinalizing"], [32, 2, 1, "c.Py_IsInitialized", "Py_IsInitialized"], [56, 2, 1, "c.Py_IsNone", "Py_IsNone"], [56, 2, 1, "c.Py_IsTrue", "Py_IsTrue"], [32, 0, 1, "c.Py_IsolatedFlag", "Py_IsolatedFlag"], [61, 1, 1, "c.Py_LE", "Py_LE"], [55, 1, 1, "c.Py_LIMITED_API", "Py_LIMITED_API"], [61, 1, 1, "c.Py_LT", "Py_LT"], [23, 2, 1, "c.Py_LeaveRecursiveCall", "Py_LeaveRecursiveCall"], [32, 0, 1, "c.Py_LegacyWindowsFSEncodingFlag", "Py_LegacyWindowsFSEncodingFlag"], [32, 0, 1, "c.Py_LegacyWindowsStdioFlag", "Py_LegacyWindowsStdioFlag"], [34, 1, 1, "c.Py_MAX", "Py_MAX"], [34, 1, 1, "c.Py_MEMBER_SIZE", "Py_MEMBER_SIZE"], [34, 1, 1, "c.Py_MIN", "Py_MIN"], [44, 1, 1, "c.Py_MOD_MULTIPLE_INTERPRETERS_NOT_SUPPORTED", "Py_MOD_MULTIPLE_INTERPRETERS_NOT_SUPPORTED"], [44, 1, 1, "c.Py_MOD_MULTIPLE_INTERPRETERS_SUPPORTED", "Py_MOD_MULTIPLE_INTERPRETERS_SUPPORTED"], [44, 1, 1, "c.Py_MOD_PER_INTERPRETER_GIL_SUPPORTED", "Py_MOD_PER_INTERPRETER_GIL_SUPPORTED"], [64, 2, 1, "c.Py_Main", "Py_Main"], [61, 1, 1, "c.Py_NE", "Py_NE"], [34, 1, 1, "c.Py_NO_INLINE", "Py_NO_INLINE"], [32, 2, 1, "c.Py_NewInterpreter", "Py_NewInterpreter"], [32, 2, 1, "c.Py_NewInterpreterFromConfig", "Py_NewInterpreterFromConfig"], [50, 2, 1, "c.Py_NewRef", "Py_NewRef"], [32, 0, 1, "c.Py_NoSiteFlag", "Py_NoSiteFlag"], [32, 0, 1, "c.Py_NoUserSiteDirectory", "Py_NoUserSiteDirectory"], [45, 0, 1, "c.Py_None", "Py_None"], [47, 0, 1, "c.Py_NotImplemented", "Py_NotImplemented"], [32, 0, 1, "c.Py_OptimizeFlag", "Py_OptimizeFlag"], [33, 2, 1, "c.Py_PreInitialize", "Py_PreInitialize"], [33, 2, 1, "c.Py_PreInitializeFromArgs", "Py_PreInitializeFromArgs"], [33, 2, 1, "c.Py_PreInitializeFromBytesArgs", "Py_PreInitializeFromBytesArgs"], [32, 0, 1, "c.Py_QuietFlag", "Py_QuietFlag"], [56, 1, 1, "c.Py_READONLY", "Py_READONLY"], [50, 2, 1, "c.Py_REFCNT", "Py_REFCNT"], [56, 1, 1, "c.Py_RELATIVE_OFFSET", "Py_RELATIVE_OFFSET"], [6, 1, 1, "c.Py_RETURN_FALSE", "Py_RETURN_FALSE"], [45, 1, 1, "c.Py_RETURN_NONE", "Py_RETURN_NONE"], [47, 1, 1, "c.Py_RETURN_NOTIMPLEMENTED", "Py_RETURN_NOTIMPLEMENTED"], [61, 1, 1, "c.Py_RETURN_RICHCOMPARE", "Py_RETURN_RICHCOMPARE"], [6, 1, 1, "c.Py_RETURN_TRUE", "Py_RETURN_TRUE"], [23, 2, 1, "c.Py_ReprEnter", "Py_ReprEnter"], [23, 2, 1, "c.Py_ReprLeave", "Py_ReprLeave"], [33, 2, 1, "c.Py_RunMain", "Py_RunMain"], [50, 1, 1, "c.Py_SETREF", "Py_SETREF"], [50, 2, 1, "c.Py_SET_REFCNT", "Py_SET_REFCNT"], [56, 2, 1, "c.Py_SET_SIZE", "Py_SET_SIZE"], [56, 2, 1, "c.Py_SET_TYPE", "Py_SET_TYPE"], [56, 2, 1, "c.Py_SIZE", "Py_SIZE"], [34, 1, 1, "c.Py_STRINGIFY", "Py_STRINGIFY"], [61, 1, 1, "c.Py_TPFLAGS_BASETYPE", "Py_TPFLAGS_BASETYPE"], [61, 1, 1, "c.Py_TPFLAGS_BASE_EXC_SUBCLASS", "Py_TPFLAGS_BASE_EXC_SUBCLASS"], [61, 1, 1, "c.Py_TPFLAGS_BYTES_SUBCLASS", "Py_TPFLAGS_BYTES_SUBCLASS"], [61, 1, 1, "c.Py_TPFLAGS_DEFAULT", "Py_TPFLAGS_DEFAULT"], [61, 1, 1, "c.Py_TPFLAGS_DICT_SUBCLASS", "Py_TPFLAGS_DICT_SUBCLASS"], [61, 1, 1, "c.Py_TPFLAGS_DISALLOW_INSTANTIATION", "Py_TPFLAGS_DISALLOW_INSTANTIATION"], [61, 1, 1, "c.Py_TPFLAGS_HAVE_FINALIZE", "Py_TPFLAGS_HAVE_FINALIZE"], [61, 1, 1, "c.Py_TPFLAGS_HAVE_GC", "Py_TPFLAGS_HAVE_GC"], [61, 1, 1, "c.Py_TPFLAGS_HAVE_VECTORCALL", "Py_TPFLAGS_HAVE_VECTORCALL"], [61, 1, 1, "c.Py_TPFLAGS_HEAPTYPE", "Py_TPFLAGS_HEAPTYPE"], [61, 1, 1, "c.Py_TPFLAGS_IMMUTABLETYPE", "Py_TPFLAGS_IMMUTABLETYPE"], [61, 1, 1, "c.Py_TPFLAGS_ITEMS_AT_END", "Py_TPFLAGS_ITEMS_AT_END"], [61, 1, 1, "c.Py_TPFLAGS_LIST_SUBCLASS", "Py_TPFLAGS_LIST_SUBCLASS"], [61, 1, 1, "c.Py_TPFLAGS_LONG_SUBCLASS", "Py_TPFLAGS_LONG_SUBCLASS"], [61, 1, 1, "c.Py_TPFLAGS_MANAGED_DICT", "Py_TPFLAGS_MANAGED_DICT"], [61, 1, 1, "c.Py_TPFLAGS_MANAGED_WEAKREF", "Py_TPFLAGS_MANAGED_WEAKREF"], [61, 1, 1, "c.Py_TPFLAGS_MAPPING", "Py_TPFLAGS_MAPPING"], [61, 1, 1, "c.Py_TPFLAGS_METHOD_DESCRIPTOR", "Py_TPFLAGS_METHOD_DESCRIPTOR"], [61, 1, 1, "c.Py_TPFLAGS_READY", "Py_TPFLAGS_READY"], [61, 1, 1, "c.Py_TPFLAGS_READYING", "Py_TPFLAGS_READYING"], [61, 1, 1, "c.Py_TPFLAGS_SEQUENCE", "Py_TPFLAGS_SEQUENCE"], [61, 1, 1, "c.Py_TPFLAGS_TUPLE_SUBCLASS", "Py_TPFLAGS_TUPLE_SUBCLASS"], [61, 1, 1, "c.Py_TPFLAGS_TYPE_SUBCLASS", "Py_TPFLAGS_TYPE_SUBCLASS"], [61, 1, 1, "c.Py_TPFLAGS_UNICODE_SUBCLASS", "Py_TPFLAGS_UNICODE_SUBCLASS"], [61, 1, 1, "c.Py_TPFLAGS_VALID_VERSION_TAG", "Py_TPFLAGS_VALID_VERSION_TAG"], [56, 2, 1, "c.Py_TYPE", "Py_TYPE"], [56, 1, 1, "c.Py_T_BOOL", "Py_T_BOOL"], [56, 1, 1, "c.Py_T_BYTE", "Py_T_BYTE"], [56, 1, 1, "c.Py_T_CHAR", "Py_T_CHAR"], [56, 1, 1, "c.Py_T_DOUBLE", "Py_T_DOUBLE"], [56, 1, 1, "c.Py_T_FLOAT", "Py_T_FLOAT"], [56, 1, 1, "c.Py_T_INT", "Py_T_INT"], [56, 1, 1, "c.Py_T_LONG", "Py_T_LONG"], [56, 1, 1, "c.Py_T_LONGLONG", "Py_T_LONGLONG"], [56, 1, 1, "c.Py_T_OBJECT_EX", "Py_T_OBJECT_EX"], [56, 1, 1, "c.Py_T_PYSSIZET", "Py_T_PYSSIZET"], [56, 1, 1, "c.Py_T_SHORT", "Py_T_SHORT"], [56, 1, 1, "c.Py_T_STRING", "Py_T_STRING"], [56, 1, 1, "c.Py_T_STRING_INPLACE", "Py_T_STRING_INPLACE"], [56, 1, 1, "c.Py_T_UBYTE", "Py_T_UBYTE"], [56, 1, 1, "c.Py_T_UINT", "Py_T_UINT"], [56, 1, 1, "c.Py_T_ULONG", "Py_T_ULONG"], [56, 1, 1, "c.Py_T_ULONGLONG", "Py_T_ULONGLONG"], [56, 1, 1, "c.Py_T_USHORT", "Py_T_USHORT"], [6, 0, 1, "c.Py_True", "Py_True"], [62, 4, 1, "c.Py_UCS1", "Py_UCS1"], [62, 4, 1, "c.Py_UCS2", "Py_UCS2"], [62, 4, 1, "c.Py_UCS4", "Py_UCS4"], [32, 1, 1, "c.Py_UNBLOCK_THREADS", "Py_UNBLOCK_THREADS"], [62, 4, 1, "c.Py_UNICODE", "Py_UNICODE"], [62, 2, 1, "c.Py_UNICODE_ISALNUM", "Py_UNICODE_ISALNUM"], [62, 2, 1, "c.Py_UNICODE_ISALPHA", "Py_UNICODE_ISALPHA"], [62, 2, 1, "c.Py_UNICODE_ISDECIMAL", "Py_UNICODE_ISDECIMAL"], [62, 2, 1, "c.Py_UNICODE_ISDIGIT", "Py_UNICODE_ISDIGIT"], [62, 2, 1, "c.Py_UNICODE_ISLINEBREAK", "Py_UNICODE_ISLINEBREAK"], [62, 2, 1, "c.Py_UNICODE_ISLOWER", "Py_UNICODE_ISLOWER"], [62, 2, 1, "c.Py_UNICODE_ISNUMERIC", "Py_UNICODE_ISNUMERIC"], [62, 2, 1, "c.Py_UNICODE_ISPRINTABLE", "Py_UNICODE_ISPRINTABLE"], [62, 2, 1, "c.Py_UNICODE_ISSPACE", "Py_UNICODE_ISSPACE"], [62, 2, 1, "c.Py_UNICODE_ISTITLE", "Py_UNICODE_ISTITLE"], [62, 2, 1, "c.Py_UNICODE_ISUPPER", "Py_UNICODE_ISUPPER"], [62, 2, 1, "c.Py_UNICODE_IS_HIGH_SURROGATE", "Py_UNICODE_IS_HIGH_SURROGATE"], [62, 2, 1, "c.Py_UNICODE_IS_LOW_SURROGATE", "Py_UNICODE_IS_LOW_SURROGATE"], [62, 2, 1, "c.Py_UNICODE_IS_SURROGATE", "Py_UNICODE_IS_SURROGATE"], [62, 2, 1, "c.Py_UNICODE_JOIN_SURROGATES", "Py_UNICODE_JOIN_SURROGATES"], [62, 2, 1, "c.Py_UNICODE_TODECIMAL", "Py_UNICODE_TODECIMAL"], [62, 2, 1, "c.Py_UNICODE_TODIGIT", "Py_UNICODE_TODIGIT"], [62, 2, 1, "c.Py_UNICODE_TOLOWER", "Py_UNICODE_TOLOWER"], [62, 2, 1, "c.Py_UNICODE_TONUMERIC", "Py_UNICODE_TONUMERIC"], [62, 2, 1, "c.Py_UNICODE_TOTITLE", "Py_UNICODE_TOTITLE"], [62, 2, 1, "c.Py_UNICODE_TOUPPER", "Py_UNICODE_TOUPPER"], [34, 1, 1, "c.Py_UNREACHABLE", "Py_UNREACHABLE"], [34, 1, 1, "c.Py_UNUSED", "Py_UNUSED"], [32, 0, 1, "c.Py_UnbufferedStdioFlag", "Py_UnbufferedStdioFlag"], [28, 2, 1, "c.Py_VISIT", "Py_VISIT"], [5, 2, 1, "c.Py_VaBuildValue", "Py_VaBuildValue"], [32, 0, 1, "c.Py_VerboseFlag", "Py_VerboseFlag"], [4, 0, 1, "c.Py_Version", "Py_Version"], [50, 2, 1, "c.Py_XDECREF", "Py_XDECREF"], [50, 2, 1, "c.Py_XINCREF", "Py_XINCREF"], [50, 2, 1, "c.Py_XNewRef", "Py_XNewRef"], [50, 1, 1, "c.Py_XSETREF", "Py_XSETREF"], [7, 4, 1, "c.Py_buffer", "Py_buffer"], [15, 4, 1, "c.Py_complex", "Py_complex"], [64, 0, 1, "c.Py_eval_input", "Py_eval_input"], [64, 0, 1, "c.Py_file_input", "Py_file_input"], [44, 1, 1, "c.Py_mod_create", "Py_mod_create"], [44, 1, 1, "c.Py_mod_exec", "Py_mod_exec"], [44, 1, 1, "c.Py_mod_multiple_interpreters", "Py_mod_multiple_interpreters"], [64, 0, 1, "c.Py_single_input", "Py_single_input"], [34, 4, 1, "c.Py_ssize_t", "Py_ssize_t"], [32, 4, 1, "c.Py_tracefunc", "Py_tracefunc"], [32, 1, 1, "c.Py_tss_NEEDS_INIT", "Py_tss_NEEDS_INIT"], [32, 4, 1, "c.Py_tss_t", "Py_tss_t"], [56, 1, 1, "c.T_NONE", "T_NONE"], [56, 1, 1, "c.T_OBJECT", "T_OBJECT"], [9, 2, 1, "c._PyBytes_Resize", "_PyBytes_Resize"], [56, 4, 1, "c._PyCFunctionFast", "_PyCFunctionFast"], [56, 4, 1, "c._PyCFunctionFastWithKeywords", "_PyCFunctionFastWithKeywords"], [32, 4, 1, "c._PyFrameEvalFunction", "_PyFrameEvalFunction"], [26, 5, 1, "c._PyInterpreterFrame", "_PyInterpreterFrame"], [32, 2, 1, "c._PyInterpreterState_GetEvalFrameFunc", "_PyInterpreterState_GetEvalFrameFunc"], [32, 2, 1, "c._PyInterpreterState_SetEvalFrameFunc", "_PyInterpreterState_SetEvalFrameFunc"], [47, 2, 1, "c._PyObject_GetDictPtr", "_PyObject_GetDictPtr"], [3, 2, 1, "c._PyObject_New", "_PyObject_New"], [3, 2, 1, "c._PyObject_NewVar", "_PyObject_NewVar"], [58, 2, 1, "c._PyTuple_Resize", "_PyTuple_Resize"], [33, 2, 1, "c._Py_InitializeMain", "_Py_InitializeMain"], [3, 0, 1, "c._Py_NoneStruct", "_Py_NoneStruct"], [15, 2, 1, "c._Py_c_diff", "_Py_c_diff"], [15, 2, 1, "c._Py_c_neg", "_Py_c_neg"], [15, 2, 1, "c._Py_c_pow", "_Py_c_pow"], [15, 2, 1, "c._Py_c_prod", "_Py_c_prod"], [15, 2, 1, "c._Py_c_quot", "_Py_c_quot"], [15, 2, 1, "c._Py_c_sum", "_Py_c_sum"], [30, 5, 1, "c._frozen", "_frozen"], [30, 5, 1, "c._inittab", "_inittab"], [61, 4, 1, "c.allocfunc", "allocfunc"], [61, 4, 1, "c.binaryfunc", "binaryfunc"], [61, 4, 1, "c.descrgetfunc", "descrgetfunc"], [61, 4, 1, "c.descrsetfunc", "descrsetfunc"], [61, 4, 1, "c.destructor", "destructor"], [61, 4, 1, "c.freefunc", "freefunc"], [28, 4, 1, "c.gcvisitobjects_t", "gcvisitobjects_t"], [61, 4, 1, "c.getattrfunc", "getattrfunc"], [61, 4, 1, "c.getattrofunc", "getattrofunc"], [61, 4, 1, "c.getbufferproc", "getbufferproc"], [61, 4, 1, "c.getiterfunc", "getiterfunc"], [61, 4, 1, "c.hashfunc", "hashfunc"], [61, 4, 1, "c.initproc", "initproc"], [28, 4, 1, "c.inquiry", "inquiry"], [61, 4, 1, "c.iternextfunc", "iternextfunc"], [61, 4, 1, "c.lenfunc", "lenfunc"], [61, 4, 1, "c.newfunc", "newfunc"], [61, 4, 1, "c.objobjargproc", "objobjargproc"], [61, 4, 1, "c.objobjproc", "objobjproc"], [61, 4, 1, "c.releasebufferproc", "releasebufferproc"], [61, 4, 1, "c.reprfunc", "reprfunc"], [61, 4, 1, "c.richcmpfunc", "richcmpfunc"], [61, 4, 1, "c.sendfunc", "sendfunc"], [61, 4, 1, "c.setattrfunc", "setattrfunc"], [61, 4, 1, "c.setattrofunc", "setattrofunc"], [61, 4, 1, "c.ssizeargfunc", "ssizeargfunc"], [61, 4, 1, "c.ssizeobjargproc", "ssizeobjargproc"], [61, 4, 1, "c.ternaryfunc", "ternaryfunc"], [28, 4, 1, "c.traverseproc", "traverseproc"], [61, 4, 1, "c.unaryfunc", "unaryfunc"], [10, 4, 1, "c.vectorcallfunc", "vectorcallfunc"], [28, 4, 1, "c.visitproc", "visitproc"], [202, 6, 1, "", "ArithmeticError"], [202, 6, 1, "", "AssertionError"], [202, 6, 1, "", "AttributeError"], [202, 6, 1, "", "BaseException"], [202, 6, 1, "", "BaseExceptionGroup"], [202, 6, 1, "", "BlockingIOError"], [202, 6, 1, "", "BrokenPipeError"], [202, 6, 1, "", "BufferError"], [202, 6, 1, "", "BytesWarning"], [202, 6, 1, "", "ChildProcessError"], [202, 6, 1, "", "ConnectionAbortedError"], [202, 6, 1, "", "ConnectionError"], [202, 6, 1, "", "ConnectionRefusedError"], [202, 6, 1, "", "ConnectionResetError"], [202, 6, 1, "", "DeprecationWarning"], [202, 6, 1, "", "EOFError"], [158, 9, 1, "", "Ellipsis"], [202, 6, 1, "", "EncodingWarning"], [202, 6, 1, "", "EnvironmentError"], [202, 6, 1, "", "Exception"], [202, 6, 1, "", "ExceptionGroup"], [158, 9, 1, "", "False"], [202, 6, 1, "", "FileExistsError"], [202, 6, 1, "", "FileNotFoundError"], [202, 6, 1, "", "FloatingPointError"], [202, 6, 1, "", "FutureWarning"], [202, 6, 1, "", "GeneratorExit"], [202, 6, 1, "", "IOError"], [202, 6, 1, "", "ImportError"], [202, 6, 1, "", "ImportWarning"], [202, 6, 1, "", "IndentationError"], [202, 6, 1, "", "IndexError"], [202, 6, 1, "", "InterruptedError"], [202, 6, 1, "", "IsADirectoryError"], [202, 6, 1, "", "KeyError"], [202, 6, 1, "", "KeyboardInterrupt"], [202, 6, 1, "", "LookupError"], [202, 6, 1, "", "MemoryError"], [202, 6, 1, "", "ModuleNotFoundError"], [202, 6, 1, "", "NameError"], [158, 9, 1, "", "None"], [202, 6, 1, "", "NotADirectoryError"], [158, 9, 1, "", "NotImplemented"], [202, 6, 1, "", "NotImplementedError"], [202, 6, 1, "", "OSError"], [202, 6, 1, "", "OverflowError"], [202, 6, 1, "", "PendingDeprecationWarning"], [202, 6, 1, "", "PermissionError"], [202, 6, 1, "", "ProcessLookupError"], [202, 6, 1, "", "RecursionError"], [202, 6, 1, "", "ReferenceError"], [202, 6, 1, "", "ResourceWarning"], [202, 6, 1, "", "RuntimeError"], [202, 6, 1, "", "RuntimeWarning"], [202, 6, 1, "", "StopAsyncIteration"], [202, 6, 1, "", "StopIteration"], [202, 6, 1, "", "SyntaxError"], [202, 6, 1, "", "SyntaxWarning"], [202, 6, 1, "", "SystemError"], [202, 6, 1, "", "SystemExit"], [202, 6, 1, "", "TabError"], [202, 6, 1, "", "TimeoutError"], [158, 9, 1, "", "True"], [202, 6, 1, "", "TypeError"], [202, 6, 1, "", "UnboundLocalError"], [202, 6, 1, "", "UnicodeDecodeError"], [202, 6, 1, "", "UnicodeEncodeError"], [202, 6, 1, "", "UnicodeError"], [202, 6, 1, "", "UnicodeTranslateError"], [202, 6, 1, "", "UnicodeWarning"], [202, 6, 1, "", "UserWarning"], [202, 6, 1, "", "ValueError"], [202, 6, 1, "", "Warning"], [202, 6, 1, "", "WindowsError"], [202, 6, 1, "", "ZeroDivisionError"], [407, 7, 1, "cached__", "__cached__"], [158, 9, 1, "debug__", "__debug__"], [407, 7, 1, "file__", "__file__"], [108, 10, 0, "-", "__future__"], [214, 12, 1, "import__", "__import__"], [407, 7, 1, "loader__", "__loader__"], [109, 10, 0, "-", "__main__"], [407, 7, 1, "name__", "__name__"], [407, 7, 1, "package__", "__package__"], [407, 7, 1, "path__", "__path__"], [407, 7, 1, "spec__", "__spec__"], [110, 10, 0, "-", "_thread"], [111, 10, 0, "-", "abc"], [214, 12, 1, "", "abs"], [214, 12, 1, "", "aiter"], [214, 12, 1, "", "all"], [214, 12, 1, "", "anext"], [214, 12, 1, "", "any"], [114, 10, 0, "-", "argparse"], [115, 10, 0, "-", "array"], [214, 12, 1, "", "ascii"], [116, 10, 0, "-", "ast"], [117, 10, 0, "-", "asyncio"], [134, 10, 0, "-", "atexit"], [136, 10, 0, "-", "base64"], [137, 10, 0, "-", "bdb"], [214, 12, 1, "", "bin"], [139, 10, 0, "-", "binascii"], [140, 10, 0, "-", "bisect"], [214, 11, 1, "", "bool"], [214, 12, 1, "", "breakpoint"], [141, 10, 0, "-", "builtins"], [324, 11, 1, "", "bytearray"], [324, 11, 1, "", "bytes"], [142, 10, 0, "-", "bz2"], [290, 10, 0, "-", "cProfile"], [143, 10, 0, "-", "calendar"], [214, 12, 1, "", "callable"], [214, 12, 1, "", "chr"], [214, 12, 1, "", "classmethod"], [88, 10, 0, "-", "clinic"], [144, 10, 0, "-", "cmath"], [145, 10, 0, "-", "cmd"], [147, 10, 0, "-", "code"], [148, 10, 0, "-", "codecs"], [149, 10, 0, "-", "codeop"], [150, 10, 0, "-", "collections"], [152, 10, 0, "-", "colorsys"], [214, 12, 1, "", "compile"], [153, 10, 0, "-", "compileall"], [214, 11, 1, "", "complex"], [157, 10, 0, "-", "configparser"], [159, 10, 0, "-", "contextlib"], [160, 10, 0, "-", "contextvars"], [161, 10, 0, "-", "copy"], [162, 10, 0, "-", "copyreg"], [158, 9, 1, "", "copyright"], [158, 9, 1, "", "credits"], [164, 10, 0, "-", "csv"], [165, 10, 0, "-", "ctypes"], [166, 10, 0, "-", "curses"], [170, 10, 0, "-", "dataclasses"], [172, 10, 0, "-", "datetime"], [173, 10, 0, "-", "dbm"], [175, 10, 0, "-", "decimal"], [214, 12, 1, "", "delattr"], [324, 11, 1, "", "dict"], [179, 10, 0, "-", "difflib"], [214, 12, 1, "", "dir"], [180, 10, 0, "-", "dis"], [214, 12, 1, "", "divmod"], [182, 10, 0, "-", "doctest"], [183, 10, 0, "-", "email"], [199, 10, 0, "-", "ensurepip"], [200, 10, 0, "-", "enum"], [214, 12, 1, "", "enumerate"], [201, 10, 0, "-", "errno"], [214, 12, 1, "", "eval"], [214, 12, 1, "", "exec"], [158, 9, 1, "", "exit"], [203, 10, 0, "-", "faulthandler"], [204, 10, 0, "-", "fcntl"], [205, 10, 0, "-", "filecmp"], [207, 10, 0, "-", "fileinput"], [214, 12, 1, "", "filter"], [214, 11, 1, "", "float"], [209, 10, 0, "-", "fnmatch"], [214, 12, 1, "", "format"], [210, 10, 0, "-", "fractions"], [324, 11, 1, "", "frozenset"], [212, 10, 0, "-", "ftplib"], [215, 10, 0, "-", "functools"], [216, 10, 0, "-", "gc"], [214, 12, 1, "", "getattr"], [217, 10, 0, "-", "getopt"], [218, 10, 0, "-", "getpass"], [219, 10, 0, "-", "gettext"], [220, 10, 0, "-", "glob"], [214, 12, 1, "", "globals"], [221, 10, 0, "-", "graphlib"], [222, 10, 0, "-", "grp"], [223, 10, 0, "-", "gzip"], [214, 12, 1, "", "hasattr"], [214, 12, 1, "", "hash"], [224, 10, 0, "-", "hashlib"], [225, 10, 0, "-", "heapq"], [214, 12, 1, "", "help"], [214, 12, 1, "", "hex"], [226, 10, 0, "-", "hmac"], [227, 10, 0, "-", "html"], [230, 10, 0, "-", "http"], [214, 12, 1, "", "id"], [236, 10, 0, "-", "idlelib"], [237, 10, 0, "-", "imaplib"], [238, 10, 0, "-", "importlib"], [214, 12, 1, "", "input"], [243, 10, 0, "-", "inspect"], [214, 11, 1, "", "int"], [246, 10, 0, "-", "io"], [247, 10, 0, "-", "ipaddress"], [214, 12, 1, "", "isinstance"], [214, 12, 1, "", "issubclass"], [214, 12, 1, "", "iter"], [249, 10, 0, "-", "itertools"], [250, 10, 0, "-", "json"], [251, 10, 0, "-", "keyword"], [214, 12, 1, "", "len"], [158, 9, 1, "", "license"], [253, 10, 0, "-", "linecache"], [324, 11, 1, "", "list"], [254, 10, 0, "-", "locale"], [214, 12, 1, "", "locals"], [255, 10, 0, "-", "logging"], [258, 10, 0, "-", "lzma"], [259, 10, 0, "-", "mailbox"], [214, 12, 1, "", "map"], [261, 10, 0, "-", "marshal"], [262, 10, 0, "-", "math"], [214, 12, 1, "", "max"], [324, 11, 1, "", "memoryview"], [263, 10, 0, "-", "mimetypes"], [214, 12, 1, "", "min"], [265, 10, 0, "-", "mmap"], [266, 10, 0, "-", "modulefinder"], [268, 10, 0, "-", "msvcrt"], [269, 10, 0, "-", "multiprocessing"], [272, 10, 0, "-", "netrc"], [214, 12, 1, "", "next"], [273, 10, 0, "-", "numbers"], [214, 11, 1, "", "object"], [214, 12, 1, "", "oct"], [214, 12, 1, "", "open"], [275, 10, 0, "-", "operator"], [276, 10, 0, "-", "optparse"], [214, 12, 1, "", "ord"], [277, 10, 0, "-", "os"], [279, 10, 0, "-", "pathlib"], [280, 10, 0, "-", "pdb"], [282, 10, 0, "-", "pickle"], [283, 10, 0, "-", "pickletools"], [284, 10, 0, "-", "pkgutil"], [285, 10, 0, "-", "platform"], [286, 10, 0, "-", "plistlib"], [287, 10, 0, "-", "poplib"], [288, 10, 0, "-", "posix"], [214, 12, 1, "", "pow"], [289, 10, 0, "-", "pprint"], [214, 12, 1, "", "print"], [290, 10, 0, "-", "profile"], [214, 11, 1, "", "property"], [290, 10, 0, "-", "pstats"], [291, 10, 0, "-", "pty"], [292, 10, 0, "-", "pwd"], [293, 10, 0, "-", "py_compile"], [294, 10, 0, "-", "pyclbr"], [295, 10, 0, "-", "pydoc"], [298, 10, 0, "-", "queue"], [158, 9, 1, "", "quit"], [299, 10, 0, "-", "quopri"], [300, 10, 0, "-", "random"], [324, 11, 1, "", "range"], [301, 10, 0, "-", "re"], [302, 10, 0, "-", "readline"], [214, 12, 1, "", "repr"], [303, 10, 0, "-", "reprlib"], [304, 10, 0, "-", "resource"], [214, 12, 1, "", "reversed"], [305, 10, 0, "-", "rlcompleter"], [214, 12, 1, "", "round"], [306, 10, 0, "-", "runpy"], [307, 10, 0, "-", "sched"], [308, 10, 0, "-", "secrets"], [310, 10, 0, "-", "select"], [311, 10, 0, "-", "selectors"], [324, 11, 1, "", "set"], [214, 12, 1, "", "setattr"], [312, 10, 0, "-", "shelve"], [313, 10, 0, "-", "shlex"], [314, 10, 0, "-", "shutil"], [315, 10, 0, "-", "signal"], [316, 10, 0, "-", "site"], [214, 11, 1, "", "slice"], [317, 10, 0, "-", "smtplib"], [318, 10, 0, "-", "socket"], [319, 10, 0, "-", "socketserver"], [214, 12, 1, "", "sorted"], [320, 10, 0, "-", "sqlite3"], [321, 10, 0, "-", "ssl"], [322, 10, 0, "-", "stat"], [214, 12, 1, "", "staticmethod"], [323, 10, 0, "-", "statistics"], [324, 11, 1, "", "str"], [325, 10, 0, "-", "string"], [326, 10, 0, "-", "stringprep"], [327, 10, 0, "-", "struct"], [328, 10, 0, "-", "subprocess"], [214, 12, 1, "", "sum"], [214, 11, 1, "", "super"], [330, 10, 0, "-", "symtable"], [331, 10, 0, "-", "sys"], [334, 10, 0, "-", "sysconfig"], [335, 10, 0, "-", "syslog"], [336, 10, 0, "-", "tabnanny"], [337, 10, 0, "-", "tarfile"], [338, 10, 0, "-", "tempfile"], [339, 10, 0, "-", "termios"], [340, 10, 0, "-", "test"], [342, 10, 0, "-", "textwrap"], [343, 10, 0, "-", "threading"], [344, 10, 0, "-", "time"], [345, 10, 0, "-", "timeit"], [347, 10, 0, "-", "tkinter"], [354, 10, 0, "-", "token"], [355, 10, 0, "-", "tokenize"], [356, 10, 0, "-", "tomllib"], [357, 10, 0, "-", "trace"], [358, 10, 0, "-", "traceback"], [359, 10, 0, "-", "tracemalloc"], [360, 10, 0, "-", "tty"], [324, 11, 1, "", "tuple"], [361, 10, 0, "-", "turtle"], [361, 10, 0, "-", "turtledemo"], [214, 11, 1, "", "type"], [362, 10, 0, "-", "types"], [363, 10, 0, "-", "typing"], [364, 10, 0, "-", "unicodedata"], [365, 10, 0, "-", "unittest"], [369, 10, 0, "-", "urllib"], [374, 10, 0, "-", "uuid"], [214, 12, 1, "", "vars"], [375, 10, 0, "-", "venv"], [376, 10, 0, "-", "warnings"], [377, 10, 0, "-", "wave"], [378, 10, 0, "-", "weakref"], [379, 10, 0, "-", "webbrowser"], [381, 10, 0, "-", "winreg"], [382, 10, 0, "-", "winsound"], [383, 10, 0, "-", "wsgiref"], [384, 10, 0, "-", "xml"], [214, 12, 1, "", "zip"], [396, 10, 0, "-", "zipapp"], [397, 10, 0, "-", "zipfile"], [398, 10, 0, "-", "zipimport"], [399, 10, 0, "-", "zlib"], [400, 10, 0, "-", "zoneinfo"], [280, 13, 1, "pdbcommand-0", "!"], [431, 14, 1, "cmdoption-build", "--build"], [430, 14, 1, "cmdoption-check-hash-based-pycs", "--check-hash-based-pycs"], [431, 14, 1, "cmdoption-disable-gil", "--disable-gil"], [431, 14, 1, "cmdoption-disable-ipv6", "--disable-ipv6"], [431, 14, 1, "cmdoption-disable-test-modules", "--disable-test-modules"], [431, 14, 1, "cmdoption-enable-big-digits", "--enable-big-digits"], [431, 14, 1, "cmdoption-enable-bolt", "--enable-bolt"], [431, 14, 1, "cmdoption-enable-framework", "--enable-framework"], [431, 14, 1, "cmdoption-enable-loadable-sqlite-extensions", "--enable-loadable-sqlite-extensions"], [431, 14, 1, "cmdoption-enable-optimizations", "--enable-optimizations"], [431, 14, 1, "cmdoption-enable-profiling", "--enable-profiling"], [431, 14, 1, "cmdoption-enable-pystats", "--enable-pystats"], [431, 14, 1, "cmdoption-enable-shared", "--enable-shared"], [431, 14, 1, "cmdoption-enable-universalsdk", "--enable-universalsdk"], [431, 14, 1, "cmdoption-enable-wasm-dynamic-linking", "--enable-wasm-dynamic-linking"], [431, 14, 1, "cmdoption-enable-wasm-pthreads", "--enable-wasm-pthreads"], [431, 14, 1, "cmdoption-exec-prefix", "--exec-prefix"], [430, 14, 1, "cmdoption-help", "--help"], [430, 14, 1, "cmdoption-help-all", "--help-all"], [430, 14, 1, "cmdoption-help-env", "--help-env"], [430, 14, 1, "cmdoption-help-xoptions", "--help-xoptions"], [431, 14, 1, "cmdoption-host", "--host"], [431, 14, 1, "cmdoption-prefix", "--prefix"], [430, 14, 1, "cmdoption-version", "--version"], [431, 14, 1, "cmdoption-with-address-sanitizer", "--with-address-sanitizer"], [431, 14, 1, "cmdoption-with-assertions", "--with-assertions"], [431, 14, 1, "cmdoption-with-build-python", "--with-build-python"], [431, 14, 1, "cmdoption-with-builtin-hashlib-hashes", "--with-builtin-hashlib-hashes"], [431, 14, 1, "cmdoption-with-computed-gotos", "--with-computed-gotos"], [431, 14, 1, "cmdoption-with-dbmliborder", "--with-dbmliborder"], [431, 14, 1, "cmdoption-with-dtrace", "--with-dtrace"], [431, 14, 1, "cmdoption-with-emscripten-target", "--with-emscripten-target"], [431, 14, 1, "cmdoption-with-ensurepip", "--with-ensurepip"], [431, 14, 1, "cmdoption-with-framework-name", "--with-framework-name"], [431, 14, 1, "cmdoption-with-hash-algorithm", "--with-hash-algorithm"], [431, 14, 1, "cmdoption-with-libc", "--with-libc"], [431, 14, 1, "cmdoption-with-libm", "--with-libm"], [431, 14, 1, "cmdoption-with-libs", "--with-libs"], [431, 14, 1, "cmdoption-with-lto", "--with-lto"], [431, 14, 1, "cmdoption-with-memory-sanitizer", "--with-memory-sanitizer"], [431, 14, 1, "cmdoption-with-openssl", "--with-openssl"], [431, 14, 1, "cmdoption-with-openssl-rpath", "--with-openssl-rpath"], [431, 14, 1, "cmdoption-with-pkg-config", "--with-pkg-config"], [431, 14, 1, "cmdoption-with-platlibdir", "--with-platlibdir"], [431, 14, 1, "cmdoption-with-pydebug", "--with-pydebug"], [431, 14, 1, "cmdoption-with-readline", "--with-readline"], [431, 14, 1, "cmdoption-with-ssl-default-suites", "--with-ssl-default-suites"], [431, 14, 1, "cmdoption-with-strict-overflow", "--with-strict-overflow"], [431, 14, 1, "cmdoption-with-suffix", "--with-suffix"], [431, 14, 1, "cmdoption-with-system-expat", "--with-system-expat"], [431, 14, 1, "cmdoption-with-system-libmpdec", "--with-system-libmpdec"], [431, 14, 1, "cmdoption-with-trace-refs", "--with-trace-refs"], [431, 14, 1, "cmdoption-with-tzpath", "--with-tzpath"], [431, 14, 1, "cmdoption-with-undefined-behavior-sanitizer", "--with-undefined-behavior-sanitizer"], [431, 14, 1, "cmdoption-with-universal-archs", "--with-universal-archs"], [431, 14, 1, "cmdoption-with-valgrind", "--with-valgrind"], [431, 14, 1, "cmdoption-with-wheel-pkg-dir", "--with-wheel-pkg-dir"], [431, 14, 1, "cmdoption-without-c-locale-coercion", "--without-c-locale-coercion"], [431, 14, 1, "cmdoption-without-decimal-contextvar", "--without-decimal-contextvar"], [431, 14, 1, "cmdoption-without-doc-strings", "--without-doc-strings"], [431, 14, 1, "cmdoption-without-freelists", "--without-freelists"], [431, 14, 1, "cmdoption-without-pymalloc", "--without-pymalloc"], [431, 14, 1, "cmdoption-without-readline", "--without-readline"], [431, 14, 1, "cmdoption-without-static-libpython", "--without-static-libpython"], [430, 14, 1, "cmdoption-0", "-?"], [430, 14, 1, "cmdoption-B", "-B"], [430, 14, 1, "cmdoption-E", "-E"], [430, 14, 1, "cmdoption-I", "-I"], [430, 14, 1, "cmdoption-J", "-J"], [430, 14, 1, "cmdoption-O", "-O"], [430, 14, 1, "cmdoption-OO", "-OO"], [430, 14, 1, "cmdoption-P", "-P"], [430, 14, 1, "cmdoption-R", "-R"], [430, 14, 1, "cmdoption-S", "-S"], [430, 14, 1, "cmdoption-V", "-V"], [430, 14, 1, "cmdoption-W", "-W"], [430, 14, 1, "cmdoption-X", "-X"], [430, 14, 1, "cmdoption-b", "-b"], [430, 14, 1, "cmdoption-c", "-c"], [430, 14, 1, "cmdoption-d", "-d"], [430, 14, 1, "cmdoption-h", "-h"], [430, 14, 1, "cmdoption-i", "-i"], [430, 14, 1, "cmdoption-m", "-m"], [430, 14, 1, "cmdoption-q", "-q"], [430, 14, 1, "cmdoption-s", "-s"], [430, 14, 1, "cmdoption-u", "-u"], [430, 14, 1, "cmdoption-1", "-v"], [430, 14, 1, "cmdoption-x", "-x"], [431, 15, 1, "-", "BASECFLAGS"], [431, 15, 1, "-", "BASECPPFLAGS"], [180, 16, 1, "-", "BEFORE_ASYNC_WITH"], [180, 16, 1, "-", "BEFORE_WITH"], [180, 16, 1, "-", "BINARY_OP"], [180, 16, 1, "-", "BINARY_SLICE"], [180, 16, 1, "-", "BINARY_SUBSCR"], [431, 15, 1, "-", "BLDSHARED"], [431, 14, 1, "cmdoption-arg-BOLT_APPLY_FLAGS", "BOLT_APPLY_FLAGS"], [431, 14, 1, "cmdoption-arg-BOLT_INSTRUMENT_FLAGS", "BOLT_INSTRUMENT_FLAGS"], [180, 16, 1, "-", "BUILD_CONST_KEY_MAP"], [180, 16, 1, "-", "BUILD_LIST"], [180, 16, 1, "-", "BUILD_MAP"], [180, 16, 1, "-", "BUILD_SET"], [180, 16, 1, "-", "BUILD_SLICE"], [180, 16, 1, "-", "BUILD_STRING"], [180, 16, 1, "-", "BUILD_TUPLE"], [431, 14, 1, "cmdoption-arg-BZIP2_CFLAGS", "BZIP2_CFLAGS"], [431, 14, 1, "cmdoption-arg-BZIP2_LIBS", "BZIP2_LIBS"], [180, 16, 1, "-", "CACHE"], [180, 16, 1, "-", "CALL"], [180, 16, 1, "-", "CALL_FUNCTION_EX"], [180, 16, 1, "-", "CALL_INTRINSIC_1"], [180, 16, 1, "-", "CALL_INTRINSIC_2"], [180, 16, 1, "-", "CALL_KW"], [431, 14, 1, "cmdoption-arg-CC", "CC"], [431, 15, 1, "-", "CC"], [431, 15, 1, "-", "CCSHARED"], [431, 14, 1, "cmdoption-arg-CFLAGS", "CFLAGS"], [431, 15, 1, "-", "CFLAGS"], [431, 15, 1, "-", "CFLAGSFORSHARED"], [431, 15, 1, "-", "CFLAGS_ALIASING"], [431, 15, 1, "-", "CFLAGS_NODIST"], [180, 16, 1, "-", "CHECK_EG_MATCH"], [180, 16, 1, "-", "CHECK_EXC_MATCH"], [180, 16, 1, "-", "CLEANUP_THROW"], [180, 16, 1, "-", "COMPARE_OP"], [431, 15, 1, "-", "COMPILEALL_OPTS"], [431, 15, 1, "-", "CONFIGURE_CFLAGS"], [431, 15, 1, "-", "CONFIGURE_CFLAGS_NODIST"], [431, 15, 1, "-", "CONFIGURE_CPPFLAGS"], [431, 15, 1, "-", "CONFIGURE_LDFLAGS"], [431, 15, 1, "-", "CONFIGURE_LDFLAGS_NODIST"], [431, 14, 1, "cmdoption-arg-CONFIG_SITE", "CONFIG_SITE"], [180, 16, 1, "-", "CONTAINS_OP"], [180, 16, 1, "-", "CONVERT_VALUE"], [180, 16, 1, "-", "COPY"], [180, 16, 1, "-", "COPY_FREE_VARS"], [431, 14, 1, "cmdoption-arg-CPP", "CPP"], [431, 14, 1, "cmdoption-arg-CPPFLAGS", "CPPFLAGS"], [431, 15, 1, "-", "CPPFLAGS"], [431, 14, 1, "cmdoption-arg-CURSES_CFLAGS", "CURSES_CFLAGS"], [431, 14, 1, "cmdoption-arg-CURSES_LIBS", "CURSES_LIBS"], [431, 15, 1, "-", "CXX"], [180, 16, 1, "-", "DELETE_ATTR"], [180, 16, 1, "-", "DELETE_DEREF"], [180, 16, 1, "-", "DELETE_FAST"], [180, 16, 1, "-", "DELETE_GLOBAL"], [180, 16, 1, "-", "DELETE_NAME"], [180, 16, 1, "-", "DELETE_SUBSCR"], [180, 16, 1, "-", "DICT_MERGE"], [180, 16, 1, "-", "DICT_UPDATE"], [180, 16, 1, "-", "END_ASYNC_FOR"], [180, 16, 1, "-", "END_FOR"], [180, 16, 1, "-", "EXTENDED_ARG"], [431, 15, 1, "-", "EXTRA_CFLAGS"], [180, 16, 1, "-", "FORMAT_SIMPLE"], [180, 16, 1, "-", "FORMAT_SPEC"], [180, 16, 1, "-", "FOR_ITER"], [431, 14, 1, "cmdoption-arg-GDBM_CFLAGS", "GDBM_CFLAGS"], [431, 14, 1, "cmdoption-arg-GDBM_LIBS", "GDBM_LIBS"], [180, 16, 1, "-", "GET_AITER"], [180, 16, 1, "-", "GET_ANEXT"], [180, 16, 1, "-", "GET_AWAITABLE"], [180, 16, 1, "-", "GET_ITER"], [180, 16, 1, "-", "GET_LEN"], [180, 16, 1, "-", "GET_YIELD_FROM_ITER"], [180, 16, 1, "-", "HAVE_ARGUMENT"], [431, 14, 1, "cmdoption-arg-HOSTRUNNER", "HOSTRUNNER"], [180, 16, 1, "-", "IMPORT_FROM"], [180, 16, 1, "-", "IMPORT_NAME"], [180, 16, 1, "-", "IS_OP"], [180, 16, 1, "-", "JUMP"], [180, 16, 1, "-", "JUMP_BACKWARD"], [180, 16, 1, "-", "JUMP_BACKWARD_NO_INTERRUPT"], [180, 16, 1, "-", "JUMP_FORWARD"], [180, 16, 1, "-", "JUMP_NO_INTERRUPT"], [431, 14, 1, "cmdoption-arg-LDFLAGS", "LDFLAGS"], [431, 15, 1, "-", "LDFLAGS"], [431, 15, 1, "-", "LDFLAGS_NODIST"], [431, 15, 1, "-", "LDSHARED"], [431, 14, 1, "cmdoption-arg-LIBB2_CFLAGS", "LIBB2_CFLAGS"], [431, 14, 1, "cmdoption-arg-LIBB2_LIBS", "LIBB2_LIBS"], [431, 14, 1, "cmdoption-arg-LIBEDIT_CFLAGS", "LIBEDIT_CFLAGS"], [431, 14, 1, "cmdoption-arg-LIBEDIT_LIBS", "LIBEDIT_LIBS"], [431, 14, 1, "cmdoption-arg-LIBFFI_CFLAGS", "LIBFFI_CFLAGS"], [431, 14, 1, "cmdoption-arg-LIBFFI_LIBS", "LIBFFI_LIBS"], [431, 14, 1, "cmdoption-arg-LIBLZMA_CFLAGS", "LIBLZMA_CFLAGS"], [431, 14, 1, "cmdoption-arg-LIBLZMA_LIBS", "LIBLZMA_LIBS"], [431, 14, 1, "cmdoption-arg-LIBREADLINE_CFLAGS", "LIBREADLINE_CFLAGS"], [431, 14, 1, "cmdoption-arg-LIBREADLINE_LIBS", "LIBREADLINE_LIBS"], [431, 14, 1, "cmdoption-arg-LIBS", "LIBS"], [431, 15, 1, "-", "LIBS"], [431, 14, 1, "cmdoption-arg-LIBSQLITE3_CFLAGS", "LIBSQLITE3_CFLAGS"], [431, 14, 1, "cmdoption-arg-LIBSQLITE3_LIBS", "LIBSQLITE3_LIBS"], [431, 14, 1, "cmdoption-arg-LIBUUID_CFLAGS", "LIBUUID_CFLAGS"], [431, 14, 1, "cmdoption-arg-LIBUUID_LIBS", "LIBUUID_LIBS"], [431, 15, 1, "-", "LINKCC"], [180, 16, 1, "-", "LIST_APPEND"], [180, 16, 1, "-", "LIST_EXTEND"], [180, 16, 1, "-", "LOAD_ASSERTION_ERROR"], [180, 16, 1, "-", "LOAD_ATTR"], [180, 16, 1, "-", "LOAD_BUILD_CLASS"], [180, 16, 1, "-", "LOAD_CLOSURE"], [180, 16, 1, "-", "LOAD_CONST"], [180, 16, 1, "-", "LOAD_DEREF"], [180, 16, 1, "-", "LOAD_FAST"], [180, 16, 1, "-", "LOAD_FAST_AND_CLEAR"], [180, 16, 1, "-", "LOAD_FAST_CHECK"], [180, 16, 1, "-", "LOAD_FROM_DICT_OR_DEREF"], [180, 16, 1, "-", "LOAD_FROM_DICT_OR_GLOBALS"], [180, 16, 1, "-", "LOAD_GLOBAL"], [180, 16, 1, "-", "LOAD_LOCALS"], [180, 16, 1, "-", "LOAD_METHOD"], [180, 16, 1, "-", "LOAD_NAME"], [180, 16, 1, "-", "LOAD_SUPER_ATTR"], [431, 14, 1, "cmdoption-arg-MACHDEP", "MACHDEP"], [180, 16, 1, "-", "MAKE_CELL"], [180, 16, 1, "-", "MAKE_FUNCTION"], [180, 16, 1, "-", "MAP_ADD"], [180, 16, 1, "-", "MATCH_CLASS"], [180, 16, 1, "-", "MATCH_KEYS"], [180, 16, 1, "-", "MATCH_MAPPING"], [180, 16, 1, "-", "MATCH_SEQUENCE"], [180, 16, 1, "-", "NOP"], [431, 15, 1, "-", "OPT"], [431, 14, 1, "cmdoption-arg-PANEL_CFLAGS", "PANEL_CFLAGS"], [431, 14, 1, "cmdoption-arg-PANEL_LIBS", "PANEL_LIBS"], [431, 14, 1, "cmdoption-arg-PKG_CONFIG", "PKG_CONFIG"], [431, 14, 1, "cmdoption-arg-PKG_CONFIG_LIBDIR", "PKG_CONFIG_LIBDIR"], [431, 14, 1, "cmdoption-arg-PKG_CONFIG_PATH", "PKG_CONFIG_PATH"], [180, 16, 1, "-", "POP_BLOCK"], [180, 16, 1, "-", "POP_EXCEPT"], [180, 16, 1, "-", "POP_JUMP_IF_FALSE"], [180, 16, 1, "-", "POP_JUMP_IF_NONE"], [180, 16, 1, "-", "POP_JUMP_IF_NOT_NONE"], [180, 16, 1, "-", "POP_JUMP_IF_TRUE"], [180, 16, 1, "-", "POP_TOP"], [431, 15, 1, "-", "PROFILE_TASK"], [431, 15, 1, "-", "PURIFY"], [180, 16, 1, "-", "PUSH_EXC_INFO"], [180, 16, 1, "-", "PUSH_NULL"], [430, 15, 1, "-", "PYTHONASYNCIODEBUG"], [430, 15, 1, "-", "PYTHONBREAKPOINT"], [430, 15, 1, "-", "PYTHONCASEOK"], [430, 15, 1, "-", "PYTHONCOERCECLOCALE"], [430, 15, 1, "-", "PYTHONDEBUG"], [430, 15, 1, "-", "PYTHONDEVMODE"], [430, 15, 1, "-", "PYTHONDONTWRITEBYTECODE"], [430, 15, 1, "-", "PYTHONDUMPREFS"], [430, 15, 1, "envvar-PYTHONDUMPREFSFILE-FILENAME", "PYTHONDUMPREFSFILE=FILENAME"], [430, 15, 1, "-", "PYTHONEXECUTABLE"], [430, 15, 1, "-", "PYTHONFAULTHANDLER"], [430, 15, 1, "-", "PYTHONHASHSEED"], [430, 15, 1, "-", "PYTHONHOME"], [430, 15, 1, "-", "PYTHONINSPECT"], [430, 15, 1, "-", "PYTHONINTMAXSTRDIGITS"], [430, 15, 1, "-", "PYTHONIOENCODING"], [430, 15, 1, "-", "PYTHONLEGACYWINDOWSFSENCODING"], [430, 15, 1, "-", "PYTHONLEGACYWINDOWSSTDIO"], [430, 15, 1, "-", "PYTHONMALLOC"], [430, 15, 1, "-", "PYTHONMALLOCSTATS"], [430, 15, 1, "-", "PYTHONNODEBUGRANGES"], [430, 15, 1, "-", "PYTHONNOUSERSITE"], [430, 15, 1, "-", "PYTHONOPTIMIZE"], [430, 15, 1, "-", "PYTHONPATH"], [430, 15, 1, "-", "PYTHONPERFSUPPORT"], [430, 15, 1, "-", "PYTHONPLATLIBDIR"], [430, 15, 1, "-", "PYTHONPROFILEIMPORTTIME"], [430, 15, 1, "-", "PYTHONPYCACHEPREFIX"], [430, 15, 1, "-", "PYTHONSAFEPATH"], [430, 15, 1, "-", "PYTHONSTARTUP"], [430, 15, 1, "-", "PYTHONTRACEMALLOC"], [400, 15, 1, "-", "PYTHONTZPATH"], [430, 15, 1, "-", "PYTHONUNBUFFERED"], [430, 15, 1, "-", "PYTHONUSERBASE"], [430, 15, 1, "-", "PYTHONUTF8"], [430, 15, 1, "-", "PYTHONVERBOSE"], [430, 15, 1, "-", "PYTHONWARNDEFAULTENCODING"], [430, 15, 1, "-", "PYTHONWARNINGS"], [431, 15, 1, "-", "PY_BUILTIN_MODULE_CFLAGS"], [431, 15, 1, "-", "PY_CFLAGS"], [431, 15, 1, "-", "PY_CFLAGS_NODIST"], [431, 15, 1, "-", "PY_CORE_CFLAGS"], [431, 15, 1, "-", "PY_CORE_LDFLAGS"], [431, 15, 1, "-", "PY_CPPFLAGS"], [431, 15, 1, "-", "PY_LDFLAGS"], [431, 15, 1, "-", "PY_LDFLAGS_NODIST"], [431, 15, 1, "-", "PY_STDMODULE_CFLAGS"], [180, 16, 1, "-", "RAISE_VARARGS"], [180, 16, 1, "-", "RERAISE"], [180, 16, 1, "-", "RESUME"], [180, 16, 1, "-", "RETURN_CONST"], [180, 16, 1, "-", "RETURN_GENERATOR"], [180, 16, 1, "-", "RETURN_VALUE"], [180, 16, 1, "-", "SEND"], [180, 16, 1, "-", "SETUP_ANNOTATIONS"], [180, 16, 1, "-", "SETUP_CLEANUP"], [180, 16, 1, "-", "SETUP_FINALLY"], [180, 16, 1, "-", "SETUP_WITH"], [180, 16, 1, "-", "SET_ADD"], [180, 16, 1, "-", "SET_FUNCTION_ATTRIBUTE"], [180, 16, 1, "-", "SET_UPDATE"], [180, 16, 1, "-", "STORE_ATTR"], [180, 16, 1, "-", "STORE_DEREF"], [180, 16, 1, "-", "STORE_FAST"], [180, 16, 1, "-", "STORE_GLOBAL"], [180, 16, 1, "-", "STORE_NAME"], [180, 16, 1, "-", "STORE_SLICE"], [180, 16, 1, "-", "STORE_SUBSCR"], [180, 16, 1, "-", "SWAP"], [431, 14, 1, "cmdoption-arg-TCLTK_CFLAGS", "TCLTK_CFLAGS"], [431, 14, 1, "cmdoption-arg-TCLTK_LIBS", "TCLTK_LIBS"], [180, 16, 1, "-", "TO_BOOL"], [180, 16, 1, "-", "UNARY_INVERT"], [180, 16, 1, "-", "UNARY_NEGATIVE"], [180, 16, 1, "-", "UNARY_NOT"], [180, 16, 1, "-", "UNPACK_EX"], [180, 16, 1, "-", "UNPACK_SEQUENCE"], [180, 16, 1, "-", "WITH_EXCEPT_START"], [180, 16, 1, "-", "YIELD_VALUE"], [431, 14, 1, "cmdoption-arg-ZLIB_CFLAGS", "ZLIB_CFLAGS"], [431, 14, 1, "cmdoption-arg-ZLIB_LIBS", "ZLIB_LIBS"], [280, 13, 1, "-", "alias"], [280, 13, 1, "-", "args"], [280, 13, 1, "-", "break"], [280, 13, 1, "-", "clear"], [280, 13, 1, "-", "commands"], [280, 13, 1, "-", "condition"], [280, 13, 1, "-", "continue"], [280, 13, 1, "-", "debug"], [280, 13, 1, "-", "disable"], [280, 13, 1, "-", "display"], [280, 13, 1, "-", "down"], [280, 13, 1, "-", "enable"], [280, 13, 1, "-", "exceptions"], [280, 13, 1, "-", "help"], [280, 13, 1, "-", "ignore"], [280, 13, 1, "-", "interact"], [280, 13, 1, "-", "jump"], [280, 13, 1, "-", "list"], [280, 13, 1, "-", "ll"], [280, 13, 1, "-", "next"], [280, 13, 1, "-", "p"], [280, 13, 1, "-", "pp"], [280, 13, 1, "-", "quit"], [280, 13, 1, "-", "restart"], [280, 13, 1, "-", "return"], [280, 13, 1, "-", "retval"], [280, 13, 1, "-", "run"], [280, 13, 1, "-", "source"], [280, 13, 1, "-", "step"], [280, 13, 1, "-", "tbreak"], [280, 13, 1, "-", "unalias"], [280, 13, 1, "-", "undisplay"], [280, 13, 1, "-", "until"], [280, 13, 1, "-", "up"], [280, 13, 1, "-", "whatis"], [280, 13, 1, "-", "where"]], "PyAIter_Check": [[35, 3, 1, "c.PyAIter_Check", "o"]], "PyAnySet_Check": [[53, 3, 1, "c.PyAnySet_Check", "p"]], "PyAnySet_CheckExact": [[53, 3, 1, "c.PyAnySet_CheckExact", "p"]], "PyArg_Parse": [[5, 3, 1, "c.PyArg_Parse", "args"], [5, 3, 1, "c.PyArg_Parse", "format"]], "PyArg_ParseTuple": [[5, 3, 1, "c.PyArg_ParseTuple", "args"], [5, 3, 1, "c.PyArg_ParseTuple", "format"]], "PyArg_ParseTupleAndKeywords": [[5, 3, 1, "c.PyArg_ParseTupleAndKeywords", "args"], [5, 3, 1, "c.PyArg_ParseTupleAndKeywords", "format"], [5, 3, 1, "c.PyArg_ParseTupleAndKeywords", "keywords"], [5, 3, 1, "c.PyArg_ParseTupleAndKeywords", "kw"]], "PyArg_UnpackTuple": [[5, 3, 1, "c.PyArg_UnpackTuple", "args"], [5, 3, 1, "c.PyArg_UnpackTuple", "max"], [5, 3, 1, "c.PyArg_UnpackTuple", "min"], [5, 3, 1, "c.PyArg_UnpackTuple", "name"]], "PyArg_VaParse": [[5, 3, 1, "c.PyArg_VaParse", "args"], [5, 3, 1, "c.PyArg_VaParse", "format"], [5, 3, 1, "c.PyArg_VaParse", "vargs"]], "PyArg_VaParseTupleAndKeywords": [[5, 3, 1, "c.PyArg_VaParseTupleAndKeywords", "args"], [5, 3, 1, "c.PyArg_VaParseTupleAndKeywords", "format"], [5, 3, 1, "c.PyArg_VaParseTupleAndKeywords", "keywords"], [5, 3, 1, "c.PyArg_VaParseTupleAndKeywords", "kw"], [5, 3, 1, "c.PyArg_VaParseTupleAndKeywords", "vargs"]], "PyAsyncMethods": [[61, 0, 1, "c.PyAsyncMethods.am_aiter", "am_aiter"], [61, 0, 1, "c.PyAsyncMethods.am_anext", "am_anext"], [61, 0, 1, "c.PyAsyncMethods.am_await", "am_await"], [61, 0, 1, "c.PyAsyncMethods.am_send", "am_send"]], "PyBool_Check": [[6, 3, 1, "c.PyBool_Check", "o"]], "PyBool_FromLong": [[6, 3, 1, "c.PyBool_FromLong", "v"]], "PyBufferProcs": [[61, 0, 1, "c.PyBufferProcs.bf_getbuffer", "bf_getbuffer"], [61, 0, 1, "c.PyBufferProcs.bf_releasebuffer", "bf_releasebuffer"]], "PyBuffer_FillContiguousStrides": [[7, 3, 1, "c.PyBuffer_FillContiguousStrides", "itemsize"], [7, 3, 1, "c.PyBuffer_FillContiguousStrides", "ndims"], [7, 3, 1, "c.PyBuffer_FillContiguousStrides", "order"], [7, 3, 1, "c.PyBuffer_FillContiguousStrides", "shape"], [7, 3, 1, "c.PyBuffer_FillContiguousStrides", "strides"]], "PyBuffer_FillInfo": [[7, 3, 1, "c.PyBuffer_FillInfo", "buf"], [7, 3, 1, "c.PyBuffer_FillInfo", "exporter"], [7, 3, 1, "c.PyBuffer_FillInfo", "flags"], [7, 3, 1, "c.PyBuffer_FillInfo", "len"], [7, 3, 1, "c.PyBuffer_FillInfo", "readonly"], [7, 3, 1, "c.PyBuffer_FillInfo", "view"]], "PyBuffer_FromContiguous": [[7, 3, 1, "c.PyBuffer_FromContiguous", "buf"], [7, 3, 1, "c.PyBuffer_FromContiguous", "fort"], [7, 3, 1, "c.PyBuffer_FromContiguous", "len"], [7, 3, 1, "c.PyBuffer_FromContiguous", "view"]], "PyBuffer_GetPointer": [[7, 3, 1, "c.PyBuffer_GetPointer", "indices"], [7, 3, 1, "c.PyBuffer_GetPointer", "view"]], "PyBuffer_IsContiguous": [[7, 3, 1, "c.PyBuffer_IsContiguous", "order"], [7, 3, 1, "c.PyBuffer_IsContiguous", "view"]], "PyBuffer_Release": [[7, 3, 1, "c.PyBuffer_Release", "view"]], "PyBuffer_SizeFromFormat": [[7, 3, 1, "c.PyBuffer_SizeFromFormat", "format"]], "PyBuffer_ToContiguous": [[7, 3, 1, "c.PyBuffer_ToContiguous", "buf"], [7, 3, 1, "c.PyBuffer_ToContiguous", "len"], [7, 3, 1, "c.PyBuffer_ToContiguous", "order"], [7, 3, 1, "c.PyBuffer_ToContiguous", "src"]], "PyByteArray_AS_STRING": [[8, 3, 1, "c.PyByteArray_AS_STRING", "bytearray"]], "PyByteArray_AsString": [[8, 3, 1, "c.PyByteArray_AsString", "bytearray"]], "PyByteArray_Check": [[8, 3, 1, "c.PyByteArray_Check", "o"]], "PyByteArray_CheckExact": [[8, 3, 1, "c.PyByteArray_CheckExact", "o"]], "PyByteArray_Concat": [[8, 3, 1, "c.PyByteArray_Concat", "a"], [8, 3, 1, "c.PyByteArray_Concat", "b"]], "PyByteArray_FromObject": [[8, 3, 1, "c.PyByteArray_FromObject", "o"]], "PyByteArray_FromStringAndSize": [[8, 3, 1, "c.PyByteArray_FromStringAndSize", "len"], [8, 3, 1, "c.PyByteArray_FromStringAndSize", "string"]], "PyByteArray_GET_SIZE": [[8, 3, 1, "c.PyByteArray_GET_SIZE", "bytearray"]], "PyByteArray_Resize": [[8, 3, 1, "c.PyByteArray_Resize", "bytearray"], [8, 3, 1, "c.PyByteArray_Resize", "len"]], "PyByteArray_Size": [[8, 3, 1, "c.PyByteArray_Size", "bytearray"]], "PyBytes_AS_STRING": [[9, 3, 1, "c.PyBytes_AS_STRING", "string"]], "PyBytes_AsString": [[9, 3, 1, "c.PyBytes_AsString", "o"]], "PyBytes_AsStringAndSize": [[9, 3, 1, "c.PyBytes_AsStringAndSize", "buffer"], [9, 3, 1, "c.PyBytes_AsStringAndSize", "length"], [9, 3, 1, "c.PyBytes_AsStringAndSize", "obj"]], "PyBytes_Check": [[9, 3, 1, "c.PyBytes_Check", "o"]], "PyBytes_CheckExact": [[9, 3, 1, "c.PyBytes_CheckExact", "o"]], "PyBytes_Concat": [[9, 3, 1, "c.PyBytes_Concat", "bytes"], [9, 3, 1, "c.PyBytes_Concat", "newpart"]], "PyBytes_ConcatAndDel": [[9, 3, 1, "c.PyBytes_ConcatAndDel", "bytes"], [9, 3, 1, "c.PyBytes_ConcatAndDel", "newpart"]], "PyBytes_FromFormat": [[9, 3, 1, "c.PyBytes_FromFormat", "format"]], "PyBytes_FromFormatV": [[9, 3, 1, "c.PyBytes_FromFormatV", "format"], [9, 3, 1, "c.PyBytes_FromFormatV", "vargs"]], "PyBytes_FromObject": [[9, 3, 1, "c.PyBytes_FromObject", "o"]], "PyBytes_FromString": [[9, 3, 1, "c.PyBytes_FromString", "v"]], "PyBytes_FromStringAndSize": [[9, 3, 1, "c.PyBytes_FromStringAndSize", "len"], [9, 3, 1, "c.PyBytes_FromStringAndSize", "v"]], "PyBytes_GET_SIZE": [[9, 3, 1, "c.PyBytes_GET_SIZE", "o"]], "PyBytes_Size": [[9, 3, 1, "c.PyBytes_Size", "o"]], "PyCallIter_Check": [[36, 3, 1, "c.PyCallIter_Check", "op"]], "PyCallIter_New": [[36, 3, 1, "c.PyCallIter_New", "callable"], [36, 3, 1, "c.PyCallIter_New", "sentinel"]], "PyCallable_Check": [[10, 3, 1, "c.PyCallable_Check", "o"]], "PyCapsule_CheckExact": [[11, 3, 1, "c.PyCapsule_CheckExact", "p"]], "PyCapsule_GetContext": [[11, 3, 1, "c.PyCapsule_GetContext", "capsule"]], "PyCapsule_GetDestructor": [[11, 3, 1, "c.PyCapsule_GetDestructor", "capsule"]], "PyCapsule_GetName": [[11, 3, 1, "c.PyCapsule_GetName", "capsule"]], "PyCapsule_GetPointer": [[11, 3, 1, "c.PyCapsule_GetPointer", "capsule"], [11, 3, 1, "c.PyCapsule_GetPointer", "name"]], "PyCapsule_Import": [[11, 3, 1, "c.PyCapsule_Import", "name"], [11, 3, 1, "c.PyCapsule_Import", "no_block"]], "PyCapsule_IsValid": [[11, 3, 1, "c.PyCapsule_IsValid", "capsule"], [11, 3, 1, "c.PyCapsule_IsValid", "name"]], "PyCapsule_New": [[11, 3, 1, "c.PyCapsule_New", "destructor"], [11, 3, 1, "c.PyCapsule_New", "name"], [11, 3, 1, "c.PyCapsule_New", "pointer"]], "PyCapsule_SetContext": [[11, 3, 1, "c.PyCapsule_SetContext", "capsule"], [11, 3, 1, "c.PyCapsule_SetContext", "context"]], "PyCapsule_SetDestructor": [[11, 3, 1, "c.PyCapsule_SetDestructor", "capsule"], [11, 3, 1, "c.PyCapsule_SetDestructor", "destructor"]], "PyCapsule_SetName": [[11, 3, 1, "c.PyCapsule_SetName", "capsule"], [11, 3, 1, "c.PyCapsule_SetName", "name"]], "PyCapsule_SetPointer": [[11, 3, 1, "c.PyCapsule_SetPointer", "capsule"], [11, 3, 1, "c.PyCapsule_SetPointer", "pointer"]], "PyCell_Check": [[12, 3, 1, "c.PyCell_Check", "ob"]], "PyCell_GET": [[12, 3, 1, "c.PyCell_GET", "cell"]], "PyCell_Get": [[12, 3, 1, "c.PyCell_Get", "cell"]], "PyCell_New": [[12, 3, 1, "c.PyCell_New", "ob"]], "PyCell_SET": [[12, 3, 1, "c.PyCell_SET", "cell"], [12, 3, 1, "c.PyCell_SET", "value"]], "PyCell_Set": [[12, 3, 1, "c.PyCell_Set", "cell"], [12, 3, 1, "c.PyCell_Set", "value"]], "PyCode_AddWatcher": [[13, 3, 1, "c.PyCode_AddWatcher", "callback"]], "PyCode_Addr2Line": [[13, 3, 1, "c.PyCode_Addr2Line", "byte_offset"], [13, 3, 1, "c.PyCode_Addr2Line", "co"]], "PyCode_Addr2Location": [[13, 3, 1, "c.PyCode_Addr2Location", "byte_offset"], [13, 3, 1, "c.PyCode_Addr2Location", "co"], [13, 3, 1, "c.PyCode_Addr2Location", "end_column"], [13, 3, 1, "c.PyCode_Addr2Location", "end_line"], [13, 3, 1, "c.PyCode_Addr2Location", "start_column"], [13, 3, 1, "c.PyCode_Addr2Location", "start_line"]], "PyCode_Check": [[13, 3, 1, "c.PyCode_Check", "co"]], "PyCode_ClearWatcher": [[13, 3, 1, "c.PyCode_ClearWatcher", "watcher_id"]], "PyCode_GetCellvars": [[13, 3, 1, "c.PyCode_GetCellvars", "co"]], "PyCode_GetCode": [[13, 3, 1, "c.PyCode_GetCode", "co"]], "PyCode_GetFreevars": [[13, 3, 1, "c.PyCode_GetFreevars", "co"]], "PyCode_GetNumFree": [[13, 3, 1, "c.PyCode_GetNumFree", "co"]], "PyCode_GetVarnames": [[13, 3, 1, "c.PyCode_GetVarnames", "co"]], "PyCode_NewEmpty": [[13, 3, 1, "c.PyCode_NewEmpty", "filename"], [13, 3, 1, "c.PyCode_NewEmpty", "firstlineno"], [13, 3, 1, "c.PyCode_NewEmpty", "funcname"]], "PyCodec_BackslashReplaceErrors": [[14, 3, 1, "c.PyCodec_BackslashReplaceErrors", "exc"]], "PyCodec_Decode": [[14, 3, 1, "c.PyCodec_Decode", "encoding"], [14, 3, 1, "c.PyCodec_Decode", "errors"], [14, 3, 1, "c.PyCodec_Decode", "object"]], "PyCodec_Decoder": [[14, 3, 1, "c.PyCodec_Decoder", "encoding"]], "PyCodec_Encode": [[14, 3, 1, "c.PyCodec_Encode", "encoding"], [14, 3, 1, "c.PyCodec_Encode", "errors"], [14, 3, 1, "c.PyCodec_Encode", "object"]], "PyCodec_Encoder": [[14, 3, 1, "c.PyCodec_Encoder", "encoding"]], "PyCodec_IgnoreErrors": [[14, 3, 1, "c.PyCodec_IgnoreErrors", "exc"]], "PyCodec_IncrementalDecoder": [[14, 3, 1, "c.PyCodec_IncrementalDecoder", "encoding"], [14, 3, 1, "c.PyCodec_IncrementalDecoder", "errors"]], "PyCodec_IncrementalEncoder": [[14, 3, 1, "c.PyCodec_IncrementalEncoder", "encoding"], [14, 3, 1, "c.PyCodec_IncrementalEncoder", "errors"]], "PyCodec_KnownEncoding": [[14, 3, 1, "c.PyCodec_KnownEncoding", "encoding"]], "PyCodec_LookupError": [[14, 3, 1, "c.PyCodec_LookupError", "name"]], "PyCodec_NameReplaceErrors": [[14, 3, 1, "c.PyCodec_NameReplaceErrors", "exc"]], "PyCodec_Register": [[14, 3, 1, "c.PyCodec_Register", "search_function"]], "PyCodec_RegisterError": [[14, 3, 1, "c.PyCodec_RegisterError", "error"], [14, 3, 1, "c.PyCodec_RegisterError", "name"]], "PyCodec_ReplaceErrors": [[14, 3, 1, "c.PyCodec_ReplaceErrors", "exc"]], "PyCodec_StreamReader": [[14, 3, 1, "c.PyCodec_StreamReader", "encoding"], [14, 3, 1, "c.PyCodec_StreamReader", "errors"], [14, 3, 1, "c.PyCodec_StreamReader", "stream"]], "PyCodec_StreamWriter": [[14, 3, 1, "c.PyCodec_StreamWriter", "encoding"], [14, 3, 1, "c.PyCodec_StreamWriter", "errors"], [14, 3, 1, "c.PyCodec_StreamWriter", "stream"]], "PyCodec_StrictErrors": [[14, 3, 1, "c.PyCodec_StrictErrors", "exc"]], "PyCodec_Unregister": [[14, 3, 1, "c.PyCodec_Unregister", "search_function"]], "PyCodec_XMLCharRefReplaceErrors": [[14, 3, 1, "c.PyCodec_XMLCharRefReplaceErrors", "exc"]], "PyCompilerFlags": [[64, 0, 1, "c.PyCompilerFlags.cf_feature_version", "cf_feature_version"], [64, 0, 1, "c.PyCompilerFlags.cf_flags", "cf_flags"]], "PyComplex_AsCComplex": [[15, 3, 1, "c.PyComplex_AsCComplex", "op"]], "PyComplex_Check": [[15, 3, 1, "c.PyComplex_Check", "p"]], "PyComplex_CheckExact": [[15, 3, 1, "c.PyComplex_CheckExact", "p"]], "PyComplex_FromCComplex": [[15, 3, 1, "c.PyComplex_FromCComplex", "v"]], "PyComplex_FromDoubles": [[15, 3, 1, "c.PyComplex_FromDoubles", "imag"], [15, 3, 1, "c.PyComplex_FromDoubles", "real"]], "PyComplex_ImagAsDouble": [[15, 3, 1, "c.PyComplex_ImagAsDouble", "op"]], "PyComplex_RealAsDouble": [[15, 3, 1, "c.PyComplex_RealAsDouble", "op"]], "PyConfig": [[33, 0, 1, "c.PyConfig.argv", "argv"], [33, 0, 1, "c.PyConfig.base_exec_prefix", "base_exec_prefix"], [33, 0, 1, "c.PyConfig.base_executable", "base_executable"], [33, 0, 1, "c.PyConfig.base_prefix", "base_prefix"], [33, 0, 1, "c.PyConfig.buffered_stdio", "buffered_stdio"], [33, 0, 1, "c.PyConfig.bytes_warning", "bytes_warning"], [33, 0, 1, "c.PyConfig.check_hash_pycs_mode", "check_hash_pycs_mode"], [33, 0, 1, "c.PyConfig.code_debug_ranges", "code_debug_ranges"], [33, 0, 1, "c.PyConfig.configure_c_stdio", "configure_c_stdio"], [33, 0, 1, "c.PyConfig.dev_mode", "dev_mode"], [33, 0, 1, "c.PyConfig.dump_refs", "dump_refs"], [33, 0, 1, "c.PyConfig.exec_prefix", "exec_prefix"], [33, 0, 1, "c.PyConfig.executable", "executable"], [33, 0, 1, "c.PyConfig.faulthandler", "faulthandler"], [33, 0, 1, "c.PyConfig.filesystem_encoding", "filesystem_encoding"], [33, 0, 1, "c.PyConfig.filesystem_errors", "filesystem_errors"], [33, 0, 1, "c.PyConfig.hash_seed", "hash_seed"], [33, 0, 1, "c.PyConfig.home", "home"], [33, 0, 1, "c.PyConfig.import_time", "import_time"], [33, 0, 1, "c.PyConfig.inspect", "inspect"], [33, 0, 1, "c.PyConfig.install_signal_handlers", "install_signal_handlers"], [33, 0, 1, "c.PyConfig.int_max_str_digits", "int_max_str_digits"], [33, 0, 1, "c.PyConfig.interactive", "interactive"], [33, 0, 1, "c.PyConfig.isolated", "isolated"], [33, 0, 1, "c.PyConfig.legacy_windows_stdio", "legacy_windows_stdio"], [33, 0, 1, "c.PyConfig.malloc_stats", "malloc_stats"], [33, 0, 1, "c.PyConfig.module_search_paths", "module_search_paths"], [33, 0, 1, "c.PyConfig.module_search_paths_set", "module_search_paths_set"], [33, 0, 1, "c.PyConfig.optimization_level", "optimization_level"], [33, 0, 1, "c.PyConfig.orig_argv", "orig_argv"], [33, 0, 1, "c.PyConfig.parse_argv", "parse_argv"], [33, 0, 1, "c.PyConfig.parser_debug", "parser_debug"], [33, 0, 1, "c.PyConfig.pathconfig_warnings", "pathconfig_warnings"], [33, 0, 1, "c.PyConfig.perf_profiling", "perf_profiling"], [33, 0, 1, "c.PyConfig.platlibdir", "platlibdir"], [33, 0, 1, "c.PyConfig.prefix", "prefix"], [33, 0, 1, "c.PyConfig.program_name", "program_name"], [33, 0, 1, "c.PyConfig.pycache_prefix", "pycache_prefix"], [33, 0, 1, "c.PyConfig.pythonpath_env", "pythonpath_env"], [33, 0, 1, "c.PyConfig.quiet", "quiet"], [33, 0, 1, "c.PyConfig.run_command", "run_command"], [33, 0, 1, "c.PyConfig.run_filename", "run_filename"], [33, 0, 1, "c.PyConfig.run_module", "run_module"], [33, 0, 1, "c.PyConfig.safe_path", "safe_path"], [33, 0, 1, "c.PyConfig.show_ref_count", "show_ref_count"], [33, 0, 1, "c.PyConfig.site_import", "site_import"], [33, 0, 1, "c.PyConfig.skip_source_first_line", "skip_source_first_line"], [33, 0, 1, "c.PyConfig.stdio_encoding", "stdio_encoding"], [33, 0, 1, "c.PyConfig.stdio_errors", "stdio_errors"], [33, 0, 1, "c.PyConfig.tracemalloc", "tracemalloc"], [33, 0, 1, "c.PyConfig.use_environment", "use_environment"], [33, 0, 1, "c.PyConfig.use_hash_seed", "use_hash_seed"], [33, 0, 1, "c.PyConfig.user_site_directory", "user_site_directory"], [33, 0, 1, "c.PyConfig.verbose", "verbose"], [33, 0, 1, "c.PyConfig.warn_default_encoding", "warn_default_encoding"], [33, 0, 1, "c.PyConfig.warnoptions", "warnoptions"], [33, 0, 1, "c.PyConfig.write_bytecode", "write_bytecode"], [33, 0, 1, "c.PyConfig.xoptions", "xoptions"]], "PyConfig_Clear": [[33, 3, 1, "c.PyConfig_Clear", "config"]], "PyConfig_InitIsolatedConfig": [[33, 3, 1, "c.PyConfig_InitIsolatedConfig", "config"]], "PyConfig_InitPythonConfig": [[33, 3, 1, "c.PyConfig_InitPythonConfig", "config"]], "PyConfig_Read": [[33, 3, 1, "c.PyConfig_Read", "config"]], "PyConfig_SetArgv": [[33, 3, 1, "c.PyConfig_SetArgv", "argc"], [33, 3, 1, "c.PyConfig_SetArgv", "argv"], [33, 3, 1, "c.PyConfig_SetArgv", "config"]], "PyConfig_SetBytesArgv": [[33, 3, 1, "c.PyConfig_SetBytesArgv", "argc"], [33, 3, 1, "c.PyConfig_SetBytesArgv", "argv"], [33, 3, 1, "c.PyConfig_SetBytesArgv", "config"]], "PyConfig_SetBytesString": [[33, 3, 1, "c.PyConfig_SetBytesString", "config"], [33, 3, 1, "c.PyConfig_SetBytesString", "config_str"], [33, 3, 1, "c.PyConfig_SetBytesString", "str"]], "PyConfig_SetString": [[33, 3, 1, "c.PyConfig_SetString", "config"], [33, 3, 1, "c.PyConfig_SetString", "config_str"], [33, 3, 1, "c.PyConfig_SetString", "str"]], "PyConfig_SetWideStringList": [[33, 3, 1, "c.PyConfig_SetWideStringList", "config"], [33, 3, 1, "c.PyConfig_SetWideStringList", "items"], [33, 3, 1, "c.PyConfig_SetWideStringList", "length"], [33, 3, 1, "c.PyConfig_SetWideStringList", "list"]], "PyContextToken_CheckExact": [[17, 3, 1, "c.PyContextToken_CheckExact", "o"]], "PyContextVar_CheckExact": [[17, 3, 1, "c.PyContextVar_CheckExact", "o"]], "PyContextVar_Get": [[17, 3, 1, "c.PyContextVar_Get", "default_value"], [17, 3, 1, "c.PyContextVar_Get", "value"], [17, 3, 1, "c.PyContextVar_Get", "var"]], "PyContextVar_New": [[17, 3, 1, "c.PyContextVar_New", "def"], [17, 3, 1, "c.PyContextVar_New", "name"]], "PyContextVar_Reset": [[17, 3, 1, "c.PyContextVar_Reset", "token"], [17, 3, 1, "c.PyContextVar_Reset", "var"]], "PyContextVar_Set": [[17, 3, 1, "c.PyContextVar_Set", "value"], [17, 3, 1, "c.PyContextVar_Set", "var"]], "PyContext_CheckExact": [[17, 3, 1, "c.PyContext_CheckExact", "o"]], "PyContext_Copy": [[17, 3, 1, "c.PyContext_Copy", "ctx"]], "PyContext_Enter": [[17, 3, 1, "c.PyContext_Enter", "ctx"]], "PyContext_Exit": [[17, 3, 1, "c.PyContext_Exit", "ctx"]], "PyCoro_CheckExact": [[19, 3, 1, "c.PyCoro_CheckExact", "ob"]], "PyCoro_New": [[19, 3, 1, "c.PyCoro_New", "frame"], [19, 3, 1, "c.PyCoro_New", "name"], [19, 3, 1, "c.PyCoro_New", "qualname"]], "PyDateTime_Check": [[20, 3, 1, "c.PyDateTime_Check", "ob"]], "PyDateTime_CheckExact": [[20, 3, 1, "c.PyDateTime_CheckExact", "ob"]], "PyDateTime_DATE_GET_FOLD": [[20, 3, 1, "c.PyDateTime_DATE_GET_FOLD", "o"]], "PyDateTime_DATE_GET_HOUR": [[20, 3, 1, "c.PyDateTime_DATE_GET_HOUR", "o"]], "PyDateTime_DATE_GET_MICROSECOND": [[20, 3, 1, "c.PyDateTime_DATE_GET_MICROSECOND", "o"]], "PyDateTime_DATE_GET_MINUTE": [[20, 3, 1, "c.PyDateTime_DATE_GET_MINUTE", "o"]], "PyDateTime_DATE_GET_SECOND": [[20, 3, 1, "c.PyDateTime_DATE_GET_SECOND", "o"]], "PyDateTime_DATE_GET_TZINFO": [[20, 3, 1, "c.PyDateTime_DATE_GET_TZINFO", "o"]], "PyDateTime_DELTA_GET_DAYS": [[20, 3, 1, "c.PyDateTime_DELTA_GET_DAYS", "o"]], "PyDateTime_DELTA_GET_MICROSECONDS": [[20, 3, 1, "c.PyDateTime_DELTA_GET_MICROSECONDS", "o"]], "PyDateTime_DELTA_GET_SECONDS": [[20, 3, 1, "c.PyDateTime_DELTA_GET_SECONDS", "o"]], "PyDateTime_FromDateAndTime": [[20, 3, 1, "c.PyDateTime_FromDateAndTime", "day"], [20, 3, 1, "c.PyDateTime_FromDateAndTime", "hour"], [20, 3, 1, "c.PyDateTime_FromDateAndTime", "minute"], [20, 3, 1, "c.PyDateTime_FromDateAndTime", "month"], [20, 3, 1, "c.PyDateTime_FromDateAndTime", "second"], [20, 3, 1, "c.PyDateTime_FromDateAndTime", "usecond"], [20, 3, 1, "c.PyDateTime_FromDateAndTime", "year"]], "PyDateTime_FromDateAndTimeAndFold": [[20, 3, 1, "c.PyDateTime_FromDateAndTimeAndFold", "day"], [20, 3, 1, "c.PyDateTime_FromDateAndTimeAndFold", "fold"], [20, 3, 1, "c.PyDateTime_FromDateAndTimeAndFold", "hour"], [20, 3, 1, "c.PyDateTime_FromDateAndTimeAndFold", "minute"], [20, 3, 1, "c.PyDateTime_FromDateAndTimeAndFold", "month"], [20, 3, 1, "c.PyDateTime_FromDateAndTimeAndFold", "second"], [20, 3, 1, "c.PyDateTime_FromDateAndTimeAndFold", "usecond"], [20, 3, 1, "c.PyDateTime_FromDateAndTimeAndFold", "year"]], "PyDateTime_FromTimestamp": [[20, 3, 1, "c.PyDateTime_FromTimestamp", "args"]], "PyDateTime_GET_DAY": [[20, 3, 1, "c.PyDateTime_GET_DAY", "o"]], "PyDateTime_GET_MONTH": [[20, 3, 1, "c.PyDateTime_GET_MONTH", "o"]], "PyDateTime_GET_YEAR": [[20, 3, 1, "c.PyDateTime_GET_YEAR", "o"]], "PyDateTime_TIME_GET_FOLD": [[20, 3, 1, "c.PyDateTime_TIME_GET_FOLD", "o"]], "PyDateTime_TIME_GET_HOUR": [[20, 3, 1, "c.PyDateTime_TIME_GET_HOUR", "o"]], "PyDateTime_TIME_GET_MICROSECOND": [[20, 3, 1, "c.PyDateTime_TIME_GET_MICROSECOND", "o"]], "PyDateTime_TIME_GET_MINUTE": [[20, 3, 1, "c.PyDateTime_TIME_GET_MINUTE", "o"]], "PyDateTime_TIME_GET_SECOND": [[20, 3, 1, "c.PyDateTime_TIME_GET_SECOND", "o"]], "PyDateTime_TIME_GET_TZINFO": [[20, 3, 1, "c.PyDateTime_TIME_GET_TZINFO", "o"]], "PyDate_Check": [[20, 3, 1, "c.PyDate_Check", "ob"]], "PyDate_CheckExact": [[20, 3, 1, "c.PyDate_CheckExact", "ob"]], "PyDate_FromDate": [[20, 3, 1, "c.PyDate_FromDate", "day"], [20, 3, 1, "c.PyDate_FromDate", "month"], [20, 3, 1, "c.PyDate_FromDate", "year"]], "PyDate_FromTimestamp": [[20, 3, 1, "c.PyDate_FromTimestamp", "args"]], "PyDelta_Check": [[20, 3, 1, "c.PyDelta_Check", "ob"]], "PyDelta_CheckExact": [[20, 3, 1, "c.PyDelta_CheckExact", "ob"]], "PyDelta_FromDSU": [[20, 3, 1, "c.PyDelta_FromDSU", "days"], [20, 3, 1, "c.PyDelta_FromDSU", "seconds"], [20, 3, 1, "c.PyDelta_FromDSU", "useconds"]], "PyDescr_IsData": [[21, 3, 1, "c.PyDescr_IsData", "descr"]], "PyDescr_NewClassMethod": [[21, 3, 1, "c.PyDescr_NewClassMethod", "method"], [21, 3, 1, "c.PyDescr_NewClassMethod", "type"]], "PyDescr_NewGetSet": [[21, 3, 1, "c.PyDescr_NewGetSet", "getset"], [21, 3, 1, "c.PyDescr_NewGetSet", "type"]], "PyDescr_NewMember": [[21, 3, 1, "c.PyDescr_NewMember", "meth"], [21, 3, 1, "c.PyDescr_NewMember", "type"]], "PyDescr_NewMethod": [[21, 3, 1, "c.PyDescr_NewMethod", "meth"], [21, 3, 1, "c.PyDescr_NewMethod", "type"]], "PyDescr_NewWrapper": [[21, 3, 1, "c.PyDescr_NewWrapper", "type"], [21, 3, 1, "c.PyDescr_NewWrapper", "wrapped"], [21, 3, 1, "c.PyDescr_NewWrapper", "wrapper"]], "PyDictProxy_New": [[22, 3, 1, "c.PyDictProxy_New", "mapping"]], "PyDict_AddWatcher": [[22, 3, 1, "c.PyDict_AddWatcher", "callback"]], "PyDict_Check": [[22, 3, 1, "c.PyDict_Check", "p"]], "PyDict_CheckExact": [[22, 3, 1, "c.PyDict_CheckExact", "p"]], "PyDict_Clear": [[22, 3, 1, "c.PyDict_Clear", "p"]], "PyDict_ClearWatcher": [[22, 3, 1, "c.PyDict_ClearWatcher", "watcher_id"]], "PyDict_Contains": [[22, 3, 1, "c.PyDict_Contains", "key"], [22, 3, 1, "c.PyDict_Contains", "p"]], "PyDict_ContainsString": [[22, 3, 1, "c.PyDict_ContainsString", "key"], [22, 3, 1, "c.PyDict_ContainsString", "p"]], "PyDict_Copy": [[22, 3, 1, "c.PyDict_Copy", "p"]], "PyDict_DelItem": [[22, 3, 1, "c.PyDict_DelItem", "key"], [22, 3, 1, "c.PyDict_DelItem", "p"]], "PyDict_DelItemString": [[22, 3, 1, "c.PyDict_DelItemString", "key"], [22, 3, 1, "c.PyDict_DelItemString", "p"]], "PyDict_GetItem": [[22, 3, 1, "c.PyDict_GetItem", "key"], [22, 3, 1, "c.PyDict_GetItem", "p"]], "PyDict_GetItemRef": [[22, 3, 1, "c.PyDict_GetItemRef", "key"], [22, 3, 1, "c.PyDict_GetItemRef", "p"], [22, 3, 1, "c.PyDict_GetItemRef", "result"]], "PyDict_GetItemString": [[22, 3, 1, "c.PyDict_GetItemString", "key"], [22, 3, 1, "c.PyDict_GetItemString", "p"]], "PyDict_GetItemStringRef": [[22, 3, 1, "c.PyDict_GetItemStringRef", "key"], [22, 3, 1, "c.PyDict_GetItemStringRef", "p"], [22, 3, 1, "c.PyDict_GetItemStringRef", "result"]], "PyDict_GetItemWithError": [[22, 3, 1, "c.PyDict_GetItemWithError", "key"], [22, 3, 1, "c.PyDict_GetItemWithError", "p"]], "PyDict_Items": [[22, 3, 1, "c.PyDict_Items", "p"]], "PyDict_Keys": [[22, 3, 1, "c.PyDict_Keys", "p"]], "PyDict_Merge": [[22, 3, 1, "c.PyDict_Merge", "a"], [22, 3, 1, "c.PyDict_Merge", "b"], [22, 3, 1, "c.PyDict_Merge", "override"]], "PyDict_MergeFromSeq2": [[22, 3, 1, "c.PyDict_MergeFromSeq2", "a"], [22, 3, 1, "c.PyDict_MergeFromSeq2", "override"], [22, 3, 1, "c.PyDict_MergeFromSeq2", "seq2"]], "PyDict_Next": [[22, 3, 1, "c.PyDict_Next", "p"], [22, 3, 1, "c.PyDict_Next", "pkey"], [22, 3, 1, "c.PyDict_Next", "ppos"], [22, 3, 1, "c.PyDict_Next", "pvalue"]], "PyDict_SetDefault": [[22, 3, 1, "c.PyDict_SetDefault", "defaultobj"], [22, 3, 1, "c.PyDict_SetDefault", "key"], [22, 3, 1, "c.PyDict_SetDefault", "p"]], "PyDict_SetItem": [[22, 3, 1, "c.PyDict_SetItem", "key"], [22, 3, 1, "c.PyDict_SetItem", "p"], [22, 3, 1, "c.PyDict_SetItem", "val"]], "PyDict_SetItemString": [[22, 3, 1, "c.PyDict_SetItemString", "key"], [22, 3, 1, "c.PyDict_SetItemString", "p"], [22, 3, 1, "c.PyDict_SetItemString", "val"]], "PyDict_Size": [[22, 3, 1, "c.PyDict_Size", "p"]], "PyDict_Unwatch": [[22, 3, 1, "c.PyDict_Unwatch", "dict"], [22, 3, 1, "c.PyDict_Unwatch", "watcher_id"]], "PyDict_Update": [[22, 3, 1, "c.PyDict_Update", "a"], [22, 3, 1, "c.PyDict_Update", "b"]], "PyDict_Values": [[22, 3, 1, "c.PyDict_Values", "p"]], "PyDict_Watch": [[22, 3, 1, "c.PyDict_Watch", "dict"], [22, 3, 1, "c.PyDict_Watch", "watcher_id"]], "PyErr_DisplayException": [[23, 3, 1, "c.PyErr_DisplayException", "exc"]], "PyErr_ExceptionMatches": [[23, 3, 1, "c.PyErr_ExceptionMatches", "exc"]], "PyErr_Fetch": [[23, 3, 1, "c.PyErr_Fetch", "ptraceback"], [23, 3, 1, "c.PyErr_Fetch", "ptype"], [23, 3, 1, "c.PyErr_Fetch", "pvalue"]], "PyErr_Format": [[23, 3, 1, "c.PyErr_Format", "exception"], [23, 3, 1, "c.PyErr_Format", "format"]], "PyErr_FormatV": [[23, 3, 1, "c.PyErr_FormatV", "exception"], [23, 3, 1, "c.PyErr_FormatV", "format"], [23, 3, 1, "c.PyErr_FormatV", "vargs"]], "PyErr_GetExcInfo": [[23, 3, 1, "c.PyErr_GetExcInfo", "ptraceback"], [23, 3, 1, "c.PyErr_GetExcInfo", "ptype"], [23, 3, 1, "c.PyErr_GetExcInfo", "pvalue"]], "PyErr_GivenExceptionMatches": [[23, 3, 1, "c.PyErr_GivenExceptionMatches", "exc"], [23, 3, 1, "c.PyErr_GivenExceptionMatches", "given"]], "PyErr_NewException": [[23, 3, 1, "c.PyErr_NewException", "base"], [23, 3, 1, "c.PyErr_NewException", "dict"], [23, 3, 1, "c.PyErr_NewException", "name"]], "PyErr_NewExceptionWithDoc": [[23, 3, 1, "c.PyErr_NewExceptionWithDoc", "base"], [23, 3, 1, "c.PyErr_NewExceptionWithDoc", "dict"], [23, 3, 1, "c.PyErr_NewExceptionWithDoc", "doc"], [23, 3, 1, "c.PyErr_NewExceptionWithDoc", "name"]], "PyErr_NormalizeException": [[23, 3, 1, "c.PyErr_NormalizeException", "exc"], [23, 3, 1, "c.PyErr_NormalizeException", "tb"], [23, 3, 1, "c.PyErr_NormalizeException", "val"]], "PyErr_PrintEx": [[23, 3, 1, "c.PyErr_PrintEx", "set_sys_last_vars"]], "PyErr_ResourceWarning": [[23, 3, 1, "c.PyErr_ResourceWarning", "format"], [23, 3, 1, "c.PyErr_ResourceWarning", "source"], [23, 3, 1, "c.PyErr_ResourceWarning", "stack_level"]], "PyErr_Restore": [[23, 3, 1, "c.PyErr_Restore", "traceback"], [23, 3, 1, "c.PyErr_Restore", "type"], [23, 3, 1, "c.PyErr_Restore", "value"]], "PyErr_SetExcFromWindowsErr": [[23, 3, 1, "c.PyErr_SetExcFromWindowsErr", "ierr"], [23, 3, 1, "c.PyErr_SetExcFromWindowsErr", "type"]], "PyErr_SetExcFromWindowsErrWithFilename": [[23, 3, 1, "c.PyErr_SetExcFromWindowsErrWithFilename", "filename"], [23, 3, 1, "c.PyErr_SetExcFromWindowsErrWithFilename", "ierr"], [23, 3, 1, "c.PyErr_SetExcFromWindowsErrWithFilename", "type"]], "PyErr_SetExcFromWindowsErrWithFilenameObject": [[23, 3, 1, "c.PyErr_SetExcFromWindowsErrWithFilenameObject", "filename"], [23, 3, 1, "c.PyErr_SetExcFromWindowsErrWithFilenameObject", "ierr"], [23, 3, 1, "c.PyErr_SetExcFromWindowsErrWithFilenameObject", "type"]], "PyErr_SetExcFromWindowsErrWithFilenameObjects": [[23, 3, 1, "c.PyErr_SetExcFromWindowsErrWithFilenameObjects", "filename"], [23, 3, 1, "c.PyErr_SetExcFromWindowsErrWithFilenameObjects", "filename2"], [23, 3, 1, "c.PyErr_SetExcFromWindowsErrWithFilenameObjects", "ierr"], [23, 3, 1, "c.PyErr_SetExcFromWindowsErrWithFilenameObjects", "type"]], "PyErr_SetExcInfo": [[23, 3, 1, "c.PyErr_SetExcInfo", "traceback"], [23, 3, 1, "c.PyErr_SetExcInfo", "type"], [23, 3, 1, "c.PyErr_SetExcInfo", "value"]], "PyErr_SetFromErrno": [[23, 3, 1, "c.PyErr_SetFromErrno", "type"]], "PyErr_SetFromErrnoWithFilename": [[23, 3, 1, "c.PyErr_SetFromErrnoWithFilename", "filename"], [23, 3, 1, "c.PyErr_SetFromErrnoWithFilename", "type"]], "PyErr_SetFromErrnoWithFilenameObject": [[23, 3, 1, "c.PyErr_SetFromErrnoWithFilenameObject", "filenameObject"], [23, 3, 1, "c.PyErr_SetFromErrnoWithFilenameObject", "type"]], "PyErr_SetFromErrnoWithFilenameObjects": [[23, 3, 1, "c.PyErr_SetFromErrnoWithFilenameObjects", "filenameObject"], [23, 3, 1, "c.PyErr_SetFromErrnoWithFilenameObjects", "filenameObject2"], [23, 3, 1, "c.PyErr_SetFromErrnoWithFilenameObjects", "type"]], "PyErr_SetFromWindowsErr": [[23, 3, 1, "c.PyErr_SetFromWindowsErr", "ierr"]], "PyErr_SetFromWindowsErrWithFilename": [[23, 3, 1, "c.PyErr_SetFromWindowsErrWithFilename", "filename"], [23, 3, 1, "c.PyErr_SetFromWindowsErrWithFilename", "ierr"]], "PyErr_SetHandledException": [[23, 3, 1, "c.PyErr_SetHandledException", "exc"]], "PyErr_SetImportError": [[23, 3, 1, "c.PyErr_SetImportError", "msg"], [23, 3, 1, "c.PyErr_SetImportError", "name"], [23, 3, 1, "c.PyErr_SetImportError", "path"]], "PyErr_SetImportErrorSubclass": [[23, 3, 1, "c.PyErr_SetImportErrorSubclass", "exception"], [23, 3, 1, "c.PyErr_SetImportErrorSubclass", "msg"], [23, 3, 1, "c.PyErr_SetImportErrorSubclass", "name"], [23, 3, 1, "c.PyErr_SetImportErrorSubclass", "path"]], "PyErr_SetInterruptEx": [[23, 3, 1, "c.PyErr_SetInterruptEx", "signum"]], "PyErr_SetNone": [[23, 3, 1, "c.PyErr_SetNone", "type"]], "PyErr_SetObject": [[23, 3, 1, "c.PyErr_SetObject", "type"], [23, 3, 1, "c.PyErr_SetObject", "value"]], "PyErr_SetRaisedException": [[23, 3, 1, "c.PyErr_SetRaisedException", "exc"]], "PyErr_SetString": [[23, 3, 1, "c.PyErr_SetString", "message"], [23, 3, 1, "c.PyErr_SetString", "type"]], "PyErr_SyntaxLocation": [[23, 3, 1, "c.PyErr_SyntaxLocation", "filename"], [23, 3, 1, "c.PyErr_SyntaxLocation", "lineno"]], "PyErr_SyntaxLocationEx": [[23, 3, 1, "c.PyErr_SyntaxLocationEx", "col_offset"], [23, 3, 1, "c.PyErr_SyntaxLocationEx", "filename"], [23, 3, 1, "c.PyErr_SyntaxLocationEx", "lineno"]], "PyErr_SyntaxLocationObject": [[23, 3, 1, "c.PyErr_SyntaxLocationObject", "col_offset"], [23, 3, 1, "c.PyErr_SyntaxLocationObject", "filename"], [23, 3, 1, "c.PyErr_SyntaxLocationObject", "lineno"]], "PyErr_WarnEx": [[23, 3, 1, "c.PyErr_WarnEx", "category"], [23, 3, 1, "c.PyErr_WarnEx", "message"], [23, 3, 1, "c.PyErr_WarnEx", "stack_level"]], "PyErr_WarnExplicit": [[23, 3, 1, "c.PyErr_WarnExplicit", "category"], [23, 3, 1, "c.PyErr_WarnExplicit", "filename"], [23, 3, 1, "c.PyErr_WarnExplicit", "lineno"], [23, 3, 1, "c.PyErr_WarnExplicit", "message"], [23, 3, 1, "c.PyErr_WarnExplicit", "module"], [23, 3, 1, "c.PyErr_WarnExplicit", "registry"]], "PyErr_WarnExplicitObject": [[23, 3, 1, "c.PyErr_WarnExplicitObject", "category"], [23, 3, 1, "c.PyErr_WarnExplicitObject", "filename"], [23, 3, 1, "c.PyErr_WarnExplicitObject", "lineno"], [23, 3, 1, "c.PyErr_WarnExplicitObject", "message"], [23, 3, 1, "c.PyErr_WarnExplicitObject", "module"], [23, 3, 1, "c.PyErr_WarnExplicitObject", "registry"]], "PyErr_WarnFormat": [[23, 3, 1, "c.PyErr_WarnFormat", "category"], [23, 3, 1, "c.PyErr_WarnFormat", "format"], [23, 3, 1, "c.PyErr_WarnFormat", "stack_level"]], "PyErr_WriteUnraisable": [[23, 3, 1, "c.PyErr_WriteUnraisable", "obj"]], "PyEval_AcquireThread": [[32, 3, 1, "c.PyEval_AcquireThread", "tstate"]], "PyEval_EvalCode": [[64, 3, 1, "c.PyEval_EvalCode", "co"], [64, 3, 1, "c.PyEval_EvalCode", "globals"], [64, 3, 1, "c.PyEval_EvalCode", "locals"]], "PyEval_EvalCodeEx": [[64, 3, 1, "c.PyEval_EvalCodeEx", "argcount"], [64, 3, 1, "c.PyEval_EvalCodeEx", "args"], [64, 3, 1, "c.PyEval_EvalCodeEx", "closure"], [64, 3, 1, "c.PyEval_EvalCodeEx", "co"], [64, 3, 1, "c.PyEval_EvalCodeEx", "defcount"], [64, 3, 1, "c.PyEval_EvalCodeEx", "defs"], [64, 3, 1, "c.PyEval_EvalCodeEx", "globals"], [64, 3, 1, "c.PyEval_EvalCodeEx", "kwcount"], [64, 3, 1, "c.PyEval_EvalCodeEx", "kwdefs"], [64, 3, 1, "c.PyEval_EvalCodeEx", "kws"], [64, 3, 1, "c.PyEval_EvalCodeEx", "locals"]], "PyEval_EvalFrame": [[64, 3, 1, "c.PyEval_EvalFrame", "f"]], "PyEval_EvalFrameEx": [[64, 3, 1, "c.PyEval_EvalFrameEx", "f"], [64, 3, 1, "c.PyEval_EvalFrameEx", "throwflag"]], "PyEval_GetFuncDesc": [[51, 3, 1, "c.PyEval_GetFuncDesc", "func"]], "PyEval_GetFuncName": [[51, 3, 1, "c.PyEval_GetFuncName", "func"]], "PyEval_MergeCompilerFlags": [[64, 3, 1, "c.PyEval_MergeCompilerFlags", "cf"]], "PyEval_ReleaseThread": [[32, 3, 1, "c.PyEval_ReleaseThread", "tstate"]], "PyEval_RestoreThread": [[32, 3, 1, "c.PyEval_RestoreThread", "tstate"]], "PyEval_SetProfile": [[32, 3, 1, "c.PyEval_SetProfile", "func"], [32, 3, 1, "c.PyEval_SetProfile", "obj"]], "PyEval_SetProfileAllThreads": [[32, 3, 1, "c.PyEval_SetProfileAllThreads", "func"], [32, 3, 1, "c.PyEval_SetProfileAllThreads", "obj"]], "PyEval_SetTrace": [[32, 3, 1, "c.PyEval_SetTrace", "func"], [32, 3, 1, "c.PyEval_SetTrace", "obj"]], "PyEval_SetTraceAllThreads": [[32, 3, 1, "c.PyEval_SetTraceAllThreads", "func"], [32, 3, 1, "c.PyEval_SetTraceAllThreads", "obj"]], "PyException_GetArgs": [[23, 3, 1, "c.PyException_GetArgs", "ex"]], "PyException_GetCause": [[23, 3, 1, "c.PyException_GetCause", "ex"]], "PyException_GetContext": [[23, 3, 1, "c.PyException_GetContext", "ex"]], "PyException_GetTraceback": [[23, 3, 1, "c.PyException_GetTraceback", "ex"]], "PyException_SetArgs": [[23, 3, 1, "c.PyException_SetArgs", "args"], [23, 3, 1, "c.PyException_SetArgs", "ex"]], "PyException_SetCause": [[23, 3, 1, "c.PyException_SetCause", "cause"], [23, 3, 1, "c.PyException_SetCause", "ex"]], "PyException_SetContext": [[23, 3, 1, "c.PyException_SetContext", "ctx"], [23, 3, 1, "c.PyException_SetContext", "ex"]], "PyException_SetTraceback": [[23, 3, 1, "c.PyException_SetTraceback", "ex"], [23, 3, 1, "c.PyException_SetTraceback", "tb"]], "PyFile_FromFd": [[24, 3, 1, "c.PyFile_FromFd", "buffering"], [24, 3, 1, "c.PyFile_FromFd", "closefd"], [24, 3, 1, "c.PyFile_FromFd", "encoding"], [24, 3, 1, "c.PyFile_FromFd", "errors"], [24, 3, 1, "c.PyFile_FromFd", "fd"], [24, 3, 1, "c.PyFile_FromFd", "mode"], [24, 3, 1, "c.PyFile_FromFd", "name"], [24, 3, 1, "c.PyFile_FromFd", "newline"]], "PyFile_GetLine": [[24, 3, 1, "c.PyFile_GetLine", "n"], [24, 3, 1, "c.PyFile_GetLine", "p"]], "PyFile_SetOpenCodeHook": [[24, 3, 1, "c.PyFile_SetOpenCodeHook", "handler"]], "PyFile_WriteObject": [[24, 3, 1, "c.PyFile_WriteObject", "flags"], [24, 3, 1, "c.PyFile_WriteObject", "obj"], [24, 3, 1, "c.PyFile_WriteObject", "p"]], "PyFile_WriteString": [[24, 3, 1, "c.PyFile_WriteString", "p"], [24, 3, 1, "c.PyFile_WriteString", "s"]], "PyFloat_AS_DOUBLE": [[25, 3, 1, "c.PyFloat_AS_DOUBLE", "pyfloat"]], "PyFloat_AsDouble": [[25, 3, 1, "c.PyFloat_AsDouble", "pyfloat"]], "PyFloat_Check": [[25, 3, 1, "c.PyFloat_Check", "p"]], "PyFloat_CheckExact": [[25, 3, 1, "c.PyFloat_CheckExact", "p"]], "PyFloat_FromDouble": [[25, 3, 1, "c.PyFloat_FromDouble", "v"]], "PyFloat_FromString": [[25, 3, 1, "c.PyFloat_FromString", "str"]], "PyFloat_Pack2": [[25, 3, 1, "c.PyFloat_Pack2", "le"], [25, 3, 1, "c.PyFloat_Pack2", "p"], [25, 3, 1, "c.PyFloat_Pack2", "x"]], "PyFloat_Pack4": [[25, 3, 1, "c.PyFloat_Pack4", "le"], [25, 3, 1, "c.PyFloat_Pack4", "p"], [25, 3, 1, "c.PyFloat_Pack4", "x"]], "PyFloat_Pack8": [[25, 3, 1, "c.PyFloat_Pack8", "le"], [25, 3, 1, "c.PyFloat_Pack8", "p"], [25, 3, 1, "c.PyFloat_Pack8", "x"]], "PyFloat_Unpack2": [[25, 3, 1, "c.PyFloat_Unpack2", "le"], [25, 3, 1, "c.PyFloat_Unpack2", "p"]], "PyFloat_Unpack4": [[25, 3, 1, "c.PyFloat_Unpack4", "le"], [25, 3, 1, "c.PyFloat_Unpack4", "p"]], "PyFloat_Unpack8": [[25, 3, 1, "c.PyFloat_Unpack8", "le"], [25, 3, 1, "c.PyFloat_Unpack8", "p"]], "PyFrame_Check": [[26, 3, 1, "c.PyFrame_Check", "obj"]], "PyFrame_GetBack": [[26, 3, 1, "c.PyFrame_GetBack", "frame"]], "PyFrame_GetBuiltins": [[26, 3, 1, "c.PyFrame_GetBuiltins", "frame"]], "PyFrame_GetCode": [[26, 3, 1, "c.PyFrame_GetCode", "frame"]], "PyFrame_GetGenerator": [[26, 3, 1, "c.PyFrame_GetGenerator", "frame"]], "PyFrame_GetGlobals": [[26, 3, 1, "c.PyFrame_GetGlobals", "frame"]], "PyFrame_GetLasti": [[26, 3, 1, "c.PyFrame_GetLasti", "frame"]], "PyFrame_GetLineNumber": [[26, 3, 1, "c.PyFrame_GetLineNumber", "frame"]], "PyFrame_GetLocals": [[26, 3, 1, "c.PyFrame_GetLocals", "frame"]], "PyFrame_GetVar": [[26, 3, 1, "c.PyFrame_GetVar", "frame"], [26, 3, 1, "c.PyFrame_GetVar", "name"]], "PyFrame_GetVarString": [[26, 3, 1, "c.PyFrame_GetVarString", "frame"], [26, 3, 1, "c.PyFrame_GetVarString", "name"]], "PyFrozenSet_Check": [[53, 3, 1, "c.PyFrozenSet_Check", "p"]], "PyFrozenSet_CheckExact": [[53, 3, 1, "c.PyFrozenSet_CheckExact", "p"]], "PyFrozenSet_New": [[53, 3, 1, "c.PyFrozenSet_New", "iterable"]], "PyFunction_AddWatcher": [[27, 3, 1, "c.PyFunction_AddWatcher", "callback"]], "PyFunction_Check": [[27, 3, 1, "c.PyFunction_Check", "o"]], "PyFunction_ClearWatcher": [[27, 3, 1, "c.PyFunction_ClearWatcher", "watcher_id"]], "PyFunction_GetAnnotations": [[27, 3, 1, "c.PyFunction_GetAnnotations", "op"]], "PyFunction_GetClosure": [[27, 3, 1, "c.PyFunction_GetClosure", "op"]], "PyFunction_GetCode": [[27, 3, 1, "c.PyFunction_GetCode", "op"]], "PyFunction_GetDefaults": [[27, 3, 1, "c.PyFunction_GetDefaults", "op"]], "PyFunction_GetGlobals": [[27, 3, 1, "c.PyFunction_GetGlobals", "op"]], "PyFunction_GetModule": [[27, 3, 1, "c.PyFunction_GetModule", "op"]], "PyFunction_New": [[27, 3, 1, "c.PyFunction_New", "code"], [27, 3, 1, "c.PyFunction_New", "globals"]], "PyFunction_NewWithQualName": [[27, 3, 1, "c.PyFunction_NewWithQualName", "code"], [27, 3, 1, "c.PyFunction_NewWithQualName", "globals"], [27, 3, 1, "c.PyFunction_NewWithQualName", "qualname"]], "PyFunction_SetAnnotations": [[27, 3, 1, "c.PyFunction_SetAnnotations", "annotations"], [27, 3, 1, "c.PyFunction_SetAnnotations", "op"]], "PyFunction_SetClosure": [[27, 3, 1, "c.PyFunction_SetClosure", "closure"], [27, 3, 1, "c.PyFunction_SetClosure", "op"]], "PyFunction_SetDefaults": [[27, 3, 1, "c.PyFunction_SetDefaults", "defaults"], [27, 3, 1, "c.PyFunction_SetDefaults", "op"]], "PyFunction_SetVectorcall": [[27, 3, 1, "c.PyFunction_SetVectorcall", "func"], [27, 3, 1, "c.PyFunction_SetVectorcall", "vectorcall"]], "PyGen_Check": [[29, 3, 1, "c.PyGen_Check", "ob"]], "PyGen_CheckExact": [[29, 3, 1, "c.PyGen_CheckExact", "ob"]], "PyGen_New": [[29, 3, 1, "c.PyGen_New", "frame"]], "PyGen_NewWithQualName": [[29, 3, 1, "c.PyGen_NewWithQualName", "frame"], [29, 3, 1, "c.PyGen_NewWithQualName", "name"], [29, 3, 1, "c.PyGen_NewWithQualName", "qualname"]], "PyGetSetDef": [[56, 0, 1, "c.PyGetSetDef.closure", "closure"], [56, 0, 1, "c.PyGetSetDef.doc", "doc"], [56, 0, 1, "c.PyGetSetDef.get", "get"], [56, 0, 1, "c.PyGetSetDef.name", "name"], [56, 0, 1, "c.PyGetSetDef.set", "set"]], "PyImport_AddModule": [[30, 3, 1, "c.PyImport_AddModule", "name"]], "PyImport_AddModuleObject": [[30, 3, 1, "c.PyImport_AddModuleObject", "name"]], "PyImport_AddModuleRef": [[30, 3, 1, "c.PyImport_AddModuleRef", "name"]], "PyImport_AppendInittab": [[30, 3, 1, "c.PyImport_AppendInittab", "initfunc"], [30, 3, 1, "c.PyImport_AppendInittab", "name"]], "PyImport_ExecCodeModule": [[30, 3, 1, "c.PyImport_ExecCodeModule", "co"], [30, 3, 1, "c.PyImport_ExecCodeModule", "name"]], "PyImport_ExecCodeModuleEx": [[30, 3, 1, "c.PyImport_ExecCodeModuleEx", "co"], [30, 3, 1, "c.PyImport_ExecCodeModuleEx", "name"], [30, 3, 1, "c.PyImport_ExecCodeModuleEx", "pathname"]], "PyImport_ExecCodeModuleObject": [[30, 3, 1, "c.PyImport_ExecCodeModuleObject", "co"], [30, 3, 1, "c.PyImport_ExecCodeModuleObject", "cpathname"], [30, 3, 1, "c.PyImport_ExecCodeModuleObject", "name"], [30, 3, 1, "c.PyImport_ExecCodeModuleObject", "pathname"]], "PyImport_ExecCodeModuleWithPathnames": [[30, 3, 1, "c.PyImport_ExecCodeModuleWithPathnames", "co"], [30, 3, 1, "c.PyImport_ExecCodeModuleWithPathnames", "cpathname"], [30, 3, 1, "c.PyImport_ExecCodeModuleWithPathnames", "name"], [30, 3, 1, "c.PyImport_ExecCodeModuleWithPathnames", "pathname"]], "PyImport_ExtendInittab": [[30, 3, 1, "c.PyImport_ExtendInittab", "newtab"]], "PyImport_GetImporter": [[30, 3, 1, "c.PyImport_GetImporter", "path"]], "PyImport_GetModule": [[30, 3, 1, "c.PyImport_GetModule", "name"]], "PyImport_Import": [[30, 3, 1, "c.PyImport_Import", "name"]], "PyImport_ImportFrozenModule": [[30, 3, 1, "c.PyImport_ImportFrozenModule", "name"]], "PyImport_ImportFrozenModuleObject": [[30, 3, 1, "c.PyImport_ImportFrozenModuleObject", "name"]], "PyImport_ImportModule": [[30, 3, 1, "c.PyImport_ImportModule", "name"]], "PyImport_ImportModuleEx": [[30, 3, 1, "c.PyImport_ImportModuleEx", "fromlist"], [30, 3, 1, "c.PyImport_ImportModuleEx", "globals"], [30, 3, 1, "c.PyImport_ImportModuleEx", "locals"], [30, 3, 1, "c.PyImport_ImportModuleEx", "name"]], "PyImport_ImportModuleLevel": [[30, 3, 1, "c.PyImport_ImportModuleLevel", "fromlist"], [30, 3, 1, "c.PyImport_ImportModuleLevel", "globals"], [30, 3, 1, "c.PyImport_ImportModuleLevel", "level"], [30, 3, 1, "c.PyImport_ImportModuleLevel", "locals"], [30, 3, 1, "c.PyImport_ImportModuleLevel", "name"]], "PyImport_ImportModuleLevelObject": [[30, 3, 1, "c.PyImport_ImportModuleLevelObject", "fromlist"], [30, 3, 1, "c.PyImport_ImportModuleLevelObject", "globals"], [30, 3, 1, "c.PyImport_ImportModuleLevelObject", "level"], [30, 3, 1, "c.PyImport_ImportModuleLevelObject", "locals"], [30, 3, 1, "c.PyImport_ImportModuleLevelObject", "name"]], "PyImport_ImportModuleNoBlock": [[30, 3, 1, "c.PyImport_ImportModuleNoBlock", "name"]], "PyImport_ReloadModule": [[30, 3, 1, "c.PyImport_ReloadModule", "m"]], "PyIndex_Check": [[46, 3, 1, "c.PyIndex_Check", "o"]], "PyInstanceMethod_Check": [[43, 3, 1, "c.PyInstanceMethod_Check", "o"]], "PyInstanceMethod_Function": [[43, 3, 1, "c.PyInstanceMethod_Function", "im"]], "PyInstanceMethod_GET_FUNCTION": [[43, 3, 1, "c.PyInstanceMethod_GET_FUNCTION", "im"]], "PyInstanceMethod_New": [[43, 3, 1, "c.PyInstanceMethod_New", "func"]], "PyInterpreterConfig": [[32, 0, 1, "c.PyInterpreterConfig.allow_daemon_threads", "allow_daemon_threads"], [32, 0, 1, "c.PyInterpreterConfig.allow_exec", "allow_exec"], [32, 0, 1, "c.PyInterpreterConfig.allow_fork", "allow_fork"], [32, 0, 1, "c.PyInterpreterConfig.allow_threads", "allow_threads"], [32, 0, 1, "c.PyInterpreterConfig.check_multi_interp_extensions", "check_multi_interp_extensions"], [32, 0, 1, "c.PyInterpreterConfig.gil", "gil"], [32, 0, 1, "c.PyInterpreterConfig.use_main_obmalloc", "use_main_obmalloc"]], "PyInterpreterState_Clear": [[32, 3, 1, "c.PyInterpreterState_Clear", "interp"]], "PyInterpreterState_Delete": [[32, 3, 1, "c.PyInterpreterState_Delete", "interp"]], "PyInterpreterState_GetDict": [[32, 3, 1, "c.PyInterpreterState_GetDict", "interp"]], "PyInterpreterState_GetID": [[32, 3, 1, "c.PyInterpreterState_GetID", "interp"]], "PyInterpreterState_Next": [[32, 3, 1, "c.PyInterpreterState_Next", "interp"]], "PyInterpreterState_ThreadHead": [[32, 3, 1, "c.PyInterpreterState_ThreadHead", "interp"]], "PyIter_Check": [[35, 3, 1, "c.PyIter_Check", "o"]], "PyIter_Next": [[35, 3, 1, "c.PyIter_Next", "o"]], "PyIter_Send": [[35, 3, 1, "c.PyIter_Send", "arg"], [35, 3, 1, "c.PyIter_Send", "iter"], [35, 3, 1, "c.PyIter_Send", "presult"]], "PyList_Append": [[37, 3, 1, "c.PyList_Append", "item"], [37, 3, 1, "c.PyList_Append", "list"]], "PyList_AsTuple": [[37, 3, 1, "c.PyList_AsTuple", "list"]], "PyList_Check": [[37, 3, 1, "c.PyList_Check", "p"]], "PyList_CheckExact": [[37, 3, 1, "c.PyList_CheckExact", "p"]], "PyList_GET_ITEM": [[37, 3, 1, "c.PyList_GET_ITEM", "i"], [37, 3, 1, "c.PyList_GET_ITEM", "list"]], "PyList_GET_SIZE": [[37, 3, 1, "c.PyList_GET_SIZE", "list"]], "PyList_GetItem": [[37, 3, 1, "c.PyList_GetItem", "index"], [37, 3, 1, "c.PyList_GetItem", "list"]], "PyList_GetSlice": [[37, 3, 1, "c.PyList_GetSlice", "high"], [37, 3, 1, "c.PyList_GetSlice", "list"], [37, 3, 1, "c.PyList_GetSlice", "low"]], "PyList_Insert": [[37, 3, 1, "c.PyList_Insert", "index"], [37, 3, 1, "c.PyList_Insert", "item"], [37, 3, 1, "c.PyList_Insert", "list"]], "PyList_New": [[37, 3, 1, "c.PyList_New", "len"]], "PyList_Reverse": [[37, 3, 1, "c.PyList_Reverse", "list"]], "PyList_SET_ITEM": [[37, 3, 1, "c.PyList_SET_ITEM", "i"], [37, 3, 1, "c.PyList_SET_ITEM", "list"], [37, 3, 1, "c.PyList_SET_ITEM", "o"]], "PyList_SetItem": [[37, 3, 1, "c.PyList_SetItem", "index"], [37, 3, 1, "c.PyList_SetItem", "item"], [37, 3, 1, "c.PyList_SetItem", "list"]], "PyList_SetSlice": [[37, 3, 1, "c.PyList_SetSlice", "high"], [37, 3, 1, "c.PyList_SetSlice", "itemlist"], [37, 3, 1, "c.PyList_SetSlice", "list"], [37, 3, 1, "c.PyList_SetSlice", "low"]], "PyList_Size": [[37, 3, 1, "c.PyList_Size", "list"]], "PyList_Sort": [[37, 3, 1, "c.PyList_Sort", "list"]], "PyLong_AsDouble": [[38, 3, 1, "c.PyLong_AsDouble", "pylong"]], "PyLong_AsInt": [[38, 3, 1, "c.PyLong_AsInt", "obj"]], "PyLong_AsLong": [[38, 3, 1, "c.PyLong_AsLong", "obj"]], "PyLong_AsLongAndOverflow": [[38, 3, 1, "c.PyLong_AsLongAndOverflow", "obj"], [38, 3, 1, "c.PyLong_AsLongAndOverflow", "overflow"]], "PyLong_AsLongLong": [[38, 3, 1, "c.PyLong_AsLongLong", "obj"]], "PyLong_AsLongLongAndOverflow": [[38, 3, 1, "c.PyLong_AsLongLongAndOverflow", "obj"], [38, 3, 1, "c.PyLong_AsLongLongAndOverflow", "overflow"]], "PyLong_AsSize_t": [[38, 3, 1, "c.PyLong_AsSize_t", "pylong"]], "PyLong_AsSsize_t": [[38, 3, 1, "c.PyLong_AsSsize_t", "pylong"]], "PyLong_AsUnsignedLong": [[38, 3, 1, "c.PyLong_AsUnsignedLong", "pylong"]], "PyLong_AsUnsignedLongLong": [[38, 3, 1, "c.PyLong_AsUnsignedLongLong", "pylong"]], "PyLong_AsUnsignedLongLongMask": [[38, 3, 1, "c.PyLong_AsUnsignedLongLongMask", "obj"]], "PyLong_AsUnsignedLongMask": [[38, 3, 1, "c.PyLong_AsUnsignedLongMask", "obj"]], "PyLong_AsVoidPtr": [[38, 3, 1, "c.PyLong_AsVoidPtr", "pylong"]], "PyLong_Check": [[38, 3, 1, "c.PyLong_Check", "p"]], "PyLong_CheckExact": [[38, 3, 1, "c.PyLong_CheckExact", "p"]], "PyLong_FromDouble": [[38, 3, 1, "c.PyLong_FromDouble", "v"]], "PyLong_FromLong": [[38, 3, 1, "c.PyLong_FromLong", "v"]], "PyLong_FromLongLong": [[38, 3, 1, "c.PyLong_FromLongLong", "v"]], "PyLong_FromSize_t": [[38, 3, 1, "c.PyLong_FromSize_t", "v"]], "PyLong_FromSsize_t": [[38, 3, 1, "c.PyLong_FromSsize_t", "v"]], "PyLong_FromString": [[38, 3, 1, "c.PyLong_FromString", "base"], [38, 3, 1, "c.PyLong_FromString", "pend"], [38, 3, 1, "c.PyLong_FromString", "str"]], "PyLong_FromUnicodeObject": [[38, 3, 1, "c.PyLong_FromUnicodeObject", "base"], [38, 3, 1, "c.PyLong_FromUnicodeObject", "u"]], "PyLong_FromUnsignedLong": [[38, 3, 1, "c.PyLong_FromUnsignedLong", "v"]], "PyLong_FromUnsignedLongLong": [[38, 3, 1, "c.PyLong_FromUnsignedLongLong", "v"]], "PyLong_FromVoidPtr": [[38, 3, 1, "c.PyLong_FromVoidPtr", "p"]], "PyMappingMethods": [[61, 0, 1, "c.PyMappingMethods.mp_ass_subscript", "mp_ass_subscript"], [61, 0, 1, "c.PyMappingMethods.mp_length", "mp_length"], [61, 0, 1, "c.PyMappingMethods.mp_subscript", "mp_subscript"]], "PyMapping_Check": [[39, 3, 1, "c.PyMapping_Check", "o"]], "PyMapping_DelItem": [[39, 3, 1, "c.PyMapping_DelItem", "key"], [39, 3, 1, "c.PyMapping_DelItem", "o"]], "PyMapping_DelItemString": [[39, 3, 1, "c.PyMapping_DelItemString", "key"], [39, 3, 1, "c.PyMapping_DelItemString", "o"]], "PyMapping_GetItemString": [[39, 3, 1, "c.PyMapping_GetItemString", "key"], [39, 3, 1, "c.PyMapping_GetItemString", "o"]], "PyMapping_GetOptionalItem": [[39, 3, 1, "c.PyMapping_GetOptionalItem", "key"], [39, 3, 1, "c.PyMapping_GetOptionalItem", "obj"], [39, 3, 1, "c.PyMapping_GetOptionalItem", "result"]], "PyMapping_GetOptionalItemString": [[39, 3, 1, "c.PyMapping_GetOptionalItemString", "key"], [39, 3, 1, "c.PyMapping_GetOptionalItemString", "obj"], [39, 3, 1, "c.PyMapping_GetOptionalItemString", "result"]], "PyMapping_HasKey": [[39, 3, 1, "c.PyMapping_HasKey", "key"], [39, 3, 1, "c.PyMapping_HasKey", "o"]], "PyMapping_HasKeyString": [[39, 3, 1, "c.PyMapping_HasKeyString", "key"], [39, 3, 1, "c.PyMapping_HasKeyString", "o"]], "PyMapping_HasKeyStringWithError": [[39, 3, 1, "c.PyMapping_HasKeyStringWithError", "key"], [39, 3, 1, "c.PyMapping_HasKeyStringWithError", "o"]], "PyMapping_HasKeyWithError": [[39, 3, 1, "c.PyMapping_HasKeyWithError", "key"], [39, 3, 1, "c.PyMapping_HasKeyWithError", "o"]], "PyMapping_Items": [[39, 3, 1, "c.PyMapping_Items", "o"]], "PyMapping_Keys": [[39, 3, 1, "c.PyMapping_Keys", "o"]], "PyMapping_Length": [[39, 3, 1, "c.PyMapping_Length", "o"]], "PyMapping_SetItemString": [[39, 3, 1, "c.PyMapping_SetItemString", "key"], [39, 3, 1, "c.PyMapping_SetItemString", "o"], [39, 3, 1, "c.PyMapping_SetItemString", "v"]], "PyMapping_Size": [[39, 3, 1, "c.PyMapping_Size", "o"]], "PyMapping_Values": [[39, 3, 1, "c.PyMapping_Values", "o"]], "PyMarshal_ReadLastObjectFromFile": [[40, 3, 1, "c.PyMarshal_ReadLastObjectFromFile", "file"]], "PyMarshal_ReadLongFromFile": [[40, 3, 1, "c.PyMarshal_ReadLongFromFile", "file"]], "PyMarshal_ReadObjectFromFile": [[40, 3, 1, "c.PyMarshal_ReadObjectFromFile", "file"]], "PyMarshal_ReadObjectFromString": [[40, 3, 1, "c.PyMarshal_ReadObjectFromString", "data"], [40, 3, 1, "c.PyMarshal_ReadObjectFromString", "len"]], "PyMarshal_ReadShortFromFile": [[40, 3, 1, "c.PyMarshal_ReadShortFromFile", "file"]], "PyMarshal_WriteLongToFile": [[40, 3, 1, "c.PyMarshal_WriteLongToFile", "file"], [40, 3, 1, "c.PyMarshal_WriteLongToFile", "value"], [40, 3, 1, "c.PyMarshal_WriteLongToFile", "version"]], "PyMarshal_WriteObjectToFile": [[40, 3, 1, "c.PyMarshal_WriteObjectToFile", "file"], [40, 3, 1, "c.PyMarshal_WriteObjectToFile", "value"], [40, 3, 1, "c.PyMarshal_WriteObjectToFile", "version"]], "PyMarshal_WriteObjectToString": [[40, 3, 1, "c.PyMarshal_WriteObjectToString", "value"], [40, 3, 1, "c.PyMarshal_WriteObjectToString", "version"]], "PyMem_Calloc": [[41, 3, 1, "c.PyMem_Calloc", "elsize"], [41, 3, 1, "c.PyMem_Calloc", "nelem"]], "PyMem_Del": [[41, 3, 1, "c.PyMem_Del", "p"]], "PyMem_Free": [[41, 3, 1, "c.PyMem_Free", "p"]], "PyMem_GetAllocator": [[41, 3, 1, "c.PyMem_GetAllocator", "allocator"], [41, 3, 1, "c.PyMem_GetAllocator", "domain"]], "PyMem_Malloc": [[41, 3, 1, "c.PyMem_Malloc", "n"]], "PyMem_RawCalloc": [[41, 3, 1, "c.PyMem_RawCalloc", "elsize"], [41, 3, 1, "c.PyMem_RawCalloc", "nelem"]], "PyMem_RawFree": [[41, 3, 1, "c.PyMem_RawFree", "p"]], "PyMem_RawMalloc": [[41, 3, 1, "c.PyMem_RawMalloc", "n"]], "PyMem_RawRealloc": [[41, 3, 1, "c.PyMem_RawRealloc", "n"], [41, 3, 1, "c.PyMem_RawRealloc", "p"]], "PyMem_Realloc": [[41, 3, 1, "c.PyMem_Realloc", "n"], [41, 3, 1, "c.PyMem_Realloc", "p"]], "PyMem_SetAllocator": [[41, 3, 1, "c.PyMem_SetAllocator", "allocator"], [41, 3, 1, "c.PyMem_SetAllocator", "domain"]], "PyMemberDef": [[56, 0, 1, "c.PyMemberDef.doc", "doc"], [56, 0, 1, "c.PyMemberDef.flags", "flags"], [56, 0, 1, "c.PyMemberDef.name", "name"], [56, 0, 1, "c.PyMemberDef.offset", "offset"], [56, 0, 1, "c.PyMemberDef.type", "type"]], "PyMember_GetOne": [[56, 3, 1, "c.PyMember_GetOne", "m"], [56, 3, 1, "c.PyMember_GetOne", "obj_addr"]], "PyMember_SetOne": [[56, 3, 1, "c.PyMember_SetOne", "m"], [56, 3, 1, "c.PyMember_SetOne", "o"], [56, 3, 1, "c.PyMember_SetOne", "obj_addr"]], "PyMemoryView_Check": [[42, 3, 1, "c.PyMemoryView_Check", "obj"]], "PyMemoryView_FromBuffer": [[42, 3, 1, "c.PyMemoryView_FromBuffer", "view"]], "PyMemoryView_FromMemory": [[42, 3, 1, "c.PyMemoryView_FromMemory", "flags"], [42, 3, 1, "c.PyMemoryView_FromMemory", "mem"], [42, 3, 1, "c.PyMemoryView_FromMemory", "size"]], "PyMemoryView_FromObject": [[42, 3, 1, "c.PyMemoryView_FromObject", "obj"]], "PyMemoryView_GET_BASE": [[42, 3, 1, "c.PyMemoryView_GET_BASE", "mview"]], "PyMemoryView_GET_BUFFER": [[42, 3, 1, "c.PyMemoryView_GET_BUFFER", "mview"]], "PyMemoryView_GetContiguous": [[42, 3, 1, "c.PyMemoryView_GetContiguous", "buffertype"], [42, 3, 1, "c.PyMemoryView_GetContiguous", "obj"], [42, 3, 1, "c.PyMemoryView_GetContiguous", "order"]], "PyMethodDef": [[56, 0, 1, "c.PyMethodDef.ml_doc", "ml_doc"], [56, 0, 1, "c.PyMethodDef.ml_flags", "ml_flags"], [56, 0, 1, "c.PyMethodDef.ml_meth", "ml_meth"], [56, 0, 1, "c.PyMethodDef.ml_name", "ml_name"]], "PyMethod_Check": [[43, 3, 1, "c.PyMethod_Check", "o"]], "PyMethod_Function": [[43, 3, 1, "c.PyMethod_Function", "meth"]], "PyMethod_GET_FUNCTION": [[43, 3, 1, "c.PyMethod_GET_FUNCTION", "meth"]], "PyMethod_GET_SELF": [[43, 3, 1, "c.PyMethod_GET_SELF", "meth"]], "PyMethod_New": [[43, 3, 1, "c.PyMethod_New", "func"], [43, 3, 1, "c.PyMethod_New", "self"]], "PyMethod_Self": [[43, 3, 1, "c.PyMethod_Self", "meth"]], "PyModuleDef": [[44, 0, 1, "c.PyModuleDef.m_base", "m_base"], [44, 0, 1, "c.PyModuleDef.m_clear", "m_clear"], [44, 0, 1, "c.PyModuleDef.m_doc", "m_doc"], [44, 0, 1, "c.PyModuleDef.m_free", "m_free"], [44, 0, 1, "c.PyModuleDef.m_methods", "m_methods"], [44, 0, 1, "c.PyModuleDef.m_name", "m_name"], [44, 0, 1, "c.PyModuleDef.m_size", "m_size"], [44, 0, 1, "c.PyModuleDef.m_slots", "m_slots"], [44, 0, 1, "c.PyModuleDef.m_traverse", "m_traverse"]], "PyModuleDef.m_slots": [[44, 0, 1, "c.PyModuleDef.m_slots.m_reload", "m_reload"]], "PyModuleDef_Init": [[44, 3, 1, "c.PyModuleDef_Init", "def"]], "PyModuleDef_Slot": [[44, 0, 1, "c.PyModuleDef_Slot.slot", "slot"], [44, 0, 1, "c.PyModuleDef_Slot.value", "value"]], "PyModule_Add": [[44, 3, 1, "c.PyModule_Add", "module"], [44, 3, 1, "c.PyModule_Add", "name"], [44, 3, 1, "c.PyModule_Add", "value"]], "PyModule_AddFunctions": [[44, 3, 1, "c.PyModule_AddFunctions", "functions"], [44, 3, 1, "c.PyModule_AddFunctions", "module"]], "PyModule_AddIntConstant": [[44, 3, 1, "c.PyModule_AddIntConstant", "module"], [44, 3, 1, "c.PyModule_AddIntConstant", "name"], [44, 3, 1, "c.PyModule_AddIntConstant", "value"]], "PyModule_AddObject": [[44, 3, 1, "c.PyModule_AddObject", "module"], [44, 3, 1, "c.PyModule_AddObject", "name"], [44, 3, 1, "c.PyModule_AddObject", "value"]], "PyModule_AddObjectRef": [[44, 3, 1, "c.PyModule_AddObjectRef", "module"], [44, 3, 1, "c.PyModule_AddObjectRef", "name"], [44, 3, 1, "c.PyModule_AddObjectRef", "value"]], "PyModule_AddStringConstant": [[44, 3, 1, "c.PyModule_AddStringConstant", "module"], [44, 3, 1, "c.PyModule_AddStringConstant", "name"], [44, 3, 1, "c.PyModule_AddStringConstant", "value"]], "PyModule_AddType": [[44, 3, 1, "c.PyModule_AddType", "module"], [44, 3, 1, "c.PyModule_AddType", "type"]], "PyModule_Check": [[44, 3, 1, "c.PyModule_Check", "p"]], "PyModule_CheckExact": [[44, 3, 1, "c.PyModule_CheckExact", "p"]], "PyModule_Create": [[44, 3, 1, "c.PyModule_Create", "def"]], "PyModule_Create2": [[44, 3, 1, "c.PyModule_Create2", "def"], [44, 3, 1, "c.PyModule_Create2", "module_api_version"]], "PyModule_ExecDef": [[44, 3, 1, "c.PyModule_ExecDef", "def"], [44, 3, 1, "c.PyModule_ExecDef", "module"]], "PyModule_FromDefAndSpec": [[44, 3, 1, "c.PyModule_FromDefAndSpec", "def"], [44, 3, 1, "c.PyModule_FromDefAndSpec", "spec"]], "PyModule_FromDefAndSpec2": [[44, 3, 1, "c.PyModule_FromDefAndSpec2", "def"], [44, 3, 1, "c.PyModule_FromDefAndSpec2", "module_api_version"], [44, 3, 1, "c.PyModule_FromDefAndSpec2", "spec"]], "PyModule_GetDef": [[44, 3, 1, "c.PyModule_GetDef", "module"]], "PyModule_GetDict": [[44, 3, 1, "c.PyModule_GetDict", "module"]], "PyModule_GetFilename": [[44, 3, 1, "c.PyModule_GetFilename", "module"]], "PyModule_GetFilenameObject": [[44, 3, 1, "c.PyModule_GetFilenameObject", "module"]], "PyModule_GetName": [[44, 3, 1, "c.PyModule_GetName", "module"]], "PyModule_GetNameObject": [[44, 3, 1, "c.PyModule_GetNameObject", "module"]], "PyModule_GetState": [[44, 3, 1, "c.PyModule_GetState", "module"]], "PyModule_New": [[44, 3, 1, "c.PyModule_New", "name"]], "PyModule_NewObject": [[44, 3, 1, "c.PyModule_NewObject", "name"]], "PyModule_SetDocString": [[44, 3, 1, "c.PyModule_SetDocString", "docstring"], [44, 3, 1, "c.PyModule_SetDocString", "module"]], "PyNumberMethods": [[61, 0, 1, "c.PyNumberMethods.nb_absolute", "nb_absolute"], [61, 0, 1, "c.PyNumberMethods.nb_add", "nb_add"], [61, 0, 1, "c.PyNumberMethods.nb_and", "nb_and"], [61, 0, 1, "c.PyNumberMethods.nb_bool", "nb_bool"], [61, 0, 1, "c.PyNumberMethods.nb_divmod", "nb_divmod"], [61, 0, 1, "c.PyNumberMethods.nb_float", "nb_float"], [61, 0, 1, "c.PyNumberMethods.nb_floor_divide", "nb_floor_divide"], [61, 0, 1, "c.PyNumberMethods.nb_index", "nb_index"], [61, 0, 1, "c.PyNumberMethods.nb_inplace_add", "nb_inplace_add"], [61, 0, 1, "c.PyNumberMethods.nb_inplace_and", "nb_inplace_and"], [61, 0, 1, "c.PyNumberMethods.nb_inplace_floor_divide", "nb_inplace_floor_divide"], [61, 0, 1, "c.PyNumberMethods.nb_inplace_lshift", "nb_inplace_lshift"], [61, 0, 1, "c.PyNumberMethods.nb_inplace_matrix_multiply", "nb_inplace_matrix_multiply"], [61, 0, 1, "c.PyNumberMethods.nb_inplace_multiply", "nb_inplace_multiply"], [61, 0, 1, "c.PyNumberMethods.nb_inplace_or", "nb_inplace_or"], [61, 0, 1, "c.PyNumberMethods.nb_inplace_power", "nb_inplace_power"], [61, 0, 1, "c.PyNumberMethods.nb_inplace_remainder", "nb_inplace_remainder"], [61, 0, 1, "c.PyNumberMethods.nb_inplace_rshift", "nb_inplace_rshift"], [61, 0, 1, "c.PyNumberMethods.nb_inplace_subtract", "nb_inplace_subtract"], [61, 0, 1, "c.PyNumberMethods.nb_inplace_true_divide", "nb_inplace_true_divide"], [61, 0, 1, "c.PyNumberMethods.nb_inplace_xor", "nb_inplace_xor"], [61, 0, 1, "c.PyNumberMethods.nb_int", "nb_int"], [61, 0, 1, "c.PyNumberMethods.nb_invert", "nb_invert"], [61, 0, 1, "c.PyNumberMethods.nb_lshift", "nb_lshift"], [61, 0, 1, "c.PyNumberMethods.nb_matrix_multiply", "nb_matrix_multiply"], [61, 0, 1, "c.PyNumberMethods.nb_multiply", "nb_multiply"], [61, 0, 1, "c.PyNumberMethods.nb_negative", "nb_negative"], [61, 0, 1, "c.PyNumberMethods.nb_or", "nb_or"], [61, 0, 1, "c.PyNumberMethods.nb_positive", "nb_positive"], [61, 0, 1, "c.PyNumberMethods.nb_power", "nb_power"], [61, 0, 1, "c.PyNumberMethods.nb_remainder", "nb_remainder"], [61, 0, 1, "c.PyNumberMethods.nb_reserved", "nb_reserved"], [61, 0, 1, "c.PyNumberMethods.nb_rshift", "nb_rshift"], [61, 0, 1, "c.PyNumberMethods.nb_subtract", "nb_subtract"], [61, 0, 1, "c.PyNumberMethods.nb_true_divide", "nb_true_divide"], [61, 0, 1, "c.PyNumberMethods.nb_xor", "nb_xor"]], "PyNumber_Absolute": [[46, 3, 1, "c.PyNumber_Absolute", "o"]], "PyNumber_Add": [[46, 3, 1, "c.PyNumber_Add", "o1"], [46, 3, 1, "c.PyNumber_Add", "o2"]], "PyNumber_And": [[46, 3, 1, "c.PyNumber_And", "o1"], [46, 3, 1, "c.PyNumber_And", "o2"]], "PyNumber_AsSsize_t": [[46, 3, 1, "c.PyNumber_AsSsize_t", "exc"], [46, 3, 1, "c.PyNumber_AsSsize_t", "o"]], "PyNumber_Check": [[46, 3, 1, "c.PyNumber_Check", "o"]], "PyNumber_Divmod": [[46, 3, 1, "c.PyNumber_Divmod", "o1"], [46, 3, 1, "c.PyNumber_Divmod", "o2"]], "PyNumber_Float": [[46, 3, 1, "c.PyNumber_Float", "o"]], "PyNumber_FloorDivide": [[46, 3, 1, "c.PyNumber_FloorDivide", "o1"], [46, 3, 1, "c.PyNumber_FloorDivide", "o2"]], "PyNumber_InPlaceAdd": [[46, 3, 1, "c.PyNumber_InPlaceAdd", "o1"], [46, 3, 1, "c.PyNumber_InPlaceAdd", "o2"]], "PyNumber_InPlaceAnd": [[46, 3, 1, "c.PyNumber_InPlaceAnd", "o1"], [46, 3, 1, "c.PyNumber_InPlaceAnd", "o2"]], "PyNumber_InPlaceFloorDivide": [[46, 3, 1, "c.PyNumber_InPlaceFloorDivide", "o1"], [46, 3, 1, "c.PyNumber_InPlaceFloorDivide", "o2"]], "PyNumber_InPlaceLshift": [[46, 3, 1, "c.PyNumber_InPlaceLshift", "o1"], [46, 3, 1, "c.PyNumber_InPlaceLshift", "o2"]], "PyNumber_InPlaceMatrixMultiply": [[46, 3, 1, "c.PyNumber_InPlaceMatrixMultiply", "o1"], [46, 3, 1, "c.PyNumber_InPlaceMatrixMultiply", "o2"]], "PyNumber_InPlaceMultiply": [[46, 3, 1, "c.PyNumber_InPlaceMultiply", "o1"], [46, 3, 1, "c.PyNumber_InPlaceMultiply", "o2"]], "PyNumber_InPlaceOr": [[46, 3, 1, "c.PyNumber_InPlaceOr", "o1"], [46, 3, 1, "c.PyNumber_InPlaceOr", "o2"]], "PyNumber_InPlacePower": [[46, 3, 1, "c.PyNumber_InPlacePower", "o1"], [46, 3, 1, "c.PyNumber_InPlacePower", "o2"], [46, 3, 1, "c.PyNumber_InPlacePower", "o3"]], "PyNumber_InPlaceRemainder": [[46, 3, 1, "c.PyNumber_InPlaceRemainder", "o1"], [46, 3, 1, "c.PyNumber_InPlaceRemainder", "o2"]], "PyNumber_InPlaceRshift": [[46, 3, 1, "c.PyNumber_InPlaceRshift", "o1"], [46, 3, 1, "c.PyNumber_InPlaceRshift", "o2"]], "PyNumber_InPlaceSubtract": [[46, 3, 1, "c.PyNumber_InPlaceSubtract", "o1"], [46, 3, 1, "c.PyNumber_InPlaceSubtract", "o2"]], "PyNumber_InPlaceTrueDivide": [[46, 3, 1, "c.PyNumber_InPlaceTrueDivide", "o1"], [46, 3, 1, "c.PyNumber_InPlaceTrueDivide", "o2"]], "PyNumber_InPlaceXor": [[46, 3, 1, "c.PyNumber_InPlaceXor", "o1"], [46, 3, 1, "c.PyNumber_InPlaceXor", "o2"]], "PyNumber_Index": [[46, 3, 1, "c.PyNumber_Index", "o"]], "PyNumber_Invert": [[46, 3, 1, "c.PyNumber_Invert", "o"]], "PyNumber_Long": [[46, 3, 1, "c.PyNumber_Long", "o"]], "PyNumber_Lshift": [[46, 3, 1, "c.PyNumber_Lshift", "o1"], [46, 3, 1, "c.PyNumber_Lshift", "o2"]], "PyNumber_MatrixMultiply": [[46, 3, 1, "c.PyNumber_MatrixMultiply", "o1"], [46, 3, 1, "c.PyNumber_MatrixMultiply", "o2"]], "PyNumber_Multiply": [[46, 3, 1, "c.PyNumber_Multiply", "o1"], [46, 3, 1, "c.PyNumber_Multiply", "o2"]], "PyNumber_Negative": [[46, 3, 1, "c.PyNumber_Negative", "o"]], "PyNumber_Or": [[46, 3, 1, "c.PyNumber_Or", "o1"], [46, 3, 1, "c.PyNumber_Or", "o2"]], "PyNumber_Positive": [[46, 3, 1, "c.PyNumber_Positive", "o"]], "PyNumber_Power": [[46, 3, 1, "c.PyNumber_Power", "o1"], [46, 3, 1, "c.PyNumber_Power", "o2"], [46, 3, 1, "c.PyNumber_Power", "o3"]], "PyNumber_Remainder": [[46, 3, 1, "c.PyNumber_Remainder", "o1"], [46, 3, 1, "c.PyNumber_Remainder", "o2"]], "PyNumber_Rshift": [[46, 3, 1, "c.PyNumber_Rshift", "o1"], [46, 3, 1, "c.PyNumber_Rshift", "o2"]], "PyNumber_Subtract": [[46, 3, 1, "c.PyNumber_Subtract", "o1"], [46, 3, 1, "c.PyNumber_Subtract", "o2"]], "PyNumber_ToBase": [[46, 3, 1, "c.PyNumber_ToBase", "base"], [46, 3, 1, "c.PyNumber_ToBase", "n"]], "PyNumber_TrueDivide": [[46, 3, 1, "c.PyNumber_TrueDivide", "o1"], [46, 3, 1, "c.PyNumber_TrueDivide", "o2"]], "PyNumber_Xor": [[46, 3, 1, "c.PyNumber_Xor", "o1"], [46, 3, 1, "c.PyNumber_Xor", "o2"]], "PyOS_FSPath": [[57, 3, 1, "c.PyOS_FSPath", "path"]], "PyOS_double_to_string": [[18, 3, 1, "c.PyOS_double_to_string", "flags"], [18, 3, 1, "c.PyOS_double_to_string", "format_code"], [18, 3, 1, "c.PyOS_double_to_string", "precision"], [18, 3, 1, "c.PyOS_double_to_string", "ptype"], [18, 3, 1, "c.PyOS_double_to_string", "val"]], "PyOS_getsig": [[57, 3, 1, "c.PyOS_getsig", "i"]], "PyOS_setsig": [[57, 3, 1, "c.PyOS_setsig", "h"], [57, 3, 1, "c.PyOS_setsig", "i"]], "PyOS_snprintf": [[18, 3, 1, "c.PyOS_snprintf", "format"], [18, 3, 1, "c.PyOS_snprintf", "size"], [18, 3, 1, "c.PyOS_snprintf", "str"]], "PyOS_stricmp": [[18, 3, 1, "c.PyOS_stricmp", "s1"], [18, 3, 1, "c.PyOS_stricmp", "s2"]], "PyOS_string_to_double": [[18, 3, 1, "c.PyOS_string_to_double", "endptr"], [18, 3, 1, "c.PyOS_string_to_double", "overflow_exception"], [18, 3, 1, "c.PyOS_string_to_double", "s"]], "PyOS_strnicmp": [[18, 3, 1, "c.PyOS_strnicmp", "s1"], [18, 3, 1, "c.PyOS_strnicmp", "s2"], [18, 3, 1, "c.PyOS_strnicmp", "size"]], "PyOS_vsnprintf": [[18, 3, 1, "c.PyOS_vsnprintf", "format"], [18, 3, 1, "c.PyOS_vsnprintf", "size"], [18, 3, 1, "c.PyOS_vsnprintf", "str"], [18, 3, 1, "c.PyOS_vsnprintf", "va"]], "PyObject": [[61, 0, 1, "c.PyObject.ob_refcnt", "ob_refcnt"], [61, 0, 1, "c.PyObject.ob_type", "ob_type"]], "PyObject_ASCII": [[47, 3, 1, "c.PyObject_ASCII", "o"]], "PyObject_AsFileDescriptor": [[24, 3, 1, "c.PyObject_AsFileDescriptor", "p"]], "PyObject_Bytes": [[47, 3, 1, "c.PyObject_Bytes", "o"]], "PyObject_Call": [[10, 3, 1, "c.PyObject_Call", "args"], [10, 3, 1, "c.PyObject_Call", "callable"], [10, 3, 1, "c.PyObject_Call", "kwargs"]], "PyObject_CallFunction": [[10, 3, 1, "c.PyObject_CallFunction", "callable"], [10, 3, 1, "c.PyObject_CallFunction", "format"]], "PyObject_CallFunctionObjArgs": [[10, 3, 1, "c.PyObject_CallFunctionObjArgs", "callable"]], "PyObject_CallMethod": [[10, 3, 1, "c.PyObject_CallMethod", "format"], [10, 3, 1, "c.PyObject_CallMethod", "name"], [10, 3, 1, "c.PyObject_CallMethod", "obj"]], "PyObject_CallMethodNoArgs": [[10, 3, 1, "c.PyObject_CallMethodNoArgs", "name"], [10, 3, 1, "c.PyObject_CallMethodNoArgs", "obj"]], "PyObject_CallMethodObjArgs": [[10, 3, 1, "c.PyObject_CallMethodObjArgs", "name"], [10, 3, 1, "c.PyObject_CallMethodObjArgs", "obj"]], "PyObject_CallMethodOneArg": [[10, 3, 1, "c.PyObject_CallMethodOneArg", "arg"], [10, 3, 1, "c.PyObject_CallMethodOneArg", "name"], [10, 3, 1, "c.PyObject_CallMethodOneArg", "obj"]], "PyObject_CallNoArgs": [[10, 3, 1, "c.PyObject_CallNoArgs", "callable"]], "PyObject_CallObject": [[10, 3, 1, "c.PyObject_CallObject", "args"], [10, 3, 1, "c.PyObject_CallObject", "callable"]], "PyObject_CallOneArg": [[10, 3, 1, "c.PyObject_CallOneArg", "arg"], [10, 3, 1, "c.PyObject_CallOneArg", "callable"]], "PyObject_Calloc": [[41, 3, 1, "c.PyObject_Calloc", "elsize"], [41, 3, 1, "c.PyObject_Calloc", "nelem"]], "PyObject_CheckBuffer": [[7, 3, 1, "c.PyObject_CheckBuffer", "obj"]], "PyObject_ClearWeakRefs": [[65, 3, 1, "c.PyObject_ClearWeakRefs", "object"]], "PyObject_CopyData": [[7, 3, 1, "c.PyObject_CopyData", "dest"], [7, 3, 1, "c.PyObject_CopyData", "src"]], "PyObject_Del": [[3, 3, 1, "c.PyObject_Del", "op"]], "PyObject_DelAttr": [[47, 3, 1, "c.PyObject_DelAttr", "attr_name"], [47, 3, 1, "c.PyObject_DelAttr", "o"]], "PyObject_DelAttrString": [[47, 3, 1, "c.PyObject_DelAttrString", "attr_name"], [47, 3, 1, "c.PyObject_DelAttrString", "o"]], "PyObject_DelItem": [[47, 3, 1, "c.PyObject_DelItem", "key"], [47, 3, 1, "c.PyObject_DelItem", "o"]], "PyObject_Dir": [[47, 3, 1, "c.PyObject_Dir", "o"]], "PyObject_Format": [[47, 3, 1, "c.PyObject_Format", "format_spec"], [47, 3, 1, "c.PyObject_Format", "obj"]], "PyObject_Free": [[41, 3, 1, "c.PyObject_Free", "p"]], "PyObject_GC_Del": [[28, 3, 1, "c.PyObject_GC_Del", "op"]], "PyObject_GC_IsFinalized": [[28, 3, 1, "c.PyObject_GC_IsFinalized", "op"]], "PyObject_GC_IsTracked": [[28, 3, 1, "c.PyObject_GC_IsTracked", "op"]], "PyObject_GC_Resize": [[28, 3, 1, "c.PyObject_GC_Resize", "newsize"], [28, 3, 1, "c.PyObject_GC_Resize", "op"]], "PyObject_GC_Track": [[28, 3, 1, "c.PyObject_GC_Track", "op"]], "PyObject_GC_UnTrack": [[28, 3, 1, "c.PyObject_GC_UnTrack", "op"]], "PyObject_GenericGetAttr": [[47, 3, 1, "c.PyObject_GenericGetAttr", "name"], [47, 3, 1, "c.PyObject_GenericGetAttr", "o"]], "PyObject_GenericGetDict": [[47, 3, 1, "c.PyObject_GenericGetDict", "context"], [47, 3, 1, "c.PyObject_GenericGetDict", "o"]], "PyObject_GenericSetAttr": [[47, 3, 1, "c.PyObject_GenericSetAttr", "name"], [47, 3, 1, "c.PyObject_GenericSetAttr", "o"], [47, 3, 1, "c.PyObject_GenericSetAttr", "value"]], "PyObject_GenericSetDict": [[47, 3, 1, "c.PyObject_GenericSetDict", "context"], [47, 3, 1, "c.PyObject_GenericSetDict", "o"], [47, 3, 1, "c.PyObject_GenericSetDict", "value"]], "PyObject_GetAIter": [[47, 3, 1, "c.PyObject_GetAIter", "o"]], "PyObject_GetArenaAllocator": [[41, 3, 1, "c.PyObject_GetArenaAllocator", "allocator"]], "PyObject_GetAttr": [[47, 3, 1, "c.PyObject_GetAttr", "attr_name"], [47, 3, 1, "c.PyObject_GetAttr", "o"]], "PyObject_GetAttrString": [[47, 3, 1, "c.PyObject_GetAttrString", "attr_name"], [47, 3, 1, "c.PyObject_GetAttrString", "o"]], "PyObject_GetBuffer": [[7, 3, 1, "c.PyObject_GetBuffer", "exporter"], [7, 3, 1, "c.PyObject_GetBuffer", "flags"], [7, 3, 1, "c.PyObject_GetBuffer", "view"]], "PyObject_GetItem": [[47, 3, 1, "c.PyObject_GetItem", "key"], [47, 3, 1, "c.PyObject_GetItem", "o"]], "PyObject_GetItemData": [[47, 3, 1, "c.PyObject_GetItemData", "o"]], "PyObject_GetIter": [[47, 3, 1, "c.PyObject_GetIter", "o"]], "PyObject_GetOptionalAttr": [[47, 3, 1, "c.PyObject_GetOptionalAttr", "attr_name"], [47, 3, 1, "c.PyObject_GetOptionalAttr", "obj"], [47, 3, 1, "c.PyObject_GetOptionalAttr", "result"]], "PyObject_GetOptionalAttrString": [[47, 3, 1, "c.PyObject_GetOptionalAttrString", "attr_name"], [47, 3, 1, "c.PyObject_GetOptionalAttrString", "obj"], [47, 3, 1, "c.PyObject_GetOptionalAttrString", "result"]], "PyObject_GetTypeData": [[47, 3, 1, "c.PyObject_GetTypeData", "cls"], [47, 3, 1, "c.PyObject_GetTypeData", "o"]], "PyObject_HasAttr": [[47, 3, 1, "c.PyObject_HasAttr", "attr_name"], [47, 3, 1, "c.PyObject_HasAttr", "o"]], "PyObject_HasAttrString": [[47, 3, 1, "c.PyObject_HasAttrString", "attr_name"], [47, 3, 1, "c.PyObject_HasAttrString", "o"]], "PyObject_HasAttrStringWithError": [[47, 3, 1, "c.PyObject_HasAttrStringWithError", "attr_name"], [47, 3, 1, "c.PyObject_HasAttrStringWithError", "o"]], "PyObject_HasAttrWithError": [[47, 3, 1, "c.PyObject_HasAttrWithError", "attr_name"], [47, 3, 1, "c.PyObject_HasAttrWithError", "o"]], "PyObject_Hash": [[47, 3, 1, "c.PyObject_Hash", "o"]], "PyObject_HashNotImplemented": [[47, 3, 1, "c.PyObject_HashNotImplemented", "o"]], "PyObject_IS_GC": [[28, 3, 1, "c.PyObject_IS_GC", "obj"]], "PyObject_Init": [[3, 3, 1, "c.PyObject_Init", "op"], [3, 3, 1, "c.PyObject_Init", "type"]], "PyObject_InitVar": [[3, 3, 1, "c.PyObject_InitVar", "op"], [3, 3, 1, "c.PyObject_InitVar", "size"], [3, 3, 1, "c.PyObject_InitVar", "type"]], "PyObject_IsInstance": [[47, 3, 1, "c.PyObject_IsInstance", "cls"], [47, 3, 1, "c.PyObject_IsInstance", "inst"]], "PyObject_IsSubclass": [[47, 3, 1, "c.PyObject_IsSubclass", "cls"], [47, 3, 1, "c.PyObject_IsSubclass", "derived"]], "PyObject_IsTrue": [[47, 3, 1, "c.PyObject_IsTrue", "o"]], "PyObject_Length": [[47, 3, 1, "c.PyObject_Length", "o"]], "PyObject_LengthHint": [[47, 3, 1, "c.PyObject_LengthHint", "defaultvalue"], [47, 3, 1, "c.PyObject_LengthHint", "o"]], "PyObject_Malloc": [[41, 3, 1, "c.PyObject_Malloc", "n"]], "PyObject_Not": [[47, 3, 1, "c.PyObject_Not", "o"]], "PyObject_Print": [[47, 3, 1, "c.PyObject_Print", "flags"], [47, 3, 1, "c.PyObject_Print", "fp"], [47, 3, 1, "c.PyObject_Print", "o"]], "PyObject_Realloc": [[41, 3, 1, "c.PyObject_Realloc", "n"], [41, 3, 1, "c.PyObject_Realloc", "p"]], "PyObject_Repr": [[47, 3, 1, "c.PyObject_Repr", "o"]], "PyObject_RichCompare": [[47, 3, 1, "c.PyObject_RichCompare", "o1"], [47, 3, 1, "c.PyObject_RichCompare", "o2"], [47, 3, 1, "c.PyObject_RichCompare", "opid"]], "PyObject_RichCompareBool": [[47, 3, 1, "c.PyObject_RichCompareBool", "o1"], [47, 3, 1, "c.PyObject_RichCompareBool", "o2"], [47, 3, 1, "c.PyObject_RichCompareBool", "opid"]], "PyObject_SetArenaAllocator": [[41, 3, 1, "c.PyObject_SetArenaAllocator", "allocator"]], "PyObject_SetAttr": [[47, 3, 1, "c.PyObject_SetAttr", "attr_name"], [47, 3, 1, "c.PyObject_SetAttr", "o"], [47, 3, 1, "c.PyObject_SetAttr", "v"]], "PyObject_SetAttrString": [[47, 3, 1, "c.PyObject_SetAttrString", "attr_name"], [47, 3, 1, "c.PyObject_SetAttrString", "o"], [47, 3, 1, "c.PyObject_SetAttrString", "v"]], "PyObject_SetItem": [[47, 3, 1, "c.PyObject_SetItem", "key"], [47, 3, 1, "c.PyObject_SetItem", "o"], [47, 3, 1, "c.PyObject_SetItem", "v"]], "PyObject_Size": [[47, 3, 1, "c.PyObject_Size", "o"]], "PyObject_Str": [[47, 3, 1, "c.PyObject_Str", "o"]], "PyObject_Type": [[47, 3, 1, "c.PyObject_Type", "o"]], "PyObject_TypeCheck": [[47, 3, 1, "c.PyObject_TypeCheck", "o"], [47, 3, 1, "c.PyObject_TypeCheck", "type"]], "PyObject_Vectorcall": [[10, 3, 1, "c.PyObject_Vectorcall", "args"], [10, 3, 1, "c.PyObject_Vectorcall", "callable"], [10, 3, 1, "c.PyObject_Vectorcall", "kwnames"], [10, 3, 1, "c.PyObject_Vectorcall", "nargsf"]], "PyObject_VectorcallDict": [[10, 3, 1, "c.PyObject_VectorcallDict", "args"], [10, 3, 1, "c.PyObject_VectorcallDict", "callable"], [10, 3, 1, "c.PyObject_VectorcallDict", "kwdict"], [10, 3, 1, "c.PyObject_VectorcallDict", "nargsf"]], "PyObject_VectorcallMethod": [[10, 3, 1, "c.PyObject_VectorcallMethod", "args"], [10, 3, 1, "c.PyObject_VectorcallMethod", "kwnames"], [10, 3, 1, "c.PyObject_VectorcallMethod", "name"], [10, 3, 1, "c.PyObject_VectorcallMethod", "nargsf"]], "PyPreConfig": [[33, 0, 1, "c.PyPreConfig.allocator", "allocator"], [33, 0, 1, "c.PyPreConfig.coerce_c_locale", "coerce_c_locale"], [33, 0, 1, "c.PyPreConfig.coerce_c_locale_warn", "coerce_c_locale_warn"], [33, 0, 1, "c.PyPreConfig.configure_locale", "configure_locale"], [33, 0, 1, "c.PyPreConfig.dev_mode", "dev_mode"], [33, 0, 1, "c.PyPreConfig.isolated", "isolated"], [33, 0, 1, "c.PyPreConfig.legacy_windows_fs_encoding", "legacy_windows_fs_encoding"], [33, 0, 1, "c.PyPreConfig.parse_argv", "parse_argv"], [33, 0, 1, "c.PyPreConfig.use_environment", "use_environment"], [33, 0, 1, "c.PyPreConfig.utf8_mode", "utf8_mode"]], "PyPreConfig_InitIsolatedConfig": [[33, 3, 1, "c.PyPreConfig_InitIsolatedConfig", "preconfig"]], "PyPreConfig_InitPythonConfig": [[33, 3, 1, "c.PyPreConfig_InitPythonConfig", "preconfig"]], "PyRun_AnyFile": [[64, 3, 1, "c.PyRun_AnyFile", "filename"], [64, 3, 1, "c.PyRun_AnyFile", "fp"]], "PyRun_AnyFileEx": [[64, 3, 1, "c.PyRun_AnyFileEx", "closeit"], [64, 3, 1, "c.PyRun_AnyFileEx", "filename"], [64, 3, 1, "c.PyRun_AnyFileEx", "fp"]], "PyRun_AnyFileExFlags": [[64, 3, 1, "c.PyRun_AnyFileExFlags", "closeit"], [64, 3, 1, "c.PyRun_AnyFileExFlags", "filename"], [64, 3, 1, "c.PyRun_AnyFileExFlags", "flags"], [64, 3, 1, "c.PyRun_AnyFileExFlags", "fp"]], "PyRun_AnyFileFlags": [[64, 3, 1, "c.PyRun_AnyFileFlags", "filename"], [64, 3, 1, "c.PyRun_AnyFileFlags", "flags"], [64, 3, 1, "c.PyRun_AnyFileFlags", "fp"]], "PyRun_File": [[64, 3, 1, "c.PyRun_File", "filename"], [64, 3, 1, "c.PyRun_File", "fp"], [64, 3, 1, "c.PyRun_File", "globals"], [64, 3, 1, "c.PyRun_File", "locals"], [64, 3, 1, "c.PyRun_File", "start"]], "PyRun_FileEx": [[64, 3, 1, "c.PyRun_FileEx", "closeit"], [64, 3, 1, "c.PyRun_FileEx", "filename"], [64, 3, 1, "c.PyRun_FileEx", "fp"], [64, 3, 1, "c.PyRun_FileEx", "globals"], [64, 3, 1, "c.PyRun_FileEx", "locals"], [64, 3, 1, "c.PyRun_FileEx", "start"]], "PyRun_FileExFlags": [[64, 3, 1, "c.PyRun_FileExFlags", "closeit"], [64, 3, 1, "c.PyRun_FileExFlags", "filename"], [64, 3, 1, "c.PyRun_FileExFlags", "flags"], [64, 3, 1, "c.PyRun_FileExFlags", "fp"], [64, 3, 1, "c.PyRun_FileExFlags", "globals"], [64, 3, 1, "c.PyRun_FileExFlags", "locals"], [64, 3, 1, "c.PyRun_FileExFlags", "start"]], "PyRun_FileFlags": [[64, 3, 1, "c.PyRun_FileFlags", "filename"], [64, 3, 1, "c.PyRun_FileFlags", "flags"], [64, 3, 1, "c.PyRun_FileFlags", "fp"], [64, 3, 1, "c.PyRun_FileFlags", "globals"], [64, 3, 1, "c.PyRun_FileFlags", "locals"], [64, 3, 1, "c.PyRun_FileFlags", "start"]], "PyRun_InteractiveLoop": [[64, 3, 1, "c.PyRun_InteractiveLoop", "filename"], [64, 3, 1, "c.PyRun_InteractiveLoop", "fp"]], "PyRun_InteractiveLoopFlags": [[64, 3, 1, "c.PyRun_InteractiveLoopFlags", "filename"], [64, 3, 1, "c.PyRun_InteractiveLoopFlags", "flags"], [64, 3, 1, "c.PyRun_InteractiveLoopFlags", "fp"]], "PyRun_InteractiveOne": [[64, 3, 1, "c.PyRun_InteractiveOne", "filename"], [64, 3, 1, "c.PyRun_InteractiveOne", "fp"]], "PyRun_InteractiveOneFlags": [[64, 3, 1, "c.PyRun_InteractiveOneFlags", "filename"], [64, 3, 1, "c.PyRun_InteractiveOneFlags", "flags"], [64, 3, 1, "c.PyRun_InteractiveOneFlags", "fp"]], "PyRun_SimpleFile": [[64, 3, 1, "c.PyRun_SimpleFile", "filename"], [64, 3, 1, "c.PyRun_SimpleFile", "fp"]], "PyRun_SimpleFileEx": [[64, 3, 1, "c.PyRun_SimpleFileEx", "closeit"], [64, 3, 1, "c.PyRun_SimpleFileEx", "filename"], [64, 3, 1, "c.PyRun_SimpleFileEx", "fp"]], "PyRun_SimpleFileExFlags": [[64, 3, 1, "c.PyRun_SimpleFileExFlags", "closeit"], [64, 3, 1, "c.PyRun_SimpleFileExFlags", "filename"], [64, 3, 1, "c.PyRun_SimpleFileExFlags", "flags"], [64, 3, 1, "c.PyRun_SimpleFileExFlags", "fp"]], "PyRun_SimpleString": [[64, 3, 1, "c.PyRun_SimpleString", "command"]], "PyRun_SimpleStringFlags": [[64, 3, 1, "c.PyRun_SimpleStringFlags", "command"], [64, 3, 1, "c.PyRun_SimpleStringFlags", "flags"]], "PyRun_String": [[64, 3, 1, "c.PyRun_String", "globals"], [64, 3, 1, "c.PyRun_String", "locals"], [64, 3, 1, "c.PyRun_String", "start"], [64, 3, 1, "c.PyRun_String", "str"]], "PyRun_StringFlags": [[64, 3, 1, "c.PyRun_StringFlags", "flags"], [64, 3, 1, "c.PyRun_StringFlags", "globals"], [64, 3, 1, "c.PyRun_StringFlags", "locals"], [64, 3, 1, "c.PyRun_StringFlags", "start"], [64, 3, 1, "c.PyRun_StringFlags", "str"]], "PySeqIter_Check": [[36, 3, 1, "c.PySeqIter_Check", "op"]], "PySeqIter_New": [[36, 3, 1, "c.PySeqIter_New", "seq"]], "PySequenceMethods": [[61, 0, 1, "c.PySequenceMethods.sq_ass_item", "sq_ass_item"], [61, 0, 1, "c.PySequenceMethods.sq_concat", "sq_concat"], [61, 0, 1, "c.PySequenceMethods.sq_contains", "sq_contains"], [61, 0, 1, "c.PySequenceMethods.sq_inplace_concat", "sq_inplace_concat"], [61, 0, 1, "c.PySequenceMethods.sq_inplace_repeat", "sq_inplace_repeat"], [61, 0, 1, "c.PySequenceMethods.sq_item", "sq_item"], [61, 0, 1, "c.PySequenceMethods.sq_length", "sq_length"], [61, 0, 1, "c.PySequenceMethods.sq_repeat", "sq_repeat"]], "PySequence_Check": [[52, 3, 1, "c.PySequence_Check", "o"]], "PySequence_Concat": [[52, 3, 1, "c.PySequence_Concat", "o1"], [52, 3, 1, "c.PySequence_Concat", "o2"]], "PySequence_Contains": [[52, 3, 1, "c.PySequence_Contains", "o"], [52, 3, 1, "c.PySequence_Contains", "value"]], "PySequence_Count": [[52, 3, 1, "c.PySequence_Count", "o"], [52, 3, 1, "c.PySequence_Count", "value"]], "PySequence_DelItem": [[52, 3, 1, "c.PySequence_DelItem", "i"], [52, 3, 1, "c.PySequence_DelItem", "o"]], "PySequence_DelSlice": [[52, 3, 1, "c.PySequence_DelSlice", "i1"], [52, 3, 1, "c.PySequence_DelSlice", "i2"], [52, 3, 1, "c.PySequence_DelSlice", "o"]], "PySequence_Fast": [[52, 3, 1, "c.PySequence_Fast", "m"], [52, 3, 1, "c.PySequence_Fast", "o"]], "PySequence_Fast_GET_ITEM": [[52, 3, 1, "c.PySequence_Fast_GET_ITEM", "i"], [52, 3, 1, "c.PySequence_Fast_GET_ITEM", "o"]], "PySequence_Fast_GET_SIZE": [[52, 3, 1, "c.PySequence_Fast_GET_SIZE", "o"]], "PySequence_Fast_ITEMS": [[52, 3, 1, "c.PySequence_Fast_ITEMS", "o"]], "PySequence_GetItem": [[52, 3, 1, "c.PySequence_GetItem", "i"], [52, 3, 1, "c.PySequence_GetItem", "o"]], "PySequence_GetSlice": [[52, 3, 1, "c.PySequence_GetSlice", "i1"], [52, 3, 1, "c.PySequence_GetSlice", "i2"], [52, 3, 1, "c.PySequence_GetSlice", "o"]], "PySequence_ITEM": [[52, 3, 1, "c.PySequence_ITEM", "i"], [52, 3, 1, "c.PySequence_ITEM", "o"]], "PySequence_InPlaceConcat": [[52, 3, 1, "c.PySequence_InPlaceConcat", "o1"], [52, 3, 1, "c.PySequence_InPlaceConcat", "o2"]], "PySequence_InPlaceRepeat": [[52, 3, 1, "c.PySequence_InPlaceRepeat", "count"], [52, 3, 1, "c.PySequence_InPlaceRepeat", "o"]], "PySequence_Index": [[52, 3, 1, "c.PySequence_Index", "o"], [52, 3, 1, "c.PySequence_Index", "value"]], "PySequence_Length": [[52, 3, 1, "c.PySequence_Length", "o"]], "PySequence_List": [[52, 3, 1, "c.PySequence_List", "o"]], "PySequence_Repeat": [[52, 3, 1, "c.PySequence_Repeat", "count"], [52, 3, 1, "c.PySequence_Repeat", "o"]], "PySequence_SetItem": [[52, 3, 1, "c.PySequence_SetItem", "i"], [52, 3, 1, "c.PySequence_SetItem", "o"], [52, 3, 1, "c.PySequence_SetItem", "v"]], "PySequence_SetSlice": [[52, 3, 1, "c.PySequence_SetSlice", "i1"], [52, 3, 1, "c.PySequence_SetSlice", "i2"], [52, 3, 1, "c.PySequence_SetSlice", "o"], [52, 3, 1, "c.PySequence_SetSlice", "v"]], "PySequence_Size": [[52, 3, 1, "c.PySequence_Size", "o"]], "PySequence_Tuple": [[52, 3, 1, "c.PySequence_Tuple", "o"]], "PySet_Add": [[53, 3, 1, "c.PySet_Add", "key"], [53, 3, 1, "c.PySet_Add", "set"]], "PySet_Check": [[53, 3, 1, "c.PySet_Check", "p"]], "PySet_CheckExact": [[53, 3, 1, "c.PySet_CheckExact", "p"]], "PySet_Clear": [[53, 3, 1, "c.PySet_Clear", "set"]], "PySet_Contains": [[53, 3, 1, "c.PySet_Contains", "anyset"], [53, 3, 1, "c.PySet_Contains", "key"]], "PySet_Discard": [[53, 3, 1, "c.PySet_Discard", "key"], [53, 3, 1, "c.PySet_Discard", "set"]], "PySet_GET_SIZE": [[53, 3, 1, "c.PySet_GET_SIZE", "anyset"]], "PySet_New": [[53, 3, 1, "c.PySet_New", "iterable"]], "PySet_Pop": [[53, 3, 1, "c.PySet_Pop", "set"]], "PySet_Size": [[53, 3, 1, "c.PySet_Size", "anyset"]], "PySignal_SetWakeupFd": [[23, 3, 1, "c.PySignal_SetWakeupFd", "fd"]], "PySlice_AdjustIndices": [[54, 3, 1, "c.PySlice_AdjustIndices", "length"], [54, 3, 1, "c.PySlice_AdjustIndices", "start"], [54, 3, 1, "c.PySlice_AdjustIndices", "step"], [54, 3, 1, "c.PySlice_AdjustIndices", "stop"]], "PySlice_Check": [[54, 3, 1, "c.PySlice_Check", "ob"]], "PySlice_GetIndices": [[54, 3, 1, "c.PySlice_GetIndices", "length"], [54, 3, 1, "c.PySlice_GetIndices", "slice"], [54, 3, 1, "c.PySlice_GetIndices", "start"], [54, 3, 1, "c.PySlice_GetIndices", "step"], [54, 3, 1, "c.PySlice_GetIndices", "stop"]], "PySlice_GetIndicesEx": [[54, 3, 1, "c.PySlice_GetIndicesEx", "length"], [54, 3, 1, "c.PySlice_GetIndicesEx", "slice"], [54, 3, 1, "c.PySlice_GetIndicesEx", "slicelength"], [54, 3, 1, "c.PySlice_GetIndicesEx", "start"], [54, 3, 1, "c.PySlice_GetIndicesEx", "step"], [54, 3, 1, "c.PySlice_GetIndicesEx", "stop"]], "PySlice_New": [[54, 3, 1, "c.PySlice_New", "start"], [54, 3, 1, "c.PySlice_New", "step"], [54, 3, 1, "c.PySlice_New", "stop"]], "PySlice_Unpack": [[54, 3, 1, "c.PySlice_Unpack", "slice"], [54, 3, 1, "c.PySlice_Unpack", "start"], [54, 3, 1, "c.PySlice_Unpack", "step"], [54, 3, 1, "c.PySlice_Unpack", "stop"]], "PyState_AddModule": [[44, 3, 1, "c.PyState_AddModule", "def"], [44, 3, 1, "c.PyState_AddModule", "module"]], "PyState_FindModule": [[44, 3, 1, "c.PyState_FindModule", "def"]], "PyState_RemoveModule": [[44, 3, 1, "c.PyState_RemoveModule", "def"]], "PyStatus": [[33, 0, 1, "c.PyStatus.err_msg", "err_msg"], [33, 0, 1, "c.PyStatus.exitcode", "exitcode"], [33, 0, 1, "c.PyStatus.func", "func"]], "PyStatus_Error": [[33, 3, 1, "c.PyStatus_Error", "err_msg"]], "PyStatus_Exception": [[33, 3, 1, "c.PyStatus_Exception", "status"]], "PyStatus_Exit": [[33, 3, 1, "c.PyStatus_Exit", "exitcode"]], "PyStatus_IsError": [[33, 3, 1, "c.PyStatus_IsError", "status"]], "PyStatus_IsExit": [[33, 3, 1, "c.PyStatus_IsExit", "status"]], "PyStructSequence_Desc": [[58, 0, 1, "c.PyStructSequence_Desc.doc", "doc"], [58, 0, 1, "c.PyStructSequence_Desc.fields", "fields"], [58, 0, 1, "c.PyStructSequence_Desc.n_in_sequence", "n_in_sequence"], [58, 0, 1, "c.PyStructSequence_Desc.name", "name"]], "PyStructSequence_Field": [[58, 0, 1, "c.PyStructSequence_Field.doc", "doc"], [58, 0, 1, "c.PyStructSequence_Field.name", "name"]], "PyStructSequence_GET_ITEM": [[58, 3, 1, "c.PyStructSequence_GET_ITEM", "p"], [58, 3, 1, "c.PyStructSequence_GET_ITEM", "pos"]], "PyStructSequence_GetItem": [[58, 3, 1, "c.PyStructSequence_GetItem", "p"], [58, 3, 1, "c.PyStructSequence_GetItem", "pos"]], "PyStructSequence_InitType": [[58, 3, 1, "c.PyStructSequence_InitType", "desc"], [58, 3, 1, "c.PyStructSequence_InitType", "type"]], "PyStructSequence_InitType2": [[58, 3, 1, "c.PyStructSequence_InitType2", "desc"], [58, 3, 1, "c.PyStructSequence_InitType2", "type"]], "PyStructSequence_New": [[58, 3, 1, "c.PyStructSequence_New", "type"]], "PyStructSequence_NewType": [[58, 3, 1, "c.PyStructSequence_NewType", "desc"]], "PyStructSequence_SET_ITEM": [[58, 3, 1, "c.PyStructSequence_SET_ITEM", "o"], [58, 3, 1, "c.PyStructSequence_SET_ITEM", "p"], [58, 3, 1, "c.PyStructSequence_SET_ITEM", "pos"]], "PyStructSequence_SetItem": [[58, 3, 1, "c.PyStructSequence_SetItem", "o"], [58, 3, 1, "c.PyStructSequence_SetItem", "p"], [58, 3, 1, "c.PyStructSequence_SetItem", "pos"]], "PySys_AddAuditHook": [[57, 3, 1, "c.PySys_AddAuditHook", "hook"], [57, 3, 1, "c.PySys_AddAuditHook", "userData"]], "PySys_Audit": [[57, 3, 1, "c.PySys_Audit", "event"], [57, 3, 1, "c.PySys_Audit", "format"]], "PySys_FormatStderr": [[57, 3, 1, "c.PySys_FormatStderr", "format"]], "PySys_FormatStdout": [[57, 3, 1, "c.PySys_FormatStdout", "format"]], "PySys_GetObject": [[57, 3, 1, "c.PySys_GetObject", "name"]], "PySys_SetObject": [[57, 3, 1, "c.PySys_SetObject", "name"], [57, 3, 1, "c.PySys_SetObject", "v"]], "PySys_WriteStderr": [[57, 3, 1, "c.PySys_WriteStderr", "format"]], "PySys_WriteStdout": [[57, 3, 1, "c.PySys_WriteStdout", "format"]], "PyTZInfo_Check": [[20, 3, 1, "c.PyTZInfo_Check", "ob"]], "PyTZInfo_CheckExact": [[20, 3, 1, "c.PyTZInfo_CheckExact", "ob"]], "PyThreadState": [[32, 0, 1, "c.PyThreadState.interp", "interp"]], "PyThreadState_Clear": [[32, 3, 1, "c.PyThreadState_Clear", "tstate"]], "PyThreadState_Delete": [[32, 3, 1, "c.PyThreadState_Delete", "tstate"]], "PyThreadState_EnterTracing": [[32, 3, 1, "c.PyThreadState_EnterTracing", "tstate"]], "PyThreadState_GetFrame": [[32, 3, 1, "c.PyThreadState_GetFrame", "tstate"]], "PyThreadState_GetID": [[32, 3, 1, "c.PyThreadState_GetID", "tstate"]], "PyThreadState_GetInterpreter": [[32, 3, 1, "c.PyThreadState_GetInterpreter", "tstate"]], "PyThreadState_LeaveTracing": [[32, 3, 1, "c.PyThreadState_LeaveTracing", "tstate"]], "PyThreadState_New": [[32, 3, 1, "c.PyThreadState_New", "interp"]], "PyThreadState_Next": [[32, 3, 1, "c.PyThreadState_Next", "tstate"]], "PyThreadState_SetAsyncExc": [[32, 3, 1, "c.PyThreadState_SetAsyncExc", "exc"], [32, 3, 1, "c.PyThreadState_SetAsyncExc", "id"]], "PyThreadState_Swap": [[32, 3, 1, "c.PyThreadState_Swap", "tstate"]], "PyThread_delete_key": [[32, 3, 1, "c.PyThread_delete_key", "key"]], "PyThread_delete_key_value": [[32, 3, 1, "c.PyThread_delete_key_value", "key"]], "PyThread_get_key_value": [[32, 3, 1, "c.PyThread_get_key_value", "key"]], "PyThread_set_key_value": [[32, 3, 1, "c.PyThread_set_key_value", "key"], [32, 3, 1, "c.PyThread_set_key_value", "value"]], "PyThread_tss_create": [[32, 3, 1, "c.PyThread_tss_create", "key"]], "PyThread_tss_delete": [[32, 3, 1, "c.PyThread_tss_delete", "key"]], "PyThread_tss_free": [[32, 3, 1, "c.PyThread_tss_free", "key"]], "PyThread_tss_get": [[32, 3, 1, "c.PyThread_tss_get", "key"]], "PyThread_tss_is_created": [[32, 3, 1, "c.PyThread_tss_is_created", "key"]], "PyThread_tss_set": [[32, 3, 1, "c.PyThread_tss_set", "key"], [32, 3, 1, "c.PyThread_tss_set", "value"]], "PyTimeZone_FromOffset": [[20, 3, 1, "c.PyTimeZone_FromOffset", "offset"]], "PyTimeZone_FromOffsetAndName": [[20, 3, 1, "c.PyTimeZone_FromOffsetAndName", "name"], [20, 3, 1, "c.PyTimeZone_FromOffsetAndName", "offset"]], "PyTime_Check": [[20, 3, 1, "c.PyTime_Check", "ob"]], "PyTime_CheckExact": [[20, 3, 1, "c.PyTime_CheckExact", "ob"]], "PyTime_FromTime": [[20, 3, 1, "c.PyTime_FromTime", "hour"], [20, 3, 1, "c.PyTime_FromTime", "minute"], [20, 3, 1, "c.PyTime_FromTime", "second"], [20, 3, 1, "c.PyTime_FromTime", "usecond"]], "PyTime_FromTimeAndFold": [[20, 3, 1, "c.PyTime_FromTimeAndFold", "fold"], [20, 3, 1, "c.PyTime_FromTimeAndFold", "hour"], [20, 3, 1, "c.PyTime_FromTimeAndFold", "minute"], [20, 3, 1, "c.PyTime_FromTimeAndFold", "second"], [20, 3, 1, "c.PyTime_FromTimeAndFold", "usecond"]], "PyTraceMalloc_Track": [[41, 3, 1, "c.PyTraceMalloc_Track", "domain"], [41, 3, 1, "c.PyTraceMalloc_Track", "ptr"], [41, 3, 1, "c.PyTraceMalloc_Track", "size"]], "PyTraceMalloc_Untrack": [[41, 3, 1, "c.PyTraceMalloc_Untrack", "domain"], [41, 3, 1, "c.PyTraceMalloc_Untrack", "ptr"]], "PyTuple_Check": [[58, 3, 1, "c.PyTuple_Check", "p"]], "PyTuple_CheckExact": [[58, 3, 1, "c.PyTuple_CheckExact", "p"]], "PyTuple_GET_ITEM": [[58, 3, 1, "c.PyTuple_GET_ITEM", "p"], [58, 3, 1, "c.PyTuple_GET_ITEM", "pos"]], "PyTuple_GET_SIZE": [[58, 3, 1, "c.PyTuple_GET_SIZE", "p"]], "PyTuple_GetItem": [[58, 3, 1, "c.PyTuple_GetItem", "p"], [58, 3, 1, "c.PyTuple_GetItem", "pos"]], "PyTuple_GetSlice": [[58, 3, 1, "c.PyTuple_GetSlice", "high"], [58, 3, 1, "c.PyTuple_GetSlice", "low"], [58, 3, 1, "c.PyTuple_GetSlice", "p"]], "PyTuple_New": [[58, 3, 1, "c.PyTuple_New", "len"]], "PyTuple_Pack": [[58, 3, 1, "c.PyTuple_Pack", "n"]], "PyTuple_SET_ITEM": [[58, 3, 1, "c.PyTuple_SET_ITEM", "o"], [58, 3, 1, "c.PyTuple_SET_ITEM", "p"], [58, 3, 1, "c.PyTuple_SET_ITEM", "pos"]], "PyTuple_SetItem": [[58, 3, 1, "c.PyTuple_SetItem", "o"], [58, 3, 1, "c.PyTuple_SetItem", "p"], [58, 3, 1, "c.PyTuple_SetItem", "pos"]], "PyTuple_Size": [[58, 3, 1, "c.PyTuple_Size", "p"]], "PyTypeObject": [[61, 0, 1, "c.PyTypeObject.tp_alloc", "tp_alloc"], [61, 0, 1, "c.PyTypeObject.tp_as_async", "tp_as_async"], [61, 0, 1, "c.PyTypeObject.tp_as_buffer", "tp_as_buffer"], [61, 0, 1, "c.PyTypeObject.tp_as_mapping", "tp_as_mapping"], [61, 0, 1, "c.PyTypeObject.tp_as_number", "tp_as_number"], [61, 0, 1, "c.PyTypeObject.tp_as_sequence", "tp_as_sequence"], [61, 0, 1, "c.PyTypeObject.tp_base", "tp_base"], [61, 0, 1, "c.PyTypeObject.tp_bases", "tp_bases"], [61, 0, 1, "c.PyTypeObject.tp_basicsize", "tp_basicsize"], [61, 0, 1, "c.PyTypeObject.tp_cache", "tp_cache"], [61, 0, 1, "c.PyTypeObject.tp_call", "tp_call"], [61, 0, 1, "c.PyTypeObject.tp_clear", "tp_clear"], [61, 0, 1, "c.PyTypeObject.tp_dealloc", "tp_dealloc"], [61, 0, 1, "c.PyTypeObject.tp_del", "tp_del"], [61, 0, 1, "c.PyTypeObject.tp_descr_get", "tp_descr_get"], [61, 0, 1, "c.PyTypeObject.tp_descr_set", "tp_descr_set"], [61, 0, 1, "c.PyTypeObject.tp_dict", "tp_dict"], [61, 0, 1, "c.PyTypeObject.tp_dictoffset", "tp_dictoffset"], [61, 0, 1, "c.PyTypeObject.tp_doc", "tp_doc"], [61, 0, 1, "c.PyTypeObject.tp_finalize", "tp_finalize"], [61, 0, 1, "c.PyTypeObject.tp_flags", "tp_flags"], [61, 0, 1, "c.PyTypeObject.tp_free", "tp_free"], [61, 0, 1, "c.PyTypeObject.tp_getattr", "tp_getattr"], [61, 0, 1, "c.PyTypeObject.tp_getattro", "tp_getattro"], [61, 0, 1, "c.PyTypeObject.tp_getset", "tp_getset"], [61, 0, 1, "c.PyTypeObject.tp_hash", "tp_hash"], [61, 0, 1, "c.PyTypeObject.tp_init", "tp_init"], [61, 0, 1, "c.PyTypeObject.tp_is_gc", "tp_is_gc"], [61, 0, 1, "c.PyTypeObject.tp_itemsize", "tp_itemsize"], [61, 0, 1, "c.PyTypeObject.tp_iter", "tp_iter"], [61, 0, 1, "c.PyTypeObject.tp_iternext", "tp_iternext"], [61, 0, 1, "c.PyTypeObject.tp_members", "tp_members"], [61, 0, 1, "c.PyTypeObject.tp_methods", "tp_methods"], [61, 0, 1, "c.PyTypeObject.tp_mro", "tp_mro"], [61, 0, 1, "c.PyTypeObject.tp_name", "tp_name"], [61, 0, 1, "c.PyTypeObject.tp_new", "tp_new"], [61, 0, 1, "c.PyTypeObject.tp_repr", "tp_repr"], [61, 0, 1, "c.PyTypeObject.tp_richcompare", "tp_richcompare"], [61, 0, 1, "c.PyTypeObject.tp_setattr", "tp_setattr"], [61, 0, 1, "c.PyTypeObject.tp_setattro", "tp_setattro"], [61, 0, 1, "c.PyTypeObject.tp_str", "tp_str"], [61, 0, 1, "c.PyTypeObject.tp_subclasses", "tp_subclasses"], [61, 0, 1, "c.PyTypeObject.tp_traverse", "tp_traverse"], [61, 0, 1, "c.PyTypeObject.tp_vectorcall", "tp_vectorcall"], [61, 0, 1, "c.PyTypeObject.tp_vectorcall_offset", "tp_vectorcall_offset"], [61, 0, 1, "c.PyTypeObject.tp_version_tag", "tp_version_tag"], [61, 0, 1, "c.PyTypeObject.tp_watched", "tp_watched"], [61, 0, 1, "c.PyTypeObject.tp_weaklist", "tp_weaklist"], [61, 0, 1, "c.PyTypeObject.tp_weaklistoffset", "tp_weaklistoffset"]], "PyType_AddWatcher": [[59, 3, 1, "c.PyType_AddWatcher", "callback"]], "PyType_Check": [[59, 3, 1, "c.PyType_Check", "o"]], "PyType_CheckExact": [[59, 3, 1, "c.PyType_CheckExact", "o"]], "PyType_ClearWatcher": [[59, 3, 1, "c.PyType_ClearWatcher", "watcher_id"]], "PyType_FromMetaclass": [[59, 3, 1, "c.PyType_FromMetaclass", "bases"], [59, 3, 1, "c.PyType_FromMetaclass", "metaclass"], [59, 3, 1, "c.PyType_FromMetaclass", "module"], [59, 3, 1, "c.PyType_FromMetaclass", "spec"]], "PyType_FromModuleAndSpec": [[59, 3, 1, "c.PyType_FromModuleAndSpec", "bases"], [59, 3, 1, "c.PyType_FromModuleAndSpec", "module"], [59, 3, 1, "c.PyType_FromModuleAndSpec", "spec"]], "PyType_FromSpec": [[59, 3, 1, "c.PyType_FromSpec", "spec"]], "PyType_FromSpecWithBases": [[59, 3, 1, "c.PyType_FromSpecWithBases", "bases"], [59, 3, 1, "c.PyType_FromSpecWithBases", "spec"]], "PyType_GenericAlloc": [[59, 3, 1, "c.PyType_GenericAlloc", "nitems"], [59, 3, 1, "c.PyType_GenericAlloc", "type"]], "PyType_GenericNew": [[59, 3, 1, "c.PyType_GenericNew", "args"], [59, 3, 1, "c.PyType_GenericNew", "kwds"], [59, 3, 1, "c.PyType_GenericNew", "type"]], "PyType_GetDict": [[59, 3, 1, "c.PyType_GetDict", "type"]], "PyType_GetFlags": [[59, 3, 1, "c.PyType_GetFlags", "type"]], "PyType_GetModule": [[59, 3, 1, "c.PyType_GetModule", "type"]], "PyType_GetModuleByDef": [[59, 3, 1, "c.PyType_GetModuleByDef", "def"], [59, 3, 1, "c.PyType_GetModuleByDef", "type"]], "PyType_GetModuleState": [[59, 3, 1, "c.PyType_GetModuleState", "type"]], "PyType_GetName": [[59, 3, 1, "c.PyType_GetName", "type"]], "PyType_GetQualName": [[59, 3, 1, "c.PyType_GetQualName", "type"]], "PyType_GetSlot": [[59, 3, 1, "c.PyType_GetSlot", "slot"], [59, 3, 1, "c.PyType_GetSlot", "type"]], "PyType_GetTypeDataSize": [[47, 3, 1, "c.PyType_GetTypeDataSize", "cls"]], "PyType_HasFeature": [[59, 3, 1, "c.PyType_HasFeature", "feature"], [59, 3, 1, "c.PyType_HasFeature", "o"]], "PyType_IS_GC": [[59, 3, 1, "c.PyType_IS_GC", "o"]], "PyType_IsSubtype": [[59, 3, 1, "c.PyType_IsSubtype", "a"], [59, 3, 1, "c.PyType_IsSubtype", "b"]], "PyType_Modified": [[59, 3, 1, "c.PyType_Modified", "type"]], "PyType_Ready": [[59, 3, 1, "c.PyType_Ready", "type"]], "PyType_Slot": [[59, 0, 1, "c.PyType_Slot.pfunc", "pfunc"], [59, 0, 1, "c.PyType_Slot.slot", "slot"]], "PyType_Spec": [[59, 0, 1, "c.PyType_Spec.basicsize", "basicsize"], [59, 0, 1, "c.PyType_Spec.flags", "flags"], [59, 0, 1, "c.PyType_Spec.itemsize", "itemsize"], [59, 0, 1, "c.PyType_Spec.name", "name"], [59, 0, 1, "c.PyType_Spec.slots", "slots"]], "PyType_Watch": [[59, 3, 1, "c.PyType_Watch", "type"], [59, 3, 1, "c.PyType_Watch", "watcher_id"]], "PyUnicodeDecodeError_Create": [[23, 3, 1, "c.PyUnicodeDecodeError_Create", "encoding"], [23, 3, 1, "c.PyUnicodeDecodeError_Create", "end"], [23, 3, 1, "c.PyUnicodeDecodeError_Create", "length"], [23, 3, 1, "c.PyUnicodeDecodeError_Create", "object"], [23, 3, 1, "c.PyUnicodeDecodeError_Create", "reason"], [23, 3, 1, "c.PyUnicodeDecodeError_Create", "start"]], "PyUnicodeDecodeError_GetEncoding": [[23, 3, 1, "c.PyUnicodeDecodeError_GetEncoding", "exc"]], "PyUnicodeDecodeError_GetEnd": [[23, 3, 1, "c.PyUnicodeDecodeError_GetEnd", "end"], [23, 3, 1, "c.PyUnicodeDecodeError_GetEnd", "exc"]], "PyUnicodeDecodeError_GetObject": [[23, 3, 1, "c.PyUnicodeDecodeError_GetObject", "exc"]], "PyUnicodeDecodeError_GetReason": [[23, 3, 1, "c.PyUnicodeDecodeError_GetReason", "exc"]], "PyUnicodeDecodeError_GetStart": [[23, 3, 1, "c.PyUnicodeDecodeError_GetStart", "exc"], [23, 3, 1, "c.PyUnicodeDecodeError_GetStart", "start"]], "PyUnicodeDecodeError_SetEnd": [[23, 3, 1, "c.PyUnicodeDecodeError_SetEnd", "end"], [23, 3, 1, "c.PyUnicodeDecodeError_SetEnd", "exc"]], "PyUnicodeDecodeError_SetReason": [[23, 3, 1, "c.PyUnicodeDecodeError_SetReason", "exc"], [23, 3, 1, "c.PyUnicodeDecodeError_SetReason", "reason"]], "PyUnicodeDecodeError_SetStart": [[23, 3, 1, "c.PyUnicodeDecodeError_SetStart", "exc"], [23, 3, 1, "c.PyUnicodeDecodeError_SetStart", "start"]], "PyUnicodeEncodeError_GetEncoding": [[23, 3, 1, "c.PyUnicodeEncodeError_GetEncoding", "exc"]], "PyUnicodeEncodeError_GetEnd": [[23, 3, 1, "c.PyUnicodeEncodeError_GetEnd", "end"], [23, 3, 1, "c.PyUnicodeEncodeError_GetEnd", "exc"]], "PyUnicodeEncodeError_GetObject": [[23, 3, 1, "c.PyUnicodeEncodeError_GetObject", "exc"]], "PyUnicodeEncodeError_GetReason": [[23, 3, 1, "c.PyUnicodeEncodeError_GetReason", "exc"]], "PyUnicodeEncodeError_GetStart": [[23, 3, 1, "c.PyUnicodeEncodeError_GetStart", "exc"], [23, 3, 1, "c.PyUnicodeEncodeError_GetStart", "start"]], "PyUnicodeEncodeError_SetEnd": [[23, 3, 1, "c.PyUnicodeEncodeError_SetEnd", "end"], [23, 3, 1, "c.PyUnicodeEncodeError_SetEnd", "exc"]], "PyUnicodeEncodeError_SetReason": [[23, 3, 1, "c.PyUnicodeEncodeError_SetReason", "exc"], [23, 3, 1, "c.PyUnicodeEncodeError_SetReason", "reason"]], "PyUnicodeEncodeError_SetStart": [[23, 3, 1, "c.PyUnicodeEncodeError_SetStart", "exc"], [23, 3, 1, "c.PyUnicodeEncodeError_SetStart", "start"]], "PyUnicodeTranslateError_GetEnd": [[23, 3, 1, "c.PyUnicodeTranslateError_GetEnd", "end"], [23, 3, 1, "c.PyUnicodeTranslateError_GetEnd", "exc"]], "PyUnicodeTranslateError_GetObject": [[23, 3, 1, "c.PyUnicodeTranslateError_GetObject", "exc"]], "PyUnicodeTranslateError_GetReason": [[23, 3, 1, "c.PyUnicodeTranslateError_GetReason", "exc"]], "PyUnicodeTranslateError_GetStart": [[23, 3, 1, "c.PyUnicodeTranslateError_GetStart", "exc"], [23, 3, 1, "c.PyUnicodeTranslateError_GetStart", "start"]], "PyUnicodeTranslateError_SetEnd": [[23, 3, 1, "c.PyUnicodeTranslateError_SetEnd", "end"], [23, 3, 1, "c.PyUnicodeTranslateError_SetEnd", "exc"]], "PyUnicodeTranslateError_SetReason": [[23, 3, 1, "c.PyUnicodeTranslateError_SetReason", "exc"], [23, 3, 1, "c.PyUnicodeTranslateError_SetReason", "reason"]], "PyUnicodeTranslateError_SetStart": [[23, 3, 1, "c.PyUnicodeTranslateError_SetStart", "exc"], [23, 3, 1, "c.PyUnicodeTranslateError_SetStart", "start"]], "PyUnicode_1BYTE_DATA": [[62, 3, 1, "c.PyUnicode_1BYTE_DATA", "o"]], "PyUnicode_2BYTE_DATA": [[62, 3, 1, "c.PyUnicode_2BYTE_DATA", "o"]], "PyUnicode_4BYTE_DATA": [[62, 3, 1, "c.PyUnicode_4BYTE_DATA", "o"]], "PyUnicode_AsASCIIString": [[62, 3, 1, "c.PyUnicode_AsASCIIString", "unicode"]], "PyUnicode_AsCharmapString": [[62, 3, 1, "c.PyUnicode_AsCharmapString", "mapping"], [62, 3, 1, "c.PyUnicode_AsCharmapString", "unicode"]], "PyUnicode_AsEncodedString": [[62, 3, 1, "c.PyUnicode_AsEncodedString", "encoding"], [62, 3, 1, "c.PyUnicode_AsEncodedString", "errors"], [62, 3, 1, "c.PyUnicode_AsEncodedString", "unicode"]], "PyUnicode_AsLatin1String": [[62, 3, 1, "c.PyUnicode_AsLatin1String", "unicode"]], "PyUnicode_AsMBCSString": [[62, 3, 1, "c.PyUnicode_AsMBCSString", "unicode"]], "PyUnicode_AsRawUnicodeEscapeString": [[62, 3, 1, "c.PyUnicode_AsRawUnicodeEscapeString", "unicode"]], "PyUnicode_AsUCS4": [[62, 3, 1, "c.PyUnicode_AsUCS4", "buffer"], [62, 3, 1, "c.PyUnicode_AsUCS4", "buflen"], [62, 3, 1, "c.PyUnicode_AsUCS4", "copy_null"], [62, 3, 1, "c.PyUnicode_AsUCS4", "u"]], "PyUnicode_AsUCS4Copy": [[62, 3, 1, "c.PyUnicode_AsUCS4Copy", "u"]], "PyUnicode_AsUTF16String": [[62, 3, 1, "c.PyUnicode_AsUTF16String", "unicode"]], "PyUnicode_AsUTF32String": [[62, 3, 1, "c.PyUnicode_AsUTF32String", "unicode"]], "PyUnicode_AsUTF8": [[62, 3, 1, "c.PyUnicode_AsUTF8", "unicode"]], "PyUnicode_AsUTF8AndSize": [[62, 3, 1, "c.PyUnicode_AsUTF8AndSize", "size"], [62, 3, 1, "c.PyUnicode_AsUTF8AndSize", "unicode"]], "PyUnicode_AsUTF8String": [[62, 3, 1, "c.PyUnicode_AsUTF8String", "unicode"]], "PyUnicode_AsUnicodeEscapeString": [[62, 3, 1, "c.PyUnicode_AsUnicodeEscapeString", "unicode"]], "PyUnicode_AsWideChar": [[62, 3, 1, "c.PyUnicode_AsWideChar", "size"], [62, 3, 1, "c.PyUnicode_AsWideChar", "unicode"], [62, 3, 1, "c.PyUnicode_AsWideChar", "w"]], "PyUnicode_AsWideCharString": [[62, 3, 1, "c.PyUnicode_AsWideCharString", "size"], [62, 3, 1, "c.PyUnicode_AsWideCharString", "unicode"]], "PyUnicode_Check": [[62, 3, 1, "c.PyUnicode_Check", "o"]], "PyUnicode_CheckExact": [[62, 3, 1, "c.PyUnicode_CheckExact", "o"]], "PyUnicode_Compare": [[62, 3, 1, "c.PyUnicode_Compare", "left"], [62, 3, 1, "c.PyUnicode_Compare", "right"]], "PyUnicode_CompareWithASCIIString": [[62, 3, 1, "c.PyUnicode_CompareWithASCIIString", "string"], [62, 3, 1, "c.PyUnicode_CompareWithASCIIString", "uni"]], "PyUnicode_Concat": [[62, 3, 1, "c.PyUnicode_Concat", "left"], [62, 3, 1, "c.PyUnicode_Concat", "right"]], "PyUnicode_Contains": [[62, 3, 1, "c.PyUnicode_Contains", "container"], [62, 3, 1, "c.PyUnicode_Contains", "element"]], "PyUnicode_CopyCharacters": [[62, 3, 1, "c.PyUnicode_CopyCharacters", "from"], [62, 3, 1, "c.PyUnicode_CopyCharacters", "from_start"], [62, 3, 1, "c.PyUnicode_CopyCharacters", "how_many"], [62, 3, 1, "c.PyUnicode_CopyCharacters", "to"], [62, 3, 1, "c.PyUnicode_CopyCharacters", "to_start"]], "PyUnicode_Count": [[62, 3, 1, "c.PyUnicode_Count", "end"], [62, 3, 1, "c.PyUnicode_Count", "start"], [62, 3, 1, "c.PyUnicode_Count", "str"], [62, 3, 1, "c.PyUnicode_Count", "substr"]], "PyUnicode_DATA": [[62, 3, 1, "c.PyUnicode_DATA", "o"]], "PyUnicode_Decode": [[62, 3, 1, "c.PyUnicode_Decode", "encoding"], [62, 3, 1, "c.PyUnicode_Decode", "errors"], [62, 3, 1, "c.PyUnicode_Decode", "s"], [62, 3, 1, "c.PyUnicode_Decode", "size"]], "PyUnicode_DecodeASCII": [[62, 3, 1, "c.PyUnicode_DecodeASCII", "errors"], [62, 3, 1, "c.PyUnicode_DecodeASCII", "s"], [62, 3, 1, "c.PyUnicode_DecodeASCII", "size"]], "PyUnicode_DecodeCharmap": [[62, 3, 1, "c.PyUnicode_DecodeCharmap", "data"], [62, 3, 1, "c.PyUnicode_DecodeCharmap", "errors"], [62, 3, 1, "c.PyUnicode_DecodeCharmap", "mapping"], [62, 3, 1, "c.PyUnicode_DecodeCharmap", "size"]], "PyUnicode_DecodeFSDefault": [[62, 3, 1, "c.PyUnicode_DecodeFSDefault", "s"]], "PyUnicode_DecodeFSDefaultAndSize": [[62, 3, 1, "c.PyUnicode_DecodeFSDefaultAndSize", "s"], [62, 3, 1, "c.PyUnicode_DecodeFSDefaultAndSize", "size"]], "PyUnicode_DecodeLatin1": [[62, 3, 1, "c.PyUnicode_DecodeLatin1", "errors"], [62, 3, 1, "c.PyUnicode_DecodeLatin1", "s"], [62, 3, 1, "c.PyUnicode_DecodeLatin1", "size"]], "PyUnicode_DecodeLocale": [[62, 3, 1, "c.PyUnicode_DecodeLocale", "errors"], [62, 3, 1, "c.PyUnicode_DecodeLocale", "str"]], "PyUnicode_DecodeLocaleAndSize": [[62, 3, 1, "c.PyUnicode_DecodeLocaleAndSize", "errors"], [62, 3, 1, "c.PyUnicode_DecodeLocaleAndSize", "len"], [62, 3, 1, "c.PyUnicode_DecodeLocaleAndSize", "str"]], "PyUnicode_DecodeMBCS": [[62, 3, 1, "c.PyUnicode_DecodeMBCS", "errors"], [62, 3, 1, "c.PyUnicode_DecodeMBCS", "s"], [62, 3, 1, "c.PyUnicode_DecodeMBCS", "size"]], "PyUnicode_DecodeMBCSStateful": [[62, 3, 1, "c.PyUnicode_DecodeMBCSStateful", "consumed"], [62, 3, 1, "c.PyUnicode_DecodeMBCSStateful", "errors"], [62, 3, 1, "c.PyUnicode_DecodeMBCSStateful", "s"], [62, 3, 1, "c.PyUnicode_DecodeMBCSStateful", "size"]], "PyUnicode_DecodeRawUnicodeEscape": [[62, 3, 1, "c.PyUnicode_DecodeRawUnicodeEscape", "errors"], [62, 3, 1, "c.PyUnicode_DecodeRawUnicodeEscape", "s"], [62, 3, 1, "c.PyUnicode_DecodeRawUnicodeEscape", "size"]], "PyUnicode_DecodeUTF16": [[62, 3, 1, "c.PyUnicode_DecodeUTF16", "byteorder"], [62, 3, 1, "c.PyUnicode_DecodeUTF16", "errors"], [62, 3, 1, "c.PyUnicode_DecodeUTF16", "s"], [62, 3, 1, "c.PyUnicode_DecodeUTF16", "size"]], "PyUnicode_DecodeUTF16Stateful": [[62, 3, 1, "c.PyUnicode_DecodeUTF16Stateful", "byteorder"], [62, 3, 1, "c.PyUnicode_DecodeUTF16Stateful", "consumed"], [62, 3, 1, "c.PyUnicode_DecodeUTF16Stateful", "errors"], [62, 3, 1, "c.PyUnicode_DecodeUTF16Stateful", "s"], [62, 3, 1, "c.PyUnicode_DecodeUTF16Stateful", "size"]], "PyUnicode_DecodeUTF32": [[62, 3, 1, "c.PyUnicode_DecodeUTF32", "byteorder"], [62, 3, 1, "c.PyUnicode_DecodeUTF32", "errors"], [62, 3, 1, "c.PyUnicode_DecodeUTF32", "s"], [62, 3, 1, "c.PyUnicode_DecodeUTF32", "size"]], "PyUnicode_DecodeUTF32Stateful": [[62, 3, 1, "c.PyUnicode_DecodeUTF32Stateful", "byteorder"], [62, 3, 1, "c.PyUnicode_DecodeUTF32Stateful", "consumed"], [62, 3, 1, "c.PyUnicode_DecodeUTF32Stateful", "errors"], [62, 3, 1, "c.PyUnicode_DecodeUTF32Stateful", "s"], [62, 3, 1, "c.PyUnicode_DecodeUTF32Stateful", "size"]], "PyUnicode_DecodeUTF7": [[62, 3, 1, "c.PyUnicode_DecodeUTF7", "errors"], [62, 3, 1, "c.PyUnicode_DecodeUTF7", "s"], [62, 3, 1, "c.PyUnicode_DecodeUTF7", "size"]], "PyUnicode_DecodeUTF7Stateful": [[62, 3, 1, "c.PyUnicode_DecodeUTF7Stateful", "consumed"], [62, 3, 1, "c.PyUnicode_DecodeUTF7Stateful", "errors"], [62, 3, 1, "c.PyUnicode_DecodeUTF7Stateful", "s"], [62, 3, 1, "c.PyUnicode_DecodeUTF7Stateful", "size"]], "PyUnicode_DecodeUTF8": [[62, 3, 1, "c.PyUnicode_DecodeUTF8", "errors"], [62, 3, 1, "c.PyUnicode_DecodeUTF8", "s"], [62, 3, 1, "c.PyUnicode_DecodeUTF8", "size"]], "PyUnicode_DecodeUTF8Stateful": [[62, 3, 1, "c.PyUnicode_DecodeUTF8Stateful", "consumed"], [62, 3, 1, "c.PyUnicode_DecodeUTF8Stateful", "errors"], [62, 3, 1, "c.PyUnicode_DecodeUTF8Stateful", "s"], [62, 3, 1, "c.PyUnicode_DecodeUTF8Stateful", "size"]], "PyUnicode_DecodeUnicodeEscape": [[62, 3, 1, "c.PyUnicode_DecodeUnicodeEscape", "errors"], [62, 3, 1, "c.PyUnicode_DecodeUnicodeEscape", "s"], [62, 3, 1, "c.PyUnicode_DecodeUnicodeEscape", "size"]], "PyUnicode_EncodeCodePage": [[62, 3, 1, "c.PyUnicode_EncodeCodePage", "code_page"], [62, 3, 1, "c.PyUnicode_EncodeCodePage", "errors"], [62, 3, 1, "c.PyUnicode_EncodeCodePage", "unicode"]], "PyUnicode_EncodeFSDefault": [[62, 3, 1, "c.PyUnicode_EncodeFSDefault", "unicode"]], "PyUnicode_EncodeLocale": [[62, 3, 1, "c.PyUnicode_EncodeLocale", "errors"], [62, 3, 1, "c.PyUnicode_EncodeLocale", "unicode"]], "PyUnicode_FSConverter": [[62, 3, 1, "c.PyUnicode_FSConverter", "obj"], [62, 3, 1, "c.PyUnicode_FSConverter", "result"]], "PyUnicode_FSDecoder": [[62, 3, 1, "c.PyUnicode_FSDecoder", "obj"], [62, 3, 1, "c.PyUnicode_FSDecoder", "result"]], "PyUnicode_Fill": [[62, 3, 1, "c.PyUnicode_Fill", "fill_char"], [62, 3, 1, "c.PyUnicode_Fill", "length"], [62, 3, 1, "c.PyUnicode_Fill", "start"], [62, 3, 1, "c.PyUnicode_Fill", "unicode"]], "PyUnicode_Find": [[62, 3, 1, "c.PyUnicode_Find", "direction"], [62, 3, 1, "c.PyUnicode_Find", "end"], [62, 3, 1, "c.PyUnicode_Find", "start"], [62, 3, 1, "c.PyUnicode_Find", "str"], [62, 3, 1, "c.PyUnicode_Find", "substr"]], "PyUnicode_FindChar": [[62, 3, 1, "c.PyUnicode_FindChar", "ch"], [62, 3, 1, "c.PyUnicode_FindChar", "direction"], [62, 3, 1, "c.PyUnicode_FindChar", "end"], [62, 3, 1, "c.PyUnicode_FindChar", "start"], [62, 3, 1, "c.PyUnicode_FindChar", "str"]], "PyUnicode_Format": [[62, 3, 1, "c.PyUnicode_Format", "args"], [62, 3, 1, "c.PyUnicode_Format", "format"]], "PyUnicode_FromEncodedObject": [[62, 3, 1, "c.PyUnicode_FromEncodedObject", "encoding"], [62, 3, 1, "c.PyUnicode_FromEncodedObject", "errors"], [62, 3, 1, "c.PyUnicode_FromEncodedObject", "obj"]], "PyUnicode_FromFormat": [[62, 3, 1, "c.PyUnicode_FromFormat", "format"]], "PyUnicode_FromFormatV": [[62, 3, 1, "c.PyUnicode_FromFormatV", "format"], [62, 3, 1, "c.PyUnicode_FromFormatV", "vargs"]], "PyUnicode_FromKindAndData": [[62, 3, 1, "c.PyUnicode_FromKindAndData", "buffer"], [62, 3, 1, "c.PyUnicode_FromKindAndData", "kind"], [62, 3, 1, "c.PyUnicode_FromKindAndData", "size"]], "PyUnicode_FromObject": [[62, 3, 1, "c.PyUnicode_FromObject", "obj"]], "PyUnicode_FromString": [[62, 3, 1, "c.PyUnicode_FromString", "u"]], "PyUnicode_FromStringAndSize": [[62, 3, 1, "c.PyUnicode_FromStringAndSize", "size"], [62, 3, 1, "c.PyUnicode_FromStringAndSize", "u"]], "PyUnicode_FromWideChar": [[62, 3, 1, "c.PyUnicode_FromWideChar", "size"], [62, 3, 1, "c.PyUnicode_FromWideChar", "w"]], "PyUnicode_GET_LENGTH": [[62, 3, 1, "c.PyUnicode_GET_LENGTH", "o"]], "PyUnicode_GetLength": [[62, 3, 1, "c.PyUnicode_GetLength", "unicode"]], "PyUnicode_InternFromString": [[62, 3, 1, "c.PyUnicode_InternFromString", "v"]], "PyUnicode_InternInPlace": [[62, 3, 1, "c.PyUnicode_InternInPlace", "string"]], "PyUnicode_IsIdentifier": [[62, 3, 1, "c.PyUnicode_IsIdentifier", "o"]], "PyUnicode_Join": [[62, 3, 1, "c.PyUnicode_Join", "separator"], [62, 3, 1, "c.PyUnicode_Join", "seq"]], "PyUnicode_KIND": [[62, 3, 1, "c.PyUnicode_KIND", "o"]], "PyUnicode_MAX_CHAR_VALUE": [[62, 3, 1, "c.PyUnicode_MAX_CHAR_VALUE", "o"]], "PyUnicode_New": [[62, 3, 1, "c.PyUnicode_New", "maxchar"], [62, 3, 1, "c.PyUnicode_New", "size"]], "PyUnicode_READ": [[62, 3, 1, "c.PyUnicode_READ", "data"], [62, 3, 1, "c.PyUnicode_READ", "index"], [62, 3, 1, "c.PyUnicode_READ", "kind"]], "PyUnicode_READY": [[62, 3, 1, "c.PyUnicode_READY", "o"]], "PyUnicode_READ_CHAR": [[62, 3, 1, "c.PyUnicode_READ_CHAR", "index"], [62, 3, 1, "c.PyUnicode_READ_CHAR", "o"]], "PyUnicode_ReadChar": [[62, 3, 1, "c.PyUnicode_ReadChar", "index"], [62, 3, 1, "c.PyUnicode_ReadChar", "unicode"]], "PyUnicode_Replace": [[62, 3, 1, "c.PyUnicode_Replace", "maxcount"], [62, 3, 1, "c.PyUnicode_Replace", "replstr"], [62, 3, 1, "c.PyUnicode_Replace", "str"], [62, 3, 1, "c.PyUnicode_Replace", "substr"]], "PyUnicode_RichCompare": [[62, 3, 1, "c.PyUnicode_RichCompare", "left"], [62, 3, 1, "c.PyUnicode_RichCompare", "op"], [62, 3, 1, "c.PyUnicode_RichCompare", "right"]], "PyUnicode_Split": [[62, 3, 1, "c.PyUnicode_Split", "maxsplit"], [62, 3, 1, "c.PyUnicode_Split", "s"], [62, 3, 1, "c.PyUnicode_Split", "sep"]], "PyUnicode_Splitlines": [[62, 3, 1, "c.PyUnicode_Splitlines", "keepend"], [62, 3, 1, "c.PyUnicode_Splitlines", "s"]], "PyUnicode_Substring": [[62, 3, 1, "c.PyUnicode_Substring", "end"], [62, 3, 1, "c.PyUnicode_Substring", "start"], [62, 3, 1, "c.PyUnicode_Substring", "str"]], "PyUnicode_Tailmatch": [[62, 3, 1, "c.PyUnicode_Tailmatch", "direction"], [62, 3, 1, "c.PyUnicode_Tailmatch", "end"], [62, 3, 1, "c.PyUnicode_Tailmatch", "start"], [62, 3, 1, "c.PyUnicode_Tailmatch", "str"], [62, 3, 1, "c.PyUnicode_Tailmatch", "substr"]], "PyUnicode_Translate": [[62, 3, 1, "c.PyUnicode_Translate", "errors"], [62, 3, 1, "c.PyUnicode_Translate", "str"], [62, 3, 1, "c.PyUnicode_Translate", "table"]], "PyUnicode_WRITE": [[62, 3, 1, "c.PyUnicode_WRITE", "data"], [62, 3, 1, "c.PyUnicode_WRITE", "index"], [62, 3, 1, "c.PyUnicode_WRITE", "kind"], [62, 3, 1, "c.PyUnicode_WRITE", "value"]], "PyUnicode_WriteChar": [[62, 3, 1, "c.PyUnicode_WriteChar", "character"], [62, 3, 1, "c.PyUnicode_WriteChar", "index"], [62, 3, 1, "c.PyUnicode_WriteChar", "unicode"]], "PyUnstable_Code_GetExtra": [[13, 3, 1, "c.PyUnstable_Code_GetExtra", "code"], [13, 3, 1, "c.PyUnstable_Code_GetExtra", "extra"], [13, 3, 1, "c.PyUnstable_Code_GetExtra", "index"]], "PyUnstable_Code_New": [[13, 3, 1, "c.PyUnstable_Code_New", "argcount"], [13, 3, 1, "c.PyUnstable_Code_New", "cellvars"], [13, 3, 1, "c.PyUnstable_Code_New", "code"], [13, 3, 1, "c.PyUnstable_Code_New", "consts"], [13, 3, 1, "c.PyUnstable_Code_New", "exceptiontable"], [13, 3, 1, "c.PyUnstable_Code_New", "filename"], [13, 3, 1, "c.PyUnstable_Code_New", "firstlineno"], [13, 3, 1, "c.PyUnstable_Code_New", "flags"], [13, 3, 1, "c.PyUnstable_Code_New", "freevars"], [13, 3, 1, "c.PyUnstable_Code_New", "kwonlyargcount"], [13, 3, 1, "c.PyUnstable_Code_New", "linetable"], [13, 3, 1, "c.PyUnstable_Code_New", "name"], [13, 3, 1, "c.PyUnstable_Code_New", "names"], [13, 3, 1, "c.PyUnstable_Code_New", "nlocals"], [13, 3, 1, "c.PyUnstable_Code_New", "qualname"], [13, 3, 1, "c.PyUnstable_Code_New", "stacksize"], [13, 3, 1, "c.PyUnstable_Code_New", "varnames"]], "PyUnstable_Code_NewWithPosOnlyArgs": [[13, 3, 1, "c.PyUnstable_Code_NewWithPosOnlyArgs", "argcount"], [13, 3, 1, "c.PyUnstable_Code_NewWithPosOnlyArgs", "cellvars"], [13, 3, 1, "c.PyUnstable_Code_NewWithPosOnlyArgs", "code"], [13, 3, 1, "c.PyUnstable_Code_NewWithPosOnlyArgs", "consts"], [13, 3, 1, "c.PyUnstable_Code_NewWithPosOnlyArgs", "exceptiontable"], [13, 3, 1, "c.PyUnstable_Code_NewWithPosOnlyArgs", "filename"], [13, 3, 1, "c.PyUnstable_Code_NewWithPosOnlyArgs", "firstlineno"], [13, 3, 1, "c.PyUnstable_Code_NewWithPosOnlyArgs", "flags"], [13, 3, 1, "c.PyUnstable_Code_NewWithPosOnlyArgs", "freevars"], [13, 3, 1, "c.PyUnstable_Code_NewWithPosOnlyArgs", "kwonlyargcount"], [13, 3, 1, "c.PyUnstable_Code_NewWithPosOnlyArgs", "linetable"], [13, 3, 1, "c.PyUnstable_Code_NewWithPosOnlyArgs", "name"], [13, 3, 1, "c.PyUnstable_Code_NewWithPosOnlyArgs", "names"], [13, 3, 1, "c.PyUnstable_Code_NewWithPosOnlyArgs", "nlocals"], [13, 3, 1, "c.PyUnstable_Code_NewWithPosOnlyArgs", "posonlyargcount"], [13, 3, 1, "c.PyUnstable_Code_NewWithPosOnlyArgs", "qualname"], [13, 3, 1, "c.PyUnstable_Code_NewWithPosOnlyArgs", "stacksize"], [13, 3, 1, "c.PyUnstable_Code_NewWithPosOnlyArgs", "varnames"]], "PyUnstable_Code_SetExtra": [[13, 3, 1, "c.PyUnstable_Code_SetExtra", "code"], [13, 3, 1, "c.PyUnstable_Code_SetExtra", "extra"], [13, 3, 1, "c.PyUnstable_Code_SetExtra", "index"]], "PyUnstable_Eval_RequestCodeExtraIndex": [[13, 3, 1, "c.PyUnstable_Eval_RequestCodeExtraIndex", "free"]], "PyUnstable_Exc_PrepReraiseStar": [[23, 3, 1, "c.PyUnstable_Exc_PrepReraiseStar", "excs"], [23, 3, 1, "c.PyUnstable_Exc_PrepReraiseStar", "orig"]], "PyUnstable_GC_VisitObjects": [[28, 3, 1, "c.PyUnstable_GC_VisitObjects", "arg"], [28, 3, 1, "c.PyUnstable_GC_VisitObjects", "callback"]], "PyUnstable_InterpreterFrame_GetCode": [[26, 3, 1, "c.PyUnstable_InterpreterFrame_GetCode", "frame"]], "PyUnstable_InterpreterFrame_GetLasti": [[26, 3, 1, "c.PyUnstable_InterpreterFrame_GetLasti", "frame"]], "PyUnstable_InterpreterFrame_GetLine": [[26, 3, 1, "c.PyUnstable_InterpreterFrame_GetLine", "frame"]], "PyUnstable_Long_CompactValue": [[38, 3, 1, "c.PyUnstable_Long_CompactValue", "op"]], "PyUnstable_Long_IsCompact": [[38, 3, 1, "c.PyUnstable_Long_IsCompact", "op"]], "PyUnstable_Object_GC_NewWithExtraData": [[28, 3, 1, "c.PyUnstable_Object_GC_NewWithExtraData", "extra_size"], [28, 3, 1, "c.PyUnstable_Object_GC_NewWithExtraData", "type"]], "PyUnstable_Type_AssignVersionTag": [[59, 3, 1, "c.PyUnstable_Type_AssignVersionTag", "type"]], "PyUnstable_WritePerfMapEntry": [[49, 3, 1, "c.PyUnstable_WritePerfMapEntry", "code_addr"], [49, 3, 1, "c.PyUnstable_WritePerfMapEntry", "code_size"], [49, 3, 1, "c.PyUnstable_WritePerfMapEntry", "entry_name"]], "PyVarObject": [[61, 0, 1, "c.PyVarObject.ob_size", "ob_size"]], "PyVectorcall_Call": [[10, 3, 1, "c.PyVectorcall_Call", "callable"], [10, 3, 1, "c.PyVectorcall_Call", "dict"], [10, 3, 1, "c.PyVectorcall_Call", "tuple"]], "PyVectorcall_Function": [[10, 3, 1, "c.PyVectorcall_Function", "op"]], "PyVectorcall_NARGS": [[10, 3, 1, "c.PyVectorcall_NARGS", "nargsf"]], "PyWeakref_Check": [[65, 3, 1, "c.PyWeakref_Check", "ob"]], "PyWeakref_CheckProxy": [[65, 3, 1, "c.PyWeakref_CheckProxy", "ob"]], "PyWeakref_CheckRef": [[65, 3, 1, "c.PyWeakref_CheckRef", "ob"]], "PyWeakref_GET_OBJECT": [[65, 3, 1, "c.PyWeakref_GET_OBJECT", "ref"]], "PyWeakref_GetObject": [[65, 3, 1, "c.PyWeakref_GetObject", "ref"]], "PyWeakref_GetRef": [[65, 3, 1, "c.PyWeakref_GetRef", "pobj"], [65, 3, 1, "c.PyWeakref_GetRef", "ref"]], "PyWeakref_NewProxy": [[65, 3, 1, "c.PyWeakref_NewProxy", "callback"], [65, 3, 1, "c.PyWeakref_NewProxy", "ob"]], "PyWeakref_NewRef": [[65, 3, 1, "c.PyWeakref_NewRef", "callback"], [65, 3, 1, "c.PyWeakref_NewRef", "ob"]], "PyWideStringList": [[33, 0, 1, "c.PyWideStringList.items", "items"], [33, 0, 1, "c.PyWideStringList.length", "length"]], "PyWideStringList_Append": [[33, 3, 1, "c.PyWideStringList_Append", "item"], [33, 3, 1, "c.PyWideStringList_Append", "list"]], "PyWideStringList_Insert": [[33, 3, 1, "c.PyWideStringList_Insert", "index"], [33, 3, 1, "c.PyWideStringList_Insert", "item"], [33, 3, 1, "c.PyWideStringList_Insert", "list"]], "Py_AddPendingCall": [[32, 3, 1, "c.Py_AddPendingCall", "arg"], [32, 3, 1, "c.Py_AddPendingCall", "func"]], "Py_AtExit": [[57, 3, 1, "c.Py_AtExit", "func"]], "Py_BuildValue": [[5, 3, 1, "c.Py_BuildValue", "format"]], "Py_BytesMain": [[64, 3, 1, "c.Py_BytesMain", "argc"], [64, 3, 1, "c.Py_BytesMain", "argv"]], "Py_CLEAR": [[50, 3, 1, "c.Py_CLEAR", "o"]], "Py_CompileString": [[64, 3, 1, "c.Py_CompileString", "filename"], [64, 3, 1, "c.Py_CompileString", "start"], [64, 3, 1, "c.Py_CompileString", "str"]], "Py_CompileStringExFlags": [[64, 3, 1, "c.Py_CompileStringExFlags", "filename"], [64, 3, 1, "c.Py_CompileStringExFlags", "flags"], [64, 3, 1, "c.Py_CompileStringExFlags", "optimize"], [64, 3, 1, "c.Py_CompileStringExFlags", "start"], [64, 3, 1, "c.Py_CompileStringExFlags", "str"]], "Py_CompileStringFlags": [[64, 3, 1, "c.Py_CompileStringFlags", "filename"], [64, 3, 1, "c.Py_CompileStringFlags", "flags"], [64, 3, 1, "c.Py_CompileStringFlags", "start"], [64, 3, 1, "c.Py_CompileStringFlags", "str"]], "Py_CompileStringObject": [[64, 3, 1, "c.Py_CompileStringObject", "filename"], [64, 3, 1, "c.Py_CompileStringObject", "flags"], [64, 3, 1, "c.Py_CompileStringObject", "optimize"], [64, 3, 1, "c.Py_CompileStringObject", "start"], [64, 3, 1, "c.Py_CompileStringObject", "str"]], "Py_DECREF": [[50, 3, 1, "c.Py_DECREF", "o"]], "Py_DecRef": [[50, 3, 1, "c.Py_DecRef", "o"]], "Py_DecodeLocale": [[57, 3, 1, "c.Py_DecodeLocale", "arg"], [57, 3, 1, "c.Py_DecodeLocale", "size"]], "Py_EncodeLocale": [[57, 3, 1, "c.Py_EncodeLocale", "error_pos"], [57, 3, 1, "c.Py_EncodeLocale", "text"]], "Py_EndInterpreter": [[32, 3, 1, "c.Py_EndInterpreter", "tstate"]], "Py_EnterRecursiveCall": [[23, 3, 1, "c.Py_EnterRecursiveCall", "where"]], "Py_Exit": [[57, 3, 1, "c.Py_Exit", "status"]], "Py_ExitStatusException": [[33, 3, 1, "c.Py_ExitStatusException", "status"]], "Py_FatalError": [[57, 3, 1, "c.Py_FatalError", "message"]], "Py_FdIsInteractive": [[57, 3, 1, "c.Py_FdIsInteractive", "filename"], [57, 3, 1, "c.Py_FdIsInteractive", "fp"]], "Py_GenericAlias": [[60, 3, 1, "c.Py_GenericAlias", "args"], [60, 3, 1, "c.Py_GenericAlias", "origin"]], "Py_GetArgcArgv": [[33, 3, 1, "c.Py_GetArgcArgv", "argc"], [33, 3, 1, "c.Py_GetArgcArgv", "argv"]], "Py_INCREF": [[50, 3, 1, "c.Py_INCREF", "o"]], "Py_IS_TYPE": [[56, 3, 1, "c.Py_IS_TYPE", "o"], [56, 3, 1, "c.Py_IS_TYPE", "type"]], "Py_IncRef": [[50, 3, 1, "c.Py_IncRef", "o"]], "Py_InitializeEx": [[32, 3, 1, "c.Py_InitializeEx", "initsigs"]], "Py_InitializeFromConfig": [[33, 3, 1, "c.Py_InitializeFromConfig", "config"]], "Py_Is": [[56, 3, 1, "c.Py_Is", "x"], [56, 3, 1, "c.Py_Is", "y"]], "Py_IsFalse": [[56, 3, 1, "c.Py_IsFalse", "x"]], "Py_IsNone": [[56, 3, 1, "c.Py_IsNone", "x"]], "Py_IsTrue": [[56, 3, 1, "c.Py_IsTrue", "x"]], "Py_Main": [[64, 3, 1, "c.Py_Main", "argc"], [64, 3, 1, "c.Py_Main", "argv"]], "Py_NewInterpreterFromConfig": [[32, 3, 1, "c.Py_NewInterpreterFromConfig", "config"], [32, 3, 1, "c.Py_NewInterpreterFromConfig", "tstate_p"]], "Py_NewRef": [[50, 3, 1, "c.Py_NewRef", "o"]], "Py_PreInitialize": [[33, 3, 1, "c.Py_PreInitialize", "preconfig"]], "Py_PreInitializeFromArgs": [[33, 3, 1, "c.Py_PreInitializeFromArgs", "argc"], [33, 3, 1, "c.Py_PreInitializeFromArgs", "argv"], [33, 3, 1, "c.Py_PreInitializeFromArgs", "preconfig"]], "Py_PreInitializeFromBytesArgs": [[33, 3, 1, "c.Py_PreInitializeFromBytesArgs", "argc"], [33, 3, 1, "c.Py_PreInitializeFromBytesArgs", "argv"], [33, 3, 1, "c.Py_PreInitializeFromBytesArgs", "preconfig"]], "Py_REFCNT": [[50, 3, 1, "c.Py_REFCNT", "o"]], "Py_ReprEnter": [[23, 3, 1, "c.Py_ReprEnter", "object"]], "Py_ReprLeave": [[23, 3, 1, "c.Py_ReprLeave", "object"]], "Py_SET_REFCNT": [[50, 3, 1, "c.Py_SET_REFCNT", "o"], [50, 3, 1, "c.Py_SET_REFCNT", "refcnt"]], "Py_SET_SIZE": [[56, 3, 1, "c.Py_SET_SIZE", "o"], [56, 3, 1, "c.Py_SET_SIZE", "size"]], "Py_SET_TYPE": [[56, 3, 1, "c.Py_SET_TYPE", "o"], [56, 3, 1, "c.Py_SET_TYPE", "type"]], "Py_SIZE": [[56, 3, 1, "c.Py_SIZE", "o"]], "Py_TYPE": [[56, 3, 1, "c.Py_TYPE", "o"]], "Py_UNICODE_ISALNUM": [[62, 3, 1, "c.Py_UNICODE_ISALNUM", "ch"]], "Py_UNICODE_ISALPHA": [[62, 3, 1, "c.Py_UNICODE_ISALPHA", "ch"]], "Py_UNICODE_ISDECIMAL": [[62, 3, 1, "c.Py_UNICODE_ISDECIMAL", "ch"]], "Py_UNICODE_ISDIGIT": [[62, 3, 1, "c.Py_UNICODE_ISDIGIT", "ch"]], "Py_UNICODE_ISLINEBREAK": [[62, 3, 1, "c.Py_UNICODE_ISLINEBREAK", "ch"]], "Py_UNICODE_ISLOWER": [[62, 3, 1, "c.Py_UNICODE_ISLOWER", "ch"]], "Py_UNICODE_ISNUMERIC": [[62, 3, 1, "c.Py_UNICODE_ISNUMERIC", "ch"]], "Py_UNICODE_ISPRINTABLE": [[62, 3, 1, "c.Py_UNICODE_ISPRINTABLE", "ch"]], "Py_UNICODE_ISSPACE": [[62, 3, 1, "c.Py_UNICODE_ISSPACE", "ch"]], "Py_UNICODE_ISTITLE": [[62, 3, 1, "c.Py_UNICODE_ISTITLE", "ch"]], "Py_UNICODE_ISUPPER": [[62, 3, 1, "c.Py_UNICODE_ISUPPER", "ch"]], "Py_UNICODE_IS_HIGH_SURROGATE": [[62, 3, 1, "c.Py_UNICODE_IS_HIGH_SURROGATE", "ch"]], "Py_UNICODE_IS_LOW_SURROGATE": [[62, 3, 1, "c.Py_UNICODE_IS_LOW_SURROGATE", "ch"]], "Py_UNICODE_IS_SURROGATE": [[62, 3, 1, "c.Py_UNICODE_IS_SURROGATE", "ch"]], "Py_UNICODE_JOIN_SURROGATES": [[62, 3, 1, "c.Py_UNICODE_JOIN_SURROGATES", "high"], [62, 3, 1, "c.Py_UNICODE_JOIN_SURROGATES", "low"]], "Py_UNICODE_TODECIMAL": [[62, 3, 1, "c.Py_UNICODE_TODECIMAL", "ch"]], "Py_UNICODE_TODIGIT": [[62, 3, 1, "c.Py_UNICODE_TODIGIT", "ch"]], "Py_UNICODE_TOLOWER": [[62, 3, 1, "c.Py_UNICODE_TOLOWER", "ch"]], "Py_UNICODE_TONUMERIC": [[62, 3, 1, "c.Py_UNICODE_TONUMERIC", "ch"]], "Py_UNICODE_TOTITLE": [[62, 3, 1, "c.Py_UNICODE_TOTITLE", "ch"]], "Py_UNICODE_TOUPPER": [[62, 3, 1, "c.Py_UNICODE_TOUPPER", "ch"]], "Py_VISIT": [[28, 3, 1, "c.Py_VISIT", "o"]], "Py_VaBuildValue": [[5, 3, 1, "c.Py_VaBuildValue", "format"], [5, 3, 1, "c.Py_VaBuildValue", "vargs"]], "Py_XDECREF": [[50, 3, 1, "c.Py_XDECREF", "o"]], "Py_XINCREF": [[50, 3, 1, "c.Py_XINCREF", "o"]], "Py_XNewRef": [[50, 3, 1, "c.Py_XNewRef", "o"]], "Py_buffer": [[7, 0, 1, "c.Py_buffer.buf", "buf"], [7, 0, 1, "c.Py_buffer.format", "format"], [7, 0, 1, "c.Py_buffer.internal", "internal"], [7, 0, 1, "c.Py_buffer.itemsize", "itemsize"], [7, 0, 1, "c.Py_buffer.len", "len"], [7, 0, 1, "c.Py_buffer.ndim", "ndim"], [7, 0, 1, "c.Py_buffer.obj", "obj"], [7, 0, 1, "c.Py_buffer.readonly", "readonly"], [7, 0, 1, "c.Py_buffer.shape", "shape"], [7, 0, 1, "c.Py_buffer.strides", "strides"], [7, 0, 1, "c.Py_buffer.suboffsets", "suboffsets"]], "Py_mod_create": [[44, 2, 1, "c.Py_mod_create.create_module", "create_module"]], "Py_mod_create.create_module": [[44, 3, 1, "c.Py_mod_create.create_module", "def"], [44, 3, 1, "c.Py_mod_create.create_module", "spec"]], "Py_mod_exec": [[44, 2, 1, "c.Py_mod_exec.exec_module", "exec_module"]], "Py_mod_exec.exec_module": [[44, 3, 1, "c.Py_mod_exec.exec_module", "module"]], "_PyBytes_Resize": [[9, 3, 1, "c._PyBytes_Resize", "bytes"], [9, 3, 1, "c._PyBytes_Resize", "newsize"]], "_PyInterpreterState_GetEvalFrameFunc": [[32, 3, 1, "c._PyInterpreterState_GetEvalFrameFunc", "interp"]], "_PyInterpreterState_SetEvalFrameFunc": [[32, 3, 1, "c._PyInterpreterState_SetEvalFrameFunc", "eval_frame"], [32, 3, 1, "c._PyInterpreterState_SetEvalFrameFunc", "interp"]], "_PyObject_GetDictPtr": [[47, 3, 1, "c._PyObject_GetDictPtr", "obj"]], "_PyObject_New": [[3, 3, 1, "c._PyObject_New", "type"]], "_PyObject_NewVar": [[3, 3, 1, "c._PyObject_NewVar", "size"], [3, 3, 1, "c._PyObject_NewVar", "type"]], "_PyTuple_Resize": [[58, 3, 1, "c._PyTuple_Resize", "newsize"], [58, 3, 1, "c._PyTuple_Resize", "p"]], "_Py_c_diff": [[15, 3, 1, "c._Py_c_diff", "left"], [15, 3, 1, "c._Py_c_diff", "right"]], "_Py_c_neg": [[15, 3, 1, "c._Py_c_neg", "num"]], "_Py_c_pow": [[15, 3, 1, "c._Py_c_pow", "exp"], [15, 3, 1, "c._Py_c_pow", "num"]], "_Py_c_prod": [[15, 3, 1, "c._Py_c_prod", "left"], [15, 3, 1, "c._Py_c_prod", "right"]], "_Py_c_quot": [[15, 3, 1, "c._Py_c_quot", "dividend"], [15, 3, 1, "c._Py_c_quot", "divisor"]], "_Py_c_sum": [[15, 3, 1, "c._Py_c_sum", "left"], [15, 3, 1, "c._Py_c_sum", "right"]], "_inittab": [[30, 0, 1, "c._inittab.name", "name"]], "BaseException": [[202, 7, 1, "", "__notes__"], [202, 8, 1, "", "add_note"], [202, 7, 1, "", "args"], [202, 8, 1, "", "with_traceback"]], "BaseExceptionGroup": [[202, 8, 1, "", "derive"], [202, 7, 1, "", "exceptions"], [202, 7, 1, "", "message"], [202, 8, 1, "", "split"], [202, 8, 1, "", "subgroup"]], "BlockingIOError": [[202, 7, 1, "", "characters_written"]], "OSError": [[202, 7, 1, "", "errno"], [202, 7, 1, "", "filename"], [202, 7, 1, "", "filename2"], [202, 7, 1, "", "strerror"], [202, 7, 1, "", "winerror"]], "SyntaxError": [[202, 7, 1, "", "end_lineno"], [202, 7, 1, "", "end_offset"], [202, 7, 1, "", "filename"], [202, 7, 1, "", "lineno"], [202, 7, 1, "", "offset"], [202, 7, 1, "", "text"]], "SystemExit": [[202, 7, 1, "", "code"]], "UnicodeError": [[202, 7, 1, "", "encoding"], [202, 7, 1, "", "end"], [202, 7, 1, "", "object"], [202, 7, 1, "", "reason"], [202, 7, 1, "", "start"]], "__future__": [[108, 11, 1, "future__._Feature", "_Feature"]], "__future__._Feature": [[108, 7, 1, "future__._Feature.compiler_flag", "compiler_flag"], [108, 8, 1, "future__._Feature.getMandatoryRelease", "getMandatoryRelease"], [108, 8, 1, "future__._Feature.getOptionalRelease", "getOptionalRelease"]], "_thread": [[110, 9, 1, "thread.LockType", "LockType"], [110, 9, 1, "thread.TIMEOUT_MAX", "TIMEOUT_MAX"], [110, 12, 1, "thread.allocate_lock", "allocate_lock"], [110, 6, 1, "thread.error", "error"], [110, 12, 1, "thread.exit", "exit"], [110, 12, 1, "thread.get_ident", "get_ident"], [110, 12, 1, "thread.get_native_id", "get_native_id"], [110, 12, 1, "thread.interrupt_main", "interrupt_main"], [110, 12, 1, "thread.stack_size", "stack_size"], [110, 12, 1, "thread.start_new_thread", "start_new_thread"]], "_thread.lock": [[110, 8, 1, "thread.lock.acquire", "acquire"], [110, 8, 1, "thread.lock.locked", "locked"], [110, 8, 1, "thread.lock.release", "release"]], "abc": [[111, 11, 1, "", "ABC"], [111, 11, 1, "", "ABCMeta"], [111, 12, 1, "", "abstractclassmethod"], [111, 12, 1, "", "abstractmethod"], [111, 12, 1, "", "abstractproperty"], [111, 12, 1, "", "abstractstaticmethod"], [111, 12, 1, "", "get_cache_token"], [111, 12, 1, "", "update_abstractmethods"]], "abc.ABCMeta": [[111, 8, 1, "", "__subclasshook__"], [111, 8, 1, "", "register"]], "agen": [[405, 8, 1, "", "__anext__"], [405, 8, 1, "", "aclose"], [405, 8, 1, "", "asend"], [405, 8, 1, "", "athrow"]], "argparse": [[114, 11, 1, "", "Action"], [114, 11, 1, "", "ArgumentDefaultsHelpFormatter"], [114, 6, 1, "", "ArgumentError"], [114, 11, 1, "", "ArgumentParser"], [114, 6, 1, "", "ArgumentTypeError"], [114, 11, 1, "", "FileType"], [114, 11, 1, "", "MetavarTypeHelpFormatter"], [114, 11, 1, "", "Namespace"], [114, 11, 1, "", "RawDescriptionHelpFormatter"], [114, 11, 1, "", "RawTextHelpFormatter"]], "argparse.ArgumentParser": [[114, 8, 1, "", "add_argument"], [114, 8, 1, "", "add_argument_group"], [114, 8, 1, "", "add_mutually_exclusive_group"], [114, 8, 1, "", "add_subparsers"], [114, 8, 1, "", "convert_arg_line_to_args"], [114, 8, 1, "", "error"], [114, 8, 1, "", "exit"], [114, 8, 1, "", "format_help"], [114, 8, 1, "", "format_usage"], [114, 8, 1, "", "get_default"], [114, 8, 1, "", "parse_args"], [114, 8, 1, "", "parse_intermixed_args"], [114, 8, 1, "", "parse_known_args"], [114, 8, 1, "", "parse_known_intermixed_args"], [114, 8, 1, "", "print_help"], [114, 8, 1, "", "print_usage"], [114, 8, 1, "", "set_defaults"]], "array": [[115, 11, 1, "", "array"], [115, 9, 1, "", "typecodes"]], "array.array": [[115, 8, 1, "", "append"], [115, 8, 1, "", "buffer_info"], [115, 8, 1, "", "byteswap"], [115, 8, 1, "", "count"], [115, 8, 1, "", "extend"], [115, 8, 1, "", "frombytes"], [115, 8, 1, "", "fromfile"], [115, 8, 1, "", "fromlist"], [115, 8, 1, "", "fromunicode"], [115, 8, 1, "", "index"], [115, 8, 1, "", "insert"], [115, 7, 1, "", "itemsize"], [115, 8, 1, "", "pop"], [115, 8, 1, "", "remove"], [115, 8, 1, "", "reverse"], [115, 8, 1, "", "tobytes"], [115, 8, 1, "", "tofile"], [115, 8, 1, "", "tolist"], [115, 8, 1, "", "tounicode"], [115, 7, 1, "", "typecode"]], "ast": [[116, 11, 1, "", "AST"], [116, 11, 1, "", "Add"], [116, 11, 1, "", "And"], [116, 11, 1, "", "AnnAssign"], [116, 11, 1, "", "Assert"], [116, 11, 1, "", "Assign"], [116, 11, 1, "", "AsyncFor"], [116, 11, 1, "", "AsyncFunctionDef"], [116, 11, 1, "", "AsyncWith"], [116, 11, 1, "", "Attribute"], [116, 11, 1, "", "AugAssign"], [116, 11, 1, "", "Await"], [116, 11, 1, "", "BinOp"], [116, 11, 1, "", "BitAnd"], [116, 11, 1, "", "BitOr"], [116, 11, 1, "", "BitXor"], [116, 11, 1, "", "BoolOp"], [116, 11, 1, "", "Break"], [116, 11, 1, "", "Call"], [116, 11, 1, "", "ClassDef"], [116, 11, 1, "", "Compare"], [116, 11, 1, "", "Constant"], [116, 11, 1, "", "Continue"], [116, 11, 1, "", "Del"], [116, 11, 1, "", "Delete"], [116, 11, 1, "", "Dict"], [116, 11, 1, "", "DictComp"], [116, 11, 1, "", "Div"], [116, 11, 1, "", "Eq"], [116, 11, 1, "", "ExceptHandler"], [116, 11, 1, "", "Expr"], [116, 11, 1, "", "Expression"], [116, 11, 1, "", "FloorDiv"], [116, 11, 1, "", "For"], [116, 11, 1, "", "FormattedValue"], [116, 11, 1, "", "FunctionDef"], [116, 11, 1, "", "FunctionType"], [116, 11, 1, "", "GeneratorExp"], [116, 11, 1, "", "Global"], [116, 11, 1, "", "Gt"], [116, 11, 1, "", "GtE"], [116, 11, 1, "", "If"], [116, 11, 1, "", "IfExp"], [116, 11, 1, "", "Import"], [116, 11, 1, "", "ImportFrom"], [116, 11, 1, "", "In"], [116, 11, 1, "", "Interactive"], [116, 11, 1, "", "Invert"], [116, 11, 1, "", "Is"], [116, 11, 1, "", "IsNot"], [116, 11, 1, "", "JoinedStr"], [116, 11, 1, "", "LShift"], [116, 11, 1, "", "Lambda"], [116, 11, 1, "", "List"], [116, 11, 1, "", "ListComp"], [116, 11, 1, "", "Load"], [116, 11, 1, "", "Lt"], [116, 11, 1, "", "LtE"], [116, 11, 1, "", "MatMult"], [116, 11, 1, "", "Match"], [116, 11, 1, "", "MatchAs"], [116, 11, 1, "", "MatchClass"], [116, 11, 1, "", "MatchMapping"], [116, 11, 1, "", "MatchOr"], [116, 11, 1, "", "MatchSequence"], [116, 11, 1, "", "MatchSingleton"], [116, 11, 1, "", "MatchStar"], [116, 11, 1, "", "MatchValue"], [116, 11, 1, "", "Mod"], [116, 11, 1, "", "Module"], [116, 11, 1, "", "Mult"], [116, 11, 1, "", "Name"], [116, 11, 1, "", "NamedExpr"], [116, 11, 1, "", "NodeTransformer"], [116, 11, 1, "", "NodeVisitor"], [116, 11, 1, "", "Nonlocal"], [116, 11, 1, "", "Not"], [116, 11, 1, "", "NotEq"], [116, 11, 1, "", "NotIn"], [116, 11, 1, "", "Or"], [116, 11, 1, "", "ParamSpec"], [116, 11, 1, "", "Pass"], [116, 11, 1, "", "Pow"], [116, 9, 1, "", "PyCF_ALLOW_TOP_LEVEL_AWAIT"], [116, 9, 1, "", "PyCF_ONLY_AST"], [116, 9, 1, "", "PyCF_TYPE_COMMENTS"], [116, 11, 1, "", "RShift"], [116, 11, 1, "", "Raise"], [116, 11, 1, "", "Return"], [116, 11, 1, "", "Set"], [116, 11, 1, "", "SetComp"], [116, 11, 1, "", "Slice"], [116, 11, 1, "", "Starred"], [116, 11, 1, "", "Store"], [116, 11, 1, "", "Sub"], [116, 11, 1, "", "Subscript"], [116, 11, 1, "", "Try"], [116, 11, 1, "", "TryStar"], [116, 11, 1, "", "Tuple"], [116, 11, 1, "", "TypeAlias"], [116, 11, 1, "", "TypeVar"], [116, 11, 1, "", "TypeVarTuple"], [116, 11, 1, "", "UAdd"], [116, 11, 1, "", "USub"], [116, 11, 1, "", "UnaryOp"], [116, 11, 1, "", "While"], [116, 11, 1, "", "With"], [116, 11, 1, "", "Yield"], [116, 11, 1, "", "YieldFrom"], [116, 11, 1, "", "alias"], [116, 11, 1, "", "arg"], [116, 11, 1, "", "arguments"], [116, 11, 1, "", "comprehension"], [116, 12, 1, "", "copy_location"], [116, 12, 1, "", "dump"], [116, 12, 1, "", "fix_missing_locations"], [116, 12, 1, "", "get_docstring"], [116, 12, 1, "", "get_source_segment"], [116, 12, 1, "", "increment_lineno"], [116, 12, 1, "", "iter_child_nodes"], [116, 12, 1, "", "iter_fields"], [116, 11, 1, "", "keyword"], [116, 12, 1, "", "literal_eval"], [116, 11, 1, "", "match_case"], [116, 12, 1, "", "parse"], [116, 12, 1, "", "unparse"], [116, 12, 1, "", "walk"], [116, 11, 1, "", "withitem"], [116, 14, 1, "cmdoption-ast-h", "--help"], [116, 14, 1, "cmdoption-ast-a", "--include-attributes"], [116, 14, 1, "cmdoption-ast-indent", "--indent"], [116, 14, 1, "cmdoption-ast-mode", "--mode"], [116, 14, 1, "cmdoption-ast-no-type-comments", "--no-type-comments"], [116, 14, 1, "cmdoption-ast-a", "-a"], [116, 14, 1, "cmdoption-ast-h", "-h"], [116, 14, 1, "cmdoption-ast-i", "-i"], [116, 14, 1, "cmdoption-ast-m", "-m"]], "ast.AST": [[116, 7, 1, "", "_fields"], [116, 7, 1, "", "col_offset"], [116, 7, 1, "", "end_col_offset"], [116, 7, 1, "", "end_lineno"], [116, 7, 1, "", "lineno"]], "ast.Assign": [[116, 7, 1, "", "type_comment"]], "ast.For": [[116, 7, 1, "", "type_comment"]], "ast.FunctionDef": [[116, 7, 1, "", "type_comment"]], "ast.NodeVisitor": [[116, 8, 1, "", "generic_visit"], [116, 8, 1, "", "visit"]], "ast.With": [[116, 7, 1, "", "type_comment"]], "ast.arg": [[116, 7, 1, "", "type_comment"]], "asyncio": [[126, 11, 1, "", "AbstractChildWatcher"], [120, 11, 1, "", "AbstractEventLoop"], [126, 11, 1, "", "AbstractEventLoopPolicy"], [132, 11, 1, "", "Barrier"], [127, 11, 1, "", "BaseProtocol"], [127, 11, 1, "", "BaseTransport"], [132, 11, 1, "", "BoundedSemaphore"], [132, 6, 1, "", "BrokenBarrierError"], [127, 11, 1, "", "BufferedProtocol"], [121, 6, 1, "", "CancelledError"], [132, 11, 1, "", "Condition"], [127, 11, 1, "", "DatagramProtocol"], [127, 11, 1, "", "DatagramTransport"], [126, 11, 1, "", "DefaultEventLoopPolicy"], [132, 11, 1, "", "Event"], [126, 11, 1, "", "FastChildWatcher"], [123, 11, 1, "", "Future"], [120, 11, 1, "", "Handle"], [121, 6, 1, "", "IncompleteReadError"], [121, 6, 1, "", "InvalidStateError"], [128, 11, 1, "", "LifoQueue"], [121, 6, 1, "", "LimitOverrunError"], [132, 11, 1, "", "Lock"], [126, 11, 1, "", "MultiLoopChildWatcher"], [126, 11, 1, "", "PidfdChildWatcher"], [128, 11, 1, "", "PriorityQueue"], [120, 11, 1, "", "ProactorEventLoop"], [127, 11, 1, "", "Protocol"], [128, 11, 1, "", "Queue"], [128, 6, 1, "", "QueueEmpty"], [128, 6, 1, "", "QueueFull"], [127, 11, 1, "", "ReadTransport"], [129, 11, 1, "", "Runner"], [126, 11, 1, "", "SafeChildWatcher"], [120, 11, 1, "", "SelectorEventLoop"], [132, 11, 1, "", "Semaphore"], [121, 6, 1, "", "SendfileNotAvailableError"], [120, 11, 1, "", "Server"], [130, 11, 1, "", "StreamReader"], [130, 11, 1, "", "StreamWriter"], [127, 11, 1, "", "SubprocessProtocol"], [127, 11, 1, "", "SubprocessTransport"], [133, 11, 1, "", "Task"], [133, 11, 1, "", "TaskGroup"], [126, 11, 1, "", "ThreadedChildWatcher"], [133, 11, 1, "", "Timeout"], [121, 6, 1, "", "TimeoutError"], [120, 11, 1, "", "TimerHandle"], [127, 11, 1, "", "Transport"], [126, 11, 1, "", "WindowsProactorEventLoopPolicy"], [126, 11, 1, "", "WindowsSelectorEventLoopPolicy"], [127, 11, 1, "", "WriteTransport"], [122, 12, 1, "", "_enter_task"], [122, 12, 1, "", "_leave_task"], [122, 12, 1, "", "_register_task"], [122, 12, 1, "", "_unregister_task"], [133, 12, 1, "", "all_tasks"], [133, 12, 1, "", "as_completed"], [133, 12, 1, "", "create_eager_task_factory"], [131, 12, 1, "", "create_subprocess_exec"], [131, 12, 1, "", "create_subprocess_shell"], [133, 12, 1, "", "create_task"], [133, 12, 1, "", "current_task"], [133, 12, 1, "", "eager_task_factory"], [123, 12, 1, "", "ensure_future"], [133, 12, 1, "", "gather"], [126, 12, 1, "", "get_child_watcher"], [120, 12, 1, "", "get_event_loop"], [126, 12, 1, "", "get_event_loop_policy"], [120, 12, 1, "", "get_running_loop"], [133, 12, 1, "", "iscoroutine"], [123, 12, 1, "", "isfuture"], [120, 12, 1, "", "new_event_loop"], [130, 12, 1, "", "open_connection"], [130, 12, 1, "", "open_unix_connection"], [129, 12, 1, "", "run"], [133, 12, 1, "", "run_coroutine_threadsafe"], [126, 12, 1, "", "set_child_watcher"], [120, 12, 1, "", "set_event_loop"], [126, 12, 1, "", "set_event_loop_policy"], [133, 12, 1, "", "shield"], [133, 12, 1, "", "sleep"], [130, 12, 1, "", "start_server"], [130, 12, 1, "", "start_unix_server"], [133, 12, 1, "", "timeout"], [133, 12, 1, "", "timeout_at"], [133, 12, 1, "", "to_thread"], [133, 12, 1, "", "wait"], [133, 12, 1, "", "wait_for"], [123, 12, 1, "", "wrap_future"]], "asyncio.AbstractChildWatcher": [[126, 8, 1, "", "add_child_handler"], [126, 8, 1, "", "attach_loop"], [126, 8, 1, "", "close"], [126, 8, 1, "", "is_active"], [126, 8, 1, "", "remove_child_handler"]], "asyncio.AbstractEventLoopPolicy": [[126, 8, 1, "", "get_child_watcher"], [126, 8, 1, "", "get_event_loop"], [126, 8, 1, "", "new_event_loop"], [126, 8, 1, "", "set_child_watcher"], [126, 8, 1, "", "set_event_loop"]], "asyncio.Barrier": [[132, 8, 1, "", "abort"], [132, 7, 1, "", "broken"], [132, 7, 1, "", "n_waiting"], [132, 7, 1, "", "parties"], [132, 8, 1, "", "reset"], [132, 8, 1, "", "wait"]], "asyncio.BaseProtocol": [[127, 8, 1, "", "connection_lost"], [127, 8, 1, "", "connection_made"], [127, 8, 1, "", "pause_writing"], [127, 8, 1, "", "resume_writing"]], "asyncio.BaseTransport": [[127, 8, 1, "", "close"], [127, 8, 1, "", "get_extra_info"], [127, 8, 1, "", "get_protocol"], [127, 8, 1, "", "is_closing"], [127, 8, 1, "", "set_protocol"]], "asyncio.BufferedProtocol": [[127, 8, 1, "", "buffer_updated"], [127, 8, 1, "", "eof_received"], [127, 8, 1, "", "get_buffer"]], "asyncio.Condition": [[132, 8, 1, "", "acquire"], [132, 8, 1, "", "locked"], [132, 8, 1, "", "notify"], [132, 8, 1, "", "notify_all"], [132, 8, 1, "", "release"], [132, 8, 1, "", "wait"], [132, 8, 1, "", "wait_for"]], "asyncio.DatagramProtocol": [[127, 8, 1, "", "datagram_received"], [127, 8, 1, "", "error_received"]], "asyncio.DatagramTransport": [[127, 8, 1, "", "abort"], [127, 8, 1, "", "sendto"]], "asyncio.Event": [[132, 8, 1, "", "clear"], [132, 8, 1, "", "is_set"], [132, 8, 1, "", "set"], [132, 8, 1, "", "wait"]], "asyncio.Future": [[122, 8, 1, "", "__init__"], [123, 8, 1, "", "add_done_callback"], [123, 8, 1, "", "cancel"], [123, 8, 1, "", "cancelled"], [123, 8, 1, "", "done"], [123, 8, 1, "", "exception"], [123, 8, 1, "", "get_loop"], [123, 8, 1, "", "remove_done_callback"], [123, 8, 1, "", "result"], [123, 8, 1, "", "set_exception"], [123, 8, 1, "", "set_result"]], "asyncio.Handle": [[120, 8, 1, "", "cancel"], [120, 8, 1, "", "cancelled"], [120, 8, 1, "", "get_context"]], "asyncio.IncompleteReadError": [[121, 7, 1, "", "expected"], [121, 7, 1, "", "partial"]], "asyncio.LimitOverrunError": [[121, 7, 1, "", "consumed"]], "asyncio.Lock": [[132, 8, 1, "", "acquire"], [132, 8, 1, "", "locked"], [132, 8, 1, "", "release"]], "asyncio.Protocol": [[127, 8, 1, "", "data_received"], [127, 8, 1, "", "eof_received"]], "asyncio.Queue": [[128, 8, 1, "", "empty"], [128, 8, 1, "", "full"], [128, 8, 1, "", "get"], [128, 8, 1, "", "get_nowait"], [128, 8, 1, "", "join"], [128, 7, 1, "", "maxsize"], [128, 8, 1, "", "put"], [128, 8, 1, "", "put_nowait"], [128, 8, 1, "", "qsize"], [128, 8, 1, "", "task_done"]], "asyncio.ReadTransport": [[127, 8, 1, "", "is_reading"], [127, 8, 1, "", "pause_reading"], [127, 8, 1, "", "resume_reading"]], "asyncio.Runner": [[129, 8, 1, "", "close"], [129, 8, 1, "", "get_loop"], [129, 8, 1, "", "run"]], "asyncio.Semaphore": [[132, 8, 1, "", "acquire"], [132, 8, 1, "", "locked"], [132, 8, 1, "", "release"]], "asyncio.Server": [[120, 8, 1, "", "close"], [120, 8, 1, "", "get_loop"], [120, 8, 1, "", "is_serving"], [120, 8, 1, "", "serve_forever"], [120, 7, 1, "", "sockets"], [120, 8, 1, "", "start_serving"], [120, 8, 1, "", "wait_closed"]], "asyncio.StreamReader": [[130, 8, 1, "", "at_eof"], [130, 8, 1, "", "read"], [130, 8, 1, "", "readexactly"], [130, 8, 1, "", "readline"], [130, 8, 1, "", "readuntil"]], "asyncio.StreamWriter": [[130, 8, 1, "", "can_write_eof"], [130, 8, 1, "", "close"], [130, 8, 1, "", "drain"], [130, 8, 1, "", "get_extra_info"], [130, 8, 1, "", "is_closing"], [130, 8, 1, "", "start_tls"], [130, 7, 1, "", "transport"], [130, 8, 1, "", "wait_closed"], [130, 8, 1, "", "write"], [130, 8, 1, "", "write_eof"], [130, 8, 1, "", "writelines"]], "asyncio.SubprocessProtocol": [[127, 8, 1, "", "pipe_connection_lost"], [127, 8, 1, "", "pipe_data_received"], [127, 8, 1, "", "process_exited"]], "asyncio.SubprocessTransport": [[127, 8, 1, "", "close"], [127, 8, 1, "", "get_pid"], [127, 8, 1, "", "get_pipe_transport"], [127, 8, 1, "", "get_returncode"], [127, 8, 1, "", "kill"], [127, 8, 1, "", "send_signal"], [127, 8, 1, "", "terminate"]], "asyncio.Task": [[122, 8, 1, "", "__init__"], [133, 8, 1, "", "add_done_callback"], [133, 8, 1, "", "cancel"], [133, 8, 1, "", "cancelled"], [133, 8, 1, "", "cancelling"], [133, 8, 1, "", "done"], [133, 8, 1, "", "exception"], [133, 8, 1, "", "get_context"], [133, 8, 1, "", "get_coro"], [133, 8, 1, "", "get_name"], [133, 8, 1, "", "get_stack"], [133, 8, 1, "", "print_stack"], [133, 8, 1, "", "remove_done_callback"], [133, 8, 1, "", "result"], [133, 8, 1, "", "set_name"], [133, 8, 1, "", "uncancel"]], "asyncio.TaskGroup": [[133, 8, 1, "", "create_task"]], "asyncio.Timeout": [[133, 8, 1, "", "expired"], [133, 8, 1, "", "reschedule"], [133, 8, 1, "", "when"]], "asyncio.TimerHandle": [[120, 8, 1, "", "when"]], "asyncio.WriteTransport": [[127, 8, 1, "", "abort"], [127, 8, 1, "", "can_write_eof"], [127, 8, 1, "", "get_write_buffer_limits"], [127, 8, 1, "", "get_write_buffer_size"], [127, 8, 1, "", "set_write_buffer_limits"], [127, 8, 1, "", "write"], [127, 8, 1, "", "write_eof"], [127, 8, 1, "", "writelines"]], "asyncio.loop": [[120, 8, 1, "", "add_reader"], [120, 8, 1, "", "add_signal_handler"], [120, 8, 1, "", "add_writer"], [120, 8, 1, "", "call_at"], [120, 8, 1, "", "call_exception_handler"], [120, 8, 1, "", "call_later"], [120, 8, 1, "", "call_soon"], [120, 8, 1, "", "call_soon_threadsafe"], [120, 8, 1, "", "close"], [120, 8, 1, "", "connect_accepted_socket"], [120, 8, 1, "", "connect_read_pipe"], [120, 8, 1, "", "connect_write_pipe"], [120, 8, 1, "", "create_connection"], [120, 8, 1, "", "create_datagram_endpoint"], [120, 8, 1, "", "create_future"], [120, 8, 1, "", "create_server"], [120, 8, 1, "", "create_task"], [120, 8, 1, "", "create_unix_connection"], [120, 8, 1, "", "create_unix_server"], [120, 8, 1, "", "default_exception_handler"], [120, 8, 1, "", "get_debug"], [120, 8, 1, "", "get_exception_handler"], [120, 8, 1, "", "get_task_factory"], [120, 8, 1, "", "getaddrinfo"], [120, 8, 1, "", "getnameinfo"], [120, 8, 1, "", "is_closed"], [120, 8, 1, "", "is_running"], [120, 8, 1, "", "remove_reader"], [120, 8, 1, "", "remove_signal_handler"], [120, 8, 1, "", "remove_writer"], [120, 8, 1, "", "run_forever"], [120, 8, 1, "", "run_in_executor"], [120, 8, 1, "", "run_until_complete"], [120, 8, 1, "", "sendfile"], [120, 8, 1, "", "set_debug"], [120, 8, 1, "", "set_default_executor"], [120, 8, 1, "", "set_exception_handler"], [120, 8, 1, "", "set_task_factory"], [120, 8, 1, "", "shutdown_asyncgens"], [120, 8, 1, "", "shutdown_default_executor"], [120, 8, 1, "", "sock_accept"], [120, 8, 1, "", "sock_connect"], [120, 8, 1, "", "sock_recv"], [120, 8, 1, "", "sock_recv_into"], [120, 8, 1, "", "sock_recvfrom"], [120, 8, 1, "", "sock_recvfrom_into"], [120, 8, 1, "", "sock_sendall"], [120, 8, 1, "", "sock_sendfile"], [120, 8, 1, "", "sock_sendto"], [120, 8, 1, "", "start_tls"], [120, 8, 1, "", "stop"], [120, 8, 1, "", "subprocess_exec"], [120, 8, 1, "", "subprocess_shell"], [120, 8, 1, "", "time"]], "asyncio.subprocess": [[131, 9, 1, "", "DEVNULL"], [131, 9, 1, "", "PIPE"], [131, 11, 1, "", "Process"], [131, 9, 1, "", "STDOUT"]], "asyncio.subprocess.Process": [[131, 8, 1, "", "communicate"], [131, 8, 1, "", "kill"], [131, 7, 1, "", "pid"], [131, 7, 1, "", "returncode"], [131, 8, 1, "", "send_signal"], [131, 7, 1, "", "stderr"], [131, 7, 1, "", "stdin"], [131, 7, 1, "", "stdout"], [131, 8, 1, "", "terminate"], [131, 8, 1, "", "wait"]], "atexit": [[134, 12, 1, "", "register"], [134, 12, 1, "", "unregister"]], "base64": [[136, 12, 1, "", "a85decode"], [136, 12, 1, "", "a85encode"], [136, 12, 1, "", "b16decode"], [136, 12, 1, "", "b16encode"], [136, 12, 1, "", "b32decode"], [136, 12, 1, "", "b32encode"], [136, 12, 1, "", "b32hexdecode"], [136, 12, 1, "", "b32hexencode"], [136, 12, 1, "", "b64decode"], [136, 12, 1, "", "b64encode"], [136, 12, 1, "", "b85decode"], [136, 12, 1, "", "b85encode"], [136, 12, 1, "", "decode"], [136, 12, 1, "", "decodebytes"], [136, 12, 1, "", "encode"], [136, 12, 1, "", "encodebytes"], [136, 12, 1, "", "standard_b64decode"], [136, 12, 1, "", "standard_b64encode"], [136, 12, 1, "", "urlsafe_b64decode"], [136, 12, 1, "", "urlsafe_b64encode"]], "bdb": [[137, 11, 1, "", "Bdb"], [137, 6, 1, "", "BdbQuit"], [137, 11, 1, "", "Breakpoint"], [137, 12, 1, "", "checkfuncname"], [137, 12, 1, "", "effective"], [137, 12, 1, "", "set_trace"]], "bdb.Bdb": [[137, 8, 1, "", "break_anywhere"], [137, 8, 1, "", "break_here"], [137, 8, 1, "", "canonic"], [137, 8, 1, "", "clear_all_breaks"], [137, 8, 1, "", "clear_all_file_breaks"], [137, 8, 1, "", "clear_bpbynumber"], [137, 8, 1, "", "clear_break"], [137, 8, 1, "", "dispatch_call"], [137, 8, 1, "", "dispatch_exception"], [137, 8, 1, "", "dispatch_line"], [137, 8, 1, "", "dispatch_return"], [137, 8, 1, "", "do_clear"], [137, 8, 1, "", "format_stack_entry"], [137, 8, 1, "", "get_all_breaks"], [137, 8, 1, "", "get_bpbynumber"], [137, 8, 1, "", "get_break"], [137, 8, 1, "", "get_breaks"], [137, 8, 1, "", "get_file_breaks"], [137, 8, 1, "", "get_stack"], [137, 8, 1, "", "is_skipped_line"], [137, 8, 1, "", "reset"], [137, 8, 1, "", "run"], [137, 8, 1, "", "runcall"], [137, 8, 1, "", "runctx"], [137, 8, 1, "", "runeval"], [137, 8, 1, "", "set_break"], [137, 8, 1, "", "set_continue"], [137, 8, 1, "", "set_next"], [137, 8, 1, "", "set_quit"], [137, 8, 1, "", "set_return"], [137, 8, 1, "", "set_step"], [137, 8, 1, "", "set_trace"], [137, 8, 1, "", "set_until"], [137, 8, 1, "", "stop_here"], [137, 8, 1, "", "trace_dispatch"], [137, 8, 1, "", "user_call"], [137, 8, 1, "", "user_exception"], [137, 8, 1, "", "user_line"], [137, 8, 1, "", "user_return"]], "bdb.Breakpoint": [[137, 7, 1, "", "bpbynumber"], [137, 8, 1, "", "bpformat"], [137, 7, 1, "", "bplist"], [137, 8, 1, "", "bpprint"], [137, 7, 1, "", "cond"], [137, 8, 1, "", "deleteMe"], [137, 8, 1, "", "disable"], [137, 8, 1, "", "enable"], [137, 7, 1, "", "enabled"], [137, 7, 1, "", "file"], [137, 7, 1, "", "funcname"], [137, 7, 1, "", "hits"], [137, 7, 1, "", "ignore"], [137, 7, 1, "", "line"], [137, 7, 1, "", "temporary"]], "binascii": [[139, 6, 1, "", "Error"], [139, 6, 1, "", "Incomplete"], [139, 12, 1, "", "a2b_base64"], [139, 12, 1, "", "a2b_hex"], [139, 12, 1, "", "a2b_qp"], [139, 12, 1, "", "a2b_uu"], [139, 12, 1, "", "b2a_base64"], [139, 12, 1, "", "b2a_hex"], [139, 12, 1, "", "b2a_qp"], [139, 12, 1, "", "b2a_uu"], [139, 12, 1, "", "crc32"], [139, 12, 1, "", "crc_hqx"], [139, 12, 1, "", "hexlify"], [139, 12, 1, "", "unhexlify"]], "bisect": [[140, 12, 1, "", "bisect"], [140, 12, 1, "", "bisect_left"], [140, 12, 1, "", "bisect_right"], [140, 12, 1, "", "insort"], [140, 12, 1, "", "insort_left"], [140, 12, 1, "", "insort_right"]], "bytearray": [[324, 8, 1, "", "capitalize"], [324, 8, 1, "", "center"], [324, 8, 1, "", "count"], [324, 8, 1, "", "decode"], [324, 8, 1, "", "endswith"], [324, 8, 1, "", "expandtabs"], [324, 8, 1, "", "find"], [324, 8, 1, "", "fromhex"], [324, 8, 1, "", "hex"], [324, 8, 1, "", "index"], [324, 8, 1, "", "isalnum"], [324, 8, 1, "", "isalpha"], [324, 8, 1, "", "isascii"], [324, 8, 1, "", "isdigit"], [324, 8, 1, "", "islower"], [324, 8, 1, "", "isspace"], [324, 8, 1, "", "istitle"], [324, 8, 1, "", "isupper"], [324, 8, 1, "", "join"], [324, 8, 1, "", "ljust"], [324, 8, 1, "", "lower"], [324, 8, 1, "", "lstrip"], [324, 8, 1, "", "maketrans"], [324, 8, 1, "", "partition"], [324, 8, 1, "", "removeprefix"], [324, 8, 1, "", "removesuffix"], [324, 8, 1, "", "replace"], [324, 8, 1, "", "rfind"], [324, 8, 1, "", "rindex"], [324, 8, 1, "", "rjust"], [324, 8, 1, "", "rpartition"], [324, 8, 1, "", "rsplit"], [324, 8, 1, "", "rstrip"], [324, 8, 1, "", "split"], [324, 8, 1, "", "splitlines"], [324, 8, 1, "", "startswith"], [324, 8, 1, "", "strip"], [324, 8, 1, "", "swapcase"], [324, 8, 1, "", "title"], [324, 8, 1, "", "translate"], [324, 8, 1, "", "upper"], [324, 8, 1, "", "zfill"]], "bytes": [[324, 8, 1, "", "capitalize"], [324, 8, 1, "", "center"], [324, 8, 1, "", "count"], [324, 8, 1, "", "decode"], [324, 8, 1, "", "endswith"], [324, 8, 1, "", "expandtabs"], [324, 8, 1, "", "find"], [324, 8, 1, "", "fromhex"], [324, 8, 1, "", "hex"], [324, 8, 1, "", "index"], [324, 8, 1, "", "isalnum"], [324, 8, 1, "", "isalpha"], [324, 8, 1, "", "isascii"], [324, 8, 1, "", "isdigit"], [324, 8, 1, "", "islower"], [324, 8, 1, "", "isspace"], [324, 8, 1, "", "istitle"], [324, 8, 1, "", "isupper"], [324, 8, 1, "", "join"], [324, 8, 1, "", "ljust"], [324, 8, 1, "", "lower"], [324, 8, 1, "", "lstrip"], [324, 8, 1, "", "maketrans"], [324, 8, 1, "", "partition"], [324, 8, 1, "", "removeprefix"], [324, 8, 1, "", "removesuffix"], [324, 8, 1, "", "replace"], [324, 8, 1, "", "rfind"], [324, 8, 1, "", "rindex"], [324, 8, 1, "", "rjust"], [324, 8, 1, "", "rpartition"], [324, 8, 1, "", "rsplit"], [324, 8, 1, "", "rstrip"], [324, 8, 1, "", "split"], [324, 8, 1, "", "splitlines"], [324, 8, 1, "", "startswith"], [324, 8, 1, "", "strip"], [324, 8, 1, "", "swapcase"], [324, 8, 1, "", "title"], [324, 8, 1, "", "translate"], [324, 8, 1, "", "upper"], [324, 8, 1, "", "zfill"]], "bz2": [[142, 11, 1, "", "BZ2Compressor"], [142, 11, 1, "", "BZ2Decompressor"], [142, 11, 1, "", "BZ2File"], [142, 12, 1, "", "compress"], [142, 12, 1, "", "decompress"], [142, 12, 1, "", "open"]], "bz2.BZ2Compressor": [[142, 8, 1, "", "compress"], [142, 8, 1, "", "flush"]], "bz2.BZ2Decompressor": [[142, 8, 1, "", "decompress"], [142, 7, 1, "", "eof"], [142, 7, 1, "", "needs_input"], [142, 7, 1, "", "unused_data"]], "bz2.BZ2File": [[142, 8, 1, "", "peek"]], "calendar": [[143, 9, 1, "", "APRIL"], [143, 9, 1, "", "AUGUST"], [143, 11, 1, "", "Calendar"], [143, 9, 1, "", "DECEMBER"], [143, 11, 1, "", "Day"], [143, 9, 1, "", "FEBRUARY"], [143, 9, 1, "", "FRIDAY"], [143, 11, 1, "", "HTMLCalendar"], [143, 6, 1, "", "IllegalMonthError"], [143, 6, 1, "", "IllegalWeekdayError"], [143, 9, 1, "", "JANUARY"], [143, 9, 1, "", "JULY"], [143, 9, 1, "", "JUNE"], [143, 11, 1, "", "LocaleHTMLCalendar"], [143, 11, 1, "", "LocaleTextCalendar"], [143, 9, 1, "", "MARCH"], [143, 9, 1, "", "MAY"], [143, 9, 1, "", "MONDAY"], [143, 11, 1, "", "Month"], [143, 9, 1, "", "NOVEMBER"], [143, 9, 1, "", "OCTOBER"], [143, 9, 1, "", "SATURDAY"], [143, 9, 1, "", "SEPTEMBER"], [143, 9, 1, "", "SUNDAY"], [143, 9, 1, "", "THURSDAY"], [143, 9, 1, "", "TUESDAY"], [143, 11, 1, "", "TextCalendar"], [143, 9, 1, "", "WEDNESDAY"], [143, 12, 1, "", "calendar"], [143, 9, 1, "", "day_abbr"], [143, 9, 1, "", "day_name"], [143, 12, 1, "", "firstweekday"], [143, 12, 1, "", "isleap"], [143, 12, 1, "", "leapdays"], [143, 12, 1, "", "month"], [143, 9, 1, "", "month_abbr"], [143, 9, 1, "", "month_name"], [143, 12, 1, "", "monthcalendar"], [143, 12, 1, "", "monthrange"], [143, 12, 1, "", "prcal"], [143, 12, 1, "", "prmonth"], [143, 12, 1, "", "setfirstweekday"], [143, 12, 1, "", "timegm"], [143, 12, 1, "", "weekday"], [143, 12, 1, "", "weekheader"], [143, 14, 1, "cmdoption-calendar-css", "--css"], [143, 14, 1, "cmdoption-calendar-encoding", "--encoding"], [143, 14, 1, "cmdoption-calendar-help", "--help"], [143, 14, 1, "cmdoption-calendar-lines", "--lines"], [143, 14, 1, "cmdoption-calendar-locale", "--locale"], [143, 14, 1, "cmdoption-calendar-months", "--months"], [143, 14, 1, "cmdoption-calendar-spacing", "--spacing"], [143, 14, 1, "cmdoption-calendar-type", "--type"], [143, 14, 1, "cmdoption-calendar-width", "--width"], [143, 14, 1, "cmdoption-calendar-locale", "-L"], [143, 14, 1, "cmdoption-calendar-css", "-c"], [143, 14, 1, "cmdoption-calendar-encoding", "-e"], [143, 14, 1, "cmdoption-calendar-help", "-h"], [143, 14, 1, "cmdoption-calendar-lines", "-l"], [143, 14, 1, "cmdoption-calendar-months", "-m"], [143, 14, 1, "cmdoption-calendar-spacing", "-s"], [143, 14, 1, "cmdoption-calendar-type", "-t"], [143, 14, 1, "cmdoption-calendar-width", "-w"], [143, 14, 1, "cmdoption-calendar-arg-month", "month"], [143, 14, 1, "cmdoption-calendar-arg-year", "year"]], "calendar.Calendar": [[143, 8, 1, "", "itermonthdates"], [143, 8, 1, "", "itermonthdays"], [143, 8, 1, "", "itermonthdays2"], [143, 8, 1, "", "itermonthdays3"], [143, 8, 1, "", "itermonthdays4"], [143, 8, 1, "", "iterweekdays"], [143, 8, 1, "", "monthdatescalendar"], [143, 8, 1, "", "monthdays2calendar"], [143, 8, 1, "", "monthdayscalendar"], [143, 8, 1, "", "yeardatescalendar"], [143, 8, 1, "", "yeardays2calendar"], [143, 8, 1, "", "yeardayscalendar"]], "calendar.HTMLCalendar": [[143, 7, 1, "", "cssclass_month"], [143, 7, 1, "", "cssclass_month_head"], [143, 7, 1, "", "cssclass_noday"], [143, 7, 1, "", "cssclass_year"], [143, 7, 1, "", "cssclass_year_head"], [143, 7, 1, "", "cssclasses"], [143, 7, 1, "", "cssclasses_weekday_head"], [143, 8, 1, "", "formatmonth"], [143, 8, 1, "", "formatyear"], [143, 8, 1, "", "formatyearpage"]], "calendar.IllegalMonthError": [[143, 7, 1, "", "month"]], "calendar.IllegalWeekdayError": [[143, 7, 1, "", "weekday"]], "calendar.TextCalendar": [[143, 8, 1, "", "formatmonth"], [143, 8, 1, "", "formatyear"], [143, 8, 1, "", "prmonth"], [143, 8, 1, "", "pryear"]], "class": [[324, 7, 1, "", "__bases__"], [403, 8, 1, "", "__instancecheck__"], [324, 7, 1, "", "__mro__"], [403, 8, 1, "", "__subclasscheck__"], [324, 8, 1, "", "__subclasses__"], [324, 8, 1, "", "mro"]], "clinic": [[88, 11, 1, "", "CConverter"]], "clinic.CConverter": [[88, 7, 1, "", "c_default"], [88, 7, 1, "", "c_ignored_default"], [88, 7, 1, "", "converter"], [88, 7, 1, "", "default"], [88, 7, 1, "", "impl_by_reference"], [88, 7, 1, "", "parse_by_reference"], [88, 7, 1, "", "py_default"], [88, 7, 1, "", "type"]], "cmath": [[144, 12, 1, "", "acos"], [144, 12, 1, "", "acosh"], [144, 12, 1, "", "asin"], [144, 12, 1, "", "asinh"], [144, 12, 1, "", "atan"], [144, 12, 1, "", "atanh"], [144, 12, 1, "", "cos"], [144, 12, 1, "", "cosh"], [144, 9, 1, "", "e"], [144, 12, 1, "", "exp"], [144, 9, 1, "", "inf"], [144, 9, 1, "", "infj"], [144, 12, 1, "", "isclose"], [144, 12, 1, "", "isfinite"], [144, 12, 1, "", "isinf"], [144, 12, 1, "", "isnan"], [144, 12, 1, "", "log"], [144, 12, 1, "", "log10"], [144, 9, 1, "", "nan"], [144, 9, 1, "", "nanj"], [144, 12, 1, "", "phase"], [144, 9, 1, "", "pi"], [144, 12, 1, "", "polar"], [144, 12, 1, "", "rect"], [144, 12, 1, "", "sin"], [144, 12, 1, "", "sinh"], [144, 12, 1, "", "sqrt"], [144, 12, 1, "", "tan"], [144, 12, 1, "", "tanh"], [144, 9, 1, "", "tau"]], "cmd": [[145, 11, 1, "", "Cmd"]], "cmd.Cmd": [[145, 8, 1, "", "cmdloop"], [145, 7, 1, "", "cmdqueue"], [145, 8, 1, "", "columnize"], [145, 8, 1, "", "completedefault"], [145, 8, 1, "", "default"], [145, 7, 1, "", "doc_header"], [145, 8, 1, "", "emptyline"], [145, 7, 1, "", "identchars"], [145, 7, 1, "", "intro"], [145, 7, 1, "", "lastcmd"], [145, 7, 1, "", "misc_header"], [145, 8, 1, "", "onecmd"], [145, 8, 1, "", "postcmd"], [145, 8, 1, "", "postloop"], [145, 8, 1, "", "precmd"], [145, 8, 1, "", "preloop"], [145, 7, 1, "", "prompt"], [145, 7, 1, "", "ruler"], [145, 7, 1, "", "undoc_header"], [145, 7, 1, "", "use_rawinput"]], "code": [[147, 11, 1, "", "InteractiveConsole"], [147, 11, 1, "", "InteractiveInterpreter"], [147, 12, 1, "", "compile_command"], [147, 12, 1, "", "interact"]], "code.InteractiveConsole": [[147, 8, 1, "", "interact"], [147, 8, 1, "", "push"], [147, 8, 1, "", "raw_input"], [147, 8, 1, "", "resetbuffer"]], "code.InteractiveInterpreter": [[147, 8, 1, "", "runcode"], [147, 8, 1, "", "runsource"], [147, 8, 1, "", "showsyntaxerror"], [147, 8, 1, "", "showtraceback"], [147, 8, 1, "", "write"]], "codecs": [[148, 9, 1, "", "BOM"], [148, 9, 1, "", "BOM_BE"], [148, 9, 1, "", "BOM_LE"], [148, 9, 1, "", "BOM_UTF16"], [148, 9, 1, "", "BOM_UTF16_BE"], [148, 9, 1, "", "BOM_UTF16_LE"], [148, 9, 1, "", "BOM_UTF32"], [148, 9, 1, "", "BOM_UTF32_BE"], [148, 9, 1, "", "BOM_UTF32_LE"], [148, 9, 1, "", "BOM_UTF8"], [148, 11, 1, "", "CodecInfo"], [148, 12, 1, "", "EncodedFile"], [148, 11, 1, "", "IncrementalDecoder"], [148, 11, 1, "", "IncrementalEncoder"], [148, 11, 1, "", "StreamReader"], [148, 11, 1, "", "StreamReaderWriter"], [148, 11, 1, "", "StreamRecoder"], [148, 11, 1, "", "StreamWriter"], [148, 12, 1, "", "backslashreplace_errors"], [148, 12, 1, "", "decode"], [148, 12, 1, "", "encode"], [148, 12, 1, "", "getdecoder"], [148, 12, 1, "", "getencoder"], [148, 12, 1, "", "getincrementaldecoder"], [148, 12, 1, "", "getincrementalencoder"], [148, 12, 1, "", "getreader"], [148, 12, 1, "", "getwriter"], [148, 12, 1, "", "ignore_errors"], [148, 12, 1, "", "iterdecode"], [148, 12, 1, "", "iterencode"], [148, 12, 1, "", "lookup"], [148, 12, 1, "", "lookup_error"], [148, 12, 1, "", "namereplace_errors"], [148, 12, 1, "", "open"], [148, 12, 1, "", "register"], [148, 12, 1, "", "register_error"], [148, 12, 1, "", "replace_errors"], [148, 12, 1, "", "strict_errors"], [148, 12, 1, "", "unregister"], [148, 12, 1, "", "xmlcharrefreplace_errors"]], "codecs.Codec": [[148, 8, 1, "", "decode"], [148, 8, 1, "", "encode"]], "codecs.CodecInfo": [[148, 7, 1, "", "decode"], [148, 7, 1, "", "encode"], [148, 7, 1, "", "incrementaldecoder"], [148, 7, 1, "", "incrementalencoder"], [148, 7, 1, "", "name"], [148, 7, 1, "", "streamreader"], [148, 7, 1, "", "streamwriter"]], "codecs.IncrementalDecoder": [[148, 8, 1, "", "decode"], [148, 8, 1, "", "getstate"], [148, 8, 1, "", "reset"], [148, 8, 1, "", "setstate"]], "codecs.IncrementalEncoder": [[148, 8, 1, "", "encode"], [148, 8, 1, "", "getstate"], [148, 8, 1, "", "reset"], [148, 8, 1, "", "setstate"]], "codecs.StreamReader": [[148, 8, 1, "", "read"], [148, 8, 1, "", "readline"], [148, 8, 1, "", "readlines"], [148, 8, 1, "", "reset"]], "codecs.StreamWriter": [[148, 8, 1, "", "reset"], [148, 8, 1, "", "write"], [148, 8, 1, "", "writelines"]], "codeobject": [[403, 8, 1, "", "co_positions"]], "codeop": [[149, 11, 1, "", "CommandCompiler"], [149, 11, 1, "", "Compile"], [149, 12, 1, "", "compile_command"]], "collections": [[150, 11, 1, "", "ChainMap"], [150, 11, 1, "", "Counter"], [150, 11, 1, "", "OrderedDict"], [150, 11, 1, "", "UserDict"], [150, 11, 1, "", "UserList"], [150, 11, 1, "", "UserString"], [151, 10, 0, "-", "abc"], [150, 11, 1, "", "defaultdict"], [150, 11, 1, "", "deque"], [150, 12, 1, "", "namedtuple"]], "collections.ChainMap": [[150, 7, 1, "", "maps"], [150, 8, 1, "", "new_child"], [150, 7, 1, "", "parents"]], "collections.Counter": [[150, 8, 1, "", "elements"], [150, 8, 1, "", "fromkeys"], [150, 8, 1, "", "most_common"], [150, 8, 1, "", "subtract"], [150, 8, 1, "", "total"], [150, 8, 1, "", "update"]], "collections.OrderedDict": [[150, 8, 1, "", "move_to_end"], [150, 8, 1, "", "popitem"]], "collections.UserDict": [[150, 7, 1, "", "data"]], "collections.UserList": [[150, 7, 1, "", "data"]], "collections.UserString": [[150, 7, 1, "", "data"]], "collections.abc": [[151, 11, 1, "", "AsyncGenerator"], [151, 11, 1, "", "AsyncIterable"], [151, 11, 1, "", "AsyncIterator"], [151, 11, 1, "", "Awaitable"], [151, 11, 1, "", "Buffer"], [151, 11, 1, "", "ByteString"], [151, 11, 1, "", "Callable"], [151, 11, 1, "", "Collection"], [151, 11, 1, "", "Container"], [151, 11, 1, "", "Coroutine"], [151, 11, 1, "", "Generator"], [151, 11, 1, "", "Hashable"], [151, 11, 1, "", "ItemsView"], [151, 11, 1, "", "Iterable"], [151, 11, 1, "", "Iterator"], [151, 11, 1, "", "KeysView"], [151, 11, 1, "", "Mapping"], [151, 11, 1, "", "MappingView"], [151, 11, 1, "", "MutableMapping"], [151, 11, 1, "", "MutableSequence"], [151, 11, 1, "", "MutableSet"], [151, 11, 1, "", "Reversible"], [151, 11, 1, "", "Sequence"], [151, 11, 1, "", "Set"], [151, 11, 1, "", "Sized"], [151, 11, 1, "", "ValuesView"]], "collections.defaultdict": [[150, 8, 1, "", "__missing__"], [150, 7, 1, "", "default_factory"]], "collections.deque": [[150, 8, 1, "", "append"], [150, 8, 1, "", "appendleft"], [150, 8, 1, "", "clear"], [150, 8, 1, "", "copy"], [150, 8, 1, "", "count"], [150, 8, 1, "", "extend"], [150, 8, 1, "", "extendleft"], [150, 8, 1, "", "index"], [150, 8, 1, "", "insert"], [150, 7, 1, "", "maxlen"], [150, 8, 1, "", "pop"], [150, 8, 1, "", "popleft"], [150, 8, 1, "", "remove"], [150, 8, 1, "", "reverse"], [150, 8, 1, "", "rotate"]], "collections.somenamedtuple": [[150, 8, 1, "", "_asdict"], [150, 7, 1, "", "_field_defaults"], [150, 7, 1, "", "_fields"], [150, 8, 1, "", "_make"], [150, 8, 1, "", "_replace"]], "colorsys": [[152, 12, 1, "", "hls_to_rgb"], [152, 12, 1, "", "hsv_to_rgb"], [152, 12, 1, "", "rgb_to_hls"], [152, 12, 1, "", "rgb_to_hsv"], [152, 12, 1, "", "rgb_to_yiq"], [152, 12, 1, "", "yiq_to_rgb"]], "compileall": [[153, 12, 1, "", "compile_dir"], [153, 12, 1, "", "compile_file"], [153, 12, 1, "", "compile_path"], [153, 14, 1, "cmdoption-compileall-hardlink-dupes", "--hardlink-dupes"], [153, 14, 1, "cmdoption-compileall-invalidation-mode", "--invalidation-mode"], [153, 14, 1, "cmdoption-compileall-b", "-b"], [153, 14, 1, "cmdoption-compileall-d", "-d"], [153, 14, 1, "cmdoption-compileall-e", "-e"], [153, 14, 1, "cmdoption-compileall-f", "-f"], [153, 14, 1, "cmdoption-compileall-i", "-i"], [153, 14, 1, "cmdoption-compileall-j", "-j"], [153, 14, 1, "cmdoption-compileall-l", "-l"], [153, 14, 1, "cmdoption-compileall-o", "-o"], [153, 14, 1, "cmdoption-compileall-p", "-p"], [153, 14, 1, "cmdoption-compileall-q", "-q"], [153, 14, 1, "cmdoption-compileall-r", "-r"], [153, 14, 1, "cmdoption-compileall-s", "-s"], [153, 14, 1, "cmdoption-compileall-x", "-x"], [153, 14, 1, "cmdoption-compileall-arg-directory", "directory"], [153, 14, 1, "cmdoption-compileall-arg-file", "file"]], "concurrent": [[156, 10, 0, "-", "futures"]], "concurrent.futures": [[156, 6, 1, "", "BrokenExecutor"], [156, 6, 1, "", "CancelledError"], [156, 11, 1, "", "Executor"], [156, 11, 1, "", "Future"], [156, 6, 1, "", "InvalidStateError"], [156, 11, 1, "", "ProcessPoolExecutor"], [156, 11, 1, "", "ThreadPoolExecutor"], [156, 6, 1, "", "TimeoutError"], [156, 12, 1, "", "as_completed"], [156, 12, 1, "", "wait"]], "concurrent.futures.Executor": [[156, 8, 1, "", "map"], [156, 8, 1, "", "shutdown"], [156, 8, 1, "", "submit"]], "concurrent.futures.Future": [[156, 8, 1, "", "add_done_callback"], [156, 8, 1, "", "cancel"], [156, 8, 1, "", "cancelled"], [156, 8, 1, "", "done"], [156, 8, 1, "", "exception"], [156, 8, 1, "", "result"], [156, 8, 1, "", "running"], [156, 8, 1, "", "set_exception"], [156, 8, 1, "", "set_result"], [156, 8, 1, "", "set_running_or_notify_cancel"]], "concurrent.futures.process": [[156, 6, 1, "", "BrokenProcessPool"]], "concurrent.futures.thread": [[156, 6, 1, "", "BrokenThreadPool"]], "configparser": [[157, 11, 1, "", "BasicInterpolation"], [157, 11, 1, "", "ConfigParser"], [157, 6, 1, "", "DuplicateOptionError"], [157, 6, 1, "", "DuplicateSectionError"], [157, 6, 1, "", "Error"], [157, 11, 1, "", "ExtendedInterpolation"], [157, 6, 1, "", "InterpolationDepthError"], [157, 6, 1, "", "InterpolationError"], [157, 6, 1, "", "InterpolationMissingOptionError"], [157, 6, 1, "", "InterpolationSyntaxError"], [157, 9, 1, "", "MAX_INTERPOLATION_DEPTH"], [157, 6, 1, "", "MissingSectionHeaderError"], [157, 6, 1, "", "NoOptionError"], [157, 6, 1, "", "NoSectionError"], [157, 6, 1, "", "ParsingError"], [157, 11, 1, "", "RawConfigParser"]], "configparser.ConfigParser": [[157, 7, 1, "", "BOOLEAN_STATES"], [157, 7, 1, "", "SECTCRE"], [157, 8, 1, "", "add_section"], [157, 8, 1, "", "defaults"], [157, 8, 1, "", "get"], [157, 8, 1, "", "getboolean"], [157, 8, 1, "", "getfloat"], [157, 8, 1, "", "getint"], [157, 8, 1, "", "has_option"], [157, 8, 1, "", "has_section"], [157, 8, 1, "", "items"], [157, 8, 1, "", "options"], [157, 8, 1, "", "optionxform"], [157, 8, 1, "", "read"], [157, 8, 1, "", "read_dict"], [157, 8, 1, "", "read_file"], [157, 8, 1, "", "read_string"], [157, 8, 1, "", "remove_option"], [157, 8, 1, "", "remove_section"], [157, 8, 1, "", "sections"], [157, 8, 1, "", "set"], [157, 8, 1, "", "write"]], "configparser.RawConfigParser": [[157, 8, 1, "", "add_section"], [157, 8, 1, "", "set"]], "container": [[324, 8, 1, "", "__iter__"]], "contextlib": [[159, 11, 1, "", "AbstractAsyncContextManager"], [159, 11, 1, "", "AbstractContextManager"], [159, 11, 1, "", "AsyncContextDecorator"], [159, 11, 1, "", "AsyncExitStack"], [159, 11, 1, "", "ContextDecorator"], [159, 11, 1, "", "ExitStack"], [159, 12, 1, "", "aclosing"], [159, 12, 1, "", "asynccontextmanager"], [159, 12, 1, "", "chdir"], [159, 12, 1, "", "closing"], [159, 12, 1, "", "contextmanager"], [159, 12, 1, "", "nullcontext"], [159, 12, 1, "", "redirect_stderr"], [159, 12, 1, "", "redirect_stdout"], [159, 12, 1, "", "suppress"]], "contextlib.AsyncExitStack": [[159, 8, 1, "", "aclose"], [159, 8, 1, "", "enter_async_context"], [159, 8, 1, "", "push_async_callback"], [159, 8, 1, "", "push_async_exit"]], "contextlib.ExitStack": [[159, 8, 1, "", "callback"], [159, 8, 1, "", "close"], [159, 8, 1, "", "enter_context"], [159, 8, 1, "", "pop_all"], [159, 8, 1, "", "push"]], "contextmanager": [[324, 8, 1, "", "__enter__"], [324, 8, 1, "", "__exit__"]], "contextvars": [[160, 11, 1, "", "Context"], [160, 11, 1, "", "ContextVar"], [160, 11, 1, "", "Token"], [160, 12, 1, "", "copy_context"]], "contextvars.Context": [[160, 8, 1, "", "copy"], [160, 8, 1, "", "get"], [160, 8, 1, "", "items"], [160, 8, 1, "", "keys"], [160, 8, 1, "", "run"], [160, 8, 1, "", "values"]], "contextvars.ContextVar": [[160, 8, 1, "", "get"], [160, 7, 1, "", "name"], [160, 8, 1, "", "reset"], [160, 8, 1, "", "set"]], "contextvars.Token": [[160, 7, 1, "", "MISSING"], [160, 7, 1, "", "old_value"], [160, 7, 1, "", "var"]], "copy": [[161, 6, 1, "", "Error"], [161, 12, 1, "", "copy"], [161, 12, 1, "", "deepcopy"], [161, 12, 1, "", "replace"]], "copy.object": [[161, 8, 1, "", "__copy__"], [161, 8, 1, "", "__deepcopy__"], [161, 8, 1, "", "__replace__"]], "copyreg": [[162, 12, 1, "", "constructor"], [162, 12, 1, "", "pickle"]], "coroutine": [[403, 8, 1, "", "close"], [403, 8, 1, "", "send"], [403, 8, 1, "", "throw"]], "csv": [[164, 11, 1, "", "Dialect"], [164, 11, 1, "", "DictReader"], [164, 11, 1, "", "DictWriter"], [164, 6, 1, "", "Error"], [164, 9, 1, "", "QUOTE_ALL"], [164, 9, 1, "", "QUOTE_MINIMAL"], [164, 9, 1, "", "QUOTE_NONE"], [164, 9, 1, "", "QUOTE_NONNUMERIC"], [164, 9, 1, "", "QUOTE_NOTNULL"], [164, 9, 1, "", "QUOTE_STRINGS"], [164, 11, 1, "", "Sniffer"], [164, 11, 1, "", "excel"], [164, 11, 1, "", "excel_tab"], [164, 12, 1, "", "field_size_limit"], [164, 12, 1, "", "get_dialect"], [164, 12, 1, "", "list_dialects"], [164, 12, 1, "", "reader"], [164, 12, 1, "", "register_dialect"], [164, 11, 1, "", "unix_dialect"], [164, 12, 1, "", "unregister_dialect"], [164, 12, 1, "", "writer"]], "csv.Dialect": [[164, 7, 1, "", "delimiter"], [164, 7, 1, "", "doublequote"], [164, 7, 1, "", "escapechar"], [164, 7, 1, "", "lineterminator"], [164, 7, 1, "", "quotechar"], [164, 7, 1, "", "quoting"], [164, 7, 1, "", "skipinitialspace"], [164, 7, 1, "", "strict"]], "csv.DictReader": [[164, 7, 1, "", "fieldnames"]], "csv.DictWriter": [[164, 8, 1, "", "writeheader"]], "csv.Sniffer": [[164, 8, 1, "", "has_header"], [164, 8, 1, "", "sniff"]], "csv.csvreader": [[164, 8, 1, "", "__next__"], [164, 7, 1, "", "dialect"], [164, 7, 1, "", "line_num"]], "csv.csvwriter": [[164, 7, 1, "", "dialect"], [164, 8, 1, "", "writerow"], [164, 8, 1, "", "writerows"]], "ctypes": [[165, 6, 1, "", "ArgumentError"], [165, 11, 1, "", "Array"], [165, 11, 1, "", "BigEndianStructure"], [165, 11, 1, "", "BigEndianUnion"], [165, 11, 1, "", "CDLL"], [165, 12, 1, "", "CFUNCTYPE"], [165, 12, 1, "", "DllCanUnloadNow"], [165, 12, 1, "", "DllGetClassObject"], [165, 12, 1, "", "FormatError"], [165, 12, 1, "", "GetLastError"], [165, 11, 1, "", "HRESULT"], [165, 11, 1, "", "LibraryLoader"], [165, 11, 1, "", "LittleEndianStructure"], [165, 11, 1, "", "LittleEndianUnion"], [165, 11, 1, "", "OleDLL"], [165, 12, 1, "", "POINTER"], [165, 12, 1, "", "PYFUNCTYPE"], [165, 11, 1, "", "PyDLL"], [165, 11, 1, "", "Structure"], [165, 11, 1, "", "Union"], [165, 12, 1, "", "WINFUNCTYPE"], [165, 11, 1, "", "WinDLL"], [165, 12, 1, "", "WinError"], [165, 11, 1, "", "_CData"], [165, 11, 1, "", "_FuncPtr"], [165, 11, 1, "", "_Pointer"], [165, 11, 1, "", "_SimpleCData"], [165, 12, 1, "", "addressof"], [165, 12, 1, "", "alignment"], [165, 12, 1, "", "byref"], [165, 11, 1, "", "c_bool"], [165, 11, 1, "", "c_byte"], [165, 11, 1, "", "c_char"], [165, 11, 1, "", "c_char_p"], [165, 11, 1, "", "c_double"], [165, 11, 1, "", "c_float"], [165, 11, 1, "", "c_int"], [165, 11, 1, "", "c_int16"], [165, 11, 1, "", "c_int32"], [165, 11, 1, "", "c_int64"], [165, 11, 1, "", "c_int8"], [165, 11, 1, "", "c_long"], [165, 11, 1, "", "c_longdouble"], [165, 11, 1, "", "c_longlong"], [165, 11, 1, "", "c_short"], [165, 11, 1, "", "c_size_t"], [165, 11, 1, "", "c_ssize_t"], [165, 11, 1, "", "c_time_t"], [165, 11, 1, "", "c_ubyte"], [165, 11, 1, "", "c_uint"], [165, 11, 1, "", "c_uint16"], [165, 11, 1, "", "c_uint32"], [165, 11, 1, "", "c_uint64"], [165, 11, 1, "", "c_uint8"], [165, 11, 1, "", "c_ulong"], [165, 11, 1, "", "c_ulonglong"], [165, 11, 1, "", "c_ushort"], [165, 11, 1, "", "c_void_p"], [165, 11, 1, "", "c_wchar"], [165, 11, 1, "", "c_wchar_p"], [165, 12, 1, "", "cast"], [165, 12, 1, "", "create_string_buffer"], [165, 12, 1, "", "create_unicode_buffer"], [165, 12, 1, "", "get_errno"], [165, 12, 1, "", "get_last_error"], [165, 12, 1, "", "memmove"], [165, 12, 1, "", "memset"], [165, 12, 1, "", "pointer"], [165, 11, 1, "", "py_object"], [165, 12, 1, "", "resize"], [165, 12, 1, "", "set_errno"], [165, 12, 1, "", "set_last_error"], [165, 12, 1, "", "sizeof"], [165, 12, 1, "", "string_at"], [165, 12, 1, "", "wstring_at"]], "ctypes.Array": [[165, 7, 1, "", "_length_"], [165, 7, 1, "", "_type_"]], "ctypes.LibraryLoader": [[165, 8, 1, "", "LoadLibrary"]], "ctypes.PyDLL": [[165, 7, 1, "", "_handle"], [165, 7, 1, "", "_name"]], "ctypes.Structure": [[165, 7, 1, "", "_anonymous_"], [165, 7, 1, "", "_fields_"], [165, 7, 1, "", "_pack_"]], "ctypes._CData": [[165, 7, 1, "", "_b_base_"], [165, 7, 1, "", "_b_needsfree_"], [165, 7, 1, "", "_objects"], [165, 8, 1, "", "from_address"], [165, 8, 1, "", "from_buffer"], [165, 8, 1, "", "from_buffer_copy"], [165, 8, 1, "", "from_param"], [165, 8, 1, "", "in_dll"]], "ctypes._FuncPtr": [[165, 7, 1, "", "argtypes"], [165, 7, 1, "", "errcheck"], [165, 7, 1, "", "restype"]], "ctypes._Pointer": [[165, 7, 1, "", "_type_"], [165, 7, 1, "", "contents"]], "ctypes._SimpleCData": [[165, 7, 1, "", "value"]], "ctypes.util": [[165, 12, 1, "", "find_library"], [165, 12, 1, "", "find_msvcrt"]], "curses": [[166, 9, 1, "", "ACS_BBSS"], [166, 9, 1, "", "ACS_BLOCK"], [166, 9, 1, "", "ACS_BOARD"], [166, 9, 1, "", "ACS_BSBS"], [166, 9, 1, "", "ACS_BSSB"], [166, 9, 1, "", "ACS_BSSS"], [166, 9, 1, "", "ACS_BTEE"], [166, 9, 1, "", "ACS_BULLET"], [166, 9, 1, "", "ACS_CKBOARD"], [166, 9, 1, "", "ACS_DARROW"], [166, 9, 1, "", "ACS_DEGREE"], [166, 9, 1, "", "ACS_DIAMOND"], [166, 9, 1, "", "ACS_GEQUAL"], [166, 9, 1, "", "ACS_HLINE"], [166, 9, 1, "", "ACS_LANTERN"], [166, 9, 1, "", "ACS_LARROW"], [166, 9, 1, "", "ACS_LEQUAL"], [166, 9, 1, "", "ACS_LLCORNER"], [166, 9, 1, "", "ACS_LRCORNER"], [166, 9, 1, "", "ACS_LTEE"], [166, 9, 1, "", "ACS_NEQUAL"], [166, 9, 1, "", "ACS_PI"], [166, 9, 1, "", "ACS_PLMINUS"], [166, 9, 1, "", "ACS_PLUS"], [166, 9, 1, "", "ACS_RARROW"], [166, 9, 1, "", "ACS_RTEE"], [166, 9, 1, "", "ACS_S1"], [166, 9, 1, "", "ACS_S3"], [166, 9, 1, "", "ACS_S7"], [166, 9, 1, "", "ACS_S9"], [166, 9, 1, "", "ACS_SBBS"], [166, 9, 1, "", "ACS_SBSB"], [166, 9, 1, "", "ACS_SBSS"], [166, 9, 1, "", "ACS_SSBB"], [166, 9, 1, "", "ACS_SSBS"], [166, 9, 1, "", "ACS_SSSB"], [166, 9, 1, "", "ACS_SSSS"], [166, 9, 1, "", "ACS_STERLING"], [166, 9, 1, "", "ACS_TTEE"], [166, 9, 1, "", "ACS_UARROW"], [166, 9, 1, "", "ACS_ULCORNER"], [166, 9, 1, "", "ACS_URCORNER"], [166, 9, 1, "", "ACS_VLINE"], [166, 9, 1, "", "A_ALTCHARSET"], [166, 9, 1, "", "A_ATTRIBUTES"], [166, 9, 1, "", "A_BLINK"], [166, 9, 1, "", "A_BOLD"], [166, 9, 1, "", "A_CHARTEXT"], [166, 9, 1, "", "A_COLOR"], [166, 9, 1, "", "A_DIM"], [166, 9, 1, "", "A_HORIZONTAL"], [166, 9, 1, "", "A_INVIS"], [166, 9, 1, "", "A_ITALIC"], [166, 9, 1, "", "A_LEFT"], [166, 9, 1, "", "A_LOW"], [166, 9, 1, "", "A_NORMAL"], [166, 9, 1, "", "A_PROTECT"], [166, 9, 1, "", "A_REVERSE"], [166, 9, 1, "", "A_RIGHT"], [166, 9, 1, "", "A_STANDOUT"], [166, 9, 1, "", "A_TOP"], [166, 9, 1, "", "A_UNDERLINE"], [166, 9, 1, "", "A_VERTICAL"], [166, 9, 1, "", "BUTTON_ALT"], [166, 9, 1, "", "BUTTON_CTRL"], [166, 9, 1, "", "BUTTON_SHIFT"], [166, 9, 1, "", "BUTTONn_CLICKED"], [166, 9, 1, "", "BUTTONn_DOUBLE_CLICKED"], [166, 9, 1, "", "BUTTONn_PRESSED"], [166, 9, 1, "", "BUTTONn_RELEASED"], [166, 9, 1, "", "BUTTONn_TRIPLE_CLICKED"], [166, 9, 1, "", "COLORS"], [166, 9, 1, "", "COLOR_BLACK"], [166, 9, 1, "", "COLOR_BLUE"], [166, 9, 1, "", "COLOR_CYAN"], [166, 9, 1, "", "COLOR_GREEN"], [166, 9, 1, "", "COLOR_MAGENTA"], [166, 9, 1, "", "COLOR_PAIRS"], [166, 9, 1, "", "COLOR_RED"], [166, 9, 1, "", "COLOR_WHITE"], [166, 9, 1, "", "COLOR_YELLOW"], [166, 9, 1, "", "COLS"], [166, 9, 1, "", "ERR"], [166, 9, 1, "", "KEY_A1"], [166, 9, 1, "", "KEY_A3"], [166, 9, 1, "", "KEY_B2"], [166, 9, 1, "", "KEY_BACKSPACE"], [166, 9, 1, "", "KEY_BEG"], [166, 9, 1, "", "KEY_BREAK"], [166, 9, 1, "", "KEY_BTAB"], [166, 9, 1, "", "KEY_C1"], [166, 9, 1, "", "KEY_C3"], [166, 9, 1, "", "KEY_CANCEL"], [166, 9, 1, "", "KEY_CATAB"], [166, 9, 1, "", "KEY_CLEAR"], [166, 9, 1, "", "KEY_CLOSE"], [166, 9, 1, "", "KEY_COMMAND"], [166, 9, 1, "", "KEY_COPY"], [166, 9, 1, "", "KEY_CREATE"], [166, 9, 1, "", "KEY_CTAB"], [166, 9, 1, "", "KEY_DC"], [166, 9, 1, "", "KEY_DL"], [166, 9, 1, "", "KEY_DOWN"], [166, 9, 1, "", "KEY_EIC"], [166, 9, 1, "", "KEY_END"], [166, 9, 1, "", "KEY_ENTER"], [166, 9, 1, "", "KEY_EOL"], [166, 9, 1, "", "KEY_EOS"], [166, 9, 1, "", "KEY_EXIT"], [166, 9, 1, "", "KEY_F0"], [166, 9, 1, "", "KEY_FIND"], [166, 9, 1, "", "KEY_Fn"], [166, 9, 1, "", "KEY_HELP"], [166, 9, 1, "", "KEY_HOME"], [166, 9, 1, "", "KEY_IC"], [166, 9, 1, "", "KEY_IL"], [166, 9, 1, "", "KEY_LEFT"], [166, 9, 1, "", "KEY_LL"], [166, 9, 1, "", "KEY_MARK"], [166, 9, 1, "", "KEY_MAX"], [166, 9, 1, "", "KEY_MESSAGE"], [166, 9, 1, "", "KEY_MIN"], [166, 9, 1, "", "KEY_MOUSE"], [166, 9, 1, "", "KEY_MOVE"], [166, 9, 1, "", "KEY_NEXT"], [166, 9, 1, "", "KEY_NPAGE"], [166, 9, 1, "", "KEY_OPEN"], [166, 9, 1, "", "KEY_OPTIONS"], [166, 9, 1, "", "KEY_PPAGE"], [166, 9, 1, "", "KEY_PREVIOUS"], [166, 9, 1, "", "KEY_PRINT"], [166, 9, 1, "", "KEY_REDO"], [166, 9, 1, "", "KEY_REFERENCE"], [166, 9, 1, "", "KEY_REFRESH"], [166, 9, 1, "", "KEY_REPLACE"], [166, 9, 1, "", "KEY_RESET"], [166, 9, 1, "", "KEY_RESIZE"], [166, 9, 1, "", "KEY_RESTART"], [166, 9, 1, "", "KEY_RESUME"], [166, 9, 1, "", "KEY_RIGHT"], [166, 9, 1, "", "KEY_SAVE"], [166, 9, 1, "", "KEY_SBEG"], [166, 9, 1, "", "KEY_SCANCEL"], [166, 9, 1, "", "KEY_SCOMMAND"], [166, 9, 1, "", "KEY_SCOPY"], [166, 9, 1, "", "KEY_SCREATE"], [166, 9, 1, "", "KEY_SDC"], [166, 9, 1, "", "KEY_SDL"], [166, 9, 1, "", "KEY_SELECT"], [166, 9, 1, "", "KEY_SEND"], [166, 9, 1, "", "KEY_SEOL"], [166, 9, 1, "", "KEY_SEXIT"], [166, 9, 1, "", "KEY_SF"], [166, 9, 1, "", "KEY_SFIND"], [166, 9, 1, "", "KEY_SHELP"], [166, 9, 1, "", "KEY_SHOME"], [166, 9, 1, "", "KEY_SIC"], [166, 9, 1, "", "KEY_SLEFT"], [166, 9, 1, "", "KEY_SMESSAGE"], [166, 9, 1, "", "KEY_SMOVE"], [166, 9, 1, "", "KEY_SNEXT"], [166, 9, 1, "", "KEY_SOPTIONS"], [166, 9, 1, "", "KEY_SPREVIOUS"], [166, 9, 1, "", "KEY_SPRINT"], [166, 9, 1, "", "KEY_SR"], [166, 9, 1, "", "KEY_SREDO"], [166, 9, 1, "", "KEY_SREPLACE"], [166, 9, 1, "", "KEY_SRESET"], [166, 9, 1, "", "KEY_SRIGHT"], [166, 9, 1, "", "KEY_SRSUME"], [166, 9, 1, "", "KEY_SSAVE"], [166, 9, 1, "", "KEY_SSUSPEND"], [166, 9, 1, "", "KEY_STAB"], [166, 9, 1, "", "KEY_SUNDO"], [166, 9, 1, "", "KEY_SUSPEND"], [166, 9, 1, "", "KEY_UNDO"], [166, 9, 1, "", "KEY_UP"], [166, 9, 1, "", "LINES"], [166, 9, 1, "", "OK"], [166, 9, 1, "", "__version__"], [167, 10, 0, "-", "ascii"], [166, 12, 1, "", "baudrate"], [166, 12, 1, "", "beep"], [166, 12, 1, "", "can_change_color"], [166, 12, 1, "", "cbreak"], [166, 12, 1, "", "color_content"], [166, 12, 1, "", "color_pair"], [166, 12, 1, "", "curs_set"], [166, 12, 1, "", "def_prog_mode"], [166, 12, 1, "", "def_shell_mode"], [166, 12, 1, "", "delay_output"], [166, 12, 1, "", "doupdate"], [166, 12, 1, "", "echo"], [166, 12, 1, "", "endwin"], [166, 12, 1, "", "erasechar"], [166, 6, 1, "", "error"], [166, 12, 1, "", "filter"], [166, 12, 1, "", "flash"], [166, 12, 1, "", "flushinp"], [166, 12, 1, "", "get_escdelay"], [166, 12, 1, "", "get_tabsize"], [166, 12, 1, "", "getmouse"], [166, 12, 1, "", "getsyx"], [166, 12, 1, "", "getwin"], [166, 12, 1, "", "halfdelay"], [166, 12, 1, "", "has_colors"], [166, 12, 1, "", "has_extended_color_support"], [166, 12, 1, "", "has_ic"], [166, 12, 1, "", "has_il"], [166, 12, 1, "", "has_key"], [166, 12, 1, "", "init_color"], [166, 12, 1, "", "init_pair"], [166, 12, 1, "", "initscr"], [166, 12, 1, "", "is_term_resized"], [166, 12, 1, "", "isendwin"], [166, 12, 1, "", "keyname"], [166, 12, 1, "", "killchar"], [166, 12, 1, "", "longname"], [166, 12, 1, "", "meta"], [166, 12, 1, "", "mouseinterval"], [166, 12, 1, "", "mousemask"], [166, 12, 1, "", "napms"], [166, 9, 1, "", "ncurses_version"], [166, 12, 1, "", "newpad"], [166, 12, 1, "", "newwin"], [166, 12, 1, "", "nl"], [166, 12, 1, "", "nocbreak"], [166, 12, 1, "", "noecho"], [166, 12, 1, "", "nonl"], [166, 12, 1, "", "noqiflush"], [166, 12, 1, "", "noraw"], [166, 12, 1, "", "pair_content"], [166, 12, 1, "", "pair_number"], [168, 10, 0, "-", "panel"], [166, 12, 1, "", "putp"], [166, 12, 1, "", "qiflush"], [166, 12, 1, "", "raw"], [166, 12, 1, "", "reset_prog_mode"], [166, 12, 1, "", "reset_shell_mode"], [166, 12, 1, "", "resetty"], [166, 12, 1, "", "resize_term"], [166, 12, 1, "", "resizeterm"], [166, 12, 1, "", "savetty"], [166, 12, 1, "", "set_escdelay"], [166, 12, 1, "", "set_tabsize"], [166, 12, 1, "", "setsyx"], [166, 12, 1, "", "setupterm"], [166, 12, 1, "", "start_color"], [166, 12, 1, "", "termattrs"], [166, 12, 1, "", "termname"], [166, 10, 0, "-", "textpad"], [166, 12, 1, "", "tigetflag"], [166, 12, 1, "", "tigetnum"], [166, 12, 1, "", "tigetstr"], [166, 12, 1, "", "tparm"], [166, 12, 1, "", "typeahead"], [166, 12, 1, "", "unctrl"], [166, 12, 1, "", "unget_wch"], [166, 12, 1, "", "ungetch"], [166, 12, 1, "", "ungetmouse"], [166, 12, 1, "", "update_lines_cols"], [166, 12, 1, "", "use_default_colors"], [166, 12, 1, "", "use_env"], [166, 9, 1, "", "version"], [166, 12, 1, "", "wrapper"]], "curses.ascii": [[167, 9, 1, "", "ACK"], [167, 9, 1, "", "BEL"], [167, 9, 1, "", "BS"], [167, 9, 1, "", "CAN"], [167, 9, 1, "", "CR"], [167, 9, 1, "", "DC1"], [167, 9, 1, "", "DC2"], [167, 9, 1, "", "DC3"], [167, 9, 1, "", "DC4"], [167, 9, 1, "", "DEL"], [167, 9, 1, "", "DLE"], [167, 9, 1, "", "EM"], [167, 9, 1, "", "ENQ"], [167, 9, 1, "", "EOT"], [167, 9, 1, "", "ESC"], [167, 9, 1, "", "ETB"], [167, 9, 1, "", "ETX"], [167, 9, 1, "", "FF"], [167, 9, 1, "", "FS"], [167, 9, 1, "", "GS"], [167, 9, 1, "", "HT"], [167, 9, 1, "", "LF"], [167, 9, 1, "", "NAK"], [167, 9, 1, "", "NL"], [167, 9, 1, "", "NUL"], [167, 9, 1, "", "RS"], [167, 9, 1, "", "SI"], [167, 9, 1, "", "SO"], [167, 9, 1, "", "SOH"], [167, 9, 1, "", "SP"], [167, 9, 1, "", "STX"], [167, 9, 1, "", "SUB"], [167, 9, 1, "", "SYN"], [167, 9, 1, "", "TAB"], [167, 9, 1, "", "US"], [167, 9, 1, "", "VT"], [167, 12, 1, "", "alt"], [167, 12, 1, "", "ascii"], [167, 9, 1, "", "controlnames"], [167, 12, 1, "", "ctrl"], [167, 12, 1, "", "isalnum"], [167, 12, 1, "", "isalpha"], [167, 12, 1, "", "isascii"], [167, 12, 1, "", "isblank"], [167, 12, 1, "", "iscntrl"], [167, 12, 1, "", "isctrl"], [167, 12, 1, "", "isdigit"], [167, 12, 1, "", "isgraph"], [167, 12, 1, "", "islower"], [167, 12, 1, "", "ismeta"], [167, 12, 1, "", "isprint"], [167, 12, 1, "", "ispunct"], [167, 12, 1, "", "isspace"], [167, 12, 1, "", "isupper"], [167, 12, 1, "", "isxdigit"], [167, 12, 1, "", "unctrl"]], "curses.panel.Panel": [[168, 8, 1, "", "above"], [168, 8, 1, "", "below"], [168, 8, 1, "", "bottom"], [168, 8, 1, "", "hidden"], [168, 8, 1, "", "hide"], [168, 8, 1, "", "move"], [168, 8, 1, "", "replace"], [168, 8, 1, "", "set_userptr"], [168, 8, 1, "", "show"], [168, 8, 1, "", "top"], [168, 8, 1, "", "userptr"], [168, 8, 1, "", "window"]], "curses.panel": [[168, 12, 1, "", "bottom_panel"], [168, 12, 1, "", "new_panel"], [168, 12, 1, "", "top_panel"], [168, 12, 1, "", "update_panels"]], "curses.textpad": [[166, 11, 1, "", "Textbox"], [166, 12, 1, "", "rectangle"]], "curses.textpad.Textbox": [[166, 8, 1, "", "do_command"], [166, 8, 1, "", "edit"], [166, 8, 1, "", "gather"], [166, 7, 1, "", "stripspaces"]], "curses.window": [[166, 8, 1, "", "addch"], [166, 8, 1, "", "addnstr"], [166, 8, 1, "", "addstr"], [166, 8, 1, "", "attroff"], [166, 8, 1, "", "attron"], [166, 8, 1, "", "attrset"], [166, 8, 1, "", "bkgd"], [166, 8, 1, "", "bkgdset"], [166, 8, 1, "", "border"], [166, 8, 1, "", "box"], [166, 8, 1, "", "chgat"], [166, 8, 1, "", "clear"], [166, 8, 1, "", "clearok"], [166, 8, 1, "", "clrtobot"], [166, 8, 1, "", "clrtoeol"], [166, 8, 1, "", "cursyncup"], [166, 8, 1, "", "delch"], [166, 8, 1, "", "deleteln"], [166, 8, 1, "", "derwin"], [166, 8, 1, "", "echochar"], [166, 8, 1, "", "enclose"], [166, 7, 1, "", "encoding"], [166, 8, 1, "", "erase"], [166, 8, 1, "", "get_wch"], [166, 8, 1, "", "getbegyx"], [166, 8, 1, "", "getbkgd"], [166, 8, 1, "", "getch"], [166, 8, 1, "", "getkey"], [166, 8, 1, "", "getmaxyx"], [166, 8, 1, "", "getparyx"], [166, 8, 1, "", "getstr"], [166, 8, 1, "", "getyx"], [166, 8, 1, "", "hline"], [166, 8, 1, "", "idcok"], [166, 8, 1, "", "idlok"], [166, 8, 1, "", "immedok"], [166, 8, 1, "", "inch"], [166, 8, 1, "", "insch"], [166, 8, 1, "", "insdelln"], [166, 8, 1, "", "insertln"], [166, 8, 1, "", "insnstr"], [166, 8, 1, "", "insstr"], [166, 8, 1, "", "instr"], [166, 8, 1, "", "is_linetouched"], [166, 8, 1, "", "is_wintouched"], [166, 8, 1, "", "keypad"], [166, 8, 1, "", "leaveok"], [166, 8, 1, "", "move"], [166, 8, 1, "", "mvderwin"], [166, 8, 1, "", "mvwin"], [166, 8, 1, "", "nodelay"], [166, 8, 1, "", "notimeout"], [166, 8, 1, "", "noutrefresh"], [166, 8, 1, "", "overlay"], [166, 8, 1, "", "overwrite"], [166, 8, 1, "", "putwin"], [166, 8, 1, "", "redrawln"], [166, 8, 1, "", "redrawwin"], [166, 8, 1, "", "refresh"], [166, 8, 1, "", "resize"], [166, 8, 1, "", "scroll"], [166, 8, 1, "", "scrollok"], [166, 8, 1, "", "setscrreg"], [166, 8, 1, "", "standend"], [166, 8, 1, "", "standout"], [166, 8, 1, "", "subpad"], [166, 8, 1, "", "subwin"], [166, 8, 1, "", "syncdown"], [166, 8, 1, "", "syncok"], [166, 8, 1, "", "syncup"], [166, 8, 1, "", "timeout"], [166, 8, 1, "", "touchline"], [166, 8, 1, "", "touchwin"], [166, 8, 1, "", "untouchwin"], [166, 8, 1, "", "vline"]], "dataclasses": [[170, 11, 1, "", "Field"], [170, 6, 1, "", "FrozenInstanceError"], [170, 9, 1, "", "KW_ONLY"], [170, 9, 1, "", "MISSING"], [170, 12, 1, "", "__post_init__"], [170, 12, 1, "", "asdict"], [170, 12, 1, "", "astuple"], [170, 12, 1, "", "dataclass"], [170, 12, 1, "", "field"], [170, 12, 1, "", "fields"], [170, 12, 1, "", "is_dataclass"], [170, 12, 1, "", "make_dataclass"], [170, 12, 1, "", "replace"]], "datetime": [[172, 9, 1, "", "MAXYEAR"], [172, 9, 1, "", "MINYEAR"], [172, 7, 1, "", "UTC"], [172, 11, 1, "", "date"], [172, 11, 1, "", "datetime"], [172, 11, 1, "", "time"], [172, 11, 1, "", "timedelta"], [172, 11, 1, "", "timezone"], [172, 11, 1, "", "tzinfo"]], "datetime.date": [[172, 8, 1, "", "__format__"], [172, 8, 1, "", "__str__"], [172, 8, 1, "", "ctime"], [172, 7, 1, "", "day"], [172, 8, 1, "", "fromisocalendar"], [172, 8, 1, "", "fromisoformat"], [172, 8, 1, "", "fromordinal"], [172, 8, 1, "", "fromtimestamp"], [172, 8, 1, "", "isocalendar"], [172, 8, 1, "", "isoformat"], [172, 8, 1, "", "isoweekday"], [172, 7, 1, "", "max"], [172, 7, 1, "", "min"], [172, 7, 1, "", "month"], [172, 8, 1, "", "replace"], [172, 7, 1, "", "resolution"], [172, 8, 1, "", "strftime"], [172, 8, 1, "", "timetuple"], [172, 8, 1, "", "today"], [172, 8, 1, "", "toordinal"], [172, 8, 1, "", "weekday"], [172, 7, 1, "", "year"]], "datetime.datetime": [[172, 8, 1, "", "__format__"], [172, 8, 1, "", "__str__"], [172, 8, 1, "", "astimezone"], [172, 8, 1, "", "combine"], [172, 8, 1, "", "ctime"], [172, 8, 1, "", "date"], [172, 7, 1, "", "day"], [172, 8, 1, "", "dst"], [172, 7, 1, "", "fold"], [172, 8, 1, "", "fromisocalendar"], [172, 8, 1, "", "fromisoformat"], [172, 8, 1, "", "fromordinal"], [172, 8, 1, "", "fromtimestamp"], [172, 7, 1, "", "hour"], [172, 8, 1, "", "isocalendar"], [172, 8, 1, "", "isoformat"], [172, 8, 1, "", "isoweekday"], [172, 7, 1, "", "max"], [172, 7, 1, "", "microsecond"], [172, 7, 1, "", "min"], [172, 7, 1, "", "minute"], [172, 7, 1, "", "month"], [172, 8, 1, "", "now"], [172, 8, 1, "", "replace"], [172, 7, 1, "", "resolution"], [172, 7, 1, "", "second"], [172, 8, 1, "", "strftime"], [172, 8, 1, "", "strptime"], [172, 8, 1, "", "time"], [172, 8, 1, "", "timestamp"], [172, 8, 1, "", "timetuple"], [172, 8, 1, "", "timetz"], [172, 8, 1, "", "today"], [172, 8, 1, "", "toordinal"], [172, 7, 1, "", "tzinfo"], [172, 8, 1, "", "tzname"], [172, 8, 1, "", "utcfromtimestamp"], [172, 8, 1, "", "utcnow"], [172, 8, 1, "", "utcoffset"], [172, 8, 1, "", "utctimetuple"], [172, 8, 1, "", "weekday"], [172, 7, 1, "", "year"]], "datetime.time": [[172, 8, 1, "", "__format__"], [172, 8, 1, "", "__str__"], [172, 8, 1, "", "dst"], [172, 7, 1, "", "fold"], [172, 8, 1, "", "fromisoformat"], [172, 7, 1, "", "hour"], [172, 8, 1, "", "isoformat"], [172, 7, 1, "", "max"], [172, 7, 1, "", "microsecond"], [172, 7, 1, "", "min"], [172, 7, 1, "", "minute"], [172, 8, 1, "", "replace"], [172, 7, 1, "", "resolution"], [172, 7, 1, "", "second"], [172, 8, 1, "", "strftime"], [172, 7, 1, "", "tzinfo"], [172, 8, 1, "", "tzname"], [172, 8, 1, "", "utcoffset"]], "datetime.timedelta": [[172, 7, 1, "", "max"], [172, 7, 1, "", "min"], [172, 7, 1, "", "resolution"], [172, 8, 1, "", "total_seconds"]], "datetime.timezone": [[172, 8, 1, "", "dst"], [172, 8, 1, "", "fromutc"], [172, 8, 1, "", "tzname"], [172, 7, 1, "", "utc"], [172, 8, 1, "", "utcoffset"]], "datetime.tzinfo": [[172, 8, 1, "", "dst"], [172, 8, 1, "", "fromutc"], [172, 8, 1, "", "tzname"], [172, 8, 1, "", "utcoffset"]], "dbm": [[173, 10, 0, "-", "dumb"], [173, 6, 1, "", "error"], [173, 10, 0, "-", "gnu"], [173, 10, 0, "-", "ndbm"], [173, 12, 1, "", "open"], [173, 12, 1, "", "whichdb"]], "dbm.dumb.dumbdbm": [[173, 8, 1, "", "close"], [173, 8, 1, "", "sync"]], "dbm.dumb": [[173, 6, 1, "", "error"], [173, 12, 1, "", "open"]], "dbm.gnu": [[173, 6, 1, "", "error"], [173, 12, 1, "", "open"]], "dbm.gnu.gdbm": [[173, 8, 1, "", "clear"], [173, 8, 1, "", "close"], [173, 8, 1, "", "firstkey"], [173, 8, 1, "", "nextkey"], [173, 8, 1, "", "reorganize"], [173, 8, 1, "", "sync"]], "dbm.ndbm": [[173, 6, 1, "", "error"], [173, 9, 1, "", "library"], [173, 12, 1, "", "open"]], "dbm.ndbm.ndbm": [[173, 8, 1, "", "clear"], [173, 8, 1, "", "close"]], "decimal": [[175, 11, 1, "", "BasicContext"], [175, 11, 1, "", "Clamped"], [175, 11, 1, "", "Context"], [175, 11, 1, "", "Decimal"], [175, 11, 1, "", "DecimalException"], [175, 11, 1, "", "DefaultContext"], [175, 11, 1, "", "DivisionByZero"], [175, 11, 1, "", "ExtendedContext"], [175, 11, 1, "", "FloatOperation"], [175, 9, 1, "", "HAVE_CONTEXTVAR"], [175, 9, 1, "", "HAVE_THREADS"], [175, 11, 1, "", "Inexact"], [175, 11, 1, "", "InvalidOperation"], [175, 9, 1, "", "MAX_EMAX"], [175, 9, 1, "", "MAX_PREC"], [175, 9, 1, "", "MIN_EMIN"], [175, 9, 1, "", "MIN_ETINY"], [175, 11, 1, "", "Overflow"], [175, 9, 1, "", "ROUND_05UP"], [175, 9, 1, "", "ROUND_CEILING"], [175, 9, 1, "", "ROUND_DOWN"], [175, 9, 1, "", "ROUND_FLOOR"], [175, 9, 1, "", "ROUND_HALF_DOWN"], [175, 9, 1, "", "ROUND_HALF_EVEN"], [175, 9, 1, "", "ROUND_HALF_UP"], [175, 9, 1, "", "ROUND_UP"], [175, 11, 1, "", "Rounded"], [175, 11, 1, "", "Subnormal"], [175, 11, 1, "", "Underflow"], [175, 12, 1, "", "getcontext"], [175, 12, 1, "", "localcontext"], [175, 12, 1, "", "setcontext"]], "decimal.Context": [[175, 8, 1, "", "Etiny"], [175, 8, 1, "", "Etop"], [175, 8, 1, "", "abs"], [175, 8, 1, "", "add"], [175, 8, 1, "", "canonical"], [175, 8, 1, "", "clear_flags"], [175, 8, 1, "", "clear_traps"], [175, 8, 1, "", "compare"], [175, 8, 1, "", "compare_signal"], [175, 8, 1, "", "compare_total"], [175, 8, 1, "", "compare_total_mag"], [175, 8, 1, "", "copy"], [175, 8, 1, "", "copy_abs"], [175, 8, 1, "", "copy_decimal"], [175, 8, 1, "", "copy_negate"], [175, 8, 1, "", "copy_sign"], [175, 8, 1, "", "create_decimal"], [175, 8, 1, "", "create_decimal_from_float"], [175, 8, 1, "", "divide"], [175, 8, 1, "", "divide_int"], [175, 8, 1, "", "divmod"], [175, 8, 1, "", "exp"], [175, 8, 1, "", "fma"], [175, 8, 1, "", "is_canonical"], [175, 8, 1, "", "is_finite"], [175, 8, 1, "", "is_infinite"], [175, 8, 1, "", "is_nan"], [175, 8, 1, "", "is_normal"], [175, 8, 1, "", "is_qnan"], [175, 8, 1, "", "is_signed"], [175, 8, 1, "", "is_snan"], [175, 8, 1, "", "is_subnormal"], [175, 8, 1, "", "is_zero"], [175, 8, 1, "", "ln"], [175, 8, 1, "", "log10"], [175, 8, 1, "", "logb"], [175, 8, 1, "", "logical_and"], [175, 8, 1, "", "logical_invert"], [175, 8, 1, "", "logical_or"], [175, 8, 1, "", "logical_xor"], [175, 8, 1, "", "max"], [175, 8, 1, "", "max_mag"], [175, 8, 1, "", "min"], [175, 8, 1, "", "min_mag"], [175, 8, 1, "", "minus"], [175, 8, 1, "", "multiply"], [175, 8, 1, "", "next_minus"], [175, 8, 1, "", "next_plus"], [175, 8, 1, "", "next_toward"], [175, 8, 1, "", "normalize"], [175, 8, 1, "", "number_class"], [175, 8, 1, "", "plus"], [175, 8, 1, "", "power"], [175, 8, 1, "", "quantize"], [175, 8, 1, "", "radix"], [175, 8, 1, "", "remainder"], [175, 8, 1, "", "remainder_near"], [175, 8, 1, "", "rotate"], [175, 8, 1, "", "same_quantum"], [175, 8, 1, "", "scaleb"], [175, 8, 1, "", "shift"], [175, 8, 1, "", "sqrt"], [175, 8, 1, "", "subtract"], [175, 8, 1, "", "to_eng_string"], [175, 8, 1, "", "to_integral_exact"], [175, 8, 1, "", "to_sci_string"]], "decimal.Decimal": [[175, 8, 1, "", "adjusted"], [175, 8, 1, "", "as_integer_ratio"], [175, 8, 1, "", "as_tuple"], [175, 8, 1, "", "canonical"], [175, 8, 1, "", "compare"], [175, 8, 1, "", "compare_signal"], [175, 8, 1, "", "compare_total"], [175, 8, 1, "", "compare_total_mag"], [175, 8, 1, "", "conjugate"], [175, 8, 1, "", "copy_abs"], [175, 8, 1, "", "copy_negate"], [175, 8, 1, "", "copy_sign"], [175, 8, 1, "", "exp"], [175, 8, 1, "", "fma"], [175, 8, 1, "", "from_float"], [175, 8, 1, "", "is_canonical"], [175, 8, 1, "", "is_finite"], [175, 8, 1, "", "is_infinite"], [175, 8, 1, "", "is_nan"], [175, 8, 1, "", "is_normal"], [175, 8, 1, "", "is_qnan"], [175, 8, 1, "", "is_signed"], [175, 8, 1, "", "is_snan"], [175, 8, 1, "", "is_subnormal"], [175, 8, 1, "", "is_zero"], [175, 8, 1, "", "ln"], [175, 8, 1, "", "log10"], [175, 8, 1, "", "logb"], [175, 8, 1, "", "logical_and"], [175, 8, 1, "", "logical_invert"], [175, 8, 1, "", "logical_or"], [175, 8, 1, "", "logical_xor"], [175, 8, 1, "", "max"], [175, 8, 1, "", "max_mag"], [175, 8, 1, "", "min"], [175, 8, 1, "", "min_mag"], [175, 8, 1, "", "next_minus"], [175, 8, 1, "", "next_plus"], [175, 8, 1, "", "next_toward"], [175, 8, 1, "", "normalize"], [175, 8, 1, "", "number_class"], [175, 8, 1, "", "quantize"], [175, 8, 1, "", "radix"], [175, 8, 1, "", "remainder_near"], [175, 8, 1, "", "rotate"], [175, 8, 1, "", "same_quantum"], [175, 8, 1, "", "scaleb"], [175, 8, 1, "", "shift"], [175, 8, 1, "", "sqrt"], [175, 8, 1, "", "to_eng_string"], [175, 8, 1, "", "to_integral"], [175, 8, 1, "", "to_integral_exact"], [175, 8, 1, "", "to_integral_value"]], "definition": [[324, 7, 1, "", "__name__"], [324, 7, 1, "", "__qualname__"], [324, 7, 1, "", "__type_params__"]], "dict": [[324, 8, 1, "", "clear"], [324, 8, 1, "", "copy"], [324, 8, 1, "", "fromkeys"], [324, 8, 1, "", "get"], [324, 8, 1, "", "items"], [324, 8, 1, "", "keys"], [324, 8, 1, "", "pop"], [324, 8, 1, "", "popitem"], [324, 8, 1, "", "setdefault"], [324, 8, 1, "", "update"], [324, 8, 1, "", "values"]], "difflib": [[179, 11, 1, "", "Differ"], [179, 11, 1, "", "HtmlDiff"], [179, 12, 1, "", "IS_CHARACTER_JUNK"], [179, 12, 1, "", "IS_LINE_JUNK"], [179, 11, 1, "", "SequenceMatcher"], [179, 12, 1, "", "context_diff"], [179, 12, 1, "", "diff_bytes"], [179, 12, 1, "", "get_close_matches"], [179, 12, 1, "", "ndiff"], [179, 12, 1, "", "restore"], [179, 12, 1, "", "unified_diff"]], "difflib.Differ": [[179, 8, 1, "", "compare"]], "difflib.HtmlDiff": [[179, 8, 1, "", "__init__"], [179, 8, 1, "", "make_file"], [179, 8, 1, "", "make_table"]], "difflib.SequenceMatcher": [[179, 8, 1, "", "find_longest_match"], [179, 8, 1, "", "get_grouped_opcodes"], [179, 8, 1, "", "get_matching_blocks"], [179, 8, 1, "", "get_opcodes"], [179, 8, 1, "", "quick_ratio"], [179, 8, 1, "", "ratio"], [179, 8, 1, "", "real_quick_ratio"], [179, 8, 1, "", "set_seq1"], [179, 8, 1, "", "set_seq2"], [179, 8, 1, "", "set_seqs"]], "dis": [[180, 11, 1, "", "Bytecode"], [180, 11, 1, "", "Instruction"], [180, 11, 1, "", "Positions"], [180, 9, 1, "", "cmp_op"], [180, 12, 1, "", "code_info"], [180, 12, 1, "", "dis"], [180, 12, 1, "", "disassemble"], [180, 12, 1, "", "disco"], [180, 12, 1, "", "distb"], [180, 12, 1, "", "findlabels"], [180, 12, 1, "", "findlinestarts"], [180, 12, 1, "", "get_instructions"], [180, 9, 1, "", "hasarg"], [180, 9, 1, "", "hascompare"], [180, 9, 1, "", "hasconst"], [180, 9, 1, "", "hasexc"], [180, 9, 1, "", "hasfree"], [180, 9, 1, "", "hasjabs"], [180, 9, 1, "", "hasjrel"], [180, 9, 1, "", "hasjump"], [180, 9, 1, "", "haslocal"], [180, 9, 1, "", "hasname"], [180, 9, 1, "", "opmap"], [180, 9, 1, "", "opname"], [180, 12, 1, "", "show_code"], [180, 12, 1, "", "stack_effect"]], "dis.Bytecode": [[180, 9, 1, "", "codeobj"], [180, 8, 1, "", "dis"], [180, 9, 1, "", "first_line"], [180, 8, 1, "", "from_traceback"], [180, 8, 1, "", "info"]], "dis.Instruction": [[180, 9, 1, "", "arg"], [180, 9, 1, "", "argrepr"], [180, 9, 1, "", "argval"], [180, 9, 1, "", "baseopcode"], [180, 9, 1, "", "baseopname"], [180, 9, 1, "", "cache_offset"], [180, 9, 1, "", "end_offset"], [180, 9, 1, "", "is_jump_target"], [180, 9, 1, "", "jump_target"], [180, 9, 1, "", "line_number"], [180, 9, 1, "", "offset"], [180, 9, 1, "", "oparg"], [180, 9, 1, "", "opcode"], [180, 9, 1, "", "opname"], [180, 9, 1, "", "positions"], [180, 9, 1, "", "start_offset"], [180, 9, 1, "", "starts_line"]], "dis.Positions": [[180, 9, 1, "", "col_offset"], [180, 9, 1, "", "end_col_offset"], [180, 9, 1, "", "end_lineno"], [180, 9, 1, "", "lineno"]], "doctest": [[182, 9, 1, "", "COMPARISON_FLAGS"], [182, 9, 1, "", "DONT_ACCEPT_BLANKLINE"], [182, 9, 1, "", "DONT_ACCEPT_TRUE_FOR_1"], [182, 11, 1, "", "DebugRunner"], [182, 12, 1, "", "DocFileSuite"], [182, 11, 1, "", "DocTest"], [182, 6, 1, "", "DocTestFailure"], [182, 11, 1, "", "DocTestFinder"], [182, 11, 1, "", "DocTestParser"], [182, 11, 1, "", "DocTestRunner"], [182, 12, 1, "", "DocTestSuite"], [182, 9, 1, "", "ELLIPSIS"], [182, 11, 1, "", "Example"], [182, 9, 1, "", "FAIL_FAST"], [182, 9, 1, "", "IGNORE_EXCEPTION_DETAIL"], [182, 9, 1, "", "NORMALIZE_WHITESPACE"], [182, 11, 1, "", "OutputChecker"], [182, 9, 1, "", "REPORTING_FLAGS"], [182, 9, 1, "", "REPORT_CDIFF"], [182, 9, 1, "", "REPORT_NDIFF"], [182, 9, 1, "", "REPORT_ONLY_FIRST_FAILURE"], [182, 9, 1, "", "REPORT_UDIFF"], [182, 9, 1, "", "SKIP"], [182, 11, 1, "", "TestResults"], [182, 6, 1, "", "UnexpectedException"], [182, 12, 1, "", "debug"], [182, 12, 1, "", "debug_src"], [182, 12, 1, "", "register_optionflag"], [182, 12, 1, "", "run_docstring_examples"], [182, 12, 1, "", "script_from_examples"], [182, 12, 1, "", "set_unittest_reportflags"], [182, 12, 1, "", "testfile"], [182, 12, 1, "", "testmod"], [182, 12, 1, "", "testsource"]], "doctest.DocTest": [[182, 7, 1, "", "docstring"], [182, 7, 1, "", "examples"], [182, 7, 1, "", "filename"], [182, 7, 1, "", "globs"], [182, 7, 1, "", "lineno"], [182, 7, 1, "", "name"]], "doctest.DocTestFailure": [[182, 7, 1, "", "example"], [182, 7, 1, "", "got"], [182, 7, 1, "", "test"]], "doctest.DocTestFinder": [[182, 8, 1, "", "find"]], "doctest.DocTestParser": [[182, 8, 1, "", "get_doctest"], [182, 8, 1, "", "get_examples"], [182, 8, 1, "", "parse"]], "doctest.DocTestRunner": [[182, 7, 1, "", "failures"], [182, 8, 1, "", "report_failure"], [182, 8, 1, "", "report_start"], [182, 8, 1, "", "report_success"], [182, 8, 1, "", "report_unexpected_exception"], [182, 8, 1, "", "run"], [182, 7, 1, "", "skips"], [182, 8, 1, "", "summarize"], [182, 7, 1, "", "tries"]], "doctest.Example": [[182, 7, 1, "", "exc_msg"], [182, 7, 1, "", "indent"], [182, 7, 1, "", "lineno"], [182, 7, 1, "", "options"], [182, 7, 1, "", "source"], [182, 7, 1, "", "want"]], "doctest.OutputChecker": [[182, 8, 1, "", "check_output"], [182, 8, 1, "", "output_difference"]], "doctest.TestResults": [[182, 7, 1, "", "attempted"], [182, 7, 1, "", "failed"], [182, 7, 1, "", "skipped"]], "doctest.UnexpectedException": [[182, 7, 1, "", "example"], [182, 7, 1, "", "exc_info"], [182, 7, 1, "", "test"]], "email": [[184, 10, 0, "-", "charset"], [186, 10, 0, "-", "contentmanager"], [187, 10, 0, "-", "encoders"], [188, 10, 0, "-", "errors"], [190, 10, 0, "-", "generator"], [191, 10, 0, "-", "header"], [192, 10, 0, "-", "headerregistry"], [193, 10, 0, "-", "iterators"], [194, 10, 0, "-", "message"], [196, 12, 1, "", "message_from_binary_file"], [196, 12, 1, "", "message_from_bytes"], [196, 12, 1, "", "message_from_file"], [196, 12, 1, "", "message_from_string"], [195, 10, 0, "-", "mime"], [196, 10, 0, "-", "parser"], [197, 10, 0, "-", "policy"], [198, 10, 0, "-", "utils"]], "email.charset": [[184, 11, 1, "", "Charset"], [184, 12, 1, "", "add_alias"], [184, 12, 1, "", "add_charset"], [184, 12, 1, "", "add_codec"]], "email.charset.Charset": [[184, 8, 1, "", "__eq__"], [184, 8, 1, "", "__ne__"], [184, 8, 1, "", "__str__"], [184, 8, 1, "", "body_encode"], [184, 7, 1, "", "body_encoding"], [184, 8, 1, "", "get_body_encoding"], [184, 8, 1, "", "get_output_charset"], [184, 8, 1, "", "header_encode"], [184, 8, 1, "", "header_encode_lines"], [184, 7, 1, "", "header_encoding"], [184, 7, 1, "", "input_charset"], [184, 7, 1, "", "input_codec"], [184, 7, 1, "", "output_charset"], [184, 7, 1, "", "output_codec"]], "email.contentmanager": [[186, 11, 1, "", "ContentManager"], [186, 8, 1, "", "get_content"], [186, 9, 1, "", "raw_data_manager"], [186, 8, 1, "", "set_content"]], "email.contentmanager.ContentManager": [[186, 8, 1, "", "add_get_handler"], [186, 8, 1, "", "add_set_handler"], [186, 8, 1, "", "get_content"], [186, 8, 1, "", "set_content"]], "email.encoders": [[187, 12, 1, "", "encode_7or8bit"], [187, 12, 1, "", "encode_base64"], [187, 12, 1, "", "encode_noop"], [187, 12, 1, "", "encode_quopri"]], "email.errors": [[188, 6, 1, "", "BoundaryError"], [188, 6, 1, "", "HeaderParseError"], [188, 6, 1, "", "MessageError"], [188, 6, 1, "", "MessageParseError"], [188, 6, 1, "", "MultipartConversionError"]], "email.generator": [[190, 11, 1, "", "BytesGenerator"], [190, 11, 1, "", "DecodedGenerator"], [190, 11, 1, "", "Generator"]], "email.generator.BytesGenerator": [[190, 8, 1, "", "clone"], [190, 8, 1, "", "flatten"], [190, 8, 1, "", "write"]], "email.generator.Generator": [[190, 8, 1, "", "clone"], [190, 8, 1, "", "flatten"], [190, 8, 1, "", "write"]], "email.header": [[191, 11, 1, "", "Header"], [191, 12, 1, "", "decode_header"], [191, 12, 1, "", "make_header"]], "email.header.Header": [[191, 8, 1, "", "__eq__"], [191, 8, 1, "", "__ne__"], [191, 8, 1, "", "__str__"], [191, 8, 1, "", "append"], [191, 8, 1, "", "encode"]], "email.headerregistry": [[192, 11, 1, "", "Address"], [192, 11, 1, "", "AddressHeader"], [192, 11, 1, "", "BaseHeader"], [192, 11, 1, "", "ContentDispositionHeader"], [192, 11, 1, "", "ContentTransferEncoding"], [192, 11, 1, "", "ContentTypeHeader"], [192, 11, 1, "", "DateHeader"], [192, 11, 1, "", "Group"], [192, 11, 1, "", "HeaderRegistry"], [192, 11, 1, "", "MIMEVersionHeader"], [192, 11, 1, "", "ParameterizedMIMEHeader"], [192, 11, 1, "", "SingleAddressHeader"], [192, 11, 1, "", "UnstructuredHeader"]], "email.headerregistry.Address": [[192, 8, 1, "", "__str__"], [192, 7, 1, "", "addr_spec"], [192, 7, 1, "", "display_name"], [192, 7, 1, "", "domain"], [192, 7, 1, "", "username"]], "email.headerregistry.AddressHeader": [[192, 7, 1, "", "addresses"], [192, 7, 1, "", "groups"]], "email.headerregistry.BaseHeader": [[192, 7, 1, "", "defects"], [192, 8, 1, "", "fold"], [192, 7, 1, "", "max_count"], [192, 7, 1, "", "name"]], "email.headerregistry.ContentDispositionHeader": [[192, 7, 1, "", "content_disposition"]], "email.headerregistry.ContentTransferEncoding": [[192, 7, 1, "", "cte"]], "email.headerregistry.ContentTypeHeader": [[192, 7, 1, "", "content_type"], [192, 7, 1, "", "maintype"], [192, 7, 1, "", "subtype"]], "email.headerregistry.DateHeader": [[192, 7, 1, "", "datetime"]], "email.headerregistry.Group": [[192, 8, 1, "", "__str__"], [192, 7, 1, "", "addresses"], [192, 7, 1, "", "display_name"]], "email.headerregistry.HeaderRegistry": [[192, 8, 1, "", "__call__"], [192, 8, 1, "", "__getitem__"], [192, 8, 1, "", "map_to_type"]], "email.headerregistry.MIMEVersionHeader": [[192, 7, 1, "", "major"], [192, 7, 1, "", "minor"], [192, 7, 1, "", "version"]], "email.headerregistry.ParameterizedMIMEHeader": [[192, 7, 1, "", "params"]], "email.headerregistry.SingleAddressHeader": [[192, 7, 1, "", "address"]], "email.iterators": [[193, 12, 1, "", "_structure"], [193, 12, 1, "", "body_line_iterator"], [193, 12, 1, "", "typed_subpart_iterator"]], "email.message": [[194, 11, 1, "", "EmailMessage"], [194, 11, 1, "", "MIMEPart"], [185, 11, 1, "", "Message"]], "email.message.EmailMessage": [[194, 8, 1, "", "__bytes__"], [194, 8, 1, "", "__contains__"], [194, 8, 1, "", "__delitem__"], [194, 8, 1, "", "__getitem__"], [194, 8, 1, "", "__len__"], [194, 8, 1, "", "__setitem__"], [194, 8, 1, "", "__str__"], [194, 8, 1, "", "add_alternative"], [194, 8, 1, "", "add_attachment"], [194, 8, 1, "", "add_header"], [194, 8, 1, "", "add_related"], [194, 8, 1, "", "as_bytes"], [194, 8, 1, "", "as_string"], [194, 8, 1, "", "clear"], [194, 8, 1, "", "clear_content"], [194, 7, 1, "", "defects"], [194, 8, 1, "", "del_param"], [194, 7, 1, "", "epilogue"], [194, 8, 1, "", "get"], [194, 8, 1, "", "get_all"], [194, 8, 1, "", "get_body"], [194, 8, 1, "", "get_boundary"], [194, 8, 1, "", "get_charsets"], [194, 8, 1, "", "get_content"], [194, 8, 1, "", "get_content_charset"], [194, 8, 1, "", "get_content_disposition"], [194, 8, 1, "", "get_content_maintype"], [194, 8, 1, "", "get_content_subtype"], [194, 8, 1, "", "get_content_type"], [194, 8, 1, "", "get_default_type"], [194, 8, 1, "", "get_filename"], [194, 8, 1, "", "get_unixfrom"], [194, 8, 1, "", "is_attachment"], [194, 8, 1, "", "is_multipart"], [194, 8, 1, "", "items"], [194, 8, 1, "", "iter_attachments"], [194, 8, 1, "", "iter_parts"], [194, 8, 1, "", "keys"], [194, 8, 1, "", "make_alternative"], [194, 8, 1, "", "make_mixed"], [194, 8, 1, "", "make_related"], [194, 7, 1, "", "preamble"], [194, 8, 1, "", "replace_header"], [194, 8, 1, "", "set_boundary"], [194, 8, 1, "", "set_content"], [194, 8, 1, "", "set_default_type"], [194, 8, 1, "", "set_param"], [194, 8, 1, "", "set_unixfrom"], [194, 8, 1, "", "values"], [194, 8, 1, "", "walk"]], "email.message.Message": [[185, 8, 1, "", "__bytes__"], [185, 8, 1, "", "__contains__"], [185, 8, 1, "", "__delitem__"], [185, 8, 1, "", "__getitem__"], [185, 8, 1, "", "__len__"], [185, 8, 1, "", "__setitem__"], [185, 8, 1, "", "__str__"], [185, 8, 1, "", "add_header"], [185, 8, 1, "", "as_bytes"], [185, 8, 1, "", "as_string"], [185, 8, 1, "", "attach"], [185, 7, 1, "", "defects"], [185, 8, 1, "", "del_param"], [185, 7, 1, "", "epilogue"], [185, 8, 1, "", "get"], [185, 8, 1, "", "get_all"], [185, 8, 1, "", "get_boundary"], [185, 8, 1, "", "get_charset"], [185, 8, 1, "", "get_charsets"], [185, 8, 1, "", "get_content_charset"], [185, 8, 1, "", "get_content_disposition"], [185, 8, 1, "", "get_content_maintype"], [185, 8, 1, "", "get_content_subtype"], [185, 8, 1, "", "get_content_type"], [185, 8, 1, "", "get_default_type"], [185, 8, 1, "", "get_filename"], [185, 8, 1, "", "get_param"], [185, 8, 1, "", "get_params"], [185, 8, 1, "", "get_payload"], [185, 8, 1, "", "get_unixfrom"], [185, 8, 1, "", "is_multipart"], [185, 8, 1, "", "items"], [185, 8, 1, "", "keys"], [185, 7, 1, "", "preamble"], [185, 8, 1, "", "replace_header"], [185, 8, 1, "", "set_boundary"], [185, 8, 1, "", "set_charset"], [185, 8, 1, "", "set_default_type"], [185, 8, 1, "", "set_param"], [185, 8, 1, "", "set_payload"], [185, 8, 1, "", "set_type"], [185, 8, 1, "", "set_unixfrom"], [185, 8, 1, "", "values"], [185, 8, 1, "", "walk"]], "email.mime.application": [[195, 11, 1, "", "MIMEApplication"]], "email.mime.audio": [[195, 11, 1, "", "MIMEAudio"]], "email.mime.base": [[195, 11, 1, "", "MIMEBase"]], "email.mime.image": [[195, 11, 1, "", "MIMEImage"]], "email.mime.message": [[195, 11, 1, "", "MIMEMessage"]], "email.mime.multipart": [[195, 11, 1, "", "MIMEMultipart"]], "email.mime.nonmultipart": [[195, 11, 1, "", "MIMENonMultipart"]], "email.mime.text": [[195, 11, 1, "", "MIMEText"]], "email.parser": [[196, 11, 1, "", "BytesFeedParser"], [196, 11, 1, "", "BytesHeaderParser"], [196, 11, 1, "", "BytesParser"], [196, 11, 1, "", "FeedParser"], [196, 11, 1, "", "HeaderParser"], [196, 11, 1, "", "Parser"]], "email.parser.BytesFeedParser": [[196, 8, 1, "", "close"], [196, 8, 1, "", "feed"]], "email.parser.BytesParser": [[196, 8, 1, "", "parse"], [196, 8, 1, "", "parsebytes"]], "email.parser.Parser": [[196, 8, 1, "", "parse"], [196, 8, 1, "", "parsestr"]], "email.policy": [[197, 11, 1, "", "Compat32"], [197, 11, 1, "", "EmailPolicy"], [197, 9, 1, "", "HTTP"], [197, 11, 1, "", "Policy"], [197, 9, 1, "", "SMTP"], [197, 9, 1, "", "SMTPUTF8"], [197, 9, 1, "", "compat32"], [197, 9, 1, "", "default"], [197, 9, 1, "", "strict"]], "email.policy.Compat32": [[197, 8, 1, "", "fold"], [197, 8, 1, "", "fold_binary"], [197, 8, 1, "", "header_fetch_parse"], [197, 8, 1, "", "header_source_parse"], [197, 8, 1, "", "header_store_parse"], [197, 7, 1, "", "mangle_from_"]], "email.policy.EmailPolicy": [[197, 7, 1, "", "content_manager"], [197, 8, 1, "", "fold"], [197, 8, 1, "", "fold_binary"], [197, 7, 1, "", "header_factory"], [197, 8, 1, "", "header_fetch_parse"], [197, 8, 1, "", "header_max_count"], [197, 8, 1, "", "header_source_parse"], [197, 8, 1, "", "header_store_parse"], [197, 7, 1, "", "refold_source"], [197, 7, 1, "", "utf8"]], "email.policy.Policy": [[197, 8, 1, "", "clone"], [197, 7, 1, "", "cte_type"], [197, 8, 1, "", "fold"], [197, 8, 1, "", "fold_binary"], [197, 8, 1, "", "handle_defect"], [197, 8, 1, "", "header_fetch_parse"], [197, 8, 1, "", "header_max_count"], [197, 8, 1, "", "header_source_parse"], [197, 8, 1, "", "header_store_parse"], [197, 7, 1, "", "linesep"], [197, 7, 1, "", "mangle_from_"], [197, 7, 1, "", "max_line_length"], [197, 7, 1, "", "message_factory"], [197, 7, 1, "", "raise_on_defect"], [197, 8, 1, "", "register_defect"]], "email.utils": [[198, 12, 1, "", "collapse_rfc2231_value"], [198, 12, 1, "", "decode_params"], [198, 12, 1, "", "decode_rfc2231"], [198, 12, 1, "", "encode_rfc2231"], [198, 12, 1, "", "format_datetime"], [198, 12, 1, "", "formataddr"], [198, 12, 1, "", "formatdate"], [198, 12, 1, "", "getaddresses"], [198, 12, 1, "", "localtime"], [198, 12, 1, "", "make_msgid"], [198, 12, 1, "", "mktime_tz"], [198, 12, 1, "", "parseaddr"], [198, 12, 1, "", "parsedate"], [198, 12, 1, "", "parsedate_to_datetime"], [198, 12, 1, "", "parsedate_tz"], [198, 12, 1, "", "quote"], [198, 12, 1, "", "unquote"]], "encodings": [[148, 10, 0, "-", "idna"], [148, 10, 0, "-", "mbcs"], [148, 10, 0, "-", "utf_8_sig"]], "encodings.idna": [[148, 12, 1, "", "ToASCII"], [148, 12, 1, "", "ToUnicode"], [148, 12, 1, "", "nameprep"]], "ensurepip": [[199, 12, 1, "", "bootstrap"], [199, 12, 1, "", "version"]], "enum": [[200, 11, 1, "", "Enum"], [200, 11, 1, "", "EnumCheck"], [200, 11, 1, "", "EnumType"], [200, 11, 1, "", "Flag"], [200, 11, 1, "", "FlagBoundary"], [200, 11, 1, "", "IntEnum"], [200, 11, 1, "", "IntFlag"], [200, 11, 1, "", "ReprEnum"], [200, 11, 1, "", "StrEnum"], [200, 11, 1, "", "auto"], [200, 12, 1, "", "global_enum"], [200, 12, 1, "", "member"], [200, 12, 1, "", "nonmember"], [200, 12, 1, "", "property"], [200, 12, 1, "", "show_flag_values"], [200, 12, 1, "", "unique"], [200, 12, 1, "", "verify"]], "enum.Enum": [[200, 8, 1, "", "__dir__"], [200, 8, 1, "", "__format__"], [200, 8, 1, "", "__init_subclass__"], [200, 8, 1, "", "__repr__"], [200, 8, 1, "", "__str__"], [200, 8, 1, "", "_generate_next_value_"], [200, 7, 1, "", "_ignore_"], [200, 8, 1, "", "_missing_"], [200, 7, 1, "", "name"], [200, 7, 1, "", "value"]], "enum.EnumCheck": [[200, 7, 1, "", "CONTINUOUS"], [200, 7, 1, "", "NAMED_FLAGS"], [200, 7, 1, "", "UNIQUE"]], "enum.EnumType": [[200, 8, 1, "", "__call__"], [200, 8, 1, "", "__contains__"], [200, 8, 1, "", "__dir__"], [200, 8, 1, "", "__getitem__"], [200, 8, 1, "", "__iter__"], [200, 8, 1, "", "__len__"], [200, 8, 1, "", "__reversed__"]], "enum.Flag": [[200, 8, 1, "", "__and__"], [200, 8, 1, "", "__contains__"], [200, 8, 1, "", "__or__"], [200, 8, 1, "", "__xor__"], [200, 8, 1, "", "_numeric_repr_"]], "enum.FlagBoundary": [[200, 7, 1, "", "CONFORM"], [200, 7, 1, "", "EJECT"], [200, 7, 1, "", "KEEP"], [200, 7, 1, "", "STRICT"]], "errno": [[201, 9, 1, "", "E2BIG"], [201, 9, 1, "", "EACCES"], [201, 9, 1, "", "EADDRINUSE"], [201, 9, 1, "", "EADDRNOTAVAIL"], [201, 9, 1, "", "EADV"], [201, 9, 1, "", "EAFNOSUPPORT"], [201, 9, 1, "", "EAGAIN"], [201, 9, 1, "", "EALREADY"], [201, 9, 1, "", "EBADE"], [201, 9, 1, "", "EBADF"], [201, 9, 1, "", "EBADFD"], [201, 9, 1, "", "EBADMSG"], [201, 9, 1, "", "EBADR"], [201, 9, 1, "", "EBADRQC"], [201, 9, 1, "", "EBADSLT"], [201, 9, 1, "", "EBFONT"], [201, 9, 1, "", "EBUSY"], [201, 9, 1, "", "ECANCELED"], [201, 9, 1, "", "ECHILD"], [201, 9, 1, "", "ECHRNG"], [201, 9, 1, "", "ECOMM"], [201, 9, 1, "", "ECONNABORTED"], [201, 9, 1, "", "ECONNREFUSED"], [201, 9, 1, "", "ECONNRESET"], [201, 9, 1, "", "EDEADLK"], [201, 9, 1, "", "EDEADLOCK"], [201, 9, 1, "", "EDESTADDRREQ"], [201, 9, 1, "", "EDOM"], [201, 9, 1, "", "EDOTDOT"], [201, 9, 1, "", "EDQUOT"], [201, 9, 1, "", "EEXIST"], [201, 9, 1, "", "EFAULT"], [201, 9, 1, "", "EFBIG"], [201, 9, 1, "", "EHOSTDOWN"], [201, 9, 1, "", "EHOSTUNREACH"], [201, 9, 1, "", "EIDRM"], [201, 9, 1, "", "EILSEQ"], [201, 9, 1, "", "EINPROGRESS"], [201, 9, 1, "", "EINTR"], [201, 9, 1, "", "EINVAL"], [201, 9, 1, "", "EIO"], [201, 9, 1, "", "EISCONN"], [201, 9, 1, "", "EISDIR"], [201, 9, 1, "", "EISNAM"], [201, 9, 1, "", "EL2HLT"], [201, 9, 1, "", "EL2NSYNC"], [201, 9, 1, "", "EL3HLT"], [201, 9, 1, "", "EL3RST"], [201, 9, 1, "", "ELIBACC"], [201, 9, 1, "", "ELIBBAD"], [201, 9, 1, "", "ELIBEXEC"], [201, 9, 1, "", "ELIBMAX"], [201, 9, 1, "", "ELIBSCN"], [201, 9, 1, "", "ELNRNG"], [201, 9, 1, "", "ELOOP"], [201, 9, 1, "", "EMFILE"], [201, 9, 1, "", "EMLINK"], [201, 9, 1, "", "EMSGSIZE"], [201, 9, 1, "", "EMULTIHOP"], [201, 9, 1, "", "ENAMETOOLONG"], [201, 9, 1, "", "ENAVAIL"], [201, 9, 1, "", "ENETDOWN"], [201, 9, 1, "", "ENETRESET"], [201, 9, 1, "", "ENETUNREACH"], [201, 9, 1, "", "ENFILE"], [201, 9, 1, "", "ENOANO"], [201, 9, 1, "", "ENOBUFS"], [201, 9, 1, "", "ENOCSI"], [201, 9, 1, "", "ENODATA"], [201, 9, 1, "", "ENODEV"], [201, 9, 1, "", "ENOENT"], [201, 9, 1, "", "ENOEXEC"], [201, 9, 1, "", "ENOLCK"], [201, 9, 1, "", "ENOLINK"], [201, 9, 1, "", "ENOMEM"], [201, 9, 1, "", "ENOMSG"], [201, 9, 1, "", "ENONET"], [201, 9, 1, "", "ENOPKG"], [201, 9, 1, "", "ENOPROTOOPT"], [201, 9, 1, "", "ENOSPC"], [201, 9, 1, "", "ENOSR"], [201, 9, 1, "", "ENOSTR"], [201, 9, 1, "", "ENOSYS"], [201, 9, 1, "", "ENOTBLK"], [201, 9, 1, "", "ENOTCAPABLE"], [201, 9, 1, "", "ENOTCONN"], [201, 9, 1, "", "ENOTDIR"], [201, 9, 1, "", "ENOTEMPTY"], [201, 9, 1, "", "ENOTNAM"], [201, 9, 1, "", "ENOTRECOVERABLE"], [201, 9, 1, "", "ENOTSOCK"], [201, 9, 1, "", "ENOTSUP"], [201, 9, 1, "", "ENOTTY"], [201, 9, 1, "", "ENOTUNIQ"], [201, 9, 1, "", "ENXIO"], [201, 9, 1, "", "EOPNOTSUPP"], [201, 9, 1, "", "EOVERFLOW"], [201, 9, 1, "", "EOWNERDEAD"], [201, 9, 1, "", "EPERM"], [201, 9, 1, "", "EPFNOSUPPORT"], [201, 9, 1, "", "EPIPE"], [201, 9, 1, "", "EPROTO"], [201, 9, 1, "", "EPROTONOSUPPORT"], [201, 9, 1, "", "EPROTOTYPE"], [201, 9, 1, "", "EQFULL"], [201, 9, 1, "", "ERANGE"], [201, 9, 1, "", "EREMCHG"], [201, 9, 1, "", "EREMOTE"], [201, 9, 1, "", "EREMOTEIO"], [201, 9, 1, "", "ERESTART"], [201, 9, 1, "", "EROFS"], [201, 9, 1, "", "ESHUTDOWN"], [201, 9, 1, "", "ESOCKTNOSUPPORT"], [201, 9, 1, "", "ESPIPE"], [201, 9, 1, "", "ESRCH"], [201, 9, 1, "", "ESRMNT"], [201, 9, 1, "", "ESTALE"], [201, 9, 1, "", "ESTRPIPE"], [201, 9, 1, "", "ETIME"], [201, 9, 1, "", "ETIMEDOUT"], [201, 9, 1, "", "ETOOMANYREFS"], [201, 9, 1, "", "ETXTBSY"], [201, 9, 1, "", "EUCLEAN"], [201, 9, 1, "", "EUNATCH"], [201, 9, 1, "", "EUSERS"], [201, 9, 1, "", "EWOULDBLOCK"], [201, 9, 1, "", "EXDEV"], [201, 9, 1, "", "EXFULL"], [201, 9, 1, "", "errorcode"]], "faulthandler": [[203, 12, 1, "", "cancel_dump_traceback_later"], [203, 12, 1, "", "disable"], [203, 12, 1, "", "dump_traceback"], [203, 12, 1, "", "dump_traceback_later"], [203, 12, 1, "", "enable"], [203, 12, 1, "", "is_enabled"], [203, 12, 1, "", "register"], [203, 12, 1, "", "unregister"]], "fcntl": [[204, 12, 1, "", "fcntl"], [204, 12, 1, "", "flock"], [204, 12, 1, "", "ioctl"], [204, 12, 1, "", "lockf"]], "filecmp": [[205, 7, 1, "", "DEFAULT_IGNORES"], [205, 12, 1, "", "clear_cache"], [205, 12, 1, "", "cmp"], [205, 12, 1, "", "cmpfiles"], [205, 11, 1, "", "dircmp"]], "filecmp.dircmp": [[205, 7, 1, "", "common"], [205, 7, 1, "", "common_dirs"], [205, 7, 1, "", "common_files"], [205, 7, 1, "", "common_funny"], [205, 7, 1, "", "diff_files"], [205, 7, 1, "", "funny_files"], [205, 7, 1, "", "left"], [205, 7, 1, "", "left_list"], [205, 7, 1, "", "left_only"], [205, 8, 1, "", "report"], [205, 8, 1, "", "report_full_closure"], [205, 8, 1, "", "report_partial_closure"], [205, 7, 1, "", "right"], [205, 7, 1, "", "right_list"], [205, 7, 1, "", "right_only"], [205, 7, 1, "", "same_files"], [205, 7, 1, "", "subdirs"]], "fileinput": [[207, 11, 1, "", "FileInput"], [207, 12, 1, "", "close"], [207, 12, 1, "", "filelineno"], [207, 12, 1, "", "filename"], [207, 12, 1, "", "fileno"], [207, 12, 1, "", "hook_compressed"], [207, 12, 1, "", "hook_encoded"], [207, 12, 1, "", "input"], [207, 12, 1, "", "isfirstline"], [207, 12, 1, "", "isstdin"], [207, 12, 1, "", "lineno"], [207, 12, 1, "", "nextfile"]], "float": [[324, 8, 1, "", "as_integer_ratio"], [324, 8, 1, "", "fromhex"], [324, 8, 1, "", "hex"], [324, 8, 1, "", "is_integer"]], "fnmatch": [[209, 12, 1, "", "filter"], [209, 12, 1, "", "fnmatch"], [209, 12, 1, "", "fnmatchcase"], [209, 12, 1, "", "translate"]], "fractions": [[210, 11, 1, "", "Fraction"]], "fractions.Fraction": [[210, 8, 1, "", "__ceil__"], [210, 8, 1, "", "__floor__"], [210, 8, 1, "", "__format__"], [210, 8, 1, "", "__round__"], [210, 8, 1, "", "as_integer_ratio"], [210, 7, 1, "", "denominator"], [210, 8, 1, "", "from_decimal"], [210, 8, 1, "", "from_float"], [210, 8, 1, "", "is_integer"], [210, 8, 1, "", "limit_denominator"], [210, 7, 1, "", "numerator"]], "frame": [[403, 8, 1, "", "clear"]], "frozenset": [[324, 8, 1, "", "add"], [324, 8, 1, "", "clear"], [324, 8, 1, "", "copy"], [324, 8, 1, "", "difference"], [324, 8, 1, "", "difference_update"], [324, 8, 1, "", "discard"], [324, 8, 1, "", "intersection"], [324, 8, 1, "", "intersection_update"], [324, 8, 1, "", "isdisjoint"], [324, 8, 1, "", "issubset"], [324, 8, 1, "", "issuperset"], [324, 8, 1, "", "pop"], [324, 8, 1, "", "remove"], [324, 8, 1, "", "symmetric_difference"], [324, 8, 1, "", "symmetric_difference_update"], [324, 8, 1, "", "union"], [324, 8, 1, "", "update"]], "ftplib": [[212, 11, 1, "", "FTP"], [212, 9, 1, "", "all_errors"], [212, 6, 1, "", "error_perm"], [212, 6, 1, "", "error_proto"], [212, 6, 1, "", "error_reply"], [212, 6, 1, "", "error_temp"]], "ftplib.FTP": [[212, 8, 1, "", "abort"], [212, 8, 1, "", "close"], [212, 8, 1, "", "connect"], [212, 8, 1, "", "cwd"], [212, 8, 1, "", "delete"], [212, 8, 1, "", "dir"], [212, 8, 1, "", "getwelcome"], [212, 8, 1, "", "login"], [212, 8, 1, "", "mkd"], [212, 8, 1, "", "mlsd"], [212, 8, 1, "", "nlst"], [212, 8, 1, "", "ntransfercmd"], [212, 8, 1, "", "pwd"], [212, 8, 1, "", "quit"], [212, 8, 1, "", "rename"], [212, 8, 1, "", "retrbinary"], [212, 8, 1, "", "retrlines"], [212, 8, 1, "", "rmd"], [212, 8, 1, "", "sendcmd"], [212, 8, 1, "", "set_debuglevel"], [212, 8, 1, "", "set_pasv"], [212, 8, 1, "", "size"], [212, 8, 1, "", "storbinary"], [212, 8, 1, "", "storlines"], [212, 8, 1, "", "transfercmd"], [212, 8, 1, "", "voidcmd"]], "ftplib.FTP_TLS": [[212, 8, 1, "", "auth"], [212, 8, 1, "", "ccc"], [212, 8, 1, "", "prot_c"], [212, 8, 1, "", "prot_p"], [212, 7, 1, "", "ssl_version"]], "functools": [[215, 12, 1, "", "cache"], [215, 12, 1, "", "cached_property"], [215, 12, 1, "", "cmp_to_key"], [215, 12, 1, "", "lru_cache"], [215, 12, 1, "", "partial"], [215, 11, 1, "", "partialmethod"], [215, 12, 1, "", "reduce"], [215, 12, 1, "", "singledispatch"], [215, 11, 1, "", "singledispatchmethod"], [215, 12, 1, "", "total_ordering"], [215, 12, 1, "", "update_wrapper"], [215, 12, 1, "", "wraps"]], "functools.partial": [[215, 7, 1, "", "args"], [215, 7, 1, "", "func"], [215, 7, 1, "", "keywords"]], "gc": [[216, 9, 1, "", "DEBUG_COLLECTABLE"], [216, 9, 1, "", "DEBUG_LEAK"], [216, 9, 1, "", "DEBUG_SAVEALL"], [216, 9, 1, "", "DEBUG_STATS"], [216, 9, 1, "", "DEBUG_UNCOLLECTABLE"], [216, 9, 1, "", "callbacks"], [216, 12, 1, "", "collect"], [216, 12, 1, "", "disable"], [216, 12, 1, "", "enable"], [216, 12, 1, "", "freeze"], [216, 9, 1, "", "garbage"], [216, 12, 1, "", "get_count"], [216, 12, 1, "", "get_debug"], [216, 12, 1, "", "get_freeze_count"], [216, 12, 1, "", "get_objects"], [216, 12, 1, "", "get_referents"], [216, 12, 1, "", "get_referrers"], [216, 12, 1, "", "get_stats"], [216, 12, 1, "", "get_threshold"], [216, 12, 1, "", "is_finalized"], [216, 12, 1, "", "is_tracked"], [216, 12, 1, "", "isenabled"], [216, 12, 1, "", "set_debug"], [216, 12, 1, "", "set_threshold"], [216, 12, 1, "", "unfreeze"]], "generator": [[405, 8, 1, "", "__next__"], [405, 8, 1, "", "close"], [405, 8, 1, "", "send"], [405, 8, 1, "", "throw"]], "genericalias": [[324, 7, 1, "", "__args__"], [324, 7, 1, "", "__origin__"], [324, 7, 1, "", "__parameters__"], [324, 7, 1, "", "__unpacked__"]], "getopt": [[217, 6, 1, "", "GetoptError"], [217, 6, 1, "", "error"], [217, 12, 1, "", "getopt"], [217, 12, 1, "", "gnu_getopt"]], "getpass": [[218, 6, 1, "", "GetPassWarning"], [218, 12, 1, "", "getpass"], [218, 12, 1, "", "getuser"]], "gettext": [[219, 11, 1, "", "GNUTranslations"], [219, 11, 1, "", "NullTranslations"], [219, 12, 1, "", "bindtextdomain"], [219, 12, 1, "", "dgettext"], [219, 12, 1, "", "dngettext"], [219, 12, 1, "", "dnpgettext"], [219, 12, 1, "", "dpgettext"], [219, 12, 1, "", "find"], [219, 12, 1, "", "gettext"], [219, 12, 1, "", "install"], [219, 12, 1, "", "ngettext"], [219, 12, 1, "", "npgettext"], [219, 12, 1, "", "pgettext"], [219, 12, 1, "", "textdomain"], [219, 12, 1, "", "translation"]], "gettext.GNUTranslations": [[219, 8, 1, "", "gettext"], [219, 8, 1, "", "ngettext"], [219, 8, 1, "", "npgettext"], [219, 8, 1, "", "pgettext"]], "gettext.NullTranslations": [[219, 8, 1, "", "_parse"], [219, 8, 1, "", "add_fallback"], [219, 8, 1, "", "charset"], [219, 8, 1, "", "gettext"], [219, 8, 1, "", "info"], [219, 8, 1, "", "install"], [219, 8, 1, "", "ngettext"], [219, 8, 1, "", "npgettext"], [219, 8, 1, "", "pgettext"]], "glob": [[220, 12, 1, "", "escape"], [220, 12, 1, "", "glob"], [220, 12, 1, "", "iglob"]], "graphlib": [[221, 6, 1, "", "CycleError"], [221, 11, 1, "", "TopologicalSorter"]], "graphlib.TopologicalSorter": [[221, 8, 1, "", "add"], [221, 8, 1, "", "done"], [221, 8, 1, "", "get_ready"], [221, 8, 1, "", "is_active"], [221, 8, 1, "", "prepare"], [221, 8, 1, "", "static_order"]], "grp": [[222, 12, 1, "", "getgrall"], [222, 12, 1, "", "getgrgid"], [222, 12, 1, "", "getgrnam"]], "gzip": [[223, 6, 1, "", "BadGzipFile"], [223, 11, 1, "", "GzipFile"], [223, 12, 1, "", "compress"], [223, 12, 1, "", "decompress"], [223, 12, 1, "", "open"], [223, 14, 1, "cmdoption-gzip-best", "--best"], [223, 14, 1, "cmdoption-gzip-d", "--decompress"], [223, 14, 1, "cmdoption-gzip-fast", "--fast"], [223, 14, 1, "cmdoption-gzip-h", "--help"], [223, 14, 1, "cmdoption-gzip-d", "-d"], [223, 14, 1, "cmdoption-gzip-h", "-h"], [223, 14, 1, "cmdoption-gzip-arg-file", "file"]], "gzip.GzipFile": [[223, 7, 1, "", "mtime"], [223, 7, 1, "", "name"], [223, 8, 1, "", "peek"]], "hashlib": [[224, 9, 1, "", "algorithms_available"], [224, 9, 1, "", "algorithms_guaranteed"], [224, 12, 1, "", "blake2b"], [224, 12, 1, "", "blake2s"], [224, 12, 1, "", "file_digest"], [224, 12, 1, "", "md5"], [224, 12, 1, "", "new"], [224, 12, 1, "", "pbkdf2_hmac"], [224, 12, 1, "", "scrypt"], [224, 12, 1, "", "sha1"], [224, 12, 1, "", "sha224"], [224, 12, 1, "", "sha256"], [224, 12, 1, "", "sha384"], [224, 12, 1, "", "sha3_224"], [224, 12, 1, "", "sha3_256"], [224, 12, 1, "", "sha3_384"], [224, 12, 1, "", "sha3_512"], [224, 12, 1, "", "sha512"], [224, 12, 1, "", "shake_128"], [224, 12, 1, "", "shake_256"]], "hashlib.blake2b": [[224, 9, 1, "", "MAX_DIGEST_SIZE"], [224, 9, 1, "", "MAX_KEY_SIZE"], [224, 9, 1, "", "PERSON_SIZE"], [224, 9, 1, "", "SALT_SIZE"]], "hashlib.blake2s": [[224, 9, 1, "", "MAX_DIGEST_SIZE"], [224, 9, 1, "", "MAX_KEY_SIZE"], [224, 9, 1, "", "PERSON_SIZE"], [224, 9, 1, "", "SALT_SIZE"]], "hashlib.hash": [[224, 9, 1, "", "block_size"], [224, 8, 1, "", "copy"], [224, 8, 1, "", "digest"], [224, 9, 1, "", "digest_size"], [224, 8, 1, "", "hexdigest"], [224, 7, 1, "", "name"], [224, 8, 1, "", "update"]], "hashlib.shake": [[224, 8, 1, "", "digest"], [224, 8, 1, "", "hexdigest"]], "heapq": [[225, 12, 1, "", "heapify"], [225, 12, 1, "", "heappop"], [225, 12, 1, "", "heappush"], [225, 12, 1, "", "heappushpop"], [225, 12, 1, "", "heapreplace"], [225, 12, 1, "", "merge"], [225, 12, 1, "", "nlargest"], [225, 12, 1, "", "nsmallest"]], "hmac.HMAC": [[226, 7, 1, "", "block_size"], [226, 8, 1, "", "copy"], [226, 8, 1, "", "digest"], [226, 7, 1, "", "digest_size"], [226, 8, 1, "", "hexdigest"], [226, 7, 1, "", "name"], [226, 8, 1, "", "update"]], "hmac": [[226, 12, 1, "", "compare_digest"], [226, 12, 1, "", "digest"], [226, 12, 1, "", "new"]], "html": [[228, 10, 0, "-", "entities"], [227, 12, 1, "", "escape"], [229, 10, 0, "-", "parser"], [227, 12, 1, "", "unescape"]], "html.entities": [[228, 9, 1, "", "codepoint2name"], [228, 9, 1, "", "entitydefs"], [228, 9, 1, "", "html5"], [228, 9, 1, "", "name2codepoint"]], "html.parser": [[229, 11, 1, "", "HTMLParser"]], "html.parser.HTMLParser": [[229, 8, 1, "", "close"], [229, 8, 1, "", "feed"], [229, 8, 1, "", "get_starttag_text"], [229, 8, 1, "", "getpos"], [229, 8, 1, "", "handle_charref"], [229, 8, 1, "", "handle_comment"], [229, 8, 1, "", "handle_data"], [229, 8, 1, "", "handle_decl"], [229, 8, 1, "", "handle_endtag"], [229, 8, 1, "", "handle_entityref"], [229, 8, 1, "", "handle_pi"], [229, 8, 1, "", "handle_startendtag"], [229, 8, 1, "", "handle_starttag"], [229, 8, 1, "", "reset"], [229, 8, 1, "", "unknown_decl"]], "http": [[230, 11, 1, "", "HTTPMethod"], [230, 11, 1, "", "HTTPStatus"], [231, 10, 0, "-", "client"], [232, 10, 0, "-", "cookiejar"], [233, 10, 0, "-", "cookies"], [234, 10, 0, "-", "server"]], "http.client": [[231, 6, 1, "", "BadStatusLine"], [231, 6, 1, "", "CannotSendHeader"], [231, 6, 1, "", "CannotSendRequest"], [231, 11, 1, "", "HTTPConnection"], [231, 6, 1, "", "HTTPException"], [231, 11, 1, "", "HTTPResponse"], [231, 11, 1, "", "HTTPSConnection"], [231, 9, 1, "", "HTTPS_PORT"], [231, 9, 1, "", "HTTP_PORT"], [231, 6, 1, "", "ImproperConnectionState"], [231, 6, 1, "", "IncompleteRead"], [231, 6, 1, "", "InvalidURL"], [231, 6, 1, "", "LineTooLong"], [231, 6, 1, "", "NotConnected"], [231, 6, 1, "", "RemoteDisconnected"], [231, 6, 1, "", "ResponseNotReady"], [231, 6, 1, "", "UnimplementedFileMode"], [231, 6, 1, "", "UnknownProtocol"], [231, 6, 1, "", "UnknownTransferEncoding"], [231, 12, 1, "", "parse_headers"], [231, 9, 1, "", "responses"]], "http.client.HTTPConnection": [[231, 7, 1, "", "blocksize"], [231, 8, 1, "", "close"], [231, 8, 1, "", "connect"], [231, 8, 1, "", "endheaders"], [231, 8, 1, "", "get_proxy_response_headers"], [231, 8, 1, "", "getresponse"], [231, 8, 1, "", "putheader"], [231, 8, 1, "", "putrequest"], [231, 8, 1, "", "request"], [231, 8, 1, "", "send"], [231, 8, 1, "", "set_debuglevel"], [231, 8, 1, "", "set_tunnel"]], "http.client.HTTPResponse": [[231, 7, 1, "", "closed"], [231, 7, 1, "", "debuglevel"], [231, 8, 1, "", "fileno"], [231, 8, 1, "", "getcode"], [231, 8, 1, "", "getheader"], [231, 8, 1, "", "getheaders"], [231, 8, 1, "", "geturl"], [231, 7, 1, "", "headers"], [231, 8, 1, "", "info"], [231, 7, 1, "", "msg"], [231, 8, 1, "", "read"], [231, 8, 1, "", "readinto"], [231, 7, 1, "", "reason"], [231, 7, 1, "", "status"], [231, 7, 1, "", "url"], [231, 7, 1, "", "version"]], "http.cookiejar": [[232, 11, 1, "", "Cookie"], [232, 11, 1, "", "CookieJar"], [232, 11, 1, "", "CookiePolicy"], [232, 11, 1, "", "DefaultCookiePolicy"], [232, 11, 1, "", "FileCookieJar"], [232, 11, 1, "", "LWPCookieJar"], [232, 6, 1, "", "LoadError"], [232, 11, 1, "", "MozillaCookieJar"]], "http.cookiejar.Cookie": [[232, 7, 1, "", "comment"], [232, 7, 1, "", "comment_url"], [232, 7, 1, "", "discard"], [232, 7, 1, "", "domain_initial_dot"], [232, 7, 1, "", "domain_specified"], [232, 7, 1, "", "expires"], [232, 8, 1, "", "get_nonstandard_attr"], [232, 8, 1, "", "has_nonstandard_attr"], [232, 8, 1, "", "is_expired"], [232, 7, 1, "", "name"], [232, 7, 1, "", "path"], [232, 7, 1, "", "port"], [232, 7, 1, "", "port_specified"], [232, 7, 1, "", "rfc2109"], [232, 7, 1, "", "secure"], [232, 8, 1, "", "set_nonstandard_attr"], [232, 7, 1, "", "value"], [232, 7, 1, "", "version"]], "http.cookiejar.CookieJar": [[232, 8, 1, "", "add_cookie_header"], [232, 8, 1, "", "clear"], [232, 8, 1, "", "clear_session_cookies"], [232, 8, 1, "", "extract_cookies"], [232, 8, 1, "", "make_cookies"], [232, 8, 1, "", "set_cookie"], [232, 8, 1, "", "set_cookie_if_ok"], [232, 8, 1, "", "set_policy"]], "http.cookiejar.CookiePolicy": [[232, 8, 1, "", "domain_return_ok"], [232, 7, 1, "", "hide_cookie2"], [232, 7, 1, "", "netscape"], [232, 8, 1, "", "path_return_ok"], [232, 8, 1, "", "return_ok"], [232, 7, 1, "", "rfc2965"], [232, 8, 1, "", "set_ok"]], "http.cookiejar.DefaultCookiePolicy": [[232, 7, 1, "", "DomainLiberal"], [232, 7, 1, "", "DomainRFC2965Match"], [232, 7, 1, "", "DomainStrict"], [232, 7, 1, "", "DomainStrictNoDots"], [232, 7, 1, "", "DomainStrictNonDomain"], [232, 8, 1, "", "allowed_domains"], [232, 8, 1, "", "blocked_domains"], [232, 8, 1, "", "is_blocked"], [232, 8, 1, "", "is_not_allowed"], [232, 7, 1, "", "rfc2109_as_netscape"], [232, 8, 1, "", "set_allowed_domains"], [232, 8, 1, "", "set_blocked_domains"], [232, 7, 1, "", "strict_domain"], [232, 7, 1, "", "strict_ns_domain"], [232, 7, 1, "", "strict_ns_set_initial_dollar"], [232, 7, 1, "", "strict_ns_set_path"], [232, 7, 1, "", "strict_ns_unverifiable"], [232, 7, 1, "", "strict_rfc2965_unverifiable"]], "http.cookiejar.FileCookieJar": [[232, 7, 1, "", "delayload"], [232, 7, 1, "", "filename"], [232, 8, 1, "", "load"], [232, 8, 1, "", "revert"], [232, 8, 1, "", "save"]], "http.cookies": [[233, 11, 1, "", "BaseCookie"], [233, 6, 1, "", "CookieError"], [233, 11, 1, "", "Morsel"], [233, 11, 1, "", "SimpleCookie"]], "http.cookies.BaseCookie": [[233, 8, 1, "", "js_output"], [233, 8, 1, "", "load"], [233, 8, 1, "", "output"], [233, 8, 1, "", "value_decode"], [233, 8, 1, "", "value_encode"]], "http.cookies.Morsel": [[233, 8, 1, "", "OutputString"], [233, 7, 1, "", "coded_value"], [233, 8, 1, "", "copy"], [233, 8, 1, "", "isReservedKey"], [233, 8, 1, "", "js_output"], [233, 7, 1, "", "key"], [233, 8, 1, "", "output"], [233, 8, 1, "", "set"], [233, 8, 1, "", "setdefault"], [233, 8, 1, "", "update"], [233, 7, 1, "", "value"]], "http.server": [[234, 11, 1, "", "BaseHTTPRequestHandler"], [234, 11, 1, "", "CGIHTTPRequestHandler"], [234, 11, 1, "", "HTTPServer"], [234, 11, 1, "", "SimpleHTTPRequestHandler"], [234, 11, 1, "", "ThreadingHTTPServer"]], "http.server.BaseHTTPRequestHandler": [[234, 7, 1, "", "MessageClass"], [234, 8, 1, "", "address_string"], [234, 7, 1, "", "client_address"], [234, 7, 1, "", "close_connection"], [234, 7, 1, "", "command"], [234, 8, 1, "", "date_time_string"], [234, 8, 1, "", "end_headers"], [234, 7, 1, "", "error_content_type"], [234, 7, 1, "", "error_message_format"], [234, 8, 1, "", "flush_headers"], [234, 8, 1, "", "handle"], [234, 8, 1, "", "handle_expect_100"], [234, 8, 1, "", "handle_one_request"], [234, 7, 1, "", "headers"], [234, 8, 1, "", "log_date_time_string"], [234, 8, 1, "", "log_error"], [234, 8, 1, "", "log_message"], [234, 8, 1, "", "log_request"], [234, 7, 1, "", "path"], [234, 7, 1, "", "protocol_version"], [234, 7, 1, "", "request_version"], [234, 7, 1, "", "requestline"], [234, 7, 1, "", "responses"], [234, 7, 1, "", "rfile"], [234, 8, 1, "", "send_error"], [234, 8, 1, "", "send_header"], [234, 8, 1, "", "send_response"], [234, 8, 1, "", "send_response_only"], [234, 7, 1, "", "server"], [234, 7, 1, "", "server_version"], [234, 7, 1, "", "sys_version"], [234, 8, 1, "", "version_string"], [234, 7, 1, "", "wfile"]], "http.server.CGIHTTPRequestHandler": [[234, 7, 1, "", "cgi_directories"], [234, 8, 1, "", "do_POST"]], "http.server.SimpleHTTPRequestHandler": [[234, 8, 1, "", "do_GET"], [234, 8, 1, "", "do_HEAD"], [234, 7, 1, "", "extensions_map"], [234, 7, 1, "", "server_version"]], "imaplib": [[237, 11, 1, "", "IMAP4"], [237, 11, 1, "", "IMAP4_SSL"], [237, 11, 1, "", "IMAP4_stream"], [237, 12, 1, "", "Int2AP"], [237, 12, 1, "", "Internaldate2tuple"], [237, 12, 1, "", "ParseFlags"], [237, 12, 1, "", "Time2Internaldate"]], "imaplib.IMAP4": [[237, 7, 1, "", "PROTOCOL_VERSION"], [237, 6, 1, "", "abort"], [237, 8, 1, "", "append"], [237, 8, 1, "", "authenticate"], [237, 8, 1, "", "check"], [237, 8, 1, "", "close"], [237, 8, 1, "", "copy"], [237, 8, 1, "", "create"], [237, 7, 1, "", "debug"], [237, 8, 1, "", "delete"], [237, 8, 1, "", "deleteacl"], [237, 8, 1, "", "enable"], [237, 6, 1, "", "error"], [237, 8, 1, "", "expunge"], [237, 8, 1, "", "fetch"], [237, 8, 1, "", "getacl"], [237, 8, 1, "", "getannotation"], [237, 8, 1, "", "getquota"], [237, 8, 1, "", "getquotaroot"], [237, 8, 1, "", "list"], [237, 8, 1, "", "login"], [237, 8, 1, "", "login_cram_md5"], [237, 8, 1, "", "logout"], [237, 8, 1, "", "lsub"], [237, 8, 1, "", "myrights"], [237, 8, 1, "", "namespace"], [237, 8, 1, "", "noop"], [237, 8, 1, "", "open"], [237, 8, 1, "", "partial"], [237, 8, 1, "", "proxyauth"], [237, 8, 1, "", "read"], [237, 8, 1, "", "readline"], [237, 6, 1, "", "readonly"], [237, 8, 1, "", "recent"], [237, 8, 1, "", "rename"], [237, 8, 1, "", "response"], [237, 8, 1, "", "search"], [237, 8, 1, "", "select"], [237, 8, 1, "", "send"], [237, 8, 1, "", "setacl"], [237, 8, 1, "", "setannotation"], [237, 8, 1, "", "setquota"], [237, 8, 1, "", "shutdown"], [237, 8, 1, "", "socket"], [237, 8, 1, "", "sort"], [237, 8, 1, "", "starttls"], [237, 8, 1, "", "status"], [237, 8, 1, "", "store"], [237, 8, 1, "", "subscribe"], [237, 8, 1, "", "thread"], [237, 8, 1, "", "uid"], [237, 8, 1, "", "unselect"], [237, 8, 1, "", "unsubscribe"], [237, 7, 1, "", "utf8_enabled"], [237, 8, 1, "", "xatom"]], "importlib": [[238, 12, 1, "", "__import__"], [238, 10, 0, "-", "abc"], [238, 12, 1, "", "import_module"], [238, 12, 1, "", "invalidate_caches"], [238, 10, 0, "-", "machinery"], [239, 10, 0, "-", "metadata"], [238, 12, 1, "", "reload"], [240, 10, 0, "-", "resources"], [238, 10, 0, "-", "util"]], "importlib.abc": [[238, 11, 1, "", "ExecutionLoader"], [238, 11, 1, "", "FileLoader"], [238, 11, 1, "", "InspectLoader"], [238, 11, 1, "", "Loader"], [238, 11, 1, "", "MetaPathFinder"], [238, 11, 1, "", "PathEntryFinder"], [238, 11, 1, "", "ResourceLoader"], [238, 11, 1, "", "ResourceReader"], [238, 11, 1, "", "SourceLoader"], [238, 11, 1, "", "Traversable"], [238, 11, 1, "", "TraversableResources"]], "importlib.abc.ExecutionLoader": [[238, 8, 1, "", "get_filename"]], "importlib.abc.FileLoader": [[238, 8, 1, "", "get_data"], [238, 8, 1, "", "get_filename"], [238, 8, 1, "", "load_module"], [238, 7, 1, "", "name"], [238, 7, 1, "", "path"]], "importlib.abc.InspectLoader": [[238, 8, 1, "", "exec_module"], [238, 8, 1, "", "get_code"], [238, 8, 1, "", "get_source"], [238, 8, 1, "", "is_package"], [238, 8, 1, "", "load_module"], [238, 8, 1, "", "source_to_code"]], "importlib.abc.Loader": [[238, 8, 1, "", "create_module"], [238, 8, 1, "", "exec_module"], [238, 8, 1, "", "load_module"]], "importlib.abc.MetaPathFinder": [[238, 8, 1, "", "find_spec"], [238, 8, 1, "", "invalidate_caches"]], "importlib.abc.PathEntryFinder": [[238, 8, 1, "", "find_spec"], [238, 8, 1, "", "invalidate_caches"]], "importlib.abc.ResourceLoader": [[238, 8, 1, "", "get_data"]], "importlib.abc.ResourceReader": [[238, 8, 1, "", "contents"], [238, 8, 1, "", "is_resource"], [238, 8, 1, "", "open_resource"], [238, 8, 1, "", "resource_path"]], "importlib.abc.SourceLoader": [[238, 8, 1, "", "exec_module"], [238, 8, 1, "", "get_code"], [238, 8, 1, "", "get_source"], [238, 8, 1, "", "is_package"], [238, 8, 1, "", "load_module"], [238, 8, 1, "", "path_mtime"], [238, 8, 1, "", "path_stats"], [238, 8, 1, "", "set_data"]], "importlib.abc.Traversable": [[238, 8, 1, "", "__truediv__"], [238, 8, 1, "", "is_dir"], [238, 8, 1, "", "is_file"], [238, 8, 1, "", "iterdir"], [238, 8, 1, "", "joinpath"], [238, 7, 1, "", "name"], [238, 8, 1, "", "open"], [238, 8, 1, "", "read_bytes"], [238, 8, 1, "", "read_text"]], "importlib.abc.TraversableResources": [[238, 8, 1, "", "files"]], "importlib.machinery": [[238, 7, 1, "", "BYTECODE_SUFFIXES"], [238, 11, 1, "", "BuiltinImporter"], [238, 7, 1, "", "DEBUG_BYTECODE_SUFFIXES"], [238, 7, 1, "", "EXTENSION_SUFFIXES"], [238, 11, 1, "", "ExtensionFileLoader"], [238, 11, 1, "", "FileFinder"], [238, 11, 1, "", "FrozenImporter"], [238, 11, 1, "", "ModuleSpec"], [238, 7, 1, "", "OPTIMIZED_BYTECODE_SUFFIXES"], [238, 11, 1, "", "PathFinder"], [238, 7, 1, "", "SOURCE_SUFFIXES"], [238, 11, 1, "", "SourceFileLoader"], [238, 11, 1, "", "SourcelessFileLoader"], [238, 11, 1, "", "WindowsRegistryFinder"], [238, 12, 1, "", "all_suffixes"]], "importlib.machinery.ExtensionFileLoader": [[238, 8, 1, "", "create_module"], [238, 8, 1, "", "exec_module"], [238, 8, 1, "", "get_code"], [238, 8, 1, "", "get_filename"], [238, 8, 1, "", "get_source"], [238, 8, 1, "", "is_package"], [238, 7, 1, "", "name"], [238, 7, 1, "", "path"]], "importlib.machinery.FileFinder": [[238, 8, 1, "", "find_spec"], [238, 8, 1, "", "invalidate_caches"], [238, 7, 1, "", "path"], [238, 8, 1, "", "path_hook"]], "importlib.machinery.ModuleSpec": [[238, 7, 1, "", "cached"], [238, 7, 1, "", "has_location"], [238, 7, 1, "", "loader"], [238, 7, 1, "", "loader_state"], [238, 7, 1, "", "name"], [238, 7, 1, "", "origin"], [238, 7, 1, "", "parent"], [238, 7, 1, "", "submodule_search_locations"]], "importlib.machinery.PathFinder": [[238, 8, 1, "", "find_spec"], [238, 8, 1, "", "invalidate_caches"]], "importlib.machinery.SourceFileLoader": [[238, 8, 1, "", "is_package"], [238, 8, 1, "", "load_module"], [238, 7, 1, "", "name"], [238, 7, 1, "", "path"], [238, 8, 1, "", "path_stats"], [238, 8, 1, "", "set_data"]], "importlib.machinery.SourcelessFileLoader": [[238, 8, 1, "", "get_code"], [238, 8, 1, "", "get_source"], [238, 8, 1, "", "is_package"], [238, 8, 1, "", "load_module"], [238, 7, 1, "", "name"], [238, 7, 1, "", "path"]], "importlib.resources": [[240, 9, 1, "", "Anchor"], [241, 10, 0, "-", "abc"], [240, 12, 1, "", "as_file"], [240, 12, 1, "", "files"]], "importlib.resources.abc": [[241, 11, 1, "", "ResourceReader"], [241, 11, 1, "", "Traversable"], [241, 11, 1, "", "TraversableResources"]], "importlib.resources.abc.ResourceReader": [[241, 8, 1, "", "contents"], [241, 8, 1, "", "is_resource"], [241, 8, 1, "", "open_resource"], [241, 8, 1, "", "resource_path"]], "importlib.resources.abc.Traversable": [[241, 8, 1, "", "__truediv__"], [241, 8, 1, "", "is_dir"], [241, 8, 1, "", "is_file"], [241, 8, 1, "", "iterdir"], [241, 8, 1, "", "joinpath"], [241, 7, 1, "", "name"], [241, 8, 1, "", "open"], [241, 8, 1, "", "read_bytes"], [241, 8, 1, "", "read_text"]], "importlib.resources.abc.TraversableResources": [[241, 8, 1, "", "files"]], "importlib.util": [[238, 11, 1, "", "LazyLoader"], [238, 7, 1, "", "MAGIC_NUMBER"], [238, 12, 1, "", "_incompatible_extension_module_restrictions"], [238, 12, 1, "", "cache_from_source"], [238, 12, 1, "", "decode_source"], [238, 12, 1, "", "find_spec"], [238, 12, 1, "", "module_from_spec"], [238, 12, 1, "", "resolve_name"], [238, 12, 1, "", "source_from_cache"], [238, 12, 1, "", "source_hash"], [238, 12, 1, "", "spec_from_file_location"], [238, 12, 1, "", "spec_from_loader"]], "importlib.util.LazyLoader": [[238, 8, 1, "", "factory"]], "inspect": [[243, 11, 1, "", "BoundArguments"], [243, 11, 1, "", "BufferFlags"], [243, 9, 1, "", "CO_ASYNC_GENERATOR"], [243, 9, 1, "", "CO_COROUTINE"], [243, 9, 1, "", "CO_GENERATOR"], [243, 9, 1, "", "CO_ITERABLE_COROUTINE"], [243, 9, 1, "", "CO_NESTED"], [243, 9, 1, "", "CO_NEWLOCALS"], [243, 9, 1, "", "CO_OPTIMIZED"], [243, 9, 1, "", "CO_VARARGS"], [243, 9, 1, "", "CO_VARKEYWORDS"], [243, 11, 1, "", "FrameInfo"], [243, 11, 1, "", "Parameter"], [243, 11, 1, "", "Signature"], [243, 11, 1, "", "Traceback"], [243, 12, 1, "", "cleandoc"], [243, 12, 1, "", "currentframe"], [243, 12, 1, "", "formatargvalues"], [243, 12, 1, "", "get_annotations"], [243, 12, 1, "", "getargvalues"], [243, 12, 1, "", "getasyncgenlocals"], [243, 12, 1, "", "getasyncgenstate"], [243, 12, 1, "", "getattr_static"], [243, 12, 1, "", "getcallargs"], [243, 12, 1, "", "getclasstree"], [243, 12, 1, "", "getclosurevars"], [243, 12, 1, "", "getcomments"], [243, 12, 1, "", "getcoroutinelocals"], [243, 12, 1, "", "getcoroutinestate"], [243, 12, 1, "", "getdoc"], [243, 12, 1, "", "getfile"], [243, 12, 1, "", "getframeinfo"], [243, 12, 1, "", "getfullargspec"], [243, 12, 1, "", "getgeneratorlocals"], [243, 12, 1, "", "getgeneratorstate"], [243, 12, 1, "", "getinnerframes"], [243, 12, 1, "", "getmembers"], [243, 12, 1, "", "getmembers_static"], [243, 12, 1, "", "getmodule"], [243, 12, 1, "", "getmodulename"], [243, 12, 1, "", "getmro"], [243, 12, 1, "", "getouterframes"], [243, 12, 1, "", "getsource"], [243, 12, 1, "", "getsourcefile"], [243, 12, 1, "", "getsourcelines"], [243, 12, 1, "", "isabstract"], [243, 12, 1, "", "isasyncgen"], [243, 12, 1, "", "isasyncgenfunction"], [243, 12, 1, "", "isawaitable"], [243, 12, 1, "", "isbuiltin"], [243, 12, 1, "", "isclass"], [243, 12, 1, "", "iscode"], [243, 12, 1, "", "iscoroutine"], [243, 12, 1, "", "iscoroutinefunction"], [243, 12, 1, "", "isdatadescriptor"], [243, 12, 1, "", "isframe"], [243, 12, 1, "", "isfunction"], [243, 12, 1, "", "isgenerator"], [243, 12, 1, "", "isgeneratorfunction"], [243, 12, 1, "", "isgetsetdescriptor"], [243, 12, 1, "", "ismemberdescriptor"], [243, 12, 1, "", "ismethod"], [243, 12, 1, "", "ismethoddescriptor"], [243, 12, 1, "", "ismethodwrapper"], [243, 12, 1, "", "ismodule"], [243, 12, 1, "", "isroutine"], [243, 12, 1, "", "istraceback"], [243, 12, 1, "", "markcoroutinefunction"], [243, 12, 1, "", "signature"], [243, 12, 1, "", "stack"], [243, 12, 1, "", "trace"], [243, 12, 1, "", "unwrap"], [243, 14, 1, "cmdoption-inspect-details", "--details"]], "inspect.BoundArguments": [[243, 8, 1, "", "apply_defaults"], [243, 7, 1, "", "args"], [243, 7, 1, "", "arguments"], [243, 7, 1, "", "kwargs"], [243, 7, 1, "", "signature"]], "inspect.BufferFlags": [[243, 7, 1, "", "ANY_CONTIGUOUS"], [243, 7, 1, "", "CONTIG"], [243, 7, 1, "", "CONTIG_RO"], [243, 7, 1, "", "C_CONTIGUOUS"], [243, 7, 1, "", "FORMAT"], [243, 7, 1, "", "FULL"], [243, 7, 1, "", "FULL_RO"], [243, 7, 1, "", "F_CONTIGUOUS"], [243, 7, 1, "", "INDIRECT"], [243, 7, 1, "", "ND"], [243, 7, 1, "", "READ"], [243, 7, 1, "", "RECORDS"], [243, 7, 1, "", "RECORDS_RO"], [243, 7, 1, "", "SIMPLE"], [243, 7, 1, "", "STRIDED"], [243, 7, 1, "", "STRIDED_RO"], [243, 7, 1, "", "STRIDES"], [243, 7, 1, "", "WRITABLE"], [243, 7, 1, "", "WRITE"]], "inspect.FrameInfo": [[243, 7, 1, "", "code_context"], [243, 7, 1, "", "filename"], [243, 7, 1, "", "frame"], [243, 7, 1, "", "function"], [243, 7, 1, "", "index"], [243, 7, 1, "", "lineno"], [243, 7, 1, "", "positions"]], "inspect.Parameter": [[243, 7, 1, "", "annotation"], [243, 7, 1, "", "default"], [243, 7, 1, "", "empty"], [243, 7, 1, "", "kind"], [243, 7, 1, "", "name"], [243, 8, 1, "", "replace"]], "inspect.Parameter.kind": [[243, 7, 1, "", "description"]], "inspect.Signature": [[243, 8, 1, "", "bind"], [243, 8, 1, "", "bind_partial"], [243, 7, 1, "", "empty"], [243, 8, 1, "", "from_callable"], [243, 7, 1, "", "parameters"], [243, 8, 1, "", "replace"], [243, 7, 1, "", "return_annotation"]], "inspect.Traceback": [[243, 7, 1, "", "code_context"], [243, 7, 1, "", "filename"], [243, 7, 1, "", "function"], [243, 7, 1, "", "index"], [243, 7, 1, "", "lineno"], [243, 7, 1, "", "positions"]], "instance": [[324, 7, 1, "", "__class__"]], "int": [[324, 8, 1, "", "as_integer_ratio"], [324, 8, 1, "", "bit_count"], [324, 8, 1, "", "bit_length"], [324, 8, 1, "", "from_bytes"], [324, 8, 1, "", "is_integer"], [324, 8, 1, "", "to_bytes"]], "io": [[246, 6, 1, "", "BlockingIOError"], [246, 11, 1, "", "BufferedIOBase"], [246, 11, 1, "", "BufferedRWPair"], [246, 11, 1, "", "BufferedRandom"], [246, 11, 1, "", "BufferedReader"], [246, 11, 1, "", "BufferedWriter"], [246, 11, 1, "", "BytesIO"], [246, 9, 1, "", "DEFAULT_BUFFER_SIZE"], [246, 11, 1, "", "FileIO"], [246, 11, 1, "", "IOBase"], [246, 11, 1, "", "IncrementalNewlineDecoder"], [246, 11, 1, "", "RawIOBase"], [246, 11, 1, "", "StringIO"], [246, 11, 1, "", "TextIOBase"], [246, 11, 1, "", "TextIOWrapper"], [246, 6, 1, "", "UnsupportedOperation"], [246, 12, 1, "", "open"], [246, 12, 1, "", "open_code"], [246, 12, 1, "", "text_encoding"]], "io.BufferedIOBase": [[246, 8, 1, "", "detach"], [246, 7, 1, "", "raw"], [246, 8, 1, "", "read"], [246, 8, 1, "", "read1"], [246, 8, 1, "", "readinto"], [246, 8, 1, "", "readinto1"], [246, 8, 1, "", "write"]], "io.BufferedReader": [[246, 8, 1, "", "peek"], [246, 8, 1, "", "read"], [246, 8, 1, "", "read1"]], "io.BufferedWriter": [[246, 8, 1, "", "flush"], [246, 8, 1, "", "write"]], "io.BytesIO": [[246, 8, 1, "", "getbuffer"], [246, 8, 1, "", "getvalue"], [246, 8, 1, "", "read1"], [246, 8, 1, "", "readinto1"]], "io.FileIO": [[246, 7, 1, "", "mode"], [246, 7, 1, "", "name"]], "io.IOBase": [[246, 8, 1, "", "__del__"], [246, 8, 1, "", "close"], [246, 7, 1, "", "closed"], [246, 8, 1, "", "fileno"], [246, 8, 1, "", "flush"], [246, 8, 1, "", "isatty"], [246, 8, 1, "", "readable"], [246, 8, 1, "", "readline"], [246, 8, 1, "", "readlines"], [246, 8, 1, "", "seek"], [246, 8, 1, "", "seekable"], [246, 8, 1, "", "tell"], [246, 8, 1, "", "truncate"], [246, 8, 1, "", "writable"], [246, 8, 1, "", "writelines"]], "io.RawIOBase": [[246, 8, 1, "", "read"], [246, 8, 1, "", "readall"], [246, 8, 1, "", "readinto"], [246, 8, 1, "", "write"]], "io.StringIO": [[246, 8, 1, "", "getvalue"]], "io.TextIOBase": [[246, 7, 1, "", "buffer"], [246, 8, 1, "", "detach"], [246, 7, 1, "", "encoding"], [246, 7, 1, "", "errors"], [246, 7, 1, "", "newlines"], [246, 8, 1, "", "read"], [246, 8, 1, "", "readline"], [246, 8, 1, "", "seek"], [246, 8, 1, "", "tell"], [246, 8, 1, "", "write"]], "io.TextIOWrapper": [[246, 7, 1, "", "line_buffering"], [246, 8, 1, "", "reconfigure"], [246, 8, 1, "", "seek"], [246, 8, 1, "", "tell"], [246, 7, 1, "", "write_through"]], "ipaddress": [[247, 6, 1, "", "AddressValueError"], [247, 11, 1, "", "IPv4Address"], [247, 11, 1, "", "IPv4Interface"], [247, 11, 1, "", "IPv4Network"], [247, 11, 1, "", "IPv6Address"], [247, 11, 1, "", "IPv6Interface"], [247, 11, 1, "", "IPv6Network"], [247, 6, 1, "", "NetmaskValueError"], [247, 12, 1, "", "collapse_addresses"], [247, 12, 1, "", "get_mixed_type_key"], [247, 12, 1, "", "ip_address"], [247, 12, 1, "", "ip_interface"], [247, 12, 1, "", "ip_network"], [247, 12, 1, "", "summarize_address_range"], [247, 12, 1, "", "v4_int_to_packed"], [247, 12, 1, "", "v6_int_to_packed"]], "ipaddress.IPv4Address": [[247, 8, 1, "", "__format__"], [247, 7, 1, "", "compressed"], [247, 7, 1, "", "exploded"], [247, 7, 1, "", "is_global"], [247, 7, 1, "", "is_link_local"], [247, 7, 1, "", "is_loopback"], [247, 7, 1, "", "is_multicast"], [247, 7, 1, "", "is_private"], [247, 7, 1, "", "is_reserved"], [247, 7, 1, "", "is_unspecified"], [247, 7, 1, "", "max_prefixlen"], [247, 7, 1, "", "packed"], [247, 7, 1, "", "reverse_pointer"], [247, 7, 1, "", "version"]], "ipaddress.IPv4Interface": [[247, 7, 1, "", "ip"], [247, 7, 1, "", "network"], [247, 7, 1, "", "with_hostmask"], [247, 7, 1, "", "with_netmask"], [247, 7, 1, "", "with_prefixlen"]], "ipaddress.IPv4Network": [[247, 8, 1, "", "address_exclude"], [247, 7, 1, "", "broadcast_address"], [247, 8, 1, "", "compare_networks"], [247, 7, 1, "", "compressed"], [247, 7, 1, "", "exploded"], [247, 7, 1, "", "hostmask"], [247, 8, 1, "", "hosts"], [247, 7, 1, "", "is_link_local"], [247, 7, 1, "", "is_loopback"], [247, 7, 1, "", "is_multicast"], [247, 7, 1, "", "is_private"], [247, 7, 1, "", "is_reserved"], [247, 7, 1, "", "is_unspecified"], [247, 7, 1, "", "max_prefixlen"], [247, 7, 1, "", "netmask"], [247, 7, 1, "", "network_address"], [247, 7, 1, "", "num_addresses"], [247, 8, 1, "", "overlaps"], [247, 7, 1, "", "prefixlen"], [247, 8, 1, "", "subnet_of"], [247, 8, 1, "", "subnets"], [247, 8, 1, "", "supernet"], [247, 8, 1, "", "supernet_of"], [247, 7, 1, "", "version"], [247, 7, 1, "", "with_hostmask"], [247, 7, 1, "", "with_netmask"], [247, 7, 1, "", "with_prefixlen"]], "ipaddress.IPv6Address": [[247, 8, 1, "", "__format__"], [247, 7, 1, "", "compressed"], [247, 7, 1, "", "exploded"], [247, 7, 1, "", "ipv4_mapped"], [247, 7, 1, "", "is_global"], [247, 7, 1, "", "is_link_local"], [247, 7, 1, "", "is_loopback"], [247, 7, 1, "", "is_multicast"], [247, 7, 1, "", "is_private"], [247, 7, 1, "", "is_reserved"], [247, 7, 1, "", "is_site_local"], [247, 7, 1, "", "is_unspecified"], [247, 7, 1, "", "max_prefixlen"], [247, 7, 1, "", "packed"], [247, 7, 1, "", "reverse_pointer"], [247, 7, 1, "", "scope_id"], [247, 7, 1, "", "sixtofour"], [247, 7, 1, "", "teredo"], [247, 7, 1, "", "version"]], "ipaddress.IPv6Interface": [[247, 7, 1, "", "ip"], [247, 7, 1, "", "network"], [247, 7, 1, "", "with_hostmask"], [247, 7, 1, "", "with_netmask"], [247, 7, 1, "", "with_prefixlen"]], "ipaddress.IPv6Network": [[247, 8, 1, "", "address_exclude"], [247, 7, 1, "", "broadcast_address"], [247, 8, 1, "", "compare_networks"], [247, 7, 1, "", "compressed"], [247, 7, 1, "", "exploded"], [247, 7, 1, "", "hostmask"], [247, 8, 1, "", "hosts"], [247, 7, 1, "", "is_link_local"], [247, 7, 1, "", "is_loopback"], [247, 7, 1, "", "is_multicast"], [247, 7, 1, "", "is_private"], [247, 7, 1, "", "is_reserved"], [247, 7, 1, "", "is_site_local"], [247, 7, 1, "", "is_unspecified"], [247, 7, 1, "", "max_prefixlen"], [247, 7, 1, "", "netmask"], [247, 7, 1, "", "network_address"], [247, 7, 1, "", "num_addresses"], [247, 8, 1, "", "overlaps"], [247, 7, 1, "", "prefixlen"], [247, 8, 1, "", "subnet_of"], [247, 8, 1, "", "subnets"], [247, 8, 1, "", "supernet"], [247, 8, 1, "", "supernet_of"], [247, 7, 1, "", "version"], [247, 7, 1, "", "with_hostmask"], [247, 7, 1, "", "with_netmask"], [247, 7, 1, "", "with_prefixlen"]], "iterator": [[324, 8, 1, "", "__iter__"], [324, 8, 1, "", "__next__"]], "itertools": [[249, 12, 1, "", "accumulate"], [249, 12, 1, "", "batched"], [249, 12, 1, "", "chain"], [249, 12, 1, "", "combinations"], [249, 12, 1, "", "combinations_with_replacement"], [249, 12, 1, "", "compress"], [249, 12, 1, "", "count"], [249, 12, 1, "", "cycle"], [249, 12, 1, "", "dropwhile"], [249, 12, 1, "", "filterfalse"], [249, 12, 1, "", "groupby"], [249, 12, 1, "", "islice"], [249, 12, 1, "", "pairwise"], [249, 12, 1, "", "permutations"], [249, 12, 1, "", "product"], [249, 12, 1, "", "repeat"], [249, 12, 1, "", "starmap"], [249, 12, 1, "", "takewhile"], [249, 12, 1, "", "tee"], [249, 12, 1, "", "zip_longest"]], "itertools.chain": [[249, 8, 1, "", "from_iterable"]], "json": [[250, 6, 1, "", "JSONDecodeError"], [250, 11, 1, "", "JSONDecoder"], [250, 11, 1, "", "JSONEncoder"], [250, 12, 1, "", "dump"], [250, 12, 1, "", "dumps"], [250, 12, 1, "", "load"], [250, 12, 1, "", "loads"], [250, 10, 0, "-", "tool"]], "json.JSONDecodeError": [[250, 7, 1, "", "colno"], [250, 7, 1, "", "doc"], [250, 7, 1, "", "lineno"], [250, 7, 1, "", "msg"], [250, 7, 1, "", "pos"]], "json.JSONDecoder": [[250, 8, 1, "", "decode"], [250, 8, 1, "", "raw_decode"]], "json.JSONEncoder": [[250, 8, 1, "", "default"], [250, 8, 1, "", "encode"], [250, 8, 1, "", "iterencode"]], "keyword": [[251, 12, 1, "", "iskeyword"], [251, 12, 1, "", "issoftkeyword"], [251, 9, 1, "", "kwlist"], [251, 9, 1, "", "softkwlist"]], "linecache": [[253, 12, 1, "", "checkcache"], [253, 12, 1, "", "clearcache"], [253, 12, 1, "", "getline"], [253, 12, 1, "", "lazycache"]], "list": [[324, 8, 1, "", "sort"]], "locale": [[254, 9, 1, "", "ALT_DIGITS"], [254, 9, 1, "", "CHAR_MAX"], [254, 9, 1, "", "CODESET"], [254, 9, 1, "", "CRNCYSTR"], [254, 9, 1, "", "D_FMT"], [254, 9, 1, "", "D_T_FMT"], [254, 9, 1, "", "ERA"], [254, 9, 1, "", "ERA_D_FMT"], [254, 9, 1, "", "ERA_D_T_FMT"], [254, 9, 1, "", "ERA_T_FMT"], [254, 6, 1, "", "Error"], [254, 9, 1, "", "LC_ALL"], [254, 9, 1, "", "LC_COLLATE"], [254, 9, 1, "", "LC_CTYPE"], [254, 9, 1, "", "LC_MESSAGES"], [254, 9, 1, "", "LC_MONETARY"], [254, 9, 1, "", "LC_NUMERIC"], [254, 9, 1, "", "LC_TIME"], [254, 9, 1, "", "NOEXPR"], [254, 9, 1, "", "RADIXCHAR"], [254, 9, 1, "", "THOUSEP"], [254, 9, 1, "", "T_FMT"], [254, 9, 1, "", "T_FMT_AMPM"], [254, 9, 1, "", "YESEXPR"], [254, 12, 1, "", "atof"], [254, 12, 1, "", "atoi"], [254, 12, 1, "", "bindtextdomain"], [254, 12, 1, "", "currency"], [254, 12, 1, "", "dcgettext"], [254, 12, 1, "", "delocalize"], [254, 12, 1, "", "dgettext"], [254, 12, 1, "", "format_string"], [254, 12, 1, "", "getdefaultlocale"], [254, 12, 1, "", "getencoding"], [254, 12, 1, "", "getlocale"], [254, 12, 1, "", "getpreferredencoding"], [254, 12, 1, "", "gettext"], [254, 12, 1, "", "localeconv"], [254, 12, 1, "", "localize"], [254, 12, 1, "", "nl_langinfo"], [254, 12, 1, "", "normalize"], [254, 12, 1, "", "setlocale"], [254, 12, 1, "", "str"], [254, 12, 1, "", "strcoll"], [254, 12, 1, "", "strxfrm"], [254, 12, 1, "", "textdomain"]], "logging": [[255, 11, 1, "", "BufferingFormatter"], [255, 9, 1, "", "CRITICAL"], [255, 9, 1, "", "DEBUG"], [255, 9, 1, "", "ERROR"], [257, 11, 1, "", "FileHandler"], [255, 11, 1, "", "Filter"], [255, 11, 1, "", "Formatter"], [255, 11, 1, "", "Handler"], [255, 9, 1, "", "INFO"], [255, 11, 1, "", "LogRecord"], [255, 11, 1, "", "Logger"], [255, 11, 1, "", "LoggerAdapter"], [255, 9, 1, "", "NOTSET"], [257, 11, 1, "", "NullHandler"], [257, 11, 1, "", "StreamHandler"], [255, 9, 1, "", "WARNING"], [255, 12, 1, "", "addLevelName"], [255, 12, 1, "", "basicConfig"], [255, 12, 1, "", "captureWarnings"], [256, 10, 0, "-", "config"], [255, 12, 1, "", "critical"], [255, 12, 1, "", "debug"], [255, 12, 1, "", "disable"], [255, 12, 1, "", "error"], [255, 12, 1, "", "exception"], [255, 12, 1, "", "getHandlerByName"], [255, 12, 1, "", "getHandlerNames"], [255, 12, 1, "", "getLevelName"], [255, 12, 1, "", "getLevelNamesMapping"], [255, 12, 1, "", "getLogRecordFactory"], [255, 12, 1, "", "getLogger"], [255, 12, 1, "", "getLoggerClass"], [257, 10, 0, "-", "handlers"], [255, 12, 1, "", "info"], [255, 7, 1, "", "lastResort"], [255, 12, 1, "", "log"], [255, 12, 1, "", "makeLogRecord"], [255, 12, 1, "", "setLogRecordFactory"], [255, 12, 1, "", "setLoggerClass"], [255, 12, 1, "", "shutdown"], [255, 12, 1, "", "warning"]], "logging.BufferingFormatter": [[255, 8, 1, "", "format"], [255, 8, 1, "", "formatFooter"], [255, 8, 1, "", "formatHeader"]], "logging.FileHandler": [[257, 8, 1, "", "close"], [257, 8, 1, "", "emit"]], "logging.Filter": [[255, 8, 1, "", "filter"]], "logging.Formatter": [[255, 8, 1, "", "format"], [255, 8, 1, "", "formatException"], [255, 8, 1, "", "formatStack"], [255, 8, 1, "", "formatTime"]], "logging.Handler": [[255, 8, 1, "", "__init__"], [255, 8, 1, "", "acquire"], [255, 8, 1, "", "addFilter"], [255, 8, 1, "", "close"], [255, 8, 1, "", "createLock"], [255, 8, 1, "", "emit"], [255, 8, 1, "", "filter"], [255, 8, 1, "", "flush"], [255, 8, 1, "", "format"], [255, 8, 1, "", "handle"], [255, 8, 1, "", "handleError"], [255, 8, 1, "", "release"], [255, 8, 1, "", "removeFilter"], [255, 8, 1, "", "setFormatter"], [255, 8, 1, "", "setLevel"]], "logging.LogRecord": [[255, 8, 1, "", "getMessage"]], "logging.Logger": [[255, 8, 1, "", "addFilter"], [255, 8, 1, "", "addHandler"], [255, 8, 1, "", "critical"], [255, 8, 1, "", "debug"], [255, 8, 1, "", "error"], [255, 8, 1, "", "exception"], [255, 8, 1, "", "filter"], [255, 8, 1, "", "findCaller"], [255, 8, 1, "", "getChild"], [255, 8, 1, "", "getChildren"], [255, 8, 1, "", "getEffectiveLevel"], [255, 8, 1, "", "handle"], [255, 8, 1, "", "hasHandlers"], [255, 8, 1, "", "info"], [255, 8, 1, "", "isEnabledFor"], [255, 8, 1, "", "log"], [255, 8, 1, "", "makeRecord"], [255, 7, 1, "", "propagate"], [255, 8, 1, "", "removeFilter"], [255, 8, 1, "", "removeHandler"], [255, 8, 1, "", "setLevel"], [255, 8, 1, "", "warning"]], "logging.LoggerAdapter": [[255, 7, 1, "", "_log"], [255, 7, 1, "", "manager"], [255, 8, 1, "", "process"]], "logging.NullHandler": [[257, 8, 1, "", "createLock"], [257, 8, 1, "", "emit"], [257, 8, 1, "", "handle"]], "logging.StreamHandler": [[257, 8, 1, "", "emit"], [257, 8, 1, "", "flush"], [257, 8, 1, "", "setStream"], [257, 7, 1, "", "terminator"]], "logging.config": [[256, 12, 1, "", "dictConfig"], [256, 12, 1, "", "fileConfig"], [256, 12, 1, "", "listen"], [256, 12, 1, "", "stopListening"]], "logging.handlers": [[257, 11, 1, "", "BaseRotatingHandler"], [257, 11, 1, "", "BufferingHandler"], [257, 11, 1, "", "DatagramHandler"], [257, 11, 1, "", "HTTPHandler"], [257, 11, 1, "", "MemoryHandler"], [257, 11, 1, "", "NTEventLogHandler"], [257, 11, 1, "", "QueueHandler"], [257, 11, 1, "", "QueueListener"], [257, 11, 1, "", "RotatingFileHandler"], [257, 11, 1, "", "SMTPHandler"], [257, 11, 1, "", "SocketHandler"], [257, 11, 1, "", "SysLogHandler"], [257, 11, 1, "", "TimedRotatingFileHandler"], [257, 11, 1, "", "WatchedFileHandler"]], "logging.handlers.BaseRotatingHandler": [[257, 7, 1, "", "namer"], [257, 8, 1, "", "rotate"], [257, 8, 1, "", "rotation_filename"], [257, 7, 1, "", "rotator"]], "logging.handlers.BufferingHandler": [[257, 8, 1, "", "emit"], [257, 8, 1, "", "flush"], [257, 8, 1, "", "shouldFlush"]], "logging.handlers.DatagramHandler": [[257, 8, 1, "", "emit"], [257, 8, 1, "", "makeSocket"], [257, 8, 1, "", "send"]], "logging.handlers.HTTPHandler": [[257, 8, 1, "", "emit"], [257, 8, 1, "", "mapLogRecord"]], "logging.handlers.MemoryHandler": [[257, 8, 1, "", "close"], [257, 8, 1, "", "flush"], [257, 8, 1, "", "setTarget"], [257, 8, 1, "", "shouldFlush"]], "logging.handlers.NTEventLogHandler": [[257, 8, 1, "", "close"], [257, 8, 1, "", "emit"], [257, 8, 1, "", "getEventCategory"], [257, 8, 1, "", "getEventType"], [257, 8, 1, "", "getMessageID"]], "logging.handlers.QueueHandler": [[257, 8, 1, "", "emit"], [257, 8, 1, "", "enqueue"], [257, 7, 1, "", "listener"], [257, 8, 1, "", "prepare"]], "logging.handlers.QueueListener": [[257, 8, 1, "", "dequeue"], [257, 8, 1, "", "enqueue_sentinel"], [257, 8, 1, "", "handle"], [257, 8, 1, "", "prepare"], [257, 8, 1, "", "start"], [257, 8, 1, "", "stop"]], "logging.handlers.RotatingFileHandler": [[257, 8, 1, "", "doRollover"], [257, 8, 1, "", "emit"]], "logging.handlers.SMTPHandler": [[257, 8, 1, "", "emit"], [257, 8, 1, "", "getSubject"]], "logging.handlers.SocketHandler": [[257, 8, 1, "", "close"], [257, 8, 1, "", "createSocket"], [257, 8, 1, "", "emit"], [257, 8, 1, "", "handleError"], [257, 8, 1, "", "makePickle"], [257, 8, 1, "", "makeSocket"], [257, 8, 1, "", "send"]], "logging.handlers.SysLogHandler": [[257, 8, 1, "", "close"], [257, 8, 1, "", "createSocket"], [257, 8, 1, "", "emit"], [257, 8, 1, "", "encodePriority"], [257, 8, 1, "", "mapPriority"]], "logging.handlers.TimedRotatingFileHandler": [[257, 8, 1, "", "doRollover"], [257, 8, 1, "", "emit"], [257, 8, 1, "", "getFilesToDelete"]], "logging.handlers.WatchedFileHandler": [[257, 8, 1, "", "emit"], [257, 8, 1, "", "reopenIfNeeded"]], "logging.logging.Formatter": [[98, 8, 1, "", "__init__"]], "lzma": [[258, 11, 1, "", "LZMACompressor"], [258, 11, 1, "", "LZMADecompressor"], [258, 6, 1, "", "LZMAError"], [258, 11, 1, "", "LZMAFile"], [258, 12, 1, "", "compress"], [258, 12, 1, "", "decompress"], [258, 12, 1, "", "is_check_supported"], [258, 12, 1, "", "open"]], "lzma.LZMACompressor": [[258, 8, 1, "", "compress"], [258, 8, 1, "", "flush"]], "lzma.LZMADecompressor": [[258, 7, 1, "", "check"], [258, 8, 1, "", "decompress"], [258, 7, 1, "", "eof"], [258, 7, 1, "", "needs_input"], [258, 7, 1, "", "unused_data"]], "lzma.LZMAFile": [[258, 8, 1, "", "peek"]], "mailbox": [[259, 11, 1, "", "Babyl"], [259, 11, 1, "", "BabylMessage"], [259, 6, 1, "", "Error"], [259, 6, 1, "", "ExternalClashError"], [259, 6, 1, "", "FormatError"], [259, 11, 1, "", "MH"], [259, 11, 1, "", "MHMessage"], [259, 11, 1, "", "MMDF"], [259, 11, 1, "", "MMDFMessage"], [259, 11, 1, "", "Mailbox"], [259, 11, 1, "", "Maildir"], [259, 11, 1, "", "MaildirMessage"], [259, 11, 1, "", "Message"], [259, 6, 1, "", "NoSuchMailboxError"], [259, 6, 1, "", "NotEmptyError"], [259, 11, 1, "", "mbox"], [259, 11, 1, "", "mboxMessage"]], "mailbox.Babyl": [[259, 8, 1, "", "get_file"], [259, 8, 1, "", "get_labels"], [259, 8, 1, "", "lock"], [259, 8, 1, "", "unlock"]], "mailbox.BabylMessage": [[259, 8, 1, "", "add_label"], [259, 8, 1, "", "get_labels"], [259, 8, 1, "", "get_visible"], [259, 8, 1, "", "remove_label"], [259, 8, 1, "", "set_labels"], [259, 8, 1, "", "set_visible"], [259, 8, 1, "", "update_visible"]], "mailbox.MH": [[259, 8, 1, "", "__delitem__"], [259, 8, 1, "", "add_folder"], [259, 8, 1, "", "close"], [259, 8, 1, "", "discard"], [259, 8, 1, "", "flush"], [259, 8, 1, "", "get_file"], [259, 8, 1, "", "get_folder"], [259, 8, 1, "", "get_sequences"], [259, 8, 1, "", "list_folders"], [259, 8, 1, "", "lock"], [259, 8, 1, "", "pack"], [259, 8, 1, "", "remove"], [259, 8, 1, "", "remove_folder"], [259, 8, 1, "", "set_sequences"], [259, 8, 1, "", "unlock"]], "mailbox.MHMessage": [[259, 8, 1, "", "add_sequence"], [259, 8, 1, "", "get_sequences"], [259, 8, 1, "", "remove_sequence"], [259, 8, 1, "", "set_sequences"]], "mailbox.MMDF": [[259, 8, 1, "", "get_file"], [259, 8, 1, "", "lock"], [259, 8, 1, "", "unlock"]], "mailbox.MMDFMessage": [[259, 8, 1, "", "add_flag"], [259, 8, 1, "", "get_flags"], [259, 8, 1, "", "get_from"], [259, 8, 1, "", "remove_flag"], [259, 8, 1, "", "set_flags"], [259, 8, 1, "", "set_from"]], "mailbox.Mailbox": [[259, 8, 1, "", "__contains__"], [259, 8, 1, "", "__delitem__"], [259, 8, 1, "", "__getitem__"], [259, 8, 1, "", "__iter__"], [259, 8, 1, "", "__len__"], [259, 8, 1, "", "__setitem__"], [259, 8, 1, "", "add"], [259, 8, 1, "", "clear"], [259, 8, 1, "", "close"], [259, 8, 1, "", "discard"], [259, 8, 1, "", "flush"], [259, 8, 1, "", "get"], [259, 8, 1, "", "get_bytes"], [259, 8, 1, "", "get_file"], [259, 8, 1, "", "get_message"], [259, 8, 1, "", "get_string"], [259, 8, 1, "", "items"], [259, 8, 1, "", "iteritems"], [259, 8, 1, "", "iterkeys"], [259, 8, 1, "", "itervalues"], [259, 8, 1, "", "keys"], [259, 8, 1, "", "lock"], [259, 8, 1, "", "pop"], [259, 8, 1, "", "popitem"], [259, 8, 1, "", "remove"], [259, 8, 1, "", "unlock"], [259, 8, 1, "", "update"], [259, 8, 1, "", "values"]], "mailbox.Maildir": [[259, 8, 1, "", "__setitem__"], [259, 8, 1, "", "add"], [259, 8, 1, "", "add_folder"], [259, 8, 1, "", "clean"], [259, 8, 1, "", "close"], [259, 8, 1, "", "flush"], [259, 8, 1, "", "get_file"], [259, 8, 1, "", "get_folder"], [259, 8, 1, "", "list_folders"], [259, 8, 1, "", "lock"], [259, 8, 1, "", "remove_folder"], [259, 8, 1, "", "unlock"], [259, 8, 1, "", "update"]], "mailbox.MaildirMessage": [[259, 8, 1, "", "add_flag"], [259, 8, 1, "", "get_date"], [259, 8, 1, "", "get_flags"], [259, 8, 1, "", "get_info"], [259, 8, 1, "", "get_subdir"], [259, 8, 1, "", "remove_flag"], [259, 8, 1, "", "set_date"], [259, 8, 1, "", "set_flags"], [259, 8, 1, "", "set_info"], [259, 8, 1, "", "set_subdir"]], "mailbox.mbox": [[259, 8, 1, "", "get_file"], [259, 8, 1, "", "lock"], [259, 8, 1, "", "unlock"]], "mailbox.mboxMessage": [[259, 8, 1, "", "add_flag"], [259, 8, 1, "", "get_flags"], [259, 8, 1, "", "get_from"], [259, 8, 1, "", "remove_flag"], [259, 8, 1, "", "set_flags"], [259, 8, 1, "", "set_from"]], "marshal": [[261, 12, 1, "", "dump"], [261, 12, 1, "", "dumps"], [261, 12, 1, "", "load"], [261, 12, 1, "", "loads"], [261, 9, 1, "", "version"]], "math": [[262, 12, 1, "", "acos"], [262, 12, 1, "", "acosh"], [262, 12, 1, "", "asin"], [262, 12, 1, "", "asinh"], [262, 12, 1, "", "atan"], [262, 12, 1, "", "atan2"], [262, 12, 1, "", "atanh"], [262, 12, 1, "", "cbrt"], [262, 12, 1, "", "ceil"], [262, 12, 1, "", "comb"], [262, 12, 1, "", "copysign"], [262, 12, 1, "", "cos"], [262, 12, 1, "", "cosh"], [262, 12, 1, "", "degrees"], [262, 12, 1, "", "dist"], [262, 9, 1, "", "e"], [262, 12, 1, "", "erf"], [262, 12, 1, "", "erfc"], [262, 12, 1, "", "exp"], [262, 12, 1, "", "exp2"], [262, 12, 1, "", "expm1"], [262, 12, 1, "", "fabs"], [262, 12, 1, "", "factorial"], [262, 12, 1, "", "floor"], [262, 12, 1, "", "fmod"], [262, 12, 1, "", "frexp"], [262, 12, 1, "", "fsum"], [262, 12, 1, "", "gamma"], [262, 12, 1, "", "gcd"], [262, 12, 1, "", "hypot"], [262, 9, 1, "", "inf"], [262, 12, 1, "", "isclose"], [262, 12, 1, "", "isfinite"], [262, 12, 1, "", "isinf"], [262, 12, 1, "", "isnan"], [262, 12, 1, "", "isqrt"], [262, 12, 1, "", "lcm"], [262, 12, 1, "", "ldexp"], [262, 12, 1, "", "lgamma"], [262, 12, 1, "", "log"], [262, 12, 1, "", "log10"], [262, 12, 1, "", "log1p"], [262, 12, 1, "", "log2"], [262, 12, 1, "", "modf"], [262, 9, 1, "", "nan"], [262, 12, 1, "", "nextafter"], [262, 12, 1, "", "perm"], [262, 9, 1, "", "pi"], [262, 12, 1, "", "pow"], [262, 12, 1, "", "prod"], [262, 12, 1, "", "radians"], [262, 12, 1, "", "remainder"], [262, 12, 1, "", "sin"], [262, 12, 1, "", "sinh"], [262, 12, 1, "", "sqrt"], [262, 12, 1, "", "sumprod"], [262, 12, 1, "", "tan"], [262, 12, 1, "", "tanh"], [262, 9, 1, "", "tau"], [262, 12, 1, "", "trunc"], [262, 12, 1, "", "ulp"]], "memoryview": [[324, 8, 1, "", "__eq__"], [324, 7, 1, "", "c_contiguous"], [324, 8, 1, "", "cast"], [324, 7, 1, "", "contiguous"], [324, 7, 1, "", "f_contiguous"], [324, 7, 1, "", "format"], [324, 8, 1, "", "hex"], [324, 7, 1, "", "itemsize"], [324, 7, 1, "", "nbytes"], [324, 7, 1, "", "ndim"], [324, 7, 1, "", "obj"], [324, 7, 1, "", "readonly"], [324, 8, 1, "", "release"], [324, 7, 1, "", "shape"], [324, 7, 1, "", "strides"], [324, 7, 1, "", "suboffsets"], [324, 8, 1, "", "tobytes"], [324, 8, 1, "", "tolist"], [324, 8, 1, "", "toreadonly"]], "mimetypes": [[263, 11, 1, "", "MimeTypes"], [263, 12, 1, "", "add_type"], [263, 9, 1, "", "common_types"], [263, 9, 1, "", "encodings_map"], [263, 12, 1, "", "guess_all_extensions"], [263, 12, 1, "", "guess_extension"], [263, 12, 1, "", "guess_type"], [263, 12, 1, "", "init"], [263, 9, 1, "", "inited"], [263, 9, 1, "", "knownfiles"], [263, 12, 1, "", "read_mime_types"], [263, 9, 1, "", "suffix_map"], [263, 9, 1, "", "types_map"]], "mimetypes.MimeTypes": [[263, 7, 1, "", "encodings_map"], [263, 8, 1, "", "guess_all_extensions"], [263, 8, 1, "", "guess_extension"], [263, 8, 1, "", "guess_type"], [263, 8, 1, "", "read"], [263, 8, 1, "", "read_windows_registry"], [263, 8, 1, "", "readfp"], [263, 7, 1, "", "suffix_map"], [263, 7, 1, "", "types_map"], [263, 7, 1, "", "types_map_inv"]], "mmap": [[265, 9, 1, "", "MADV_AUTOSYNC"], [265, 9, 1, "", "MADV_CORE"], [265, 9, 1, "", "MADV_DODUMP"], [265, 9, 1, "", "MADV_DOFORK"], [265, 9, 1, "", "MADV_DONTDUMP"], [265, 9, 1, "", "MADV_DONTFORK"], [265, 9, 1, "", "MADV_DONTNEED"], [265, 9, 1, "", "MADV_FREE"], [265, 9, 1, "", "MADV_FREE_REUSABLE"], [265, 9, 1, "", "MADV_FREE_REUSE"], [265, 9, 1, "", "MADV_HUGEPAGE"], [265, 9, 1, "", "MADV_HWPOISON"], [265, 9, 1, "", "MADV_MERGEABLE"], [265, 9, 1, "", "MADV_NOCORE"], [265, 9, 1, "", "MADV_NOHUGEPAGE"], [265, 9, 1, "", "MADV_NORMAL"], [265, 9, 1, "", "MADV_NOSYNC"], [265, 9, 1, "", "MADV_PROTECT"], [265, 9, 1, "", "MADV_RANDOM"], [265, 9, 1, "", "MADV_REMOVE"], [265, 9, 1, "", "MADV_SEQUENTIAL"], [265, 9, 1, "", "MADV_SOFT_OFFLINE"], [265, 9, 1, "", "MADV_UNMERGEABLE"], [265, 9, 1, "", "MADV_WILLNEED"], [265, 9, 1, "", "MAP_ALIGNED_SUPER"], [265, 9, 1, "", "MAP_ANON"], [265, 9, 1, "", "MAP_ANONYMOUS"], [265, 9, 1, "", "MAP_CONCEAL"], [265, 9, 1, "", "MAP_DENYWRITE"], [265, 9, 1, "", "MAP_EXECUTABLE"], [265, 9, 1, "", "MAP_POPULATE"], [265, 9, 1, "", "MAP_PRIVATE"], [265, 9, 1, "", "MAP_SHARED"], [265, 9, 1, "", "MAP_STACK"], [265, 11, 1, "", "mmap"]], "mmap.mmap": [[265, 8, 1, "", "close"], [265, 7, 1, "", "closed"], [265, 8, 1, "", "find"], [265, 8, 1, "", "flush"], [265, 8, 1, "", "madvise"], [265, 8, 1, "", "move"], [265, 8, 1, "", "read"], [265, 8, 1, "", "read_byte"], [265, 8, 1, "", "readline"], [265, 8, 1, "", "resize"], [265, 8, 1, "", "rfind"], [265, 8, 1, "", "seek"], [265, 8, 1, "", "size"], [265, 8, 1, "", "tell"], [265, 8, 1, "", "write"], [265, 8, 1, "", "write_byte"]], "modulefinder": [[266, 12, 1, "", "AddPackagePath"], [266, 11, 1, "", "ModuleFinder"], [266, 12, 1, "", "ReplacePackage"]], "modulefinder.ModuleFinder": [[266, 7, 1, "", "modules"], [266, 8, 1, "", "report"], [266, 8, 1, "", "run_script"]], "msvcrt": [[268, 9, 1, "", "CRTDBG_MODE_DEBUG"], [268, 9, 1, "", "CRTDBG_MODE_FILE"], [268, 9, 1, "", "CRTDBG_MODE_WNDW"], [268, 9, 1, "", "CRTDBG_REPORT_MODE"], [268, 9, 1, "", "CRT_ASSERT"], [268, 9, 1, "", "CRT_ERROR"], [268, 9, 1, "", "CRT_WARN"], [268, 12, 1, "", "CrtSetReportFile"], [268, 12, 1, "", "CrtSetReportMode"], [268, 9, 1, "", "LK_LOCK"], [268, 9, 1, "", "LK_NBLCK"], [268, 9, 1, "", "LK_NBRLCK"], [268, 9, 1, "", "LK_RLCK"], [268, 9, 1, "", "LK_UNLCK"], [268, 9, 1, "", "OUT_TO_DEFAULT"], [268, 9, 1, "", "OUT_TO_MSGBOX"], [268, 9, 1, "", "OUT_TO_STDERR"], [268, 9, 1, "", "REPORT_ERRMODE"], [268, 12, 1, "", "get_osfhandle"], [268, 12, 1, "", "getch"], [268, 12, 1, "", "getche"], [268, 12, 1, "", "getwch"], [268, 12, 1, "", "getwche"], [268, 12, 1, "", "heapmin"], [268, 12, 1, "", "kbhit"], [268, 12, 1, "", "locking"], [268, 12, 1, "", "open_osfhandle"], [268, 12, 1, "", "putch"], [268, 12, 1, "", "putwch"], [268, 12, 1, "", "set_error_mode"], [268, 12, 1, "", "setmode"], [268, 12, 1, "", "ungetch"], [268, 12, 1, "", "ungetwch"]], "multiprocessing": [[269, 12, 1, "", "Array"], [269, 6, 1, "", "AuthenticationError"], [269, 11, 1, "", "Barrier"], [269, 11, 1, "", "BoundedSemaphore"], [269, 6, 1, "", "BufferTooShort"], [269, 11, 1, "", "Condition"], [269, 11, 1, "", "Event"], [269, 11, 1, "", "JoinableQueue"], [269, 11, 1, "", "Lock"], [269, 12, 1, "", "Manager"], [269, 12, 1, "", "Pipe"], [269, 11, 1, "", "Process"], [269, 6, 1, "", "ProcessError"], [269, 11, 1, "", "Queue"], [269, 11, 1, "", "RLock"], [269, 11, 1, "", "Semaphore"], [269, 11, 1, "", "SimpleQueue"], [269, 6, 1, "", "TimeoutError"], [269, 12, 1, "", "Value"], [269, 12, 1, "", "active_children"], [269, 10, 0, "-", "connection"], [269, 12, 1, "", "cpu_count"], [269, 12, 1, "", "current_process"], [269, 10, 0, "-", "dummy"], [269, 12, 1, "", "freeze_support"], [269, 12, 1, "", "get_all_start_methods"], [269, 12, 1, "", "get_context"], [269, 12, 1, "", "get_logger"], [269, 12, 1, "", "get_start_method"], [269, 12, 1, "", "log_to_stderr"], [269, 10, 0, "-", "managers"], [269, 12, 1, "", "parent_process"], [269, 10, 0, "-", "pool"], [269, 12, 1, "", "set_executable"], [269, 12, 1, "", "set_forkserver_preload"], [269, 12, 1, "", "set_start_method"], [270, 10, 0, "-", "shared_memory"], [269, 10, 0, "-", "sharedctypes"]], "multiprocessing.JoinableQueue": [[269, 8, 1, "", "join"], [269, 8, 1, "", "task_done"]], "multiprocessing.Lock": [[269, 8, 1, "", "acquire"], [269, 8, 1, "", "release"]], "multiprocessing.Process": [[269, 7, 1, "", "authkey"], [269, 8, 1, "", "close"], [269, 7, 1, "", "daemon"], [269, 7, 1, "", "exitcode"], [269, 8, 1, "", "is_alive"], [269, 8, 1, "", "join"], [269, 8, 1, "", "kill"], [269, 7, 1, "", "name"], [269, 7, 1, "", "pid"], [269, 8, 1, "", "run"], [269, 7, 1, "", "sentinel"], [269, 8, 1, "", "start"], [269, 8, 1, "", "terminate"]], "multiprocessing.Queue": [[269, 8, 1, "", "cancel_join_thread"], [269, 8, 1, "", "close"], [269, 8, 1, "", "empty"], [269, 8, 1, "", "full"], [269, 8, 1, "", "get"], [269, 8, 1, "", "get_nowait"], [269, 8, 1, "", "join_thread"], [269, 8, 1, "", "put"], [269, 8, 1, "", "put_nowait"], [269, 8, 1, "", "qsize"]], "multiprocessing.RLock": [[269, 8, 1, "", "acquire"], [269, 8, 1, "", "release"]], "multiprocessing.SimpleQueue": [[269, 8, 1, "", "close"], [269, 8, 1, "", "empty"], [269, 8, 1, "", "get"], [269, 8, 1, "", "put"]], "multiprocessing.connection": [[269, 12, 1, "", "Client"], [269, 11, 1, "", "Connection"], [269, 11, 1, "", "Listener"], [269, 12, 1, "", "answer_challenge"], [269, 12, 1, "", "deliver_challenge"], [269, 12, 1, "", "wait"]], "multiprocessing.connection.Connection": [[269, 8, 1, "", "close"], [269, 8, 1, "", "fileno"], [269, 8, 1, "", "poll"], [269, 8, 1, "", "recv"], [269, 8, 1, "", "recv_bytes"], [269, 8, 1, "", "recv_bytes_into"], [269, 8, 1, "", "send"], [269, 8, 1, "", "send_bytes"]], "multiprocessing.connection.Listener": [[269, 8, 1, "", "accept"], [269, 7, 1, "", "address"], [269, 8, 1, "", "close"], [269, 7, 1, "", "last_accepted"]], "multiprocessing.managers": [[269, 11, 1, "", "BaseManager"], [269, 11, 1, "", "BaseProxy"], [269, 11, 1, "", "Namespace"], [270, 11, 1, "", "SharedMemoryManager"], [269, 11, 1, "", "SyncManager"]], "multiprocessing.managers.BaseManager": [[269, 7, 1, "", "address"], [269, 8, 1, "", "connect"], [269, 8, 1, "", "get_server"], [269, 8, 1, "", "register"], [269, 8, 1, "", "shutdown"], [269, 8, 1, "", "start"]], "multiprocessing.managers.BaseProxy": [[269, 8, 1, "", "__repr__"], [269, 8, 1, "", "__str__"], [269, 8, 1, "", "_callmethod"], [269, 8, 1, "", "_getvalue"]], "multiprocessing.managers.SharedMemoryManager": [[270, 8, 1, "", "ShareableList"], [270, 8, 1, "", "SharedMemory"]], "multiprocessing.managers.SyncManager": [[269, 8, 1, "", "Array"], [269, 8, 1, "", "Barrier"], [269, 8, 1, "", "BoundedSemaphore"], [269, 8, 1, "", "Condition"], [269, 8, 1, "", "Event"], [269, 8, 1, "", "Lock"], [269, 8, 1, "", "Namespace"], [269, 8, 1, "", "Queue"], [269, 8, 1, "", "RLock"], [269, 8, 1, "", "Semaphore"], [269, 8, 1, "", "Value"], [269, 8, 1, "", "dict"], [269, 8, 1, "", "list"]], "multiprocessing.pool": [[269, 11, 1, "", "AsyncResult"], [269, 11, 1, "", "Pool"], [269, 11, 1, "", "ThreadPool"]], "multiprocessing.pool.AsyncResult": [[269, 8, 1, "", "get"], [269, 8, 1, "", "ready"], [269, 8, 1, "", "successful"], [269, 8, 1, "", "wait"]], "multiprocessing.pool.Pool": [[269, 8, 1, "", "apply"], [269, 8, 1, "", "apply_async"], [269, 8, 1, "", "close"], [269, 8, 1, "", "imap"], [269, 8, 1, "", "imap_unordered"], [269, 8, 1, "", "join"], [269, 8, 1, "", "map"], [269, 8, 1, "", "map_async"], [269, 8, 1, "", "starmap"], [269, 8, 1, "", "starmap_async"], [269, 8, 1, "", "terminate"]], "multiprocessing.shared_memory": [[270, 11, 1, "", "ShareableList"], [270, 11, 1, "", "SharedMemory"]], "multiprocessing.shared_memory.ShareableList": [[270, 8, 1, "", "count"], [270, 7, 1, "", "format"], [270, 8, 1, "", "index"], [270, 7, 1, "", "shm"]], "multiprocessing.shared_memory.SharedMemory": [[270, 7, 1, "", "buf"], [270, 8, 1, "", "close"], [270, 7, 1, "", "name"], [270, 7, 1, "", "size"], [270, 8, 1, "", "unlink"]], "multiprocessing.sharedctypes": [[269, 12, 1, "", "Array"], [269, 12, 1, "", "RawArray"], [269, 12, 1, "", "RawValue"], [269, 12, 1, "", "Value"], [269, 12, 1, "", "copy"], [269, 12, 1, "", "synchronized"]], "netrc": [[272, 6, 1, "", "NetrcParseError"], [272, 11, 1, "", "netrc"]], "netrc.NetrcParseError": [[272, 7, 1, "", "filename"], [272, 7, 1, "", "lineno"], [272, 7, 1, "", "msg"]], "netrc.netrc": [[272, 8, 1, "", "__repr__"], [272, 8, 1, "", "authenticators"], [272, 7, 1, "", "hosts"], [272, 7, 1, "", "macros"]], "numbers": [[273, 11, 1, "", "Complex"], [273, 11, 1, "", "Integral"], [273, 11, 1, "", "Number"], [273, 11, 1, "", "Rational"], [273, 11, 1, "", "Real"]], "numbers.Complex": [[273, 8, 1, "", "conjugate"], [273, 7, 1, "", "imag"], [273, 7, 1, "", "real"]], "numbers.Rational": [[273, 7, 1, "", "denominator"], [273, 7, 1, "", "numerator"]], "object": [[403, 8, 1, "", "__abs__"], [403, 8, 1, "", "__add__"], [403, 8, 1, "", "__aenter__"], [403, 8, 1, "", "__aexit__"], [403, 8, 1, "", "__aiter__"], [403, 8, 1, "", "__and__"], [403, 8, 1, "", "__anext__"], [403, 8, 1, "", "__await__"], [403, 8, 1, "", "__bool__"], [403, 8, 1, "", "__buffer__"], [403, 8, 1, "", "__bytes__"], [403, 8, 1, "", "__call__"], [403, 8, 1, "", "__ceil__"], [403, 8, 1, "", "__class_getitem__"], [403, 8, 1, "", "__complex__"], [403, 8, 1, "", "__contains__"], [403, 8, 1, "", "__del__"], [403, 8, 1, "", "__delattr__"], [403, 8, 1, "", "__delete__"], [403, 8, 1, "", "__delitem__"], [324, 7, 1, "", "__dict__"], [403, 8, 1, "", "__dir__"], [403, 8, 1, "", "__divmod__"], [403, 8, 1, "", "__enter__"], [403, 8, 1, "", "__eq__"], [403, 8, 1, "", "__exit__"], [403, 8, 1, "", "__float__"], [403, 8, 1, "", "__floor__"], [403, 8, 1, "", "__floordiv__"], [403, 8, 1, "", "__format__"], [403, 8, 1, "", "__ge__"], [403, 8, 1, "", "__get__"], [403, 8, 1, "", "__getattr__"], [403, 8, 1, "", "__getattribute__"], [403, 8, 1, "", "__getitem__"], [282, 8, 1, "", "__getnewargs__"], [282, 8, 1, "", "__getnewargs_ex__"], [282, 8, 1, "", "__getstate__"], [403, 8, 1, "", "__gt__"], [403, 8, 1, "", "__hash__"], [403, 8, 1, "", "__iadd__"], [403, 8, 1, "", "__iand__"], [403, 8, 1, "", "__ifloordiv__"], [403, 8, 1, "", "__ilshift__"], [403, 8, 1, "", "__imatmul__"], [403, 8, 1, "", "__imod__"], [403, 8, 1, "", "__imul__"], [403, 8, 1, "", "__index__"], [403, 8, 1, "", "__init__"], [403, 8, 1, "", "__init_subclass__"], [403, 8, 1, "", "__int__"], [403, 8, 1, "", "__invert__"], [403, 8, 1, "", "__ior__"], [403, 8, 1, "", "__ipow__"], [403, 8, 1, "", "__irshift__"], [403, 8, 1, "", "__isub__"], [403, 8, 1, "", "__iter__"], [403, 8, 1, "", "__itruediv__"], [403, 8, 1, "", "__ixor__"], [403, 8, 1, "", "__le__"], [403, 8, 1, "", "__len__"], [403, 8, 1, "", "__length_hint__"], [403, 8, 1, "", "__lshift__"], [403, 8, 1, "", "__lt__"], [403, 9, 1, "", "__match_args__"], [403, 8, 1, "", "__matmul__"], [403, 8, 1, "", "__missing__"], [403, 8, 1, "", "__mod__"], [403, 8, 1, "", "__mro_entries__"], [403, 8, 1, "", "__mul__"], [403, 8, 1, "", "__ne__"], [403, 8, 1, "", "__neg__"], [403, 8, 1, "", "__new__"], [403, 8, 1, "", "__or__"], [403, 8, 1, "", "__pos__"], [403, 8, 1, "", "__pow__"], [403, 8, 1, "", "__radd__"], [403, 8, 1, "", "__rand__"], [403, 8, 1, "", "__rdivmod__"], [282, 8, 1, "", "__reduce__"], [282, 8, 1, "", "__reduce_ex__"], [403, 8, 1, "", "__release_buffer__"], [403, 8, 1, "", "__repr__"], [403, 8, 1, "", "__reversed__"], [403, 8, 1, "", "__rfloordiv__"], [403, 8, 1, "", "__rlshift__"], [403, 8, 1, "", "__rmatmul__"], [403, 8, 1, "", "__rmod__"], [403, 8, 1, "", "__rmul__"], [403, 8, 1, "", "__ror__"], [403, 8, 1, "", "__round__"], [403, 8, 1, "", "__rpow__"], [403, 8, 1, "", "__rrshift__"], [403, 8, 1, "", "__rshift__"], [403, 8, 1, "", "__rsub__"], [403, 8, 1, "", "__rtruediv__"], [403, 8, 1, "", "__rxor__"], [403, 8, 1, "", "__set__"], [403, 8, 1, "", "__set_name__"], [403, 8, 1, "", "__setattr__"], [403, 8, 1, "", "__setitem__"], [282, 8, 1, "", "__setstate__"], [403, 9, 1, "", "__slots__"], [403, 8, 1, "", "__str__"], [403, 8, 1, "", "__sub__"], [403, 8, 1, "", "__truediv__"], [403, 8, 1, "", "__trunc__"], [403, 8, 1, "", "__xor__"]], "operator": [[275, 12, 1, "", "__abs__"], [275, 12, 1, "", "__add__"], [275, 12, 1, "", "__and__"], [275, 12, 1, "", "__call__"], [275, 12, 1, "", "__concat__"], [275, 12, 1, "", "__contains__"], [275, 12, 1, "", "__delitem__"], [275, 12, 1, "", "__eq__"], [275, 12, 1, "", "__floordiv__"], [275, 12, 1, "", "__ge__"], [275, 12, 1, "", "__getitem__"], [275, 12, 1, "", "__gt__"], [275, 12, 1, "", "__iadd__"], [275, 12, 1, "", "__iand__"], [275, 12, 1, "", "__iconcat__"], [275, 12, 1, "", "__ifloordiv__"], [275, 12, 1, "", "__ilshift__"], [275, 12, 1, "", "__imatmul__"], [275, 12, 1, "", "__imod__"], [275, 12, 1, "", "__imul__"], [275, 12, 1, "", "__index__"], [275, 12, 1, "", "__inv__"], [275, 12, 1, "", "__invert__"], [275, 12, 1, "", "__ior__"], [275, 12, 1, "", "__ipow__"], [275, 12, 1, "", "__irshift__"], [275, 12, 1, "", "__isub__"], [275, 12, 1, "", "__itruediv__"], [275, 12, 1, "", "__ixor__"], [275, 12, 1, "", "__le__"], [275, 12, 1, "", "__lshift__"], [275, 12, 1, "", "__lt__"], [275, 12, 1, "", "__matmul__"], [275, 12, 1, "", "__mod__"], [275, 12, 1, "", "__mul__"], [275, 12, 1, "", "__ne__"], [275, 12, 1, "", "__neg__"], [275, 12, 1, "", "__not__"], [275, 12, 1, "", "__or__"], [275, 12, 1, "", "__pos__"], [275, 12, 1, "", "__pow__"], [275, 12, 1, "", "__rshift__"], [275, 12, 1, "", "__setitem__"], [275, 12, 1, "", "__sub__"], [275, 12, 1, "", "__truediv__"], [275, 12, 1, "", "__xor__"], [275, 12, 1, "", "abs"], [275, 12, 1, "", "add"], [275, 12, 1, "", "and_"], [275, 12, 1, "", "attrgetter"], [275, 12, 1, "", "call"], [275, 12, 1, "", "concat"], [275, 12, 1, "", "contains"], [275, 12, 1, "", "countOf"], [275, 12, 1, "", "delitem"], [275, 12, 1, "", "eq"], [275, 12, 1, "", "floordiv"], [275, 12, 1, "", "ge"], [275, 12, 1, "", "getitem"], [275, 12, 1, "", "gt"], [275, 12, 1, "", "iadd"], [275, 12, 1, "", "iand"], [275, 12, 1, "", "iconcat"], [275, 12, 1, "", "ifloordiv"], [275, 12, 1, "", "ilshift"], [275, 12, 1, "", "imatmul"], [275, 12, 1, "", "imod"], [275, 12, 1, "", "imul"], [275, 12, 1, "", "index"], [275, 12, 1, "", "indexOf"], [275, 12, 1, "", "inv"], [275, 12, 1, "", "invert"], [275, 12, 1, "", "ior"], [275, 12, 1, "", "ipow"], [275, 12, 1, "", "irshift"], [275, 12, 1, "", "is_"], [275, 12, 1, "", "is_not"], [275, 12, 1, "", "isub"], [275, 12, 1, "", "itemgetter"], [275, 12, 1, "", "itruediv"], [275, 12, 1, "", "ixor"], [275, 12, 1, "", "le"], [275, 12, 1, "", "length_hint"], [275, 12, 1, "", "lshift"], [275, 12, 1, "", "lt"], [275, 12, 1, "", "matmul"], [275, 12, 1, "", "methodcaller"], [275, 12, 1, "", "mod"], [275, 12, 1, "", "mul"], [275, 12, 1, "", "ne"], [275, 12, 1, "", "neg"], [275, 12, 1, "", "not_"], [275, 12, 1, "", "or_"], [275, 12, 1, "", "pos"], [275, 12, 1, "", "pow"], [275, 12, 1, "", "rshift"], [275, 12, 1, "", "setitem"], [275, 12, 1, "", "sub"], [275, 12, 1, "", "truediv"], [275, 12, 1, "", "truth"], [275, 12, 1, "", "xor"]], "optparse": [[276, 6, 1, "", "AmbiguousOptionError"], [276, 6, 1, "", "BadOptionError"], [276, 11, 1, "", "Option"], [276, 6, 1, "", "OptionConflictError"], [276, 6, 1, "", "OptionError"], [276, 11, 1, "", "OptionGroup"], [276, 11, 1, "", "OptionParser"], [276, 6, 1, "", "OptionValueError"], [276, 11, 1, "", "Values"]], "optparse.Option": [[276, 7, 1, "", "ACTIONS"], [276, 7, 1, "", "ALWAYS_TYPED_ACTIONS"], [276, 7, 1, "", "STORE_ACTIONS"], [276, 7, 1, "", "TYPED_ACTIONS"], [276, 7, 1, "", "TYPES"], [276, 7, 1, "", "TYPE_CHECKER"], [276, 7, 1, "", "action"], [276, 7, 1, "", "callback"], [276, 7, 1, "", "callback_args"], [276, 7, 1, "", "callback_kwargs"], [276, 7, 1, "", "choices"], [276, 7, 1, "", "const"], [276, 7, 1, "", "default"], [276, 7, 1, "", "dest"], [276, 7, 1, "", "help"], [276, 7, 1, "", "metavar"], [276, 7, 1, "", "nargs"], [276, 7, 1, "", "type"]], "optparse.OptionParser": [[276, 8, 1, "", "add_option"], [276, 8, 1, "", "disable_interspersed_args"], [276, 8, 1, "", "enable_interspersed_args"], [276, 8, 1, "", "get_option"], [276, 8, 1, "", "get_option_group"], [276, 8, 1, "", "get_usage"], [276, 8, 1, "", "get_version"], [276, 8, 1, "", "has_option"], [276, 8, 1, "", "parse_args"], [276, 8, 1, "", "print_usage"], [276, 8, 1, "", "print_version"], [276, 8, 1, "", "remove_option"], [276, 8, 1, "", "set_defaults"], [276, 8, 1, "", "set_usage"]], "os": [[277, 9, 1, "", "CLD_CONTINUED"], [277, 9, 1, "", "CLD_DUMPED"], [277, 9, 1, "", "CLD_EXITED"], [277, 9, 1, "", "CLD_KILLED"], [277, 9, 1, "", "CLD_STOPPED"], [277, 9, 1, "", "CLD_TRAPPED"], [277, 9, 1, "", "CLONE_FILES"], [277, 9, 1, "", "CLONE_FS"], [277, 9, 1, "", "CLONE_NEWCGROUP"], [277, 9, 1, "", "CLONE_NEWIPC"], [277, 9, 1, "", "CLONE_NEWNET"], [277, 9, 1, "", "CLONE_NEWNS"], [277, 9, 1, "", "CLONE_NEWPID"], [277, 9, 1, "", "CLONE_NEWTIME"], [277, 9, 1, "", "CLONE_NEWUSER"], [277, 9, 1, "", "CLONE_NEWUTS"], [277, 9, 1, "", "CLONE_SIGHAND"], [277, 9, 1, "", "CLONE_SYSVSEM"], [277, 9, 1, "", "CLONE_THREAD"], [277, 9, 1, "", "CLONE_VM"], [277, 11, 1, "", "DirEntry"], [277, 9, 1, "", "EFD_CLOEXEC"], [277, 9, 1, "", "EFD_NONBLOCK"], [277, 9, 1, "", "EFD_SEMAPHORE"], [277, 9, 1, "", "EX_CANTCREAT"], [277, 9, 1, "", "EX_CONFIG"], [277, 9, 1, "", "EX_DATAERR"], [277, 9, 1, "", "EX_IOERR"], [277, 9, 1, "", "EX_NOHOST"], [277, 9, 1, "", "EX_NOINPUT"], [277, 9, 1, "", "EX_NOPERM"], [277, 9, 1, "", "EX_NOTFOUND"], [277, 9, 1, "", "EX_NOUSER"], [277, 9, 1, "", "EX_OK"], [277, 9, 1, "", "EX_OSERR"], [277, 9, 1, "", "EX_OSFILE"], [277, 9, 1, "", "EX_PROTOCOL"], [277, 9, 1, "", "EX_SOFTWARE"], [277, 9, 1, "", "EX_TEMPFAIL"], [277, 9, 1, "", "EX_UNAVAILABLE"], [277, 9, 1, "", "EX_USAGE"], [277, 9, 1, "", "F_LOCK"], [277, 9, 1, "", "F_OK"], [277, 9, 1, "", "F_TEST"], [277, 9, 1, "", "F_TLOCK"], [277, 9, 1, "", "F_ULOCK"], [277, 9, 1, "", "GRND_NONBLOCK"], [277, 9, 1, "", "GRND_RANDOM"], [277, 9, 1, "", "MFD_ALLOW_SEALING"], [277, 9, 1, "", "MFD_CLOEXEC"], [277, 9, 1, "", "MFD_HUGETLB"], [277, 9, 1, "", "MFD_HUGE_16GB"], [277, 9, 1, "", "MFD_HUGE_16MB"], [277, 9, 1, "", "MFD_HUGE_1GB"], [277, 9, 1, "", "MFD_HUGE_1MB"], [277, 9, 1, "", "MFD_HUGE_256MB"], [277, 9, 1, "", "MFD_HUGE_2GB"], [277, 9, 1, "", "MFD_HUGE_2MB"], [277, 9, 1, "", "MFD_HUGE_32MB"], [277, 9, 1, "", "MFD_HUGE_512KB"], [277, 9, 1, "", "MFD_HUGE_512MB"], [277, 9, 1, "", "MFD_HUGE_64KB"], [277, 9, 1, "", "MFD_HUGE_8MB"], [277, 9, 1, "", "MFD_HUGE_MASK"], [277, 9, 1, "", "MFD_HUGE_SHIFT"], [277, 9, 1, "", "O_APPEND"], [277, 9, 1, "", "O_ASYNC"], [277, 9, 1, "", "O_BINARY"], [277, 9, 1, "", "O_CLOEXEC"], [277, 9, 1, "", "O_CREAT"], [277, 9, 1, "", "O_DIRECT"], [277, 9, 1, "", "O_DIRECTORY"], [277, 9, 1, "", "O_DSYNC"], [277, 9, 1, "", "O_EVTONLY"], [277, 9, 1, "", "O_EXCL"], [277, 9, 1, "", "O_EXLOCK"], [277, 9, 1, "", "O_FSYNC"], [277, 9, 1, "", "O_NDELAY"], [277, 9, 1, "", "O_NOATIME"], [277, 9, 1, "", "O_NOCTTY"], [277, 9, 1, "", "O_NOFOLLOW"], [277, 9, 1, "", "O_NOFOLLOW_ANY"], [277, 9, 1, "", "O_NOINHERIT"], [277, 9, 1, "", "O_NONBLOCK"], [277, 9, 1, "", "O_PATH"], [277, 9, 1, "", "O_RANDOM"], [277, 9, 1, "", "O_RDONLY"], [277, 9, 1, "", "O_RDWR"], [277, 9, 1, "", "O_RSYNC"], [277, 9, 1, "", "O_SEQUENTIAL"], [277, 9, 1, "", "O_SHLOCK"], [277, 9, 1, "", "O_SHORT_LIVED"], [277, 9, 1, "", "O_SYMLINK"], [277, 9, 1, "", "O_SYNC"], [277, 9, 1, "", "O_TEMPORARY"], [277, 9, 1, "", "O_TEXT"], [277, 9, 1, "", "O_TMPFILE"], [277, 9, 1, "", "O_TRUNC"], [277, 9, 1, "", "O_WRONLY"], [277, 9, 1, "", "PIDFD_NONBLOCK"], [277, 9, 1, "", "POSIX_FADV_DONTNEED"], [277, 9, 1, "", "POSIX_FADV_NOREUSE"], [277, 9, 1, "", "POSIX_FADV_NORMAL"], [277, 9, 1, "", "POSIX_FADV_RANDOM"], [277, 9, 1, "", "POSIX_FADV_SEQUENTIAL"], [277, 9, 1, "", "POSIX_FADV_WILLNEED"], [277, 9, 1, "", "POSIX_SPAWN_CLOSE"], [277, 9, 1, "", "POSIX_SPAWN_DUP2"], [277, 9, 1, "", "POSIX_SPAWN_OPEN"], [277, 9, 1, "", "PRIO_DARWIN_BG"], [277, 9, 1, "", "PRIO_DARWIN_NONUI"], [277, 9, 1, "", "PRIO_DARWIN_PROCESS"], [277, 9, 1, "", "PRIO_DARWIN_THREAD"], [277, 9, 1, "", "PRIO_PGRP"], [277, 9, 1, "", "PRIO_PROCESS"], [277, 9, 1, "", "PRIO_USER"], [277, 9, 1, "", "P_ALL"], [277, 9, 1, "", "P_DETACH"], [277, 9, 1, "", "P_NOWAIT"], [277, 9, 1, "", "P_NOWAITO"], [277, 9, 1, "", "P_OVERLAY"], [277, 9, 1, "", "P_PGID"], [277, 9, 1, "", "P_PID"], [277, 9, 1, "", "P_PIDFD"], [277, 9, 1, "", "P_WAIT"], [277, 11, 1, "", "PathLike"], [277, 9, 1, "", "RTLD_DEEPBIND"], [277, 9, 1, "", "RTLD_GLOBAL"], [277, 9, 1, "", "RTLD_LAZY"], [277, 9, 1, "", "RTLD_LOCAL"], [277, 9, 1, "", "RTLD_NODELETE"], [277, 9, 1, "", "RTLD_NOLOAD"], [277, 9, 1, "", "RTLD_NOW"], [277, 9, 1, "", "RWF_APPEND"], [277, 9, 1, "", "RWF_DSYNC"], [277, 9, 1, "", "RWF_HIPRI"], [277, 9, 1, "", "RWF_NOWAIT"], [277, 9, 1, "", "RWF_SYNC"], [277, 9, 1, "", "R_OK"], [277, 9, 1, "", "SCHED_BATCH"], [277, 9, 1, "", "SCHED_FIFO"], [277, 9, 1, "", "SCHED_IDLE"], [277, 9, 1, "", "SCHED_OTHER"], [277, 9, 1, "", "SCHED_RESET_ON_FORK"], [277, 9, 1, "", "SCHED_RR"], [277, 9, 1, "", "SCHED_SPORADIC"], [277, 9, 1, "", "SEEK_CUR"], [277, 9, 1, "", "SEEK_DATA"], [277, 9, 1, "", "SEEK_END"], [277, 9, 1, "", "SEEK_HOLE"], [277, 9, 1, "", "SEEK_SET"], [277, 9, 1, "", "SF_MNOWAIT"], [277, 9, 1, "", "SF_NOCACHE"], [277, 9, 1, "", "SF_NODISKIO"], [277, 9, 1, "", "SF_SYNC"], [277, 9, 1, "", "SPLICE_F_MORE"], [277, 9, 1, "", "SPLICE_F_MOVE"], [277, 9, 1, "", "SPLICE_F_NONBLOCK"], [277, 9, 1, "", "WCONTINUED"], [277, 12, 1, "", "WCOREDUMP"], [277, 9, 1, "", "WEXITED"], [277, 12, 1, "", "WEXITSTATUS"], [277, 12, 1, "", "WIFCONTINUED"], [277, 12, 1, "", "WIFEXITED"], [277, 12, 1, "", "WIFSIGNALED"], [277, 12, 1, "", "WIFSTOPPED"], [277, 9, 1, "", "WNOHANG"], [277, 9, 1, "", "WNOWAIT"], [277, 9, 1, "", "WSTOPPED"], [277, 12, 1, "", "WSTOPSIG"], [277, 12, 1, "", "WTERMSIG"], [277, 9, 1, "", "WUNTRACED"], [277, 9, 1, "", "W_OK"], [277, 9, 1, "", "XATTR_CREATE"], [277, 9, 1, "", "XATTR_REPLACE"], [277, 9, 1, "", "XATTR_SIZE_MAX"], [277, 9, 1, "", "X_OK"], [277, 12, 1, "", "_exit"], [277, 12, 1, "", "abort"], [277, 12, 1, "", "access"], [277, 12, 1, "", "add_dll_directory"], [277, 9, 1, "", "altsep"], [277, 12, 1, "", "chdir"], [277, 12, 1, "", "chflags"], [277, 12, 1, "", "chmod"], [277, 12, 1, "", "chown"], [277, 12, 1, "", "chroot"], [277, 12, 1, "", "close"], [277, 12, 1, "", "closerange"], [277, 12, 1, "", "confstr"], [277, 9, 1, "", "confstr_names"], [277, 12, 1, "", "copy_file_range"], [277, 12, 1, "", "cpu_count"], [277, 12, 1, "", "ctermid"], [277, 9, 1, "", "curdir"], [277, 9, 1, "", "defpath"], [277, 12, 1, "", "device_encoding"], [277, 9, 1, "", "devnull"], [277, 12, 1, "", "dup"], [277, 12, 1, "", "dup2"], [277, 9, 1, "", "environ"], [277, 9, 1, "", "environb"], [277, 6, 1, "", "error"], [277, 12, 1, "", "eventfd"], [277, 12, 1, "", "eventfd_read"], [277, 12, 1, "", "eventfd_write"], [277, 12, 1, "", "execl"], [277, 12, 1, "", "execle"], [277, 12, 1, "", "execlp"], [277, 12, 1, "", "execlpe"], [277, 12, 1, "", "execv"], [277, 12, 1, "", "execve"], [277, 12, 1, "", "execvp"], [277, 12, 1, "", "execvpe"], [277, 9, 1, "", "extsep"], [277, 12, 1, "", "fchdir"], [277, 12, 1, "", "fchmod"], [277, 12, 1, "", "fchown"], [277, 12, 1, "", "fdatasync"], [277, 12, 1, "", "fdopen"], [277, 12, 1, "", "fork"], [277, 12, 1, "", "forkpty"], [277, 12, 1, "", "fpathconf"], [277, 12, 1, "", "fsdecode"], [277, 12, 1, "", "fsencode"], [277, 12, 1, "", "fspath"], [277, 12, 1, "", "fstat"], [277, 12, 1, "", "fstatvfs"], [277, 12, 1, "", "fsync"], [277, 12, 1, "", "ftruncate"], [277, 12, 1, "", "fwalk"], [277, 12, 1, "", "get_blocking"], [277, 12, 1, "", "get_exec_path"], [277, 12, 1, "", "get_handle_inheritable"], [277, 12, 1, "", "get_inheritable"], [277, 12, 1, "", "get_terminal_size"], [277, 12, 1, "", "getcwd"], [277, 12, 1, "", "getcwdb"], [277, 12, 1, "", "getegid"], [277, 12, 1, "", "getenv"], [277, 12, 1, "", "getenvb"], [277, 12, 1, "", "geteuid"], [277, 12, 1, "", "getgid"], [277, 12, 1, "", "getgrouplist"], [277, 12, 1, "", "getgroups"], [277, 12, 1, "", "getloadavg"], [277, 12, 1, "", "getlogin"], [277, 12, 1, "", "getpgid"], [277, 12, 1, "", "getpgrp"], [277, 12, 1, "", "getpid"], [277, 12, 1, "", "getppid"], [277, 12, 1, "", "getpriority"], [277, 12, 1, "", "getrandom"], [277, 12, 1, "", "getresgid"], [277, 12, 1, "", "getresuid"], [277, 12, 1, "", "getsid"], [277, 12, 1, "", "getuid"], [277, 12, 1, "", "getxattr"], [277, 12, 1, "", "initgroups"], [277, 12, 1, "", "isatty"], [277, 12, 1, "", "kill"], [277, 12, 1, "", "killpg"], [277, 12, 1, "", "lchflags"], [277, 12, 1, "", "lchmod"], [277, 12, 1, "", "lchown"], [277, 9, 1, "", "linesep"], [277, 12, 1, "", "link"], [277, 12, 1, "", "listdir"], [277, 12, 1, "", "listdrives"], [277, 12, 1, "", "listmounts"], [277, 12, 1, "", "listvolumes"], [277, 12, 1, "", "listxattr"], [277, 12, 1, "", "lockf"], [277, 12, 1, "", "login_tty"], [277, 12, 1, "", "lseek"], [277, 12, 1, "", "lstat"], [277, 12, 1, "", "major"], [277, 12, 1, "", "makedev"], [277, 12, 1, "", "makedirs"], [277, 12, 1, "", "memfd_create"], [277, 12, 1, "", "minor"], [277, 12, 1, "", "mkdir"], [277, 12, 1, "", "mkfifo"], [277, 12, 1, "", "mknod"], [277, 9, 1, "", "name"], [277, 12, 1, "", "nice"], [277, 12, 1, "", "open"], [277, 12, 1, "", "openpty"], [277, 9, 1, "", "pardir"], [278, 10, 0, "-", "path"], [277, 12, 1, "", "pathconf"], [277, 9, 1, "", "pathconf_names"], [277, 9, 1, "", "pathsep"], [277, 12, 1, "", "pidfd_open"], [277, 12, 1, "", "pipe"], [277, 12, 1, "", "pipe2"], [277, 12, 1, "", "plock"], [277, 12, 1, "", "popen"], [277, 12, 1, "", "posix_fadvise"], [277, 12, 1, "", "posix_fallocate"], [277, 12, 1, "", "posix_spawn"], [277, 12, 1, "", "posix_spawnp"], [277, 12, 1, "", "pread"], [277, 12, 1, "", "preadv"], [277, 12, 1, "", "putenv"], [277, 12, 1, "", "pwrite"], [277, 12, 1, "", "pwritev"], [277, 12, 1, "", "read"], [277, 12, 1, "", "readlink"], [277, 12, 1, "", "readv"], [277, 12, 1, "", "register_at_fork"], [277, 12, 1, "", "remove"], [277, 12, 1, "", "removedirs"], [277, 12, 1, "", "removexattr"], [277, 12, 1, "", "rename"], [277, 12, 1, "", "renames"], [277, 12, 1, "", "replace"], [277, 12, 1, "", "rmdir"], [277, 12, 1, "", "scandir"], [277, 12, 1, "", "sched_get_priority_max"], [277, 12, 1, "", "sched_get_priority_min"], [277, 12, 1, "", "sched_getaffinity"], [277, 12, 1, "", "sched_getparam"], [277, 12, 1, "", "sched_getscheduler"], [277, 11, 1, "", "sched_param"], [277, 12, 1, "", "sched_rr_get_interval"], [277, 12, 1, "", "sched_setaffinity"], [277, 12, 1, "", "sched_setparam"], [277, 12, 1, "", "sched_setscheduler"], [277, 12, 1, "", "sched_yield"], [277, 12, 1, "", "sendfile"], [277, 9, 1, "", "sep"], [277, 12, 1, "", "set_blocking"], [277, 12, 1, "", "set_handle_inheritable"], [277, 12, 1, "", "set_inheritable"], [277, 12, 1, "", "setegid"], [277, 12, 1, "", "seteuid"], [277, 12, 1, "", "setgid"], [277, 12, 1, "", "setgroups"], [277, 12, 1, "", "setns"], [277, 12, 1, "", "setpgid"], [277, 12, 1, "", "setpgrp"], [277, 12, 1, "", "setpriority"], [277, 12, 1, "", "setregid"], [277, 12, 1, "", "setresgid"], [277, 12, 1, "", "setresuid"], [277, 12, 1, "", "setreuid"], [277, 12, 1, "", "setsid"], [277, 12, 1, "", "setuid"], [277, 12, 1, "", "setxattr"], [277, 12, 1, "", "spawnl"], [277, 12, 1, "", "spawnle"], [277, 12, 1, "", "spawnlp"], [277, 12, 1, "", "spawnlpe"], [277, 12, 1, "", "spawnv"], [277, 12, 1, "", "spawnve"], [277, 12, 1, "", "spawnvp"], [277, 12, 1, "", "spawnvpe"], [277, 12, 1, "", "splice"], [277, 12, 1, "", "startfile"], [277, 12, 1, "", "stat"], [277, 11, 1, "", "stat_result"], [277, 12, 1, "", "statvfs"], [277, 12, 1, "", "strerror"], [277, 9, 1, "", "supports_bytes_environ"], [277, 9, 1, "", "supports_dir_fd"], [277, 9, 1, "", "supports_effective_ids"], [277, 9, 1, "", "supports_fd"], [277, 9, 1, "", "supports_follow_symlinks"], [277, 12, 1, "", "symlink"], [277, 12, 1, "", "sync"], [277, 12, 1, "", "sysconf"], [277, 9, 1, "", "sysconf_names"], [277, 12, 1, "", "system"], [277, 12, 1, "", "tcgetpgrp"], [277, 12, 1, "", "tcsetpgrp"], [277, 11, 1, "", "terminal_size"], [277, 12, 1, "", "times"], [277, 12, 1, "", "truncate"], [277, 12, 1, "", "ttyname"], [277, 12, 1, "", "umask"], [277, 12, 1, "", "uname"], [277, 12, 1, "", "unlink"], [277, 12, 1, "", "unsetenv"], [277, 12, 1, "", "unshare"], [277, 12, 1, "", "urandom"], [277, 12, 1, "", "utime"], [277, 12, 1, "", "wait"], [277, 12, 1, "", "wait3"], [277, 12, 1, "", "wait4"], [277, 12, 1, "", "waitid"], [277, 12, 1, "", "waitpid"], [277, 12, 1, "", "waitstatus_to_exitcode"], [277, 12, 1, "", "walk"], [277, 12, 1, "", "write"], [277, 12, 1, "", "writev"]], "os.DirEntry": [[277, 8, 1, "", "inode"], [277, 8, 1, "", "is_dir"], [277, 8, 1, "", "is_file"], [277, 8, 1, "", "is_junction"], [277, 8, 1, "", "is_symlink"], [277, 7, 1, "", "name"], [277, 7, 1, "", "path"], [277, 8, 1, "", "stat"]], "os.PathLike": [[277, 8, 1, "", "__fspath__"]], "os.path": [[278, 12, 1, "", "abspath"], [278, 12, 1, "", "basename"], [278, 12, 1, "", "commonpath"], [278, 12, 1, "", "commonprefix"], [278, 12, 1, "", "dirname"], [278, 12, 1, "", "exists"], [278, 12, 1, "", "expanduser"], [278, 12, 1, "", "expandvars"], [278, 12, 1, "", "getatime"], [278, 12, 1, "", "getctime"], [278, 12, 1, "", "getmtime"], [278, 12, 1, "", "getsize"], [278, 12, 1, "", "isabs"], [278, 12, 1, "", "isdevdrive"], [278, 12, 1, "", "isdir"], [278, 12, 1, "", "isfile"], [278, 12, 1, "", "isjunction"], [278, 12, 1, "", "islink"], [278, 12, 1, "", "ismount"], [278, 12, 1, "", "join"], [278, 12, 1, "", "lexists"], [278, 12, 1, "", "normcase"], [278, 12, 1, "", "normpath"], [278, 12, 1, "", "realpath"], [278, 12, 1, "", "relpath"], [278, 12, 1, "", "samefile"], [278, 12, 1, "", "sameopenfile"], [278, 12, 1, "", "samestat"], [278, 12, 1, "", "split"], [278, 12, 1, "", "splitdrive"], [278, 12, 1, "", "splitext"], [278, 12, 1, "", "splitroot"], [278, 9, 1, "", "supports_unicode_filenames"]], "os.scandir": [[277, 8, 1, "", "close"]], "os.sched_param": [[277, 7, 1, "", "sched_priority"]], "os.stat_result": [[277, 7, 1, "", "st_atime"], [277, 7, 1, "", "st_atime_ns"], [277, 7, 1, "", "st_birthtime"], [277, 7, 1, "", "st_birthtime_ns"], [277, 7, 1, "", "st_blksize"], [277, 7, 1, "", "st_blocks"], [277, 7, 1, "", "st_creator"], [277, 7, 1, "", "st_ctime"], [277, 7, 1, "", "st_ctime_ns"], [277, 7, 1, "", "st_dev"], [277, 7, 1, "", "st_file_attributes"], [277, 7, 1, "", "st_flags"], [277, 7, 1, "", "st_fstype"], [277, 7, 1, "", "st_gen"], [277, 7, 1, "", "st_gid"], [277, 7, 1, "", "st_ino"], [277, 7, 1, "", "st_mode"], [277, 7, 1, "", "st_mtime"], [277, 7, 1, "", "st_mtime_ns"], [277, 7, 1, "", "st_nlink"], [277, 7, 1, "", "st_rdev"], [277, 7, 1, "", "st_reparse_tag"], [277, 7, 1, "", "st_rsize"], [277, 7, 1, "", "st_size"], [277, 7, 1, "", "st_type"], [277, 7, 1, "", "st_uid"]], "os.terminal_size": [[277, 7, 1, "", "columns"], [277, 7, 1, "", "lines"]], "pathlib": [[279, 11, 1, "", "Path"], [279, 11, 1, "", "PosixPath"], [279, 11, 1, "", "PurePath"], [279, 11, 1, "", "PurePosixPath"], [279, 11, 1, "", "PureWindowsPath"], [279, 6, 1, "", "UnsupportedOperation"], [279, 11, 1, "", "WindowsPath"]], "pathlib.Path": [[279, 8, 1, "", "absolute"], [279, 8, 1, "", "chmod"], [279, 8, 1, "", "cwd"], [279, 8, 1, "", "exists"], [279, 8, 1, "", "expanduser"], [279, 8, 1, "", "glob"], [279, 8, 1, "", "group"], [279, 8, 1, "", "hardlink_to"], [279, 8, 1, "", "home"], [279, 8, 1, "", "is_block_device"], [279, 8, 1, "", "is_char_device"], [279, 8, 1, "", "is_dir"], [279, 8, 1, "", "is_fifo"], [279, 8, 1, "", "is_file"], [279, 8, 1, "", "is_junction"], [279, 8, 1, "", "is_mount"], [279, 8, 1, "", "is_socket"], [279, 8, 1, "", "is_symlink"], [279, 8, 1, "", "iterdir"], [279, 8, 1, "", "lchmod"], [279, 8, 1, "", "lstat"], [279, 8, 1, "", "mkdir"], [279, 8, 1, "", "open"], [279, 8, 1, "", "owner"], [279, 8, 1, "", "read_bytes"], [279, 8, 1, "", "read_text"], [279, 8, 1, "", "readlink"], [279, 8, 1, "", "rename"], [279, 8, 1, "", "replace"], [279, 8, 1, "", "resolve"], [279, 8, 1, "", "rglob"], [279, 8, 1, "", "rmdir"], [279, 8, 1, "", "samefile"], [279, 8, 1, "", "stat"], [279, 8, 1, "", "symlink_to"], [279, 8, 1, "", "touch"], [279, 8, 1, "", "unlink"], [279, 8, 1, "", "walk"], [279, 8, 1, "", "write_bytes"], [279, 8, 1, "", "write_text"]], "pathlib.PurePath": [[279, 7, 1, "", "anchor"], [279, 8, 1, "", "as_posix"], [279, 8, 1, "", "as_uri"], [279, 7, 1, "", "drive"], [279, 8, 1, "", "is_absolute"], [279, 8, 1, "", "is_relative_to"], [279, 8, 1, "", "is_reserved"], [279, 8, 1, "", "joinpath"], [279, 8, 1, "", "match"], [279, 7, 1, "", "name"], [279, 7, 1, "", "parent"], [279, 7, 1, "", "parents"], [279, 7, 1, "", "parts"], [279, 7, 1, "", "pathmod"], [279, 8, 1, "", "relative_to"], [279, 7, 1, "", "root"], [279, 7, 1, "", "stem"], [279, 7, 1, "", "suffix"], [279, 7, 1, "", "suffixes"], [279, 8, 1, "", "with_name"], [279, 8, 1, "", "with_segments"], [279, 8, 1, "", "with_stem"], [279, 8, 1, "", "with_suffix"]], "pdb": [[280, 11, 1, "", "Pdb"], [280, 12, 1, "", "pm"], [280, 12, 1, "", "post_mortem"], [280, 12, 1, "", "run"], [280, 12, 1, "", "runcall"], [280, 12, 1, "", "runeval"], [280, 12, 1, "", "set_trace"]], "pdb.Pdb": [[280, 8, 1, "", "run"], [280, 8, 1, "", "runcall"], [280, 8, 1, "", "runeval"], [280, 8, 1, "", "set_trace"]], "pickle": [[282, 9, 1, "", "DEFAULT_PROTOCOL"], [282, 9, 1, "", "HIGHEST_PROTOCOL"], [282, 11, 1, "", "PickleBuffer"], [282, 6, 1, "", "PickleError"], [282, 11, 1, "", "Pickler"], [282, 6, 1, "", "PicklingError"], [282, 11, 1, "", "Unpickler"], [282, 6, 1, "", "UnpicklingError"], [282, 12, 1, "", "dump"], [282, 12, 1, "", "dumps"], [282, 12, 1, "", "load"], [282, 12, 1, "", "loads"]], "pickle.PickleBuffer": [[282, 8, 1, "", "raw"], [282, 8, 1, "", "release"]], "pickle.Pickler": [[282, 7, 1, "", "dispatch_table"], [282, 8, 1, "", "dump"], [282, 7, 1, "", "fast"], [282, 8, 1, "", "persistent_id"], [282, 8, 1, "", "reducer_override"]], "pickle.Unpickler": [[282, 8, 1, "", "find_class"], [282, 8, 1, "", "load"], [282, 8, 1, "", "persistent_load"]], "pickletools": [[283, 12, 1, "", "dis"], [283, 12, 1, "", "genops"], [283, 12, 1, "", "optimize"], [283, 14, 1, "cmdoption-pickletools-a", "--annotate"], [283, 14, 1, "cmdoption-pickletools-l", "--indentlevel"], [283, 14, 1, "cmdoption-pickletools-m", "--memo"], [283, 14, 1, "cmdoption-pickletools-o", "--output"], [283, 14, 1, "cmdoption-pickletools-p", "--preamble"], [283, 14, 1, "cmdoption-pickletools-a", "-a"], [283, 14, 1, "cmdoption-pickletools-l", "-l"], [283, 14, 1, "cmdoption-pickletools-m", "-m"], [283, 14, 1, "cmdoption-pickletools-o", "-o"], [283, 14, 1, "cmdoption-pickletools-p", "-p"]], "pkgutil": [[284, 11, 1, "", "ModuleInfo"], [284, 12, 1, "", "extend_path"], [284, 12, 1, "", "find_loader"], [284, 12, 1, "", "get_data"], [284, 12, 1, "", "get_importer"], [284, 12, 1, "", "get_loader"], [284, 12, 1, "", "iter_importers"], [284, 12, 1, "", "iter_modules"], [284, 12, 1, "", "resolve_name"], [284, 12, 1, "", "walk_packages"]], "platform": [[285, 12, 1, "", "architecture"], [285, 12, 1, "", "freedesktop_os_release"], [285, 12, 1, "", "java_ver"], [285, 12, 1, "", "libc_ver"], [285, 12, 1, "", "mac_ver"], [285, 12, 1, "", "machine"], [285, 12, 1, "", "node"], [285, 12, 1, "", "platform"], [285, 12, 1, "", "processor"], [285, 12, 1, "", "python_branch"], [285, 12, 1, "", "python_build"], [285, 12, 1, "", "python_compiler"], [285, 12, 1, "", "python_implementation"], [285, 12, 1, "", "python_revision"], [285, 12, 1, "", "python_version"], [285, 12, 1, "", "python_version_tuple"], [285, 12, 1, "", "release"], [285, 12, 1, "", "system"], [285, 12, 1, "", "system_alias"], [285, 12, 1, "", "uname"], [285, 12, 1, "", "version"], [285, 12, 1, "", "win32_edition"], [285, 12, 1, "", "win32_is_iot"], [285, 12, 1, "", "win32_ver"]], "plistlib": [[286, 9, 1, "", "FMT_BINARY"], [286, 9, 1, "", "FMT_XML"], [286, 11, 1, "", "UID"], [286, 12, 1, "", "dump"], [286, 12, 1, "", "dumps"], [286, 12, 1, "", "load"], [286, 12, 1, "", "loads"]], "poplib": [[287, 11, 1, "", "POP3"], [287, 11, 1, "", "POP3_SSL"], [287, 6, 1, "", "error_proto"]], "poplib.POP3": [[287, 8, 1, "", "apop"], [287, 8, 1, "", "capa"], [287, 8, 1, "", "dele"], [287, 8, 1, "", "getwelcome"], [287, 8, 1, "", "list"], [287, 8, 1, "", "noop"], [287, 8, 1, "", "pass_"], [287, 8, 1, "", "quit"], [287, 8, 1, "", "retr"], [287, 8, 1, "", "rpop"], [287, 8, 1, "", "rset"], [287, 8, 1, "", "set_debuglevel"], [287, 8, 1, "", "stat"], [287, 8, 1, "", "stls"], [287, 8, 1, "", "top"], [287, 8, 1, "", "uidl"], [287, 8, 1, "", "user"], [287, 8, 1, "", "utf8"]], "posix": [[288, 9, 1, "", "environ"]], "pprint": [[289, 11, 1, "", "PrettyPrinter"], [289, 12, 1, "", "isreadable"], [289, 12, 1, "", "isrecursive"], [289, 12, 1, "", "pformat"], [289, 12, 1, "", "pp"], [289, 12, 1, "", "pprint"], [289, 12, 1, "", "saferepr"]], "pprint.PrettyPrinter": [[289, 8, 1, "", "format"], [289, 8, 1, "", "isreadable"], [289, 8, 1, "", "isrecursive"], [289, 8, 1, "", "pformat"], [289, 8, 1, "", "pprint"]], "profile": [[290, 11, 1, "", "Profile"], [290, 12, 1, "", "run"], [290, 12, 1, "", "runctx"]], "profile.Profile": [[290, 8, 1, "", "create_stats"], [290, 8, 1, "", "disable"], [290, 8, 1, "", "dump_stats"], [290, 8, 1, "", "enable"], [290, 8, 1, "", "print_stats"], [290, 8, 1, "", "run"], [290, 8, 1, "", "runcall"], [290, 8, 1, "", "runctx"]], "pstats": [[290, 11, 1, "", "Stats"]], "pstats.Stats": [[290, 8, 1, "", "add"], [290, 8, 1, "", "dump_stats"], [290, 8, 1, "", "get_stats_profile"], [290, 8, 1, "", "print_callees"], [290, 8, 1, "", "print_callers"], [290, 8, 1, "", "print_stats"], [290, 8, 1, "", "reverse_order"], [290, 8, 1, "", "sort_stats"], [290, 8, 1, "", "strip_dirs"]], "pty": [[291, 12, 1, "", "fork"], [291, 12, 1, "", "openpty"], [291, 12, 1, "", "spawn"]], "pwd": [[292, 12, 1, "", "getpwall"], [292, 12, 1, "", "getpwnam"], [292, 12, 1, "", "getpwuid"]], "py_compile": [[293, 6, 1, "", "PyCompileError"], [293, 11, 1, "", "PycInvalidationMode"], [293, 12, 1, "", "compile"]], "py_compile.PycInvalidationMode": [[293, 7, 1, "", "CHECKED_HASH"], [293, 7, 1, "", "TIMESTAMP"], [293, 7, 1, "", "UNCHECKED_HASH"]], "pyclbr.Class": [[294, 7, 1, "", "children"], [294, 7, 1, "", "file"], [294, 7, 1, "", "lineno"], [294, 7, 1, "", "methods"], [294, 7, 1, "", "module"], [294, 7, 1, "", "name"], [294, 7, 1, "", "parent"], [294, 7, 1, "", "super"]], "pyclbr.Function": [[294, 7, 1, "", "children"], [294, 7, 1, "", "file"], [294, 7, 1, "", "is_async"], [294, 7, 1, "", "lineno"], [294, 7, 1, "", "module"], [294, 7, 1, "", "name"], [294, 7, 1, "", "parent"]], "pyclbr": [[294, 12, 1, "", "readmodule"], [294, 12, 1, "", "readmodule_ex"]], "queue": [[298, 6, 1, "", "Empty"], [298, 6, 1, "", "Full"], [298, 11, 1, "", "LifoQueue"], [298, 11, 1, "", "PriorityQueue"], [298, 11, 1, "", "Queue"], [298, 11, 1, "", "SimpleQueue"]], "queue.Queue": [[298, 8, 1, "", "empty"], [298, 8, 1, "", "full"], [298, 8, 1, "", "get"], [298, 8, 1, "", "get_nowait"], [298, 8, 1, "", "join"], [298, 8, 1, "", "put"], [298, 8, 1, "", "put_nowait"], [298, 8, 1, "", "qsize"], [298, 8, 1, "", "task_done"]], "queue.SimpleQueue": [[298, 8, 1, "", "empty"], [298, 8, 1, "", "get"], [298, 8, 1, "", "get_nowait"], [298, 8, 1, "", "put"], [298, 8, 1, "", "put_nowait"], [298, 8, 1, "", "qsize"]], "quopri": [[299, 12, 1, "", "decode"], [299, 12, 1, "", "decodestring"], [299, 12, 1, "", "encode"], [299, 12, 1, "", "encodestring"]], "random": [[300, 11, 1, "", "Random"], [300, 11, 1, "", "SystemRandom"], [300, 12, 1, "", "betavariate"], [300, 12, 1, "", "binomialvariate"], [300, 12, 1, "", "choice"], [300, 12, 1, "", "choices"], [300, 12, 1, "", "expovariate"], [300, 12, 1, "", "gammavariate"], [300, 12, 1, "", "gauss"], [300, 12, 1, "", "getrandbits"], [300, 12, 1, "", "getstate"], [300, 12, 1, "", "lognormvariate"], [300, 12, 1, "", "normalvariate"], [300, 12, 1, "", "paretovariate"], [300, 12, 1, "", "randbytes"], [300, 12, 1, "", "randint"], [300, 12, 1, "", "random"], [300, 12, 1, "", "randrange"], [300, 12, 1, "", "sample"], [300, 12, 1, "", "seed"], [300, 12, 1, "", "setstate"], [300, 12, 1, "", "shuffle"], [300, 12, 1, "", "triangular"], [300, 12, 1, "", "uniform"], [300, 12, 1, "", "vonmisesvariate"], [300, 12, 1, "", "weibullvariate"]], "range": [[324, 7, 1, "", "start"], [324, 7, 1, "", "step"], [324, 7, 1, "", "stop"]], "re": [[301, 9, 1, "", "A"], [301, 9, 1, "", "ASCII"], [301, 9, 1, "", "DEBUG"], [301, 9, 1, "", "DOTALL"], [301, 9, 1, "", "I"], [301, 9, 1, "", "IGNORECASE"], [301, 9, 1, "", "L"], [301, 9, 1, "", "LOCALE"], [301, 9, 1, "", "M"], [301, 9, 1, "", "MULTILINE"], [301, 11, 1, "", "Match"], [301, 9, 1, "", "NOFLAG"], [301, 11, 1, "", "Pattern"], [301, 11, 1, "", "RegexFlag"], [301, 9, 1, "", "S"], [301, 9, 1, "", "U"], [301, 9, 1, "", "UNICODE"], [301, 9, 1, "", "VERBOSE"], [301, 9, 1, "", "X"], [301, 12, 1, "", "compile"], [301, 6, 1, "", "error"], [301, 12, 1, "", "escape"], [301, 12, 1, "", "findall"], [301, 12, 1, "", "finditer"], [301, 12, 1, "", "fullmatch"], [301, 12, 1, "", "match"], [301, 12, 1, "", "purge"], [301, 12, 1, "", "search"], [301, 12, 1, "", "split"], [301, 12, 1, "", "sub"], [301, 12, 1, "", "subn"]], "re.Match": [[301, 8, 1, "", "__getitem__"], [301, 8, 1, "", "end"], [301, 7, 1, "", "endpos"], [301, 8, 1, "", "expand"], [301, 8, 1, "", "group"], [301, 8, 1, "", "groupdict"], [301, 8, 1, "", "groups"], [301, 7, 1, "", "lastgroup"], [301, 7, 1, "", "lastindex"], [301, 7, 1, "", "pos"], [301, 7, 1, "", "re"], [301, 8, 1, "", "span"], [301, 8, 1, "", "start"], [301, 7, 1, "", "string"]], "re.Pattern": [[301, 8, 1, "", "findall"], [301, 8, 1, "", "finditer"], [301, 7, 1, "", "flags"], [301, 8, 1, "", "fullmatch"], [301, 7, 1, "", "groupindex"], [301, 7, 1, "", "groups"], [301, 8, 1, "", "match"], [301, 7, 1, "", "pattern"], [301, 8, 1, "", "search"], [301, 8, 1, "", "split"], [301, 8, 1, "", "sub"], [301, 8, 1, "", "subn"]], "re.error": [[301, 7, 1, "", "colno"], [301, 7, 1, "", "lineno"], [301, 7, 1, "", "msg"], [301, 7, 1, "", "pattern"], [301, 7, 1, "", "pos"]], "readline": [[302, 12, 1, "", "add_history"], [302, 12, 1, "", "append_history_file"], [302, 12, 1, "", "clear_history"], [302, 12, 1, "", "get_begidx"], [302, 12, 1, "", "get_completer"], [302, 12, 1, "", "get_completer_delims"], [302, 12, 1, "", "get_completion_type"], [302, 12, 1, "", "get_current_history_length"], [302, 12, 1, "", "get_endidx"], [302, 12, 1, "", "get_history_item"], [302, 12, 1, "", "get_history_length"], [302, 12, 1, "", "get_line_buffer"], [302, 12, 1, "", "insert_text"], [302, 12, 1, "", "parse_and_bind"], [302, 12, 1, "", "read_history_file"], [302, 12, 1, "", "read_init_file"], [302, 12, 1, "", "redisplay"], [302, 12, 1, "", "remove_history_item"], [302, 12, 1, "", "replace_history_item"], [302, 12, 1, "", "set_auto_history"], [302, 12, 1, "", "set_completer"], [302, 12, 1, "", "set_completer_delims"], [302, 12, 1, "", "set_completion_display_matches_hook"], [302, 12, 1, "", "set_history_length"], [302, 12, 1, "", "set_pre_input_hook"], [302, 12, 1, "", "set_startup_hook"], [302, 12, 1, "", "write_history_file"]], "reprlib": [[303, 11, 1, "", "Repr"], [303, 9, 1, "", "aRepr"], [303, 12, 1, "", "recursive_repr"], [303, 12, 1, "", "repr"]], "reprlib.Repr": [[303, 7, 1, "", "fillvalue"], [303, 7, 1, "", "indent"], [303, 7, 1, "", "maxarray"], [303, 7, 1, "", "maxdeque"], [303, 7, 1, "", "maxdict"], [303, 7, 1, "", "maxfrozenset"], [303, 7, 1, "", "maxlevel"], [303, 7, 1, "", "maxlist"], [303, 7, 1, "", "maxlong"], [303, 7, 1, "", "maxother"], [303, 7, 1, "", "maxset"], [303, 7, 1, "", "maxstring"], [303, 7, 1, "", "maxtuple"], [303, 8, 1, "", "repr"], [303, 8, 1, "", "repr1"]], "resource": [[304, 9, 1, "", "RLIMIT_AS"], [304, 9, 1, "", "RLIMIT_CORE"], [304, 9, 1, "", "RLIMIT_CPU"], [304, 9, 1, "", "RLIMIT_DATA"], [304, 9, 1, "", "RLIMIT_FSIZE"], [304, 9, 1, "", "RLIMIT_KQUEUES"], [304, 9, 1, "", "RLIMIT_MEMLOCK"], [304, 9, 1, "", "RLIMIT_MSGQUEUE"], [304, 9, 1, "", "RLIMIT_NICE"], [304, 9, 1, "", "RLIMIT_NOFILE"], [304, 9, 1, "", "RLIMIT_NPROC"], [304, 9, 1, "", "RLIMIT_NPTS"], [304, 9, 1, "", "RLIMIT_OFILE"], [304, 9, 1, "", "RLIMIT_RSS"], [304, 9, 1, "", "RLIMIT_RTPRIO"], [304, 9, 1, "", "RLIMIT_RTTIME"], [304, 9, 1, "", "RLIMIT_SBSIZE"], [304, 9, 1, "", "RLIMIT_SIGPENDING"], [304, 9, 1, "", "RLIMIT_STACK"], [304, 9, 1, "", "RLIMIT_SWAP"], [304, 9, 1, "", "RLIMIT_VMEM"], [304, 9, 1, "", "RLIM_INFINITY"], [304, 9, 1, "", "RUSAGE_BOTH"], [304, 9, 1, "", "RUSAGE_CHILDREN"], [304, 9, 1, "", "RUSAGE_SELF"], [304, 9, 1, "", "RUSAGE_THREAD"], [304, 6, 1, "", "error"], [304, 12, 1, "", "getpagesize"], [304, 12, 1, "", "getrlimit"], [304, 12, 1, "", "getrusage"], [304, 12, 1, "", "prlimit"], [304, 12, 1, "", "setrlimit"]], "rlcompleter.Completer": [[305, 8, 1, "", "complete"]], "runpy": [[306, 12, 1, "", "run_module"], [306, 12, 1, "", "run_path"]], "sched": [[307, 11, 1, "", "scheduler"]], "sched.scheduler": [[307, 8, 1, "", "cancel"], [307, 8, 1, "", "empty"], [307, 8, 1, "", "enter"], [307, 8, 1, "", "enterabs"], [307, 7, 1, "", "queue"], [307, 8, 1, "", "run"]], "secrets": [[308, 11, 1, "", "SystemRandom"], [308, 12, 1, "", "choice"], [308, 12, 1, "", "compare_digest"], [308, 12, 1, "", "randbelow"], [308, 12, 1, "", "randbits"], [308, 12, 1, "", "token_bytes"], [308, 12, 1, "", "token_hex"], [308, 12, 1, "", "token_urlsafe"]], "select": [[310, 7, 1, "", "PIPE_BUF"], [310, 12, 1, "", "devpoll"], [310, 12, 1, "", "epoll"], [310, 6, 1, "", "error"], [310, 12, 1, "", "kevent"], [310, 12, 1, "", "kqueue"], [310, 12, 1, "", "poll"], [310, 12, 1, "", "select"]], "select.devpoll": [[310, 8, 1, "", "close"], [310, 7, 1, "", "closed"], [310, 8, 1, "", "fileno"], [310, 8, 1, "", "modify"], [310, 8, 1, "", "poll"], [310, 8, 1, "", "register"], [310, 8, 1, "", "unregister"]], "select.epoll": [[310, 8, 1, "", "close"], [310, 7, 1, "", "closed"], [310, 8, 1, "", "fileno"], [310, 8, 1, "", "fromfd"], [310, 8, 1, "", "modify"], [310, 8, 1, "", "poll"], [310, 8, 1, "", "register"], [310, 8, 1, "", "unregister"]], "select.kevent": [[310, 7, 1, "", "data"], [310, 7, 1, "", "fflags"], [310, 7, 1, "", "filter"], [310, 7, 1, "", "flags"], [310, 7, 1, "", "ident"], [310, 7, 1, "", "udata"]], "select.kqueue": [[310, 8, 1, "", "close"], [310, 7, 1, "", "closed"], [310, 8, 1, "", "control"], [310, 8, 1, "", "fileno"], [310, 8, 1, "", "fromfd"]], "select.poll": [[310, 8, 1, "", "modify"], [310, 8, 1, "", "poll"], [310, 8, 1, "", "register"], [310, 8, 1, "", "unregister"]], "selectors": [[311, 11, 1, "", "BaseSelector"], [311, 11, 1, "", "DefaultSelector"], [311, 11, 1, "", "DevpollSelector"], [311, 9, 1, "", "EVENT_READ"], [311, 9, 1, "", "EVENT_WRITE"], [311, 11, 1, "", "EpollSelector"], [311, 11, 1, "", "KqueueSelector"], [311, 11, 1, "", "PollSelector"], [311, 11, 1, "", "SelectSelector"], [311, 11, 1, "", "SelectorKey"]], "selectors.BaseSelector": [[311, 8, 1, "", "close"], [311, 8, 1, "", "get_key"], [311, 8, 1, "", "get_map"], [311, 8, 1, "", "modify"], [311, 8, 1, "", "register"], [311, 8, 1, "", "select"], [311, 8, 1, "", "unregister"]], "selectors.DevpollSelector": [[311, 8, 1, "", "fileno"]], "selectors.EpollSelector": [[311, 8, 1, "", "fileno"]], "selectors.KqueueSelector": [[311, 8, 1, "", "fileno"]], "selectors.SelectorKey": [[311, 7, 1, "", "data"], [311, 7, 1, "", "events"], [311, 7, 1, "", "fd"], [311, 7, 1, "", "fileobj"]], "shelve": [[312, 11, 1, "", "BsdDbShelf"], [312, 11, 1, "", "DbfilenameShelf"], [312, 11, 1, "", "Shelf"], [312, 12, 1, "", "open"]], "shelve.Shelf": [[312, 8, 1, "", "close"], [312, 8, 1, "", "sync"]], "shlex": [[313, 12, 1, "", "join"], [313, 12, 1, "", "quote"], [313, 11, 1, "", "shlex"], [313, 12, 1, "", "split"]], "shlex.shlex": [[313, 7, 1, "", "commenters"], [313, 7, 1, "", "debug"], [313, 7, 1, "", "eof"], [313, 8, 1, "", "error_leader"], [313, 7, 1, "", "escape"], [313, 7, 1, "", "escapedquotes"], [313, 8, 1, "", "get_token"], [313, 7, 1, "", "infile"], [313, 7, 1, "", "instream"], [313, 7, 1, "", "lineno"], [313, 8, 1, "", "pop_source"], [313, 7, 1, "", "punctuation_chars"], [313, 8, 1, "", "push_source"], [313, 8, 1, "", "push_token"], [313, 7, 1, "", "quotes"], [313, 8, 1, "", "read_token"], [313, 7, 1, "", "source"], [313, 8, 1, "", "sourcehook"], [313, 7, 1, "", "token"], [313, 7, 1, "", "whitespace"], [313, 7, 1, "", "whitespace_split"], [313, 7, 1, "", "wordchars"]], "shutil": [[314, 6, 1, "", "Error"], [314, 6, 1, "", "SameFileError"], [314, 12, 1, "", "chown"], [314, 12, 1, "", "copy"], [314, 12, 1, "", "copy2"], [314, 12, 1, "", "copyfile"], [314, 12, 1, "", "copyfileobj"], [314, 12, 1, "", "copymode"], [314, 12, 1, "", "copystat"], [314, 12, 1, "", "copytree"], [314, 12, 1, "", "disk_usage"], [314, 12, 1, "", "get_archive_formats"], [314, 12, 1, "", "get_terminal_size"], [314, 12, 1, "", "get_unpack_formats"], [314, 12, 1, "", "ignore_patterns"], [314, 12, 1, "", "make_archive"], [314, 12, 1, "", "move"], [314, 12, 1, "", "register_archive_format"], [314, 12, 1, "", "register_unpack_format"], [314, 12, 1, "", "rmtree"], [314, 12, 1, "", "unpack_archive"], [314, 12, 1, "", "unregister_archive_format"], [314, 12, 1, "", "unregister_unpack_format"], [314, 12, 1, "", "which"]], "shutil.rmtree": [[314, 7, 1, "", "avoids_symlink_attacks"]], "signal": [[315, 9, 1, "", "CTRL_BREAK_EVENT"], [315, 9, 1, "", "CTRL_C_EVENT"], [315, 11, 1, "", "Handlers"], [315, 9, 1, "", "ITIMER_PROF"], [315, 9, 1, "", "ITIMER_REAL"], [315, 9, 1, "", "ITIMER_VIRTUAL"], [315, 6, 1, "", "ItimerError"], [315, 9, 1, "", "NSIG"], [315, 9, 1, "", "SIGABRT"], [315, 9, 1, "", "SIGALRM"], [315, 9, 1, "", "SIGBREAK"], [315, 9, 1, "", "SIGBUS"], [315, 9, 1, "", "SIGCHLD"], [315, 9, 1, "", "SIGCLD"], [315, 9, 1, "", "SIGCONT"], [315, 9, 1, "", "SIGFPE"], [315, 9, 1, "", "SIGHUP"], [315, 9, 1, "", "SIGILL"], [315, 9, 1, "", "SIGINT"], [315, 9, 1, "", "SIGKILL"], [315, 9, 1, "", "SIGPIPE"], [315, 9, 1, "", "SIGSEGV"], [315, 9, 1, "", "SIGSTKFLT"], [315, 9, 1, "", "SIGTERM"], [315, 9, 1, "", "SIGUSR1"], [315, 9, 1, "", "SIGUSR2"], [315, 9, 1, "", "SIGWINCH"], [315, 9, 1, "", "SIG_BLOCK"], [315, 9, 1, "", "SIG_DFL"], [315, 9, 1, "", "SIG_IGN"], [315, 9, 1, "", "SIG_SETMASK"], [315, 9, 1, "", "SIG_UNBLOCK"], [315, 11, 1, "", "Sigmasks"], [315, 11, 1, "", "Signals"], [315, 12, 1, "", "alarm"], [315, 12, 1, "", "getitimer"], [315, 12, 1, "", "getsignal"], [315, 12, 1, "", "pause"], [315, 12, 1, "", "pidfd_send_signal"], [315, 12, 1, "", "pthread_kill"], [315, 12, 1, "", "pthread_sigmask"], [315, 12, 1, "", "raise_signal"], [315, 12, 1, "", "set_wakeup_fd"], [315, 12, 1, "", "setitimer"], [315, 12, 1, "", "siginterrupt"], [315, 12, 1, "", "signal"], [315, 12, 1, "", "sigpending"], [315, 12, 1, "", "sigtimedwait"], [315, 12, 1, "", "sigwait"], [315, 12, 1, "", "sigwaitinfo"], [315, 12, 1, "", "strsignal"], [315, 12, 1, "", "valid_signals"]], "site": [[316, 9, 1, "", "ENABLE_USER_SITE"], [316, 9, 1, "", "PREFIXES"], [316, 9, 1, "", "USER_BASE"], [316, 9, 1, "", "USER_SITE"], [316, 12, 1, "", "addsitedir"], [316, 12, 1, "", "getsitepackages"], [316, 12, 1, "", "getuserbase"], [316, 12, 1, "", "getusersitepackages"], [316, 12, 1, "", "main"], [316, 14, 1, "cmdoption-site-user-base", "--user-base"], [316, 14, 1, "cmdoption-site-user-site", "--user-site"]], "slice": [[403, 8, 1, "", "indices"]], "smtplib": [[317, 11, 1, "", "LMTP"], [317, 11, 1, "", "SMTP"], [317, 6, 1, "", "SMTPAuthenticationError"], [317, 6, 1, "", "SMTPConnectError"], [317, 6, 1, "", "SMTPDataError"], [317, 6, 1, "", "SMTPException"], [317, 6, 1, "", "SMTPHeloError"], [317, 6, 1, "", "SMTPNotSupportedError"], [317, 6, 1, "", "SMTPRecipientsRefused"], [317, 6, 1, "", "SMTPResponseException"], [317, 6, 1, "", "SMTPSenderRefused"], [317, 6, 1, "", "SMTPServerDisconnected"], [317, 11, 1, "", "SMTP_SSL"]], "smtplib.SMTP": [[317, 8, 1, "", "auth"], [317, 8, 1, "", "connect"], [317, 8, 1, "", "docmd"], [317, 8, 1, "", "ehlo"], [317, 8, 1, "", "ehlo_or_helo_if_needed"], [317, 8, 1, "", "has_extn"], [317, 8, 1, "", "helo"], [317, 8, 1, "", "login"], [317, 8, 1, "", "quit"], [317, 8, 1, "", "send_message"], [317, 8, 1, "", "sendmail"], [317, 8, 1, "", "set_debuglevel"], [317, 8, 1, "", "starttls"], [317, 8, 1, "", "verify"]], "socket": [[318, 9, 1, "", "AF_ALG"], [318, 9, 1, "", "AF_CAN"], [318, 9, 1, "", "AF_DIVERT"], [318, 9, 1, "", "AF_HYPERV"], [318, 9, 1, "", "AF_INET"], [318, 9, 1, "", "AF_INET6"], [318, 9, 1, "", "AF_LINK"], [318, 9, 1, "", "AF_PACKET"], [318, 9, 1, "", "AF_QIPCRTR"], [318, 9, 1, "", "AF_RDS"], [318, 9, 1, "", "AF_UNIX"], [318, 9, 1, "", "AF_VSOCK"], [318, 9, 1, "", "BDADDR_ANY"], [318, 9, 1, "", "BDADDR_LOCAL"], [318, 9, 1, "", "CAN_BCM"], [318, 9, 1, "", "CAN_ISOTP"], [318, 9, 1, "", "CAN_J1939"], [318, 9, 1, "", "CAN_RAW_FD_FRAMES"], [318, 9, 1, "", "CAN_RAW_JOIN_FILTERS"], [318, 12, 1, "", "CMSG_LEN"], [318, 12, 1, "", "CMSG_SPACE"], [318, 9, 1, "", "ETHERTYPE_ARP"], [318, 9, 1, "", "ETHERTYPE_IP"], [318, 9, 1, "", "ETHERTYPE_IPV6"], [318, 9, 1, "", "ETHERTYPE_VLAN"], [318, 9, 1, "", "ETH_P_ALL"], [318, 9, 1, "", "HCI_DATA_DIR"], [318, 9, 1, "", "HCI_FILTER"], [318, 9, 1, "", "HCI_TIME_STAMP"], [318, 9, 1, "", "HVSOCKET_ADDRESS_FLAG_PASSTHRU"], [318, 9, 1, "", "HVSOCKET_CONNECTED_SUSPEND"], [318, 9, 1, "", "HVSOCKET_CONNECT_TIMEOUT"], [318, 9, 1, "", "HVSOCKET_CONNECT_TIMEOUT_MAX"], [318, 9, 1, "", "HV_GUID_BROADCAST"], [318, 9, 1, "", "HV_GUID_CHILDREN"], [318, 9, 1, "", "HV_GUID_LOOPBACK"], [318, 9, 1, "", "HV_GUID_PARENT"], [318, 9, 1, "", "HV_GUID_WILDCARD"], [318, 9, 1, "", "HV_GUID_ZERO"], [318, 9, 1, "", "HV_PROTOCOL_RAW"], [318, 9, 1, "", "IOCTL_VM_SOCKETS_GET_LOCAL_CID"], [318, 9, 1, "", "LOCAL_CREDS"], [318, 9, 1, "", "LOCAL_CREDS_PERSISTENT"], [318, 9, 1, "", "PF_CAN"], [318, 9, 1, "", "PF_DIVERT"], [318, 9, 1, "", "PF_PACKET"], [318, 9, 1, "", "PF_RDS"], [318, 9, 1, "", "SCM_CREDS2"], [318, 9, 1, "", "SIO_KEEPALIVE_VALS"], [318, 9, 1, "", "SIO_LOOPBACK_FAST_PATH"], [318, 9, 1, "", "SIO_RCVALL"], [318, 9, 1, "", "SOCK_CLOEXEC"], [318, 9, 1, "", "SOCK_DGRAM"], [318, 9, 1, "", "SOCK_NONBLOCK"], [318, 9, 1, "", "SOCK_RAW"], [318, 9, 1, "", "SOCK_RDM"], [318, 9, 1, "", "SOCK_SEQPACKET"], [318, 9, 1, "", "SOCK_STREAM"], [318, 9, 1, "", "SOL_ALG"], [318, 9, 1, "", "SOL_RDS"], [318, 9, 1, "", "SOMAXCONN"], [318, 9, 1, "", "SO_INCOMING_CPU"], [318, 9, 1, "", "SocketType"], [318, 12, 1, "", "close"], [318, 12, 1, "", "create_connection"], [318, 12, 1, "", "create_server"], [318, 6, 1, "", "error"], [318, 12, 1, "", "fromfd"], [318, 12, 1, "", "fromshare"], [318, 6, 1, "", "gaierror"], [318, 12, 1, "", "getaddrinfo"], [318, 12, 1, "", "getdefaulttimeout"], [318, 12, 1, "", "getfqdn"], [318, 12, 1, "", "gethostbyaddr"], [318, 12, 1, "", "gethostbyname"], [318, 12, 1, "", "gethostbyname_ex"], [318, 12, 1, "", "gethostname"], [318, 12, 1, "", "getnameinfo"], [318, 12, 1, "", "getprotobyname"], [318, 12, 1, "", "getservbyname"], [318, 12, 1, "", "getservbyport"], [318, 12, 1, "", "has_dualstack_ipv6"], [318, 9, 1, "", "has_ipv6"], [318, 6, 1, "", "herror"], [318, 12, 1, "", "htonl"], [318, 12, 1, "", "htons"], [318, 12, 1, "", "if_indextoname"], [318, 12, 1, "", "if_nameindex"], [318, 12, 1, "", "if_nametoindex"], [318, 12, 1, "", "inet_aton"], [318, 12, 1, "", "inet_ntoa"], [318, 12, 1, "", "inet_ntop"], [318, 12, 1, "", "inet_pton"], [318, 12, 1, "", "ntohl"], [318, 12, 1, "", "ntohs"], [318, 12, 1, "", "recv_fds"], [318, 12, 1, "", "send_fds"], [318, 12, 1, "", "setdefaulttimeout"], [318, 12, 1, "", "sethostname"], [318, 11, 1, "", "socket"], [318, 12, 1, "", "socketpair"], [318, 6, 1, "", "timeout"]], "socket.socket": [[318, 8, 1, "", "accept"], [318, 8, 1, "", "bind"], [318, 8, 1, "", "close"], [318, 8, 1, "", "connect"], [318, 8, 1, "", "connect_ex"], [318, 8, 1, "", "detach"], [318, 8, 1, "", "dup"], [318, 7, 1, "", "family"], [318, 8, 1, "", "fileno"], [318, 8, 1, "", "get_inheritable"], [318, 8, 1, "", "getblocking"], [318, 8, 1, "", "getpeername"], [318, 8, 1, "", "getsockname"], [318, 8, 1, "", "getsockopt"], [318, 8, 1, "", "gettimeout"], [318, 8, 1, "", "ioctl"], [318, 8, 1, "", "listen"], [318, 8, 1, "", "makefile"], [318, 7, 1, "", "proto"], [318, 8, 1, "", "recv"], [318, 8, 1, "", "recv_into"], [318, 8, 1, "", "recvfrom"], [318, 8, 1, "", "recvfrom_into"], [318, 8, 1, "", "recvmsg"], [318, 8, 1, "", "recvmsg_into"], [318, 8, 1, "", "send"], [318, 8, 1, "", "sendall"], [318, 8, 1, "", "sendfile"], [318, 8, 1, "", "sendmsg"], [318, 8, 1, "", "sendmsg_afalg"], [318, 8, 1, "", "sendto"], [318, 8, 1, "", "set_inheritable"], [318, 8, 1, "", "setblocking"], [318, 8, 1, "", "setsockopt"], [318, 8, 1, "", "settimeout"], [318, 8, 1, "", "share"], [318, 8, 1, "", "shutdown"], [318, 7, 1, "", "type"]], "socketserver": [[319, 11, 1, "", "BaseRequestHandler"], [319, 11, 1, "", "BaseServer"], [319, 11, 1, "", "DatagramRequestHandler"], [319, 11, 1, "", "ForkingMixIn"], [319, 11, 1, "", "ForkingTCPServer"], [319, 11, 1, "", "ForkingUDPServer"], [319, 11, 1, "", "ForkingUnixDatagramServer"], [319, 11, 1, "", "ForkingUnixStreamServer"], [319, 11, 1, "", "StreamRequestHandler"], [319, 11, 1, "", "TCPServer"], [319, 11, 1, "", "ThreadingMixIn"], [319, 11, 1, "", "ThreadingTCPServer"], [319, 11, 1, "", "ThreadingUDPServer"], [319, 11, 1, "", "ThreadingUnixDatagramServer"], [319, 11, 1, "", "ThreadingUnixStreamServer"], [319, 11, 1, "", "UDPServer"], [319, 11, 1, "", "UnixDatagramServer"], [319, 11, 1, "", "UnixStreamServer"]], "socketserver.BaseRequestHandler": [[319, 8, 1, "", "finish"], [319, 8, 1, "", "handle"], [319, 8, 1, "", "setup"]], "socketserver.BaseServer": [[319, 7, 1, "", "RequestHandlerClass"], [319, 7, 1, "", "address_family"], [319, 7, 1, "", "allow_reuse_address"], [319, 8, 1, "", "fileno"], [319, 8, 1, "", "finish_request"], [319, 8, 1, "", "get_request"], [319, 8, 1, "", "handle_error"], [319, 8, 1, "", "handle_request"], [319, 8, 1, "", "handle_timeout"], [319, 8, 1, "", "process_request"], [319, 7, 1, "", "request_queue_size"], [319, 8, 1, "", "serve_forever"], [319, 8, 1, "", "server_activate"], [319, 7, 1, "", "server_address"], [319, 8, 1, "", "server_bind"], [319, 8, 1, "", "server_close"], [319, 8, 1, "", "service_actions"], [319, 8, 1, "", "shutdown"], [319, 7, 1, "", "socket"], [319, 7, 1, "", "socket_type"], [319, 7, 1, "", "timeout"], [319, 8, 1, "", "verify_request"]], "sqlite3": [[320, 11, 1, "", "Blob"], [320, 11, 1, "", "Connection"], [320, 11, 1, "", "Cursor"], [320, 6, 1, "", "DataError"], [320, 6, 1, "", "DatabaseError"], [320, 6, 1, "", "Error"], [320, 6, 1, "", "IntegrityError"], [320, 6, 1, "", "InterfaceError"], [320, 6, 1, "", "InternalError"], [320, 9, 1, "", "LEGACY_TRANSACTION_CONTROL"], [320, 6, 1, "", "NotSupportedError"], [320, 6, 1, "", "OperationalError"], [320, 9, 1, "", "PARSE_COLNAMES"], [320, 9, 1, "", "PARSE_DECLTYPES"], [320, 11, 1, "", "PrepareProtocol"], [320, 6, 1, "", "ProgrammingError"], [320, 11, 1, "", "Row"], [320, 9, 1, "", "SQLITE_DBCONFIG_DEFENSIVE"], [320, 9, 1, "", "SQLITE_DBCONFIG_DQS_DDL"], [320, 9, 1, "", "SQLITE_DBCONFIG_DQS_DML"], [320, 9, 1, "", "SQLITE_DBCONFIG_ENABLE_FKEY"], [320, 9, 1, "", "SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER"], [320, 9, 1, "", "SQLITE_DBCONFIG_ENABLE_LOAD_EXTENSION"], [320, 9, 1, "", "SQLITE_DBCONFIG_ENABLE_QPSG"], [320, 9, 1, "", "SQLITE_DBCONFIG_ENABLE_TRIGGER"], [320, 9, 1, "", "SQLITE_DBCONFIG_ENABLE_VIEW"], [320, 9, 1, "", "SQLITE_DBCONFIG_LEGACY_ALTER_TABLE"], [320, 9, 1, "", "SQLITE_DBCONFIG_LEGACY_FILE_FORMAT"], [320, 9, 1, "", "SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE"], [320, 9, 1, "", "SQLITE_DBCONFIG_RESET_DATABASE"], [320, 9, 1, "", "SQLITE_DBCONFIG_TRIGGER_EQP"], [320, 9, 1, "", "SQLITE_DBCONFIG_TRUSTED_SCHEMA"], [320, 9, 1, "", "SQLITE_DBCONFIG_WRITABLE_SCHEMA"], [320, 9, 1, "", "SQLITE_DENY"], [320, 9, 1, "", "SQLITE_IGNORE"], [320, 9, 1, "", "SQLITE_OK"], [320, 6, 1, "", "Warning"], [320, 9, 1, "", "apilevel"], [320, 12, 1, "", "complete_statement"], [320, 12, 1, "", "connect"], [320, 12, 1, "", "enable_callback_tracebacks"], [320, 9, 1, "", "paramstyle"], [320, 12, 1, "", "register_adapter"], [320, 12, 1, "", "register_converter"], [320, 9, 1, "", "sqlite_version"], [320, 9, 1, "", "sqlite_version_info"], [320, 9, 1, "", "threadsafety"], [320, 9, 1, "", "version"], [320, 9, 1, "", "version_info"]], "sqlite3.Blob": [[320, 8, 1, "", "close"], [320, 8, 1, "", "read"], [320, 8, 1, "", "seek"], [320, 8, 1, "", "tell"], [320, 8, 1, "", "write"]], "sqlite3.Connection": [[320, 7, 1, "", "autocommit"], [320, 8, 1, "", "backup"], [320, 8, 1, "", "blobopen"], [320, 8, 1, "", "close"], [320, 8, 1, "", "commit"], [320, 8, 1, "", "create_aggregate"], [320, 8, 1, "", "create_collation"], [320, 8, 1, "", "create_function"], [320, 8, 1, "", "create_window_function"], [320, 8, 1, "", "cursor"], [320, 8, 1, "", "deserialize"], [320, 8, 1, "", "enable_load_extension"], [320, 8, 1, "", "execute"], [320, 8, 1, "", "executemany"], [320, 8, 1, "", "executescript"], [320, 8, 1, "", "getconfig"], [320, 8, 1, "", "getlimit"], [320, 7, 1, "", "in_transaction"], [320, 8, 1, "", "interrupt"], [320, 7, 1, "", "isolation_level"], [320, 8, 1, "", "iterdump"], [320, 8, 1, "", "load_extension"], [320, 8, 1, "", "rollback"], [320, 7, 1, "", "row_factory"], [320, 8, 1, "", "serialize"], [320, 8, 1, "", "set_authorizer"], [320, 8, 1, "", "set_progress_handler"], [320, 8, 1, "", "set_trace_callback"], [320, 8, 1, "", "setconfig"], [320, 8, 1, "", "setlimit"], [320, 7, 1, "", "text_factory"], [320, 7, 1, "", "total_changes"]], "sqlite3.Cursor": [[320, 7, 1, "", "arraysize"], [320, 8, 1, "", "close"], [320, 7, 1, "", "connection"], [320, 7, 1, "", "description"], [320, 8, 1, "", "execute"], [320, 8, 1, "", "executemany"], [320, 8, 1, "", "executescript"], [320, 8, 1, "", "fetchall"], [320, 8, 1, "", "fetchmany"], [320, 8, 1, "", "fetchone"], [320, 7, 1, "", "lastrowid"], [320, 7, 1, "", "row_factory"], [320, 7, 1, "", "rowcount"], [320, 8, 1, "", "setinputsizes"], [320, 8, 1, "", "setoutputsize"]], "sqlite3.Error": [[320, 7, 1, "", "sqlite_errorcode"], [320, 7, 1, "", "sqlite_errorname"]], "sqlite3.Row": [[320, 8, 1, "", "keys"]], "ssl": [[321, 9, 1, "", "ALERT_DESCRIPTION_HANDSHAKE_FAILURE"], [321, 9, 1, "", "ALERT_DESCRIPTION_INTERNAL_ERROR"], [321, 11, 1, "", "AlertDescription"], [321, 9, 1, "", "CERT_NONE"], [321, 9, 1, "", "CERT_OPTIONAL"], [321, 9, 1, "", "CERT_REQUIRED"], [321, 9, 1, "", "CHANNEL_BINDING_TYPES"], [321, 6, 1, "", "CertificateError"], [321, 12, 1, "", "DER_cert_to_PEM_cert"], [321, 9, 1, "", "HAS_ALPN"], [321, 9, 1, "", "HAS_ECDH"], [321, 9, 1, "", "HAS_NEVER_CHECK_COMMON_NAME"], [321, 9, 1, "", "HAS_NPN"], [321, 9, 1, "", "HAS_SNI"], [321, 9, 1, "", "HAS_SSLv2"], [321, 9, 1, "", "HAS_SSLv3"], [321, 9, 1, "", "HAS_TLSv1"], [321, 9, 1, "", "HAS_TLSv1_1"], [321, 9, 1, "", "HAS_TLSv1_2"], [321, 9, 1, "", "HAS_TLSv1_3"], [321, 11, 1, "", "MemoryBIO"], [321, 9, 1, "", "OPENSSL_VERSION"], [321, 9, 1, "", "OPENSSL_VERSION_INFO"], [321, 9, 1, "", "OPENSSL_VERSION_NUMBER"], [321, 9, 1, "", "OP_ALL"], [321, 9, 1, "", "OP_CIPHER_SERVER_PREFERENCE"], [321, 9, 1, "", "OP_ENABLE_KTLS"], [321, 9, 1, "", "OP_ENABLE_MIDDLEBOX_COMPAT"], [321, 9, 1, "", "OP_IGNORE_UNEXPECTED_EOF"], [321, 9, 1, "", "OP_LEGACY_SERVER_CONNECT"], [321, 9, 1, "", "OP_NO_COMPRESSION"], [321, 9, 1, "", "OP_NO_RENEGOTIATION"], [321, 9, 1, "", "OP_NO_SSLv2"], [321, 9, 1, "", "OP_NO_SSLv3"], [321, 9, 1, "", "OP_NO_TICKET"], [321, 9, 1, "", "OP_NO_TLSv1"], [321, 9, 1, "", "OP_NO_TLSv1_1"], [321, 9, 1, "", "OP_NO_TLSv1_2"], [321, 9, 1, "", "OP_NO_TLSv1_3"], [321, 9, 1, "", "OP_SINGLE_DH_USE"], [321, 9, 1, "", "OP_SINGLE_ECDH_USE"], [321, 11, 1, "", "Options"], [321, 12, 1, "", "PEM_cert_to_DER_cert"], [321, 9, 1, "", "PROTOCOL_SSLv23"], [321, 9, 1, "", "PROTOCOL_SSLv3"], [321, 9, 1, "", "PROTOCOL_TLS"], [321, 9, 1, "", "PROTOCOL_TLS_CLIENT"], [321, 9, 1, "", "PROTOCOL_TLS_SERVER"], [321, 9, 1, "", "PROTOCOL_TLSv1"], [321, 9, 1, "", "PROTOCOL_TLSv1_1"], [321, 9, 1, "", "PROTOCOL_TLSv1_2"], [321, 12, 1, "", "RAND_add"], [321, 12, 1, "", "RAND_bytes"], [321, 12, 1, "", "RAND_status"], [321, 6, 1, "", "SSLCertVerificationError"], [321, 11, 1, "", "SSLContext"], [321, 6, 1, "", "SSLEOFError"], [321, 6, 1, "", "SSLError"], [321, 11, 1, "", "SSLErrorNumber"], [321, 11, 1, "", "SSLObject"], [321, 11, 1, "", "SSLSession"], [321, 11, 1, "", "SSLSocket"], [321, 6, 1, "", "SSLSyscallError"], [321, 6, 1, "", "SSLWantReadError"], [321, 6, 1, "", "SSLWantWriteError"], [321, 6, 1, "", "SSLZeroReturnError"], [321, 11, 1, "", "TLSVersion"], [321, 9, 1, "", "VERIFY_ALLOW_PROXY_CERTS"], [321, 9, 1, "", "VERIFY_CRL_CHECK_CHAIN"], [321, 9, 1, "", "VERIFY_CRL_CHECK_LEAF"], [321, 9, 1, "", "VERIFY_DEFAULT"], [321, 9, 1, "", "VERIFY_X509_PARTIAL_CHAIN"], [321, 9, 1, "", "VERIFY_X509_STRICT"], [321, 9, 1, "", "VERIFY_X509_TRUSTED_FIRST"], [321, 11, 1, "", "VerifyFlags"], [321, 11, 1, "", "VerifyMode"], [321, 12, 1, "", "cert_time_to_seconds"], [321, 12, 1, "", "create_default_context"], [321, 12, 1, "", "enum_certificates"], [321, 12, 1, "", "enum_crls"], [321, 12, 1, "", "get_default_verify_paths"], [321, 12, 1, "", "get_server_certificate"]], "ssl.MemoryBIO": [[321, 7, 1, "", "eof"], [321, 7, 1, "", "pending"], [321, 8, 1, "", "read"], [321, 8, 1, "", "write"], [321, 8, 1, "", "write_eof"]], "ssl.Purpose": [[321, 9, 1, "", "CLIENT_AUTH"], [321, 9, 1, "", "SERVER_AUTH"]], "ssl.SSLCertVerificationError": [[321, 7, 1, "", "verify_code"], [321, 7, 1, "", "verify_message"]], "ssl.SSLContext": [[321, 8, 1, "", "cert_store_stats"], [321, 7, 1, "", "check_hostname"], [321, 8, 1, "", "get_ca_certs"], [321, 8, 1, "", "get_ciphers"], [321, 7, 1, "", "hostname_checks_common_name"], [321, 7, 1, "", "keylog_filename"], [321, 8, 1, "", "load_cert_chain"], [321, 8, 1, "", "load_default_certs"], [321, 8, 1, "", "load_dh_params"], [321, 8, 1, "", "load_verify_locations"], [321, 7, 1, "", "maximum_version"], [321, 7, 1, "", "minimum_version"], [321, 7, 1, "", "num_tickets"], [321, 7, 1, "", "options"], [321, 7, 1, "", "post_handshake_auth"], [321, 7, 1, "", "protocol"], [321, 7, 1, "", "security_level"], [321, 8, 1, "", "session_stats"], [321, 8, 1, "", "set_alpn_protocols"], [321, 8, 1, "", "set_ciphers"], [321, 8, 1, "", "set_default_verify_paths"], [321, 8, 1, "", "set_ecdh_curve"], [321, 8, 1, "", "set_npn_protocols"], [321, 7, 1, "", "set_servername_callback"], [321, 7, 1, "", "sni_callback"], [321, 7, 1, "", "sslobject_class"], [321, 7, 1, "", "sslsocket_class"], [321, 7, 1, "", "verify_flags"], [321, 7, 1, "", "verify_mode"], [321, 8, 1, "", "wrap_bio"], [321, 8, 1, "", "wrap_socket"]], "ssl.SSLError": [[321, 7, 1, "", "library"], [321, 7, 1, "", "reason"]], "ssl.SSLSession": [[321, 7, 1, "", "has_ticket"], [321, 7, 1, "", "id"], [321, 7, 1, "", "ticket_lifetime_hint"], [321, 7, 1, "", "time"], [321, 7, 1, "", "timeout"]], "ssl.SSLSocket": [[321, 8, 1, "", "cipher"], [321, 8, 1, "", "compression"], [321, 7, 1, "", "context"], [321, 8, 1, "", "do_handshake"], [321, 8, 1, "", "get_channel_binding"], [321, 8, 1, "", "get_unverified_chain"], [321, 8, 1, "", "get_verified_chain"], [321, 8, 1, "", "getpeercert"], [321, 8, 1, "", "pending"], [321, 8, 1, "", "read"], [321, 8, 1, "", "selected_alpn_protocol"], [321, 8, 1, "", "selected_npn_protocol"], [321, 7, 1, "", "server_hostname"], [321, 7, 1, "", "server_side"], [321, 7, 1, "", "session"], [321, 7, 1, "", "session_reused"], [321, 8, 1, "", "shared_ciphers"], [321, 8, 1, "", "unwrap"], [321, 8, 1, "", "verify_client_post_handshake"], [321, 8, 1, "", "version"], [321, 8, 1, "", "write"]], "ssl.TLSVersion": [[321, 7, 1, "", "MAXIMUM_SUPPORTED"], [321, 7, 1, "", "MINIMUM_SUPPORTED"], [321, 7, 1, "", "SSLv3"], [321, 7, 1, "", "TLSv1"], [321, 7, 1, "", "TLSv1_1"], [321, 7, 1, "", "TLSv1_2"], [321, 7, 1, "", "TLSv1_3"]], "stat": [[322, 9, 1, "", "FILE_ATTRIBUTE_ARCHIVE"], [322, 9, 1, "", "FILE_ATTRIBUTE_COMPRESSED"], [322, 9, 1, "", "FILE_ATTRIBUTE_DEVICE"], [322, 9, 1, "", "FILE_ATTRIBUTE_DIRECTORY"], [322, 9, 1, "", "FILE_ATTRIBUTE_ENCRYPTED"], [322, 9, 1, "", "FILE_ATTRIBUTE_HIDDEN"], [322, 9, 1, "", "FILE_ATTRIBUTE_INTEGRITY_STREAM"], [322, 9, 1, "", "FILE_ATTRIBUTE_NORMAL"], [322, 9, 1, "", "FILE_ATTRIBUTE_NOT_CONTENT_INDEXED"], [322, 9, 1, "", "FILE_ATTRIBUTE_NO_SCRUB_DATA"], [322, 9, 1, "", "FILE_ATTRIBUTE_OFFLINE"], [322, 9, 1, "", "FILE_ATTRIBUTE_READONLY"], [322, 9, 1, "", "FILE_ATTRIBUTE_REPARSE_POINT"], [322, 9, 1, "", "FILE_ATTRIBUTE_SPARSE_FILE"], [322, 9, 1, "", "FILE_ATTRIBUTE_SYSTEM"], [322, 9, 1, "", "FILE_ATTRIBUTE_TEMPORARY"], [322, 9, 1, "", "FILE_ATTRIBUTE_VIRTUAL"], [322, 9, 1, "", "IO_REPARSE_TAG_APPEXECLINK"], [322, 9, 1, "", "IO_REPARSE_TAG_MOUNT_POINT"], [322, 9, 1, "", "IO_REPARSE_TAG_SYMLINK"], [322, 9, 1, "", "SF_APPEND"], [322, 9, 1, "", "SF_ARCHIVED"], [322, 9, 1, "", "SF_IMMUTABLE"], [322, 9, 1, "", "SF_NOUNLINK"], [322, 9, 1, "", "SF_SNAPSHOT"], [322, 9, 1, "", "ST_ATIME"], [322, 9, 1, "", "ST_CTIME"], [322, 9, 1, "", "ST_DEV"], [322, 9, 1, "", "ST_GID"], [322, 9, 1, "", "ST_INO"], [322, 9, 1, "", "ST_MODE"], [322, 9, 1, "", "ST_MTIME"], [322, 9, 1, "", "ST_NLINK"], [322, 9, 1, "", "ST_SIZE"], [322, 9, 1, "", "ST_UID"], [322, 9, 1, "", "S_ENFMT"], [322, 9, 1, "", "S_IEXEC"], [322, 9, 1, "", "S_IFBLK"], [322, 9, 1, "", "S_IFCHR"], [322, 9, 1, "", "S_IFDIR"], [322, 9, 1, "", "S_IFDOOR"], [322, 9, 1, "", "S_IFIFO"], [322, 9, 1, "", "S_IFLNK"], [322, 12, 1, "", "S_IFMT"], [322, 9, 1, "", "S_IFPORT"], [322, 9, 1, "", "S_IFREG"], [322, 9, 1, "", "S_IFSOCK"], [322, 9, 1, "", "S_IFWHT"], [322, 12, 1, "", "S_IMODE"], [322, 9, 1, "", "S_IREAD"], [322, 9, 1, "", "S_IRGRP"], [322, 9, 1, "", "S_IROTH"], [322, 9, 1, "", "S_IRUSR"], [322, 9, 1, "", "S_IRWXG"], [322, 9, 1, "", "S_IRWXO"], [322, 9, 1, "", "S_IRWXU"], [322, 12, 1, "", "S_ISBLK"], [322, 12, 1, "", "S_ISCHR"], [322, 12, 1, "", "S_ISDIR"], [322, 12, 1, "", "S_ISDOOR"], [322, 12, 1, "", "S_ISFIFO"], [322, 9, 1, "", "S_ISGID"], [322, 12, 1, "", "S_ISLNK"], [322, 12, 1, "", "S_ISPORT"], [322, 12, 1, "", "S_ISREG"], [322, 12, 1, "", "S_ISSOCK"], [322, 9, 1, "", "S_ISUID"], [322, 9, 1, "", "S_ISVTX"], [322, 12, 1, "", "S_ISWHT"], [322, 9, 1, "", "S_IWGRP"], [322, 9, 1, "", "S_IWOTH"], [322, 9, 1, "", "S_IWRITE"], [322, 9, 1, "", "S_IWUSR"], [322, 9, 1, "", "S_IXGRP"], [322, 9, 1, "", "S_IXOTH"], [322, 9, 1, "", "S_IXUSR"], [322, 9, 1, "", "UF_APPEND"], [322, 9, 1, "", "UF_COMPRESSED"], [322, 9, 1, "", "UF_HIDDEN"], [322, 9, 1, "", "UF_IMMUTABLE"], [322, 9, 1, "", "UF_NODUMP"], [322, 9, 1, "", "UF_NOUNLINK"], [322, 9, 1, "", "UF_OPAQUE"], [322, 12, 1, "", "filemode"]], "statistics": [[323, 11, 1, "", "NormalDist"], [323, 6, 1, "", "StatisticsError"], [323, 12, 1, "", "correlation"], [323, 12, 1, "", "covariance"], [323, 12, 1, "", "fmean"], [323, 12, 1, "", "geometric_mean"], [323, 12, 1, "", "harmonic_mean"], [323, 12, 1, "", "linear_regression"], [323, 12, 1, "", "mean"], [323, 12, 1, "", "median"], [323, 12, 1, "", "median_grouped"], [323, 12, 1, "", "median_high"], [323, 12, 1, "", "median_low"], [323, 12, 1, "", "mode"], [323, 12, 1, "", "multimode"], [323, 12, 1, "", "pstdev"], [323, 12, 1, "", "pvariance"], [323, 12, 1, "", "quantiles"], [323, 12, 1, "", "stdev"], [323, 12, 1, "", "variance"]], "statistics.NormalDist": [[323, 8, 1, "", "cdf"], [323, 8, 1, "", "from_samples"], [323, 8, 1, "", "inv_cdf"], [323, 7, 1, "", "mean"], [323, 7, 1, "", "median"], [323, 7, 1, "", "mode"], [323, 8, 1, "", "overlap"], [323, 8, 1, "", "pdf"], [323, 8, 1, "", "quantiles"], [323, 8, 1, "", "samples"], [323, 7, 1, "", "stdev"], [323, 7, 1, "", "variance"], [323, 8, 1, "", "zscore"]], "str": [[324, 8, 1, "", "capitalize"], [324, 8, 1, "", "casefold"], [324, 8, 1, "", "center"], [324, 8, 1, "", "count"], [324, 8, 1, "", "encode"], [324, 8, 1, "", "endswith"], [324, 8, 1, "", "expandtabs"], [324, 8, 1, "", "find"], [324, 8, 1, "", "format"], [324, 8, 1, "", "format_map"], [324, 8, 1, "", "index"], [324, 8, 1, "", "isalnum"], [324, 8, 1, "", "isalpha"], [324, 8, 1, "", "isascii"], [324, 8, 1, "", "isdecimal"], [324, 8, 1, "", "isdigit"], [324, 8, 1, "", "isidentifier"], [324, 8, 1, "", "islower"], [324, 8, 1, "", "isnumeric"], [324, 8, 1, "", "isprintable"], [324, 8, 1, "", "isspace"], [324, 8, 1, "", "istitle"], [324, 8, 1, "", "isupper"], [324, 8, 1, "", "join"], [324, 8, 1, "", "ljust"], [324, 8, 1, "", "lower"], [324, 8, 1, "", "lstrip"], [324, 8, 1, "", "maketrans"], [324, 8, 1, "", "partition"], [324, 8, 1, "", "removeprefix"], [324, 8, 1, "", "removesuffix"], [324, 8, 1, "", "replace"], [324, 8, 1, "", "rfind"], [324, 8, 1, "", "rindex"], [324, 8, 1, "", "rjust"], [324, 8, 1, "", "rpartition"], [324, 8, 1, "", "rsplit"], [324, 8, 1, "", "rstrip"], [324, 8, 1, "", "split"], [324, 8, 1, "", "splitlines"], [324, 8, 1, "", "startswith"], [324, 8, 1, "", "strip"], [324, 8, 1, "", "swapcase"], [324, 8, 1, "", "title"], [324, 8, 1, "", "translate"], [324, 8, 1, "", "upper"], [324, 8, 1, "", "zfill"]], "string": [[325, 11, 1, "", "Formatter"], [325, 11, 1, "", "Template"], [325, 9, 1, "", "ascii_letters"], [325, 9, 1, "", "ascii_lowercase"], [325, 9, 1, "", "ascii_uppercase"], [325, 12, 1, "", "capwords"], [325, 9, 1, "", "digits"], [325, 9, 1, "", "hexdigits"], [325, 9, 1, "", "octdigits"], [325, 9, 1, "", "printable"], [325, 9, 1, "", "punctuation"], [325, 9, 1, "", "whitespace"]], "string.Formatter": [[325, 8, 1, "", "check_unused_args"], [325, 8, 1, "", "convert_field"], [325, 8, 1, "", "format"], [325, 8, 1, "", "format_field"], [325, 8, 1, "", "get_field"], [325, 8, 1, "", "get_value"], [325, 8, 1, "", "parse"], [325, 8, 1, "", "vformat"]], "string.Template": [[325, 8, 1, "", "get_identifiers"], [325, 8, 1, "", "is_valid"], [325, 8, 1, "", "safe_substitute"], [325, 8, 1, "", "substitute"], [325, 7, 1, "", "template"]], "stringprep": [[326, 12, 1, "", "in_table_a1"], [326, 12, 1, "", "in_table_b1"], [326, 12, 1, "", "in_table_c11"], [326, 12, 1, "", "in_table_c11_c12"], [326, 12, 1, "", "in_table_c12"], [326, 12, 1, "", "in_table_c21"], [326, 12, 1, "", "in_table_c21_c22"], [326, 12, 1, "", "in_table_c22"], [326, 12, 1, "", "in_table_c3"], [326, 12, 1, "", "in_table_c4"], [326, 12, 1, "", "in_table_c5"], [326, 12, 1, "", "in_table_c6"], [326, 12, 1, "", "in_table_c7"], [326, 12, 1, "", "in_table_c8"], [326, 12, 1, "", "in_table_c9"], [326, 12, 1, "", "in_table_d1"], [326, 12, 1, "", "in_table_d2"], [326, 12, 1, "", "map_table_b2"], [326, 12, 1, "", "map_table_b3"]], "struct": [[327, 11, 1, "", "Struct"], [327, 12, 1, "", "calcsize"], [327, 6, 1, "", "error"], [327, 12, 1, "", "iter_unpack"], [327, 12, 1, "", "pack"], [327, 12, 1, "", "pack_into"], [327, 12, 1, "", "unpack"], [327, 12, 1, "", "unpack_from"]], "struct.Struct": [[327, 7, 1, "", "format"], [327, 8, 1, "", "iter_unpack"], [327, 8, 1, "", "pack"], [327, 8, 1, "", "pack_into"], [327, 7, 1, "", "size"], [327, 8, 1, "", "unpack"], [327, 8, 1, "", "unpack_from"]], "subprocess": [[328, 9, 1, "", "ABOVE_NORMAL_PRIORITY_CLASS"], [328, 9, 1, "", "BELOW_NORMAL_PRIORITY_CLASS"], [328, 9, 1, "", "CREATE_BREAKAWAY_FROM_JOB"], [328, 9, 1, "", "CREATE_DEFAULT_ERROR_MODE"], [328, 9, 1, "", "CREATE_NEW_CONSOLE"], [328, 9, 1, "", "CREATE_NEW_PROCESS_GROUP"], [328, 9, 1, "", "CREATE_NO_WINDOW"], [328, 6, 1, "", "CalledProcessError"], [328, 11, 1, "", "CompletedProcess"], [328, 9, 1, "", "DETACHED_PROCESS"], [328, 9, 1, "", "DEVNULL"], [328, 9, 1, "", "HIGH_PRIORITY_CLASS"], [328, 9, 1, "", "IDLE_PRIORITY_CLASS"], [328, 9, 1, "", "NORMAL_PRIORITY_CLASS"], [328, 9, 1, "", "PIPE"], [328, 11, 1, "", "Popen"], [328, 9, 1, "", "REALTIME_PRIORITY_CLASS"], [328, 9, 1, "", "STARTF_USESHOWWINDOW"], [328, 9, 1, "", "STARTF_USESTDHANDLES"], [328, 11, 1, "", "STARTUPINFO"], [328, 9, 1, "", "STDOUT"], [328, 9, 1, "", "STD_ERROR_HANDLE"], [328, 9, 1, "", "STD_INPUT_HANDLE"], [328, 9, 1, "", "STD_OUTPUT_HANDLE"], [328, 9, 1, "", "SW_HIDE"], [328, 6, 1, "", "SubprocessError"], [328, 6, 1, "", "TimeoutExpired"], [328, 12, 1, "", "call"], [328, 12, 1, "", "check_call"], [328, 12, 1, "", "check_output"], [328, 12, 1, "", "getoutput"], [328, 12, 1, "", "getstatusoutput"], [328, 12, 1, "", "run"]], "subprocess.CalledProcessError": [[328, 7, 1, "", "cmd"], [328, 7, 1, "", "output"], [328, 7, 1, "", "returncode"], [328, 7, 1, "", "stderr"], [328, 7, 1, "", "stdout"]], "subprocess.CompletedProcess": [[328, 7, 1, "", "args"], [328, 8, 1, "", "check_returncode"], [328, 7, 1, "", "returncode"], [328, 7, 1, "", "stderr"], [328, 7, 1, "", "stdout"]], "subprocess.Popen": [[328, 7, 1, "", "args"], [328, 8, 1, "", "communicate"], [328, 8, 1, "", "kill"], [328, 7, 1, "", "pid"], [328, 8, 1, "", "poll"], [328, 7, 1, "", "returncode"], [328, 8, 1, "", "send_signal"], [328, 7, 1, "", "stderr"], [328, 7, 1, "", "stdin"], [328, 7, 1, "", "stdout"], [328, 8, 1, "", "terminate"], [328, 8, 1, "", "wait"]], "subprocess.STARTUPINFO": [[328, 7, 1, "", "dwFlags"], [328, 7, 1, "", "hStdError"], [328, 7, 1, "", "hStdInput"], [328, 7, 1, "", "hStdOutput"], [328, 7, 1, "", "lpAttributeList"], [328, 7, 1, "", "wShowWindow"]], "subprocess.TimeoutExpired": [[328, 7, 1, "", "cmd"], [328, 7, 1, "", "output"], [328, 7, 1, "", "stderr"], [328, 7, 1, "", "stdout"], [328, 7, 1, "", "timeout"]], "symtable": [[330, 11, 1, "", "Class"], [330, 11, 1, "", "Function"], [330, 11, 1, "", "Symbol"], [330, 11, 1, "", "SymbolTable"], [330, 12, 1, "", "symtable"]], "symtable.Class": [[330, 8, 1, "", "get_methods"]], "symtable.Function": [[330, 8, 1, "", "get_frees"], [330, 8, 1, "", "get_globals"], [330, 8, 1, "", "get_locals"], [330, 8, 1, "", "get_nonlocals"], [330, 8, 1, "", "get_parameters"]], "symtable.Symbol": [[330, 8, 1, "", "get_name"], [330, 8, 1, "", "get_namespace"], [330, 8, 1, "", "get_namespaces"], [330, 8, 1, "", "is_annotated"], [330, 8, 1, "", "is_assigned"], [330, 8, 1, "", "is_declared_global"], [330, 8, 1, "", "is_free"], [330, 8, 1, "", "is_global"], [330, 8, 1, "", "is_imported"], [330, 8, 1, "", "is_local"], [330, 8, 1, "", "is_namespace"], [330, 8, 1, "", "is_nonlocal"], [330, 8, 1, "", "is_parameter"], [330, 8, 1, "", "is_referenced"]], "symtable.SymbolTable": [[330, 8, 1, "", "get_children"], [330, 8, 1, "", "get_id"], [330, 8, 1, "", "get_identifiers"], [330, 8, 1, "", "get_lineno"], [330, 8, 1, "", "get_name"], [330, 8, 1, "", "get_symbols"], [330, 8, 1, "", "get_type"], [330, 8, 1, "", "has_children"], [330, 8, 1, "", "is_nested"], [330, 8, 1, "", "is_optimized"], [330, 8, 1, "", "lookup"]], "sys": [[331, 9, 1, "", "__breakpointhook__"], [331, 9, 1, "", "__displayhook__"], [331, 9, 1, "", "__excepthook__"], [331, 9, 1, "", "__interactivehook__"], [331, 9, 1, "", "__stderr__"], [331, 9, 1, "", "__stdin__"], [331, 9, 1, "", "__stdout__"], [331, 9, 1, "", "__unraisablehook__"], [331, 12, 1, "", "_clear_type_cache"], [331, 12, 1, "", "_current_exceptions"], [331, 12, 1, "", "_current_frames"], [331, 12, 1, "", "_debugmallocstats"], [331, 9, 1, "", "_emscripten_info"], [331, 12, 1, "", "_enablelegacywindowsfsencoding"], [331, 12, 1, "", "_getframe"], [331, 12, 1, "", "_getframemodulename"], [331, 9, 1, "", "_xoptions"], [331, 9, 1, "", "abiflags"], [331, 12, 1, "", "activate_stack_trampoline"], [331, 12, 1, "", "addaudithook"], [331, 9, 1, "", "api_version"], [331, 9, 1, "", "argv"], [331, 12, 1, "", "audit"], [331, 9, 1, "", "base_exec_prefix"], [331, 9, 1, "", "base_prefix"], [331, 12, 1, "", "breakpointhook"], [331, 9, 1, "", "builtin_module_names"], [331, 9, 1, "", "byteorder"], [331, 12, 1, "", "call_tracing"], [331, 9, 1, "", "copyright"], [331, 12, 1, "", "deactivate_stack_trampoline"], [331, 12, 1, "", "displayhook"], [331, 9, 1, "", "dllhandle"], [331, 9, 1, "", "dont_write_bytecode"], [331, 12, 1, "", "exc_info"], [331, 12, 1, "", "excepthook"], [331, 12, 1, "", "exception"], [331, 9, 1, "", "exec_prefix"], [331, 9, 1, "", "executable"], [331, 12, 1, "", "exit"], [331, 9, 1, "", "flags"], [331, 9, 1, "", "float_info"], [331, 9, 1, "", "float_repr_style"], [331, 12, 1, "", "get_asyncgen_hooks"], [331, 12, 1, "", "get_coroutine_origin_tracking_depth"], [331, 12, 1, "", "get_int_max_str_digits"], [331, 12, 1, "", "getallocatedblocks"], [331, 12, 1, "", "getandroidapilevel"], [331, 12, 1, "", "getdefaultencoding"], [331, 12, 1, "", "getdlopenflags"], [331, 12, 1, "", "getfilesystemencodeerrors"], [331, 12, 1, "", "getfilesystemencoding"], [331, 12, 1, "", "getprofile"], [331, 12, 1, "", "getrecursionlimit"], [331, 12, 1, "", "getrefcount"], [331, 12, 1, "", "getsizeof"], [331, 12, 1, "", "getswitchinterval"], [331, 12, 1, "", "gettrace"], [331, 12, 1, "", "getunicodeinternedsize"], [331, 12, 1, "", "getwindowsversion"], [331, 9, 1, "", "hash_info"], [331, 9, 1, "", "hexversion"], [331, 9, 1, "", "implementation"], [331, 9, 1, "", "int_info"], [331, 12, 1, "", "intern"], [331, 12, 1, "", "is_finalizing"], [331, 12, 1, "", "is_stack_trampoline_active"], [331, 9, 1, "", "last_exc"], [331, 9, 1, "", "last_traceback"], [331, 9, 1, "", "last_type"], [331, 9, 1, "", "last_value"], [331, 9, 1, "", "maxsize"], [331, 9, 1, "", "maxunicode"], [331, 9, 1, "", "meta_path"], [331, 9, 1, "", "modules"], [332, 10, 0, "-", "monitoring"], [331, 9, 1, "", "orig_argv"], [331, 9, 1, "", "path"], [331, 9, 1, "", "path_hooks"], [331, 9, 1, "", "path_importer_cache"], [331, 9, 1, "", "platform"], [331, 9, 1, "", "platlibdir"], [331, 9, 1, "", "prefix"], [331, 9, 1, "", "ps1"], [331, 9, 1, "", "ps2"], [331, 9, 1, "", "pycache_prefix"], [331, 12, 1, "", "set_asyncgen_hooks"], [331, 12, 1, "", "set_coroutine_origin_tracking_depth"], [331, 12, 1, "", "set_int_max_str_digits"], [331, 12, 1, "", "setdlopenflags"], [331, 12, 1, "", "setprofile"], [331, 12, 1, "", "setrecursionlimit"], [331, 12, 1, "", "setswitchinterval"], [331, 12, 1, "", "settrace"], [331, 9, 1, "", "stderr"], [331, 9, 1, "", "stdin"], [331, 9, 1, "", "stdlib_module_names"], [331, 9, 1, "", "stdout"], [331, 9, 1, "", "thread_info"], [331, 9, 1, "", "tracebacklimit"], [331, 12, 1, "", "unraisablehook"], [331, 9, 1, "", "version"], [331, 9, 1, "", "version_info"], [331, 9, 1, "", "warnoptions"], [331, 9, 1, "", "winver"]], "sys._emscripten_info": [[331, 7, 1, "", "emscripten_version"], [331, 7, 1, "", "pthreads"], [331, 7, 1, "", "runtime"], [331, 7, 1, "", "shared_memory"]], "sys.flags": [[331, 7, 1, "", "bytes_warning"], [331, 7, 1, "", "debug"], [331, 7, 1, "", "dev_mode"], [331, 7, 1, "", "dont_write_bytecode"], [331, 7, 1, "", "hash_randomization"], [331, 7, 1, "", "ignore_environment"], [331, 7, 1, "", "inspect"], [331, 7, 1, "", "int_max_str_digits"], [331, 7, 1, "", "interactive"], [331, 7, 1, "", "isolated"], [331, 7, 1, "", "no_site"], [331, 7, 1, "", "no_user_site"], [331, 7, 1, "", "optimize"], [331, 7, 1, "", "quiet"], [331, 7, 1, "", "safe_path"], [331, 7, 1, "", "utf8_mode"], [331, 7, 1, "", "verbose"], [331, 7, 1, "", "warn_default_encoding"]], "sys.float_info": [[331, 7, 1, "", "dig"], [331, 7, 1, "", "epsilon"], [331, 7, 1, "", "mant_dig"], [331, 7, 1, "", "max"], [331, 7, 1, "", "max_10_exp"], [331, 7, 1, "", "max_exp"], [331, 7, 1, "", "min"], [331, 7, 1, "", "min_10_exp"], [331, 7, 1, "", "min_exp"], [331, 7, 1, "", "radix"], [331, 7, 1, "", "rounds"]], "sys.hash_info": [[331, 7, 1, "", "algorithm"], [331, 7, 1, "", "hash_bits"], [331, 7, 1, "", "imag"], [331, 7, 1, "", "inf"], [331, 7, 1, "", "modulus"], [331, 7, 1, "", "nan"], [331, 7, 1, "", "seed_bits"], [331, 7, 1, "", "width"]], "sys.int_info": [[331, 7, 1, "", "bits_per_digit"], [331, 7, 1, "", "default_max_str_digits"], [331, 7, 1, "", "sizeof_digit"], [331, 7, 1, "", "str_digits_check_threshold"]], "sys.monitoring": [[332, 12, 1, "", "free_tool_id"], [332, 12, 1, "", "get_events"], [332, 12, 1, "", "get_local_events"], [332, 12, 1, "", "get_tool"], [332, 12, 1, "", "register_callback"], [332, 12, 1, "", "set_events"], [332, 12, 1, "", "set_local_events"], [332, 12, 1, "", "use_tool_id"]], "sys.thread_info": [[331, 7, 1, "", "lock"], [331, 7, 1, "", "name"], [331, 7, 1, "", "version"]], "sysconfig": [[334, 12, 1, "", "_get_preferred_schemes"], [334, 12, 1, "", "get_config_h_filename"], [334, 12, 1, "", "get_config_var"], [334, 12, 1, "", "get_config_vars"], [334, 12, 1, "", "get_default_scheme"], [334, 12, 1, "", "get_makefile_filename"], [334, 12, 1, "", "get_path"], [334, 12, 1, "", "get_path_names"], [334, 12, 1, "", "get_paths"], [334, 12, 1, "", "get_platform"], [334, 12, 1, "", "get_preferred_scheme"], [334, 12, 1, "", "get_python_version"], [334, 12, 1, "", "get_scheme_names"], [334, 12, 1, "", "is_python_build"], [334, 12, 1, "", "parse_config_h"]], "syslog": [[335, 12, 1, "", "closelog"], [335, 12, 1, "", "openlog"], [335, 12, 1, "", "setlogmask"], [335, 12, 1, "", "syslog"]], "tabnanny": [[336, 6, 1, "", "NannyNag"], [336, 12, 1, "", "check"], [336, 9, 1, "", "filename_only"], [336, 12, 1, "", "process_tokens"], [336, 9, 1, "", "verbose"]], "tarfile": [[337, 6, 1, "", "AbsoluteLinkError"], [337, 6, 1, "", "AbsolutePathError"], [337, 6, 1, "", "CompressionError"], [337, 9, 1, "", "DEFAULT_FORMAT"], [337, 9, 1, "", "ENCODING"], [337, 6, 1, "", "ExtractError"], [337, 6, 1, "", "FilterError"], [337, 9, 1, "", "GNU_FORMAT"], [337, 6, 1, "", "HeaderError"], [337, 6, 1, "", "LinkOutsideDestinationError"], [337, 6, 1, "", "OutsideDestinationError"], [337, 9, 1, "", "PAX_FORMAT"], [337, 6, 1, "", "ReadError"], [337, 6, 1, "", "SpecialFileError"], [337, 6, 1, "", "StreamError"], [337, 6, 1, "", "TarError"], [337, 11, 1, "", "TarFile"], [337, 11, 1, "", "TarInfo"], [337, 9, 1, "", "USTAR_FORMAT"], [337, 12, 1, "", "data_filter"], [337, 12, 1, "", "fully_trusted_filter"], [337, 12, 1, "", "is_tarfile"], [337, 12, 1, "", "open"], [337, 12, 1, "", "tar_filter"], [337, 14, 1, "cmdoption-tarfile-create", "--create"], [337, 14, 1, "cmdoption-tarfile-extract", "--extract"], [337, 14, 1, "cmdoption-tarfile-filter", "--filter"], [337, 14, 1, "cmdoption-tarfile-list", "--list"], [337, 14, 1, "cmdoption-tarfile-test", "--test"], [337, 14, 1, "cmdoption-tarfile-v", "--verbose"], [337, 14, 1, "cmdoption-tarfile-c", "-c"], [337, 14, 1, "cmdoption-tarfile-e", "-e"], [337, 14, 1, "cmdoption-tarfile-l", "-l"], [337, 14, 1, "cmdoption-tarfile-t", "-t"], [337, 14, 1, "cmdoption-tarfile-v", "-v"]], "tarfile.FilterError": [[337, 7, 1, "", "tarinfo"]], "tarfile.TarFile": [[337, 8, 1, "", "add"], [337, 8, 1, "", "addfile"], [337, 8, 1, "", "close"], [337, 7, 1, "", "errorlevel"], [337, 8, 1, "", "extract"], [337, 8, 1, "", "extractall"], [337, 8, 1, "", "extractfile"], [337, 7, 1, "", "extraction_filter"], [337, 8, 1, "", "getmember"], [337, 8, 1, "", "getmembers"], [337, 8, 1, "", "getnames"], [337, 8, 1, "", "gettarinfo"], [337, 8, 1, "", "list"], [337, 8, 1, "", "next"], [337, 8, 1, "", "open"], [337, 7, 1, "", "pax_headers"]], "tarfile.TarInfo": [[337, 8, 1, "", "frombuf"], [337, 8, 1, "", "fromtarfile"], [337, 7, 1, "", "gid"], [337, 7, 1, "", "gname"], [337, 8, 1, "", "isblk"], [337, 8, 1, "", "ischr"], [337, 8, 1, "", "isdev"], [337, 8, 1, "", "isdir"], [337, 8, 1, "", "isfifo"], [337, 8, 1, "", "isfile"], [337, 8, 1, "", "islnk"], [337, 8, 1, "", "isreg"], [337, 8, 1, "", "issym"], [337, 7, 1, "", "linkname"], [337, 7, 1, "", "mode"], [337, 7, 1, "", "mtime"], [337, 7, 1, "", "name"], [337, 7, 1, "", "pax_headers"], [337, 7, 1, "", "size"], [337, 8, 1, "", "tobuf"], [337, 7, 1, "", "type"], [337, 7, 1, "", "uid"], [337, 7, 1, "", "uname"]], "tempfile": [[338, 12, 1, "", "NamedTemporaryFile"], [338, 11, 1, "", "SpooledTemporaryFile"], [338, 11, 1, "", "TemporaryDirectory"], [338, 12, 1, "", "TemporaryFile"], [338, 12, 1, "", "gettempdir"], [338, 12, 1, "", "gettempdirb"], [338, 12, 1, "", "gettempprefix"], [338, 12, 1, "", "gettempprefixb"], [338, 12, 1, "", "mkdtemp"], [338, 12, 1, "", "mkstemp"], [338, 12, 1, "", "mktemp"], [338, 9, 1, "", "tempdir"]], "termios": [[339, 12, 1, "", "tcdrain"], [339, 12, 1, "", "tcflow"], [339, 12, 1, "", "tcflush"], [339, 12, 1, "", "tcgetattr"], [339, 12, 1, "", "tcgetwinsize"], [339, 12, 1, "", "tcsendbreak"], [339, 12, 1, "", "tcsetattr"], [339, 12, 1, "", "tcsetwinsize"]], "test": [[340, 10, 0, "-", "support"]], "test.support": [[340, 9, 1, "", "ALWAYS_EQ"], [340, 9, 1, "", "HAVE_DOCSTRINGS"], [340, 9, 1, "", "INTERNET_TIMEOUT"], [340, 9, 1, "", "LARGEST"], [340, 9, 1, "", "LONG_TIMEOUT"], [340, 9, 1, "", "LOOPBACK_TIMEOUT"], [340, 9, 1, "", "MAX_Py_ssize_t"], [340, 9, 1, "", "MISSING_C_DOCSTRINGS"], [340, 11, 1, "", "Matcher"], [340, 9, 1, "", "NEVER_EQ"], [340, 9, 1, "", "PGO"], [340, 9, 1, "", "PIPE_MAX_SIZE"], [340, 9, 1, "", "Py_DEBUG"], [340, 6, 1, "", "ResourceDenied"], [340, 9, 1, "", "SHORT_TIMEOUT"], [340, 9, 1, "", "SMALLEST"], [340, 9, 1, "", "SOCK_MAX_SIZE"], [340, 11, 1, "", "SaveSignals"], [340, 11, 1, "", "SuppressCrashReport"], [340, 9, 1, "", "TEST_DATA_DIR"], [340, 9, 1, "", "TEST_HOME_DIR"], [340, 9, 1, "", "TEST_HTTP_URL"], [340, 9, 1, "", "TEST_SUPPORT_DIR"], [340, 6, 1, "", "TestFailed"], [340, 12, 1, "", "adjust_int_max_str_digits"], [340, 12, 1, "", "anticipate_failure"], [340, 12, 1, "", "args_from_interpreter_flags"], [340, 12, 1, "", "bigaddrspacetest"], [340, 12, 1, "", "bigmemtest"], [340, 12, 1, "", "busy_retry"], [340, 10, 0, "-", "bytecode_helper"], [340, 12, 1, "", "calcobjsize"], [340, 12, 1, "", "calcvobjsize"], [340, 12, 1, "", "captured_stderr"], [340, 12, 1, "", "captured_stdin"], [340, 12, 1, "", "captured_stdout"], [340, 12, 1, "", "catch_unraisable_exception"], [340, 12, 1, "", "check__all__"], [340, 12, 1, "", "check_disallow_instantiation"], [340, 12, 1, "", "check_free_after_iterating"], [340, 12, 1, "", "check_impl_detail"], [340, 12, 1, "", "check_syntax_error"], [340, 12, 1, "", "checksizeof"], [340, 12, 1, "", "cpython_only"], [340, 12, 1, "", "detect_api_mismatch"], [340, 12, 1, "", "disable_faulthandler"], [340, 12, 1, "", "disable_gc"], [340, 12, 1, "", "findfile"], [340, 12, 1, "", "flush_std_streams"], [340, 12, 1, "", "gc_collect"], [340, 12, 1, "", "get_attribute"], [340, 12, 1, "", "get_original_stdout"], [340, 12, 1, "", "get_pagesize"], [340, 12, 1, "", "impl_detail"], [340, 10, 0, "-", "import_helper"], [340, 9, 1, "", "is_android"], [340, 9, 1, "", "is_jython"], [340, 12, 1, "", "is_resource_enabled"], [340, 12, 1, "", "load_package_tests"], [340, 12, 1, "", "match_test"], [340, 9, 1, "", "max_memuse"], [340, 12, 1, "", "missing_compiler_executable"], [340, 12, 1, "", "no_tracing"], [340, 12, 1, "", "open_urlresource"], [340, 12, 1, "", "optim_args_from_interpreter_flags"], [340, 10, 0, "-", "os_helper"], [340, 12, 1, "", "patch"], [340, 12, 1, "", "print_warning"], [340, 12, 1, "", "python_is_optimized"], [340, 9, 1, "", "real_max_memuse"], [340, 12, 1, "", "reap_children"], [340, 12, 1, "", "record_original_stdout"], [340, 12, 1, "", "refcount_test"], [340, 12, 1, "", "requires"], [340, 12, 1, "", "requires_IEEE_754"], [340, 12, 1, "", "requires_bz2"], [340, 12, 1, "", "requires_docstrings"], [340, 12, 1, "", "requires_freebsd_version"], [340, 12, 1, "", "requires_gzip"], [340, 12, 1, "", "requires_limited_api"], [340, 12, 1, "", "requires_linux_version"], [340, 12, 1, "", "requires_lzma"], [340, 12, 1, "", "requires_mac_version"], [340, 12, 1, "", "requires_resource"], [340, 12, 1, "", "requires_zlib"], [340, 12, 1, "", "run_doctest"], [340, 12, 1, "", "run_in_subinterp"], [340, 12, 1, "", "run_unittest"], [340, 12, 1, "", "run_with_locale"], [340, 12, 1, "", "run_with_tz"], [340, 10, 0, "-", "script_helper"], [340, 12, 1, "", "set_match_tests"], [340, 12, 1, "", "set_memlimit"], [340, 12, 1, "", "setswitchinterval"], [340, 12, 1, "", "skip_if_broken_multiprocessing_synchronize"], [340, 12, 1, "", "sleeping_retry"], [340, 10, 0, "-", "socket_helper"], [340, 12, 1, "", "sortdict"], [340, 12, 1, "", "swap_attr"], [340, 12, 1, "", "swap_item"], [340, 12, 1, "", "system_must_validate_cert"], [340, 10, 0, "-", "threading_helper"], [340, 9, 1, "", "unix_shell"], [340, 9, 1, "", "verbose"], [340, 12, 1, "", "wait_process"], [340, 10, 0, "-", "warnings_helper"], [340, 12, 1, "", "with_pymalloc"]], "test.support.Matcher": [[340, 8, 1, "", "match_value"], [340, 8, 1, "", "matches"]], "test.support.SaveSignals": [[340, 8, 1, "", "restore"], [340, 8, 1, "", "save"]], "test.support.bytecode_helper": [[340, 11, 1, "", "BytecodeTestCase"]], "test.support.bytecode_helper.BytecodeTestCase": [[340, 8, 1, "", "assertInBytecode"], [340, 8, 1, "", "assertNotInBytecode"], [340, 8, 1, "", "get_disassembly_as_string"]], "test.support.import_helper": [[340, 11, 1, "", "CleanImport"], [340, 11, 1, "", "DirsOnSysPath"], [340, 12, 1, "", "forget"], [340, 12, 1, "", "import_fresh_module"], [340, 12, 1, "", "import_module"], [340, 12, 1, "", "make_legacy_pyc"], [340, 12, 1, "", "modules_cleanup"], [340, 12, 1, "", "modules_setup"], [340, 12, 1, "", "unload"]], "test.support.os_helper": [[340, 11, 1, "", "EnvironmentVarGuard"], [340, 9, 1, "", "FS_NONASCII"], [340, 11, 1, "", "FakePath"], [340, 9, 1, "", "SAVEDCWD"], [340, 9, 1, "", "TESTFN"], [340, 9, 1, "", "TESTFN_NONASCII"], [340, 9, 1, "", "TESTFN_UNDECODABLE"], [340, 9, 1, "", "TESTFN_UNENCODABLE"], [340, 9, 1, "", "TESTFN_UNICODE"], [340, 12, 1, "", "can_symlink"], [340, 12, 1, "", "can_xattr"], [340, 12, 1, "", "change_cwd"], [340, 12, 1, "", "create_empty_file"], [340, 12, 1, "", "fd_count"], [340, 12, 1, "", "fs_is_case_insensitive"], [340, 12, 1, "", "make_bad_fd"], [340, 12, 1, "", "rmdir"], [340, 12, 1, "", "rmtree"], [340, 12, 1, "", "skip_unless_symlink"], [340, 12, 1, "", "skip_unless_xattr"], [340, 12, 1, "", "temp_cwd"], [340, 12, 1, "", "temp_dir"], [340, 12, 1, "", "temp_umask"], [340, 12, 1, "", "unlink"]], "test.support.os_helper.EnvironmentVarGuard": [[340, 8, 1, "", "set"], [340, 8, 1, "", "unset"]], "test.support.script_helper": [[340, 12, 1, "", "assert_python_failure"], [340, 12, 1, "", "assert_python_ok"], [340, 12, 1, "", "interpreter_requires_environment"], [340, 12, 1, "", "kill_python"], [340, 12, 1, "", "make_pkg"], [340, 12, 1, "", "make_script"], [340, 12, 1, "", "make_zip_pkg"], [340, 12, 1, "", "make_zip_script"], [340, 12, 1, "", "run_python_until_end"], [340, 12, 1, "", "spawn_python"]], "test.support.socket_helper": [[340, 9, 1, "", "IPV6_ENABLED"], [340, 12, 1, "", "bind_port"], [340, 12, 1, "", "bind_unix_socket"], [340, 12, 1, "", "find_unused_port"], [340, 12, 1, "", "skip_unless_bind_unix_socket"], [340, 12, 1, "", "transient_internet"]], "test.support.threading_helper": [[340, 12, 1, "", "catch_threading_exception"], [340, 12, 1, "", "join_thread"], [340, 12, 1, "", "reap_threads"], [340, 12, 1, "", "start_threads"], [340, 12, 1, "", "threading_cleanup"], [340, 12, 1, "", "threading_setup"], [340, 12, 1, "", "wait_threads_exit"]], "test.support.warnings_helper": [[340, 11, 1, "", "WarningsRecorder"], [340, 12, 1, "", "check_no_resource_warning"], [340, 12, 1, "", "check_syntax_warning"], [340, 12, 1, "", "check_warnings"], [340, 12, 1, "", "ignore_warnings"]], "textwrap": [[342, 11, 1, "", "TextWrapper"], [342, 12, 1, "", "dedent"], [342, 12, 1, "", "fill"], [342, 12, 1, "", "indent"], [342, 12, 1, "", "shorten"], [342, 12, 1, "", "wrap"]], "textwrap.TextWrapper": [[342, 7, 1, "", "break_long_words"], [342, 7, 1, "", "break_on_hyphens"], [342, 7, 1, "", "drop_whitespace"], [342, 7, 1, "", "expand_tabs"], [342, 8, 1, "", "fill"], [342, 7, 1, "", "fix_sentence_endings"], [342, 7, 1, "", "initial_indent"], [342, 7, 1, "", "max_lines"], [342, 7, 1, "", "placeholder"], [342, 7, 1, "", "replace_whitespace"], [342, 7, 1, "", "subsequent_indent"], [342, 7, 1, "", "tabsize"], [342, 7, 1, "", "width"], [342, 8, 1, "", "wrap"]], "threading": [[343, 11, 1, "", "Barrier"], [343, 11, 1, "", "BoundedSemaphore"], [343, 6, 1, "", "BrokenBarrierError"], [343, 11, 1, "", "Condition"], [343, 11, 1, "", "Event"], [343, 11, 1, "", "Lock"], [343, 11, 1, "", "RLock"], [343, 11, 1, "", "Semaphore"], [343, 9, 1, "", "TIMEOUT_MAX"], [343, 11, 1, "", "Thread"], [343, 11, 1, "", "Timer"], [343, 9, 1, "", "__excepthook__"], [343, 12, 1, "", "active_count"], [343, 12, 1, "", "current_thread"], [343, 12, 1, "", "enumerate"], [343, 12, 1, "", "excepthook"], [343, 12, 1, "", "get_ident"], [343, 12, 1, "", "get_native_id"], [343, 12, 1, "", "getprofile"], [343, 12, 1, "", "gettrace"], [343, 11, 1, "", "local"], [343, 12, 1, "", "main_thread"], [343, 12, 1, "", "setprofile"], [343, 12, 1, "", "setprofile_all_threads"], [343, 12, 1, "", "settrace"], [343, 12, 1, "", "settrace_all_threads"], [343, 12, 1, "", "stack_size"]], "threading.Barrier": [[343, 8, 1, "", "abort"], [343, 7, 1, "", "broken"], [343, 7, 1, "", "n_waiting"], [343, 7, 1, "", "parties"], [343, 8, 1, "", "reset"], [343, 8, 1, "", "wait"]], "threading.Condition": [[343, 8, 1, "", "acquire"], [343, 8, 1, "", "notify"], [343, 8, 1, "", "notify_all"], [343, 8, 1, "", "release"], [343, 8, 1, "", "wait"], [343, 8, 1, "", "wait_for"]], "threading.Event": [[343, 8, 1, "", "clear"], [343, 8, 1, "", "is_set"], [343, 8, 1, "", "set"], [343, 8, 1, "", "wait"]], "threading.Lock": [[343, 8, 1, "", "acquire"], [343, 8, 1, "", "locked"], [343, 8, 1, "", "release"]], "threading.RLock": [[343, 8, 1, "", "acquire"], [343, 8, 1, "", "release"]], "threading.Semaphore": [[343, 8, 1, "", "acquire"], [343, 8, 1, "", "release"]], "threading.Thread": [[343, 7, 1, "", "daemon"], [343, 8, 1, "", "getName"], [343, 7, 1, "", "ident"], [343, 8, 1, "", "isDaemon"], [343, 8, 1, "", "is_alive"], [343, 8, 1, "", "join"], [343, 7, 1, "", "name"], [343, 7, 1, "", "native_id"], [343, 8, 1, "", "run"], [343, 8, 1, "", "setDaemon"], [343, 8, 1, "", "setName"], [343, 8, 1, "", "start"]], "threading.Timer": [[343, 8, 1, "", "cancel"]], "time": [[344, 9, 1, "", "CLOCK_BOOTTIME"], [344, 9, 1, "", "CLOCK_HIGHRES"], [344, 9, 1, "", "CLOCK_MONOTONIC"], [344, 9, 1, "", "CLOCK_MONOTONIC_RAW"], [344, 9, 1, "", "CLOCK_PROCESS_CPUTIME_ID"], [344, 9, 1, "", "CLOCK_PROF"], [344, 9, 1, "", "CLOCK_REALTIME"], [344, 9, 1, "", "CLOCK_TAI"], [344, 9, 1, "", "CLOCK_THREAD_CPUTIME_ID"], [344, 9, 1, "", "CLOCK_UPTIME"], [344, 9, 1, "", "CLOCK_UPTIME_RAW"], [344, 9, 1, "", "altzone"], [344, 12, 1, "", "asctime"], [344, 12, 1, "", "clock_getres"], [344, 12, 1, "", "clock_gettime"], [344, 12, 1, "", "clock_gettime_ns"], [344, 12, 1, "", "clock_settime"], [344, 12, 1, "", "clock_settime_ns"], [344, 12, 1, "", "ctime"], [344, 9, 1, "", "daylight"], [344, 12, 1, "", "get_clock_info"], [344, 12, 1, "", "gmtime"], [344, 12, 1, "", "localtime"], [344, 12, 1, "", "mktime"], [344, 12, 1, "", "monotonic"], [344, 12, 1, "", "monotonic_ns"], [344, 12, 1, "", "perf_counter"], [344, 12, 1, "", "perf_counter_ns"], [344, 12, 1, "", "process_time"], [344, 12, 1, "", "process_time_ns"], [344, 12, 1, "", "pthread_getcpuclockid"], [344, 12, 1, "", "sleep"], [344, 12, 1, "", "strftime"], [344, 12, 1, "", "strptime"], [344, 11, 1, "", "struct_time"], [344, 12, 1, "", "thread_time"], [344, 12, 1, "", "thread_time_ns"], [344, 12, 1, "", "time"], [344, 12, 1, "", "time_ns"], [344, 9, 1, "", "timezone"], [344, 9, 1, "", "tzname"], [344, 12, 1, "", "tzset"]], "timeit": [[345, 11, 1, "", "Timer"], [345, 12, 1, "", "default_timer"], [345, 12, 1, "", "repeat"], [345, 12, 1, "", "timeit"], [345, 14, 1, "cmdoption-timeit-h", "--help"], [345, 14, 1, "cmdoption-timeit-n", "--number"], [345, 14, 1, "cmdoption-timeit-p", "--process"], [345, 14, 1, "cmdoption-timeit-r", "--repeat"], [345, 14, 1, "cmdoption-timeit-s", "--setup"], [345, 14, 1, "cmdoption-timeit-u", "--unit"], [345, 14, 1, "cmdoption-timeit-v", "--verbose"], [345, 14, 1, "cmdoption-timeit-h", "-h"], [345, 14, 1, "cmdoption-timeit-n", "-n"], [345, 14, 1, "cmdoption-timeit-p", "-p"], [345, 14, 1, "cmdoption-timeit-r", "-r"], [345, 14, 1, "cmdoption-timeit-s", "-s"], [345, 14, 1, "cmdoption-timeit-u", "-u"], [345, 14, 1, "cmdoption-timeit-v", "-v"]], "timeit.Timer": [[345, 8, 1, "", "autorange"], [345, 8, 1, "", "print_exc"], [345, 8, 1, "", "repeat"], [345, 8, 1, "", "timeit"]], "tkinter": [[347, 9, 1, "", "EXCEPTION"], [347, 9, 1, "", "READABLE"], [347, 12, 1, "", "Tcl"], [347, 11, 1, "", "Tk"], [347, 9, 1, "", "WRITABLE"], [348, 10, 0, "-", "colorchooser"], [178, 10, 0, "-", "commondialog"], [349, 10, 0, "-", "dnd"], [178, 10, 0, "-", "filedialog"], [350, 10, 0, "-", "font"], [351, 10, 0, "-", "messagebox"], [352, 10, 0, "-", "scrolledtext"], [178, 10, 0, "-", "simpledialog"], [353, 10, 0, "-", "ttk"]], "tkinter.Tk": [[347, 7, 1, "", "children"], [347, 7, 1, "", "master"], [347, 7, 1, "", "tk"]], "tkinter.Widget.tk": [[347, 8, 1, "", "createfilehandler"], [347, 8, 1, "", "deletefilehandler"]], "tkinter.colorchooser": [[348, 11, 1, "", "Chooser"], [348, 12, 1, "", "askcolor"]], "tkinter.commondialog": [[178, 11, 1, "", "Dialog"]], "tkinter.commondialog.Dialog": [[178, 8, 1, "", "show"]], "tkinter.dnd": [[349, 11, 1, "", "DndHandler"], [349, 12, 1, "", "dnd_start"]], "tkinter.dnd.DndHandler": [[349, 8, 1, "", "cancel"], [349, 8, 1, "", "finish"], [349, 8, 1, "", "on_motion"], [349, 8, 1, "", "on_release"]], "tkinter.filedialog": [[178, 11, 1, "", "Directory"], [178, 11, 1, "", "FileDialog"], [178, 11, 1, "", "LoadFileDialog"], [178, 11, 1, "", "Open"], [178, 11, 1, "", "SaveAs"], [178, 11, 1, "", "SaveFileDialog"], [178, 12, 1, "", "askdirectory"], [178, 12, 1, "", "askopenfile"], [178, 12, 1, "", "askopenfilename"], [178, 12, 1, "", "askopenfilenames"], [178, 12, 1, "", "askopenfiles"], [178, 12, 1, "", "asksaveasfile"], [178, 12, 1, "", "asksaveasfilename"]], "tkinter.filedialog.FileDialog": [[178, 8, 1, "", "cancel_command"], [178, 8, 1, "", "dirs_double_event"], [178, 8, 1, "", "dirs_select_event"], [178, 8, 1, "", "files_double_event"], [178, 8, 1, "", "files_select_event"], [178, 8, 1, "", "filter_command"], [178, 8, 1, "", "get_filter"], [178, 8, 1, "", "get_selection"], [178, 8, 1, "", "go"], [178, 8, 1, "", "ok_event"], [178, 8, 1, "", "quit"], [178, 8, 1, "", "set_filter"], [178, 8, 1, "", "set_selection"]], "tkinter.filedialog.LoadFileDialog": [[178, 8, 1, "", "ok_command"]], "tkinter.filedialog.SaveFileDialog": [[178, 8, 1, "", "ok_command"]], "tkinter.font": [[350, 9, 1, "", "BOLD"], [350, 11, 1, "", "Font"], [350, 9, 1, "", "ITALIC"], [350, 9, 1, "", "NORMAL"], [350, 9, 1, "", "ROMAN"], [350, 12, 1, "", "families"], [350, 12, 1, "", "names"], [350, 12, 1, "", "nametofont"]], "tkinter.font.Font": [[350, 8, 1, "", "actual"], [350, 8, 1, "", "cget"], [350, 8, 1, "", "config"], [350, 8, 1, "", "copy"], [350, 8, 1, "", "measure"], [350, 8, 1, "", "metrics"]], "tkinter.messagebox": [[351, 11, 1, "", "Message"], [351, 8, 1, "", "askokcancel"], [351, 8, 1, "", "askquestion"], [351, 8, 1, "", "askretrycancel"], [351, 8, 1, "", "askyesno"], [351, 8, 1, "", "askyesnocancel"], [351, 8, 1, "", "showerror"], [351, 8, 1, "", "showinfo"], [351, 8, 1, "", "showwarning"]], "tkinter.scrolledtext": [[352, 11, 1, "", "ScrolledText"]], "tkinter.scrolledtext.ScrolledText": [[352, 7, 1, "", "frame"], [352, 7, 1, "", "vbar"]], "tkinter.simpledialog": [[178, 11, 1, "", "Dialog"], [178, 12, 1, "", "askfloat"], [178, 12, 1, "", "askinteger"], [178, 12, 1, "", "askstring"]], "tkinter.simpledialog.Dialog": [[178, 8, 1, "", "body"], [178, 8, 1, "", "buttonbox"]], "tkinter.ttk": [[353, 11, 1, "", "Combobox"], [353, 11, 1, "", "Notebook"], [353, 11, 1, "", "Progressbar"], [353, 11, 1, "", "Spinbox"], [353, 11, 1, "", "Style"], [353, 11, 1, "", "Treeview"], [353, 11, 1, "", "Widget"]], "tkinter.ttk.Combobox": [[353, 8, 1, "", "current"], [353, 8, 1, "", "get"], [353, 8, 1, "", "set"]], "tkinter.ttk.Notebook": [[353, 8, 1, "", "add"], [353, 8, 1, "", "enable_traversal"], [353, 8, 1, "", "forget"], [353, 8, 1, "", "hide"], [353, 8, 1, "", "identify"], [353, 8, 1, "", "index"], [353, 8, 1, "", "insert"], [353, 8, 1, "", "select"], [353, 8, 1, "", "tab"], [353, 8, 1, "", "tabs"]], "tkinter.ttk.Progressbar": [[353, 8, 1, "", "start"], [353, 8, 1, "", "step"], [353, 8, 1, "", "stop"]], "tkinter.ttk.Spinbox": [[353, 8, 1, "", "get"], [353, 8, 1, "", "set"]], "tkinter.ttk.Style": [[353, 8, 1, "", "configure"], [353, 8, 1, "", "element_create"], [353, 8, 1, "", "element_names"], [353, 8, 1, "", "element_options"], [353, 8, 1, "", "layout"], [353, 8, 1, "", "lookup"], [353, 8, 1, "", "map"], [353, 8, 1, "", "theme_create"], [353, 8, 1, "", "theme_names"], [353, 8, 1, "", "theme_settings"], [353, 8, 1, "", "theme_use"]], "tkinter.ttk.Treeview": [[353, 8, 1, "", "bbox"], [353, 8, 1, "", "column"], [353, 8, 1, "", "delete"], [353, 8, 1, "", "detach"], [353, 8, 1, "", "exists"], [353, 8, 1, "", "focus"], [353, 8, 1, "", "get_children"], [353, 8, 1, "", "heading"], [353, 8, 1, "", "identify"], [353, 8, 1, "", "identify_column"], [353, 8, 1, "", "identify_element"], [353, 8, 1, "", "identify_region"], [353, 8, 1, "", "identify_row"], [353, 8, 1, "", "index"], [353, 8, 1, "", "insert"], [353, 8, 1, "", "item"], [353, 8, 1, "", "move"], [353, 8, 1, "", "next"], [353, 8, 1, "", "parent"], [353, 8, 1, "", "prev"], [353, 8, 1, "", "reattach"], [353, 8, 1, "", "see"], [353, 8, 1, "", "selection"], [353, 8, 1, "", "selection_add"], [353, 8, 1, "", "selection_remove"], [353, 8, 1, "", "selection_set"], [353, 8, 1, "", "selection_toggle"], [353, 8, 1, "", "set"], [353, 8, 1, "", "set_children"], [353, 8, 1, "", "tag_bind"], [353, 8, 1, "", "tag_configure"], [353, 8, 1, "", "tag_has"], [353, 8, 1, "", "xview"], [353, 8, 1, "", "yview"]], "tkinter.ttk.Widget": [[353, 8, 1, "", "identify"], [353, 8, 1, "", "instate"], [353, 8, 1, "", "state"]], "token": [[354, 9, 1, "", "AMPER"], [354, 9, 1, "", "AMPEREQUAL"], [354, 9, 1, "", "AT"], [354, 9, 1, "", "ATEQUAL"], [354, 9, 1, "", "CIRCUMFLEX"], [354, 9, 1, "", "CIRCUMFLEXEQUAL"], [354, 9, 1, "", "COLON"], [354, 9, 1, "", "COLONEQUAL"], [354, 9, 1, "", "COMMA"], [354, 9, 1, "", "COMMENT"], [354, 9, 1, "", "DEDENT"], [354, 9, 1, "", "DOT"], [354, 9, 1, "", "DOUBLESLASH"], [354, 9, 1, "", "DOUBLESLASHEQUAL"], [354, 9, 1, "", "DOUBLESTAR"], [354, 9, 1, "", "DOUBLESTAREQUAL"], [354, 9, 1, "", "ELLIPSIS"], [354, 9, 1, "", "ENCODING"], [354, 9, 1, "", "ENDMARKER"], [354, 9, 1, "", "EQEQUAL"], [354, 9, 1, "", "EQUAL"], [354, 9, 1, "", "ERRORTOKEN"], [354, 9, 1, "", "EXCLAMATION"], [354, 9, 1, "", "FSTRING_END"], [354, 9, 1, "", "FSTRING_MIDDLE"], [354, 9, 1, "", "FSTRING_START"], [354, 9, 1, "", "GREATER"], [354, 9, 1, "", "GREATEREQUAL"], [354, 9, 1, "", "INDENT"], [354, 12, 1, "", "ISEOF"], [354, 12, 1, "", "ISNONTERMINAL"], [354, 12, 1, "", "ISTERMINAL"], [354, 9, 1, "", "LBRACE"], [354, 9, 1, "", "LEFTSHIFT"], [354, 9, 1, "", "LEFTSHIFTEQUAL"], [354, 9, 1, "", "LESS"], [354, 9, 1, "", "LESSEQUAL"], [354, 9, 1, "", "LPAR"], [354, 9, 1, "", "LSQB"], [354, 9, 1, "", "MINEQUAL"], [354, 9, 1, "", "MINUS"], [354, 9, 1, "", "NAME"], [354, 9, 1, "", "NEWLINE"], [354, 9, 1, "", "NL"], [354, 9, 1, "", "NOTEQUAL"], [354, 9, 1, "", "NT_OFFSET"], [354, 9, 1, "", "NUMBER"], [354, 9, 1, "", "N_TOKENS"], [354, 9, 1, "", "OP"], [354, 9, 1, "", "PERCENT"], [354, 9, 1, "", "PERCENTEQUAL"], [354, 9, 1, "", "PLUS"], [354, 9, 1, "", "PLUSEQUAL"], [354, 9, 1, "", "RARROW"], [354, 9, 1, "", "RBRACE"], [354, 9, 1, "", "RIGHTSHIFT"], [354, 9, 1, "", "RIGHTSHIFTEQUAL"], [354, 9, 1, "", "RPAR"], [354, 9, 1, "", "RSQB"], [354, 9, 1, "", "SEMI"], [354, 9, 1, "", "SLASH"], [354, 9, 1, "", "SLASHEQUAL"], [354, 9, 1, "", "SOFT_KEYWORD"], [354, 9, 1, "", "STAR"], [354, 9, 1, "", "STAREQUAL"], [354, 9, 1, "", "STRING"], [354, 9, 1, "", "TILDE"], [354, 9, 1, "", "TYPE_COMMENT"], [354, 9, 1, "", "TYPE_IGNORE"], [354, 9, 1, "", "VBAR"], [354, 9, 1, "", "VBAREQUAL"], [354, 9, 1, "", "tok_name"]], "tokenize": [[355, 6, 1, "", "TokenError"], [355, 12, 1, "", "detect_encoding"], [355, 12, 1, "", "generate_tokens"], [355, 12, 1, "", "open"], [355, 12, 1, "", "tokenize"], [355, 12, 1, "", "untokenize"], [355, 14, 1, "cmdoption-tokenize-e", "--exact"], [355, 14, 1, "cmdoption-tokenize-h", "--help"], [355, 14, 1, "cmdoption-tokenize-e", "-e"], [355, 14, 1, "cmdoption-tokenize-h", "-h"]], "tomllib": [[356, 6, 1, "", "TOMLDecodeError"], [356, 12, 1, "", "load"], [356, 12, 1, "", "loads"]], "trace": [[357, 11, 1, "", "CoverageResults"], [357, 11, 1, "", "Trace"], [357, 14, 1, "cmdoption-trace-c", "--count"], [357, 14, 1, "cmdoption-trace-C", "--coverdir"], [357, 14, 1, "cmdoption-trace-f", "--file"], [357, 14, 1, "cmdoption-trace-help", "--help"], [357, 14, 1, "cmdoption-trace-ignore-dir", "--ignore-dir"], [357, 14, 1, "cmdoption-trace-ignore-module", "--ignore-module"], [357, 14, 1, "cmdoption-trace-l", "--listfuncs"], [357, 14, 1, "cmdoption-trace-m", "--missing"], [357, 14, 1, "cmdoption-trace-R", "--no-report"], [357, 14, 1, "cmdoption-trace-r", "--report"], [357, 14, 1, "cmdoption-trace-s", "--summary"], [357, 14, 1, "cmdoption-trace-g", "--timing"], [357, 14, 1, "cmdoption-trace-t", "--trace"], [357, 14, 1, "cmdoption-trace-T", "--trackcalls"], [357, 14, 1, "cmdoption-trace-version", "--version"], [357, 14, 1, "cmdoption-trace-C", "-C"], [357, 14, 1, "cmdoption-trace-R", "-R"], [357, 14, 1, "cmdoption-trace-T", "-T"], [357, 14, 1, "cmdoption-trace-c", "-c"], [357, 14, 1, "cmdoption-trace-f", "-f"], [357, 14, 1, "cmdoption-trace-g", "-g"], [357, 14, 1, "cmdoption-trace-l", "-l"], [357, 14, 1, "cmdoption-trace-m", "-m"], [357, 14, 1, "cmdoption-trace-r", "-r"], [357, 14, 1, "cmdoption-trace-s", "-s"], [357, 14, 1, "cmdoption-trace-t", "-t"]], "trace.CoverageResults": [[357, 8, 1, "", "update"], [357, 8, 1, "", "write_results"]], "trace.Trace": [[357, 8, 1, "", "results"], [357, 8, 1, "", "run"], [357, 8, 1, "", "runctx"], [357, 8, 1, "", "runfunc"]], "traceback": [[358, 11, 1, "", "FrameSummary"], [358, 11, 1, "", "StackSummary"], [358, 11, 1, "", "TracebackException"], [358, 12, 1, "", "clear_frames"], [358, 12, 1, "", "extract_stack"], [358, 12, 1, "", "extract_tb"], [358, 12, 1, "", "format_exc"], [358, 12, 1, "", "format_exception"], [358, 12, 1, "", "format_exception_only"], [358, 12, 1, "", "format_list"], [358, 12, 1, "", "format_stack"], [358, 12, 1, "", "format_tb"], [358, 12, 1, "", "print_exc"], [358, 12, 1, "", "print_exception"], [358, 12, 1, "", "print_last"], [358, 12, 1, "", "print_stack"], [358, 12, 1, "", "print_tb"], [358, 12, 1, "", "walk_stack"], [358, 12, 1, "", "walk_tb"]], "traceback.StackSummary": [[358, 8, 1, "", "extract"], [358, 8, 1, "", "format"], [358, 8, 1, "", "format_frame_summary"], [358, 8, 1, "", "from_list"]], "traceback.TracebackException": [[358, 7, 1, "", "__cause__"], [358, 7, 1, "", "__context__"], [358, 7, 1, "", "__notes__"], [358, 7, 1, "", "__suppress_context__"], [358, 7, 1, "", "end_lineno"], [358, 7, 1, "", "end_offset"], [358, 7, 1, "", "exc_type"], [358, 7, 1, "", "exceptions"], [358, 7, 1, "", "filename"], [358, 8, 1, "", "format"], [358, 8, 1, "", "format_exception_only"], [358, 8, 1, "", "from_exception"], [358, 7, 1, "", "lineno"], [358, 7, 1, "", "msg"], [358, 7, 1, "", "offset"], [358, 8, 1, "", "print"], [358, 7, 1, "", "stack"], [358, 7, 1, "", "text"]], "tracemalloc": [[359, 11, 1, "", "DomainFilter"], [359, 11, 1, "", "Filter"], [359, 11, 1, "", "Frame"], [359, 11, 1, "", "Snapshot"], [359, 11, 1, "", "Statistic"], [359, 11, 1, "", "StatisticDiff"], [359, 11, 1, "", "Trace"], [359, 11, 1, "", "Traceback"], [359, 12, 1, "", "clear_traces"], [359, 12, 1, "", "get_object_traceback"], [359, 12, 1, "", "get_traceback_limit"], [359, 12, 1, "", "get_traced_memory"], [359, 12, 1, "", "get_tracemalloc_memory"], [359, 12, 1, "", "is_tracing"], [359, 12, 1, "", "reset_peak"], [359, 12, 1, "", "start"], [359, 12, 1, "", "stop"], [359, 12, 1, "", "take_snapshot"]], "tracemalloc.DomainFilter": [[359, 7, 1, "", "domain"], [359, 7, 1, "", "inclusive"]], "tracemalloc.Filter": [[359, 7, 1, "", "all_frames"], [359, 7, 1, "", "domain"], [359, 7, 1, "", "filename_pattern"], [359, 7, 1, "", "inclusive"], [359, 7, 1, "", "lineno"]], "tracemalloc.Frame": [[359, 7, 1, "", "filename"], [359, 7, 1, "", "lineno"]], "tracemalloc.Snapshot": [[359, 8, 1, "", "compare_to"], [359, 8, 1, "", "dump"], [359, 8, 1, "", "filter_traces"], [359, 8, 1, "", "load"], [359, 8, 1, "", "statistics"], [359, 7, 1, "", "traceback_limit"], [359, 7, 1, "", "traces"]], "tracemalloc.Statistic": [[359, 7, 1, "", "count"], [359, 7, 1, "", "size"], [359, 7, 1, "", "traceback"]], "tracemalloc.StatisticDiff": [[359, 7, 1, "", "count"], [359, 7, 1, "", "count_diff"], [359, 7, 1, "", "size"], [359, 7, 1, "", "size_diff"], [359, 7, 1, "", "traceback"]], "tracemalloc.Trace": [[359, 7, 1, "", "domain"], [359, 7, 1, "", "size"], [359, 7, 1, "", "traceback"]], "tracemalloc.Traceback": [[359, 8, 1, "", "format"], [359, 7, 1, "", "total_nframe"]], "tty": [[360, 12, 1, "", "cfmakecbreak"], [360, 12, 1, "", "cfmakeraw"], [360, 12, 1, "", "setcbreak"], [360, 12, 1, "", "setraw"]], "turtle": [[361, 11, 1, "", "RawPen"], [361, 11, 1, "", "RawTurtle"], [361, 11, 1, "", "Screen"], [361, 11, 1, "", "ScrolledCanvas"], [361, 11, 1, "", "Shape"], [361, 11, 1, "", "Turtle"], [361, 11, 1, "", "TurtleScreen"], [361, 11, 1, "", "Vec2D"], [361, 12, 1, "", "addshape"], [361, 12, 1, "", "back"], [361, 12, 1, "", "backward"], [361, 12, 1, "", "begin_fill"], [361, 12, 1, "", "begin_poly"], [361, 12, 1, "", "bgcolor"], [361, 12, 1, "", "bgpic"], [361, 12, 1, "", "bk"], [361, 12, 1, "", "bye"], [361, 12, 1, "", "circle"], [361, 12, 1, "", "clear"], [361, 12, 1, "", "clearscreen"], [361, 12, 1, "", "clearstamp"], [361, 12, 1, "", "clearstamps"], [361, 12, 1, "", "clone"], [361, 12, 1, "", "color"], [361, 12, 1, "", "colormode"], [361, 12, 1, "", "degrees"], [361, 12, 1, "", "delay"], [361, 12, 1, "", "distance"], [361, 12, 1, "", "done"], [361, 12, 1, "", "dot"], [361, 12, 1, "", "down"], [361, 12, 1, "", "end_fill"], [361, 12, 1, "", "end_poly"], [361, 12, 1, "", "exitonclick"], [361, 12, 1, "", "fd"], [361, 12, 1, "", "fillcolor"], [361, 12, 1, "", "filling"], [361, 12, 1, "", "forward"], [361, 12, 1, "", "get_poly"], [361, 12, 1, "", "get_shapepoly"], [361, 12, 1, "", "getcanvas"], [361, 12, 1, "", "getpen"], [361, 12, 1, "", "getscreen"], [361, 12, 1, "", "getshapes"], [361, 12, 1, "", "getturtle"], [361, 12, 1, "", "goto"], [361, 12, 1, "", "heading"], [361, 12, 1, "", "hideturtle"], [361, 12, 1, "", "home"], [361, 12, 1, "", "ht"], [361, 12, 1, "", "isdown"], [361, 12, 1, "", "isvisible"], [361, 12, 1, "", "left"], [361, 12, 1, "", "listen"], [361, 12, 1, "", "lt"], [361, 12, 1, "", "mainloop"], [361, 12, 1, "", "mode"], [361, 12, 1, "", "numinput"], [361, 12, 1, "", "onclick"], [361, 12, 1, "", "ondrag"], [361, 12, 1, "", "onkey"], [361, 12, 1, "", "onkeypress"], [361, 12, 1, "", "onkeyrelease"], [361, 12, 1, "", "onrelease"], [361, 12, 1, "", "onscreenclick"], [361, 12, 1, "", "ontimer"], [361, 12, 1, "", "pd"], [361, 12, 1, "", "pen"], [361, 12, 1, "", "pencolor"], [361, 12, 1, "", "pendown"], [361, 12, 1, "", "pensize"], [361, 12, 1, "", "penup"], [361, 12, 1, "", "pos"], [361, 12, 1, "", "position"], [361, 12, 1, "", "pu"], [361, 12, 1, "", "radians"], [361, 12, 1, "", "register_shape"], [361, 12, 1, "", "reset"], [361, 12, 1, "", "resetscreen"], [361, 12, 1, "", "resizemode"], [361, 12, 1, "", "right"], [361, 12, 1, "", "rt"], [361, 12, 1, "", "screensize"], [361, 12, 1, "", "seth"], [361, 12, 1, "", "setheading"], [361, 12, 1, "", "setpos"], [361, 12, 1, "", "setposition"], [361, 12, 1, "", "setundobuffer"], [361, 12, 1, "", "setup"], [361, 12, 1, "", "setworldcoordinates"], [361, 12, 1, "", "setx"], [361, 12, 1, "", "sety"], [361, 12, 1, "", "shape"], [361, 12, 1, "", "shapesize"], [361, 12, 1, "", "shapetransform"], [361, 12, 1, "", "shearfactor"], [361, 12, 1, "", "showturtle"], [361, 12, 1, "", "speed"], [361, 12, 1, "", "st"], [361, 12, 1, "", "stamp"], [361, 12, 1, "", "teleport"], [361, 12, 1, "", "textinput"], [361, 12, 1, "", "tilt"], [361, 12, 1, "", "tiltangle"], [361, 12, 1, "", "title"], [361, 12, 1, "", "towards"], [361, 12, 1, "", "tracer"], [361, 12, 1, "", "turtles"], [361, 12, 1, "", "turtlesize"], [361, 12, 1, "", "undo"], [361, 12, 1, "", "undobufferentries"], [361, 12, 1, "", "up"], [361, 12, 1, "", "update"], [361, 12, 1, "", "width"], [361, 12, 1, "", "window_height"], [361, 12, 1, "", "window_width"], [361, 12, 1, "", "write"], [361, 12, 1, "", "write_docstringdict"], [361, 12, 1, "", "xcor"], [361, 12, 1, "", "ycor"]], "turtle.Shape": [[361, 8, 1, "", "addcomponent"]], "types": [[362, 9, 1, "", "AsyncGeneratorType"], [362, 9, 1, "", "BuiltinFunctionType"], [362, 9, 1, "", "BuiltinMethodType"], [362, 11, 1, "", "CapsuleType"], [362, 9, 1, "", "CellType"], [362, 9, 1, "", "ClassMethodDescriptorType"], [362, 11, 1, "", "CodeType"], [362, 9, 1, "", "CoroutineType"], [362, 12, 1, "", "DynamicClassAttribute"], [362, 9, 1, "", "EllipsisType"], [362, 9, 1, "", "FrameType"], [362, 9, 1, "", "FunctionType"], [362, 9, 1, "", "GeneratorType"], [362, 11, 1, "", "GenericAlias"], [362, 9, 1, "", "GetSetDescriptorType"], [362, 9, 1, "", "LambdaType"], [362, 11, 1, "", "MappingProxyType"], [362, 9, 1, "", "MemberDescriptorType"], [362, 9, 1, "", "MethodDescriptorType"], [362, 9, 1, "", "MethodType"], [362, 9, 1, "", "MethodWrapperType"], [362, 11, 1, "", "ModuleType"], [362, 9, 1, "", "NoneType"], [362, 9, 1, "", "NotImplementedType"], [362, 11, 1, "", "SimpleNamespace"], [362, 11, 1, "", "TracebackType"], [362, 11, 1, "", "UnionType"], [362, 9, 1, "", "WrapperDescriptorType"], [362, 12, 1, "", "coroutine"], [362, 12, 1, "", "get_original_bases"], [362, 12, 1, "", "new_class"], [362, 12, 1, "", "prepare_class"], [362, 12, 1, "", "resolve_bases"]], "types.CodeType": [[362, 8, 1, "", "replace"]], "types.MappingProxyType": [[362, 8, 1, "", "copy"], [362, 8, 1, "", "get"], [362, 8, 1, "", "items"], [362, 8, 1, "", "keys"], [362, 8, 1, "", "values"]], "types.ModuleType": [[362, 7, 1, "", "__doc__"], [362, 7, 1, "", "__loader__"], [362, 7, 1, "", "__name__"], [362, 7, 1, "", "__package__"], [362, 7, 1, "", "__spec__"]], "typing": [[363, 11, 1, "", "AbstractSet"], [363, 9, 1, "", "Annotated"], [363, 9, 1, "", "Any"], [363, 9, 1, "", "AnyStr"], [363, 11, 1, "", "AsyncContextManager"], [363, 11, 1, "", "AsyncGenerator"], [363, 11, 1, "", "AsyncIterable"], [363, 11, 1, "", "AsyncIterator"], [363, 11, 1, "", "Awaitable"], [363, 11, 1, "", "BinaryIO"], [363, 11, 1, "", "ByteString"], [363, 9, 1, "", "Callable"], [363, 11, 1, "", "ChainMap"], [363, 9, 1, "", "ClassVar"], [363, 11, 1, "", "Collection"], [363, 9, 1, "", "Concatenate"], [363, 11, 1, "", "Container"], [363, 11, 1, "", "ContextManager"], [363, 11, 1, "", "Coroutine"], [363, 11, 1, "", "Counter"], [363, 11, 1, "", "DefaultDict"], [363, 11, 1, "", "Deque"], [363, 11, 1, "", "Dict"], [363, 9, 1, "", "Final"], [363, 11, 1, "", "ForwardRef"], [363, 11, 1, "", "FrozenSet"], [363, 11, 1, "", "Generator"], [363, 11, 1, "", "Generic"], [363, 11, 1, "", "Hashable"], [363, 11, 1, "", "IO"], [363, 11, 1, "", "ItemsView"], [363, 11, 1, "", "Iterable"], [363, 11, 1, "", "Iterator"], [363, 11, 1, "", "KeysView"], [363, 11, 1, "", "List"], [363, 9, 1, "", "Literal"], [363, 9, 1, "", "LiteralString"], [363, 11, 1, "", "Mapping"], [363, 11, 1, "", "MappingView"], [363, 11, 1, "", "Match"], [363, 11, 1, "", "MutableMapping"], [363, 11, 1, "", "MutableSequence"], [363, 11, 1, "", "MutableSet"], [363, 11, 1, "", "NamedTuple"], [363, 9, 1, "", "Never"], [363, 11, 1, "", "NewType"], [363, 9, 1, "", "NoReturn"], [363, 9, 1, "", "NotRequired"], [363, 9, 1, "", "Optional"], [363, 11, 1, "", "OrderedDict"], [363, 11, 1, "", "ParamSpec"], [363, 9, 1, "", "ParamSpecArgs"], [363, 9, 1, "", "ParamSpecKwargs"], [363, 11, 1, "", "Pattern"], [363, 11, 1, "", "Protocol"], [363, 9, 1, "", "Required"], [363, 11, 1, "", "Reversible"], [363, 9, 1, "", "Self"], [363, 11, 1, "", "Sequence"], [363, 11, 1, "", "Set"], [363, 11, 1, "", "Sized"], [363, 11, 1, "", "SupportsAbs"], [363, 11, 1, "", "SupportsBytes"], [363, 11, 1, "", "SupportsComplex"], [363, 11, 1, "", "SupportsFloat"], [363, 11, 1, "", "SupportsIndex"], [363, 11, 1, "", "SupportsInt"], [363, 11, 1, "", "SupportsRound"], [363, 9, 1, "", "TYPE_CHECKING"], [363, 11, 1, "", "Text"], [363, 11, 1, "", "TextIO"], [363, 9, 1, "", "Tuple"], [363, 11, 1, "", "Type"], [363, 9, 1, "", "TypeAlias"], [363, 11, 1, "", "TypeAliasType"], [363, 9, 1, "", "TypeGuard"], [363, 11, 1, "", "TypeVar"], [363, 11, 1, "", "TypeVarTuple"], [363, 11, 1, "", "TypedDict"], [363, 9, 1, "", "Union"], [363, 9, 1, "", "Unpack"], [363, 11, 1, "", "ValuesView"], [363, 12, 1, "", "assert_never"], [363, 12, 1, "", "assert_type"], [363, 12, 1, "", "cast"], [363, 12, 1, "", "clear_overloads"], [363, 12, 1, "", "dataclass_transform"], [363, 12, 1, "", "final"], [363, 12, 1, "", "get_args"], [363, 12, 1, "", "get_origin"], [363, 12, 1, "", "get_overloads"], [363, 12, 1, "", "get_protocol_members"], [363, 12, 1, "", "get_type_hints"], [363, 12, 1, "", "is_protocol"], [363, 12, 1, "", "is_typeddict"], [363, 12, 1, "", "no_type_check"], [363, 12, 1, "", "no_type_check_decorator"], [363, 12, 1, "", "overload"], [363, 12, 1, "", "override"], [363, 12, 1, "", "reveal_type"], [363, 12, 1, "", "runtime_checkable"], [363, 12, 1, "", "type_check_only"]], "typing.NewType": [[363, 7, 1, "", "__module__"], [363, 7, 1, "", "__name__"], [363, 7, 1, "", "__supertype__"]], "typing.ParamSpec": [[363, 7, 1, "", "__name__"], [363, 7, 1, "", "args"], [363, 7, 1, "", "kwargs"]], "typing.TypeAliasType": [[363, 7, 1, "", "__module__"], [363, 7, 1, "", "__name__"], [363, 7, 1, "", "__type_params__"], [363, 7, 1, "", "__value__"]], "typing.TypeVar": [[363, 7, 1, "", "__bound__"], [363, 7, 1, "", "__constraints__"], [363, 7, 1, "", "__contravariant__"], [363, 7, 1, "", "__covariant__"], [363, 7, 1, "", "__infer_variance__"], [363, 7, 1, "", "__name__"]], "typing.TypeVarTuple": [[363, 7, 1, "", "__name__"]], "typing.TypedDict": [[363, 7, 1, "", "__optional_keys__"], [363, 7, 1, "", "__required_keys__"], [363, 7, 1, "", "__total__"]], "unicodedata": [[364, 12, 1, "", "bidirectional"], [364, 12, 1, "", "category"], [364, 12, 1, "", "combining"], [364, 12, 1, "", "decimal"], [364, 12, 1, "", "decomposition"], [364, 12, 1, "", "digit"], [364, 12, 1, "", "east_asian_width"], [364, 12, 1, "", "is_normalized"], [364, 12, 1, "", "lookup"], [364, 12, 1, "", "mirrored"], [364, 12, 1, "", "name"], [364, 12, 1, "", "normalize"], [364, 12, 1, "", "numeric"], [364, 9, 1, "", "ucd_3_2_0"], [364, 9, 1, "", "unidata_version"]], "unittest": [[365, 11, 1, "", "FunctionTestCase"], [365, 11, 1, "", "IsolatedAsyncioTestCase"], [365, 6, 1, "", "SkipTest"], [365, 11, 1, "", "TestCase"], [365, 11, 1, "", "TestLoader"], [365, 11, 1, "", "TestResult"], [365, 11, 1, "", "TestSuite"], [365, 11, 1, "", "TextTestResult"], [365, 11, 1, "", "TextTestRunner"], [365, 12, 1, "", "addModuleCleanup"], [365, 9, 1, "", "defaultTestLoader"], [365, 12, 1, "", "doModuleCleanups"], [365, 8, 1, "", "enterModuleContext"], [365, 12, 1, "", "expectedFailure"], [365, 12, 1, "", "installHandler"], [365, 12, 1, "", "main"], [366, 10, 0, "-", "mock"], [365, 12, 1, "", "registerResult"], [365, 12, 1, "", "removeHandler"], [365, 12, 1, "", "removeResult"], [365, 12, 1, "", "skip"], [365, 12, 1, "", "skipIf"], [365, 12, 1, "", "skipUnless"], [365, 14, 1, "cmdoption-unittest-b", "--buffer"], [365, 14, 1, "cmdoption-unittest-c", "--catch"], [365, 14, 1, "cmdoption-unittest-durations", "--durations"], [365, 14, 1, "cmdoption-unittest-f", "--failfast"], [365, 14, 1, "cmdoption-unittest-locals", "--locals"], [365, 14, 1, "cmdoption-unittest-b", "-b"], [365, 14, 1, "cmdoption-unittest-c", "-c"], [365, 14, 1, "cmdoption-unittest-f", "-f"], [365, 14, 1, "cmdoption-unittest-k", "-k"]], "unittest.IsolatedAsyncioTestCase": [[365, 8, 1, "", "addAsyncCleanup"], [365, 8, 1, "", "asyncSetUp"], [365, 8, 1, "", "asyncTearDown"], [365, 8, 1, "", "enterAsyncContext"], [365, 8, 1, "", "run"]], "unittest.TestCase": [[365, 8, 1, "", "addClassCleanup"], [365, 8, 1, "", "addCleanup"], [365, 8, 1, "", "addTypeEqualityFunc"], [365, 8, 1, "", "assertAlmostEqual"], [365, 8, 1, "", "assertCountEqual"], [365, 8, 1, "", "assertDictEqual"], [365, 8, 1, "", "assertEqual"], [365, 8, 1, "", "assertFalse"], [365, 8, 1, "", "assertGreater"], [365, 8, 1, "", "assertGreaterEqual"], [365, 8, 1, "", "assertIn"], [365, 8, 1, "", "assertIs"], [365, 8, 1, "", "assertIsInstance"], [365, 8, 1, "", "assertIsNone"], [365, 8, 1, "", "assertIsNot"], [365, 8, 1, "", "assertIsNotNone"], [365, 8, 1, "", "assertLess"], [365, 8, 1, "", "assertLessEqual"], [365, 8, 1, "", "assertListEqual"], [365, 8, 1, "", "assertLogs"], [365, 8, 1, "", "assertMultiLineEqual"], [365, 8, 1, "", "assertNoLogs"], [365, 8, 1, "", "assertNotAlmostEqual"], [365, 8, 1, "", "assertNotEqual"], [365, 8, 1, "", "assertNotIn"], [365, 8, 1, "", "assertNotIsInstance"], [365, 8, 1, "", "assertNotRegex"], [365, 8, 1, "", "assertRaises"], [365, 8, 1, "", "assertRaisesRegex"], [365, 8, 1, "", "assertRegex"], [365, 8, 1, "", "assertSequenceEqual"], [365, 8, 1, "", "assertSetEqual"], [365, 8, 1, "", "assertTrue"], [365, 8, 1, "", "assertTupleEqual"], [365, 8, 1, "", "assertWarns"], [365, 8, 1, "", "assertWarnsRegex"], [365, 8, 1, "", "countTestCases"], [365, 8, 1, "", "debug"], [365, 8, 1, "", "defaultTestResult"], [365, 8, 1, "", "doClassCleanups"], [365, 8, 1, "", "doCleanups"], [365, 8, 1, "", "enterClassContext"], [365, 8, 1, "", "enterContext"], [365, 8, 1, "", "fail"], [365, 7, 1, "", "failureException"], [365, 8, 1, "", "id"], [365, 7, 1, "", "longMessage"], [365, 7, 1, "", "maxDiff"], [365, 7, 1, "", "output"], [365, 7, 1, "", "records"], [365, 8, 1, "", "run"], [365, 8, 1, "", "setUp"], [365, 8, 1, "", "setUpClass"], [365, 8, 1, "", "shortDescription"], [365, 8, 1, "", "skipTest"], [365, 8, 1, "", "subTest"], [365, 8, 1, "", "tearDown"], [365, 8, 1, "", "tearDownClass"]], "unittest.TestLoader": [[365, 8, 1, "", "discover"], [365, 7, 1, "", "errors"], [365, 8, 1, "", "getTestCaseNames"], [365, 8, 1, "", "loadTestsFromModule"], [365, 8, 1, "", "loadTestsFromName"], [365, 8, 1, "", "loadTestsFromNames"], [365, 8, 1, "", "loadTestsFromTestCase"], [365, 7, 1, "", "sortTestMethodsUsing"], [365, 7, 1, "", "suiteClass"], [365, 7, 1, "", "testMethodPrefix"], [365, 7, 1, "", "testNamePatterns"]], "unittest.TestResult": [[365, 8, 1, "", "addDuration"], [365, 8, 1, "", "addError"], [365, 8, 1, "", "addExpectedFailure"], [365, 8, 1, "", "addFailure"], [365, 8, 1, "", "addSkip"], [365, 8, 1, "", "addSubTest"], [365, 8, 1, "", "addSuccess"], [365, 8, 1, "", "addUnexpectedSuccess"], [365, 7, 1, "", "buffer"], [365, 7, 1, "", "collectedDurations"], [365, 7, 1, "", "errors"], [365, 7, 1, "", "expectedFailures"], [365, 7, 1, "", "failfast"], [365, 7, 1, "", "failures"], [365, 7, 1, "", "shouldStop"], [365, 7, 1, "", "skipped"], [365, 8, 1, "", "startTest"], [365, 8, 1, "", "startTestRun"], [365, 8, 1, "", "stop"], [365, 8, 1, "", "stopTest"], [365, 8, 1, "", "stopTestRun"], [365, 7, 1, "", "tb_locals"], [365, 7, 1, "", "testsRun"], [365, 7, 1, "", "unexpectedSuccesses"], [365, 8, 1, "", "wasSuccessful"]], "unittest.TestSuite": [[365, 8, 1, "", "__iter__"], [365, 8, 1, "", "addTest"], [365, 8, 1, "", "addTests"], [365, 8, 1, "", "countTestCases"], [365, 8, 1, "", "debug"], [365, 8, 1, "", "run"]], "unittest.TextTestRunner": [[365, 8, 1, "", "_makeResult"], [365, 8, 1, "", "run"]], "unittest.mock": [[366, 9, 1, "", "ANY"], [366, 11, 1, "", "AsyncMock"], [366, 9, 1, "", "DEFAULT"], [366, 9, 1, "", "FILTER_DIR"], [366, 11, 1, "", "MagicMock"], [366, 11, 1, "", "Mock"], [366, 11, 1, "", "NonCallableMagicMock"], [366, 11, 1, "", "NonCallableMock"], [366, 11, 1, "", "PropertyMock"], [366, 11, 1, "", "ThreadingMock"], [366, 12, 1, "", "call"], [366, 12, 1, "", "create_autospec"], [366, 12, 1, "", "mock_open"], [366, 12, 1, "", "patch"], [366, 12, 1, "", "seal"], [366, 9, 1, "", "sentinel"]], "unittest.mock.AsyncMock": [[366, 8, 1, "", "assert_any_await"], [366, 8, 1, "", "assert_awaited"], [366, 8, 1, "", "assert_awaited_once"], [366, 8, 1, "", "assert_awaited_once_with"], [366, 8, 1, "", "assert_awaited_with"], [366, 8, 1, "", "assert_has_awaits"], [366, 8, 1, "", "assert_not_awaited"], [366, 7, 1, "", "await_args"], [366, 7, 1, "", "await_args_list"], [366, 7, 1, "", "await_count"], [366, 8, 1, "", "reset_mock"]], "unittest.mock.Mock": [[366, 7, 1, "", "__class__"], [366, 8, 1, "", "__dir__"], [366, 8, 1, "", "_get_child_mock"], [366, 8, 1, "", "assert_any_call"], [366, 8, 1, "", "assert_called"], [366, 8, 1, "", "assert_called_once"], [366, 8, 1, "", "assert_called_once_with"], [366, 8, 1, "", "assert_called_with"], [366, 8, 1, "", "assert_has_calls"], [366, 8, 1, "", "assert_not_called"], [366, 8, 1, "", "attach_mock"], [366, 7, 1, "", "call_args"], [366, 7, 1, "", "call_args_list"], [366, 7, 1, "", "call_count"], [366, 7, 1, "", "called"], [366, 8, 1, "", "configure_mock"], [366, 7, 1, "", "method_calls"], [366, 8, 1, "", "mock_add_spec"], [366, 7, 1, "", "mock_calls"], [366, 8, 1, "", "reset_mock"], [366, 7, 1, "", "return_value"], [366, 7, 1, "", "side_effect"]], "unittest.mock.ThreadingMock": [[366, 7, 1, "", "DEFAULT_TIMEOUT"], [366, 8, 1, "", "wait_until_any_call_with"], [366, 8, 1, "", "wait_until_called"]], "unittest.mock.call": [[366, 8, 1, "", "call_list"]], "unittest.mock.patch": [[366, 12, 1, "", "dict"], [366, 12, 1, "", "multiple"], [366, 12, 1, "", "object"], [366, 12, 1, "", "stopall"]], "urllib": [[370, 10, 0, "-", "error"], [371, 10, 0, "-", "parse"], [372, 10, 0, "-", "request"], [372, 10, 0, "-", "response"], [373, 10, 0, "-", "robotparser"]], "urllib.error": [[370, 6, 1, "", "ContentTooShortError"], [370, 6, 1, "", "HTTPError"], [370, 6, 1, "", "URLError"]], "urllib.error.ContentTooShortError": [[370, 7, 1, "", "content"]], "urllib.error.HTTPError": [[370, 7, 1, "", "code"], [370, 7, 1, "", "fp"], [370, 7, 1, "", "headers"], [370, 7, 1, "", "reason"], [370, 7, 1, "", "url"]], "urllib.error.URLError": [[370, 7, 1, "", "reason"]], "urllib.parse": [[371, 11, 1, "", "DefragResult"], [371, 11, 1, "", "DefragResultBytes"], [371, 11, 1, "", "ParseResult"], [371, 11, 1, "", "ParseResultBytes"], [371, 11, 1, "", "SplitResult"], [371, 11, 1, "", "SplitResultBytes"], [371, 12, 1, "", "parse_qs"], [371, 12, 1, "", "parse_qsl"], [371, 12, 1, "", "quote"], [371, 12, 1, "", "quote_from_bytes"], [371, 12, 1, "", "quote_plus"], [371, 12, 1, "", "unquote"], [371, 12, 1, "", "unquote_plus"], [371, 12, 1, "", "unquote_to_bytes"], [371, 12, 1, "", "unwrap"], [371, 12, 1, "", "urldefrag"], [371, 12, 1, "", "urlencode"], [371, 12, 1, "", "urljoin"], [371, 12, 1, "", "urlparse"], [371, 12, 1, "", "urlsplit"], [371, 12, 1, "", "urlunparse"], [371, 12, 1, "", "urlunsplit"]], "urllib.parse.urllib.parse.SplitResult": [[371, 8, 1, "", "geturl"]], "urllib.request": [[372, 11, 1, "", "AbstractBasicAuthHandler"], [372, 11, 1, "", "AbstractDigestAuthHandler"], [372, 11, 1, "", "BaseHandler"], [372, 11, 1, "", "CacheFTPHandler"], [372, 11, 1, "", "DataHandler"], [372, 11, 1, "", "FTPHandler"], [372, 11, 1, "", "FancyURLopener"], [372, 11, 1, "", "FileHandler"], [372, 11, 1, "", "HTTPBasicAuthHandler"], [372, 11, 1, "", "HTTPCookieProcessor"], [372, 11, 1, "", "HTTPDefaultErrorHandler"], [372, 11, 1, "", "HTTPDigestAuthHandler"], [372, 11, 1, "", "HTTPErrorProcessor"], [372, 11, 1, "", "HTTPHandler"], [372, 11, 1, "", "HTTPPasswordMgr"], [372, 11, 1, "", "HTTPPasswordMgrWithDefaultRealm"], [372, 11, 1, "", "HTTPPasswordMgrWithPriorAuth"], [372, 11, 1, "", "HTTPRedirectHandler"], [372, 11, 1, "", "HTTPSHandler"], [372, 11, 1, "", "OpenerDirector"], [372, 11, 1, "", "ProxyBasicAuthHandler"], [372, 11, 1, "", "ProxyDigestAuthHandler"], [372, 11, 1, "", "ProxyHandler"], [372, 11, 1, "", "Request"], [372, 11, 1, "", "URLopener"], [372, 11, 1, "", "UnknownHandler"], [372, 12, 1, "", "build_opener"], [372, 12, 1, "", "getproxies"], [372, 12, 1, "", "install_opener"], [372, 12, 1, "", "pathname2url"], [372, 12, 1, "", "url2pathname"], [372, 12, 1, "", "urlcleanup"], [372, 12, 1, "", "urlopen"], [372, 12, 1, "", "urlretrieve"]], "urllib.request.AbstractBasicAuthHandler": [[372, 8, 1, "", "http_error_auth_reqed"]], "urllib.request.AbstractDigestAuthHandler": [[372, 8, 1, "", "http_error_auth_reqed"]], "urllib.request.BaseHandler": [[372, 8, 1, "", "add_parent"], [372, 8, 1, "", "close"], [372, 8, 1, "", "default_open"], [372, 8, 1, "", "http_error_default"], [372, 7, 1, "", "parent"], [372, 8, 1, "", "unknown_open"]], "urllib.request.CacheFTPHandler": [[372, 8, 1, "", "setMaxConns"], [372, 8, 1, "", "setTimeout"]], "urllib.request.DataHandler": [[372, 8, 1, "", "data_open"]], "urllib.request.FTPHandler": [[372, 8, 1, "", "ftp_open"]], "urllib.request.FancyURLopener": [[372, 8, 1, "", "prompt_user_passwd"]], "urllib.request.FileHandler": [[372, 8, 1, "", "file_open"]], "urllib.request.HTTPBasicAuthHandler": [[372, 8, 1, "", "http_error_401"]], "urllib.request.HTTPCookieProcessor": [[372, 7, 1, "", "cookiejar"]], "urllib.request.HTTPDigestAuthHandler": [[372, 8, 1, "", "http_error_401"]], "urllib.request.HTTPErrorProcessor": [[372, 8, 1, "", "http_response"], [372, 8, 1, "", "https_response"]], "urllib.request.HTTPHandler": [[372, 8, 1, "", "http_open"]], "urllib.request.HTTPPasswordMgr": [[372, 8, 1, "", "add_password"], [372, 8, 1, "", "find_user_password"]], "urllib.request.HTTPPasswordMgrWithPriorAuth": [[372, 8, 1, "", "add_password"], [372, 8, 1, "", "find_user_password"], [372, 8, 1, "", "is_authenticated"], [372, 8, 1, "", "update_authenticated"]], "urllib.request.HTTPRedirectHandler": [[372, 8, 1, "", "http_error_301"], [372, 8, 1, "", "http_error_302"], [372, 8, 1, "", "http_error_303"], [372, 8, 1, "", "http_error_307"], [372, 8, 1, "", "http_error_308"], [372, 8, 1, "", "redirect_request"]], "urllib.request.HTTPSHandler": [[372, 8, 1, "", "https_open"]], "urllib.request.OpenerDirector": [[372, 8, 1, "", "add_handler"], [372, 8, 1, "", "error"], [372, 8, 1, "", "open"]], "urllib.request.ProxyBasicAuthHandler": [[372, 8, 1, "", "http_error_407"]], "urllib.request.ProxyDigestAuthHandler": [[372, 8, 1, "", "http_error_407"]], "urllib.request.Request": [[372, 8, 1, "", "add_header"], [372, 8, 1, "", "add_unredirected_header"], [372, 7, 1, "", "data"], [372, 7, 1, "", "full_url"], [372, 8, 1, "", "get_full_url"], [372, 8, 1, "", "get_header"], [372, 8, 1, "", "get_method"], [372, 8, 1, "", "has_header"], [372, 8, 1, "", "header_items"], [372, 7, 1, "", "host"], [372, 7, 1, "", "method"], [372, 7, 1, "", "origin_req_host"], [372, 8, 1, "", "remove_header"], [372, 7, 1, "", "selector"], [372, 8, 1, "", "set_proxy"], [372, 7, 1, "", "type"], [372, 7, 1, "", "unverifiable"]], "urllib.request.URLopener": [[372, 8, 1, "", "open"], [372, 8, 1, "", "open_unknown"], [372, 8, 1, "", "retrieve"], [372, 7, 1, "", "version"]], "urllib.request.UnknownHandler": [[372, 8, 1, "", "unknown_open"]], "urllib.response": [[372, 11, 1, "", "addinfourl"]], "urllib.response.addinfourl": [[372, 7, 1, "", "code"], [372, 8, 1, "", "getcode"], [372, 8, 1, "", "geturl"], [372, 7, 1, "", "headers"], [372, 8, 1, "", "info"], [372, 7, 1, "", "status"], [372, 7, 1, "", "url"]], "urllib.robotparser": [[373, 11, 1, "", "RobotFileParser"]], "urllib.robotparser.RobotFileParser": [[373, 8, 1, "", "can_fetch"], [373, 8, 1, "", "crawl_delay"], [373, 8, 1, "", "modified"], [373, 8, 1, "", "mtime"], [373, 8, 1, "", "parse"], [373, 8, 1, "", "read"], [373, 8, 1, "", "request_rate"], [373, 8, 1, "", "set_url"], [373, 8, 1, "", "site_maps"]], "uuid": [[374, 9, 1, "", "NAMESPACE_DNS"], [374, 9, 1, "", "NAMESPACE_OID"], [374, 9, 1, "", "NAMESPACE_URL"], [374, 9, 1, "", "NAMESPACE_X500"], [374, 9, 1, "", "RESERVED_FUTURE"], [374, 9, 1, "", "RESERVED_MICROSOFT"], [374, 9, 1, "", "RESERVED_NCS"], [374, 9, 1, "", "RFC_4122"], [374, 11, 1, "", "SafeUUID"], [374, 11, 1, "", "UUID"], [374, 12, 1, "", "getnode"], [374, 12, 1, "", "uuid1"], [374, 12, 1, "", "uuid3"], [374, 12, 1, "", "uuid4"], [374, 12, 1, "", "uuid5"], [374, 14, 1, "cmdoption-uuid-h", "--help"], [374, 14, 1, "cmdoption-uuid-name", "--name"], [374, 14, 1, "cmdoption-uuid-namespace", "--namespace"], [374, 14, 1, "cmdoption-uuid-uuid", "--uuid"], [374, 14, 1, "cmdoption-uuid-N", "-N"], [374, 14, 1, "cmdoption-uuid-h", "-h"], [374, 14, 1, "cmdoption-uuid-n", "-n"], [374, 14, 1, "cmdoption-uuid-u", "-u"]], "uuid.SafeUUID": [[374, 7, 1, "", "safe"], [374, 7, 1, "", "unknown"], [374, 7, 1, "", "unsafe"]], "uuid.UUID": [[374, 7, 1, "", "bytes"], [374, 7, 1, "", "bytes_le"], [374, 7, 1, "", "clock_seq"], [374, 7, 1, "", "clock_seq_hi_variant"], [374, 7, 1, "", "clock_seq_low"], [374, 7, 1, "", "fields"], [374, 7, 1, "", "hex"], [374, 7, 1, "", "int"], [374, 7, 1, "", "is_safe"], [374, 7, 1, "", "node"], [374, 7, 1, "", "time"], [374, 7, 1, "", "time_hi_version"], [374, 7, 1, "", "time_low"], [374, 7, 1, "", "time_mid"], [374, 7, 1, "", "urn"], [374, 7, 1, "", "variant"], [374, 7, 1, "", "version"]], "venv": [[375, 11, 1, "", "EnvBuilder"], [375, 12, 1, "", "create"]], "venv.EnvBuilder": [[375, 8, 1, "", "create"], [375, 8, 1, "", "create_configuration"], [375, 8, 1, "", "create_git_ignore_file"], [375, 8, 1, "", "ensure_directories"], [375, 8, 1, "", "install_scripts"], [375, 8, 1, "", "post_setup"], [375, 8, 1, "", "setup_python"], [375, 8, 1, "", "setup_scripts"], [375, 8, 1, "", "upgrade_dependencies"]], "warnings": [[376, 11, 1, "", "catch_warnings"], [376, 12, 1, "", "filterwarnings"], [376, 12, 1, "", "formatwarning"], [376, 12, 1, "", "resetwarnings"], [376, 12, 1, "", "showwarning"], [376, 12, 1, "", "simplefilter"], [376, 12, 1, "", "warn"], [376, 12, 1, "", "warn_explicit"]], "wave": [[377, 6, 1, "", "Error"], [377, 11, 1, "", "Wave_read"], [377, 11, 1, "", "Wave_write"], [377, 12, 1, "", "open"]], "wave.Wave_read": [[377, 8, 1, "", "close"], [377, 8, 1, "", "getcompname"], [377, 8, 1, "", "getcomptype"], [377, 8, 1, "", "getframerate"], [377, 8, 1, "", "getmark"], [377, 8, 1, "", "getmarkers"], [377, 8, 1, "", "getnchannels"], [377, 8, 1, "", "getnframes"], [377, 8, 1, "", "getparams"], [377, 8, 1, "", "getsampwidth"], [377, 8, 1, "", "readframes"], [377, 8, 1, "", "rewind"], [377, 8, 1, "", "setpos"], [377, 8, 1, "", "tell"]], "wave.Wave_write": [[377, 8, 1, "", "close"], [377, 8, 1, "", "setcomptype"], [377, 8, 1, "", "setframerate"], [377, 8, 1, "", "setnchannels"], [377, 8, 1, "", "setnframes"], [377, 8, 1, "", "setparams"], [377, 8, 1, "", "setsampwidth"], [377, 8, 1, "", "tell"], [377, 8, 1, "", "writeframes"], [377, 8, 1, "", "writeframesraw"]], "weakref": [[378, 9, 1, "", "CallableProxyType"], [378, 9, 1, "", "ProxyType"], [378, 9, 1, "", "ProxyTypes"], [378, 9, 1, "", "ReferenceType"], [378, 11, 1, "", "WeakKeyDictionary"], [378, 11, 1, "", "WeakMethod"], [378, 11, 1, "", "WeakSet"], [378, 11, 1, "", "WeakValueDictionary"], [378, 11, 1, "", "finalize"], [378, 12, 1, "", "getweakrefcount"], [378, 12, 1, "", "getweakrefs"], [378, 12, 1, "", "proxy"], [378, 11, 1, "", "ref"]], "weakref.WeakKeyDictionary": [[378, 8, 1, "", "keyrefs"]], "weakref.WeakValueDictionary": [[378, 8, 1, "", "valuerefs"]], "weakref.finalize": [[378, 8, 1, "", "__call__"], [378, 7, 1, "", "alive"], [378, 7, 1, "", "atexit"], [378, 8, 1, "", "detach"], [378, 8, 1, "", "peek"]], "weakref.ref": [[378, 7, 1, "", "__callback__"]], "webbrowser": [[379, 6, 1, "", "Error"], [379, 12, 1, "", "get"], [379, 12, 1, "", "open"], [379, 12, 1, "", "open_new"], [379, 12, 1, "", "open_new_tab"], [379, 12, 1, "", "register"]], "webbrowser.controller": [[379, 7, 1, "", "name"], [379, 8, 1, "", "open"], [379, 8, 1, "", "open_new"], [379, 8, 1, "", "open_new_tab"]], "winreg": [[381, 12, 1, "", "CloseKey"], [381, 12, 1, "", "ConnectRegistry"], [381, 12, 1, "", "CreateKey"], [381, 12, 1, "", "CreateKeyEx"], [381, 12, 1, "", "DeleteKey"], [381, 12, 1, "", "DeleteKeyEx"], [381, 12, 1, "", "DeleteValue"], [381, 12, 1, "", "DisableReflectionKey"], [381, 12, 1, "", "EnableReflectionKey"], [381, 12, 1, "", "EnumKey"], [381, 12, 1, "", "EnumValue"], [381, 12, 1, "", "ExpandEnvironmentStrings"], [381, 12, 1, "", "FlushKey"], [381, 9, 1, "", "HKEY_CLASSES_ROOT"], [381, 9, 1, "", "HKEY_CURRENT_CONFIG"], [381, 9, 1, "", "HKEY_CURRENT_USER"], [381, 9, 1, "", "HKEY_DYN_DATA"], [381, 9, 1, "", "HKEY_LOCAL_MACHINE"], [381, 9, 1, "", "HKEY_PERFORMANCE_DATA"], [381, 9, 1, "", "HKEY_USERS"], [381, 9, 1, "", "KEY_ALL_ACCESS"], [381, 9, 1, "", "KEY_CREATE_LINK"], [381, 9, 1, "", "KEY_CREATE_SUB_KEY"], [381, 9, 1, "", "KEY_ENUMERATE_SUB_KEYS"], [381, 9, 1, "", "KEY_EXECUTE"], [381, 9, 1, "", "KEY_NOTIFY"], [381, 9, 1, "", "KEY_QUERY_VALUE"], [381, 9, 1, "", "KEY_READ"], [381, 9, 1, "", "KEY_SET_VALUE"], [381, 9, 1, "", "KEY_WOW64_32KEY"], [381, 9, 1, "", "KEY_WOW64_64KEY"], [381, 9, 1, "", "KEY_WRITE"], [381, 12, 1, "", "LoadKey"], [381, 12, 1, "", "OpenKey"], [381, 12, 1, "", "OpenKeyEx"], [381, 12, 1, "", "QueryInfoKey"], [381, 12, 1, "", "QueryReflectionKey"], [381, 12, 1, "", "QueryValue"], [381, 12, 1, "", "QueryValueEx"], [381, 9, 1, "", "REG_BINARY"], [381, 9, 1, "", "REG_DWORD"], [381, 9, 1, "", "REG_DWORD_BIG_ENDIAN"], [381, 9, 1, "", "REG_DWORD_LITTLE_ENDIAN"], [381, 9, 1, "", "REG_EXPAND_SZ"], [381, 9, 1, "", "REG_FULL_RESOURCE_DESCRIPTOR"], [381, 9, 1, "", "REG_LINK"], [381, 9, 1, "", "REG_MULTI_SZ"], [381, 9, 1, "", "REG_NONE"], [381, 9, 1, "", "REG_QWORD"], [381, 9, 1, "", "REG_QWORD_LITTLE_ENDIAN"], [381, 9, 1, "", "REG_RESOURCE_LIST"], [381, 9, 1, "", "REG_RESOURCE_REQUIREMENTS_LIST"], [381, 9, 1, "", "REG_SZ"], [381, 12, 1, "", "SaveKey"], [381, 12, 1, "", "SetValue"], [381, 12, 1, "", "SetValueEx"]], "winreg.PyHKEY": [[381, 8, 1, "", "Close"], [381, 8, 1, "", "Detach"], [381, 8, 1, "", "__enter__"], [381, 8, 1, "", "__exit__"]], "winsound": [[382, 12, 1, "", "Beep"], [382, 9, 1, "", "MB_ICONASTERISK"], [382, 9, 1, "", "MB_ICONEXCLAMATION"], [382, 9, 1, "", "MB_ICONHAND"], [382, 9, 1, "", "MB_ICONQUESTION"], [382, 9, 1, "", "MB_OK"], [382, 12, 1, "", "MessageBeep"], [382, 12, 1, "", "PlaySound"], [382, 9, 1, "", "SND_ALIAS"], [382, 9, 1, "", "SND_ASYNC"], [382, 9, 1, "", "SND_FILENAME"], [382, 9, 1, "", "SND_LOOP"], [382, 9, 1, "", "SND_MEMORY"], [382, 9, 1, "", "SND_NODEFAULT"], [382, 9, 1, "", "SND_NOSTOP"], [382, 9, 1, "", "SND_NOWAIT"], [382, 9, 1, "", "SND_PURGE"]], "wsgiref": [[383, 10, 0, "-", "handlers"], [383, 10, 0, "-", "headers"], [383, 10, 0, "-", "simple_server"], [383, 10, 0, "-", "types"], [383, 10, 0, "-", "util"], [383, 10, 0, "-", "validate"]], "wsgiref.handlers": [[383, 11, 1, "", "BaseCGIHandler"], [383, 11, 1, "", "BaseHandler"], [383, 11, 1, "", "CGIHandler"], [383, 11, 1, "", "IISCGIHandler"], [383, 11, 1, "", "SimpleHandler"], [383, 12, 1, "", "read_environ"]], "wsgiref.handlers.BaseHandler": [[383, 8, 1, "", "_flush"], [383, 8, 1, "", "_write"], [383, 8, 1, "", "add_cgi_vars"], [383, 7, 1, "", "error_body"], [383, 7, 1, "", "error_headers"], [383, 8, 1, "", "error_output"], [383, 7, 1, "", "error_status"], [383, 8, 1, "", "get_scheme"], [383, 8, 1, "", "get_stderr"], [383, 8, 1, "", "get_stdin"], [383, 7, 1, "", "http_version"], [383, 8, 1, "", "log_exception"], [383, 7, 1, "", "origin_server"], [383, 7, 1, "", "os_environ"], [383, 8, 1, "", "run"], [383, 8, 1, "", "sendfile"], [383, 7, 1, "", "server_software"], [383, 8, 1, "", "setup_environ"], [383, 7, 1, "", "traceback_limit"], [383, 7, 1, "", "wsgi_file_wrapper"], [383, 7, 1, "", "wsgi_multiprocess"], [383, 7, 1, "", "wsgi_multithread"], [383, 7, 1, "", "wsgi_run_once"]], "wsgiref.headers": [[383, 11, 1, "", "Headers"]], "wsgiref.headers.Headers": [[383, 8, 1, "", "add_header"], [383, 8, 1, "", "get_all"]], "wsgiref.simple_server": [[383, 11, 1, "", "WSGIRequestHandler"], [383, 11, 1, "", "WSGIServer"], [383, 12, 1, "", "demo_app"], [383, 12, 1, "", "make_server"]], "wsgiref.simple_server.WSGIRequestHandler": [[383, 8, 1, "", "get_environ"], [383, 8, 1, "", "get_stderr"], [383, 8, 1, "", "handle"]], "wsgiref.simple_server.WSGIServer": [[383, 8, 1, "", "get_app"], [383, 8, 1, "", "set_app"]], "wsgiref.types": [[383, 11, 1, "", "ErrorStream"], [383, 11, 1, "", "FileWrapper"], [383, 11, 1, "", "InputStream"], [383, 11, 1, "", "StartResponse"], [383, 9, 1, "", "WSGIApplication"], [383, 9, 1, "", "WSGIEnvironment"]], "wsgiref.util": [[383, 11, 1, "", "FileWrapper"], [383, 12, 1, "", "application_uri"], [383, 12, 1, "", "guess_scheme"], [383, 12, 1, "", "is_hop_by_hop"], [383, 12, 1, "", "request_uri"], [383, 12, 1, "", "setup_testing_defaults"], [383, 12, 1, "", "shift_path_info"]], "wsgiref.validate": [[383, 12, 1, "", "validator"]], "xml": [[385, 10, 0, "-", "dom"], [389, 10, 0, "-", "sax"]], "xml.dom.Attr": [[385, 7, 1, "", "localName"], [385, 7, 1, "", "name"], [385, 7, 1, "", "prefix"], [385, 7, 1, "", "value"]], "xml.dom.Comment": [[385, 7, 1, "", "data"]], "xml.dom": [[385, 6, 1, "", "DOMException"], [385, 6, 1, "", "DomstringSizeErr"], [385, 9, 1, "", "EMPTY_NAMESPACE"], [385, 6, 1, "", "HierarchyRequestErr"], [385, 6, 1, "", "IndexSizeErr"], [385, 6, 1, "", "InuseAttributeErr"], [385, 6, 1, "", "InvalidAccessErr"], [385, 6, 1, "", "InvalidCharacterErr"], [385, 6, 1, "", "InvalidModificationErr"], [385, 6, 1, "", "InvalidStateErr"], [385, 6, 1, "", "NamespaceErr"], [385, 6, 1, "", "NoDataAllowedErr"], [385, 6, 1, "", "NoModificationAllowedErr"], [385, 6, 1, "", "NotFoundErr"], [385, 6, 1, "", "NotSupportedErr"], [385, 6, 1, "", "SyntaxErr"], [385, 6, 1, "", "WrongDocumentErr"], [385, 9, 1, "", "XHTML_NAMESPACE"], [385, 9, 1, "", "XMLNS_NAMESPACE"], [385, 9, 1, "", "XML_NAMESPACE"], [385, 12, 1, "", "getDOMImplementation"], [386, 10, 0, "-", "minidom"], [387, 10, 0, "-", "pulldom"], [385, 12, 1, "", "registerDOMImplementation"]], "xml.dom.DOMImplementation": [[385, 8, 1, "", "createDocument"], [385, 8, 1, "", "createDocumentType"], [385, 8, 1, "", "hasFeature"]], "xml.dom.Document": [[385, 8, 1, "", "createAttribute"], [385, 8, 1, "", "createAttributeNS"], [385, 8, 1, "", "createComment"], [385, 8, 1, "", "createElement"], [385, 8, 1, "", "createElementNS"], [385, 8, 1, "", "createProcessingInstruction"], [385, 8, 1, "", "createTextNode"], [385, 7, 1, "", "documentElement"], [385, 8, 1, "", "getElementsByTagName"], [385, 8, 1, "", "getElementsByTagNameNS"]], "xml.dom.DocumentType": [[385, 7, 1, "", "entities"], [385, 7, 1, "", "internalSubset"], [385, 7, 1, "", "name"], [385, 7, 1, "", "notations"], [385, 7, 1, "", "publicId"], [385, 7, 1, "", "systemId"]], "xml.dom.Element": [[385, 8, 1, "", "getAttribute"], [385, 8, 1, "", "getAttributeNS"], [385, 8, 1, "", "getAttributeNode"], [385, 8, 1, "", "getAttributeNodeNS"], [385, 8, 1, "", "getElementsByTagName"], [385, 8, 1, "", "getElementsByTagNameNS"], [385, 8, 1, "", "hasAttribute"], [385, 8, 1, "", "hasAttributeNS"], [385, 8, 1, "", "removeAttribute"], [385, 8, 1, "", "removeAttributeNS"], [385, 8, 1, "", "removeAttributeNode"], [385, 8, 1, "", "setAttribute"], [385, 8, 1, "", "setAttributeNS"], [385, 8, 1, "", "setAttributeNode"], [385, 8, 1, "", "setAttributeNodeNS"], [385, 7, 1, "", "tagName"]], "xml.dom.NamedNodeMap": [[385, 8, 1, "", "item"], [385, 7, 1, "", "length"]], "xml.dom.Node": [[385, 8, 1, "", "appendChild"], [385, 7, 1, "", "attributes"], [385, 7, 1, "", "childNodes"], [385, 8, 1, "", "cloneNode"], [385, 7, 1, "", "firstChild"], [385, 8, 1, "", "hasAttributes"], [385, 8, 1, "", "hasChildNodes"], [385, 8, 1, "", "insertBefore"], [385, 8, 1, "", "isSameNode"], [385, 7, 1, "", "lastChild"], [385, 7, 1, "", "localName"], [385, 7, 1, "", "namespaceURI"], [385, 7, 1, "", "nextSibling"], [385, 7, 1, "", "nodeName"], [385, 7, 1, "", "nodeType"], [385, 7, 1, "", "nodeValue"], [385, 8, 1, "", "normalize"], [385, 7, 1, "", "parentNode"], [385, 7, 1, "", "prefix"], [385, 7, 1, "", "previousSibling"], [385, 8, 1, "", "removeChild"], [385, 8, 1, "", "replaceChild"]], "xml.dom.NodeList": [[385, 8, 1, "", "item"], [385, 7, 1, "", "length"]], "xml.dom.ProcessingInstruction": [[385, 7, 1, "", "data"], [385, 7, 1, "", "target"]], "xml.dom.Text": [[385, 7, 1, "", "data"]], "xml.dom.minidom.Node": [[386, 8, 1, "", "toprettyxml"], [386, 8, 1, "", "toxml"], [386, 8, 1, "", "unlink"], [386, 8, 1, "", "writexml"]], "xml.dom.minidom": [[386, 12, 1, "", "parse"], [386, 12, 1, "", "parseString"]], "xml.dom.pulldom": [[387, 11, 1, "", "DOMEventStream"], [387, 11, 1, "", "PullDom"], [387, 11, 1, "", "SAX2DOM"], [387, 9, 1, "", "default_bufsize"], [387, 12, 1, "", "parse"], [387, 12, 1, "", "parseString"]], "xml.dom.pulldom.DOMEventStream": [[387, 8, 1, "", "expandNode"], [387, 8, 1, "", "getEvent"], [387, 8, 1, "", "reset"]], "xml.etree": [[388, 10, 0, "-", "ElementInclude"], [388, 10, 0, "-", "ElementTree"]], "xml.etree.ElementInclude": [[388, 12, 1, "", "default_loader"], [388, 12, 1, "", "include"]], "xml.etree.ElementTree": [[388, 11, 1, "", "C14NWriterTarget"], [388, 12, 1, "", "Comment"], [388, 11, 1, "", "Element"], [388, 11, 1, "", "ElementTree"], [388, 11, 1, "", "ParseError"], [388, 12, 1, "", "ProcessingInstruction"], [388, 11, 1, "", "QName"], [388, 12, 1, "", "SubElement"], [388, 11, 1, "", "TreeBuilder"], [388, 12, 1, "", "XML"], [388, 12, 1, "", "XMLID"], [388, 11, 1, "", "XMLParser"], [388, 11, 1, "", "XMLPullParser"], [388, 12, 1, "", "canonicalize"], [388, 12, 1, "", "dump"], [388, 12, 1, "", "fromstring"], [388, 12, 1, "", "fromstringlist"], [388, 12, 1, "", "indent"], [388, 12, 1, "", "iselement"], [388, 12, 1, "", "iterparse"], [388, 12, 1, "", "parse"], [388, 12, 1, "", "register_namespace"], [388, 12, 1, "", "tostring"], [388, 12, 1, "", "tostringlist"]], "xml.etree.ElementTree.Element": [[388, 8, 1, "", "append"], [388, 7, 1, "", "attrib"], [388, 8, 1, "", "clear"], [388, 8, 1, "", "extend"], [388, 8, 1, "", "find"], [388, 8, 1, "", "findall"], [388, 8, 1, "", "findtext"], [388, 8, 1, "", "get"], [388, 8, 1, "", "insert"], [388, 8, 1, "", "items"], [388, 8, 1, "", "iter"], [388, 8, 1, "", "iterfind"], [388, 8, 1, "", "itertext"], [388, 8, 1, "", "keys"], [388, 8, 1, "", "makeelement"], [388, 8, 1, "", "remove"], [388, 8, 1, "", "set"], [388, 7, 1, "", "tag"], [388, 7, 1, "", "tail"], [388, 7, 1, "", "text"]], "xml.etree.ElementTree.ElementTree": [[388, 8, 1, "", "_setroot"], [388, 8, 1, "", "find"], [388, 8, 1, "", "findall"], [388, 8, 1, "", "findtext"], [388, 8, 1, "", "getroot"], [388, 8, 1, "", "iter"], [388, 8, 1, "", "iterfind"], [388, 8, 1, "", "parse"], [388, 8, 1, "", "write"]], "xml.etree.ElementTree.ParseError": [[388, 7, 1, "", "code"], [388, 7, 1, "", "position"]], "xml.etree.ElementTree.TreeBuilder": [[388, 8, 1, "", "close"], [388, 8, 1, "", "comment"], [388, 8, 1, "", "data"], [388, 8, 1, "", "doctype"], [388, 8, 1, "", "end"], [388, 8, 1, "", "end_ns"], [388, 8, 1, "", "pi"], [388, 8, 1, "", "start"], [388, 8, 1, "", "start_ns"]], "xml.etree.ElementTree.XMLParser": [[388, 8, 1, "", "close"], [388, 8, 1, "", "feed"]], "xml.etree.ElementTree.XMLPullParser": [[388, 8, 1, "", "close"], [388, 8, 1, "", "feed"], [388, 8, 1, "", "read_events"]], "xml.parsers": [[296, 10, 0, "-", "expat"]], "xml.parsers.expat": [[296, 12, 1, "", "ErrorString"], [296, 6, 1, "", "ExpatError"], [296, 12, 1, "", "ParserCreate"], [296, 9, 1, "", "XMLParserType"], [296, 6, 1, "", "error"], [296, 10, 0, "-", "errors"], [296, 10, 0, "-", "model"]], "xml.parsers.expat.ExpatError": [[296, 7, 1, "", "code"], [296, 7, 1, "", "lineno"], [296, 7, 1, "", "offset"]], "xml.parsers.expat.errors": [[296, 9, 1, "", "XML_ERROR_ABORTED"], [296, 9, 1, "", "XML_ERROR_AMPLIFICATION_LIMIT_BREACH"], [296, 9, 1, "", "XML_ERROR_ASYNC_ENTITY"], [296, 9, 1, "", "XML_ERROR_ATTRIBUTE_EXTERNAL_ENTITY_REF"], [296, 9, 1, "", "XML_ERROR_BAD_CHAR_REF"], [296, 9, 1, "", "XML_ERROR_BINARY_ENTITY_REF"], [296, 9, 1, "", "XML_ERROR_CANT_CHANGE_FEATURE_ONCE_PARSING"], [296, 9, 1, "", "XML_ERROR_DUPLICATE_ATTRIBUTE"], [296, 9, 1, "", "XML_ERROR_ENTITY_DECLARED_IN_PE"], [296, 9, 1, "", "XML_ERROR_EXTERNAL_ENTITY_HANDLING"], [296, 9, 1, "", "XML_ERROR_FEATURE_REQUIRES_XML_DTD"], [296, 9, 1, "", "XML_ERROR_FINISHED"], [296, 9, 1, "", "XML_ERROR_INCOMPLETE_PE"], [296, 9, 1, "", "XML_ERROR_INCORRECT_ENCODING"], [296, 9, 1, "", "XML_ERROR_INVALID_ARGUMENT"], [296, 9, 1, "", "XML_ERROR_INVALID_TOKEN"], [296, 9, 1, "", "XML_ERROR_JUNK_AFTER_DOC_ELEMENT"], [296, 9, 1, "", "XML_ERROR_MISPLACED_XML_PI"], [296, 9, 1, "", "XML_ERROR_NOT_STANDALONE"], [296, 9, 1, "", "XML_ERROR_NOT_SUSPENDED"], [296, 9, 1, "", "XML_ERROR_NO_BUFFER"], [296, 9, 1, "", "XML_ERROR_NO_ELEMENTS"], [296, 9, 1, "", "XML_ERROR_NO_MEMORY"], [296, 9, 1, "", "XML_ERROR_PARAM_ENTITY_REF"], [296, 9, 1, "", "XML_ERROR_PARTIAL_CHAR"], [296, 9, 1, "", "XML_ERROR_PUBLICID"], [296, 9, 1, "", "XML_ERROR_RECURSIVE_ENTITY_REF"], [296, 9, 1, "", "XML_ERROR_RESERVED_NAMESPACE_URI"], [296, 9, 1, "", "XML_ERROR_RESERVED_PREFIX_XML"], [296, 9, 1, "", "XML_ERROR_RESERVED_PREFIX_XMLNS"], [296, 9, 1, "", "XML_ERROR_SUSPENDED"], [296, 9, 1, "", "XML_ERROR_SUSPEND_PE"], [296, 9, 1, "", "XML_ERROR_SYNTAX"], [296, 9, 1, "", "XML_ERROR_TAG_MISMATCH"], [296, 9, 1, "", "XML_ERROR_TEXT_DECL"], [296, 9, 1, "", "XML_ERROR_UNBOUND_PREFIX"], [296, 9, 1, "", "XML_ERROR_UNCLOSED_CDATA_SECTION"], [296, 9, 1, "", "XML_ERROR_UNCLOSED_TOKEN"], [296, 9, 1, "", "XML_ERROR_UNDECLARING_PREFIX"], [296, 9, 1, "", "XML_ERROR_UNDEFINED_ENTITY"], [296, 9, 1, "", "XML_ERROR_UNEXPECTED_STATE"], [296, 9, 1, "", "XML_ERROR_UNKNOWN_ENCODING"], [296, 9, 1, "", "XML_ERROR_XML_DECL"], [296, 9, 1, "", "codes"], [296, 9, 1, "", "messages"]], "xml.parsers.expat.xmlparser": [[296, 8, 1, "", "AttlistDeclHandler"], [296, 8, 1, "", "CharacterDataHandler"], [296, 8, 1, "", "CommentHandler"], [296, 7, 1, "", "CurrentByteIndex"], [296, 7, 1, "", "CurrentColumnNumber"], [296, 7, 1, "", "CurrentLineNumber"], [296, 8, 1, "", "DefaultHandler"], [296, 8, 1, "", "DefaultHandlerExpand"], [296, 8, 1, "", "ElementDeclHandler"], [296, 8, 1, "", "EndCdataSectionHandler"], [296, 8, 1, "", "EndDoctypeDeclHandler"], [296, 8, 1, "", "EndElementHandler"], [296, 8, 1, "", "EndNamespaceDeclHandler"], [296, 8, 1, "", "EntityDeclHandler"], [296, 7, 1, "", "ErrorByteIndex"], [296, 7, 1, "", "ErrorCode"], [296, 7, 1, "", "ErrorColumnNumber"], [296, 7, 1, "", "ErrorLineNumber"], [296, 8, 1, "", "ExternalEntityParserCreate"], [296, 8, 1, "", "ExternalEntityRefHandler"], [296, 8, 1, "", "GetBase"], [296, 8, 1, "", "GetInputContext"], [296, 8, 1, "", "NotStandaloneHandler"], [296, 8, 1, "", "NotationDeclHandler"], [296, 8, 1, "", "Parse"], [296, 8, 1, "", "ParseFile"], [296, 8, 1, "", "ProcessingInstructionHandler"], [296, 8, 1, "", "SetBase"], [296, 8, 1, "", "SetParamEntityParsing"], [296, 8, 1, "", "StartCdataSectionHandler"], [296, 8, 1, "", "StartDoctypeDeclHandler"], [296, 8, 1, "", "StartElementHandler"], [296, 8, 1, "", "StartNamespaceDeclHandler"], [296, 8, 1, "", "UnparsedEntityDeclHandler"], [296, 8, 1, "", "UseForeignDTD"], [296, 8, 1, "", "XmlDeclHandler"], [296, 7, 1, "", "buffer_size"], [296, 7, 1, "", "buffer_text"], [296, 7, 1, "", "buffer_used"], [296, 7, 1, "", "ordered_attributes"], [296, 7, 1, "", "specified_attributes"]], "xml.sax": [[389, 6, 1, "", "SAXException"], [389, 6, 1, "", "SAXNotRecognizedException"], [389, 6, 1, "", "SAXNotSupportedException"], [389, 6, 1, "", "SAXParseException"], [390, 10, 0, "-", "handler"], [389, 12, 1, "", "make_parser"], [389, 12, 1, "", "parse"], [389, 12, 1, "", "parseString"], [392, 10, 0, "-", "saxutils"], [391, 10, 0, "-", "xmlreader"]], "xml.sax.SAXException": [[389, 8, 1, "", "getException"], [389, 8, 1, "", "getMessage"]], "xml.sax.handler": [[390, 11, 1, "", "ContentHandler"], [390, 11, 1, "", "DTDHandler"], [390, 11, 1, "", "EntityResolver"], [390, 11, 1, "", "ErrorHandler"], [390, 11, 1, "", "LexicalHandler"], [390, 9, 1, "", "all_features"], [390, 9, 1, "", "all_properties"], [390, 9, 1, "", "feature_external_ges"], [390, 9, 1, "", "feature_external_pes"], [390, 9, 1, "", "feature_namespace_prefixes"], [390, 9, 1, "", "feature_namespaces"], [390, 9, 1, "", "feature_string_interning"], [390, 9, 1, "", "feature_validation"], [390, 9, 1, "", "property_declaration_handler"], [390, 9, 1, "", "property_dom_node"], [390, 9, 1, "", "property_lexical_handler"], [390, 9, 1, "", "property_xml_string"]], "xml.sax.handler.ContentHandler": [[390, 8, 1, "", "characters"], [390, 8, 1, "", "endDocument"], [390, 8, 1, "", "endElement"], [390, 8, 1, "", "endElementNS"], [390, 8, 1, "", "endPrefixMapping"], [390, 8, 1, "", "ignorableWhitespace"], [390, 8, 1, "", "processingInstruction"], [390, 8, 1, "", "setDocumentLocator"], [390, 8, 1, "", "skippedEntity"], [390, 8, 1, "", "startDocument"], [390, 8, 1, "", "startElement"], [390, 8, 1, "", "startElementNS"], [390, 8, 1, "", "startPrefixMapping"]], "xml.sax.handler.DTDHandler": [[390, 8, 1, "", "notationDecl"], [390, 8, 1, "", "unparsedEntityDecl"]], "xml.sax.handler.EntityResolver": [[390, 8, 1, "", "resolveEntity"]], "xml.sax.handler.ErrorHandler": [[390, 8, 1, "", "error"], [390, 8, 1, "", "fatalError"], [390, 8, 1, "", "warning"]], "xml.sax.handler.LexicalHandler": [[390, 8, 1, "", "comment"], [390, 8, 1, "", "endCDATA"], [390, 8, 1, "", "endDTD"], [390, 8, 1, "", "startCDATA"], [390, 8, 1, "", "startDTD"]], "xml.sax.saxutils": [[392, 11, 1, "", "XMLFilterBase"], [392, 11, 1, "", "XMLGenerator"], [392, 12, 1, "", "escape"], [392, 12, 1, "", "prepare_input_source"], [392, 12, 1, "", "quoteattr"], [392, 12, 1, "", "unescape"]], "xml.sax.xmlreader.Attributes": [[391, 8, 1, "", "getLength"], [391, 8, 1, "", "getNames"], [391, 8, 1, "", "getType"], [391, 8, 1, "", "getValue"]], "xml.sax.xmlreader": [[391, 11, 1, "", "AttributesImpl"], [391, 11, 1, "", "AttributesNSImpl"], [391, 11, 1, "", "IncrementalParser"], [391, 11, 1, "", "InputSource"], [391, 11, 1, "", "Locator"], [391, 11, 1, "", "XMLReader"]], "xml.sax.xmlreader.AttributesNS": [[391, 8, 1, "", "getNameByQName"], [391, 8, 1, "", "getQNameByName"], [391, 8, 1, "", "getQNames"], [391, 8, 1, "", "getValueByQName"]], "xml.sax.xmlreader.IncrementalParser": [[391, 8, 1, "", "close"], [391, 8, 1, "", "feed"], [391, 8, 1, "", "reset"]], "xml.sax.xmlreader.InputSource": [[391, 8, 1, "", "getByteStream"], [391, 8, 1, "", "getCharacterStream"], [391, 8, 1, "", "getEncoding"], [391, 8, 1, "", "getPublicId"], [391, 8, 1, "", "getSystemId"], [391, 8, 1, "", "setByteStream"], [391, 8, 1, "", "setCharacterStream"], [391, 8, 1, "", "setEncoding"], [391, 8, 1, "", "setPublicId"], [391, 8, 1, "", "setSystemId"]], "xml.sax.xmlreader.Locator": [[391, 8, 1, "", "getColumnNumber"], [391, 8, 1, "", "getLineNumber"], [391, 8, 1, "", "getPublicId"], [391, 8, 1, "", "getSystemId"]], "xml.sax.xmlreader.XMLReader": [[391, 8, 1, "", "getContentHandler"], [391, 8, 1, "", "getDTDHandler"], [391, 8, 1, "", "getEntityResolver"], [391, 8, 1, "", "getErrorHandler"], [391, 8, 1, "", "getFeature"], [391, 8, 1, "", "getProperty"], [391, 8, 1, "", "parse"], [391, 8, 1, "", "setContentHandler"], [391, 8, 1, "", "setDTDHandler"], [391, 8, 1, "", "setEntityResolver"], [391, 8, 1, "", "setErrorHandler"], [391, 8, 1, "", "setFeature"], [391, 8, 1, "", "setLocale"], [391, 8, 1, "", "setProperty"]], "xmlrpc": [[394, 10, 0, "-", "client"], [395, 10, 0, "-", "server"]], "xmlrpc.client": [[394, 11, 1, "", "Binary"], [394, 11, 1, "", "DateTime"], [394, 11, 1, "", "Fault"], [394, 11, 1, "", "MultiCall"], [394, 11, 1, "", "ProtocolError"], [394, 11, 1, "", "ServerProxy"], [394, 12, 1, "", "dumps"], [394, 12, 1, "", "loads"]], "xmlrpc.client.Binary": [[394, 7, 1, "", "data"], [394, 8, 1, "", "decode"], [394, 8, 1, "", "encode"]], "xmlrpc.client.DateTime": [[394, 8, 1, "", "decode"], [394, 8, 1, "", "encode"]], "xmlrpc.client.Fault": [[394, 7, 1, "", "faultCode"], [394, 7, 1, "", "faultString"]], "xmlrpc.client.ProtocolError": [[394, 7, 1, "", "errcode"], [394, 7, 1, "", "errmsg"], [394, 7, 1, "", "headers"], [394, 7, 1, "", "url"]], "xmlrpc.client.ServerProxy.system": [[394, 8, 1, "", "listMethods"], [394, 8, 1, "", "methodHelp"], [394, 8, 1, "", "methodSignature"]], "xmlrpc.server": [[395, 11, 1, "", "CGIXMLRPCRequestHandler"], [395, 11, 1, "", "DocCGIXMLRPCRequestHandler"], [395, 11, 1, "", "DocXMLRPCRequestHandler"], [395, 11, 1, "", "DocXMLRPCServer"], [395, 11, 1, "", "SimpleXMLRPCRequestHandler"], [395, 11, 1, "", "SimpleXMLRPCServer"]], "xmlrpc.server.CGIXMLRPCRequestHandler": [[395, 8, 1, "", "handle_request"], [395, 8, 1, "", "register_function"], [395, 8, 1, "", "register_instance"], [395, 8, 1, "", "register_introspection_functions"], [395, 8, 1, "", "register_multicall_functions"]], "xmlrpc.server.DocCGIXMLRPCRequestHandler": [[395, 8, 1, "", "set_server_documentation"], [395, 8, 1, "", "set_server_name"], [395, 8, 1, "", "set_server_title"]], "xmlrpc.server.DocXMLRPCServer": [[395, 8, 1, "", "set_server_documentation"], [395, 8, 1, "", "set_server_name"], [395, 8, 1, "", "set_server_title"]], "xmlrpc.server.SimpleXMLRPCRequestHandler": [[395, 7, 1, "", "rpc_paths"]], "xmlrpc.server.SimpleXMLRPCServer": [[395, 8, 1, "", "register_function"], [395, 8, 1, "", "register_instance"], [395, 8, 1, "", "register_introspection_functions"], [395, 8, 1, "", "register_multicall_functions"]], "zipapp": [[396, 12, 1, "", "create_archive"], [396, 12, 1, "", "get_interpreter"], [396, 14, 1, "cmdoption-zipapp-c", "--compress"], [396, 14, 1, "cmdoption-zipapp-h", "--help"], [396, 14, 1, "cmdoption-zipapp-info", "--info"], [396, 14, 1, "cmdoption-zipapp-m", "--main"], [396, 14, 1, "cmdoption-zipapp-o", "--output"], [396, 14, 1, "cmdoption-zipapp-p", "--python"], [396, 14, 1, "cmdoption-zipapp-c", "-c"], [396, 14, 1, "cmdoption-zipapp-h", "-h"], [396, 14, 1, "cmdoption-zipapp-m", "-m"], [396, 14, 1, "cmdoption-zipapp-o", "-o"], [396, 14, 1, "cmdoption-zipapp-p", "-p"]], "zipfile": [[397, 6, 1, "", "BadZipFile"], [397, 6, 1, "", "BadZipfile"], [397, 6, 1, "", "LargeZipFile"], [397, 11, 1, "", "Path"], [397, 11, 1, "", "PyZipFile"], [397, 9, 1, "", "ZIP_BZIP2"], [397, 9, 1, "", "ZIP_DEFLATED"], [397, 9, 1, "", "ZIP_LZMA"], [397, 9, 1, "", "ZIP_STORED"], [397, 11, 1, "", "ZipFile"], [397, 11, 1, "", "ZipInfo"], [397, 12, 1, "", "is_zipfile"], [397, 14, 1, "cmdoption-zipfile-create", "--create"], [397, 14, 1, "cmdoption-zipfile-extract", "--extract"], [397, 14, 1, "cmdoption-zipfile-list", "--list"], [397, 14, 1, "cmdoption-zipfile-metadata-encoding", "--metadata-encoding"], [397, 14, 1, "cmdoption-zipfile-test", "--test"], [397, 14, 1, "cmdoption-zipfile-c", "-c"], [397, 14, 1, "cmdoption-zipfile-e", "-e"], [397, 14, 1, "cmdoption-zipfile-l", "-l"], [397, 14, 1, "cmdoption-zipfile-t", "-t"]], "zipfile.Path": [[397, 8, 1, "", "exists"], [397, 8, 1, "", "is_dir"], [397, 8, 1, "", "is_file"], [397, 8, 1, "", "iterdir"], [397, 8, 1, "", "joinpath"], [397, 7, 1, "", "name"], [397, 8, 1, "", "open"], [397, 8, 1, "", "read_bytes"], [397, 8, 1, "", "read_text"], [397, 9, 1, "", "stem"], [397, 9, 1, "", "suffix"], [397, 9, 1, "", "suffixes"]], "zipfile.PyZipFile": [[397, 8, 1, "", "writepy"]], "zipfile.ZipFile": [[397, 8, 1, "", "close"], [397, 7, 1, "", "comment"], [397, 7, 1, "", "debug"], [397, 8, 1, "", "extract"], [397, 8, 1, "", "extractall"], [397, 7, 1, "", "filename"], [397, 8, 1, "", "getinfo"], [397, 8, 1, "", "infolist"], [397, 8, 1, "", "mkdir"], [397, 8, 1, "", "namelist"], [397, 8, 1, "", "open"], [397, 8, 1, "", "printdir"], [397, 8, 1, "", "read"], [397, 8, 1, "", "setpassword"], [397, 8, 1, "", "testzip"], [397, 8, 1, "", "write"], [397, 8, 1, "", "writestr"]], "zipfile.ZipInfo": [[397, 7, 1, "", "CRC"], [397, 7, 1, "", "comment"], [397, 7, 1, "", "compress_size"], [397, 7, 1, "", "compress_type"], [397, 7, 1, "", "create_system"], [397, 7, 1, "", "create_version"], [397, 7, 1, "", "date_time"], [397, 7, 1, "", "external_attr"], [397, 7, 1, "", "extra"], [397, 7, 1, "", "extract_version"], [397, 7, 1, "", "file_size"], [397, 7, 1, "", "filename"], [397, 7, 1, "", "flag_bits"], [397, 8, 1, "", "from_file"], [397, 7, 1, "", "header_offset"], [397, 7, 1, "", "internal_attr"], [397, 8, 1, "", "is_dir"], [397, 7, 1, "", "reserved"], [397, 7, 1, "", "volume"]], "zipimport": [[398, 6, 1, "", "ZipImportError"], [398, 11, 1, "", "zipimporter"]], "zipimport.zipimporter": [[398, 7, 1, "", "archive"], [398, 8, 1, "", "create_module"], [398, 8, 1, "", "exec_module"], [398, 8, 1, "", "find_spec"], [398, 8, 1, "", "get_code"], [398, 8, 1, "", "get_data"], [398, 8, 1, "", "get_filename"], [398, 8, 1, "", "get_source"], [398, 8, 1, "", "invalidate_caches"], [398, 8, 1, "", "is_package"], [398, 8, 1, "", "load_module"], [398, 7, 1, "", "prefix"]], "zlib.Compress": [[399, 8, 1, "", "compress"], [399, 8, 1, "", "copy"], [399, 8, 1, "", "flush"]], "zlib.Decompress": [[399, 8, 1, "", "copy"], [399, 8, 1, "", "decompress"], [399, 7, 1, "", "eof"], [399, 8, 1, "", "flush"], [399, 7, 1, "", "unconsumed_tail"], [399, 7, 1, "", "unused_data"]], "zlib": [[399, 9, 1, "", "ZLIB_RUNTIME_VERSION"], [399, 9, 1, "", "ZLIB_VERSION"], [399, 12, 1, "", "adler32"], [399, 12, 1, "", "compress"], [399, 12, 1, "", "compressobj"], [399, 12, 1, "", "crc32"], [399, 12, 1, "", "decompress"], [399, 12, 1, "", "decompressobj"], [399, 6, 1, "", "error"]], "zoneinfo": [[400, 6, 1, "", "InvalidTZPathWarning"], [400, 9, 1, "", "TZPATH"], [400, 11, 1, "", "ZoneInfo"], [400, 6, 1, "", "ZoneInfoNotFoundError"], [400, 12, 1, "", "available_timezones"], [400, 12, 1, "", "reset_tzpath"]], "zoneinfo.ZoneInfo": [[400, 8, 1, "", "clear_cache"], [400, 8, 1, "", "from_file"], [400, 7, 1, "", "key"], [400, 8, 1, "", "no_cache"]], "./Tools/clinic/clinic.py-[-h]-[-f]-[-o-OUTPUT]-[-v]-\\-[--converters]-[--make]-[--srcdir-SRCDIR]-[--limited]-[FILE-...]": [[88, 14, 1, "cmdoption-.-Tools-clinic-clinic.py-h-f-o-OUTPUT-v-converters-make-srcdir-SRCDIR-limited-FILE-...-converters", "--converters"], [88, 14, 1, "cmdoption-.-Tools-clinic-clinic.py-h-f-o-OUTPUT-v-converters-make-srcdir-SRCDIR-limited-FILE-...-exclude", "--exclude"], [88, 14, 1, "cmdoption-.-Tools-clinic-clinic.py-h-f-o-OUTPUT-v-converters-make-srcdir-SRCDIR-limited-FILE-...-f", "--force"], [88, 14, 1, "cmdoption-.-Tools-clinic-clinic.py-h-f-o-OUTPUT-v-converters-make-srcdir-SRCDIR-limited-FILE-...-h", "--help"], [88, 14, 1, "cmdoption-.-Tools-clinic-clinic.py-h-f-o-OUTPUT-v-converters-make-srcdir-SRCDIR-limited-FILE-...-limited", "--limited"], [88, 14, 1, "cmdoption-.-Tools-clinic-clinic.py-h-f-o-OUTPUT-v-converters-make-srcdir-SRCDIR-limited-FILE-...-make", "--make"], [88, 14, 1, "cmdoption-.-Tools-clinic-clinic.py-h-f-o-OUTPUT-v-converters-make-srcdir-SRCDIR-limited-FILE-...-o", "--output"], [88, 14, 1, "cmdoption-.-Tools-clinic-clinic.py-h-f-o-OUTPUT-v-converters-make-srcdir-SRCDIR-limited-FILE-...-srcdir", "--srcdir"], [88, 14, 1, "cmdoption-.-Tools-clinic-clinic.py-h-f-o-OUTPUT-v-converters-make-srcdir-SRCDIR-limited-FILE-...-v", "--verbose"], [88, 14, 1, "cmdoption-.-Tools-clinic-clinic.py-h-f-o-OUTPUT-v-converters-make-srcdir-SRCDIR-limited-FILE-...-f", "-f"], [88, 14, 1, "cmdoption-.-Tools-clinic-clinic.py-h-f-o-OUTPUT-v-converters-make-srcdir-SRCDIR-limited-FILE-...-h", "-h"], [88, 14, 1, "cmdoption-.-Tools-clinic-clinic.py-h-f-o-OUTPUT-v-converters-make-srcdir-SRCDIR-limited-FILE-...-o", "-o"], [88, 14, 1, "cmdoption-.-Tools-clinic-clinic.py-h-f-o-OUTPUT-v-converters-make-srcdir-SRCDIR-limited-FILE-...-v", "-v"], [88, 14, 1, "cmdoption-.-Tools-clinic-clinic.py-h-f-o-OUTPUT-v-converters-make-srcdir-SRCDIR-limited-FILE-...-arg-FILE", "FILE"]], "json.tool": [[250, 14, 1, "cmdoption-json.tool-indent", "--compact"], [250, 14, 1, "cmdoption-json.tool-h", "--help"], [250, 14, 1, "cmdoption-json.tool-indent", "--indent"], [250, 14, 1, "cmdoption-json.tool-json-lines", "--json-lines"], [250, 14, 1, "cmdoption-json.tool-no-ensure-ascii", "--no-ensure-ascii"], [250, 14, 1, "cmdoption-json.tool-indent", "--no-indent"], [250, 14, 1, "cmdoption-json.tool-sort-keys", "--sort-keys"], [250, 14, 1, "cmdoption-json.tool-indent", "--tab"], [250, 14, 1, "cmdoption-json.tool-h", "-h"], [250, 14, 1, "cmdoption-json.tool-arg-infile", "infile"], [250, 14, 1, "cmdoption-json.tool-arg-outfile", "outfile"]], "python--m-py_compile": [[293, 14, 1, "cmdoption-python-m-py_compile", "-"], [293, 14, 1, "cmdoption-python-m-py_compile-q", "--quiet"], [293, 14, 1, "cmdoption-python-m-py_compile-q", "-q"], [293, 14, 1, "cmdoption-python-m-py_compile-arg-file", "&lt;file&gt;"]], "python--m-sqlite3-[-h]-[-v]-[filename]-[sql]": [[320, 14, 1, "cmdoption-python-m-sqlite3-h-v-filename-sql-h", "--help"], [320, 14, 1, "cmdoption-python-m-sqlite3-h-v-filename-sql-v", "--version"], [320, 14, 1, "cmdoption-python-m-sqlite3-h-v-filename-sql-h", "-h"], [320, 14, 1, "cmdoption-python-m-sqlite3-h-v-filename-sql-v", "-v"]], "unittest-discover": [[365, 14, 1, "cmdoption-unittest-discover-p", "--pattern"], [365, 14, 1, "cmdoption-unittest-discover-s", "--start-directory"], [365, 14, 1, "cmdoption-unittest-discover-t", "--top-level-directory"], [365, 14, 1, "cmdoption-unittest-discover-v", "--verbose"], [365, 14, 1, "cmdoption-unittest-discover-p", "-p"], [365, 14, 1, "cmdoption-unittest-discover-s", "-s"], [365, 14, 1, "cmdoption-unittest-discover-t", "-t"], [365, 14, 1, "cmdoption-unittest-discover-v", "-v"]]}, "objtypes": {"0": "c:member", "1": "c:macro", "2": "c:function", "3": "c:functionParam", "4": "c:type", "5": "c:struct", "6": "py:exception", "7": "py:attribute", "8": "py:method", "9": "py:data", "10": "py:module", "11": "py:class", "12": "py:function", "13": "std:pdbcommand", "14": "std:cmdoption", "15": "std:envvar", "16": "std:opcode"}, "objnames": {"0": ["c", "member", "C member"], "1": ["c", "macro", "C macro"], "2": ["c", "function", "C function"], "3": ["c", "functionParam", "C function parameter"], "4": ["c", "type", "C type"], "5": ["c", "struct", "C struct"], "6": ["py", "exception", "Python exception"], "7": ["py", "attribute", "Python attribute"], "8": ["py", "method", "Python method"], "9": ["py", "data", "Python data"], "10": ["py", "module", "Python module"], "11": ["py", "class", "Python class"], "12": ["py", "function", "Python function"], "13": ["std", "pdbcommand", "pdbcommand"], "14": ["std", "cmdoption", "program option"], "15": ["std", "envvar", "environment variable"], "16": ["std", "opcode", "opcode"]}, "titleterms": {"about": [0, 32, 78, 83, 182, 415, 437, 448], "document": [0, 1, 66, 78, 82, 93, 190, 295, 385, 388, 395, 401, 416, 443, 444, 451, 452, 453, 456, 457], "contributor": 0, "python": [0, 1, 15, 31, 32, 33, 34, 41, 66, 68, 70, 71, 72, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 88, 89, 90, 91, 93, 94, 100, 101, 105, 107, 109, 148, 149, 153, 165, 169, 177, 180, 182, 203, 242, 251, 252, 254, 255, 261, 277, 280, 282, 290, 293, 294, 297, 306, 312, 315, 320, 333, 334, 337, 340, 345, 347, 354, 355, 357, 361, 396, 401, 408, 412, 413, 415, 420, 423, 424, 425, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460], "deal": [1, 99], "bug": [1, 32, 78, 83, 353], "us": [1, 34, 75, 76, 77, 78, 82, 83, 88, 92, 96, 98, 99, 101, 102, 103, 106, 130, 153, 159, 185, 224, 258, 266, 268, 269, 279, 290, 296, 308, 320, 328, 332, 334, 340, 343, 353, 354, 361, 365, 367, 372, 400, 401, 403, 417, 423, 424, 430, 434, 435, 436, 442, 443, 448, 449, 452, 457], "issu": [1, 23, 97, 107, 203, 337, 419, 436, 443], "tracker": [1, 443], "get": [1, 76, 78, 79, 82, 83, 87, 96, 126, 130, 359, 361, 367, 434, 435, 436], "start": [1, 84, 90, 157, 175, 269, 361, 366, 367, 436], "contribut": 1, "yourself": 1, "abstract": [2, 73, 86, 88, 90, 91, 97, 101, 102, 103, 111, 116, 151, 238, 241, 273, 443], "object": [2, 3, 5, 6, 8, 9, 10, 12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 34, 36, 37, 38, 41, 42, 43, 44, 45, 47, 48, 53, 54, 56, 58, 59, 60, 61, 62, 65, 73, 77, 82, 83, 86, 91, 92, 96, 97, 98, 99, 114, 120, 123, 126, 133, 141, 145, 147, 148, 150, 156, 157, 164, 166, 168, 172, 175, 179, 182, 192, 195, 197, 212, 215, 224, 231, 232, 233, 237, 243, 247, 250, 255, 256, 259, 261, 263, 269, 272, 277, 279, 282, 287, 289, 294, 296, 298, 301, 303, 305, 307, 310, 312, 313, 317, 318, 319, 320, 321, 323, 324, 328, 332, 337, 343, 358, 361, 363, 366, 367, 372, 374, 377, 378, 379, 381, 385, 386, 387, 388, 389, 390, 391, 394, 395, 397, 398, 403, 415, 421, 440, 441, 443, 444, 448, 452, 453], "layer": [2, 16, 64, 106, 454], "alloc": [3, 32, 41, 59, 73, 359, 440, 453], "heap": [3, 59, 61, 97, 225], "api": [4, 5, 8, 10, 14, 31, 32, 33, 41, 55, 71, 84, 88, 92, 110, 117, 118, 120, 124, 157, 182, 185, 196, 199, 219, 239, 282, 320, 324, 328, 359, 375, 385, 388, 396, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "abi": [4, 55, 447, 451, 457], "version": [4, 78, 86, 96, 101, 107, 239, 276, 321, 337, 376, 435, 436, 449, 450, 451], "pars": [5, 114, 196, 276, 286, 296, 313, 354, 356, 371, 388, 444, 447, 451, 456, 458], "argument": [5, 83, 87, 88, 114, 165, 276, 277, 328, 332, 367, 403, 416, 423, 426, 436, 453, 455], "build": [5, 34, 69, 71, 75, 363, 387, 388, 431, 435, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "valu": [5, 71, 77, 82, 83, 88, 92, 93, 114, 115, 157, 165, 170, 175, 250, 276, 300, 320, 324, 367, 381, 402, 403, 405, 416], "string": [5, 18, 62, 76, 82, 83, 92, 102, 105, 247, 276, 301, 324, 325, 326, 327, 328, 400, 410, 416, 421, 426, 437, 440, 441, 443, 445, 448, 449, 452, 455, 456, 457, 458], "buffer": [5, 7, 61, 99, 127, 243, 246, 282, 302, 403, 443, 449, 452, 457], "number": [5, 15, 46, 61, 78, 82, 83, 106, 144, 159, 210, 250, 262, 273, 277, 300, 308, 403, 424, 443, 447], "other": [5, 16, 74, 76, 77, 82, 83, 92, 96, 98, 99, 114, 133, 247, 268, 276, 282, 308, 318, 324, 332, 334, 363, 410, 417, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "function": [5, 7, 8, 14, 16, 25, 27, 44, 56, 57, 62, 71, 76, 77, 83, 88, 91, 92, 93, 97, 102, 104, 114, 116, 123, 143, 144, 150, 153, 156, 159, 162, 165, 166, 168, 170, 180, 213, 214, 215, 221, 238, 239, 243, 247, 249, 255, 256, 262, 268, 275, 282, 294, 300, 301, 305, 308, 318, 320, 321, 323, 324, 325, 327, 328, 331, 332, 334, 338, 344, 359, 360, 361, 362, 363, 365, 367, 376, 381, 388, 394, 400, 401, 402, 403, 405, 416, 425, 437, 438, 441, 442, 443, 445, 448, 452, 454, 455, 456], "boolean": [6, 92, 276, 324, 405, 440], "protocol": [7, 10, 35, 39, 46, 47, 52, 73, 91, 97, 124, 127, 157, 212, 231, 237, 244, 287, 317, 321, 363, 365, 407, 443, 449, 452, 454, 455, 457], "structur": [7, 15, 56, 61, 99, 157, 165, 221, 260, 363, 371, 404, 410, 417, 421, 447], "request": [7, 319, 370, 372, 455], "type": [7, 8, 34, 56, 59, 60, 61, 62, 73, 74, 76, 92, 93, 97, 101, 105, 114, 116, 165, 170, 171, 172, 200, 243, 263, 273, 276, 282, 320, 324, 347, 362, 363, 381, 383, 385, 402, 403, 411, 417, 439, 440, 441, 442, 443, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458], "independ": [7, 441], "field": [7, 150, 165, 170, 363, 447], "readonli": 7, "format": [7, 18, 98, 99, 164, 172, 206, 236, 256, 259, 269, 282, 324, 325, 327, 337, 396, 410, 421, 427, 443, 444, 445, 446, 454, 455], "shape": [7, 361], "stride": 7, "suboffset": 7, "contigu": 7, "compound": [7, 361, 402], "complex": [7, 15, 104, 144, 324, 367, 403, 447], "arrai": [7, 8, 83, 115, 140, 165, 250, 447, 449, 450, 452, 455], "numpi": 7, "style": [7, 83, 99, 217, 220, 324, 339, 353, 416, 442], "pil": 7, "relat": [7, 106, 143, 238, 323, 407, 435, 439, 447, 448, 449], "byte": [8, 9, 105, 153, 165, 300, 308, 324, 327, 371, 410, 443, 454], "check": [8, 83, 84, 101, 182, 238, 276, 301, 367, 383, 403, 458], "macro": [8, 34, 56], "direct": [8, 182, 270, 363, 438], "call": [10, 71, 76, 77, 78, 83, 88, 93, 165, 204, 276, 288, 366, 367, 401, 405, 448, 454, 457], "The": [10, 41, 45, 64, 71, 74, 86, 87, 88, 90, 93, 101, 102, 105, 106, 114, 155, 204, 205, 219, 222, 238, 242, 243, 269, 273, 276, 280, 288, 290, 292, 324, 332, 333, 347, 361, 363, 366, 376, 384, 385, 388, 391, 396, 400, 402, 403, 405, 407, 408, 411, 413, 416, 417, 420, 421, 423, 425, 434, 436, 439, 440, 441, 442, 443, 444, 451], "tp_call": 10, "vectorcal": [10, 457], "recurs": [10, 23], "control": [10, 23, 28, 57, 74, 83, 116, 320, 339, 360, 361, 376, 379, 416, 426], "support": [10, 14, 28, 32, 40, 44, 48, 49, 62, 73, 74, 76, 92, 93, 99, 100, 101, 105, 122, 125, 142, 145, 157, 159, 160, 162, 200, 219, 223, 227, 244, 265, 288, 294, 321, 337, 340, 349, 363, 366, 387, 388, 389, 400, 437, 440, 443, 453, 454, 455, 456, 457, 458], "capsul": [11, 444], "cell": [12, 166], "code": [13, 32, 34, 76, 83, 88, 101, 105, 106, 109, 114, 119, 120, 147, 149, 172, 230, 236, 238, 243, 324, 332, 345, 365, 376, 401, 403, 416, 423, 436, 440, 448, 451, 452, 453, 454, 458], "extra": 13, "inform": [13, 78, 90, 99, 277, 304, 334, 424], "codec": [14, 62, 148, 440, 447, 451, 452, 453], "registri": [14, 148, 381, 436], "lookup": [14, 44, 91, 403], "unicod": [14, 23, 62, 105, 148, 337, 364, 437, 439, 440, 445, 451, 452], "encod": [14, 62, 105, 136, 148, 187, 246, 250, 299, 371, 410, 423, 440, 447, 455], "error": [14, 23, 71, 83, 84, 106, 120, 148, 175, 177, 188, 276, 296, 337, 370, 413, 418, 419, 426, 440, 447, 448, 449], "handler": [14, 82, 98, 99, 106, 120, 134, 148, 203, 255, 256, 257, 315, 319, 347, 383, 390], "c": [15, 31, 41, 44, 55, 69, 70, 71, 75, 76, 77, 82, 83, 88, 217, 431, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "concret": [16, 202, 279, 363], "fundament": [16, 165], "numer": [16, 82, 115, 273, 274, 324, 403, 410, 455], "sequenc": [16, 52, 58, 61, 83, 300, 324, 328, 402, 403, 410, 417], "contain": [16, 76, 114, 150, 151, 247, 363, 403], "context": [17, 99, 129, 159, 160, 175, 182, 202, 236, 269, 320, 321, 324, 367, 376, 403, 441, 442, 443, 447, 452], "variabl": [17, 32, 83, 88, 98, 116, 159, 160, 165, 170, 224, 276, 277, 334, 338, 347, 415, 430, 436, 444, 447, 455], "convers": [18, 97, 144, 152, 165, 247, 262, 324, 344, 356, 405, 441], "coroutin": [19, 119, 133, 243, 362, 402, 403, 454], "datetim": [20, 172, 394, 448, 451, 452, 455, 456, 457, 458], "descriptor": [21, 91, 120, 170, 177, 203, 277, 366, 403, 439, 453, 455], "dictionari": [22, 76, 99, 256, 324, 367, 403, 405, 417, 444, 446, 451, 452, 458], "except": [23, 34, 71, 76, 83, 98, 99, 106, 114, 118, 119, 121, 128, 156, 157, 159, 182, 188, 202, 221, 247, 250, 259, 269, 276, 279, 296, 301, 315, 318, 320, 321, 323, 327, 328, 367, 370, 385, 388, 400, 402, 404, 418, 442, 443, 444, 445, 448, 452], "handl": [23, 79, 99, 106, 120, 129, 166, 183, 232, 271, 276, 282, 321, 365, 369, 381, 413, 418, 440, 443, 444, 453, 454], "print": [23, 77, 114, 276, 358, 443, 445], "clear": 23, "rais": [23, 83, 98, 276, 367, 370, 411, 418], "warn": [23, 182, 202, 255, 340, 376, 400, 438, 444, 448, 455, 456], "queri": [23, 28, 276, 277, 314, 320], "indic": 23, "signal": [23, 82, 120, 175, 203, 315, 365, 452, 454, 456, 458], "class": [23, 76, 77, 83, 88, 91, 92, 97, 99, 111, 114, 116, 147, 148, 151, 156, 170, 188, 202, 205, 219, 238, 241, 243, 246, 269, 273, 282, 290, 294, 298, 311, 324, 327, 361, 362, 363, 365, 366, 367, 370, 372, 383, 390, 400, 402, 403, 410, 415, 439, 442, 443, 447, 448, 452, 455], "standard": [23, 34, 83, 148, 178, 201, 242, 250, 275, 276, 324, 327, 353, 362, 386, 403, 407, 425, 426, 427, 440, 448, 458], "categori": [23, 230, 376], "file": [24, 34, 62, 77, 82, 83, 84, 88, 98, 99, 101, 105, 114, 120, 142, 157, 164, 177, 178, 182, 203, 205, 206, 208, 223, 224, 236, 238, 239, 246, 256, 258, 265, 268, 272, 277, 286, 288, 293, 302, 314, 333, 337, 338, 347, 356, 367, 377, 388, 397, 403, 412, 413, 421, 425, 426, 431, 435, 436, 440, 451, 453, 454, 455, 456, 457], "float": [25, 76, 175, 324, 403, 410, 419, 427, 441], "point": [25, 76, 92, 175, 239, 410, 419, 427], "pack": [25, 327], "unpack": [25, 416, 454], "frame": [26, 359, 403, 448, 455], "intern": [26, 256, 261, 324, 403], "cyclic": [28, 74], "garbag": [28, 74, 76, 97, 216, 437], "collect": [28, 74, 76, 97, 150, 151, 180, 363, 437, 444, 447, 451, 452, 453, 454, 455, 456, 457, 458], "collector": [28, 216], "state": [28, 32, 97, 203, 233, 243, 269, 282, 337, 353, 361], "gener": [29, 62, 73, 76, 78, 79, 82, 83, 88, 93, 112, 143, 190, 228, 243, 276, 279, 286, 295, 300, 308, 315, 321, 324, 330, 338, 340, 363, 367, 402, 403, 405, 415, 430, 431, 439, 440, 441, 442, 448, 454, 455, 456, 458], "import": [30, 83, 109, 116, 200, 238, 239, 255, 256, 257, 267, 340, 347, 367, 398, 407, 411, 425, 438, 440, 441, 442, 443, 448, 452, 453], "modul": [30, 44, 68, 71, 77, 82, 83, 89, 90, 93, 96, 97, 98, 99, 102, 104, 107, 146, 156, 158, 164, 170, 199, 200, 213, 219, 230, 238, 246, 247, 255, 266, 267, 269, 274, 279, 282, 288, 290, 294, 301, 306, 315, 316, 318, 320, 324, 328, 329, 333, 347, 361, 363, 365, 369, 384, 385, 393, 398, 403, 407, 413, 425, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "refer": [31, 34, 50, 61, 65, 71, 73, 78, 83, 88, 93, 105, 165, 269, 276, 290, 320, 347, 361, 378, 383, 388, 405, 407, 408, 425, 427, 438], "manual": [31, 86, 160, 290, 321, 347, 421], "initi": [32, 33, 44, 71, 333, 454, 457], "final": [32, 73, 159, 378, 402, 442, 453], "thread": [32, 76, 82, 99, 110, 120, 131, 133, 175, 246, 255, 315, 340, 343, 347, 427, 447, 448, 449, 451, 452, 453, 454, 456, 457], "befor": [32, 78], "global": [32, 82, 83, 97, 282, 332, 400, 411], "configur": [32, 33, 98, 99, 157, 256, 316, 324, 334, 361, 400, 431, 434, 436, 444, 451, 457], "interpret": [32, 72, 76, 82, 97, 145, 147, 169, 243, 322, 327, 362, 396, 422, 423, 439, 442, 443, 444, 448, 449], "process": [32, 57, 97, 99, 120, 126, 170, 260, 269, 270, 272, 277, 321, 341, 384, 437, 443], "wide": 32, "paramet": [32, 71, 83, 88, 99, 116, 164, 165, 170, 277, 331, 347, 363, 402, 416, 447, 449, 457], "lock": [32, 82, 132, 343, 452], "releas": [32, 444, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458], "gil": [32, 449], "from": [32, 71, 77, 82, 83, 84, 91, 97, 98, 99, 133, 144, 159, 165, 195, 202, 207, 268, 328, 361, 367, 397, 398, 425, 436, 440, 443], "extens": [32, 56, 69, 71, 72, 73, 74, 75, 77, 82, 89, 97, 107, 168, 236, 254, 284, 372, 431, 452, 454], "non": [32, 102, 103, 250, 321, 388, 453], "creat": [32, 59, 62, 72, 77, 78, 82, 83, 92, 93, 96, 99, 103, 114, 120, 131, 133, 195, 224, 249, 276, 318, 320, 367, 375, 396, 403, 428, 453], "caution": 32, "fork": 32, "high": [32, 64, 70, 117, 118, 246, 311, 314, 328], "level": [32, 44, 64, 70, 83, 98, 99, 102, 109, 110, 117, 118, 124, 246, 247, 250, 255, 310, 311, 314, 318, 328, 412, 454], "low": [32, 44, 110, 117, 124, 318, 449], "sub": [32, 61, 114], "A": [32, 71, 75, 91, 96, 98, 99, 165, 168, 179, 298, 319, 347, 415, 440, 443, 445, 449, 452, 453, 454], "per": [32, 97, 332, 367, 443, 449], "caveat": [32, 55, 254, 396], "asynchron": [32, 117, 243, 315, 319, 363, 367, 401, 403, 405, 455], "notif": [32, 91], "profil": [32, 100, 174, 290], "trace": [32, 357, 359, 401], "advanc": [32, 87, 88, 98, 182, 443], "debugg": [32, 83, 137, 280], "local": [32, 62, 83, 219, 254, 332, 343, 436, 441, 447, 448, 449, 454, 455, 456], "storag": [32, 456], "specif": [32, 73, 76, 93, 148, 316, 325, 331, 353, 361, 368, 380, 381, 406, 440, 441, 442, 443, 444, 447], "tss": 32, "dynam": [32, 91, 165, 362, 404], "method": [32, 43, 56, 62, 71, 74, 76, 77, 82, 83, 91, 92, 97, 102, 114, 120, 124, 159, 229, 230, 269, 276, 279, 318, 320, 324, 361, 366, 367, 378, 385, 403, 405, 415, 421, 437, 441, 442, 445, 452, 454, 455, 456, 458], "tl": [32, 120, 321], "exampl": [33, 41, 61, 71, 74, 91, 95, 98, 99, 114, 120, 127, 128, 130, 131, 134, 140, 142, 145, 150, 151, 156, 157, 159, 162, 164, 172, 177, 179, 182, 189, 203, 223, 224, 225, 229, 231, 232, 233, 237, 238, 258, 259, 266, 269, 276, 282, 286, 287, 289, 291, 296, 300, 301, 302, 311, 312, 314, 315, 317, 318, 319, 321, 323, 325, 327, 335, 337, 338, 339, 343, 345, 355, 356, 358, 359, 365, 367, 372, 374, 375, 378, 383, 386, 388, 394, 395, 396, 398, 405, 415, 416], "pywidestringlist": 33, "pystatu": 33, "pypreconfig": 33, "preiniti": 33, "pyconfig": 33, "isol": [33, 97], "path": [33, 238, 278, 279, 333, 334, 397, 407, 425, 435, 436, 447, 449, 455, 457], "py_runmain": 33, "py_getargcargv": 33, "multi": [33, 44, 246, 321, 427, 441, 451, 454], "phase": [33, 44, 454], "privat": [33, 122, 415], "provision": [33, 452], "introduct": [34, 91, 93, 96, 102, 105, 106, 238, 245, 269, 290, 311, 361, 409, 424, 428, 437, 438, 439], "includ": [34, 426], "count": [34, 50, 71], "detail": [34, 96, 101, 151, 172, 254, 256, 323], "embed": [34, 70, 72, 77, 333, 436, 437], "debug": [34, 41, 77, 93, 119, 120, 174, 182, 236, 430, 431, 444, 447, 457], "iter": [35, 36, 83, 92, 93, 193, 207, 247, 249, 324, 365, 367, 403, 405, 415, 439, 441, 445, 454], "list": [37, 76, 78, 83, 93, 96, 140, 302, 324, 402, 405, 416, 417, 424, 427, 437, 443, 445], "integ": [38, 83, 247, 300, 324, 410, 439, 441, 443, 445], "map": [39, 49, 61, 62, 157, 239, 263, 265, 275, 324, 385, 402, 403], "data": [40, 74, 76, 82, 83, 92, 93, 98, 101, 103, 105, 106, 113, 130, 136, 138, 165, 170, 171, 200, 258, 271, 281, 282, 285, 289, 299, 327, 343, 347, 400, 403, 417, 421, 426, 427, 436, 441, 445, 448, 457], "marshal": [40, 261, 282, 453], "memori": [41, 76, 258, 265, 270, 321, 324, 359, 448, 453, 454], "manag": [41, 73, 76, 91, 97, 99, 129, 159, 160, 186, 233, 269, 277, 308, 320, 324, 328, 347, 367, 376, 396, 401, 403, 428, 442, 443, 447], "overview": [41, 70, 91, 96, 239, 246, 402, 445], "domain": [41, 148], "raw": [41, 62, 76, 83, 246, 301], "interfac": [41, 55, 76, 77, 79, 82, 88, 96, 146, 173, 179, 199, 216, 223, 243, 246, 247, 250, 277, 282, 283, 293, 302, 316, 318, 320, 337, 340, 345, 346, 347, 357, 365, 372, 382, 391, 396, 397, 426, 430, 451], "default": [41, 83, 88, 114, 170, 276, 320, 321, 337, 366, 376, 397, 416, 436, 444, 453], "custom": [41, 88, 91, 92, 98, 99, 114, 122, 126, 157, 165, 169, 192, 247, 256, 258, 269, 282, 290, 320, 325, 403, 413, 435, 436, 453, 455, 456], "hook": [41, 238, 302, 316, 407, 438, 440, 457], "pymalloc": [41, 440], "arena": 41, "tracemalloc": [41, 359, 453, 455, 456, 458], "memoryview": [42, 324, 444, 452], "instanc": [43, 83, 91, 92, 96, 170, 186, 282, 324, 403, 415], "singl": [44, 82, 83, 99, 159], "creation": [44, 96, 277, 319, 321, 362, 375, 403, 455], "none": [45, 82, 403], "implement": [48, 56, 76, 77, 82, 99, 120, 159, 173, 225, 238, 250, 273, 303, 383, 386, 403, 409, 448, 452, 453, 455, 456], "perf": [49, 100], "reflect": 51, "set": [53, 120, 126, 184, 236, 238, 315, 321, 324, 332, 347, 361, 367, 403, 405, 417, 436, 440, 441], "slice": [54, 403, 405, 440], "ellipsi": [54, 324, 403], "stabil": [55, 104], "unstabl": 55, "stabl": [55, 78, 447, 451], "applic": [55, 70, 72, 79, 82, 84, 90, 91, 99, 148, 219, 229, 236, 327, 396, 434, 436, 442, 454], "binari": [55, 82, 83, 101, 103, 107, 138, 139, 148, 246, 324, 327, 394, 405, 427], "limit": [55, 88, 97, 250, 290, 304, 324, 397, 419, 436], "scope": [55, 97, 404, 415, 438, 439], "perform": [55, 82, 83, 102, 140, 246, 282, 426, 431, 445, 452], "platform": [55, 125, 245, 285, 314, 353, 435, 436, 438, 447, 456], "consider": [55, 109, 136, 234, 256, 309, 321, 328, 407], "content": [55, 66, 76, 77, 78, 79, 82, 83, 84, 91, 164, 170, 186, 200, 288, 296, 301, 315, 316, 318, 363, 367, 385], "common": [56, 82, 102, 107, 172, 278, 288, 324, 325, 445], "base": [56, 83, 99, 111, 127, 147, 148, 151, 173, 202, 219, 238, 241, 246, 269, 273, 343, 383, 390, 407, 443, 444, 451, 456], "access": [56, 62, 77, 82, 86, 92, 97, 157, 165, 208, 239, 240, 253, 254, 256, 270, 279, 285, 330, 334, 344, 381, 394, 401, 403, 426, 439, 449, 456], "attribut": [56, 73, 74, 76, 83, 90, 91, 92, 99, 224, 243, 255, 276, 277, 320, 324, 331, 366, 367, 391, 403, 405, 407, 438, 439, 455, 456], "member": [56, 91, 92, 243], "flag": [56, 92, 102, 114, 116, 159, 182, 243, 276, 301, 431], "defin": [56, 73, 74, 83, 88, 96, 97, 256, 276, 363, 403, 416, 418, 447, 451], "getter": [56, 97], "setter": [56, 97], "oper": [57, 76, 83, 93, 104, 112, 161, 215, 221, 232, 247, 268, 273, 275, 277, 279, 301, 314, 321, 324, 325, 405, 410, 426, 439, 445, 447, 448, 452, 453, 454, 458], "system": [57, 62, 70, 77, 107, 112, 152, 201, 204, 277, 288, 295, 328, 331, 397, 407, 426, 431, 438, 452, 453, 454, 455], "util": [57, 63, 114, 159, 165, 167, 198, 200, 238, 284, 291, 340, 362, 383, 392, 448], "tupl": [58, 76, 77, 83, 150, 324, 331, 363, 417], "struct": [58, 327, 452, 453, 455], "hint": [60, 254, 337, 363, 447, 448, 449, 454, 458], "quick": [61, 114, 157, 175, 366], "tp": 61, "slot": [61, 62, 97], "typedef": 61, "pytypeobject": 61, "definit": [61, 76, 91, 105, 108, 116, 228, 247, 402, 415, 455], "pyobject": 61, "pyvarobject": 61, "static": [61, 83, 91, 95, 97, 101, 243, 383, 403, 448, 449], "async": [61, 116, 402, 454], "charact": [62, 102, 166, 167, 184, 250, 327], "properti": [62, 91, 105, 172, 279, 443], "wchar_t": 62, "built": [62, 93, 141, 158, 202, 214, 324, 362, 363, 403, 437, 441, 456], "utf": [62, 148, 277, 436, 455, 456], "8": [62, 148, 277, 436, 445, 455, 456, 457], "32": 62, "16": [62, 450], "7": [62, 444, 455, 456], "escap": [62, 410], "latin": 62, "1": [62, 84, 106, 276, 321, 401, 437, 438, 442, 444, 446, 451, 456, 457, 458], "ascii": [62, 139, 167, 371], "mbc": [62, 148], "window": [62, 75, 84, 90, 125, 148, 166, 178, 236, 285, 328, 347, 361, 380, 381, 382, 436, 440, 443, 444, 448, 452, 455, 456], "veri": [64, 70], "weak": [65, 73, 378, 427, 438], "copyright": [67, 78], "distribut": [68, 181, 239, 300, 323, 434], "setuptool": 69, "anoth": [70, 83], "beyond": [70, 114], "an": [70, 71, 76, 77, 82, 83, 84, 86, 91, 96, 99, 105, 129, 130, 159, 172, 183, 185, 194, 238, 250, 328, 367, 375, 388, 424, 436, 444], "pure": [70, 91, 279], "extend": [70, 71, 72, 77, 83, 88, 122, 239, 276, 277, 375, 437, 440], "compil": [70, 71, 76, 77, 102, 116, 149, 153, 293, 330, 400, 425, 431, 436, 448, 457], "link": [70, 114, 165, 439], "under": [70, 84], "unix": [70, 75, 82, 120, 173, 209, 220, 285, 335, 368, 435], "like": [70, 78, 99, 221], "simpl": [71, 76, 91, 98, 102, 182, 224, 229, 313, 335, 383, 411, 439, 440, 447], "intermezzo": [71, 416], "back": 71, "": [71, 77, 78, 82, 83, 88, 105, 173, 182, 285, 290, 330, 334, 361, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460], "tabl": [71, 135, 282, 330, 356], "linkag": 71, "extract": [71, 77, 337, 397], "keyword": [71, 83, 88, 170, 251, 410, 416, 447, 454, 455], "arbitrari": [71, 77, 98, 276, 416, 448], "ownership": 71, "rule": [71, 83, 313, 315, 439], "thin": 71, "ic": 71, "null": [71, 88, 324], "pointer": [71, 165], "write": [71, 77, 82, 83, 88, 105, 122, 127, 164, 258, 301, 320, 337, 340, 377, 421, 442, 443, 448], "provid": [71, 74, 98, 282, 334], "recommend": [72, 324], "third": [72, 431], "parti": [72, 431], "tool": [72, 82, 83, 176, 246, 260, 279, 283, 332, 340, 383, 416, 427, 444, 447, 449, 457], "without": [72, 84, 236, 436, 447], "cpython": [72, 76, 95, 447, 448, 449, 453, 455, 456, 457, 458], "runtim": [72, 84, 268, 297, 400, 448, 456, 457], "larger": 72, "assort": 73, "topic": 73, "de": [73, 142], "present": [73, 445], "comparison": [73, 92, 96, 104, 205, 247, 282, 324, 405, 438, 445], "more": [73, 76, 87, 90, 96, 99, 102, 273, 361, 367, 416, 417, 425, 448, 449], "suggest": 73, "tutori": [74, 78, 87, 88, 91, 98, 114, 117, 165, 175, 276, 320, 361, 388, 420], "basic": [74, 87, 88, 98, 104, 106, 107, 172, 182, 225, 250, 279, 345, 361, 365, 395, 396, 403], "ad": [74, 77, 99, 114, 158, 273, 276, 444, 452, 455], "finer": [74, 92, 452], "over": [74, 83, 207], "subclass": [74, 83, 92, 99, 232, 303, 367, 403], "cookbook": [75, 92, 99], "approach": [75, 445, 447], "differ": [75, 83, 92, 101, 179, 224, 359, 361], "between": [75, 83, 101, 105, 139, 152, 269, 276, 323, 410], "dll": [75, 84, 165], "practic": [75, 83, 86, 91, 308], "design": 76, "histori": [76, 93, 103, 302, 401, 422], "faq": [76, 77, 78, 79, 81, 82, 83, 84, 175, 448], "why": [76, 77, 78, 79, 81, 82, 83, 84, 441, 448], "doe": [76, 78, 83, 84, 347], "indent": [76, 236, 336, 410], "group": [76, 88, 93, 102, 114, 133, 202, 222, 276, 365, 402, 448], "statement": [76, 77, 108, 116, 159, 343, 357, 402, 403, 411, 416, 417, 442, 443], "am": [76, 83], "i": [76, 77, 78, 79, 81, 82, 83, 84, 90, 98, 107, 109, 117, 172, 246, 268, 290, 310, 311, 347, 403, 441, 443, 445, 448], "strang": 76, "result": [76, 83, 100, 322, 371], "arithmet": [76, 175, 247, 273, 405, 419, 427], "ar": [76, 77, 78, 82, 83, 92, 182, 276, 453], "calcul": [76, 424], "so": [76, 84, 451], "inaccur": 76, "immut": [76, 83, 324, 403], "must": 76, "self": [76, 83, 88, 321, 448, 457], "explicitli": 76, "can": [76, 77, 78, 79, 81, 82, 83, 84, 238, 282, 448], "t": [76, 79, 82, 83, 430, 448], "assign": [76, 88, 405, 411, 437, 457], "express": [76, 77, 88, 93, 102, 105, 116, 301, 405, 411, 412, 415, 416, 441, 442, 457], "some": [76, 77], "e": [76, 77], "g": [76, 77], "index": [76, 83, 118, 124, 347, 440, 442], "len": 76, "join": [76, 410], "instead": [76, 83, 88, 101, 445], "how": [76, 77, 78, 79, 82, 83, 84, 87, 88, 92, 99, 100, 101, 104, 107, 182, 276, 308, 320, 347, 361, 375, 434, 448], "fast": [76, 296, 457], "isn": 76, "switch": [76, 452], "case": [76, 97, 365, 402, 438], "you": [76, 82, 83, 101, 430, 458], "emul": [76, 403], "reli": [76, 83], "o": [76, 79, 82, 117, 202, 246, 268, 277, 278, 279, 310, 311, 328, 340, 403, 443, 444, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458], "lambda": [76, 83, 93, 405, 416], "machin": [76, 81], "languag": [76, 78, 83, 219, 227, 252, 325, 361, 408, 437, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "doesn": [76, 82], "tradit": 76, "scheme": [76, 78], "all": [76, 83, 125, 269, 276, 301, 359, 367, 444, 454, 455], "freed": 76, "when": [76, 83, 92, 96, 98, 103], "exit": [76, 114, 134], "separ": [76, 353, 440, 444, 446], "kei": [76, 79, 104, 107, 224, 226, 236, 269, 321, 447, 452], "sort": [76, 83, 104, 140], "return": [76, 83, 88, 91, 165, 367, 411, 436], "do": [76, 77, 78, 79, 82, 83, 84, 107, 347], "specifi": [76, 83, 87, 101, 165, 258, 363, 396, 444, 446], "enforc": 76, "spec": [76, 407], "goto": 76, "r": 76, "end": [76, 83, 90, 104, 415], "backslash": [76, 83, 102], "have": [76, 78, 79, 83, 101], "don": [76, 82, 83, 448], "colon": 76, "requir": [76, 114, 165, 239, 431, 448], "while": [76, 79, 402], "def": 76, "allow": [76, 92], "comma": [76, 83, 440], "my": [77, 81, 82, 83, 84, 448], "own": [77, 165], "hard": 77, "ani": [77, 78, 82, 86, 159, 363, 366, 448], "altern": [77, 99, 300, 303, 409, 422, 436], "execut": [77, 82, 84, 120, 154, 182, 236, 306, 315, 332, 340, 345, 357, 396, 401, 403, 404, 413, 425, 436, 442], "evalu": [77, 404, 405, 455, 456], "py_buildvalu": 77, "length": [77, 224, 324], "catch": [77, 159], "output": [77, 82, 83, 87, 88, 99, 236, 314, 421, 426, 427], "pyerr_print": 77, "anyth": 77, "stdout": [77, 82], "stderr": [77, 82], "written": 77, "setup": [77, 101, 433], "make": [77, 82, 83, 84, 97, 101, 301, 361, 437, 444, 449, 454, 455], "fail": [77, 96, 454], "want": [77, 83], "linux": [77, 100, 107, 277, 285, 435], "miss": [77, 84], "tell": [77, 361], "incomplet": [77, 165], "input": [77, 82, 90, 166, 178, 207, 218, 323, 355, 361, 412, 421, 422], "invalid": [77, 114, 407], "find": [77, 82, 83, 165, 266, 301, 388, 436], "undefin": 77, "symbol": [77, 88, 201, 330], "__builtin_new": 77, "__pure_virtu": 77, "through": [77, 401], "inherit": [77, 170, 202, 277, 361, 415, 439, 453], "what": [78, 79, 81, 82, 83, 90, 98, 109, 182, 276, 282, 290, 347, 429, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460], "softwar": [78, 181, 401, 442], "foundat": 78, "restrict": [78, 92, 282, 312, 372, 404], "wa": 78, "first": [78, 415, 424], "place": [78, 83, 275], "good": [78, 101], "work": [78, 79, 82, 83, 107, 120, 175, 182, 246, 320, 363, 375, 397, 427], "obtain": [78, 100, 124], "copi": [78, 82, 83, 161, 314, 450], "sourc": [78, 82, 83, 84, 105, 236, 238, 243, 293, 355, 400, 423, 440], "ve": 78, "never": [78, 119], "program": [78, 82, 83, 84, 90, 93, 103, 105, 129, 166, 211, 213, 219, 254, 269, 347, 404, 412, 424, 426, 434], "newsgroup": 78, "mail": [78, 82], "devot": 78, "beta": 78, "test": [78, 82, 83, 93, 101, 182, 251, 321, 324, 340, 365, 367, 376, 401, 405, 454], "submit": 78, "report": 78, "patch": [78, 366, 367], "publish": 78, "articl": [78, 106], "book": 78, "where": [78, 82, 366], "world": [78, 117, 120, 347], "www": [78, 82], "org": [78, 436], "locat": [78, 306, 323, 391, 448], "monti": 78, "fly": [78, 219], "circu": 78, "real": [78, 88, 300, 403], "mani": [78, 83, 308], "peopl": 78, "signific": [78, 453], "project": 78, "been": 78, "done": 78, "new": [78, 93, 276, 376, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460], "develop": [78, 119, 176, 177, 236, 283, 437, 443, 456], "expect": [78, 365], "futur": [78, 99, 108, 120, 122, 123, 156, 411, 444, 448, 449, 450, 451, 454, 455, 456, 458], "reason": 78, "propos": 78, "incompat": 78, "chang": [78, 83, 88, 97, 98, 219, 361, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "begin": 78, "programm": 78, "graphic": [79, 346, 361], "user": [79, 90, 107, 203, 236, 256, 290, 346, 363, 403, 418, 443, 447], "gui": [79, 99, 434], "question": [79, 80, 82, 83], "toolkit": 79, "exist": [79, 88, 127, 367], "tkinter": [79, 178, 236, 347, 348, 349, 350, 351, 352, 353, 448, 449, 450, 454, 455, 456, 457], "freez": 79, "tk": [79, 346, 347, 353, 444], "event": [79, 99, 120, 122, 124, 132, 135, 307, 315, 332, 343, 347, 353, 361], "wait": [79, 130, 133, 310], "bind": [79, 236, 320, 347, 404], "frequent": [80, 328], "ask": 80, "instal": [81, 107, 199, 334, 431, 434, 435, 436, 437, 453], "comput": [81, 179, 359], "delet": [81, 82, 83, 366, 437], "librari": [82, 98, 99, 153, 165, 242, 247, 335, 366, 372, 426, 427, 431, 443, 445, 448], "task": [82, 118, 120, 122, 133, 156], "x": [82, 83, 443, 444, 456], "math": [82, 262, 448, 449, 451, 452, 454, 455, 456, 457, 458], "py": [82, 101, 109, 448], "socket": [82, 99, 103, 106, 120, 127, 130, 318, 321, 340, 401, 447, 448, 451, 452, 453, 454, 455, 456, 457, 458], "regex": 82, "etc": [82, 83], "script": [82, 83, 84, 266, 334, 361, 413, 425, 434, 436, 442], "curs": [82, 90, 166, 167, 168, 447, 452, 454, 457, 458], "termcap": 82, "packag": [82, 106, 107, 109, 155, 181, 183, 239, 240, 284, 340, 384, 407, 425, 428, 434, 436, 438, 440, 442, 443, 452], "equival": [82, 83, 91], "onexit": 82, "compon": [82, 371, 412], "doc": 82, "keypress": [82, 84], "time": [82, 98, 99, 172, 344, 345, 400, 426, 440, 448, 451, 452, 454, 455, 456, 457, 458], "seem": 82, "run": [82, 84, 99, 119, 120, 129, 133, 236, 340, 365, 434, 436], "parcel": 82, "out": [82, 97, 282, 457], "among": 82, "bunch": 82, "worker": [82, 269], "kind": [82, 91], "mutat": 82, "safe": [82, 97, 453], "we": 82, "rid": 82, "And": [82, 86, 445], "read": [82, 97, 105, 120, 127, 164, 240, 258, 337, 377, 421], "pipe": [82, 120, 269], "popen": [82, 328, 451], "serial": [82, 261, 282, 400], "rs232": 82, "port": [82, 89, 101, 437, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "close": [82, 91], "sy": [82, 114, 331, 332, 333, 447, 448, 449, 452, 453, 454, 455, 456, 457, 458], "stdin": 82, "realli": 82, "network": [82, 96, 99, 120, 247, 248, 318, 319, 444], "internet": [82, 106, 244, 271, 326, 426], "should": [82, 97, 308, 448, 458], "help": [82, 83, 114, 236, 276, 295, 361], "html": [82, 227, 228, 229, 451, 452, 453], "send": [82, 99], "avoid": [82, 99], "block": [82, 84, 99, 101, 103, 119, 321, 359, 388, 402, 445], "connect": [82, 120, 127, 256, 269, 318, 320], "databas": [82, 173, 222, 292, 320, 364], "persist": [82, 281, 282, 312], "mathemat": [82, 144, 262, 274, 323, 426], "random": [82, 224, 253, 277, 300, 308, 321, 415, 449, 451, 455, 458], "breakpoint": [83, 456], "step": [83, 98, 424, 431, 436], "analysi": [83, 180, 313, 410], "stand": 83, "alon": 83, "guid": [83, 88, 91, 117, 276, 320, 366], "core": [83, 114, 246, 437, 456], "unboundlocalerror": 83, "ha": 83, "loop": [83, 120, 122, 124, 127, 249, 416, 417], "same": [83, 84, 99, 367, 457], "share": [83, 165, 269, 270, 452], "across": [83, 99, 270], "best": [83, 86, 100, 308, 321], "pass": [83, 88, 93, 99, 165, 411, 416, 423], "option": [83, 87, 88, 101, 114, 182, 217, 223, 236, 250, 276, 283, 337, 347, 353, 357, 365, 397, 430, 431, 447, 455], "one": 83, "did": 83, "y": 83, "also": [83, 403], "higher": [83, 215], "order": [83, 165, 170, 215, 256, 276, 327, 367, 405, 444, 445, 446, 455], "discov": 83, "name": [83, 91, 92, 102, 114, 148, 150, 200, 250, 277, 331, 337, 362, 366, 367, 403, 404, 405, 415, 440, 452], "up": [83, 106, 159, 238, 418], "preced": [83, 405], "ternari": 83, "possibl": [83, 361], "obfusc": 83, "liner": 83, "slash": 83, "mean": 83, "hexadecim": 83, "octal": 83, "22": 83, "10": [83, 86, 359, 447, 455, 456], "3": [83, 86, 89, 101, 107, 276, 321, 361, 401, 440, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "int": [83, 324], "liter": [83, 105, 116, 402, 405, 410, 421, 443, 447, 448, 452, 455], "syntaxerror": [83, 447], "convert": [83, 88, 105, 139, 320, 328], "modifi": [83, 102, 357, 388, 436], "perl": 83, "chomp": 83, "remov": [83, 436, 442, 443, 444, 445, 447, 448, 449, 450, 453, 454, 455, 456, 457, 458], "trail": 83, "newlin": [83, 440], "scanf": [83, 301], "sscanf": 83, "unicodedecodeerror": 83, "unicodeencodeerror": 83, "odd": [83, 104, 415], "too": 83, "slow": 83, "speed": 83, "most": [83, 288], "effici": [83, 115, 249, 314], "wai": 83, "concaten": [83, 410], "togeth": [83, 276], "neg": 83, "revers": [83, 441], "duplic": [83, 92], "multipl": [83, 97, 98, 99, 107, 207, 366, 367, 415, 418, 425, 439, 454], "item": [83, 353, 448], "multidimension": 83, "appli": [83, 367], "a_tupl": 83, "addit": [83, 196, 324, 362, 434, 436, 454], "complic": 83, "schwartzian": 83, "transform": [83, 148, 448], "given": 83, "deleg": [83, 452], "deriv": [83, 92, 224], "organ": [83, 365], "easier": 83, "overload": 83, "constructor": [83, 122, 219, 224, 328], "try": [83, 159, 402, 442], "__spam": 83, "_someclassname__spam": 83, "__del__": [83, 378], "id": [83, 344, 432, 434], "appear": [83, 361], "uniqu": [83, 92], "ident": [83, 405], "store": [83, 276, 436], "cach": [83, 407, 457], "pyc": [83, 451, 456], "current": [83, 107, 120, 243, 359], "mutual": [83, 114], "each": 83, "__import__": 83, "z": 83, "edit": [83, 236, 422], "reimport": 83, "show": [83, 456], "thi": [83, 97], "happen": [83, 98], "sometim": 84, "take": 84, "long": [84, 439, 441], "pyd": 84, "emb": [84, 254], "keep": 84, "editor": [84, 236, 432], "insert": [84, 99], "tab": [84, 353, 422], "solv": 84, "m": [84, 268, 380], "win": 84, "crt": 84, "l1": 84, "0": [84, 320, 361, 401, 437, 443, 445, 451, 458], "glossari": 85, "annot": [86, 324, 363, 404, 411, 416, 455, 456], "dict": [86, 99, 324, 366, 367, 455], "Of": [86, 445], "In": [86, 275, 441, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "newer": 86, "9": [86, 401, 458], "older": [86, 328, 337], "un": 86, "stringiz": 86, "For": [86, 90, 254, 376, 444], "__annotations__": 86, "quirk": 86, "argpars": [87, 114, 444, 447, 451, 453, 454, 456], "concept": [87, 88, 347], "introduc": 87, "posit": [87, 276, 301, 361, 403, 416, 447, 457], "short": [87, 101], "combin": [87, 92, 321], "littl": 87, "ambigu": [87, 336], "conflict": [87, 276], "translat": [87, 219, 361, 456], "conclus": 87, "clinic": [88, 453], "To": [88, 445], "background": [88, 97, 254, 276], "terminologi": [88, 276], "command": [88, 114, 116, 143, 145, 146, 153, 179, 199, 217, 223, 236, 243, 250, 276, 277, 280, 283, 293, 316, 320, 328, 337, 340, 345, 355, 357, 365, 374, 396, 397, 426, 430, 436, 444, 451, 452, 453, 455], "line": [88, 114, 116, 143, 145, 146, 153, 179, 199, 207, 217, 223, 236, 243, 250, 253, 276, 277, 283, 293, 302, 316, 320, 337, 340, 345, 355, 357, 365, 374, 396, 397, 410, 426, 430, 436, 441, 444, 447, 451, 452], "renam": 88, "pyarg_unpacktupl": 88, "legaci": [88, 157, 328, 372, 456], "py_buff": 88, "clone": 88, "meth_o": 88, "meth_noarg": 88, "tp_new": 88, "tp_init": 88, "redirect": [88, 426, 436], "ifdef": 88, "trick": 88, "overrid": [88, 376, 449], "signatur": [88, 148, 243, 452], "deprec": [88, 320, 338, 363, 437, 440, 441, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "position": 88, "pad": 90, "displai": [90, 98, 120, 166, 359, 405, 438], "text": [90, 101, 148, 166, 182, 236, 246, 253, 301, 324, 341, 342, 352, 385, 424, 445], "color": [90, 152, 236, 348, 361], "howto": [91, 92, 93, 94, 98, 102, 103, 105, 106], "primer": 91, "constant": [91, 131, 144, 158, 166, 172, 175, 224, 262, 265, 296, 318, 320, 321, 325, 328, 344, 354, 363, 381], "thought": 91, "complet": [91, 236, 302, 305, 310, 412, 422], "valid": [91, 383], "technic": [91, 172], "invoc": [91, 328], "super": 91, "summari": [91, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458], "logic": [91, 175, 247, 410], "automat": [91, 92, 236], "orm": 91, "__slots__": [91, 403, 447], "enum": [92, 200, 447, 448, 449, 453, 454, 455, 456], "programmat": [92, 238, 283, 357], "enumer": [92, 200, 440], "ensur": 92, "dataclass": [92, 170, 447, 448, 456], "pickl": [92, 162, 282, 283, 400, 440, 452, 453, 454, 455, 457], "intenum": 92, "strenum": 92, "intflag": 92, "__new__": 92, "v": [92, 301, 363, 445], "__init__": [92, 170], "__dunder__": [92, 200], "_sunder_": [92, 200], "_private__nam": 92, "mix": 92, "minutia": 92, "aka": 92, "omit": 92, "auto": 92, "descript": [92, 114, 151, 296], "orderedenum": 92, "duplicatefreeenum": 92, "planet": 92, "timeperiod": 92, "enumtyp": 92, "formal": [93, 449], "provabl": 93, "modular": 93, "eas": 93, "compos": 93, "That": 93, "comprehens": [93, 116, 417, 437, 449, 455], "itertool": [93, 249, 447, 449, 451, 452, 456, 457], "element": [93, 385, 388], "select": [93, 99, 178, 310, 321, 401, 451, 452, 453], "combinator": 93, "functool": [93, 215, 448, 451, 452, 453, 454, 456, 457], "small": [93, 345], "revis": [93, 443], "acknowledg": [93, 105, 219, 401, 437, 438, 439, 440, 441, 442, 443, 444], "instrument": 95, "dtrace": [95, 455], "systemtap": [95, 455], "enabl": [95, 100, 120, 444, 453], "marker": 95, "probe": [95, 455], "avail": [95, 172, 245, 376], "tapset": 95, "ipaddress": [96, 247, 452, 453, 454, 456, 458], "address": [96, 247, 269], "note": [96, 140, 175, 196, 200, 225, 245, 273, 300, 315, 318, 319, 321, 328, 353, 418, 448], "ip": [96, 247], "host": [96, 247], "inspect": [96, 243, 447, 448, 449, 451, 452, 453, 454, 455, 457, 458], "who": 97, "enter": 97, "surpris": [97, 165], "edg": [97, 310], "opt": [97, 246], "One": [97, 142], "regular": [97, 102, 105, 301, 407], "lifetim": [97, 122], "open": [97, 99, 106, 120, 130, 240, 372], "lossless": 97, "log": [98, 99, 119, 255, 256, 257, 269, 427, 440, 444, 448, 451, 452, 453, 454, 455, 456, 457], "messag": [98, 99, 185, 194, 196, 219, 224, 226, 254, 259, 351, 447, 449], "date": [98, 120, 172, 426, 440], "next": 98, "flow": [98, 116, 416], "logger": [98, 99, 255], "formatt": [98, 99, 255], "dure": 98, "optim": [98, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "resourc": [98, 99, 106, 240, 241, 304, 397, 434, 449, 452, 453, 456], "destin": 99, "server": [99, 120, 127, 130, 234, 319, 321, 383, 393, 394, 395, 451, 456], "receiv": 99, "listen": [99, 269], "product": 99, "contextu": 99, "your": [99, 101, 165, 219, 276, 367, 414, 458], "loggeradapt": [99, 255], "impart": 99, "than": 99, "filter": [99, 255, 258, 337, 357, 359, 376], "contextvar": [99, 160, 456], "concurr": [99, 119, 133, 154, 155, 156, 451, 454, 455, 456, 458], "processpoolexecutor": [99, 156], "deploi": 99, "web": [99, 232, 379, 451], "gunicorn": 99, "uwsgi": 99, "rotat": 99, "logrecord": [99, 255], "queuehandl": [99, 256, 257], "zeromq": 99, "queuelisten": [99, 256, 257], "namer": 99, "elabor": 99, "multiprocess": [99, 269, 270, 443, 452, 453, 454, 455, 456, 457, 458], "bom": [99, 148], "sent": 99, "sysloghandl": [99, 257], "dictconfig": 99, "particular": 99, "throughout": 99, "factori": [99, 133, 150, 170, 247, 320], "speak": 99, "them": 99, "condition": 99, "email": [99, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 451, 452, 453, 454, 455], "utc": 99, "gmt": 99, "via": [99, 320, 436], "cli": [99, 146], "starter": 99, "templat": [99, 178, 325, 427], "qt": 99, "syslog": [99, 335], "rfc5424": 99, "treat": 99, "stream": [99, 118, 127, 130, 148, 207, 246, 282], "pattern": [99, 102, 116, 209, 220, 361, 402, 403, 426, 447], "nullhandl": [99, 257], "lot": 99, "2": [101, 106, 276, 320, 361, 401, 437, 438, 439, 440, 441, 442, 443, 444, 445, 451, 455, 456, 458], "explan": [101, 320, 361], "sure": 101, "proper": 101, "coverag": 101, "Be": 101, "awar": [101, 105, 172, 454], "updat": [101, 376, 444, 458], "divis": [101, 439], "versu": [101, 102, 403], "featur": [101, 363, 404, 442, 444, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458], "detect": [101, 119, 336], "prevent": 101, "compat": [101, 313, 353, 399], "regress": [101, 340], "which": [101, 182], "depend": [101, 314, 376, 431], "transit": 101, "denot": 101, "continu": [101, 165, 411, 416], "integr": [101, 255, 403], "stai": 101, "consid": 101, "match": [102, 114, 116, 209, 301, 367, 402, 403, 416, 426, 447], "repeat": [102, 250], "thing": 102, "plagu": 102, "power": [102, 144, 262, 405], "metacharact": 102, "captur": [102, 402], "lookahead": 102, "assert": [102, 367, 411], "split": 102, "search": [102, 140, 236, 239, 301, 333, 407, 425], "replac": [102, 159, 236, 328, 407, 448], "problem": [102, 323], "greedi": 102, "re": [102, 170, 301, 365, 448, 452, 453, 454, 455, 456], "verbos": [102, 367], "feedback": 102, "ipc": 103, "disconnect": 103, "die": 103, "TO": 104, "ascend": 104, "descend": 104, "decor": [104, 159, 200, 363, 366, 367, 441, 443, 449], "undecor": 104, "compar": [105, 378, 417], "filenam": [105, 209, 263], "tip": [105, 254], "unknown": 105, "fetch": [106, 243], "urllib": [106, 369, 370, 371, 372, 373, 447, 451, 452, 453, 454, 455, 456, 458], "url": [106, 369, 371, 372], "header": [106, 130, 191, 192, 383, 452], "urlerror": 106, "httperror": 106, "wrap": [106, 342, 347], "info": 106, "geturl": 106, "authent": [106, 226, 269], "proxi": [106, 269, 366], "footnot": 106, "term": [107, 401], "usag": [107, 109, 114, 116, 142, 143, 172, 182, 223, 224, 236, 250, 266, 283, 304, 355, 357, 374, 394, 433, 452], "pip": [107, 199, 428, 444, 453], "prior": 107, "4": [107, 276, 441, 453, 454, 455], "just": 107, "scientif": 107, "parallel": [107, 156, 269, 343, 457], "__future__": [108, 438], "__main__": [109, 407, 456], "top": [109, 250, 359, 412], "environ": [109, 277, 333, 361, 375, 383, 400, 423, 428, 430, 436, 444, 452, 454, 455], "__name__": 109, "idiomat": 109, "_thread": [110, 447], "abc": [111, 151, 238, 241, 273, 363, 447, 451, 452, 453, 454, 458], "servic": [112, 138, 163, 219, 252, 254, 264, 297, 341, 368, 380, 401], "compress": [113, 142, 258, 399, 426], "archiv": [113, 314, 337, 396, 397, 398, 440], "parser": [114, 157, 196, 217, 229, 276, 296, 373, 389, 391, 443, 458], "add_argu": 114, "argumentpars": 114, "prog": 114, "epilog": 114, "parent": 114, "formatter_class": 114, "prefix_char": 114, "fromfile_prefix_char": 114, "argument_default": 114, "allow_abbrev": 114, "conflict_handl": 114, "add_help": 114, "exit_on_error": 114, "action": [114, 276, 418], "narg": 114, "const": 114, "choic": 114, "metavar": 114, "dest": 114, "parse_arg": 114, "syntax": [114, 116, 301, 325, 388, 415, 418, 443, 445, 447, 449, 452, 454, 455], "abbrevi": 114, "prefix": [114, 247, 458], "argv": 114, "namespac": [114, 361, 388, 403, 407, 415, 452], "filetyp": 114, "exclus": 114, "partial": [114, 215, 367, 387, 442], "intermix": 114, "upgrad": [114, 120], "optpars": [114, 276, 440], "ast": [116, 443, 450, 451, 455, 457, 458], "tree": [116, 224, 354, 387, 388], "grammar": [116, 406], "node": [116, 385], "root": 116, "subscript": [116, 405], "await": [116, 119, 133, 403, 405, 454], "helper": [116, 179, 325, 328, 363, 366], "asyncio": [117, 119, 129, 160, 447, 448, 449, 453, 454, 455, 456, 457, 458], "hello": [117, 120, 347], "queue": [118, 128, 225, 269, 298, 417, 456], "subprocess": [118, 120, 125, 127, 131, 236, 328, 441, 452, 453, 454, 455, 456], "synchron": [118, 132, 269, 298], "mode": [119, 120, 175, 177, 224, 277, 413, 423, 430, 436, 444, 456], "multithread": 119, "retriev": [119, 243, 358], "stop": [120, 366], "schedul": [120, 133, 277, 307], "callback": [120, 165, 276, 332, 440], "delai": 120, "transfer": 120, "watch": 120, "directli": [120, 238], "dn": 120, "pool": [120, 269], "call_soon": 120, "call_lat": 120, "sigint": 120, "sigterm": 120, "transport": [124, 127], "polici": [124, 126, 197, 452], "maco": [125, 236, 285, 431, 458], "watcher": 126, "hierarchi": [127, 202, 246, 403, 443, 452], "onli": [127, 170, 236, 416, 447, 456, 457], "datagram": 127, "tcp": [127, 130], "echo": [127, 130], "client": [127, 130, 212, 231, 232, 237, 269, 287, 317, 321, 393, 394, 444, 451, 453, 454, 455, 456], "udp": 127, "subprocess_exec": 127, "subprocessprotocol": 127, "prioriti": [128, 225], "lifo": 128, "runner": 129, "keyboard": 129, "interrupt": [129, 397], "streamread": [130, 148], "streamwrit": [130, 148], "http": [130, 230, 231, 232, 233, 234, 383, 444, 451, 452, 453, 454, 455, 456, 458], "regist": [130, 162, 320, 332], "interact": [131, 147, 182, 404, 412, 413, 422, 423, 438, 442], "primit": [132, 133, 269, 363], "condit": [132, 276, 343, 401, 405, 417, 442], "semaphor": [132, 343], "boundedsemaphor": 132, "barrier": [132, 343], "cancel": 133, "sleep": 133, "eager": 133, "shield": 133, "timeout": [133, 203, 318], "introspect": [133, 243, 363], "atexit": 134, "audit": [135, 457], "base64": [136, 447, 452, 453], "base16": 136, "base32": 136, "base85": 136, "secur": [136, 224, 234, 256, 308, 309, 321, 328, 371, 431, 444, 453], "bdb": [137, 447], "framework": [137, 211, 319, 365, 438, 452], "binascii": [139, 452, 455, 456], "bisect": [140, 447], "algorithm": [140, 224, 225, 239, 258, 361, 453], "builtin": [141, 366, 404, 445, 448, 452, 457], "bz2": [142, 452, 454], "bzip2": 142, "increment": [142, 148, 256], "shot": 142, "calendar": [143, 449, 456], "cmath": [144, 454, 455], "polar": 144, "coordin": 144, "logarithm": [144, 262], "trigonometr": [144, 262], "hyperbol": [144, 262], "classif": 144, "cmd": 145, "orient": [145, 279, 361], "consol": [147, 268, 455], "stateless": 148, "decod": [148, 250, 299], "incrementalencod": 148, "incrementaldecod": 148, "streamreaderwrit": 148, "streamrecod": 148, "idna": 148, "internation": [148, 191, 219, 235, 254], "ansi": 148, "codepag": 148, "utf_8_sig": 148, "codeop": 149, "datatyp": [150, 157, 440], "chainmap": 150, "recip": [150, 151, 159, 175, 249, 300, 308, 320, 323], "counter": 150, "dequ": 150, "defaultdict": 150, "namedtupl": 150, "ordereddict": 150, "userdict": 150, "userlist": 150, "userstr": 150, "colorsi": [152, 453], "compileal": [153, 454, 456, 458], "public": [153, 361], "launch": 156, "executor": 156, "threadpoolexecutor": 156, "configpars": [157, 449, 451, 454], "fallback": 157, "ini": [157, 436], "interpol": 157, "behaviour": 157, "rawconfigpars": 157, "site": [158, 316, 443, 447, 451, 455], "contextlib": [159, 363, 442, 443, 447, 448, 451, 452, 453, 454, 455, 456], "__enter__": 159, "clean": [159, 418], "reusabl": 159, "reentrant": 159, "shallow": 161, "deep": 161, "copyreg": 162, "cryptograph": 163, "csv": [164, 449, 451, 454, 457], "dialect": 164, "reader": 164, "writer": [164, 254], "ctype": [165, 269, 442, 443, 451, 457], "foreign": 165, "load": [165, 178, 365, 407], "variad": [165, 448], "prototyp": 165, "union": [165, 324, 447], "align": [165, 327], "bit": [165, 243, 381, 445], "export": 165, "size": [165, 224, 277, 314, 327, 359], "termin": [166, 277, 291, 314, 360, 426], "textpad": 166, "widget": [166, 347, 352, 353, 444], "textbox": 166, "panel": 168, "stack": [168, 243, 358, 417], "post": 170, "init": [170, 302], "frozen": [170, 448], "mutabl": [170, 324, 367, 403], "naiv": [172, 323], "determin": [172, 403], "timedelta": 172, "tzinfo": 172, "timezon": [172, 344], "strftime": 172, "strptime": 172, "behavior": [172, 397, 447, 453, 454, 455, 456, 457], "dbm": [173, 450, 451, 453, 454, 455, 456], "gnu": [173, 219, 302, 305], "reinterpret": 173, "ndbm": 173, "dumb": 173, "portabl": [173, 218], "decim": [175, 427, 441, 451, 452, 455, 456], "fix": [175, 276, 438, 439, 440, 444], "operand": 175, "round": 175, "mitig": 175, "off": [175, 332], "increas": 175, "precis": [175, 447, 449], "special": [175, 262, 324, 361, 363, 403, 407, 416, 440, 445, 448], "effect": [177, 367], "resourcewarn": 177, "bad": 177, "dialog": [178, 348], "simpledialog": 178, "filedialog": 178, "nativ": [178, 327], "save": [178, 421], "commondialog": 178, "difflib": [179, 454], "delta": 179, "sequencematch": 179, "ndiff": 179, "di": [180, 449, 451, 453, 456], "disassembl": 180, "bytecod": [180, 340, 407, 447, 448, 449, 455, 456, 457, 458], "instruct": 180, "opcod": [180, 448, 450], "doctest": [182, 441, 447, 450, 453, 454], "docstr": [182, 361], "It": 182, "examin": [182, 330], "recogn": 182, "unittest": [182, 365, 366, 367, 444, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457], "doctestfind": 182, "doctestpars": 182, "testresult": 182, "doctestrunn": 182, "outputcheck": 182, "soapbox": 182, "mime": [183, 186, 190, 195, 263, 299], "charset": 184, "repres": [184, 185, 194], "compat32": 185, "contentmanag": 186, "defect": 188, "headerregistri": 192, "scratch": 195, "feedpars": 196, "miscellan": [198, 258, 269, 277, 430, 435, 445], "ensurepip": [199, 444, 449, 453], "bootstrap": [199, 444, 453], "errno": 201, "faulthandl": [203, 447, 452, 454, 455], "dump": 203, "traceback": [203, 358, 359, 403, 447, 448, 450, 453, 454, 455], "fault": [203, 394], "after": 203, "fcntl": [204, 448, 458], "ioctl": 204, "filecmp": [205, 453], "directori": [205, 208, 277, 314, 338, 425, 443, 451, 454], "dircmp": 205, "fileinput": [207, 447, 455], "fnmatch": 209, "fraction": [210, 443, 448, 449, 451], "ration": 210, "ftplib": [212, 449, 452, 458], "ftp": [212, 451], "ftp_tl": 212, "callabl": [215, 243, 320, 363, 403], "gc": [216, 447, 452, 453, 456, 457, 458], "getopt": 217, "getpass": 218, "password": [218, 292], "gettext": [219, 456, 457], "multilingu": 219, "nulltransl": 219, "gnutransl": 219, "solari": 219, "catalog": [219, 254], "defer": 219, "glob": [220, 447, 453, 454], "pathnam": [220, 278], "expans": 220, "graphlib": [221, 458], "graph": 221, "grp": [222, 455], "gzip": [223, 399, 449, 451, 454, 457], "hashlib": [224, 442, 447, 448, 449, 451, 453, 455, 458], "hash": [224, 226, 324, 453, 456], "digest": 224, "shake": 224, "blake2": 224, "person": 224, "credit": 224, "heapq": [225, 454], "theori": 225, "hmac": [226, 447, 452, 453, 456], "hypertext": 227, "markup": [227, 260], "entiti": 228, "xhtml": 229, "htmlparser": 229, "statu": 230, "httpconnect": 231, "httprespons": 231, "httpmessag": 231, "cookiejar": 232, "cooki": [232, 233, 401], "filecookiejar": 232, "co": 232, "browser": [232, 294, 379], "cookiepolici": 232, "defaultcookiepolici": 232, "morsel": 233, "idl": [236, 437, 444, 446, 447, 448, 451, 453, 454, 455, 456, 457, 458], "menu": 236, "shell": [236, 313, 328], "navig": [236, 347], "calltip": 236, "startup": [236, 302, 413, 448], "failur": [236, 365], "prefer": 236, "idlelib": [236, 447, 448, 453, 454, 455, 456, 457, 458], "imaplib": [237, 451, 452, 454, 458], "imap4": 237, "importlib": [238, 239, 240, 241, 407, 444, 447, 449, 452, 453, 454, 455, 456, 458], "machineri": 238, "lazi": [238, 404, 448], "approxim": [238, 323, 454], "import_modul": 238, "metadata": [239, 438, 440, 442, 447], "entri": [239, 403, 407], "discoveri": [239, 365], "live": 243, "webassembli": [245, 431], "io": [246, 363, 449, 450, 451, 452, 454, 456, 457], "encodingwarn": [246, 447], "reentranc": 246, "ipv4": 247, "ipv6": 247, "manipul": [247, 259, 276, 278], "conveni": [247, 379, 394], "net": 247, "mask": 247, "interprocess": 248, "commun": 248, "json": [250, 282, 421, 443, 454, 455, 457], "complianc": 250, "interoper": 250, "infinit": 250, "nan": 250, "within": 250, "linecach": [253, 447, 454], "facil": 255, "safeti": 255, "config": 256, "schema": 256, "extern": [256, 282], "resolut": [256, 404, 456], "streamhandl": 257, "filehandl": [257, 372], "watchedfilehandl": 257, "baserotatinghandl": 257, "rotatingfilehandl": 257, "timedrotatingfilehandl": 257, "sockethandl": 257, "datagramhandl": 257, "nteventloghandl": 257, "smtphandler": 257, "memoryhandl": 257, "httphandler": [257, 372], "lzma": [258, 452, 454], "decompress": [258, 397], "chain": [258, 321, 367, 418], "mailbox": [259, 451], "variou": 259, "maildir": 259, "mbox": 259, "mh": 259, "babyl": 259, "mmdf": 259, "maildirmessag": 259, "mboxmessag": 259, "mhmessag": 259, "babylmessag": 259, "mmdfmessag": 259, "theoret": 262, "represent": [262, 400, 419, 452], "angular": 262, "mimetyp": [263, 456], "multimedia": 264, "mmap": [265, 452, 453, 457], "madv_": 265, "map_": 265, "modulefind": 266, "msvcrt": 268, "routin": [268, 335], "vc": 268, "exchang": 269, "sharedctyp": 269, "remot": [269, 401], "cleanup": [269, 276, 453], "dummi": 269, "guidelin": 269, "spawn": [269, 328], "forkserv": 269, "shared_memori": 270, "netrc": 272, "tower": 273, "implementor": 273, "understand": [276, 347], "put": 276, "popul": 276, "trivial": 276, "5": [276, 442, 454, 455, 457], "6": [276, 361, 401, 437, 443, 445, 455, 456], "pathlib": [279, 447, 448, 449, 450, 453, 454, 455, 456, 457, 458], "filesystem": [279, 455, 457], "individu": [279, 448], "part": [279, 427], "correspond": [279, 361], "pdb": [280, 449, 450, 451, 452, 453, 455, 456, 458], "relationship": [282, 437], "unpickl": 282, "dispatch": 282, "reduct": 282, "band": [282, 457], "consum": 282, "pickletool": [283, 455], "pkgutil": 284, "underli": 285, "identifi": [285, 332, 353, 405, 410], "cross": [285, 431], "java": 285, "plistlib": [286, 443, 453, 457], "appl": [286, 458], "plist": 286, "poplib": [287, 451, 453, 454, 458], "pop3": 287, "posix": [288, 339], "larg": 288, "notabl": [288, 454, 455, 456, 457, 458], "pprint": [289, 447, 453, 457, 458], "pretti": [289, 359], "printer": 289, "prettyprint": 289, "instant": 290, "cprofil": [290, 456, 457], "stat": [290, 322, 452, 453], "determinist": 290, "calibr": 290, "timer": [290, 343], "pty": [291, 453], "pseudo": [291, 300], "pwd": 292, "py_compil": [293, 447, 456, 457], "pyclbr": [294, 447], "pydoc": [295, 451, 452, 453, 455, 456, 458], "onlin": 295, "xml": [296, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 401, 437, 447, 449, 452, 453, 454, 456, 457, 458], "expat": [296, 401], "xmlparser": [296, 388], "expaterror": 296, "model": [296, 347, 385, 403, 404, 438], "simplequeu": 298, "quopri": 299, "quot": [299, 371], "printabl": 299, "bookkeep": 300, "discret": 300, "reproduc": 300, "pair": 301, "simul": [301, 323], "phonebook": 301, "mung": 301, "adverb": 301, "notat": [301, 409, 443], "token": [301, 308, 354, 355, 410, 449, 457], "readlin": [302, 305, 316, 454, 455], "reprlib": [303, 451], "repr": [303, 407], "rlcomplet": [305, 455], "runpi": 306, "sched": [307, 452], "secret": [308, 455], "dev": [310, 456], "poll": 310, "trigger": 310, "epol": 310, "kqueue": [310, 401], "kevent": 310, "selector": [311, 453, 454], "multiplex": 311, "shelv": [312, 447, 453], "shlex": [313, 452, 455, 457], "lexic": [313, 410], "improv": [313, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "shutil": [314, 448, 449, 451, 452, 453, 454, 457], "copytre": 314, "rmtree": 314, "base_dir": 314, "sigpip": 315, "smtplib": [317, 452, 453, 454, 458], "smtp": 317, "famili": [318, 328], "accept": 318, "socketserv": [319, 452, 455, 456], "tcpserver": 319, "udpserv": 319, "mixin": 319, "sqlite3": [320, 442, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456], "db": 320, "sqlite": 320, "cursor": 320, "row": 320, "blob": 320, "prepareprotocol": 320, "adapt": [320, 448], "placehold": 320, "sql": 320, "shortcut": 320, "uri": 320, "transact": 320, "autocommit": 320, "isolation_level": 320, "ssl": [321, 443, 447, 449, 451, 452, 453, 454, 455, 456, 457], "wrapper": [321, 350], "certif": [321, 444, 451, 453], "ca": 321, "sign": 321, "side": [321, 367], "bio": [321, 454], "session": 321, "verifi": 321, "cipher": 321, "statist": [323, 359, 447, 449, 453, 455, 457], "averag": 323, "measur": [323, 345, 361, 426], "central": 323, "spread": 323, "two": [323, 444], "normaldist": 323, "classic": 323, "probabl": 323, "mont": 323, "carlo": 323, "binomi": 323, "bayesian": 323, "classifi": 323, "kernel": 323, "densiti": 323, "estim": 323, "truth": 324, "bitwis": [324, 405], "bool": 324, "rang": [324, 416], "str": 324, "printf": 324, "bytearrai": [324, 454], "view": [324, 444, 445], "frozenset": 324, "alia": 324, "genericalia": 324, "notimpl": [324, 403], "affect": 324, "mini": 325, "stringprep": 326, "prepar": [326, 403], "bin": 328, "sh": 328, "substitut": [328, 422, 441], "pipelin": 328, "popen2": 328, "popen3": 328, "disabl": [328, 332], "vfork": 328, "posix_spawn": 328, "supersed": 329, "symtabl": 330, "float_info": 331, "monitor": [332, 449], "ancillari": 332, "stop_iter": 332, "turn": 332, "virtual": [333, 353, 375, 428, 436, 452, 454], "_pth": 333, "sysconfig": [334, 444, 448, 451, 454], "tabnanni": 336, "tarfil": [337, 451, 452, 453, 454, 457], "tar": 337, "tarinfo": 337, "further": [337, 367], "verif": [337, 444, 453], "tempfil": [338, 448, 449, 451, 452], "temporari": [338, 436], "termio": 339, "tty": [339, 360], "unit": [340, 365], "suit": [340, 401], "socket_help": 340, "script_help": 340, "bytecode_help": 340, "correct": 340, "threading_help": 340, "os_help": 340, "import_help": 340, "warnings_help": 340, "textwrap": [342, 452, 453], "fill": [342, 361], "rlock": 343, "clock": 344, "timeit": [345, 454, 455], "snippet": 345, "tcl": 347, "architectur": 347, "life": 347, "preserv": [347, 455], "handi": 347, "packer": 347, "coupl": 347, "imag": 347, "colorchoos": 348, "choos": 348, "dnd": 349, "drag": 349, "drop": 349, "font": 350, "messagebox": 351, "prompt": 351, "scrolledtext": 352, "scroll": 352, "ttk": [353, 444], "theme": [353, 444], "scrollabl": 353, "label": 353, "combobox": 353, "spinbox": 353, "notebook": 353, "progressbar": 353, "sizegrip": 353, "treeview": 353, "tag": [353, 451], "column": 353, "layout": [353, 427], "tomllib": 356, "toml": 356, "track": [357, 367], "main": [357, 431, 443], "tracebackexcept": 358, "stacksummari": 358, "framesummari": 358, "record": [359, 427], "peak": 359, "domainfilt": 359, "snapshot": 359, "statisticdiff": 359, "turtl": 361, "star": 361, "draw": 361, "pen": 361, "quickli": 361, "turtlescreen": 361, "screen": 361, "rawturtl": 361, "motion": 361, "visibl": [361, 452], "anim": 361, "turtledemo": [361, 451], "demo": [361, 449, 457], "sinc": 361, "relev": 363, "pep": [363, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457], "alias": [363, 402], "newtyp": 363, "nomin": 363, "subtyp": 363, "form": [363, 405], "recognis": 363, "timelin": 363, "major": 363, "unicodedata": [364, 448, 449, 454, 455, 456, 457, 458], "old": [365, 421, 439], "skip": 365, "distinguish": 365, "subtest": 365, "load_test": 365, "fixtur": 365, "setupclass": 365, "teardownclass": 365, "setupmodul": 365, "teardownmodul": 365, "mock": [366, 367, 454, 455, 456], "attach": 366, "patcher": 366, "test_prefix": 366, "nest": [366, 367, 417, 438, 439, 447], "magicmock": [366, 367], "magic": 366, "sentinel": 366, "create_autospec": 366, "filter_dir": 366, "mock_open": 366, "autospecc": 366, "seal": 366, "side_effect": 367, "everi": 367, "unbound": 367, "cope": 367, "less": 367, "openerdirector": 372, "basehandl": 372, "httpredirecthandl": 372, "httpcookieprocessor": 372, "proxyhandl": 372, "httppasswordmgr": 372, "httppasswordmgrwithpriorauth": 372, "abstractbasicauthhandl": 372, "httpbasicauthhandl": 372, "proxybasicauthhandl": 372, "abstractdigestauthhandl": 372, "httpdigestauthhandl": 372, "proxydigestauthhandl": 372, "httpshandler": 372, "datahandl": 372, "ftphandler": 372, "cacheftphandl": 372, "unknownhandl": 372, "httperrorprocessor": 372, "respons": [372, 383], "robotpars": [373, 455], "robot": 373, "txt": 373, "uuid": [374, 449, 456], "accord": 374, "rfc": 374, "4122": 374, "venv": [375, 448, 450, 453, 455, 457, 458], "envbuild": 375, "describ": 376, "temporarili": 376, "suppress": [376, 452], "wave": [377, 453, 456], "wav": 377, "wave_read": 377, "wave_writ": 377, "weakref": [378, 453, 457], "webbrows": [379, 449, 452], "winreg": [381, 455], "hkey_": 381, "right": 381, "64": 381, "winsound": [382, 455], "sound": 382, "plai": 382, "wsgiref": [383, 442, 454], "wsgi": 383, "simple_serv": 383, "conform": [383, 385], "checker": 383, "gatewai": [383, 451], "vulner": 384, "defusedxml": 384, "dom": [385, 386, 387, 437], "domimplement": 385, "nodelist": 385, "documenttyp": 385, "attr": 385, "namednodemap": 385, "comment": [385, 410], "cdatasect": 385, "processinginstruct": 385, "accessor": 385, "minidom": 386, "minim": 386, "pulldom": 387, "domeventstream": 387, "etre": [388, 449, 452, 453, 456], "elementtre": [388, 442, 444, 449, 451, 452], "pull": 388, "interest": 388, "xpath": 388, "xinclud": 388, "qname": 388, "treebuild": 388, "xmlpullpars": 388, "sax": [389, 390, 391, 392, 454], "sax2": [389, 437], "saxexcept": 389, "contenthandl": 390, "dtdhandler": 390, "entityresolv": 390, "errorhandl": 390, "lexicalhandl": 390, "xmlreader": 391, "incrementalpars": 391, "inputsourc": 391, "attributesn": 391, "saxutil": 392, "xmlrpc": [393, 394, 395, 454, 455, 456, 457], "rpc": [394, 395], "serverproxi": 394, "protocolerror": 394, "multical": 394, "simplexmlrpcserv": 395, "cgixmlrpcrequesthandl": 395, "docxmlrpcserv": 395, "doccgixmlrpcrequesthandl": 395, "zipapp": [396, 454, 456], "zip": [396, 397, 398, 440], "standalon": 396, "zipfil": [397, 448, 451, 453, 454, 455, 456], "pyzipfil": 397, "zipinfo": 397, "pitfal": 397, "itself": 397, "zipimport": [398, 447, 449], "zlib": [399, 401, 452, 455], "zoneinfo": [400, 458], "iana": 400, "zone": 400, "licens": 401, "otherwis": 401, "psf": 401, "agreement": 401, "FOR": 401, "13": [401, 449, 450, 455], "0a0": 401, "beopen": 401, "com": 401, "cnri": 401, "cwi": 401, "zero": 401, "claus": [401, 402, 416], "bsd": 401, "IN": 401, "THE": 401, "incorpor": 401, "mersenn": 401, "twister": 401, "uuencod": 401, "uudecod": 401, "procedur": 401, "test_epol": 401, "siphash24": 401, "strtod": 401, "dtoa": 401, "openssl": [401, 435], "libffi": 401, "cfuhash": 401, "libmpdec": 401, "w3c": 401, "c14n": 401, "els": [402, 416], "guard": [402, 447], "irrefut": 402, "OR": 402, "AS": 402, "wildcard": [402, 426, 447], "known": [403, 436], "invok": [403, 423], "metaclass": 403, "resolv": 403, "mro": 403, "appropri": 403, "bodi": 403, "purpos": 403, "__class_getitem__": 403, "__getitem__": 403, "With": [403, 456], "atom": 405, "parenthes": [405, 447], "yield": [405, 411], "primari": 405, "unari": 405, "shift": 405, "membership": 405, "full": [406, 436], "finder": 407, "loader": 407, "meta": 407, "submodul": 407, "__path__": 407, "rel": [407, 442, 443], "__spec__": 407, "physic": 410, "declar": [410, 447], "explicit": [410, 443, 452, 453], "implicit": [410, 452], "blank": 410, "whitespac": 410, "soft": 410, "reserv": 410, "imaginari": 410, "delimit": 410, "augment": [411, 437], "del": [411, 417], "break": [411, 416], "nonloc": 411, "appendix": 413, "whet": 414, "appetit": 414, "word": 415, "look": 415, "remark": 415, "recap": 416, "techniqu": 417, "predefin": 418, "unrel": 418, "enrich": [418, 448], "fancier": 421, "Its": 423, "toward": 424, "dir": 425, "intra": 425, "brief": [426, 427], "tour": [426, 427], "qualiti": 426, "batteri": 426, "ii": 427, "now": 429, "shouldn": 430, "linker": 431, "makefil": 431, "target": [431, 444, 454, 455], "preprocessor": 431, "mac": [434, 443, 444, 458], "macpython": 434, "latest": 435, "On": 435, "freebsd": [435, 444], "openbsd": 435, "max_path": 436, "ui": 436, "download": 436, "microsoft": 436, "nuget": 436, "embedd": 436, "bundl": 436, "excursu": 436, "launcher": [436, 448, 452, 454], "associ": 436, "shebang": 436, "diagnost": 436, "dry": 436, "demand": 436, "pywin32": 436, "cx_freez": 436, "cycl": 437, "minor": 437, "distutil": [437, 440, 447, 449, 454, 455, 456, 458], "easi": 437, "pyxml": 437, "227": [438, 439], "236": 438, "207": 438, "rich": 438, "230": 438, "229": 438, "205": 438, "232": 438, "235": 438, "insensit": 438, "217": 438, "208": 438, "coercion": [438, 456], "241": 438, "252": 439, "253": 439, "diamond": 439, "234": 439, "255": [439, 440], "237": [439, 441], "unifi": [439, 441, 442], "238": 439, "218": [440, 441], "263": 440, "273": 440, "277": 440, "nt": 440, "278": 440, "univers": 440, "279": 440, "282": 440, "285": 440, "293": 440, "301": 440, "302": 440, "305": 440, "307": 440, "enhanc": [440, 443, 444, 455], "289": 441, "292": 441, "simpler": [441, 455], "318": 441, "322": 441, "324": 441, "327": 441, "need": 441, "328": [441, 442], "331": 441, "cookielib": 441, "308": 442, "309": 442, "314": 442, "v1": [442, 451], "absolut": 442, "338": 442, "341": 442, "342": 442, "343": [442, 443], "352": 442, "353": 442, "ssize_t": 442, "357": 442, "__index__": 442, "roundup": 443, "restructuredtext": 443, "sphinx": 443, "366": 443, "370": 443, "371": 443, "3101": [443, 445], "3105": 443, "As": 443, "3110": 443, "3112": 443, "3116": 443, "3118": [443, 452], "3119": 443, "3127": 443, "3129": 443, "3141": 443, "future_builtin": 443, "javascript": 443, "irix": 443, "372": [444, 446], "378": [444, 446], "thousand": [444, 446], "389": [444, 451], "391": [444, 451], "3106": 444, "3137": 444, "mainten": 444, "434": 444, "branch": 444, "466": 444, "477": 444, "backport": 444, "453": [444, 453], "By": [444, 453], "476": [444, 453], "stdlib": [444, 453], "493": 444, "migrat": 444, "regen": [444, 454, 455], "touch": [444, 454, 455], "stumbl": 445, "alreadi": 445, "highlight": [447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458], "better": [447, 454], "indentationerror": 447, "attributeerror": 447, "nameerror": 447, "626": 447, "634": 447, "604": 447, "612": 447, "613": 447, "typealia": 447, "647": 447, "asynchat": [447, 449, 455], "asyncor": [447, 449, 451, 455], "smtpd": [447, 452, 453, 454], "652": 447, "maintain": 447, "11": [448, 458], "657": 448, "fine": 448, "grain": [448, 452], "654": 448, "678": 448, "ex": 448, "646": 448, "655": 448, "mark": 448, "typeddict": [448, 449], "673": 448, "675": 448, "681": 448, "563": [448, 456], "mai": 448, "faster": [448, 454], "cheaper": 448, "inlin": [448, 449], "659": 448, "misc": 448, "speedup": 448, "Will": 448, "see": 448, "workload": 448, "jit": 448, "pend": [448, 449, 450], "12": [448, 449, 457], "695": 449, "701": 449, "syntact": 449, "f": [449, 457], "684": 449, "669": 449, "impact": 449, "688": 449, "709": 449, "692": 449, "kwarg": 449, "698": 449, "14": [449, 450], "imp": 449, "15": [449, 450], "384": 451, "3148": 451, "3147": 451, "repositori": 451, "3149": 451, "3333": 451, "nntp": 451, "405": 452, "420": 452, "393": 452, "flexibl": 452, "397": 452, "3151": 452, "rework": 452, "380": 452, "subgener": 452, "409": 452, "414": 452, "3155": 452, "qualifi": 452, "412": 452, "362": 452, "421": 452, "simplenamespac": 452, "crypt": [452, 456], "nntplib": [452, 458], "unsupport": [452, 454], "446": 453, "newli": 453, "451": 453, "modulespec": 453, "aifc": [453, 456], "audioop": 453, "sunau": [453, 456], "445": 453, "442": 453, "456": 453, "interchang": 453, "436": 453, "No": 453, "longer": 453, "492": 454, "465": 454, "dedic": 454, "infix": 454, "matrix": 454, "448": 454, "461": 454, "percent": 454, "484": 454, "471": 454, "scandir": 454, "475": 454, "retri": 454, "eintr": 454, "479": 454, "stopiter": 454, "insid": 454, "485": 454, "equal": 454, "486": 454, "488": 454, "elimin": 454, "pyo": 454, "489": 454, "cgi": 454, "imghdr": 454, "sndhdr": 454, "negoti": 454, "498": 455, "526": 455, "515": 455, "underscor": 455, "525": 455, "530": 455, "487": 455, "519": 455, "495": 455, "disambigu": 455, "529": 455, "528": 455, "520": 455, "468": 455, "523": 455, "pythonmalloc": 455, "telnetlib": 455, "postpon": 456, "538": 456, "540": 456, "forc": 456, "553": 456, "539": 456, "562": 456, "564": 456, "nanosecond": 456, "565": 456, "deprecationwarn": [456, 458], "560": 456, "552": 456, "545": 456, "msilib": 456, "uu": 456, "macpath": 456, "578": 457, "587": 457, "590": 457, "merg": 458, "suffix": 458, "big": 458, "sur": 458, "silicon": 458, "changelog": 459}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Argparse Tutorial": [[87, "argparse-tutorial"]], "Concepts": [[87, "concepts"]], "The basics": [[87, "the-basics"]], "Introducing Positional arguments": [[87, "introducing-positional-arguments"]], "Introducing Optional arguments": [[87, "introducing-optional-arguments"]], "Short options": [[87, "short-options"]], "Combining Positional and Optional arguments": [[87, "combining-positional-and-optional-arguments"]], "Getting a little more advanced": [[87, "getting-a-little-more-advanced"]], "Specifying ambiguous arguments": [[87, "specifying-ambiguous-arguments"]], "Conflicting options": [[87, "conflicting-options"]], "How to translate the argparse output": [[87, "how-to-translate-the-argparse-output"]], "Conclusion": [[87, "conclusion"]], "Design and History FAQ": [[76, "design-and-history-faq"]], "Contents": [[76, "contents"], [91, "contents"], [83, "contents"], [82, "contents"], [79, "contents"], [77, "contents"], [84, "contents"], [78, "contents"]], "Why does Python use indentation for grouping of statements?": [[76, "why-does-python-use-indentation-for-grouping-of-statements"]], "Why am I getting strange results with simple arithmetic operations?": [[76, "why-am-i-getting-strange-results-with-simple-arithmetic-operations"]], "Why are floating-point calculations so inaccurate?": [[76, "why-are-floating-point-calculations-so-inaccurate"]], "Why are Python strings immutable?": [[76, "why-are-python-strings-immutable"]], "Why must \u2018self\u2019 be used explicitly in method definitions and calls?": [[76, "why-must-self-be-used-explicitly-in-method-definitions-and-calls"]], "Why can\u2019t I use an assignment in an expression?": [[76, "why-can-t-i-use-an-assignment-in-an-expression"]], "Why does Python use methods for some functionality (e.g. list.index()) but functions for other (e.g. len(list))?": [[76, "why-does-python-use-methods-for-some-functionality-e-g-list-index-but-functions-for-other-e-g-len-list"]], "Why is join() a string method instead of a list or tuple method?": [[76, "why-is-join-a-string-method-instead-of-a-list-or-tuple-method"]], "How fast are exceptions?": [[76, "how-fast-are-exceptions"]], "Why isn\u2019t there a switch or case statement in Python?": [[76, "why-isn-t-there-a-switch-or-case-statement-in-python"]], "Can\u2019t you emulate threads in the interpreter instead of relying on an OS-specific thread implementation?": [[76, "can-t-you-emulate-threads-in-the-interpreter-instead-of-relying-on-an-os-specific-thread-implementation"]], "Why can\u2019t lambda expressions contain statements?": [[76, "why-can-t-lambda-expressions-contain-statements"]], "Can Python be compiled to machine code, C or some other language?": [[76, "can-python-be-compiled-to-machine-code-c-or-some-other-language"]], "How does Python manage memory?": [[76, "how-does-python-manage-memory"]], "Why doesn\u2019t CPython use a more traditional garbage collection scheme?": [[76, "why-doesn-t-cpython-use-a-more-traditional-garbage-collection-scheme"]], "Why isn\u2019t all memory freed when CPython exits?": [[76, "why-isn-t-all-memory-freed-when-cpython-exits"]], "Why are there separate tuple and list data types?": [[76, "why-are-there-separate-tuple-and-list-data-types"]], "How are lists implemented in CPython?": [[76, "how-are-lists-implemented-in-cpython"]], "How are dictionaries implemented in CPython?": [[76, "how-are-dictionaries-implemented-in-cpython"]], "Why must dictionary keys be immutable?": [[76, "why-must-dictionary-keys-be-immutable"]], "Why doesn\u2019t list.sort() return the sorted list?": [[76, "why-doesn-t-list-sort-return-the-sorted-list"]], "How do you specify and enforce an interface spec in Python?": [[76, "how-do-you-specify-and-enforce-an-interface-spec-in-python"]], "Why is there no goto?": [[76, "why-is-there-no-goto"]], "Why can\u2019t raw strings (r-strings) end with a backslash?": [[76, "why-can-t-raw-strings-r-strings-end-with-a-backslash"]], "Why doesn\u2019t Python have a \u201cwith\u201d statement for attribute assignments?": [[76, "why-doesn-t-python-have-a-with-statement-for-attribute-assignments"]], "Why don\u2019t generators support the with statement?": [[76, "why-don-t-generators-support-the-with-statement"]], "Why are colons required for the if/while/def/class statements?": [[76, "why-are-colons-required-for-the-if-while-def-class-statements"]], "Why does Python allow commas at the end of lists and tuples?": [[76, "why-does-python-allow-commas-at-the-end-of-lists-and-tuples"]], "Embedding Python in Another Application": [[70, "embedding-python-in-another-application"]], "Very High Level Embedding": [[70, "very-high-level-embedding"]], "Beyond Very High Level Embedding: An overview": [[70, "beyond-very-high-level-embedding-an-overview"]], "Pure Embedding": [[70, "pure-embedding"]], "Extending Embedded Python": [[70, "extending-embedded-python"]], "Embedding Python in C++": [[70, "embedding-python-in-c"]], "Compiling and Linking under Unix-like systems": [[70, "compiling-and-linking-under-unix-like-systems"]], "Functional Programming HOWTO": [[93, "functional-programming-howto"]], "Introduction": [[93, "introduction"], [102, "introduction"], [106, "introduction"], [34, "introduction"], [409, "introduction"], [428, "introduction"], [361, "introduction"], [438, "introduction"], [439, "introduction"], [437, "introduction"], [311, "introduction"], [269, "introduction"], [245, "introduction"], [238, "introduction"]], "Formal provability": [[93, "formal-provability"]], "Modularity": [[93, "modularity"]], "Ease of debugging and testing": [[93, "ease-of-debugging-and-testing"]], "Composability": [[93, "composability"]], "Iterators": [[93, "iterators"], [415, "iterators"]], "Data Types That Support Iterators": [[93, "data-types-that-support-iterators"]], "Generator expressions and list comprehensions": [[93, "generator-expressions-and-list-comprehensions"]], "Generators": [[93, "generators"], [415, "generators"]], "Passing values into a generator": [[93, "passing-values-into-a-generator"]], "Built-in functions": [[93, "built-in-functions"], [403, "built-in-functions"]], "The itertools module": [[93, "the-itertools-module"]], "Creating new iterators": [[93, "creating-new-iterators"]], "Calling functions on elements": [[93, "calling-functions-on-elements"]], "Selecting elements": [[93, "selecting-elements"]], "Combinatoric functions": [[93, "combinatoric-functions"]], "Grouping elements": [[93, "grouping-elements"]], "The functools module": [[93, "the-functools-module"]], "The operator module": [[93, "the-operator-module"]], "Small functions and the lambda expression": [[93, "small-functions-and-the-lambda-expression"]], "Revision History and Acknowledgements": [[93, "revision-history-and-acknowledgements"]], "References": [[93, "references"], [105, "references"], [105, "id2"], [105, "id3"], [407, "references"]], "General": [[93, "general"]], "Python-specific": [[93, "python-specific"]], "Python documentation": [[93, "python-documentation"]], "Defining Extension Types: Assorted Topics": [[73, "defining-extension-types-assorted-topics"]], "Finalization and De-allocation": [[73, "finalization-and-de-allocation"]], "Object Presentation": [[73, "object-presentation"]], "Attribute Management": [[73, "attribute-management"]], "Generic Attribute Management": [[73, "generic-attribute-management"]], "Type-specific Attribute Management": [[73, "type-specific-attribute-management"]], "Object Comparison": [[73, "object-comparison"]], "Abstract Protocol Support": [[73, "abstract-protocol-support"]], "Weak Reference Support": [[73, "weak-reference-support"]], "More Suggestions": [[73, "more-suggestions"]], "Descriptor HowTo Guide": [[91, "descriptor-howto-guide"]], "Primer": [[91, "primer"]], "Simple example: A descriptor that returns a constant": [[91, "simple-example-a-descriptor-that-returns-a-constant"]], "Dynamic lookups": [[91, "dynamic-lookups"]], "Managed attributes": [[91, "managed-attributes"]], "Customized names": [[91, "customized-names"]], "Closing thoughts": [[91, "closing-thoughts"]], "Complete Practical Example": [[91, "complete-practical-example"]], "Validator class": [[91, "validator-class"]], "Custom validators": [[91, "custom-validators"]], "Practical application": [[91, "practical-application"]], "Technical Tutorial": [[91, "technical-tutorial"]], "Abstract": [[91, "abstract"], [90, null], [88, null], [97, null], [86, null], [102, null], [101, null], [103, null]], "Definition and introduction": [[91, "definition-and-introduction"]], "Descriptor protocol": [[91, "descriptor-protocol"]], "Overview of descriptor invocation": [[91, "overview-of-descriptor-invocation"]], "Invocation from an instance": [[91, "invocation-from-an-instance"]], "Invocation from a class": [[91, "invocation-from-a-class"]], "Invocation from super": [[91, "invocation-from-super"]], "Summary of invocation logic": [[91, "summary-of-invocation-logic"]], "Automatic name notification": [[91, "automatic-name-notification"]], "ORM example": [[91, "orm-example"]], "Pure Python Equivalents": [[91, "pure-python-equivalents"]], "Properties": [[91, "properties"]], "Functions and methods": [[91, "functions-and-methods"]], "Kinds of methods": [[91, "kinds-of-methods"]], "Static methods": [[91, "static-methods"]], "Class methods": [[91, "class-methods"]], "Member objects and __slots__": [[91, "member-objects-and-slots"]], "Extending and Embedding the Python Interpreter": [[72, "extending-and-embedding-the-python-interpreter"]], "Recommended third party tools": [[72, "recommended-third-party-tools"]], "Creating extensions without third party tools": [[72, "creating-extensions-without-third-party-tools"]], "Embedding the CPython runtime in a larger application": [[72, "embedding-the-cpython-runtime-in-a-larger-application"]], "\u201cWhy is Python Installed on my Computer?\u201d FAQ": [[81, "why-is-python-installed-on-my-computer-faq"]], "What is Python?": [[81, "what-is-python"], [78, "what-is-python"]], "Why is Python installed on my machine?": [[81, "why-is-python-installed-on-my-machine"]], "Can I delete Python?": [[81, "can-i-delete-python"]], "Building C and C++ Extensions on Windows": [[75, "building-c-and-c-extensions-on-windows"]], "A Cookbook Approach": [[75, "a-cookbook-approach"]], "Differences Between Unix and Windows": [[75, "differences-between-unix-and-windows"]], "Using DLLs in Practice": [[75, "using-dlls-in-practice"]], "Building C and C++ Extensions": [[69, "building-c-and-c-extensions"]], "Building C and C++ Extensions with setuptools": [[69, "building-c-and-c-extensions-with-setuptools"]], "An introduction to the ipaddress module": [[96, "an-introduction-to-the-ipaddress-module"]], "Overview": [[96, null], [41, "overview"], [402, "overview"], [239, "overview"], [246, "overview"]], "Creating Address/Network/Interface objects": [[96, "creating-address-network-interface-objects"]], "A Note on IP Versions": [[96, "a-note-on-ip-versions"]], "IP Host Addresses": [[96, "ip-host-addresses"]], "Defining Networks": [[96, "defining-networks"]], "Host Interfaces": [[96, "host-interfaces"]], "Inspecting Address/Network/Interface Objects": [[96, "inspecting-address-network-interface-objects"]], "Networks as lists of Addresses": [[96, "networks-as-lists-of-addresses"]], "Comparisons": [[96, "comparisons"], [92, "comparisons"], [405, "comparisons"], [324, "comparisons"]], "Using IP Addresses with other modules": [[96, "using-ip-addresses-with-other-modules"]], "Getting more detail when instance creation fails": [[96, "getting-more-detail-when-instance-creation-fails"]], "Extending Python with C or C++": [[71, "extending-python-with-c-or-c"]], "A Simple Example": [[71, "a-simple-example"]], "Intermezzo: Errors and Exceptions": [[71, "intermezzo-errors-and-exceptions"]], "Back to the Example": [[71, "back-to-the-example"]], "The Module\u2019s Method Table and Initialization Function": [[71, "the-module-s-method-table-and-initialization-function"]], "Compilation and Linkage": [[71, "compilation-and-linkage"]], "Calling Python Functions from C": [[71, "calling-python-functions-from-c"]], "Extracting Parameters in Extension Functions": [[71, "extracting-parameters-in-extension-functions"]], "Keyword Parameters for Extension Functions": [[71, "keyword-parameters-for-extension-functions"]], "Building Arbitrary Values": [[71, "building-arbitrary-values"]], "Reference Counts": [[71, "reference-counts"], [34, "reference-counts"]], "Reference Counting in Python": [[71, "reference-counting-in-python"]], "Ownership Rules": [[71, "ownership-rules"]], "Thin Ice": [[71, "thin-ice"]], "NULL Pointers": [[71, "null-pointers"]], "Writing Extensions in C++": [[71, "writing-extensions-in-c"]], "Providing a C API for an Extension Module": [[71, "providing-a-c-api-for-an-extension-module"]], "Copyright": [[67, "copyright"]], "Python Documentation contents": [[66, "python-documentation-contents"]], "Curses Programming with Python": [[90, "curses-programming-with-python"]], "What is curses?": [[90, "what-is-curses"]], "The Python curses module": [[90, "the-python-curses-module"]], "Starting and ending a curses application": [[90, "starting-and-ending-a-curses-application"]], "Windows and Pads": [[90, "windows-and-pads"]], "Displaying Text": [[90, "displaying-text"]], "Attributes and Color": [[90, "attributes-and-color"]], "User Input": [[90, "user-input"]], "For More Information": [[90, "for-more-information"]], "Argument Clinic How-To": [[88, "argument-clinic-how-to"]], "Background": [[88, "background"], [97, "background"], [276, "background"]], "Basic concepts": [[88, "basic-concepts"]], "Reference": [[88, "reference"], [388, "reference"], [388, "id4"], [320, "reference"], [269, "reference"]], "Terminology": [[88, "terminology"], [276, "terminology"]], "Command-line interface": [[88, "command-line-interface"], [320, "command-line-interface"]], "Classes for extending Argument Clinic": [[88, "module-clinic"]], "Tutorial": [[88, "tutorial"], [114, null], [388, "tutorial"], [361, "tutorial"], [320, "tutorial"], [276, "tutorial"]], "How-to guides": [[88, "how-to-guides"], [320, "how-to-guides"]], "How to rename C functions and variables generated by Argument Clinic": [[88, "how-to-rename-c-functions-and-variables-generated-by-argument-clinic"]], "How to convert functions using PyArg_UnpackTuple": [[88, "how-to-convert-functions-using-pyarg-unpacktuple"]], "How to use optional groups": [[88, "how-to-use-optional-groups"]], "How to use real Argument Clinic converters, instead of \u201clegacy converters\u201d": [[88, "how-to-use-real-argument-clinic-converters-instead-of-legacy-converters"]], "How to use the Py_buffer converter": [[88, "how-to-use-the-py-buffer-converter"]], "How to use advanced converters": [[88, "how-to-use-advanced-converters"]], "How to assign default values to parameter": [[88, "how-to-assign-default-values-to-parameter"]], "The NULL default value": [[88, "the-null-default-value"]], "Symbolic default values": [[88, "symbolic-default-values"]], "Expressions as default values": [[88, "expressions-as-default-values"]], "How to use return converters": [[88, "how-to-use-return-converters"]], "How to clone existing functions": [[88, "how-to-clone-existing-functions"]], "How to call Python code": [[88, "how-to-call-python-code"]], "How to use the \u201cself converter\u201d": [[88, "how-to-use-the-self-converter"]], "How to use the \u201cdefining class\u201d converter": [[88, "how-to-use-the-defining-class-converter"]], "How to write a custom converter": [[88, "how-to-write-a-custom-converter"]], "How to write a custom return converter": [[88, "how-to-write-a-custom-return-converter"]], "How to convert METH_O and METH_NOARGS functions": [[88, "how-to-convert-meth-o-and-meth-noargs-functions"]], "How to convert tp_new and tp_init functions": [[88, "how-to-convert-tp-new-and-tp-init-functions"]], "How to change and redirect Clinic\u2019s output": [[88, "how-to-change-and-redirect-clinic-s-output"]], "How to use the #ifdef trick": [[88, "how-to-use-the-ifdef-trick"]], "How to use Argument Clinic in Python files": [[88, "how-to-use-argument-clinic-in-python-files"]], "How to use the Limited C API": [[88, "how-to-use-the-limited-c-api"]], "How to override the generated signature": [[88, "how-to-override-the-generated-signature"]], "How to deprecate passing parameters positionally or by keyword": [[88, "how-to-deprecate-passing-parameters-positionally-or-by-keyword"]], "Porting Extension Modules to Python 3": [[89, "porting-extension-modules-to-python-3"]], "Programming FAQ": [[83, "programming-faq"]], "General Questions": [[83, "general-questions"]], "Is there a source code level debugger with breakpoints, single-stepping, etc.?": [[83, "is-there-a-source-code-level-debugger-with-breakpoints-single-stepping-etc"]], "Are there tools to help find bugs or perform static analysis?": [[83, "are-there-tools-to-help-find-bugs-or-perform-static-analysis"]], "How can I create a stand-alone binary from a Python script?": [[83, "how-can-i-create-a-stand-alone-binary-from-a-python-script"]], "Are there coding standards or a style guide for Python programs?": [[83, "are-there-coding-standards-or-a-style-guide-for-python-programs"]], "Core Language": [[83, "core-language"]], "Why am I getting an UnboundLocalError when the variable has a value?": [[83, "why-am-i-getting-an-unboundlocalerror-when-the-variable-has-a-value"]], "What are the rules for local and global variables in Python?": [[83, "what-are-the-rules-for-local-and-global-variables-in-python"]], "Why do lambdas defined in a loop with different values all return the same result?": [[83, "why-do-lambdas-defined-in-a-loop-with-different-values-all-return-the-same-result"]], "How do I share global variables across modules?": [[83, "how-do-i-share-global-variables-across-modules"]], "What are the \u201cbest practices\u201d for using import in a module?": [[83, "what-are-the-best-practices-for-using-import-in-a-module"]], "Why are default values shared between objects?": [[83, "why-are-default-values-shared-between-objects"]], "How can I pass optional or keyword parameters from one function to another?": [[83, "how-can-i-pass-optional-or-keyword-parameters-from-one-function-to-another"]], "What is the difference between arguments and parameters?": [[83, "what-is-the-difference-between-arguments-and-parameters"]], "Why did changing list \u2018y\u2019 also change list \u2018x\u2019?": [[83, "why-did-changing-list-y-also-change-list-x"]], "How do I write a function with output parameters (call by reference)?": [[83, "how-do-i-write-a-function-with-output-parameters-call-by-reference"]], "How do you make a higher order function in Python?": [[83, "how-do-you-make-a-higher-order-function-in-python"]], "How do I copy an object in Python?": [[83, "how-do-i-copy-an-object-in-python"]], "How can I find the methods or attributes of an object?": [[83, "how-can-i-find-the-methods-or-attributes-of-an-object"]], "How can my code discover the name of an object?": [[83, "how-can-my-code-discover-the-name-of-an-object"]], "What\u2019s up with the comma operator\u2019s precedence?": [[83, "what-s-up-with-the-comma-operator-s-precedence"]], "Is there an equivalent of C\u2019s \u201c?:\u201d ternary operator?": [[83, "is-there-an-equivalent-of-c-s-ternary-operator"]], "Is it possible to write obfuscated one-liners in Python?": [[83, "is-it-possible-to-write-obfuscated-one-liners-in-python"]], "What does the slash(/) in the parameter list of a function mean?": [[83, "what-does-the-slash-in-the-parameter-list-of-a-function-mean"]], "Numbers and strings": [[83, "numbers-and-strings"]], "How do I specify hexadecimal and octal integers?": [[83, "how-do-i-specify-hexadecimal-and-octal-integers"]], "Why does -22 // 10 return -3?": [[83, "why-does-22-10-return-3"]], "How do I get int literal attribute instead of SyntaxError?": [[83, "how-do-i-get-int-literal-attribute-instead-of-syntaxerror"]], "How do I convert a string to a number?": [[83, "how-do-i-convert-a-string-to-a-number"]], "How do I convert a number to a string?": [[83, "how-do-i-convert-a-number-to-a-string"]], "How do I modify a string in place?": [[83, "how-do-i-modify-a-string-in-place"]], "How do I use strings to call functions/methods?": [[83, "how-do-i-use-strings-to-call-functions-methods"]], "Is there an equivalent to Perl\u2019s chomp() for removing trailing newlines from strings?": [[83, "is-there-an-equivalent-to-perl-s-chomp-for-removing-trailing-newlines-from-strings"]], "Is there a scanf() or sscanf() equivalent?": [[83, "is-there-a-scanf-or-sscanf-equivalent"]], "What does \u2018UnicodeDecodeError\u2019 or \u2018UnicodeEncodeError\u2019 error  mean?": [[83, "what-does-unicodedecodeerror-or-unicodeencodeerror-error-mean"]], "Can I end a raw string with an odd number of backslashes?": [[83, "can-i-end-a-raw-string-with-an-odd-number-of-backslashes"]], "Performance": [[83, "performance"], [445, "performance"], [282, "performance"], [246, "performance"]], "My program is too slow. How do I speed it up?": [[83, "my-program-is-too-slow-how-do-i-speed-it-up"]], "What is the most efficient way to concatenate many strings together?": [[83, "what-is-the-most-efficient-way-to-concatenate-many-strings-together"]], "Sequences (Tuples/Lists)": [[83, "sequences-tuples-lists"]], "How do I convert between tuples and lists?": [[83, "how-do-i-convert-between-tuples-and-lists"]], "What\u2019s a negative index?": [[83, "what-s-a-negative-index"]], "How do I iterate over a sequence in reverse order?": [[83, "how-do-i-iterate-over-a-sequence-in-reverse-order"]], "How do you remove duplicates from a list?": [[83, "how-do-you-remove-duplicates-from-a-list"]], "How do you remove multiple items from a list": [[83, "how-do-you-remove-multiple-items-from-a-list"]], "How do you make an array in Python?": [[83, "how-do-you-make-an-array-in-python"]], "How do I create a multidimensional list?": [[83, "how-do-i-create-a-multidimensional-list"]], "How do I apply a method or function to a sequence of objects?": [[83, "how-do-i-apply-a-method-or-function-to-a-sequence-of-objects"]], "Why does a_tuple[i] += [\u2018item\u2019] raise an exception when the addition works?": [[83, "why-does-a-tuple-i-item-raise-an-exception-when-the-addition-works"]], "I want to do a complicated sort: can you do a Schwartzian Transform in Python?": [[83, "i-want-to-do-a-complicated-sort-can-you-do-a-schwartzian-transform-in-python"]], "How can I sort one list by values from another list?": [[83, "how-can-i-sort-one-list-by-values-from-another-list"]], "Objects": [[83, "objects"]], "What is a class?": [[83, "what-is-a-class"]], "What is a method?": [[83, "what-is-a-method"]], "What is self?": [[83, "what-is-self"]], "How do I check if an object is an instance of a given class or of a subclass of it?": [[83, "how-do-i-check-if-an-object-is-an-instance-of-a-given-class-or-of-a-subclass-of-it"]], "What is delegation?": [[83, "what-is-delegation"]], "How do I call a method defined in a base class from a derived class that extends it?": [[83, "how-do-i-call-a-method-defined-in-a-base-class-from-a-derived-class-that-extends-it"]], "How can I organize my code to make it easier to change the base class?": [[83, "how-can-i-organize-my-code-to-make-it-easier-to-change-the-base-class"]], "How do I create static class data and static class methods?": [[83, "how-do-i-create-static-class-data-and-static-class-methods"]], "How can I overload constructors (or methods) in Python?": [[83, "how-can-i-overload-constructors-or-methods-in-python"]], "I try to use __spam and I get an error about _SomeClassName__spam.": [[83, "i-try-to-use-spam-and-i-get-an-error-about-someclassname-spam"]], "My class defines __del__ but it is not called when I delete the object.": [[83, "my-class-defines-del-but-it-is-not-called-when-i-delete-the-object"]], "How do I get a list of all instances of a given class?": [[83, "how-do-i-get-a-list-of-all-instances-of-a-given-class"]], "Why does the result of id() appear to be not unique?": [[83, "why-does-the-result-of-id-appear-to-be-not-unique"]], "When can I rely on identity tests with the is operator?": [[83, "when-can-i-rely-on-identity-tests-with-the-is-operator"]], "How can a subclass control what data is stored in an immutable instance?": [[83, "how-can-a-subclass-control-what-data-is-stored-in-an-immutable-instance"]], "How do I cache method calls?": [[83, "how-do-i-cache-method-calls"]], "Modules": [[83, "modules"], [425, "modules"], [403, "modules"], [448, "modules"], [324, "modules"]], "How do I create a .pyc file?": [[83, "how-do-i-create-a-pyc-file"]], "How do I find the current module name?": [[83, "how-do-i-find-the-current-module-name"]], "How can I have modules that mutually import each other?": [[83, "how-can-i-have-modules-that-mutually-import-each-other"]], "__import__(\u2018x.y.z\u2019) returns <module \u2018x\u2019>; how do I get z?": [[83, "import-x-y-z-returns-module-x-how-do-i-get-z"]], "When I edit an imported module and reimport it, the changes don\u2019t show up.  Why does this happen?": [[83, "when-i-edit-an-imported-module-and-reimport-it-the-changes-don-t-show-up-why-does-this-happen"]], "Isolating Extension Modules": [[97, "isolating-extension-modules"]], "Who should read this": [[97, "who-should-read-this"]], "Enter Per-Module State": [[97, "enter-per-module-state"]], "Isolated Module Objects": [[97, "isolated-module-objects"]], "Surprising Edge Cases": [[97, "surprising-edge-cases"]], "Making Modules Safe with Multiple Interpreters": [[97, "making-modules-safe-with-multiple-interpreters"]], "Managing Global State": [[97, "managing-global-state"]], "Managing Per-Module State": [[97, "managing-per-module-state"]], "Opt-Out: Limiting to One Module Object per Process": [[97, "opt-out-limiting-to-one-module-object-per-process"]], "Module State Access from Functions": [[97, "module-state-access-from-functions"]], "Heap Types": [[97, "heap-types"], [61, "heap-types"]], "Changing Static Types to Heap Types": [[97, "changing-static-types-to-heap-types"]], "Defining Heap Types": [[97, "defining-heap-types"]], "Garbage-Collection Protocol": [[97, "garbage-collection-protocol"]], "Module State Access from Classes": [[97, "module-state-access-from-classes"]], "Module State Access from Regular Methods": [[97, "module-state-access-from-regular-methods"]], "Module State Access from Slot Methods, Getters and Setters": [[97, "module-state-access-from-slot-methods-getters-and-setters"]], "Lifetime of the Module State": [[97, "lifetime-of-the-module-state"]], "Open Issues": [[97, "open-issues"]], "Per-Class Scope": [[97, "per-class-scope"]], "Lossless Conversion to Heap Types": [[97, "lossless-conversion-to-heap-types"]], "Enum HOWTO": [[92, "enum-howto"]], "Programmatic access to enumeration members and their attributes": [[92, "programmatic-access-to-enumeration-members-and-their-attributes"]], "Duplicating enum members and values": [[92, "duplicating-enum-members-and-values"]], "Ensuring unique enumeration values": [[92, "ensuring-unique-enumeration-values"]], "Using automatic values": [[92, "using-automatic-values"]], "Iteration": [[92, "iteration"], [247, "iteration"]], "Allowed members and attributes of enumerations": [[92, "allowed-members-and-attributes-of-enumerations"]], "Restricted Enum subclassing": [[92, "restricted-enum-subclassing"]], "Dataclass support": [[92, "dataclass-support"]], "Pickling": [[92, "pickling"]], "Functional API": [[92, "functional-api"], [239, "functional-api"]], "Derived Enumerations": [[92, "derived-enumerations"]], "IntEnum": [[92, "intenum"]], "StrEnum": [[92, "strenum"]], "IntFlag": [[92, "intflag"]], "Flag": [[92, "flag"]], "Others": [[92, "others"], [449, "others"]], "When to use __new__() vs. __init__()": [[92, "when-to-use-new-vs-init"]], "Finer Points": [[92, "finer-points"]], "Supported __dunder__ names": [[92, "supported-dunder-names"], [200, "supported-dunder-names"]], "Supported _sunder_ names": [[92, "supported-sunder-names"], [200, "supported-sunder-names"]], "_Private__names": [[92, "private-names"]], "Enum member type": [[92, "enum-member-type"]], "Creating members that are mixed with other data types": [[92, "creating-members-that-are-mixed-with-other-data-types"]], "Boolean value of Enum classes and members": [[92, "boolean-value-of-enum-classes-and-members"]], "Enum classes with methods": [[92, "enum-classes-with-methods"]], "Combining members of Flag": [[92, "combining-members-of-flag"]], "Flag and IntFlag minutia": [[92, "flag-and-intflag-minutia"]], "How are Enums and Flags different?": [[92, "how-are-enums-and-flags-different"]], "Enum Classes": [[92, "enum-classes"]], "Flag Classes": [[92, "flag-classes"]], "Enum Members (aka instances)": [[92, "enum-members-aka-instances"]], "Flag Members": [[92, "flag-members"]], "Enum Cookbook": [[92, "enum-cookbook"]], "Omitting values": [[92, "omitting-values"]], "Using auto": [[92, "using-auto"]], "Using object": [[92, "using-object"]], "Using a descriptive string": [[92, "using-a-descriptive-string"]], "Using a custom __new__()": [[92, "using-a-custom-new"]], "OrderedEnum": [[92, "orderedenum"]], "DuplicateFreeEnum": [[92, "duplicatefreeenum"]], "Planet": [[92, "planet"]], "TimePeriod": [[92, "timeperiod"]], "Subclassing EnumType": [[92, "subclassing-enumtype"]], "Annotations Best Practices": [[86, "annotations-best-practices"]], "Accessing The Annotations Dict Of An Object In Python 3.10 And Newer": [[86, "accessing-the-annotations-dict-of-an-object-in-python-3-10-and-newer"]], "Accessing The Annotations Dict Of An Object In Python 3.9 And Older": [[86, "accessing-the-annotations-dict-of-an-object-in-python-3-9-and-older"]], "Manually Un-Stringizing Stringized Annotations": [[86, "manually-un-stringizing-stringized-annotations"]], "Best Practices For __annotations__ In Any Python Version": [[86, "best-practices-for-annotations-in-any-python-version"]], "__annotations__ Quirks": [[86, "annotations-quirks"]], "Library and Extension FAQ": [[82, "library-and-extension-faq"]], "General Library Questions": [[82, "general-library-questions"]], "How do I find a module or application to perform task X?": [[82, "how-do-i-find-a-module-or-application-to-perform-task-x"]], "Where is the math.py (socket.py, regex.py, etc.) source file?": [[82, "where-is-the-math-py-socket-py-regex-py-etc-source-file"]], "How do I make a Python script executable on Unix?": [[82, "how-do-i-make-a-python-script-executable-on-unix"]], "Is there a curses/termcap package for Python?": [[82, "is-there-a-curses-termcap-package-for-python"]], "Is there an equivalent to C\u2019s onexit() in Python?": [[82, "is-there-an-equivalent-to-c-s-onexit-in-python"]], "Why don\u2019t my signal handlers work?": [[82, "why-don-t-my-signal-handlers-work"]], "Common tasks": [[82, "common-tasks"]], "How do I test a Python program or component?": [[82, "how-do-i-test-a-python-program-or-component"]], "How do I create documentation from doc strings?": [[82, "how-do-i-create-documentation-from-doc-strings"]], "How do I get a single keypress at a time?": [[82, "how-do-i-get-a-single-keypress-at-a-time"]], "Threads": [[82, "threads"]], "How do I program using threads?": [[82, "how-do-i-program-using-threads"]], "None of my threads seem to run: why?": [[82, "none-of-my-threads-seem-to-run-why"]], "How do I parcel out work among a bunch of worker threads?": [[82, "how-do-i-parcel-out-work-among-a-bunch-of-worker-threads"]], "What kinds of global value mutation are thread-safe?": [[82, "what-kinds-of-global-value-mutation-are-thread-safe"]], "Can\u2019t we get rid of the Global Interpreter Lock?": [[82, "can-t-we-get-rid-of-the-global-interpreter-lock"]], "Input and Output": [[82, "input-and-output"], [421, "input-and-output"]], "How do I delete a file? (And other file questions\u2026)": [[82, "how-do-i-delete-a-file-and-other-file-questions"]], "How do I copy a file?": [[82, "how-do-i-copy-a-file"]], "How do I read (or write) binary data?": [[82, "how-do-i-read-or-write-binary-data"]], "I can\u2019t seem to use os.read() on a pipe created with os.popen(); why?": [[82, "i-can-t-seem-to-use-os-read-on-a-pipe-created-with-os-popen-why"]], "How do I access the serial (RS232) port?": [[82, "how-do-i-access-the-serial-rs232-port"]], "Why doesn\u2019t closing sys.stdout (stdin, stderr) really close it?": [[82, "why-doesn-t-closing-sys-stdout-stdin-stderr-really-close-it"]], "Network/Internet Programming": [[82, "network-internet-programming"]], "What WWW tools are there for Python?": [[82, "what-www-tools-are-there-for-python"]], "What module should I use to help with generating HTML?": [[82, "what-module-should-i-use-to-help-with-generating-html"]], "How do I send mail from a Python script?": [[82, "how-do-i-send-mail-from-a-python-script"]], "How do I avoid blocking in the connect() method of a socket?": [[82, "how-do-i-avoid-blocking-in-the-connect-method-of-a-socket"]], "Databases": [[82, "databases"]], "Are there any interfaces to database packages in Python?": [[82, "are-there-any-interfaces-to-database-packages-in-python"]], "How do you implement persistent objects in Python?": [[82, "how-do-you-implement-persistent-objects-in-python"]], "Mathematics and Numerics": [[82, "mathematics-and-numerics"]], "How do I generate random numbers in Python?": [[82, "how-do-i-generate-random-numbers-in-python"]], "Python Frequently Asked Questions": [[80, "python-frequently-asked-questions"]], "Graphic User Interface FAQ": [[79, "graphic-user-interface-faq"]], "General GUI Questions": [[79, "general-gui-questions"]], "What GUI toolkits exist for Python?": [[79, "what-gui-toolkits-exist-for-python"]], "Tkinter questions": [[79, "tkinter-questions"]], "How do I freeze Tkinter applications?": [[79, "how-do-i-freeze-tkinter-applications"]], "Can I have Tk events handled while waiting for I/O?": [[79, "can-i-have-tk-events-handled-while-waiting-for-i-o"]], "I can\u2019t get key bindings to work in Tkinter: why?": [[79, "i-can-t-get-key-bindings-to-work-in-tkinter-why"]], "Logging HOWTO": [[98, "logging-howto"]], "Basic Logging Tutorial": [[98, "basic-logging-tutorial"]], "When to use logging": [[98, "when-to-use-logging"]], "A simple example": [[98, "a-simple-example"]], "Logging to a file": [[98, "logging-to-a-file"]], "Logging from multiple modules": [[98, "logging-from-multiple-modules"]], "Logging variable data": [[98, "logging-variable-data"]], "Changing the format of displayed messages": [[98, "changing-the-format-of-displayed-messages"]], "Displaying the date/time in messages": [[98, "displaying-the-date-time-in-messages"]], "Next Steps": [[98, "next-steps"]], "Advanced Logging Tutorial": [[98, "advanced-logging-tutorial"]], "Logging Flow": [[98, "logging-flow"]], "Loggers": [[98, "loggers"]], "Handlers": [[98, "handlers"]], "Formatters": [[98, "formatters"]], "Configuring Logging": [[98, "configuring-logging"]], "What happens if no configuration is provided": [[98, "what-happens-if-no-configuration-is-provided"]], "Configuring Logging for a Library": [[98, "configuring-logging-for-a-library"]], "Logging Levels": [[98, "logging-levels"], [255, "logging-levels"]], "Custom Levels": [[98, "custom-levels"]], "Useful Handlers": [[98, "useful-handlers"]], "Exceptions raised during logging": [[98, "exceptions-raised-during-logging"]], "Using arbitrary objects as messages": [[98, "using-arbitrary-objects-as-messages"]], "Optimization": [[98, "optimization"]], "Other resources": [[98, "other-resources"], [99, "other-resources"]], "Glossary": [[85, "glossary"]], "Extending/Embedding FAQ": [[77, "extending-embedding-faq"]], "Can I create my own functions in C?": [[77, "can-i-create-my-own-functions-in-c"]], "Can I create my own functions in C++?": [[77, "id1"]], "Writing C is hard; are there any alternatives?": [[77, "writing-c-is-hard-are-there-any-alternatives"]], "How can I execute arbitrary Python statements from C?": [[77, "how-can-i-execute-arbitrary-python-statements-from-c"]], "How can I evaluate an arbitrary Python expression from C?": [[77, "how-can-i-evaluate-an-arbitrary-python-expression-from-c"]], "How do I extract C values from a Python object?": [[77, "how-do-i-extract-c-values-from-a-python-object"]], "How do I use Py_BuildValue() to create a tuple of arbitrary length?": [[77, "how-do-i-use-py-buildvalue-to-create-a-tuple-of-arbitrary-length"]], "How do I call an object\u2019s method from C?": [[77, "how-do-i-call-an-object-s-method-from-c"]], "How do I catch the output from PyErr_Print() (or anything that prints to stdout/stderr)?": [[77, "how-do-i-catch-the-output-from-pyerr-print-or-anything-that-prints-to-stdout-stderr"]], "How do I access a module written in Python from C?": [[77, "how-do-i-access-a-module-written-in-python-from-c"]], "How do I interface to C++ objects from Python?": [[77, "how-do-i-interface-to-c-objects-from-python"]], "I added a module using the Setup file and the make fails; why?": [[77, "i-added-a-module-using-the-setup-file-and-the-make-fails-why"]], "How do I debug an extension?": [[77, "how-do-i-debug-an-extension"]], "I want to compile a Python module on my Linux system, but some files are missing. Why?": [[77, "i-want-to-compile-a-python-module-on-my-linux-system-but-some-files-are-missing-why"]], "How do I tell \u201cincomplete input\u201d from \u201cinvalid input\u201d?": [[77, "how-do-i-tell-incomplete-input-from-invalid-input"]], "How do I find undefined g++ symbols __builtin_new or __pure_virtual?": [[77, "how-do-i-find-undefined-g-symbols-builtin-new-or-pure-virtual"]], "Can I create an object class with some methods implemented in C and others in Python (e.g. through inheritance)?": [[77, "can-i-create-an-object-class-with-some-methods-implemented-in-c-and-others-in-python-e-g-through-inheritance"]], "Defining Extension Types: Tutorial": [[74, "defining-extension-types-tutorial"]], "The Basics": [[74, "the-basics"]], "Adding data and methods to the Basic example": [[74, "adding-data-and-methods-to-the-basic-example"]], "Providing finer control over data attributes": [[74, "providing-finer-control-over-data-attributes"]], "Supporting cyclic garbage collection": [[74, "supporting-cyclic-garbage-collection"]], "Subclassing other types": [[74, "subclassing-other-types"]], "Distributing Python Modules": [[68, "distributing-python-modules"]], "Instrumenting CPython with DTrace and SystemTap": [[95, "instrumenting-cpython-with-dtrace-and-systemtap"]], "Enabling the static markers": [[95, "enabling-the-static-markers"]], "Static DTrace probes": [[95, "static-dtrace-probes"]], "Static SystemTap markers": [[95, "static-systemtap-markers"]], "Available static markers": [[95, "available-static-markers"]], "SystemTap Tapsets": [[95, "systemtap-tapsets"]], "Examples": [[95, "examples"], [128, "examples"], [131, "examples"], [127, "examples"], [130, "examples"], [120, "examples"], [41, "examples"], [61, "examples"], [405, "examples"], [396, "examples"], [398, "examples"], [383, "examples"], [372, "examples"], [356, "examples"], [359, "examples"], [345, "examples"], [338, "examples"], [335, "examples"], [355, "examples"], [337, "examples"], [311, "examples"], [300, "examples"], [327, "examples"], [319, "examples"], [315, "examples"], [321, "examples"], [286, "examples"], [282, "examples"], [269, "examples"], [258, "examples"], [238, "examples"], [232, "examples"], [259, "examples"], [231, "examples"], [229, "examples"], [224, "examples"], [164, "examples"], [140, "examples"]], "Python HOWTOs": [[94, "python-howtos"]], "Python on Windows FAQ": [[84, "python-on-windows-faq"]], "How do I run a Python program under Windows?": [[84, "how-do-i-run-a-python-program-under-windows"]], "How do I make Python scripts executable?": [[84, "how-do-i-make-python-scripts-executable"]], "Why does Python sometimes take so long to start?": [[84, "why-does-python-sometimes-take-so-long-to-start"]], "How do I make an executable from a Python script?": [[84, "how-do-i-make-an-executable-from-a-python-script"]], "Is a *.pyd file the same as a DLL?": [[84, "is-a-pyd-file-the-same-as-a-dll"]], "How can I embed Python into a Windows application?": [[84, "how-can-i-embed-python-into-a-windows-application"]], "How do I keep editors from inserting tabs into my Python source?": [[84, "how-do-i-keep-editors-from-inserting-tabs-into-my-python-source"]], "How do I check for a keypress without blocking?": [[84, "how-do-i-check-for-a-keypress-without-blocking"]], "How do I solve the missing api-ms-win-crt-runtime-l1-1-0.dll error?": [[84, "how-do-i-solve-the-missing-api-ms-win-crt-runtime-l1-1-0-dll-error"]], "General Python FAQ": [[78, "general-python-faq"]], "General Information": [[78, "general-information"]], "What is the Python Software Foundation?": [[78, "what-is-the-python-software-foundation"]], "Are there copyright restrictions on the use of Python?": [[78, "are-there-copyright-restrictions-on-the-use-of-python"]], "Why was Python created in the first place?": [[78, "why-was-python-created-in-the-first-place"]], "What is Python good for?": [[78, "what-is-python-good-for"]], "How does the Python version numbering scheme work?": [[78, "how-does-the-python-version-numbering-scheme-work"]], "How do I obtain a copy of the Python source?": [[78, "how-do-i-obtain-a-copy-of-the-python-source"]], "How do I get documentation on Python?": [[78, "how-do-i-get-documentation-on-python"]], "I\u2019ve never programmed before. Is there a Python tutorial?": [[78, "i-ve-never-programmed-before-is-there-a-python-tutorial"]], "Is there a newsgroup or mailing list devoted to Python?": [[78, "is-there-a-newsgroup-or-mailing-list-devoted-to-python"]], "How do I get a beta test version of Python?": [[78, "how-do-i-get-a-beta-test-version-of-python"]], "How do I submit bug reports and patches for Python?": [[78, "how-do-i-submit-bug-reports-and-patches-for-python"]], "Are there any published articles about Python that I can reference?": [[78, "are-there-any-published-articles-about-python-that-i-can-reference"]], "Are there any books on Python?": [[78, "are-there-any-books-on-python"]], "Where in the world is www.python.org located?": [[78, "where-in-the-world-is-www-python-org-located"]], "Why is it called Python?": [[78, "why-is-it-called-python"]], "Do I have to like \u201cMonty Python\u2019s Flying Circus\u201d?": [[78, "do-i-have-to-like-monty-python-s-flying-circus"]], "Python in the real world": [[78, "python-in-the-real-world"]], "How stable is Python?": [[78, "how-stable-is-python"]], "How many people are using Python?": [[78, "how-many-people-are-using-python"]], "Have any significant projects been done in Python?": [[78, "have-any-significant-projects-been-done-in-python"]], "What new developments are expected for Python in the future?": [[78, "what-new-developments-are-expected-for-python-in-the-future"]], "Is it reasonable to propose incompatible changes to Python?": [[78, "is-it-reasonable-to-propose-incompatible-changes-to-python"]], "Is Python a good language for beginning programmers?": [[78, "is-python-a-good-language-for-beginning-programmers"]], "Coroutine Objects": [[19, "coroutine-objects"], [403, "coroutine-objects"]], "Cell Objects": [[12, "cell-objects"]], "About these documents": [[0, "about-these-documents"]], "Contributors to the Python Documentation": [[0, "contributors-to-the-python-documentation"]], "Allocating Objects on the Heap": [[3, "allocating-objects-on-the-heap"]], "DateTime Objects": [[20, "datetime-objects"], [394, "datetime-objects"]], "Complex Number Objects": [[15, "complex-number-objects"]], "Complex Numbers as C Structures": [[15, "complex-numbers-as-c-structures"]], "Complex Numbers as Python Objects": [[15, "complex-numbers-as-python-objects"]], "Supporting Cyclic Garbage Collection": [[28, "supporting-cyclic-garbage-collection"]], "Controlling the Garbage Collector State": [[28, "controlling-the-garbage-collector-state"]], "Querying Garbage Collector State": [[28, "querying-garbage-collector-state"]], "Capsules": [[11, "capsules"], [444, "capsules"]], "Python/C API Reference Manual": [[31, "python-c-api-reference-manual"]], "Importing Modules": [[30, "importing-modules"], [267, "importing-modules"]], "Initialization, Finalization, and Threads": [[32, "initialization-finalization-and-threads"]], "Before Python Initialization": [[32, "before-python-initialization"]], "Global configuration variables": [[32, "global-configuration-variables"]], "Initializing and finalizing the interpreter": [[32, "initializing-and-finalizing-the-interpreter"]], "Process-wide parameters": [[32, "process-wide-parameters"]], "Thread State and the Global Interpreter Lock": [[32, "thread-state-and-the-global-interpreter-lock"]], "Releasing the GIL from extension code": [[32, "releasing-the-gil-from-extension-code"]], "Non-Python created threads": [[32, "non-python-created-threads"]], "Cautions about fork()": [[32, "cautions-about-fork"]], "High-level API": [[32, "high-level-api"]], "Low-level API": [[32, "low-level-api"]], "Sub-interpreter support": [[32, "sub-interpreter-support"]], "A Per-Interpreter GIL": [[32, "a-per-interpreter-gil"]], "Bugs and caveats": [[32, "bugs-and-caveats"]], "Asynchronous Notifications": [[32, "asynchronous-notifications"]], "Profiling and Tracing": [[32, "profiling-and-tracing"]], "Advanced Debugger Support": [[32, "advanced-debugger-support"]], "Thread Local Storage Support": [[32, "thread-local-storage-support"]], "Thread Specific Storage (TSS) API": [[32, "thread-specific-storage-tss-api"]], "Dynamic Allocation": [[32, "dynamic-allocation"]], "Methods": [[32, "methods"], [324, "methods"], [279, "methods"]], "Thread Local Storage (TLS) API": [[32, "thread-local-storage-tls-api"]], "Bytes Objects": [[9, "bytes-objects"], [324, "bytes-objects"]], "Frame Objects": [[26, "frame-objects"]], "Internal Frames": [[26, "internal-frames"]], "Byte Array Objects": [[8, "byte-array-objects"]], "Type check macros": [[8, "type-check-macros"]], "Direct API functions": [[8, "direct-api-functions"]], "Macros": [[8, "macros"]], "Descriptor Objects": [[21, "descriptor-objects"]], "Dictionary Objects": [[22, "dictionary-objects"]], "API and ABI Versioning": [[4, "api-and-abi-versioning"]], "File Objects": [[24, "file-objects"]], "String conversion and formatting": [[18, "string-conversion-and-formatting"]], "Exception Handling": [[23, "exception-handling"]], "Printing and clearing": [[23, "printing-and-clearing"]], "Raising exceptions": [[23, "raising-exceptions"]], "Issuing warnings": [[23, "issuing-warnings"]], "Querying the error indicator": [[23, "querying-the-error-indicator"]], "Signal Handling": [[23, "signal-handling"], [365, "signal-handling"]], "Exception Classes": [[23, "exception-classes"]], "Exception Objects": [[23, "exception-objects"]], "Unicode Exception Objects": [[23, "unicode-exception-objects"]], "Recursion Control": [[23, "recursion-control"], [10, "recursion-control"]], "Standard Exceptions": [[23, "standard-exceptions"]], "Standard Warning Categories": [[23, "standard-warning-categories"]], "Code Objects": [[13, "code-objects"], [324, "code-objects"]], "Extra information": [[13, "extra-information"]], "Generator Objects": [[29, "generator-objects"]], "Function Objects": [[27, "function-objects"], [16, "function-objects"], [294, "function-objects"]], "Call Protocol": [[10, "call-protocol"]], "The tp_call Protocol": [[10, "the-tp-call-protocol"]], "The Vectorcall Protocol": [[10, "the-vectorcall-protocol"]], "Vectorcall Support API": [[10, "vectorcall-support-api"]], "Object Calling API": [[10, "object-calling-api"]], "Call Support API": [[10, "call-support-api"]], "Buffer Protocol": [[7, "buffer-protocol"]], "Buffer structure": [[7, "buffer-structure"]], "Buffer request types": [[7, "buffer-request-types"]], "request-independent fields": [[7, "request-independent-fields"]], "readonly, format": [[7, "readonly-format"]], "shape, strides, suboffsets": [[7, "shape-strides-suboffsets"]], "contiguity requests": [[7, "contiguity-requests"]], "compound requests": [[7, "compound-requests"]], "Complex arrays": [[7, "complex-arrays"]], "NumPy-style: shape and strides": [[7, "numpy-style-shape-and-strides"]], "PIL-style: shape, strides and suboffsets": [[7, "pil-style-shape-strides-and-suboffsets"]], "Buffer-related functions": [[7, "buffer-related-functions"]], "Context Variables Objects": [[17, "context-variables-objects"]], "Dealing with Bugs": [[1, "dealing-with-bugs"]], "Documentation bugs": [[1, "documentation-bugs"]], "Using the Python issue tracker": [[1, "using-the-python-issue-tracker"]], "Getting started contributing to Python yourself": [[1, "getting-started-contributing-to-python-yourself"]], "Floating Point Objects": [[25, "floating-point-objects"]], "Pack and Unpack functions": [[25, "pack-and-unpack-functions"]], "Pack functions": [[25, "pack-functions"]], "Unpack functions": [[25, "unpack-functions"]], "Parsing arguments and building values": [[5, "parsing-arguments-and-building-values"]], "Parsing arguments": [[5, "parsing-arguments"], [114, "parsing-arguments"], [276, "parsing-arguments"]], "Strings and buffers": [[5, "strings-and-buffers"]], "Numbers": [[5, "numbers"], [424, "numbers"]], "Other objects": [[5, "other-objects"]], "API Functions": [[5, "api-functions"]], "Building values": [[5, "building-values"]], "Codec registry and support functions": [[14, "codec-registry-and-support-functions"]], "Codec lookup API": [[14, "codec-lookup-api"]], "Registry API for Unicode encoding error handlers": [[14, "registry-api-for-unicode-encoding-error-handlers"]], "Abstract Objects Layer": [[2, "abstract-objects-layer"]], "Boolean Objects": [[6, "boolean-objects"]], "Concrete Objects Layer": [[16, "concrete-objects-layer"]], "Fundamental Objects": [[16, "fundamental-objects"]], "Numeric Objects": [[16, "numeric-objects"]], "Sequence Objects": [[16, "sequence-objects"]], "Container Objects": [[16, "container-objects"]], "Other Objects": [[16, "other-objects"]], "Runners": [[129, "runners"]], "Running an asyncio Program": [[129, "running-an-asyncio-program"]], "Runner context manager": [[129, "runner-context-manager"]], "Handling Keyboard Interruption": [[129, "handling-keyboard-interruption"]], "Unicode HOWTO": [[105, "unicode-howto"]], "Introduction to Unicode": [[105, "introduction-to-unicode"]], "Definitions": [[105, "definitions"]], "Encodings": [[105, "encodings"]], "Python\u2019s Unicode Support": [[105, "python-s-unicode-support"]], "The String Type": [[105, "the-string-type"]], "Converting to Bytes": [[105, "converting-to-bytes"]], "Unicode Literals in Python Source Code": [[105, "unicode-literals-in-python-source-code"]], "Unicode Properties": [[105, "unicode-properties"]], "Comparing Strings": [[105, "comparing-strings"]], "Unicode Regular Expressions": [[105, "unicode-regular-expressions"]], "Reading and Writing Unicode Data": [[105, "reading-and-writing-unicode-data"]], "Unicode filenames": [[105, "unicode-filenames"]], "Tips for Writing Unicode-aware Programs": [[105, "tips-for-writing-unicode-aware-programs"]], "Converting Between File Encodings": [[105, "converting-between-file-encodings"]], "Files in an Unknown Encoding": [[105, "files-in-an-unknown-encoding"]], "Acknowledgements": [[105, "acknowledgements"], [438, "acknowledgements"], [442, "acknowledgements"], [441, "acknowledgements"], [443, "acknowledgements"], [444, "acknowledgements"], [439, "acknowledgements"], [440, "acknowledgements"], [437, "acknowledgements"], [219, "acknowledgements"]], "Queues": [[128, "queues"], [118, "queues"]], "Queue": [[128, "queue"]], "Priority Queue": [[128, "priority-queue"]], "LIFO Queue": [[128, "lifo-queue"]], "Exceptions": [[128, "exceptions"], [121, "exceptions"], [114, "exceptions"], [118, "exceptions"], [34, "exceptions"], [418, "exceptions"], [404, "exceptions"], [388, "exceptions"], [385, "exceptions"], [323, "exceptions"], [328, "exceptions"], [320, "exceptions"], [321, "exceptions"], [318, "exceptions"], [301, "exceptions"], [279, "exceptions"], [276, "exceptions"], [250, "exceptions"], [259, "exceptions"], [221, "exceptions"], [157, "exceptions"]], "__main__ \u2014 Top-level code environment": [[109, "module-__main__"]], "__name__ == '__main__'": [[109, "name-main"]], "What is the \u201ctop-level code environment\u201d?": [[109, "what-is-the-top-level-code-environment"]], "Idiomatic Usage": [[109, "idiomatic-usage"], [109, "id1"]], "Packaging Considerations": [[109, "packaging-considerations"]], "__main__.py in Python Packages": [[109, "main-py-in-python-packages"]], "import __main__": [[109, "import-main"]], "Futures": [[123, "futures"]], "Future Functions": [[123, "future-functions"]], "Future Object": [[123, "future-object"]], "Low-level API Index": [[124, "low-level-api-index"]], "Obtaining the Event Loop": [[124, "obtaining-the-event-loop"]], "Event Loop Methods": [[124, "event-loop-methods"], [120, "event-loop-methods"]], "Transports": [[124, "transports"], [127, "transports"]], "Protocols": [[124, "protocols"], [127, "protocols"], [363, "protocols"]], "Event Loop Policies": [[124, "event-loop-policies"]], "ast \u2014 Abstract Syntax Trees": [[116, "module-ast"]], "Abstract Grammar": [[116, "abstract-grammar"]], "Node classes": [[116, "node-classes"]], "Root nodes": [[116, "root-nodes"]], "Literals": [[116, "literals"], [405, "literals"], [410, "literals"]], "Variables": [[116, "variables"]], "Expressions": [[116, "expressions"], [405, "expressions"]], "Subscripting": [[116, "subscripting"]], "Comprehensions": [[116, "comprehensions"]], "Statements": [[116, "statements"]], "Imports": [[116, "imports"]], "Control flow": [[116, "control-flow"]], "Pattern matching": [[116, "pattern-matching"]], "Type parameters": [[116, "type-parameters"]], "Function and class definitions": [[116, "function-and-class-definitions"]], "Async and await": [[116, "async-and-await"]], "ast Helpers": [[116, "ast-helpers"]], "Compiler Flags": [[116, "compiler-flags"]], "Command-Line Usage": [[116, "command-line-usage"], [374, "command-line-usage"], [357, "command-line-usage"], [355, "command-line-usage"], [143, "command-line-usage"]], "Subprocesses": [[131, "subprocesses"], [118, "subprocesses"]], "Creating Subprocesses": [[131, "creating-subprocesses"]], "Constants": [[131, "constants"], [381, "constants"], [321, "constants"], [318, "constants"], [262, "constants"], [224, "constants"], [144, "constants"], [175, "constants"], [172, "constants"], [166, "constants"]], "Interacting with Subprocesses": [[131, "interacting-with-subprocesses"]], "Subprocess and Threads": [[131, "subprocess-and-threads"]], "Sorting HOW TO": [[104, "sorting-how-to"]], "Sorting Basics": [[104, "sorting-basics"]], "Key Functions": [[104, "key-functions"]], "Operator Module Functions": [[104, "operator-module-functions"]], "Ascending and Descending": [[104, "ascending-and-descending"]], "Sort Stability and Complex Sorts": [[104, "sort-stability-and-complex-sorts"]], "Decorate-Sort-Undecorate": [[104, "decorate-sort-undecorate"]], "Comparison Functions": [[104, "comparison-functions"]], "Odds and Ends": [[104, "odds-and-ends"], [415, "odds-and-ends"]], "__future__ \u2014 Future statement definitions": [[108, "module-__future__"]], "Transports and Protocols": [[127, "transports-and-protocols"]], "Transports Hierarchy": [[127, "transports-hierarchy"]], "Base Transport": [[127, "base-transport"]], "Read-only Transports": [[127, "read-only-transports"]], "Write-only Transports": [[127, "write-only-transports"]], "Datagram Transports": [[127, "datagram-transports"]], "Subprocess Transports": [[127, "subprocess-transports"]], "Base Protocols": [[127, "base-protocols"]], "Base Protocol": [[127, "base-protocol"]], "Streaming Protocols": [[127, "streaming-protocols"]], "Buffered Streaming Protocols": [[127, "buffered-streaming-protocols"]], "Datagram Protocols": [[127, "datagram-protocols"]], "Subprocess Protocols": [[127, "subprocess-protocols"]], "TCP Echo Server": [[127, "tcp-echo-server"]], "TCP Echo Client": [[127, "tcp-echo-client"]], "UDP Echo Server": [[127, "udp-echo-server"]], "UDP Echo Client": [[127, "udp-echo-client"]], "Connecting Existing Sockets": [[127, "connecting-existing-sockets"]], "loop.subprocess_exec() and SubprocessProtocol": [[127, "loop-subprocess-exec-and-subprocessprotocol"]], "Installing Python Modules": [[107, "installing-python-modules"]], "Key terms": [[107, "key-terms"]], "Basic usage": [[107, "basic-usage"]], "How do I \u2026?": [[107, "how-do-i"]], "\u2026 install pip in versions of Python prior to Python 3.4?": [[107, "install-pip-in-versions-of-python-prior-to-python-3-4"]], "\u2026 install packages just for the current user?": [[107, "install-packages-just-for-the-current-user"]], "\u2026 install scientific Python packages?": [[107, "install-scientific-python-packages"]], "\u2026 work with multiple versions of Python installed in parallel?": [[107, "work-with-multiple-versions-of-python-installed-in-parallel"]], "Common installation issues": [[107, "common-installation-issues"]], "Installing into the system Python on Linux": [[107, "installing-into-the-system-python-on-linux"]], "Pip not installed": [[107, "pip-not-installed"]], "Installing binary extensions": [[107, "installing-binary-extensions"]], "Python support for the Linux perf profiler": [[100, "python-support-for-the-linux-perf-profiler"]], "How to enable perf profiling support": [[100, "how-to-enable-perf-profiling-support"]], "How to obtain the best results": [[100, "how-to-obtain-the-best-results"]], "Developing with asyncio": [[119, "developing-with-asyncio"]], "Debug Mode": [[119, "debug-mode"]], "Concurrency and Multithreading": [[119, "concurrency-and-multithreading"]], "Running Blocking Code": [[119, "running-blocking-code"]], "Logging": [[119, "logging"], [427, "logging"], [269, "logging"]], "Detect never-awaited coroutines": [[119, "detect-never-awaited-coroutines"]], "Detect never-retrieved exceptions": [[119, "detect-never-retrieved-exceptions"]], "Logging Cookbook": [[99, "logging-cookbook"]], "Using logging in multiple modules": [[99, "using-logging-in-multiple-modules"]], "Logging from multiple threads": [[99, "logging-from-multiple-threads"]], "Multiple handlers and formatters": [[99, "multiple-handlers-and-formatters"]], "Logging to multiple destinations": [[99, "logging-to-multiple-destinations"]], "Custom handling of levels": [[99, "custom-handling-of-levels"]], "Configuration server example": [[99, "configuration-server-example"]], "Dealing with handlers that block": [[99, "dealing-with-handlers-that-block"]], "Sending and receiving logging events across a network": [[99, "sending-and-receiving-logging-events-across-a-network"]], "Running a logging socket listener in production": [[99, "running-a-logging-socket-listener-in-production"]], "Adding contextual information to your logging output": [[99, "adding-contextual-information-to-your-logging-output"]], "Using LoggerAdapters to impart contextual information": [[99, "using-loggeradapters-to-impart-contextual-information"]], "Using objects other than dicts to pass contextual information": [[99, "using-objects-other-than-dicts-to-pass-contextual-information"]], "Using Filters to impart contextual information": [[99, "using-filters-to-impart-contextual-information"]], "Use of contextvars": [[99, "use-of-contextvars"]], "Imparting contextual information in handlers": [[99, "imparting-contextual-information-in-handlers"]], "Logging to a single file from multiple processes": [[99, "logging-to-a-single-file-from-multiple-processes"]], "Using concurrent.futures.ProcessPoolExecutor": [[99, "using-concurrent-futures-processpoolexecutor"]], "Deploying Web applications using Gunicorn and uWSGI": [[99, "deploying-web-applications-using-gunicorn-and-uwsgi"]], "Using file rotation": [[99, "using-file-rotation"]], "Use of alternative formatting styles": [[99, "use-of-alternative-formatting-styles"]], "Customizing LogRecord": [[99, "customizing-logrecord"]], "Subclassing QueueHandler - a ZeroMQ example": [[99, "subclassing-queuehandler-a-zeromq-example"]], "Subclassing QueueListener - a ZeroMQ example": [[99, "subclassing-queuelistener-a-zeromq-example"]], "An example dictionary-based configuration": [[99, "an-example-dictionary-based-configuration"]], "Using a rotator and namer to customize log rotation processing": [[99, "using-a-rotator-and-namer-to-customize-log-rotation-processing"]], "A more elaborate multiprocessing example": [[99, "a-more-elaborate-multiprocessing-example"]], "Inserting a BOM into messages sent to a SysLogHandler": [[99, "inserting-a-bom-into-messages-sent-to-a-sysloghandler"]], "Implementing structured logging": [[99, "implementing-structured-logging"]], "Customizing handlers with dictConfig()": [[99, "customizing-handlers-with-dictconfig"]], "Using particular formatting styles throughout your application": [[99, "using-particular-formatting-styles-throughout-your-application"]], "Using LogRecord factories": [[99, "using-logrecord-factories"]], "Using custom message objects": [[99, "using-custom-message-objects"]], "Configuring filters with dictConfig()": [[99, "configuring-filters-with-dictconfig"]], "Customized exception formatting": [[99, "customized-exception-formatting"]], "Speaking logging messages": [[99, "speaking-logging-messages"]], "Buffering logging messages and outputting them conditionally": [[99, "buffering-logging-messages-and-outputting-them-conditionally"]], "Sending logging messages to email, with buffering": [[99, "sending-logging-messages-to-email-with-buffering"]], "Formatting times using UTC (GMT) via configuration": [[99, "formatting-times-using-utc-gmt-via-configuration"]], "Using a context manager for selective logging": [[99, "using-a-context-manager-for-selective-logging"]], "A CLI application starter template": [[99, "a-cli-application-starter-template"]], "A Qt GUI for logging": [[99, "a-qt-gui-for-logging"]], "Logging to syslog with RFC5424 support": [[99, "logging-to-syslog-with-rfc5424-support"]], "How to treat a logger like an output stream": [[99, "how-to-treat-a-logger-like-an-output-stream"]], "Patterns to avoid": [[99, "patterns-to-avoid"]], "Opening the same log file multiple times": [[99, "opening-the-same-log-file-multiple-times"]], "Using loggers as attributes in a class or passing them as parameters": [[99, "using-loggers-as-attributes-in-a-class-or-passing-them-as-parameters"]], "Adding handlers other than NullHandler to a logger in a library": [[99, "adding-handlers-other-than-nullhandler-to-a-logger-in-a-library"]], "Creating a lot of loggers": [[99, "creating-a-lot-of-loggers"]], "Streams": [[130, "streams"], [118, "streams"]], "StreamReader": [[130, "streamreader"]], "StreamWriter": [[130, "streamwriter"]], "TCP echo client using streams": [[130, "tcp-echo-client-using-streams"]], "TCP echo server using streams": [[130, "tcp-echo-server-using-streams"]], "Get HTTP headers": [[130, "get-http-headers"]], "Register an open socket to wait for data using streams": [[130, "register-an-open-socket-to-wait-for-data-using-streams"]], "Platform Support": [[125, "platform-support"]], "All Platforms": [[125, "all-platforms"]], "Windows": [[125, "windows"]], "Subprocess Support on Windows": [[125, "subprocess-support-on-windows"]], "macOS": [[125, "macos"]], "array \u2014 Efficient arrays of numeric values": [[115, "module-array"]], "Policies": [[126, "policies"]], "Getting and Setting the Policy": [[126, "getting-and-setting-the-policy"]], "Policy Objects": [[126, "policy-objects"]], "Process Watchers": [[126, "process-watchers"]], "Custom Policies": [[126, "custom-policies"]], "Event Loop": [[120, "event-loop"]], "Running and stopping the loop": [[120, "running-and-stopping-the-loop"]], "Scheduling callbacks": [[120, "scheduling-callbacks"]], "Scheduling delayed callbacks": [[120, "scheduling-delayed-callbacks"]], "Creating Futures and Tasks": [[120, "creating-futures-and-tasks"]], "Opening network connections": [[120, "opening-network-connections"]], "Creating network servers": [[120, "creating-network-servers"]], "Transferring files": [[120, "transferring-files"]], "TLS Upgrade": [[120, "tls-upgrade"]], "Watching file descriptors": [[120, "watching-file-descriptors"]], "Working with socket objects directly": [[120, "working-with-socket-objects-directly"]], "DNS": [[120, "dns"]], "Working with pipes": [[120, "working-with-pipes"]], "Unix signals": [[120, "unix-signals"]], "Executing code in thread or process pools": [[120, "executing-code-in-thread-or-process-pools"]], "Error Handling API": [[120, "error-handling-api"]], "Enabling debug mode": [[120, "enabling-debug-mode"]], "Running Subprocesses": [[120, "running-subprocesses"]], "Callback Handles": [[120, "callback-handles"]], "Server Objects": [[120, "server-objects"], [319, "server-objects"]], "Event Loop Implementations": [[120, "event-loop-implementations"]], "Hello World with call_soon()": [[120, "hello-world-with-call-soon"]], "Display the current date with call_later()": [[120, "display-the-current-date-with-call-later"]], "Watch a file descriptor for read events": [[120, "watch-a-file-descriptor-for-read-events"]], "Set signal handlers for SIGINT and SIGTERM": [[120, "set-signal-handlers-for-sigint-and-sigterm"]], "Regular Expression HOWTO": [[102, "regular-expression-howto"]], "Simple Patterns": [[102, "simple-patterns"]], "Matching Characters": [[102, "matching-characters"]], "Repeating Things": [[102, "repeating-things"]], "Using Regular Expressions": [[102, "using-regular-expressions"]], "Compiling Regular Expressions": [[102, "compiling-regular-expressions"]], "The Backslash Plague": [[102, "the-backslash-plague"]], "Performing Matches": [[102, "performing-matches"]], "Module-Level Functions": [[102, "module-level-functions"], [255, "module-level-functions"]], "Compilation Flags": [[102, "compilation-flags"]], "More Pattern Power": [[102, "more-pattern-power"]], "More Metacharacters": [[102, "more-metacharacters"]], "Grouping": [[102, "grouping"]], "Non-capturing and Named Groups": [[102, "non-capturing-and-named-groups"]], "Lookahead Assertions": [[102, "lookahead-assertions"]], "Modifying Strings": [[102, "modifying-strings"]], "Splitting Strings": [[102, "splitting-strings"]], "Search and Replace": [[102, "search-and-replace"], [236, "search-and-replace"]], "Common Problems": [[102, "common-problems"]], "Use String Methods": [[102, "use-string-methods"]], "match() versus search()": [[102, "match-versus-search"]], "Greedy versus Non-Greedy": [[102, "greedy-versus-non-greedy"]], "Using re.VERBOSE": [[102, "using-re-verbose"]], "Feedback": [[102, "feedback"]], "Data Compression and Archiving": [[113, "data-compression-and-archiving"]], "Extending": [[122, "extending"]], "Writing a Custom Event Loop": [[122, "writing-a-custom-event-loop"]], "Future and Task private constructors": [[122, "future-and-task-private-constructors"]], "Task lifetime support": [[122, "task-lifetime-support"]], "abc \u2014 Abstract Base Classes": [[111, "module-abc"]], "argparse \u2014 Parser for command-line options, arguments and sub-commands": [[114, "module-argparse"]], "Core Functionality": [[114, "core-functionality"]], "Quick Links for add_argument()": [[114, "quick-links-for-add-argument"]], "Example": [[114, "example"], [33, "example"], [378, "example"], [388, "example"], [388, "id3"], [374, "example"], [339, "example"], [312, "example"], [318, "example"], [302, "example"], [296, "example"], [282, "example"], [291, "example"], [289, "example"], [233, "example"], [203, "example"], [162, "example"]], "Creating a parser": [[114, "creating-a-parser"]], "Adding arguments": [[114, "adding-arguments"]], "ArgumentParser objects": [[114, "argumentparser-objects"]], "prog": [[114, "prog"]], "usage": [[114, "usage"]], "description": [[114, "description"]], "epilog": [[114, "epilog"]], "parents": [[114, "parents"]], "formatter_class": [[114, "formatter-class"]], "prefix_chars": [[114, "prefix-chars"]], "fromfile_prefix_chars": [[114, "fromfile-prefix-chars"]], "argument_default": [[114, "argument-default"]], "allow_abbrev": [[114, "allow-abbrev"]], "conflict_handler": [[114, "conflict-handler"]], "add_help": [[114, "add-help"]], "exit_on_error": [[114, "exit-on-error"]], "The add_argument() method": [[114, "the-add-argument-method"]], "name or flags": [[114, "name-or-flags"]], "action": [[114, "action"]], "nargs": [[114, "nargs"]], "const": [[114, "const"]], "default": [[114, "default"]], "type": [[114, "type"]], "choices": [[114, "choices"]], "required": [[114, "required"]], "help": [[114, "help"]], "metavar": [[114, "metavar"]], "dest": [[114, "dest"]], "Action classes": [[114, "action-classes"]], "The parse_args() method": [[114, "the-parse-args-method"]], "Option value syntax": [[114, "option-value-syntax"]], "Invalid arguments": [[114, "invalid-arguments"]], "Arguments containing -": [[114, "arguments-containing"]], "Argument abbreviations (prefix matching)": [[114, "argument-abbreviations-prefix-matching"]], "Beyond sys.argv": [[114, "beyond-sys-argv"]], "The Namespace object": [[114, "the-namespace-object"]], "Other utilities": [[114, "other-utilities"]], "Sub-commands": [[114, "sub-commands"]], "FileType objects": [[114, "filetype-objects"]], "Argument groups": [[114, "argument-groups"]], "Mutual exclusion": [[114, "mutual-exclusion"]], "Parser defaults": [[114, "parser-defaults"]], "Printing help": [[114, "printing-help"]], "Partial parsing": [[114, "partial-parsing"]], "Customizing file parsing": [[114, "customizing-file-parsing"]], "Exiting methods": [[114, "exiting-methods"]], "Intermixed parsing": [[114, "intermixed-parsing"]], "Upgrading optparse code": [[114, "upgrading-optparse-code"]], "asyncio \u2014 Asynchronous I/O": [[117, "module-asyncio"]], "Hello World!": [[117, null]], "High-level APIs": [[117, null]], "Low-level APIs": [[117, null]], "Guides and Tutorials": [[117, null]], "Generic Operating System Services": [[112, "generic-operating-system-services"]], "High-level API Index": [[118, "high-level-api-index"]], "Tasks": [[118, "tasks"]], "Synchronization": [[118, "synchronization"]], "How to port Python 2 Code to Python 3": [[101, "how-to-port-python-2-code-to-python-3"]], "The Short Explanation": [[101, "the-short-explanation"]], "Details": [[101, "details"]], "Different versions of Python 2": [[101, "different-versions-of-python-2"]], "Make sure you specify the proper version support in your setup.py file": [[101, "make-sure-you-specify-the-proper-version-support-in-your-setup-py-file"]], "Have good test coverage": [[101, "have-good-test-coverage"]], "Be aware of the differences between Python 2 and 3": [[101, "be-aware-of-the-differences-between-python-2-and-3"]], "Update your code": [[101, "update-your-code"]], "Division": [[101, "division"]], "Text versus binary data": [[101, "text-versus-binary-data"]], "Use feature detection instead of version detection": [[101, "use-feature-detection-instead-of-version-detection"]], "Prevent compatibility regressions": [[101, "prevent-compatibility-regressions"]], "Check which dependencies block your transition": [[101, "check-which-dependencies-block-your-transition"]], "Update your setup.py file to denote Python 3 compatibility": [[101, "update-your-setup-py-file-to-denote-python-3-compatibility"]], "Use continuous integration to stay compatible": [[101, "use-continuous-integration-to-stay-compatible"]], "Consider using optional static type checking": [[101, "consider-using-optional-static-type-checking"]], "Socket Programming HOWTO": [[103, "socket-programming-howto"]], "Sockets": [[103, "sockets"], [401, "sockets"]], "History": [[103, "history"]], "Creating a Socket": [[103, "creating-a-socket"]], "IPC": [[103, "ipc"]], "Using a Socket": [[103, "using-a-socket"]], "Binary Data": [[103, "binary-data"]], "Disconnecting": [[103, "disconnecting"]], "When Sockets Die": [[103, "when-sockets-die"]], "Non-blocking Sockets": [[103, "non-blocking-sockets"]], "HOWTO Fetch Internet Resources Using The urllib Package": [[106, "howto-fetch-internet-resources-using-the-urllib-package"]], "Related Articles": [[106, null]], "Fetching URLs": [[106, "fetching-urls"]], "Data": [[106, "data"]], "Headers": [[106, "headers"]], "Handling Exceptions": [[106, "handling-exceptions"], [418, "handling-exceptions"]], "URLError": [[106, "urlerror"]], "HTTPError": [[106, "httperror"]], "Error Codes": [[106, "error-codes"]], "Wrapping it Up": [[106, "wrapping-it-up"]], "Number 1": [[106, "number-1"]], "Number 2": [[106, "number-2"]], "info and geturl": [[106, "info-and-geturl"]], "Openers and Handlers": [[106, "openers-and-handlers"]], "Basic Authentication": [[106, "id5"]], "Proxies": [[106, "proxies"]], "Sockets and Layers": [[106, "sockets-and-layers"]], "Footnotes": [[106, "footnotes"]], "_thread \u2014 Low-level threading API": [[110, "module-_thread"]], "Tuple Objects": [[58, "tuple-objects"]], "Struct Sequence Objects": [[58, "struct-sequence-objects"]], "Memory Management": [[41, "memory-management"]], "Allocator Domains": [[41, "allocator-domains"]], "Raw Memory Interface": [[41, "raw-memory-interface"]], "Memory Interface": [[41, "memory-interface"]], "Object allocators": [[41, "object-allocators"]], "Default Memory Allocators": [[41, "default-memory-allocators"]], "Customize Memory Allocators": [[41, "customize-memory-allocators"]], "Debug hooks on the Python memory allocators": [[41, "debug-hooks-on-the-python-memory-allocators"]], "The pymalloc allocator": [[41, "the-pymalloc-allocator"]], "Customize pymalloc Arena Allocator": [[41, "customize-pymalloc-arena-allocator"]], "tracemalloc C API": [[41, "tracemalloc-c-api"]], "Module Objects": [[44, "module-objects"]], "Initializing C modules": [[44, "initializing-c-modules"]], "Single-phase initialization": [[44, "single-phase-initialization"]], "Multi-phase initialization": [[44, "multi-phase-initialization"]], "Low-level module creation functions": [[44, "low-level-module-creation-functions"]], "Support functions": [[44, "support-functions"]], "Module lookup": [[44, "module-lookup"]], "Set Objects": [[53, "set-objects"]], "Support for Perf Maps": [[49, "support-for-perf-maps"]], "Iterator Protocol": [[35, "iterator-protocol"]], "Operating System Utilities": [[57, "operating-system-utilities"]], "System Functions": [[57, "system-functions"]], "Process Control": [[57, "process-control"]], "The None Object": [[45, "the-none-object"]], "Data marshalling support": [[40, "data-marshalling-support"]], "List Objects": [[37, "list-objects"]], "The Very High Level Layer": [[64, "the-very-high-level-layer"]], "Unicode Objects and Codecs": [[62, "unicode-objects-and-codecs"]], "Unicode Objects": [[62, "unicode-objects"]], "Unicode Type": [[62, "unicode-type"]], "Unicode Character Properties": [[62, "unicode-character-properties"]], "Creating and accessing Unicode strings": [[62, "creating-and-accessing-unicode-strings"]], "Locale Encoding": [[62, "locale-encoding"]], "File System Encoding": [[62, "file-system-encoding"]], "wchar_t Support": [[62, "wchar-t-support"]], "Built-in Codecs": [[62, "built-in-codecs"]], "Generic Codecs": [[62, "generic-codecs"]], "UTF-8 Codecs": [[62, "utf-8-codecs"]], "UTF-32 Codecs": [[62, "utf-32-codecs"]], "UTF-16 Codecs": [[62, "utf-16-codecs"]], "UTF-7 Codecs": [[62, "utf-7-codecs"]], "Unicode-Escape Codecs": [[62, "unicode-escape-codecs"]], "Raw-Unicode-Escape Codecs": [[62, "raw-unicode-escape-codecs"]], "Latin-1 Codecs": [[62, "latin-1-codecs"]], "ASCII Codecs": [[62, "ascii-codecs"]], "Character Map Codecs": [[62, "character-map-codecs"]], "MBCS codecs for Windows": [[62, "mbcs-codecs-for-windows"]], "Methods & Slots": [[62, "methods-slots"]], "Methods and Slot Functions": [[62, "methods-and-slot-functions"]], "Number Protocol": [[46, "number-protocol"]], "Reference Counting": [[50, "reference-counting"]], "Weak Reference Objects": [[65, "weak-reference-objects"], [378, "weak-reference-objects"]], "Object Implementation Support": [[48, "object-implementation-support"]], "Reflection": [[51, "reflection"]], "Slice Objects": [[54, "slice-objects"]], "Ellipsis Object": [[54, "ellipsis-object"]], "Objects for Type Hinting": [[60, "objects-for-type-hinting"]], "Type Objects": [[59, "type-objects"], [61, "type-objects"], [324, "type-objects"]], "Creating Heap-Allocated Types": [[59, "creating-heap-allocated-types"]], "Iterator Objects": [[36, "iterator-objects"]], "Sequence Protocol": [[52, "sequence-protocol"]], "Mapping Protocol": [[39, "mapping-protocol"]], "Integer Objects": [[38, "integer-objects"]], "Utilities": [[63, "utilities"], [159, "utilities"]], "MemoryView objects": [[42, "index-0"]], "Common Object Structures": [[56, "common-object-structures"]], "Base object types and macros": [[56, "base-object-types-and-macros"]], "Implementing functions and methods": [[56, "implementing-functions-and-methods"]], "Accessing attributes of extension types": [[56, "accessing-attributes-of-extension-types"]], "Member flags": [[56, "member-flags"]], "Member types": [[56, "member-types"]], "Defining Getters and Setters": [[56, "defining-getters-and-setters"]], "Coding standards": [[34, "coding-standards"]], "Include Files": [[34, "include-files"]], "Useful macros": [[34, "useful-macros"]], "Objects, Types and Reference Counts": [[34, "objects-types-and-reference-counts"]], "Reference Count Details": [[34, "reference-count-details"]], "Types": [[34, "types"]], "Embedding Python": [[34, "embedding-python"], [436, "embedding-python"]], "Debugging Builds": [[34, "debugging-builds"]], "Instance Method Objects": [[43, "instance-method-objects"]], "Method Objects": [[43, "method-objects"], [415, "method-objects"]], "Object Protocol": [[47, "object-protocol"]], "Quick Reference": [[61, "quick-reference"]], "\u201ctp slots\u201d": [[61, "tp-slots"]], "sub-slots": [[61, "sub-slots"]], "slot typedefs": [[61, "slot-typedefs"]], "PyTypeObject Definition": [[61, "pytypeobject-definition"]], "PyObject Slots": [[61, "pyobject-slots"]], "PyVarObject Slots": [[61, "pyvarobject-slots"]], "PyTypeObject Slots": [[61, "pytypeobject-slots"]], "Static Types": [[61, "static-types"]], "Number Object Structures": [[61, "number-object-structures"]], "Mapping Object Structures": [[61, "mapping-object-structures"]], "Sequence Object Structures": [[61, "sequence-object-structures"]], "Buffer Object Structures": [[61, "buffer-object-structures"]], "Async Object Structures": [[61, "async-object-structures"]], "Slot Type typedefs": [[61, "slot-type-typedefs"]], "C API Stability": [[55, "c-api-stability"]], "Unstable C API": [[55, "unstable-c-api"]], "Stable Application Binary Interface": [[55, "stable-application-binary-interface"]], "Limited C API": [[55, "limited-c-api"]], "Stable ABI": [[55, "stable-abi"]], "Limited API Scope and Performance": [[55, "limited-api-scope-and-performance"]], "Limited API Caveats": [[55, "limited-api-caveats"]], "Platform Considerations": [[55, "platform-considerations"]], "Contents of Limited API": [[55, "contents-of-limited-api"]], "Python Initialization Configuration": [[33, "python-initialization-configuration"]], "PyWideStringList": [[33, "pywidestringlist"]], "PyStatus": [[33, "pystatus"]], "PyPreConfig": [[33, "pypreconfig"]], "Preinitialize Python with PyPreConfig": [[33, "preinitialize-python-with-pypreconfig"]], "PyConfig": [[33, "pyconfig"]], "Initialization with PyConfig": [[33, "initialization-with-pyconfig"]], "Isolated Configuration": [[33, "isolated-configuration"]], "Python Configuration": [[33, "python-configuration"]], "Python Path Configuration": [[33, "python-path-configuration"]], "Py_RunMain()": [[33, "py-runmain"]], "Py_GetArgcArgv()": [[33, "py-getargcargv"]], "Multi-Phase Initialization Private Provisional API": [[33, "multi-phase-initialization-private-provisional-api"]], "More on Modules": [[425, "more-on-modules"]], "Executing modules as scripts": [[425, "executing-modules-as-scripts"]], "The Module Search Path": [[425, "the-module-search-path"]], "\u201cCompiled\u201d Python files": [[425, "compiled-python-files"]], "Standard Modules": [[425, "standard-modules"]], "The dir() Function": [[425, "the-dir-function"]], "Packages": [[425, "packages"], [407, "packages"]], "Importing * From a Package": [[425, "importing-from-a-package"]], "Intra-package References": [[425, "intra-package-references"]], "Packages in Multiple Directories": [[425, "packages-in-multiple-directories"]], "The import system": [[407, "the-import-system"]], "importlib": [[407, "importlib"], [454, "importlib"], [453, "importlib"], [455, "importlib"], [455, "id3"], [449, "importlib"], [456, "importlib"], [456, "id6"], [458, "importlib"]], "Regular packages": [[407, "regular-packages"]], "Namespace packages": [[407, "namespace-packages"]], "Searching": [[407, "searching"]], "The module cache": [[407, "the-module-cache"]], "Finders and loaders": [[407, "finders-and-loaders"]], "Import hooks": [[407, "import-hooks"]], "The meta path": [[407, "the-meta-path"]], "Loading": [[407, "loading"]], "Loaders": [[407, "loaders"]], "Submodules": [[407, "submodules"]], "Module spec": [[407, "module-spec"]], "Import-related module attributes": [[407, "import-related-module-attributes"]], "module.__path__": [[407, "module-path"]], "Module reprs": [[407, "module-reprs"]], "Cached bytecode invalidation": [[407, "cached-bytecode-invalidation"]], "The Path Based Finder": [[407, "the-path-based-finder"]], "Path entry finders": [[407, "path-entry-finders"]], "Path entry finder protocol": [[407, "path-entry-finder-protocol"]], "Replacing the standard import system": [[407, "replacing-the-standard-import-system"]], "Package Relative Imports": [[407, "package-relative-imports"]], "Special considerations for __main__": [[407, "special-considerations-for-main"]], "__main__.__spec__": [[407, "main-spec"]], "Fancier Output Formatting": [[421, "fancier-output-formatting"]], "Formatted String Literals": [[421, "formatted-string-literals"]], "The String format() Method": [[421, "the-string-format-method"]], "Manual String Formatting": [[421, "manual-string-formatting"]], "Old string formatting": [[421, "old-string-formatting"]], "Reading and Writing Files": [[421, "reading-and-writing-files"]], "Methods of File Objects": [[421, "methods-of-file-objects"]], "Saving structured data with json": [[421, "saving-structured-data-with-json"]], "Interactive Input Editing and History Substitution": [[422, "interactive-input-editing-and-history-substitution"]], "Tab Completion and History Editing": [[422, "tab-completion-and-history-editing"]], "Alternatives to the Interactive Interpreter": [[422, "alternatives-to-the-interactive-interpreter"]], "Brief Tour of the Standard Library": [[426, "brief-tour-of-the-standard-library"]], "Operating System Interface": [[426, "operating-system-interface"]], "File Wildcards": [[426, "file-wildcards"]], "Command Line Arguments": [[426, "command-line-arguments"]], "Error Output Redirection and Program Termination": [[426, "error-output-redirection-and-program-termination"]], "String Pattern Matching": [[426, "string-pattern-matching"]], "Mathematics": [[426, "mathematics"]], "Internet Access": [[426, "internet-access"]], "Dates and Times": [[426, "dates-and-times"]], "Data Compression": [[426, "data-compression"]], "Performance Measurement": [[426, "performance-measurement"]], "Quality Control": [[426, "quality-control"]], "Batteries Included": [[426, "batteries-included"]], "The Python Language Reference": [[408, "the-python-language-reference"]], "Whetting Your Appetite": [[414, "whetting-your-appetite"]], "Using the Python Interpreter": [[423, "using-the-python-interpreter"]], "Invoking the Interpreter": [[423, "invoking-the-interpreter"]], "Argument Passing": [[423, "argument-passing"]], "Interactive Mode": [[423, "interactive-mode"], [413, "interactive-mode"]], "The Interpreter and Its Environment": [[423, "the-interpreter-and-its-environment"]], "Source Code Encoding": [[423, "source-code-encoding"]], "zoneinfo \u2014 IANA time zone support": [[400, "module-zoneinfo"]], "Using ZoneInfo": [[400, "using-zoneinfo"]], "Data sources": [[400, "data-sources"]], "Configuring the data sources": [[400, "configuring-the-data-sources"]], "Compile-time configuration": [[400, "compile-time-configuration"]], "Environment configuration": [[400, "environment-configuration"]], "Runtime configuration": [[400, "runtime-configuration"]], "The ZoneInfo class": [[400, "the-zoneinfo-class"]], "String representations": [[400, "string-representations"]], "Pickle serialization": [[400, "pickle-serialization"]], "Functions": [[400, "functions"], [388, "functions"], [388, "elementinclude-functions"], [381, "functions"], [344, "functions"], [359, "functions"], [324, "functions"], [318, "functions"], [301, "functions"], [238, "functions"], [168, "functions"], [166, "functions"]], "Globals": [[400, "globals"]], "Exceptions and warnings": [[400, "exceptions-and-warnings"]], "Alternate Implementations": [[409, "alternate-implementations"]], "Notation": [[409, "notation"]], "The Python Tutorial": [[420, "the-python-tutorial"]], "History and License": [[401, "history-and-license"]], "History of the software": [[401, "history-of-the-software"]], "Terms and conditions for accessing or otherwise using Python": [[401, "terms-and-conditions-for-accessing-or-otherwise-using-python"]], "PSF LICENSE AGREEMENT FOR PYTHON 3.13.0a0": [[401, "psf-license-agreement-for-python-release"]], "BEOPEN.COM LICENSE AGREEMENT FOR PYTHON 2.0": [[401, "beopen-com-license-agreement-for-python-2-0"]], "CNRI LICENSE AGREEMENT FOR PYTHON 1.6.1": [[401, "cnri-license-agreement-for-python-1-6-1"]], "CWI LICENSE AGREEMENT FOR PYTHON 0.9.0 THROUGH 1.2": [[401, "cwi-license-agreement-for-python-0-9-0-through-1-2"]], "ZERO-CLAUSE BSD LICENSE FOR CODE IN THE PYTHON 3.13.0a0 DOCUMENTATION": [[401, "zero-clause-bsd-license-for-code-in-the-python-release-documentation"]], "Licenses and Acknowledgements for Incorporated Software": [[401, "licenses-and-acknowledgements-for-incorporated-software"]], "Mersenne Twister": [[401, "mersenne-twister"]], "Asynchronous socket services": [[401, "asynchronous-socket-services"]], "Cookie management": [[401, "cookie-management"]], "Execution tracing": [[401, "execution-tracing"]], "UUencode and UUdecode functions": [[401, "uuencode-and-uudecode-functions"]], "XML Remote Procedure Calls": [[401, "xml-remote-procedure-calls"]], "test_epoll": [[401, "test-epoll"]], "Select kqueue": [[401, "select-kqueue"]], "SipHash24": [[401, "siphash24"]], "strtod and dtoa": [[401, "strtod-and-dtoa"]], "OpenSSL": [[401, "openssl"]], "expat": [[401, "expat"]], "libffi": [[401, "libffi"]], "zlib": [[401, "zlib"], [455, "zlib"], [452, "zlib"]], "cfuhash": [[401, "cfuhash"]], "libmpdec": [[401, "libmpdec"]], "W3C C14N test suite": [[401, "w3c-c14n-test-suite"]], "Errors and Exceptions": [[418, "errors-and-exceptions"]], "Syntax Errors": [[418, "syntax-errors"]], "Raising Exceptions": [[418, "raising-exceptions"]], "Exception Chaining": [[418, "exception-chaining"]], "User-defined Exceptions": [[418, "user-defined-exceptions"]], "Defining Clean-up Actions": [[418, "defining-clean-up-actions"]], "Predefined Clean-up Actions": [[418, "predefined-clean-up-actions"]], "Raising and Handling Multiple Unrelated Exceptions": [[418, "raising-and-handling-multiple-unrelated-exceptions"]], "Enriching Exceptions with Notes": [[418, "enriching-exceptions-with-notes"]], "Arithmetic conversions": [[405, "arithmetic-conversions"]], "Atoms": [[405, "atoms"]], "Identifiers (Names)": [[405, "atom-identifiers"]], "Parenthesized forms": [[405, "parenthesized-forms"]], "Displays for lists, sets and dictionaries": [[405, "displays-for-lists-sets-and-dictionaries"]], "List displays": [[405, "list-displays"]], "Set displays": [[405, "set-displays"]], "Dictionary displays": [[405, "dictionary-displays"]], "Generator expressions": [[405, "generator-expressions"]], "Yield expressions": [[405, "yield-expressions"]], "Generator-iterator methods": [[405, "generator-iterator-methods"]], "Asynchronous generator functions": [[405, "asynchronous-generator-functions"], [403, "asynchronous-generator-functions"]], "Asynchronous generator-iterator methods": [[405, "asynchronous-generator-iterator-methods"]], "Primaries": [[405, "primaries"]], "Attribute references": [[405, "attribute-references"]], "Subscriptions": [[405, "subscriptions"]], "Slicings": [[405, "slicings"]], "Calls": [[405, "calls"]], "Await expression": [[405, "await-expression"]], "The power operator": [[405, "the-power-operator"]], "Unary arithmetic and bitwise operations": [[405, "unary-arithmetic-and-bitwise-operations"]], "Binary arithmetic operations": [[405, "binary-arithmetic-operations"]], "Shifting operations": [[405, "shifting-operations"]], "Binary bitwise operations": [[405, "binary-bitwise-operations"]], "Value comparisons": [[405, "value-comparisons"]], "Membership test operations": [[405, "membership-test-operations"]], "Identity comparisons": [[405, "is-not"]], "Boolean operations": [[405, "boolean-operations"]], "Assignment expressions": [[405, "assignment-expressions"], [457, "assignment-expressions"]], "Conditional expressions": [[405, "conditional-expressions"]], "Lambdas": [[405, "lambda"]], "Expression lists": [[405, "expression-lists"]], "Evaluation order": [[405, "evaluation-order"]], "Operator precedence": [[405, "operator-precedence"]], "Floating Point Arithmetic:  Issues and Limitations": [[419, "floating-point-arithmetic-issues-and-limitations"]], "Representation Error": [[419, "representation-error"]], "Appendix": [[413, "appendix"]], "Error Handling": [[413, "error-handling"]], "Executable Python Scripts": [[413, "executable-python-scripts"]], "The Interactive Startup File": [[413, "the-interactive-startup-file"]], "The Customization Modules": [[413, "the-customization-modules"]], "Simple statements": [[411, "simple-statements"]], "Expression statements": [[411, "expression-statements"]], "Assignment statements": [[411, "assignment-statements"]], "Augmented assignment statements": [[411, "augmented-assignment-statements"]], "Annotated assignment statements": [[411, "annotated-assignment-statements"]], "The assert statement": [[411, "the-assert-statement"]], "The pass statement": [[411, "the-pass-statement"]], "The del statement": [[411, "the-del-statement"], [417, "the-del-statement"]], "The return statement": [[411, "the-return-statement"]], "The yield statement": [[411, "the-yield-statement"]], "The raise statement": [[411, "the-raise-statement"]], "The break statement": [[411, "the-break-statement"]], "The continue statement": [[411, "the-continue-statement"]], "The import statement": [[411, "the-import-statement"]], "Future statements": [[411, "future-statements"]], "The global statement": [[411, "the-global-statement"]], "The nonlocal statement": [[411, "the-nonlocal-statement"]], "The type statement": [[411, "the-type-statement"]], "Top-level components": [[412, "top-level-components"]], "Complete Python programs": [[412, "complete-python-programs"]], "File input": [[412, "file-input"]], "Interactive input": [[412, "interactive-input"]], "Expression input": [[412, "expression-input"]], "Virtual Environments and Packages": [[428, "virtual-environments-and-packages"]], "Creating Virtual Environments": [[428, "creating-virtual-environments"]], "Managing Packages with pip": [[428, "managing-packages-with-pip"]], "Compound statements": [[402, "compound-statements"]], "The if statement": [[402, "the-if-statement"]], "The while statement": [[402, "the-while-statement"]], "The for statement": [[402, "the-for-statement"]], "The try statement": [[402, "the-try-statement"]], "except clause": [[402, "except-clause"]], "except* clause": [[402, "except-star"]], "else clause": [[402, "else-clause"]], "finally clause": [[402, "finally-clause"]], "The with statement": [[402, "the-with-statement"]], "The match statement": [[402, "the-match-statement"]], "Guards": [[402, "guards"]], "Irrefutable Case Blocks": [[402, "irrefutable-case-blocks"]], "Patterns": [[402, "patterns"]], "OR Patterns": [[402, "or-patterns"]], "AS Patterns": [[402, "as-patterns"]], "Literal Patterns": [[402, "literal-patterns"]], "Capture Patterns": [[402, "capture-patterns"]], "Wildcard Patterns": [[402, "wildcard-patterns"]], "Value Patterns": [[402, "value-patterns"]], "Group Patterns": [[402, "group-patterns"]], "Sequence Patterns": [[402, "sequence-patterns"]], "Mapping Patterns": [[402, "mapping-patterns"]], "Class Patterns": [[402, "class-patterns"]], "Function definitions": [[402, "function-definitions"]], "Class definitions": [[402, "class-definitions"]], "Coroutines": [[402, "coroutines"], [403, "coroutines"], [133, "coroutines"]], "Coroutine function definition": [[402, "coroutine-function-definition"]], "The async for statement": [[402, "the-async-for-statement"]], "The async with statement": [[402, "the-async-with-statement"]], "Type parameter lists": [[402, "type-parameter-lists"]], "Generic functions": [[402, "generic-functions"]], "Generic classes": [[402, "generic-classes"]], "Generic type aliases": [[402, "generic-type-aliases"]], "zipapp \u2014 Manage executable Python zip archives": [[396, "module-zipapp"]], "Basic Example": [[396, "basic-example"]], "Command-Line Interface": [[396, "command-line-interface"], [397, "command-line-interface"], [365, "command-line-interface"], [345, "command-line-interface"], [337, "command-line-interface"], [293, "command-line-interface"]], "Python API": [[396, "python-api"]], "Specifying the Interpreter": [[396, "specifying-the-interpreter"]], "Creating Standalone Applications with zipapp": [[396, "creating-standalone-applications-with-zipapp"]], "Caveats": [[396, "caveats"]], "The Python Zip Application Archive Format": [[396, "the-python-zip-application-archive-format"]], "Execution model": [[404, "execution-model"]], "Structure of a program": [[404, "structure-of-a-program"]], "Naming and binding": [[404, "naming-and-binding"]], "Binding of names": [[404, "binding-of-names"]], "Resolution of names": [[404, "resolution-of-names"]], "Annotation scopes": [[404, "annotation-scopes"]], "Lazy evaluation": [[404, "lazy-evaluation"]], "Builtins and restricted execution": [[404, "builtins-and-restricted-execution"]], "Interaction with dynamic features": [[404, "interaction-with-dynamic-features"]], "Data model": [[403, "data-model"]], "Objects, values and types": [[403, "objects-values-and-types"]], "The standard type hierarchy": [[403, "the-standard-type-hierarchy"]], "None": [[403, "none"]], "NotImplemented": [[403, "notimplemented"]], "Ellipsis": [[403, "ellipsis"]], "numbers.Number": [[403, "numbers-number"]], "numbers.Integral": [[403, "numbers-integral"]], "numbers.Real (float)": [[403, "numbers-real-float"]], "numbers.Complex (complex)": [[403, "numbers-complex-complex"]], "Sequences": [[403, "sequences"]], "Immutable sequences": [[403, "immutable-sequences"]], "Mutable sequences": [[403, "mutable-sequences"]], "Set types": [[403, "set-types"]], "Mappings": [[403, "mappings"]], "Dictionaries": [[403, "dictionaries"], [417, "dictionaries"]], "Callable types": [[403, "callable-types"]], "User-defined functions": [[403, "user-defined-functions"]], "Instance methods": [[403, "instance-methods"]], "Generator functions": [[403, "generator-functions"]], "Coroutine functions": [[403, "coroutine-functions"]], "Built-in methods": [[403, "built-in-methods"]], "Classes": [[403, "classes"], [415, "classes"], [311, "classes"], [327, "classes"]], "Class Instances": [[403, "class-instances"]], "Custom classes": [[403, "custom-classes"]], "Class instances": [[403, "id2"]], "I/O objects (also known as file objects)": [[403, "i-o-objects-also-known-as-file-objects"]], "Internal types": [[403, "internal-types"]], "Code objects": [[403, "code-objects"]], "Frame objects": [[403, "frame-objects"]], "Traceback objects": [[403, "traceback-objects"]], "Slice objects": [[403, "slice-objects"]], "Static method objects": [[403, "static-method-objects"]], "Class method objects": [[403, "class-method-objects"]], "Special method names": [[403, "special-method-names"]], "Basic customization": [[403, "basic-customization"]], "Customizing attribute access": [[403, "customizing-attribute-access"]], "Customizing module attribute access": [[403, "customizing-module-attribute-access"]], "Implementing Descriptors": [[403, "implementing-descriptors"]], "Invoking Descriptors": [[403, "invoking-descriptors"]], "__slots__": [[403, "slots"], [447, "slots"]], "Customizing class creation": [[403, "customizing-class-creation"]], "Metaclasses": [[403, "metaclasses"]], "Resolving MRO entries": [[403, "resolving-mro-entries"]], "Determining the appropriate metaclass": [[403, "determining-the-appropriate-metaclass"]], "Preparing the class namespace": [[403, "preparing-the-class-namespace"]], "Executing the class body": [[403, "executing-the-class-body"]], "Creating the class object": [[403, "creating-the-class-object"]], "Uses for metaclasses": [[403, "uses-for-metaclasses"]], "Customizing instance and subclass checks": [[403, "customizing-instance-and-subclass-checks"]], "Emulating generic types": [[403, "emulating-generic-types"]], "The purpose of __class_getitem__": [[403, "the-purpose-of-class-getitem"]], "__class_getitem__ versus __getitem__": [[403, "class-getitem-versus-getitem"]], "Emulating callable objects": [[403, "emulating-callable-objects"]], "Emulating container types": [[403, "emulating-container-types"]], "Emulating numeric types": [[403, "emulating-numeric-types"]], "With Statement Context Managers": [[403, "with-statement-context-managers"]], "Customizing positional arguments in class pattern matching": [[403, "customizing-positional-arguments-in-class-pattern-matching"]], "Emulating buffer types": [[403, "emulating-buffer-types"]], "Special method lookup": [[403, "special-method-lookup"]], "Awaitable Objects": [[403, "awaitable-objects"]], "Asynchronous Iterators": [[403, "asynchronous-iterators"]], "Asynchronous Context Managers": [[403, "asynchronous-context-managers"]], "Brief Tour of the Standard Library \u2014 Part II": [[427, "brief-tour-of-the-standard-library-part-ii"]], "Output Formatting": [[427, "output-formatting"]], "Templating": [[427, "templating"]], "Working with Binary Data Record Layouts": [[427, "working-with-binary-data-record-layouts"]], "Multi-threading": [[427, "multi-threading"], [451, "multi-threading"], [246, "multi-threading"]], "Weak References": [[427, "weak-references"]], "Tools for Working with Lists": [[427, "tools-for-working-with-lists"]], "Decimal Floating Point Arithmetic": [[427, "decimal-floating-point-arithmetic"]], "Data Structures": [[417, "data-structures"]], "More on Lists": [[417, "more-on-lists"]], "Using Lists as Stacks": [[417, "using-lists-as-stacks"]], "Using Lists as Queues": [[417, "using-lists-as-queues"]], "List Comprehensions": [[417, "list-comprehensions"], [437, "list-comprehensions"]], "Nested List Comprehensions": [[417, "nested-list-comprehensions"]], "Tuples and Sequences": [[417, "tuples-and-sequences"]], "Sets": [[417, "sets"]], "Looping Techniques": [[417, "looping-techniques"]], "More on Conditions": [[417, "more-on-conditions"]], "Comparing Sequences and Other Types": [[417, "comparing-sequences-and-other-types"]], "An Informal Introduction to Python": [[424, "an-informal-introduction-to-python"]], "Using Python as a Calculator": [[424, "using-python-as-a-calculator"]], "Text": [[424, "text"]], "Lists": [[424, "lists"], [324, "lists"]], "First Steps Towards Programming": [[424, "first-steps-towards-programming"]], "zipfile \u2014 Work with ZIP archives": [[397, "module-zipfile"]], "ZipFile Objects": [[397, "zipfile-objects"]], "Path Objects": [[397, "path-objects"]], "PyZipFile Objects": [[397, "pyzipfile-objects"]], "ZipInfo Objects": [[397, "zipinfo-objects"]], "Command-line options": [[397, "command-line-options"], [365, "command-line-options"], [337, "command-line-options"]], "Decompression pitfalls": [[397, "decompression-pitfalls"]], "From file itself": [[397, "from-file-itself"]], "File System limitations": [[397, "file-system-limitations"]], "Resources limitations": [[397, "resources-limitations"]], "Interruption": [[397, "interruption"]], "Default behaviors of extraction": [[397, "default-behaviors-of-extraction"]], "Full Grammar specification": [[406, "full-grammar-specification"]], "Lexical analysis": [[410, "lexical-analysis"]], "Line structure": [[410, "line-structure"]], "Logical lines": [[410, "logical-lines"]], "Physical lines": [[410, "physical-lines"]], "Comments": [[410, "comments"]], "Encoding declarations": [[410, "encoding-declarations"]], "Explicit line joining": [[410, "explicit-line-joining"]], "Implicit line joining": [[410, "implicit-line-joining"]], "Blank lines": [[410, "blank-lines"]], "Indentation": [[410, "indentation"]], "Whitespace between tokens": [[410, "whitespace-between-tokens"]], "Other tokens": [[410, "other-tokens"]], "Identifiers and keywords": [[410, "identifiers"]], "Keywords": [[410, "keywords"]], "Soft Keywords": [[410, "soft-keywords"]], "Reserved classes of identifiers": [[410, "reserved-classes-of-identifiers"]], "String and Bytes literals": [[410, "string-and-bytes-literals"]], "Escape sequences": [[410, "escape-sequences"]], "String literal concatenation": [[410, "string-literal-concatenation"]], "Formatted string literals": [[410, "formatted-string-literals"]], "Numeric literals": [[410, "numeric-literals"]], "Integer literals": [[410, "integer-literals"]], "Floating point literals": [[410, "floating-point-literals"]], "Imaginary literals": [[410, "imaginary-literals"]], "Operators": [[410, "operators"], [279, "operators"], [247, "operators"], [247, "id1"], [247, "id2"]], "Delimiters": [[410, "delimiters"]], "zipimport \u2014 Import modules from Zip archives": [[398, "module-zipimport"]], "zipimporter Objects": [[398, "zipimporter-objects"]], "zlib \u2014 Compression compatible with gzip": [[399, "module-zlib"]], "More Control Flow Tools": [[416, "more-control-flow-tools"]], "if Statements": [[416, "if-statements"]], "for Statements": [[416, "for-statements"]], "The range() Function": [[416, "the-range-function"]], "break and continue Statements, and else Clauses on Loops": [[416, "break-and-continue-statements-and-else-clauses-on-loops"]], "pass Statements": [[416, "pass-statements"]], "match Statements": [[416, "match-statements"]], "Defining Functions": [[416, "defining-functions"]], "More on Defining Functions": [[416, "more-on-defining-functions"]], "Default Argument Values": [[416, "default-argument-values"]], "Keyword Arguments": [[416, "keyword-arguments"]], "Special parameters": [[416, "special-parameters"]], "Positional-or-Keyword Arguments": [[416, "positional-or-keyword-arguments"]], "Positional-Only Parameters": [[416, "positional-only-parameters"]], "Keyword-Only Arguments": [[416, "keyword-only-arguments"]], "Function Examples": [[416, "function-examples"]], "Recap": [[416, "recap"]], "Arbitrary Argument Lists": [[416, "arbitrary-argument-lists"]], "Unpacking Argument Lists": [[416, "unpacking-argument-lists"]], "Lambda Expressions": [[416, "lambda-expressions"]], "Documentation Strings": [[416, "documentation-strings"]], "Function Annotations": [[416, "function-annotations"]], "Intermezzo: Coding Style": [[416, "intermezzo-coding-style"]], "A Word About Names and Objects": [[415, "a-word-about-names-and-objects"]], "Python Scopes and Namespaces": [[415, "python-scopes-and-namespaces"]], "Scopes and Namespaces Example": [[415, "scopes-and-namespaces-example"]], "A First Look at Classes": [[415, "a-first-look-at-classes"]], "Class Definition Syntax": [[415, "class-definition-syntax"]], "Class Objects": [[415, "class-objects"], [294, "class-objects"]], "Instance Objects": [[415, "instance-objects"]], "Class and Instance Variables": [[415, "class-and-instance-variables"]], "Random Remarks": [[415, "random-remarks"]], "Inheritance": [[415, "inheritance"], [170, "inheritance"]], "Multiple Inheritance": [[415, "multiple-inheritance"]], "Private Variables": [[415, "private-variables"]], "Generator Expressions": [[415, "generator-expressions"]], "wave \u2014 Read and write WAV files": [[377, "module-wave"]], "Wave_read Objects": [[377, "wave-read-objects"]], "Wave_write Objects": [[377, "wave-write-objects"]], "unittest.mock \u2014 mock object library": [[366, "module-unittest.mock"]], "Quick Guide": [[366, "quick-guide"]], "The Mock Class": [[366, "the-mock-class"]], "Calling": [[366, "calling"]], "Deleting Attributes": [[366, "deleting-attributes"]], "Mock names and the name attribute": [[366, "mock-names-and-the-name-attribute"]], "Attaching Mocks as Attributes": [[366, "attaching-mocks-as-attributes"]], "The patchers": [[366, "the-patchers"]], "patch": [[366, "patch"]], "patch.object": [[366, "patch-object"]], "patch.dict": [[366, "patch-dict"]], "patch.multiple": [[366, "patch-multiple"]], "patch methods: start and stop": [[366, "patch-methods-start-and-stop"]], "patch builtins": [[366, "patch-builtins"]], "TEST_PREFIX": [[366, "test-prefix"]], "Nesting Patch Decorators": [[366, "nesting-patch-decorators"]], "Where to patch": [[366, "where-to-patch"]], "Patching Descriptors and Proxy Objects": [[366, "patching-descriptors-and-proxy-objects"]], "MagicMock and magic method support": [[366, "magicmock-and-magic-method-support"]], "Mocking Magic Methods": [[366, "mocking-magic-methods"]], "Magic Mock": [[366, "magic-mock"]], "Helpers": [[366, "helpers"]], "sentinel": [[366, "sentinel"]], "DEFAULT": [[366, "default"]], "call": [[366, "call"]], "create_autospec": [[366, "create-autospec"]], "ANY": [[366, "any"]], "FILTER_DIR": [[366, "filter-dir"]], "mock_open": [[366, "mock-open"]], "Autospeccing": [[366, "autospeccing"]], "Sealing mocks": [[366, "sealing-mocks"]], "xml.dom.minidom \u2014 Minimal DOM implementation": [[386, "module-xml.dom.minidom"]], "DOM Objects": [[386, "dom-objects"]], "DOM Example": [[386, "dom-example"]], "minidom and the DOM standard": [[386, "minidom-and-the-dom-standard"]], "Unix Specific Services": [[368, "unix-specific-services"]], "venv \u2014 Creation of virtual environments": [[375, "module-venv"]], "Creating virtual environments": [[375, "creating-virtual-environments"]], "How venvs work": [[375, "how-venvs-work"]], "API": [[375, "api"], [359, "api"]], "An example of extending EnvBuilder": [[375, "an-example-of-extending-envbuilder"]], "winsound \u2014 Sound-playing interface for Windows": [[382, "module-winsound"]], "xml.sax \u2014 Support for SAX2 parsers": [[389, "module-xml.sax"]], "SAXException Objects": [[389, "saxexception-objects"]], "MS Windows Specific Services": [[380, "ms-windows-specific-services"]], "xmlrpc.client \u2014 XML-RPC client access": [[394, "module-xmlrpc.client"]], "ServerProxy Objects": [[394, "serverproxy-objects"]], "Binary Objects": [[394, "binary-objects"]], "Fault Objects": [[394, "fault-objects"]], "ProtocolError Objects": [[394, "protocolerror-objects"]], "MultiCall Objects": [[394, "multicall-objects"]], "Convenience Functions": [[394, "convenience-functions"]], "Example of Client Usage": [[394, "example-of-client-usage"]], "Example of Client and Server Usage": [[394, "example-of-client-and-server-usage"]], "weakref \u2014 Weak references": [[378, "module-weakref"]], "Finalizer Objects": [[378, "finalizer-objects"]], "Comparing finalizers with __del__() methods": [[378, "comparing-finalizers-with-del-methods"]], "xml.dom.pulldom \u2014 Support for building partial DOM trees": [[387, "module-xml.dom.pulldom"]], "DOMEventStream Objects": [[387, "domeventstream-objects"]], "XML Processing Modules": [[384, "module-xml"]], "XML vulnerabilities": [[384, "xml-vulnerabilities"]], "The defusedxml Package": [[384, "the-defusedxml-package"]], "typing \u2014 Support for type hints": [[363, "typing-support-for-type-hints"]], "Relevant PEPs": [[363, "relevant-peps"]], "Type aliases": [[363, "type-aliases"]], "NewType": [[363, "newtype"]], "Annotating callable objects": [[363, "annotating-callable-objects"]], "Generics": [[363, "generics"]], "Annotating tuples": [[363, "annotating-tuples"]], "The type of class objects": [[363, "the-type-of-class-objects"]], "User-defined generic types": [[363, "user-defined-generic-types"]], "The Any type": [[363, "the-any-type"]], "Nominal vs structural subtyping": [[363, "nominal-vs-structural-subtyping"]], "Module contents": [[363, "module-contents"], [315, "module-contents"], [318, "module-contents"], [316, "module-contents"], [170, "module-contents"]], "Special typing primitives": [[363, "special-typing-primitives"]], "Special types": [[363, "special-types"]], "Special forms": [[363, "special-forms"]], "Building generic types and type aliases": [[363, "building-generic-types-and-type-aliases"]], "Other special directives": [[363, "other-special-directives"]], "ABCs for working with IO": [[363, "abcs-for-working-with-io"]], "Functions and decorators": [[363, "functions-and-decorators"]], "Recognised parameters for field specifiers": [[363, "id7"]], "Introspection helpers": [[363, "introspection-helpers"]], "Constant": [[363, "constant"]], "Deprecated aliases": [[363, "deprecated-aliases"]], "Aliases to built-in types": [[363, "aliases-to-built-in-types"]], "Aliases to types in collections": [[363, "aliases-to-types-in-collections"]], "Aliases to other concrete types": [[363, "aliases-to-other-concrete-types"]], "Aliases to container ABCs in collections.abc": [[363, "aliases-to-container-abcs-in-collections-abc"]], "Aliases to asynchronous ABCs in collections.abc": [[363, "aliases-to-asynchronous-abcs-in-collections-abc"]], "Aliases to other ABCs in collections.abc": [[363, "aliases-to-other-abcs-in-collections-abc"]], "Aliases to contextlib ABCs": [[363, "aliases-to-contextlib-abcs"]], "Deprecation Timeline of Major Features": [[363, "deprecation-timeline-of-major-features"]], "urllib.robotparser \u2014  Parser for robots.txt": [[373, "module-urllib.robotparser"]], "urllib.parse \u2014 Parse URLs into components": [[371, "module-urllib.parse"]], "URL Parsing": [[371, "url-parsing"]], "URL parsing security": [[371, "url-parsing-security"]], "Parsing ASCII Encoded Bytes": [[371, "parsing-ascii-encoded-bytes"]], "Structured Parse Results": [[371, "structured-parse-results"]], "URL Quoting": [[371, "url-quoting"]], "webbrowser \u2014 Convenient web-browser controller": [[379, "module-webbrowser"]], "Browser Controller Objects": [[379, "browser-controller-objects"]], "warnings \u2014 Warning control": [[376, "module-warnings"]], "Warning Categories": [[376, "warning-categories"]], "The Warnings Filter": [[376, "the-warnings-filter"]], "Describing Warning Filters": [[376, "describing-warning-filters"]], "Default Warning Filter": [[376, "default-warning-filter"]], "Overriding the default filter": [[376, "overriding-the-default-filter"]], "Temporarily Suppressing Warnings": [[376, "temporarily-suppressing-warnings"]], "Testing Warnings": [[376, "testing-warnings"]], "Updating Code For New Versions of Dependencies": [[376, "updating-code-for-new-versions-of-dependencies"]], "Available Functions": [[376, "available-functions"]], "Available Context Managers": [[376, "available-context-managers"]], "unicodedata \u2014 Unicode Database": [[364, "module-unicodedata"]], "xml.sax.saxutils \u2014 SAX Utilities": [[392, "module-xml.sax.saxutils"]], "xmlrpc.server \u2014 Basic XML-RPC servers": [[395, "module-xmlrpc.server"]], "SimpleXMLRPCServer Objects": [[395, "simplexmlrpcserver-objects"]], "SimpleXMLRPCServer Example": [[395, "simplexmlrpcserver-example"]], "CGIXMLRPCRequestHandler": [[395, "cgixmlrpcrequesthandler"]], "Documenting XMLRPC server": [[395, "documenting-xmlrpc-server"]], "DocXMLRPCServer Objects": [[395, "docxmlrpcserver-objects"]], "DocCGIXMLRPCRequestHandler": [[395, "doccgixmlrpcrequesthandler"]], "unittest.mock \u2014 getting started": [[367, "unittest-mock-getting-started"]], "Using Mock": [[367, "using-mock"]], "Mock Patching Methods": [[367, "mock-patching-methods"]], "Mock for Method Calls on an Object": [[367, "mock-for-method-calls-on-an-object"]], "Mocking Classes": [[367, "mocking-classes"]], "Naming your mocks": [[367, "naming-your-mocks"]], "Tracking all Calls": [[367, "tracking-all-calls"]], "Setting Return Values and Attributes": [[367, "setting-return-values-and-attributes"]], "Raising exceptions with mocks": [[367, "raising-exceptions-with-mocks"]], "Side effect functions and iterables": [[367, "side-effect-functions-and-iterables"]], "Mocking asynchronous iterators": [[367, "mocking-asynchronous-iterators"]], "Mocking asynchronous context manager": [[367, "mocking-asynchronous-context-manager"]], "Creating a Mock from an Existing Object": [[367, "creating-a-mock-from-an-existing-object"]], "Using side_effect to return per file content": [[367, "using-side-effect-to-return-per-file-content"]], "Patch Decorators": [[367, "patch-decorators"]], "Further Examples": [[367, "further-examples"]], "Mocking chained calls": [[367, "mocking-chained-calls"]], "Partial mocking": [[367, "partial-mocking"]], "Mocking a Generator Method": [[367, "mocking-a-generator-method"]], "Applying the same patch to every test method": [[367, "applying-the-same-patch-to-every-test-method"]], "Mocking Unbound Methods": [[367, "mocking-unbound-methods"]], "Checking multiple calls with mock": [[367, "checking-multiple-calls-with-mock"]], "Coping with mutable arguments": [[367, "coping-with-mutable-arguments"]], "Nesting Patches": [[367, "nesting-patches"]], "Mocking a dictionary with MagicMock": [[367, "mocking-a-dictionary-with-magicmock"]], "Mock subclasses and their attributes": [[367, "mock-subclasses-and-their-attributes"]], "Mocking imports with patch.dict": [[367, "mocking-imports-with-patch-dict"]], "Tracking order of calls and less verbose call assertions": [[367, "tracking-order-of-calls-and-less-verbose-call-assertions"]], "More complex argument matching": [[367, "more-complex-argument-matching"]], "xmlrpc \u2014 XMLRPC server and client modules": [[393, "xmlrpc-xmlrpc-server-and-client-modules"]], "wsgiref \u2014 WSGI Utilities and Reference Implementation": [[383, "module-wsgiref"]], "wsgiref.util \u2013 WSGI environment utilities": [[383, "module-wsgiref.util"]], "wsgiref.headers \u2013 WSGI response header tools": [[383, "module-wsgiref.headers"]], "wsgiref.simple_server \u2013 a simple WSGI HTTP server": [[383, "module-wsgiref.simple_server"]], "wsgiref.validate \u2014 WSGI conformance checker": [[383, "module-wsgiref.validate"]], "wsgiref.handlers \u2013 server/gateway base classes": [[383, "module-wsgiref.handlers"]], "wsgiref.types \u2013 WSGI types for static type checking": [[383, "module-wsgiref.types"]], "urllib.request \u2014 Extensible library for opening URLs": [[372, "module-urllib.request"]], "Request Objects": [[372, "request-objects"]], "OpenerDirector Objects": [[372, "openerdirector-objects"]], "BaseHandler Objects": [[372, "basehandler-objects"]], "HTTPRedirectHandler Objects": [[372, "httpredirecthandler-objects"]], "HTTPCookieProcessor Objects": [[372, "httpcookieprocessor-objects"]], "ProxyHandler Objects": [[372, "proxyhandler-objects"]], "HTTPPasswordMgr Objects": [[372, "httppasswordmgr-objects"]], "HTTPPasswordMgrWithPriorAuth Objects": [[372, "httppasswordmgrwithpriorauth-objects"]], "AbstractBasicAuthHandler Objects": [[372, "abstractbasicauthhandler-objects"]], "HTTPBasicAuthHandler Objects": [[372, "httpbasicauthhandler-objects"]], "ProxyBasicAuthHandler Objects": [[372, "proxybasicauthhandler-objects"]], "AbstractDigestAuthHandler Objects": [[372, "abstractdigestauthhandler-objects"]], "HTTPDigestAuthHandler Objects": [[372, "httpdigestauthhandler-objects"]], "ProxyDigestAuthHandler Objects": [[372, "proxydigestauthhandler-objects"]], "HTTPHandler Objects": [[372, "httphandler-objects"]], "HTTPSHandler Objects": [[372, "httpshandler-objects"]], "FileHandler Objects": [[372, "filehandler-objects"]], "DataHandler Objects": [[372, "datahandler-objects"]], "FTPHandler Objects": [[372, "ftphandler-objects"]], "CacheFTPHandler Objects": [[372, "cacheftphandler-objects"]], "UnknownHandler Objects": [[372, "unknownhandler-objects"]], "HTTPErrorProcessor Objects": [[372, "httperrorprocessor-objects"]], "Legacy interface": [[372, "legacy-interface"]], "urllib.request Restrictions": [[372, "urllib-request-restrictions"]], "urllib.response \u2014 Response classes used by urllib": [[372, "module-urllib.response"]], "urllib.error \u2014 Exception classes raised by urllib.request": [[370, "module-urllib.error"]], "unittest \u2014 Unit testing framework": [[365, "module-unittest"]], "Basic example": [[365, "basic-example"]], "Test Discovery": [[365, "test-discovery"]], "Organizing test code": [[365, "organizing-test-code"]], "Re-using old test code": [[365, "re-using-old-test-code"]], "Skipping tests and expected failures": [[365, "skipping-tests-and-expected-failures"]], "Distinguishing test iterations using subtests": [[365, "distinguishing-test-iterations-using-subtests"]], "Classes and functions": [[365, "classes-and-functions"], [243, "classes-and-functions"]], "Test cases": [[365, "test-cases"]], "Grouping tests": [[365, "grouping-tests"]], "Loading and running tests": [[365, "loading-and-running-tests"]], "load_tests Protocol": [[365, "load-tests-protocol"]], "Class and Module Fixtures": [[365, "class-and-module-fixtures"]], "setUpClass and tearDownClass": [[365, "setupclass-and-teardownclass"]], "setUpModule and tearDownModule": [[365, "setupmodule-and-teardownmodule"]], "xml.etree.ElementTree \u2014 The ElementTree XML API": [[388, "module-xml.etree.ElementTree"]], "XML tree and elements": [[388, "xml-tree-and-elements"]], "Parsing XML": [[388, "parsing-xml"]], "Pull API for non-blocking parsing": [[388, "pull-api-for-non-blocking-parsing"]], "Finding interesting elements": [[388, "finding-interesting-elements"]], "Modifying an XML File": [[388, "modifying-an-xml-file"]], "Building XML documents": [[388, "building-xml-documents"]], "Parsing XML with Namespaces": [[388, "parsing-xml-with-namespaces"]], "XPath support": [[388, "xpath-support"]], "Supported XPath syntax": [[388, "supported-xpath-syntax"]], "XInclude support": [[388, "xinclude-support"]], "Element Objects": [[388, "element-objects"], [385, "element-objects"]], "ElementTree Objects": [[388, "elementtree-objects"]], "QName Objects": [[388, "qname-objects"]], "TreeBuilder Objects": [[388, "treebuilder-objects"]], "XMLParser Objects": [[388, "xmlparser-objects"], [296, "xmlparser-objects"]], "XMLPullParser Objects": [[388, "xmlpullparser-objects"]], "xml.dom \u2014 The Document Object Model API": [[385, "module-xml.dom"]], "Module Contents": [[385, "module-contents"], [301, "module-contents"], [200, "module-contents"], [164, "module-contents"]], "Objects in the DOM": [[385, "objects-in-the-dom"]], "DOMImplementation Objects": [[385, "domimplementation-objects"]], "Node Objects": [[385, "node-objects"]], "NodeList Objects": [[385, "nodelist-objects"]], "DocumentType Objects": [[385, "documenttype-objects"]], "Document Objects": [[385, "document-objects"]], "Attr Objects": [[385, "attr-objects"]], "NamedNodeMap Objects": [[385, "namednodemap-objects"]], "Comment Objects": [[385, "comment-objects"]], "Text and CDATASection Objects": [[385, "text-and-cdatasection-objects"]], "ProcessingInstruction Objects": [[385, "processinginstruction-objects"]], "Conformance": [[385, "conformance"]], "Type Mapping": [[385, "type-mapping"]], "Accessor Methods": [[385, "accessor-methods"]], "uuid \u2014 UUID objects according to RFC 4122": [[374, "module-uuid"]], "Command-Line Example": [[374, "command-line-example"]], "winreg \u2014 Windows registry access": [[381, "module-winreg"]], "HKEY_* Constants": [[381, "hkey-constants"]], "Access Rights": [[381, "access-rights"]], "64-bit Specific": [[381, "bit-specific"]], "Value Types": [[381, "value-types"]], "Registry Handle Objects": [[381, "registry-handle-objects"]], "xml.sax.handler \u2014 Base classes for SAX handlers": [[390, "module-xml.sax.handler"]], "ContentHandler Objects": [[390, "contenthandler-objects"]], "DTDHandler Objects": [[390, "dtdhandler-objects"]], "EntityResolver Objects": [[390, "entityresolver-objects"]], "ErrorHandler Objects": [[390, "errorhandler-objects"]], "LexicalHandler Objects": [[390, "lexicalhandler-objects"]], "xml.sax.xmlreader \u2014 Interface for XML parsers": [[391, "module-xml.sax.xmlreader"]], "XMLReader Objects": [[391, "xmlreader-objects"]], "IncrementalParser Objects": [[391, "incrementalparser-objects"]], "Locator Objects": [[391, "locator-objects"]], "InputSource Objects": [[391, "inputsource-objects"]], "The Attributes Interface": [[391, "the-attributes-interface"]], "The AttributesNS Interface": [[391, "the-attributesns-interface"]], "urllib \u2014 URL handling modules": [[369, "module-urllib"]], "time \u2014 Time access and conversions": [[344, "module-time"]], "Clock ID Constants": [[344, "clock-id-constants"]], "Timezone Constants": [[344, "timezone-constants"]], "tkinter.dnd \u2014 Drag and drop support": [[349, "module-tkinter.dnd"]], "tkinter.messagebox \u2014 Tkinter message prompts": [[351, "module-tkinter.messagebox"]], "symtable \u2014 Access to the compiler\u2019s symbol tables": [[330, "module-symtable"]], "Generating Symbol Tables": [[330, "generating-symbol-tables"]], "Examining Symbol Tables": [[330, "examining-symbol-tables"]], "traceback \u2014 Print or retrieve a stack traceback": [[358, "module-traceback"]], "TracebackException Objects": [[358, "tracebackexception-objects"]], "StackSummary Objects": [[358, "stacksummary-objects"]], "FrameSummary Objects": [[358, "framesummary-objects"]], "Traceback Examples": [[358, "traceback-examples"]], "tomllib \u2014 Parse TOML files": [[356, "module-tomllib"]], "Conversion Table": [[356, "conversion-table"]], "tracemalloc \u2014 Trace memory allocations": [[359, "module-tracemalloc"]], "Display the top 10": [[359, "display-the-top-10"]], "Compute differences": [[359, "compute-differences"]], "Get the traceback of a memory block": [[359, "get-the-traceback-of-a-memory-block"]], "Pretty top": [[359, "pretty-top"]], "Record the current and peak size of all traced memory blocks": [[359, "record-the-current-and-peak-size-of-all-traced-memory-blocks"]], "DomainFilter": [[359, "domainfilter"]], "Filter": [[359, "filter"]], "Frame": [[359, "frame"]], "Snapshot": [[359, "snapshot"]], "Statistic": [[359, "statistic"]], "StatisticDiff": [[359, "statisticdiff"]], "Trace": [[359, "trace"]], "Traceback": [[359, "traceback"]], "tkinter.ttk \u2014 Tk themed widgets": [[353, "module-tkinter.ttk"]], "Using Ttk": [[353, "using-ttk"]], "Ttk Widgets": [[353, "ttk-widgets"]], "Widget": [[353, "widget"]], "Standard Options": [[353, "standard-options"]], "Scrollable Widget Options": [[353, "scrollable-widget-options"]], "Label Options": [[353, "label-options"]], "Compatibility Options": [[353, "compatibility-options"]], "Widget States": [[353, "widget-states"]], "ttk.Widget": [[353, "ttk-widget"]], "Combobox": [[353, "combobox"]], "Options": [[353, "options"], [353, "id1"], [353, "id3"], [353, "id5"], [353, "id6"], [353, "id7"]], "Virtual events": [[353, "virtual-events"], [353, "id2"]], "ttk.Combobox": [[353, "ttk-combobox"]], "Spinbox": [[353, "spinbox"]], "ttk.Spinbox": [[353, "ttk-spinbox"]], "Notebook": [[353, "notebook"]], "Tab Options": [[353, "tab-options"]], "Tab Identifiers": [[353, "tab-identifiers"]], "Virtual Events": [[353, "id4"], [353, "id8"]], "ttk.Notebook": [[353, "ttk-notebook"]], "Progressbar": [[353, "progressbar"]], "ttk.Progressbar": [[353, "ttk-progressbar"]], "Separator": [[353, "separator"]], "Sizegrip": [[353, "sizegrip"]], "Platform-specific notes": [[353, "platform-specific-notes"]], "Bugs": [[353, "bugs"]], "Treeview": [[353, "treeview"]], "Item Options": [[353, "item-options"]], "Tag Options": [[353, "tag-options"]], "Column Identifiers": [[353, "column-identifiers"]], "ttk.Treeview": [[353, "ttk-treeview"]], "Ttk Styling": [[353, "ttk-styling"]], "Layouts": [[353, "layouts"]], "turtle \u2014 Turtle graphics": [[361, "module-turtle"]], "Get started": [[361, "get-started"]], "Turtle star": [[361, null]], "Starting a turtle environment": [[361, "starting-a-turtle-environment"]], "Basic drawing": [[361, "basic-drawing"]], "Pen control": [[361, "pen-control"], [361, "id1"]], "The turtle\u2019s position": [[361, "the-turtle-s-position"]], "Making algorithmic patterns": [[361, "making-algorithmic-patterns"]], "How to\u2026": [[361, "how-to"]], "Get started as quickly as possible": [[361, "get-started-as-quickly-as-possible"]], "Use the turtle module namespace": [[361, "use-the-turtle-module-namespace"]], "Use turtle graphics in a script": [[361, "use-turtle-graphics-in-a-script"]], "Use object-oriented turtle graphics": [[361, "use-object-oriented-turtle-graphics"]], "Turtle graphics reference": [[361, "turtle-graphics-reference"]], "Turtle methods": [[361, "turtle-methods"]], "Methods of TurtleScreen/Screen": [[361, "methods-of-turtlescreen-screen"]], "Methods of RawTurtle/Turtle and corresponding functions": [[361, "methods-of-rawturtle-turtle-and-corresponding-functions"]], "Turtle motion": [[361, "turtle-motion"]], "Tell Turtle\u2019s state": [[361, "tell-turtle-s-state"]], "Settings for measurement": [[361, "settings-for-measurement"]], "Drawing state": [[361, "drawing-state"]], "Color control": [[361, "color-control"]], "Filling": [[361, "filling"]], "More drawing control": [[361, "more-drawing-control"]], "Turtle state": [[361, "turtle-state"]], "Visibility": [[361, "visibility"]], "Appearance": [[361, "appearance"]], "Using events": [[361, "using-events"]], "Special Turtle methods": [[361, "special-turtle-methods"]], "Compound shapes": [[361, "compound-shapes"]], "Methods of TurtleScreen/Screen and corresponding functions": [[361, "methods-of-turtlescreen-screen-and-corresponding-functions"]], "Window control": [[361, "window-control"]], "Animation control": [[361, "animation-control"]], "Using screen events": [[361, "using-screen-events"]], "Input methods": [[361, "input-methods"]], "Settings and special methods": [[361, "settings-and-special-methods"]], "Methods specific to Screen, not inherited from TurtleScreen": [[361, "methods-specific-to-screen-not-inherited-from-turtlescreen"]], "Public classes": [[361, "public-classes"]], "Explanation": [[361, "explanation"], [320, "explanation"]], "Help and configuration": [[361, "help-and-configuration"]], "How to use help": [[361, "how-to-use-help"]], "Translation of docstrings into different languages": [[361, "translation-of-docstrings-into-different-languages"]], "How to configure Screen and Turtles": [[361, "how-to-configure-screen-and-turtles"]], "turtledemo \u2014 Demo scripts": [[361, "module-turtledemo"]], "Changes since Python 2.6": [[361, "changes-since-python-2-6"]], "Changes since Python 3.0": [[361, "changes-since-python-3-0"]], "types \u2014 Dynamic type creation and names for built-in types": [[362, "module-types"]], "Dynamic Type Creation": [[362, "dynamic-type-creation"]], "Standard Interpreter Types": [[362, "standard-interpreter-types"]], "Additional Utility Classes and Functions": [[362, "additional-utility-classes-and-functions"]], "Coroutine Utility Functions": [[362, "coroutine-utility-functions"]], "sysconfig \u2014 Provide access to Python\u2019s configuration information": [[334, "module-sysconfig"]], "Configuration variables": [[334, "configuration-variables"]], "Installation paths": [[334, "installation-paths"]], "Other functions": [[334, "other-functions"], [318, "other-functions"], [308, "other-functions"]], "Using sysconfig as a script": [[334, "using-sysconfig-as-a-script"]], "test \u2014 Regression tests package for Python": [[340, "module-test"]], "Writing Unit Tests for the test package": [[340, "writing-unit-tests-for-the-test-package"]], "Running tests using the command-line interface": [[340, "running-tests-using-the-command-line-interface"]], "test.support \u2014 Utilities for the Python test suite": [[340, "module-test.support"]], "test.support.socket_helper \u2014 Utilities for socket tests": [[340, "module-test.support.socket_helper"]], "test.support.script_helper \u2014 Utilities for the Python execution tests": [[340, "module-test.support.script_helper"]], "test.support.bytecode_helper \u2014 Support tools for testing correct bytecode generation": [[340, "module-test.support.bytecode_helper"]], "test.support.threading_helper \u2014 Utilities for threading tests": [[340, "module-test.support.threading_helper"]], "test.support.os_helper \u2014 Utilities for os tests": [[340, "module-test.support.os_helper"]], "test.support.import_helper \u2014 Utilities for import tests": [[340, "module-test.support.import_helper"]], "test.support.warnings_helper \u2014 Utilities for warnings tests": [[340, "module-test.support.warnings_helper"]], "timeit \u2014 Measure execution time of small code snippets": [[345, "module-timeit"]], "Basic Examples": [[345, "basic-examples"], [225, "basic-examples"]], "Python Interface": [[345, "python-interface"]], "Graphical User Interfaces with Tk": [[346, "graphical-user-interfaces-with-tk"]], "tkinter.font \u2014 Tkinter font wrapper": [[350, "module-tkinter.font"]], "threading \u2014 Thread-based parallelism": [[343, "module-threading"]], "Thread-Local Data": [[343, "thread-local-data"]], "Thread Objects": [[343, "thread-objects"]], "Lock Objects": [[343, "lock-objects"]], "RLock Objects": [[343, "rlock-objects"]], "Condition Objects": [[343, "condition-objects"]], "Semaphore Objects": [[343, "semaphore-objects"]], "Semaphore Example": [[343, "semaphore-example"]], "Event Objects": [[343, "event-objects"]], "Timer Objects": [[343, "timer-objects"]], "Barrier Objects": [[343, "barrier-objects"]], "Using locks, conditions, and semaphores in the with statement": [[343, "using-locks-conditions-and-semaphores-in-the-with-statement"]], "tkinter \u2014 Python interface to Tcl/Tk": [[347, "module-tkinter"]], "Architecture": [[347, "architecture"]], "Tkinter Modules": [[347, "tkinter-modules"]], "Tkinter Life Preserver": [[347, "tkinter-life-preserver"]], "A Hello World Program": [[347, "a-hello-world-program"]], "Important Tk Concepts": [[347, "important-tk-concepts"]], "Understanding How Tkinter Wraps Tcl/Tk": [[347, "understanding-how-tkinter-wraps-tcl-tk"]], "How do I\u2026? What option does\u2026?": [[347, "how-do-i-what-option-does"]], "Navigating the Tcl/Tk Reference Manual": [[347, "navigating-the-tcl-tk-reference-manual"]], "Threading model": [[347, "threading-model"]], "Handy Reference": [[347, "handy-reference"]], "Setting Options": [[347, "setting-options"]], "The Packer": [[347, "the-packer"]], "Packer Options": [[347, "packer-options"]], "Coupling Widget Variables": [[347, "coupling-widget-variables"]], "The Window Manager": [[347, "the-window-manager"]], "Tk Option Data Types": [[347, "tk-option-data-types"]], "Bindings and Events": [[347, "bindings-and-events"]], "The index Parameter": [[347, "the-index-parameter"]], "Images": [[347, "images"]], "File Handlers": [[347, "file-handlers"]], "tty \u2014 Terminal control functions": [[360, "module-tty"]], "trace \u2014 Trace or track Python statement execution": [[357, "module-trace"]], "Main options": [[357, "main-options"]], "Modifiers": [[357, "modifiers"]], "Filters": [[357, "filters"]], "Programmatic Interface": [[357, "programmatic-interface"], [283, "programmatic-interface"]], "The initialization of the sys.path module search path": [[333, "the-initialization-of-the-sys-path-module-search-path"]], "Virtual environments": [[333, "virtual-environments"], [436, "virtual-environments"]], "_pth files": [[333, "pth-files"]], "Embedded Python": [[333, "embedded-python"]], "tkinter.colorchooser \u2014 Color choosing dialog": [[348, "module-tkinter.colorchooser"]], "tempfile \u2014 Generate temporary files and directories": [[338, "module-tempfile"]], "Deprecated functions and variables": [[338, "deprecated-functions-and-variables"]], "sys \u2014 System-specific parameters and functions": [[331, "module-sys"]], "Attributes of the float_info named tuple": [[331, "id2"]], "syslog \u2014 Unix syslog library routines": [[335, "module-syslog"]], "Simple example": [[335, "simple-example"]], "termios \u2014 POSIX style tty control": [[339, "module-termios"]], "tokenize \u2014 Tokenizer for Python source": [[355, "module-tokenize"]], "Tokenizing Input": [[355, "tokenizing-input"]], "tkinter.scrolledtext \u2014 Scrolled Text Widget": [[352, "module-tkinter.scrolledtext"]], "textwrap \u2014 Text wrapping and filling": [[342, "module-textwrap"]], "tarfile \u2014 Read and write tar archive files": [[337, "module-tarfile"]], "TarFile Objects": [[337, "tarfile-objects"]], "TarInfo Objects": [[337, "tarinfo-objects"]], "Extraction filters": [[337, "extraction-filters"]], "Default named filters": [[337, "default-named-filters"]], "Filter errors": [[337, "filter-errors"]], "Hints for further verification": [[337, "hints-for-further-verification"]], "Supporting older Python versions": [[337, "supporting-older-python-versions"]], "Stateful extraction filter example": [[337, "stateful-extraction-filter-example"]], "Supported tar formats": [[337, "supported-tar-formats"]], "Unicode issues": [[337, "unicode-issues"]], "sys.monitoring \u2014 Execution event monitoring": [[332, "module-sys.monitoring"]], "Tool identifiers": [[332, "tool-identifiers"]], "Registering and using tools": [[332, "registering-and-using-tools"]], "Events": [[332, "events"]], "Local events": [[332, "local-events"]], "Ancillary events": [[332, "ancillary-events"]], "Other events": [[332, "other-events"]], "The STOP_ITERATION event": [[332, "the-stop-iteration-event"]], "Turning events on and off": [[332, "turning-events-on-and-off"]], "Setting events globally": [[332, "setting-events-globally"]], "Per code object events": [[332, "per-code-object-events"]], "Disabling events": [[332, "disabling-events"]], "Registering callback functions": [[332, "registering-callback-functions"]], "Callback function arguments": [[332, "callback-function-arguments"]], "tabnanny \u2014 Detection of ambiguous indentation": [[336, "module-tabnanny"]], "token \u2014 Constants used with Python parse trees": [[354, "module-token"]], "Text Processing Services": [[341, "text-processing-services"]], "What\u2019s New In Python 3.11": [[448, "what-s-new-in-python-3-11"]], "Summary \u2013 Release highlights": [[448, "summary-release-highlights"], [454, "summary-release-highlights"], [457, "summary-release-highlights"], [455, "summary-release-highlights"], [447, "summary-release-highlights"], [449, "summary-release-highlights"], [450, "summary-release-highlights"], [452, "summary-release-highlights"], [458, "summary-release-highlights"]], "New Features": [[448, "new-features"], [448, "whatsnew311-c-api-new-features"], [454, "new-features"], [453, "new-features"], [457, "new-features"], [455, "new-features"], [447, "new-features"], [447, "id1"], [449, "new-features"], [449, "id4"], [450, "new-features"], [450, "id4"], [456, "new-features"], [458, "new-features"], [458, "id1"]], "PEP 657: Fine-grained error locations in tracebacks": [[448, "pep-657-fine-grained-error-locations-in-tracebacks"]], "PEP 654: Exception Groups and except*": [[448, "pep-654-exception-groups-and-except"]], "PEP 678: Exceptions can be enriched with notes": [[448, "pep-678-exceptions-can-be-enriched-with-notes"]], "Windows py.exe launcher improvements": [[448, "windows-py-exe-launcher-improvements"]], "New Features Related to Type Hints": [[448, "new-features-related-to-type-hints"], [447, "new-features-related-to-type-hints"], [449, "new-features-related-to-type-hints"]], "PEP 646: Variadic generics": [[448, "pep-646-variadic-generics"]], "PEP 655: Marking individual TypedDict items as required or not-required": [[448, "pep-655-marking-individual-typeddict-items-as-required-or-not-required"]], "PEP 673: Self type": [[448, "pep-673-self-type"]], "PEP 675: Arbitrary literal string type": [[448, "pep-675-arbitrary-literal-string-type"]], "PEP 681: Data class transforms": [[448, "pep-681-data-class-transforms"]], "PEP 563 may not be the future": [[448, "pep-563-may-not-be-the-future"]], "Other Language Changes": [[448, "other-language-changes"], [454, "other-language-changes"], [453, "other-language-changes"], [442, "other-language-changes"], [457, "other-language-changes"], [455, "other-language-changes"], [451, "other-language-changes"], [447, "other-language-changes"], [449, "other-language-changes"], [441, "other-language-changes"], [443, "other-language-changes"], [450, "other-language-changes"], [452, "other-language-changes"], [444, "other-language-changes"], [440, "other-language-changes"], [446, "other-language-changes"], [456, "other-language-changes"], [458, "other-language-changes"]], "Other CPython Implementation Changes": [[448, "other-cpython-implementation-changes"], [456, "other-cpython-implementation-changes"]], "New Modules": [[448, "new-modules"], [454, "new-modules"], [453, "new-modules"], [457, "new-modules"], [455, "new-modules"], [447, "new-modules"], [449, "new-modules"], [450, "new-modules"], [452, "new-modules"], [456, "new-modules"], [458, "new-modules"]], "Improved Modules": [[448, "improved-modules"], [454, "improved-modules"], [453, "improved-modules"], [457, "improved-modules"], [455, "improved-modules"], [447, "improved-modules"], [449, "improved-modules"], [450, "improved-modules"], [452, "improved-modules"], [456, "improved-modules"], [458, "improved-modules"]], "asyncio": [[448, "asyncio"], [454, "asyncio"], [453, "asyncio"], [457, "asyncio"], [455, "asyncio"], [447, "asyncio"], [449, "asyncio"], [456, "asyncio"], [456, "whatsnew37-asyncio-deprecated"], [458, "asyncio"]], "contextlib": [[448, "contextlib"], [454, "contextlib"], [453, "contextlib"], [455, "contextlib"], [451, "contextlib"], [447, "contextlib"], [452, "contextlib"], [456, "contextlib"]], "dataclasses": [[448, "dataclasses"], [447, "dataclasses"], [456, "dataclasses"]], "datetime": [[448, "datetime"], [457, "datetime"], [455, "datetime"], [452, "datetime"], [456, "datetime"], [458, "datetime"]], "enum": [[448, "enum"], [454, "enum"], [453, "enum"], [455, "enum"], [447, "enum"], [449, "enum"], [456, "enum"], [456, "id5"]], "fcntl": [[448, "fcntl"], [458, "fcntl"]], "fractions": [[448, "fractions"], [449, "fractions"]], "functools": [[448, "functools"], [454, "functools"], [453, "functools"], [457, "functools"], [451, "functools"], [452, "functools"], [456, "functools"]], "hashlib": [[448, "hashlib"], [453, "hashlib"], [455, "hashlib"], [451, "hashlib"], [447, "hashlib"], [449, "hashlib"], [458, "hashlib"]], "IDLE and idlelib": [[448, "whatsnew311-idle"], [457, "idle-and-idlelib"], [447, "idle-and-idlelib"], [458, "idle-and-idlelib"]], "inspect": [[448, "inspect"], [454, "inspect"], [453, "inspect"], [457, "inspect"], [455, "inspect"], [451, "inspect"], [447, "inspect"], [449, "inspect"], [452, "inspect"], [458, "inspect"]], "locale": [[448, "locale"], [454, "locale"], [449, "locale"], [456, "locale"], [456, "id7"]], "logging": [[448, "logging"], [454, "logging"], [453, "logging"], [457, "logging"], [455, "logging"], [451, "logging"], [452, "logging"], [456, "logging"]], "math": [[448, "math"], [454, "math"], [457, "math"], [455, "math"], [451, "math"], [449, "math"], [452, "math"], [456, "math"], [458, "math"]], "operator": [[448, "operator"], [454, "operator"], [453, "operator"]], "os": [[448, "os"], [454, "os"], [453, "os"], [457, "os"], [455, "os"], [455, "id4"], [451, "os"], [447, "os"], [449, "os"], [452, "os"], [456, "os"], [458, "os"]], "pathlib": [[448, "pathlib"], [454, "pathlib"], [453, "pathlib"], [457, "pathlib"], [455, "pathlib"], [447, "pathlib"], [449, "pathlib"], [450, "pathlib"], [456, "pathlib"], [458, "pathlib"]], "re": [[448, "re"], [454, "re"], [453, "re"], [455, "re"], [455, "id5"], [452, "re"], [456, "re"]], "shutil": [[448, "shutil"], [454, "shutil"], [453, "shutil"], [457, "shutil"], [451, "shutil"], [449, "shutil"], [452, "shutil"]], "socket": [[448, "socket"], [454, "socket"], [453, "socket"], [457, "socket"], [455, "socket"], [451, "socket"], [447, "socket"], [452, "socket"], [456, "socket"], [456, "id8"], [458, "socket"]], "sqlite3": [[448, "sqlite3"], [454, "sqlite3"], [453, "sqlite3"], [455, "sqlite3"], [451, "sqlite3"], [447, "sqlite3"], [449, "sqlite3"], [449, "id2"], [450, "sqlite3"], [452, "sqlite3"], [456, "sqlite3"]], "string": [[448, "string"], [456, "string"]], "sys": [[448, "sys"], [454, "sys"], [453, "sys"], [457, "sys"], [455, "sys"], [447, "sys"], [449, "sys"], [452, "sys"], [456, "sys"], [456, "id10"], [458, "sys"]], "sysconfig": [[448, "sysconfig"], [454, "sysconfig"], [451, "sysconfig"]], "tempfile": [[448, "tempfile"], [451, "tempfile"], [449, "tempfile"], [452, "tempfile"]], "threading": [[448, "threading"], [454, "threading"], [453, "threading"], [457, "threading"], [451, "threading"], [447, "threading"], [449, "threading"], [452, "threading"], [456, "threading"]], "time": [[448, "time"], [454, "time"], [457, "time"], [455, "time"], [452, "time"], [456, "time"], [458, "time"]], "tkinter": [[448, "tkinter"], [454, "tkinter"], [457, "tkinter"], [455, "tkinter"], [455, "id7"], [449, "tkinter"], [450, "tkinter"], [456, "tkinter"]], "traceback": [[448, "traceback"], [454, "traceback"], [453, "traceback"], [455, "traceback"], [447, "traceback"], [450, "traceback"]], "typing": [[448, "typing"], [454, "typing"], [457, "typing"], [455, "typing"], [447, "typing"], [449, "typing"], [450, "typing"], [458, "typing"], [458, "id4"]], "unicodedata": [[448, "unicodedata"], [454, "unicodedata"], [457, "unicodedata"], [455, "unicodedata"], [449, "unicodedata"], [456, "unicodedata"], [458, "unicodedata"]], "unittest": [[448, "unittest"], [454, "unittest"], [453, "unittest"], [457, "unittest"], [451, "unittest"], [447, "unittest"], [449, "unittest"], [449, "id3"], [452, "unittest"], [456, "unittest"]], "venv": [[448, "venv"], [453, "venv"], [457, "venv"], [455, "venv"], [455, "whatsnew36-venv"], [450, "venv"], [458, "venv"]], "warnings": [[448, "warnings"], [455, "warnings"], [456, "warnings"]], "zipfile": [[448, "zipfile"], [454, "zipfile"], [453, "zipfile"], [455, "zipfile"], [456, "zipfile"]], "Optimizations": [[448, "optimizations"], [454, "optimizations"], [442, "optimizations"], [457, "optimizations"], [455, "optimizations"], [451, "optimizations"], [447, "optimizations"], [449, "optimizations"], [441, "optimizations"], [443, "optimizations"], [450, "optimizations"], [452, "optimizations"], [444, "optimizations"], [440, "optimizations"], [446, "optimizations"], [456, "optimizations"], [458, "optimizations"]], "Faster CPython": [[448, "faster-cpython"]], "Faster Startup": [[448, "faster-startup"]], "Frozen imports / Static code objects": [[448, "frozen-imports-static-code-objects"]], "Faster Runtime": [[448, "faster-runtime"]], "Cheaper, lazy Python frames": [[448, "cheaper-lazy-python-frames"]], "Inlined Python function calls": [[448, "inlined-python-function-calls"]], "PEP 659: Specializing Adaptive Interpreter": [[448, "pep-659-specializing-adaptive-interpreter"]], "Misc": [[448, "misc"]], "FAQ": [[448, "faq"]], "How should I write my code to utilize these speedups?": [[448, "how-should-i-write-my-code-to-utilize-these-speedups"]], "Will CPython 3.11 use more memory?": [[448, "will-cpython-3-11-use-more-memory"]], "I don\u2019t see any speedups in my workload. Why?": [[448, "i-don-t-see-any-speedups-in-my-workload-why"]], "Is there a JIT compiler?": [[448, "is-there-a-jit-compiler"]], "About": [[448, "about"]], "CPython bytecode changes": [[448, "cpython-bytecode-changes"], [457, "cpython-bytecode-changes"], [455, "cpython-bytecode-changes"], [447, "cpython-bytecode-changes"], [449, "cpython-bytecode-changes"], [456, "cpython-bytecode-changes"], [458, "cpython-bytecode-changes"]], "New opcodes": [[448, "new-opcodes"]], "Replaced opcodes": [[448, "replaced-opcodes"]], "Changed/removed opcodes": [[448, "changed-removed-opcodes"]], "Deprecated": [[448, "deprecated"], [448, "whatsnew311-c-api-deprecated"], [454, "deprecated"], [453, "deprecated"], [457, "deprecated"], [455, "deprecated"], [447, "deprecated"], [447, "id3"], [449, "deprecated"], [449, "id6"], [450, "deprecated"], [450, "id6"], [452, "deprecated"], [458, "deprecated"]], "Language/Builtins": [[448, "language-builtins"]], "Standard Library": [[448, "standard-library"]], "Pending Removal in Python 3.12": [[448, "pending-removal-in-python-3-12"], [448, "whatsnew311-c-api-pending-removal"]], "Removed": [[448, "removed"], [448, "whatsnew311-c-api-removed"], [454, "removed"], [453, "removed"], [455, "removed"], [447, "removed"], [447, "id4"], [449, "removed"], [449, "id9"], [450, "removed"], [450, "id7"], [458, "removed"], [458, "id3"]], "Porting to Python 3.11": [[448, "porting-to-python-3-11"], [448, "whatsnew311-c-api-porting"]], "Build Changes": [[448, "build-changes"], [447, "build-changes"], [449, "build-changes"], [450, "build-changes"], [456, "build-changes"], [458, "build-changes"]], "C API Changes": [[448, "c-api-changes"], [447, "c-api-changes"], [449, "c-api-changes"], [450, "c-api-changes"], [456, "c-api-changes"], [458, "c-api-changes"]], "What\u2019s New In Python 3.5": [[454, "what-s-new-in-python-3-5"]], "PEP 492 - Coroutines with async and await syntax": [[454, "pep-492-coroutines-with-async-and-await-syntax"]], "PEP 465 - A dedicated infix operator for matrix multiplication": [[454, "pep-465-a-dedicated-infix-operator-for-matrix-multiplication"]], "PEP 448 - Additional Unpacking Generalizations": [[454, "pep-448-additional-unpacking-generalizations"]], "PEP 461 - percent formatting support for bytes and bytearray": [[454, "pep-461-percent-formatting-support-for-bytes-and-bytearray"]], "PEP 484 - Type Hints": [[454, "pep-484-type-hints"]], "PEP 471 - os.scandir() function \u2013 a better and faster directory iterator": [[454, "pep-471-os-scandir-function-a-better-and-faster-directory-iterator"]], "PEP 475: Retry system calls failing with EINTR": [[454, "pep-475-retry-system-calls-failing-with-eintr"]], "PEP 479: Change StopIteration handling inside generators": [[454, "pep-479-change-stopiteration-handling-inside-generators"]], "PEP 485: A function for testing approximate equality": [[454, "pep-485-a-function-for-testing-approximate-equality"]], "PEP 486: Make the Python Launcher aware of virtual environments": [[454, "pep-486-make-the-python-launcher-aware-of-virtual-environments"]], "PEP 488: Elimination of PYO files": [[454, "pep-488-elimination-of-pyo-files"]], "PEP 489: Multi-phase extension module initialization": [[454, "pep-489-multi-phase-extension-module-initialization"]], "zipapp": [[454, "zipapp"], [456, "zipapp"]], "argparse": [[454, "argparse"], [453, "argparse"], [447, "argparse"], [456, "argparse"]], "bz2": [[454, "bz2"], [452, "bz2"]], "cgi": [[454, "cgi"]], "cmath": [[454, "cmath"], [455, "cmath"]], "code": [[454, "code"]], "collections": [[454, "collections"], [453, "collections"], [457, "collections"], [455, "collections"], [451, "collections"], [452, "collections"], [456, "collections"], [456, "id3"]], "collections.abc": [[454, "collections-abc"], [447, "collections-abc"], [458, "collections-abc"]], "compileall": [[454, "compileall"], [456, "compileall"], [458, "compileall"]], "concurrent.futures": [[454, "concurrent-futures"], [455, "concurrent-futures"], [456, "concurrent-futures"], [458, "concurrent-futures"]], "configparser": [[454, "configparser"], [451, "configparser"], [449, "configparser"]], "csv": [[454, "csv"], [457, "csv"], [451, "csv"], [449, "csv"]], "curses": [[454, "curses"], [457, "curses"], [447, "curses"], [452, "curses"], [458, "curses"]], "dbm": [[454, "dbm"], [453, "dbm"], [455, "dbm"], [451, "dbm"], [450, "dbm"], [456, "dbm"], [456, "id4"]], "difflib": [[454, "difflib"]], "distutils": [[454, "distutils"], [455, "distutils"], [455, "id2"], [447, "distutils"], [449, "distutils"], [456, "distutils"], [458, "distutils"]], "doctest": [[454, "doctest"], [453, "doctest"], [447, "doctest"], [441, "doctest"], [450, "doctest"]], "email": [[454, "email"], [453, "email"], [455, "email"], [451, "email"], [452, "email"]], "faulthandler": [[454, "faulthandler"], [455, "faulthandler"], [447, "faulthandler"], [452, "faulthandler"]], "glob": [[454, "glob"], [453, "glob"], [447, "glob"]], "gzip": [[454, "gzip"], [457, "gzip"], [449, "gzip"]], "heapq": [[454, "heapq"]], "http": [[454, "http"], [453, "http"], [452, "http"], [458, "http"]], "http.client": [[454, "http-client"], [455, "http-client"], [451, "http-client"], [456, "http-client"]], "idlelib and IDLE": [[454, "idlelib-and-idle"], [453, "idlelib-and-idle"], [455, "idlelib-and-idle"], [456, "idlelib-and-idle"]], "imaplib": [[454, "imaplib"], [451, "imaplib"], [452, "imaplib"], [458, "imaplib"]], "imghdr": [[454, "imghdr"]], "io": [[454, "io"], [457, "io"], [451, "io"], [449, "io"], [450, "io"], [452, "io"], [456, "io"]], "ipaddress": [[454, "ipaddress"], [453, "ipaddress"], [452, "ipaddress"], [456, "ipaddress"], [458, "ipaddress"]], "json": [[454, "json"], [455, "json"]], "linecache": [[454, "linecache"], [447, "linecache"]], "lzma": [[454, "lzma"], [452, "lzma"]], "multiprocessing": [[454, "multiprocessing"], [453, "multiprocessing"], [457, "multiprocessing"], [455, "multiprocessing"], [452, "multiprocessing"], [456, "multiprocessing"], [458, "multiprocessing"]], "pickle": [[454, "pickle"], [453, "pickle"], [457, "pickle"], [455, "pickle"], [452, "pickle"]], "poplib": [[454, "poplib"], [453, "poplib"], [451, "poplib"], [458, "poplib"]], "readline": [[454, "readline"], [455, "readline"]], "selectors": [[454, "selectors"], [453, "selectors"]], "signal": [[454, "signal"], [452, "signal"], [456, "signal"], [458, "signal"]], "smtpd": [[454, "smtpd"], [453, "smtpd"], [452, "smtpd"]], "smtplib": [[454, "smtplib"], [453, "smtplib"], [452, "smtplib"], [458, "smtplib"]], "sndhdr": [[454, "sndhdr"]], "ssl": [[454, "ssl"], [453, "ssl"], [457, "ssl"], [455, "ssl"], [455, "id6"], [451, "ssl"], [447, "ssl"], [449, "ssl"], [452, "ssl"], [456, "ssl"], [456, "id9"]], "Memory BIO Support": [[454, "memory-bio-support"], [321, "memory-bio-support"]], "Application-Layer Protocol Negotiation Support": [[454, "application-layer-protocol-negotiation-support"]], "Other Changes": [[454, "other-changes"]], "subprocess": [[454, "subprocess"], [453, "subprocess"], [455, "subprocess"], [452, "subprocess"], [456, "subprocess"]], "tarfile": [[454, "tarfile"], [453, "tarfile"], [457, "tarfile"], [451, "tarfile"], [452, "tarfile"]], "timeit": [[454, "timeit"], [455, "timeit"]], "types": [[454, "types"], [453, "types"], [447, "types"], [449, "types"], [452, "types"], [456, "types"]], "unittest.mock": [[454, "unittest-mock"], [455, "unittest-mock"], [456, "unittest-mock"]], "urllib": [[454, "urllib"], [453, "urllib"], [452, "urllib"]], "wsgiref": [[454, "wsgiref"]], "xmlrpc": [[454, "xmlrpc"], [457, "xmlrpc"]], "xml.sax": [[454, "xml-sax"]], "Other module-level changes": [[454, "other-module-level-changes"]], "Build and C API Changes": [[454, "build-and-c-api-changes"], [442, "build-and-c-api-changes"], [457, "build-and-c-api-changes"], [455, "build-and-c-api-changes"], [451, "build-and-c-api-changes"], [441, "build-and-c-api-changes"], [443, "build-and-c-api-changes"], [452, "build-and-c-api-changes"], [444, "build-and-c-api-changes"], [440, "build-and-c-api-changes"], [446, "build-and-c-api-changes"], [445, "build-and-c-api-changes"]], "New Keywords": [[454, "new-keywords"], [455, "new-keywords"]], "Deprecated Python Behavior": [[454, "deprecated-python-behavior"], [456, "deprecated-python-behavior"]], "Unsupported Operating Systems": [[454, "unsupported-operating-systems"], [452, "unsupported-operating-systems"]], "Deprecated Python modules, functions and methods": [[454, "deprecated-python-modules-functions-and-methods"], [455, "deprecated-python-modules-functions-and-methods"], [452, "deprecated-python-modules-functions-and-methods"], [456, "deprecated-python-modules-functions-and-methods"]], "API and Feature Removals": [[454, "api-and-feature-removals"], [453, "api-and-feature-removals"], [457, "api-and-feature-removals"], [455, "api-and-feature-removals"], [456, "api-and-feature-removals"]], "Porting to Python 3.5": [[454, "porting-to-python-3-5"]], "Changes in Python behavior": [[454, "changes-in-python-behavior"], [457, "changes-in-python-behavior"]], "Changes in the Python API": [[454, "changes-in-the-python-api"], [453, "changes-in-the-python-api"], [457, "changes-in-the-python-api"], [455, "changes-in-the-python-api"], [447, "changes-in-the-python-api"], [449, "changes-in-the-python-api"], [456, "changes-in-the-python-api"], [458, "changes-in-the-python-api"]], "Changes in the C API": [[454, "changes-in-the-c-api"], [453, "changes-in-the-c-api"], [457, "changes-in-the-c-api"], [455, "changes-in-the-c-api"], [447, "changes-in-the-c-api"], [456, "changes-in-the-c-api"], [458, "changes-in-the-c-api"]], "Notable changes in Python 3.5.4": [[454, "notable-changes-in-python-3-5-4"]], "New make regen-all build target": [[454, "new-make-regen-all-build-target"], [455, "new-make-regen-all-build-target"], [444, "new-make-regen-all-build-target"]], "Removal of make touch build target": [[454, "removal-of-make-touch-build-target"], [455, "removal-of-make-touch-build-target"], [444, "removal-of-make-touch-build-target"]], "Python Setup and Usage": [[433, "python-setup-and-usage"]], "What\u2019s New in Python 2.1": [[438, "what-s-new-in-python-2-1"]], "PEP 227: Nested Scopes": [[438, "pep-227-nested-scopes"], [439, "pep-227-nested-scopes"]], "PEP 236: __future__ Directives": [[438, "pep-236-future-directives"]], "PEP 207: Rich Comparisons": [[438, "pep-207-rich-comparisons"]], "PEP 230: Warning Framework": [[438, "pep-230-warning-framework"]], "PEP 229: New Build System": [[438, "pep-229-new-build-system"]], "PEP 205: Weak References": [[438, "pep-205-weak-references"]], "PEP 232: Function Attributes": [[438, "pep-232-function-attributes"]], "PEP 235: Importing Modules on Case-Insensitive Platforms": [[438, "pep-235-importing-modules-on-case-insensitive-platforms"]], "PEP 217: Interactive Display Hook": [[438, "pep-217-interactive-display-hook"]], "PEP 208: New Coercion Model": [[438, "pep-208-new-coercion-model"]], "PEP 241: Metadata in Python Packages": [[438, "pep-241-metadata-in-python-packages"]], "New and Improved Modules": [[438, "new-and-improved-modules"], [443, "new-and-improved-modules"], [444, "new-and-improved-modules"], [439, "new-and-improved-modules"]], "Other Changes and Fixes": [[438, "other-changes-and-fixes"], [444, "other-changes-and-fixes"], [439, "other-changes-and-fixes"], [440, "other-changes-and-fixes"]], "What\u2019s New In Python 3.4": [[453, "what-s-new-in-python-3-4"]], "Summary \u2013 Release Highlights": [[453, "summary-release-highlights"], [456, "summary-release-highlights"]], "PEP 453: Explicit Bootstrapping of PIP in Python Installations": [[453, "pep-453-explicit-bootstrapping-of-pip-in-python-installations"]], "Bootstrapping pip By Default": [[453, "bootstrapping-pip-by-default"], [444, "bootstrapping-pip-by-default"]], "Documentation Changes": [[453, "documentation-changes"], [444, "documentation-changes"]], "PEP 446: Newly Created File Descriptors Are Non-Inheritable": [[453, "pep-446-newly-created-file-descriptors-are-non-inheritable"]], "Improvements to Codec Handling": [[453, "improvements-to-codec-handling"]], "PEP 451: A ModuleSpec Type for the Import System": [[453, "pep-451-a-modulespec-type-for-the-import-system"]], "ensurepip": [[453, "ensurepip"], [449, "ensurepip"]], "statistics": [[453, "statistics"], [457, "statistics"], [455, "statistics"], [447, "statistics"], [449, "statistics"]], "tracemalloc": [[453, "tracemalloc"], [455, "tracemalloc"], [456, "tracemalloc"], [458, "tracemalloc"]], "abc": [[453, "abc"], [451, "abc"], [452, "abc"]], "aifc": [[453, "aifc"], [456, "aifc"]], "audioop": [[453, "audioop"]], "base64": [[453, "base64"], [447, "base64"], [452, "base64"]], "colorsys": [[453, "colorsys"]], "dis": [[453, "dis"], [451, "dis"], [449, "dis"], [456, "dis"]], "filecmp": [[453, "filecmp"]], "gc": [[453, "gc"], [457, "gc"], [447, "gc"], [452, "gc"], [456, "gc"], [458, "gc"]], "hmac": [[453, "hmac"], [447, "hmac"], [452, "hmac"], [456, "hmac"]], "html": [[453, "html"], [451, "html"], [452, "html"]], "marshal": [[453, "marshal"]], "mmap": [[453, "mmap"], [457, "mmap"], [452, "mmap"]], "pdb": [[453, "pdb"], [455, "pdb"], [451, "pdb"], [449, "pdb"], [450, "pdb"], [452, "pdb"], [456, "pdb"], [458, "pdb"]], "plistlib": [[453, "plistlib"], [457, "plistlib"]], "pprint": [[453, "pprint"], [457, "pprint"], [447, "pprint"], [458, "pprint"]], "pty": [[453, "pty"]], "pydoc": [[453, "pydoc"], [455, "pydoc"], [451, "pydoc"], [452, "pydoc"], [456, "pydoc"], [458, "pydoc"]], "resource": [[453, "resource"]], "select": [[453, "select"], [451, "select"], [452, "select"]], "shelve": [[453, "shelve"], [447, "shelve"]], "stat": [[453, "stat"], [452, "stat"]], "struct": [[453, "struct"], [455, "struct"], [452, "struct"]], "sunau": [[453, "sunau"], [456, "sunau"]], "textwrap": [[453, "textwrap"], [452, "textwrap"]], "wave": [[453, "wave"], [456, "wave"]], "weakref": [[453, "weakref"], [457, "weakref"]], "xml.etree": [[453, "xml-etree"], [456, "xml-etree"]], "CPython Implementation Changes": [[453, "cpython-implementation-changes"]], "PEP 445: Customization of CPython Memory Allocators": [[453, "pep-445-customization-of-cpython-memory-allocators"]], "PEP 442: Safe Object Finalization": [[453, "pep-442-safe-object-finalization"]], "PEP 456: Secure and Interchangeable Hash Algorithm": [[453, "pep-456-secure-and-interchangeable-hash-algorithm"]], "PEP 436: Argument Clinic": [[453, "pep-436-argument-clinic"]], "Other Build and C API Changes": [[453, "other-build-and-c-api-changes"]], "Other Improvements": [[453, "other-improvements"], [455, "other-improvements"]], "Significant Optimizations": [[453, "significant-optimizations"]], "Deprecations in the Python API": [[453, "deprecations-in-the-python-api"]], "Deprecated Features": [[453, "deprecated-features"]], "Operating Systems No Longer Supported": [[453, "operating-systems-no-longer-supported"]], "Code Cleanups": [[453, "code-cleanups"]], "Porting to Python 3.4": [[453, "porting-to-python-3-4"]], "Changes in \u2018python\u2019 Command Behavior": [[453, "changes-in-python-command-behavior"], [455, "changes-in-python-command-behavior"]], "Changed in 3.4.3": [[453, "changed-in-3-4-3"]], "PEP 476: Enabling certificate verification by default for stdlib http clients": [[453, "pep-476-enabling-certificate-verification-by-default-for-stdlib-http-clients"], [444, "pep-476-enabling-certificate-verification-by-default-for-stdlib-http-clients"]], "Using Python on Unix platforms": [[435, "using-python-on-unix-platforms"]], "Getting and installing the latest version of Python": [[435, "getting-and-installing-the-latest-version-of-python"]], "On Linux": [[435, "on-linux"]], "On FreeBSD and OpenBSD": [[435, "on-freebsd-and-openbsd"]], "Building Python": [[435, "building-python"]], "Python-related paths and files": [[435, "python-related-paths-and-files"]], "Miscellaneous": [[435, "miscellaneous"], [269, "miscellaneous"], [258, "miscellaneous"]], "Custom OpenSSL": [[435, "custom-openssl"]], "Editors and IDEs": [[432, "editors-and-ides"]], "What\u2019s New in Python 2.5": [[442, "what-s-new-in-python-2-5"]], "PEP 308: Conditional Expressions": [[442, "pep-308-conditional-expressions"]], "PEP 309: Partial Function Application": [[442, "pep-309-partial-function-application"]], "PEP 314: Metadata for Python Software Packages v1.1": [[442, "pep-314-metadata-for-python-software-packages-v1-1"]], "PEP 328: Absolute and Relative Imports": [[442, "pep-328-absolute-and-relative-imports"]], "PEP 338: Executing Modules as Scripts": [[442, "pep-338-executing-modules-as-scripts"]], "PEP 341: Unified try/except/finally": [[442, "pep-341-unified-try-except-finally"]], "PEP 342: New Generator Features": [[442, "pep-342-new-generator-features"]], "PEP 343: The \u2018with\u2019 statement": [[442, "pep-343-the-with-statement"], [443, "pep-343-the-with-statement"]], "Writing Context Managers": [[442, "writing-context-managers"], [443, "writing-context-managers"]], "The contextlib module": [[442, "the-contextlib-module"], [443, "the-contextlib-module"]], "PEP 352: Exceptions as New-Style Classes": [[442, "pep-352-exceptions-as-new-style-classes"]], "PEP 353: Using ssize_t as the index type": [[442, "pep-353-using-ssize-t-as-the-index-type"]], "PEP 357: The \u2018__index__\u2019 method": [[442, "pep-357-the-index-method"]], "Interactive Interpreter Changes": [[442, "interactive-interpreter-changes"]], "New, Improved, and Removed Modules": [[442, "new-improved-and-removed-modules"]], "The ctypes package": [[442, "the-ctypes-package"]], "The ElementTree package": [[442, "the-elementtree-package"]], "The hashlib package": [[442, "the-hashlib-package"]], "The sqlite3 package": [[442, "the-sqlite3-package"]], "The wsgiref package": [[442, "the-wsgiref-package"]], "Port-Specific Changes": [[442, "port-specific-changes"], [441, "port-specific-changes"], [440, "port-specific-changes"]], "Porting to Python 2.5": [[442, "porting-to-python-2-5"]], "What\u2019s New in Python": [[460, "what-s-new-in-python"]], "What Now?": [[429, "what-now"]], "What\u2019s New In Python 3.8": [[457, "what-s-new-in-python-3-8"]], "Positional-only parameters": [[457, "positional-only-parameters"]], "Parallel filesystem cache for compiled bytecode files": [[457, "parallel-filesystem-cache-for-compiled-bytecode-files"]], "Debug build uses the same ABI as release build": [[457, "debug-build-uses-the-same-abi-as-release-build"]], "f-strings support = for self-documenting expressions and debugging": [[457, "f-strings-support-for-self-documenting-expressions-and-debugging"]], "PEP 578: Python Runtime Audit Hooks": [[457, "pep-578-python-runtime-audit-hooks"]], "PEP 587: Python Initialization Configuration": [[457, "pep-587-python-initialization-configuration"]], "PEP 590: Vectorcall: a fast calling protocol for CPython": [[457, "pep-590-vectorcall-a-fast-calling-protocol-for-cpython"]], "Pickle protocol 5 with out-of-band data buffers": [[457, "pickle-protocol-5-with-out-of-band-data-buffers"]], "ast": [[457, "ast"], [455, "ast"], [451, "ast"], [450, "ast"], [458, "ast"]], "builtins": [[457, "builtins"]], "cProfile": [[457, "cprofile"], [456, "cprofile"]], "ctypes": [[457, "ctypes"], [451, "ctypes"]], "gettext": [[457, "gettext"], [456, "gettext"]], "itertools": [[457, "itertools"], [451, "itertools"], [447, "itertools"], [449, "itertools"], [452, "itertools"], [456, "itertools"]], "json.tool": [[457, "json-tool"]], "os.path": [[457, "os-path"], [447, "os-path"], [449, "os-path"]], "py_compile": [[457, "py-compile"], [447, "py-compile"], [456, "py-compile"]], "shlex": [[457, "shlex"], [455, "shlex"], [452, "shlex"]], "tokenize": [[457, "tokenize"], [449, "tokenize"]], "xml": [[457, "xml"], [447, "xml"], [458, "xml"]], "Porting to Python 3.8": [[457, "porting-to-python-3-8"]], "Demos and Tools": [[457, "demos-and-tools"], [449, "demos-and-tools"]], "Notable changes in Python 3.8.1": [[457, "notable-changes-in-python-3-8-1"]], "Notable changes in Python 3.8.8": [[457, "notable-changes-in-python-3-8-8"]], "Notable changes in Python 3.8.12": [[457, "notable-changes-in-python-3-8-12"]], "What\u2019s New In Python 3.6": [[455, "what-s-new-in-python-3-6"]], "PEP 498: Formatted string literals": [[455, "pep-498-formatted-string-literals"]], "PEP 526: Syntax for variable annotations": [[455, "pep-526-syntax-for-variable-annotations"]], "PEP 515: Underscores in Numeric Literals": [[455, "pep-515-underscores-in-numeric-literals"]], "PEP 525: Asynchronous Generators": [[455, "pep-525-asynchronous-generators"]], "PEP 530: Asynchronous Comprehensions": [[455, "pep-530-asynchronous-comprehensions"]], "PEP 487: Simpler customization of class creation": [[455, "pep-487-simpler-customization-of-class-creation"]], "PEP 487: Descriptor Protocol Enhancements": [[455, "pep-487-descriptor-protocol-enhancements"]], "PEP 519: Adding a file system path protocol": [[455, "pep-519-adding-a-file-system-path-protocol"]], "PEP 495: Local Time Disambiguation": [[455, "pep-495-local-time-disambiguation"]], "PEP 529: Change Windows filesystem encoding to UTF-8": [[455, "pep-529-change-windows-filesystem-encoding-to-utf-8"]], "PEP 528: Change Windows console encoding to UTF-8": [[455, "pep-528-change-windows-console-encoding-to-utf-8"]], "PEP 520: Preserving Class Attribute Definition Order": [[455, "pep-520-preserving-class-attribute-definition-order"]], "PEP 468: Preserving Keyword Argument Order": [[455, "pep-468-preserving-keyword-argument-order"]], "New dict implementation": [[455, "new-dict-implementation"]], "PEP 523: Adding a frame evaluation API to CPython": [[455, "pep-523-adding-a-frame-evaluation-api-to-cpython"]], "PYTHONMALLOC environment variable": [[455, "pythonmalloc-environment-variable"]], "DTrace and SystemTap probing support": [[455, "dtrace-and-systemtap-probing-support"]], "secrets": [[455, "secrets"]], "array": [[455, "array"], [447, "array"], [449, "array"], [450, "array"], [452, "array"]], "binascii": [[455, "binascii"], [452, "binascii"], [456, "binascii"]], "decimal": [[455, "decimal"], [452, "decimal"], [456, "decimal"]], "encodings": [[455, "encodings"], [447, "encodings"]], "fileinput": [[455, "fileinput"], [447, "fileinput"]], "pickletools": [[455, "pickletools"]], "random": [[455, "random"], [451, "random"], [449, "random"], [458, "random"]], "rlcompleter": [[455, "rlcompleter"]], "site": [[455, "site"], [451, "site"], [447, "site"]], "socketserver": [[455, "socketserver"], [452, "socketserver"], [456, "socketserver"]], "telnetlib": [[455, "telnetlib"]], "urllib.request": [[455, "urllib-request"]], "urllib.robotparser": [[455, "urllib-robotparser"]], "winreg": [[455, "winreg"]], "winsound": [[455, "winsound"]], "xmlrpc.client": [[455, "xmlrpc-client"]], "Deprecated Python behavior": [[455, "deprecated-python-behavior"]], "asynchat": [[455, "asynchat"]], "asyncore": [[455, "asyncore"], [451, "asyncore"]], "grp": [[455, "grp"]], "Deprecated functions and types of the C API": [[455, "deprecated-functions-and-types-of-the-c-api"], [452, "deprecated-functions-and-types-of-the-c-api"], [456, "deprecated-functions-and-types-of-the-c-api"]], "Deprecated Build Options": [[455, "deprecated-build-options"]], "Porting to Python 3.6": [[455, "porting-to-python-3-6"]], "Notable changes in Python 3.6.2": [[455, "notable-changes-in-python-3-6-2"]], "Notable changes in Python 3.6.4": [[455, "notable-changes-in-python-3-6-4"]], "Notable changes in Python 3.6.5": [[455, "notable-changes-in-python-3-6-5"]], "Notable changes in Python 3.6.7": [[455, "notable-changes-in-python-3-6-7"]], "Notable changes in Python 3.6.10": [[455, "notable-changes-in-python-3-6-10"]], "Notable changes in Python 3.6.13": [[455, "notable-changes-in-python-3-6-13"]], "What\u2019s New In Python 3.2": [[451, "what-s-new-in-python-3-2"]], "PEP 384: Defining a Stable ABI": [[451, "pep-384-defining-a-stable-abi"]], "PEP 389: Argparse Command Line Parsing Module": [[451, "pep-389-argparse-command-line-parsing-module"]], "PEP 391:  Dictionary Based Configuration for Logging": [[451, "pep-391-dictionary-based-configuration-for-logging"]], "PEP 3148:  The concurrent.futures module": [[451, "pep-3148-the-concurrent-futures-module"]], "PEP 3147:  PYC Repository Directories": [[451, "pep-3147-pyc-repository-directories"]], "PEP 3149: ABI Version Tagged .so Files": [[451, "pep-3149-abi-version-tagged-so-files"]], "PEP 3333: Python Web Server Gateway Interface v1.0.1": [[451, "pep-3333-python-web-server-gateway-interface-v1-0-1"]], "New, Improved, and Deprecated Modules": [[451, "new-improved-and-deprecated-modules"], [441, "new-improved-and-deprecated-modules"], [440, "new-improved-and-deprecated-modules"], [446, "new-improved-and-deprecated-modules"]], "elementtree": [[451, "elementtree"]], "datetime and time": [[451, "datetime-and-time"]], "reprlib": [[451, "reprlib"]], "decimal and fractions": [[451, "decimal-and-fractions"]], "ftp": [[451, "ftp"]], "popen": [[451, "popen"]], "gzip and zipfile": [[451, "gzip-and-zipfile"]], "nntp": [[451, "nntp"]], "certificates": [[451, "certificates"]], "urllib.parse": [[451, "urllib-parse"], [447, "urllib-parse"], [456, "urllib-parse"], [458, "urllib-parse"]], "mailbox": [[451, "mailbox"]], "turtledemo": [[451, "turtledemo"]], "Unicode": [[451, "unicode"], [437, "unicode"]], "Codecs": [[451, "codecs"]], "Documentation": [[451, "documentation"]], "IDLE": [[451, "idle"], [446, "idle"], [236, "idle"]], "Code Repository": [[451, "code-repository"]], "Porting to Python 3.2": [[451, "porting-to-python-3-2"]], "Using Python on Windows": [[436, "using-python-on-windows"]], "The full installer": [[436, "the-full-installer"]], "Installation steps": [[436, "installation-steps"]], "Removing the MAX_PATH Limitation": [[436, "removing-the-max-path-limitation"]], "Installing Without UI": [[436, "installing-without-ui"]], "Installing Without Downloading": [[436, "installing-without-downloading"]], "Modifying an install": [[436, "modifying-an-install"]], "The Microsoft Store package": [[436, "the-microsoft-store-package"]], "Known issues": [[436, "known-issues"]], "Redirection of local data, registry, and temporary paths": [[436, "redirection-of-local-data-registry-and-temporary-paths"]], "The nuget.org packages": [[436, "the-nuget-org-packages"]], "The embeddable package": [[436, "the-embeddable-package"]], "Python Application": [[436, "python-application"]], "Alternative bundles": [[436, "alternative-bundles"]], "Configuring Python": [[436, "configuring-python"]], "Excursus: Setting environment variables": [[436, "excursus-setting-environment-variables"]], "Finding the Python executable": [[436, "finding-the-python-executable"]], "UTF-8 mode": [[436, "utf-8-mode"]], "Python Launcher for Windows": [[436, "python-launcher-for-windows"]], "Getting started": [[436, "getting-started"]], "From the command-line": [[436, "from-the-command-line"]], "From a script": [[436, "from-a-script"]], "From file associations": [[436, "from-file-associations"]], "Shebang Lines": [[436, "shebang-lines"]], "Arguments in shebang lines": [[436, "arguments-in-shebang-lines"]], "Customization": [[436, "customization"]], "Customization via INI files": [[436, "customization-via-ini-files"]], "Customizing default Python versions": [[436, "customizing-default-python-versions"]], "Diagnostics": [[436, "diagnostics"]], "Dry Run": [[436, "dry-run"]], "Install on demand": [[436, "install-on-demand"]], "Return codes": [[436, "return-codes"]], "Finding modules": [[436, "finding-modules"]], "Additional modules": [[436, "additional-modules"]], "PyWin32": [[436, "pywin32"]], "cx_Freeze": [[436, "cx-freeze"]], "Compiling Python on Windows": [[436, "compiling-python-on-windows"]], "Other Platforms": [[436, "other-platforms"]], "What\u2019s New In Python 3.10": [[447, "what-s-new-in-python-3-10"]], "Parenthesized context managers": [[447, "parenthesized-context-managers"]], "Better error messages": [[447, "better-error-messages"]], "SyntaxErrors": [[447, "syntaxerrors"]], "IndentationErrors": [[447, "indentationerrors"]], "AttributeErrors": [[447, "attributeerrors"]], "NameErrors": [[447, "nameerrors"]], "PEP 626: Precise line numbers for debugging and other tools": [[447, "pep-626-precise-line-numbers-for-debugging-and-other-tools"]], "PEP 634: Structural Pattern Matching": [[447, "pep-634-structural-pattern-matching"]], "Syntax and operations": [[447, "syntax-and-operations"]], "Declarative approach": [[447, "declarative-approach"]], "Simple pattern: match to a literal": [[447, "simple-pattern-match-to-a-literal"]], "Behavior without the wildcard": [[447, "behavior-without-the-wildcard"]], "Patterns with a literal and variable": [[447, "patterns-with-a-literal-and-variable"]], "Patterns and classes": [[447, "patterns-and-classes"]], "Patterns with positional parameters": [[447, "patterns-with-positional-parameters"]], "Nested patterns": [[447, "nested-patterns"]], "Complex patterns and the wildcard": [[447, "complex-patterns-and-the-wildcard"]], "Guard": [[447, "guard"]], "Other Key Features": [[447, "other-key-features"]], "Optional EncodingWarning and encoding=\"locale\" option": [[447, "optional-encodingwarning-and-encoding-locale-option"]], "PEP 604: New Type Union Operator": [[447, "pep-604-new-type-union-operator"]], "PEP 612: Parameter Specification Variables": [[447, "pep-612-parameter-specification-variables"]], "PEP 613: TypeAlias": [[447, "pep-613-typealias"]], "PEP 647: User-Defined Type Guards": [[447, "pep-647-user-defined-type-guards"]], "asynchat, asyncore, smtpd": [[447, "asynchat-asyncore-smtpd"]], "bdb": [[447, "bdb"]], "bisect": [[447, "bisect"]], "codecs": [[447, "codecs"], [452, "codecs"]], "Keyword-only fields": [[447, "keyword-only-fields"]], "importlib.metadata": [[447, "importlib-metadata"]], "platform": [[447, "platform"]], "pyclbr": [[447, "pyclbr"]], "_thread": [[447, "thread"]], "zipimport": [[447, "zipimport"], [449, "zipimport"]], "Porting to Python 3.10": [[447, "porting-to-python-3-10"], [447, "id2"]], "Changes in the Python syntax": [[447, "changes-in-the-python-syntax"]], "PEP 652: Maintaining the Stable ABI": [[447, "pep-652-maintaining-the-stable-abi"]], "What\u2019s New In Python 3.12": [[449, "what-s-new-in-python-3-12"]], "PEP 695: Type Parameter Syntax": [[449, "pep-695-type-parameter-syntax"]], "PEP 701: Syntactic formalization of f-strings": [[449, "pep-701-syntactic-formalization-of-f-strings"]], "PEP 684: A Per-Interpreter GIL": [[449, "pep-684-a-per-interpreter-gil"]], "PEP 669: Low impact monitoring for CPython": [[449, "pep-669-low-impact-monitoring-for-cpython"]], "PEP 688: Making the buffer protocol accessible in Python": [[449, "pep-688-making-the-buffer-protocol-accessible-in-python"]], "PEP 709: Comprehension inlining": [[449, "pep-709-comprehension-inlining"]], "Improved Error Messages": [[449, "improved-error-messages"]], "PEP 692: Using TypedDict for more precise **kwargs typing": [[449, "pep-692-using-typeddict-for-more-precise-kwargs-typing"]], "PEP 698: Override Decorator for Static Typing": [[449, "pep-698-override-decorator-for-static-typing"]], "calendar": [[449, "calendar"], [456, "calendar"]], "importlib.resources": [[449, "importlib-resources"], [456, "importlib-resources"]], "uuid": [[449, "uuid"], [456, "uuid"]], "Pending Removal in Python 3.13": [[449, "pending-removal-in-python-3-13"]], "Pending Removal in Python 3.14": [[449, "pending-removal-in-python-3-14"], [449, "id7"], [450, "pending-removal-in-python-3-14"], [450, "id8"]], "Pending Removal in Future Versions": [[449, "pending-removal-in-future-versions"], [449, "id8"], [450, "pending-removal-in-future-versions"], [450, "id10"]], "asynchat and asyncore": [[449, "asynchat-and-asyncore"]], "ftplib": [[449, "ftplib"], [452, "ftplib"], [458, "ftplib"]], "imp": [[449, "imp"]], "webbrowser": [[449, "webbrowser"], [452, "webbrowser"]], "xml.etree.ElementTree": [[449, "xml-etree-elementtree"], [452, "xml-etree-elementtree"]], "Porting to Python 3.12": [[449, "porting-to-python-3-12"], [449, "id5"]], "Pending Removal in Python 3.15": [[449, "pending-removal-in-python-3-15"], [450, "pending-removal-in-python-3-15"], [450, "id9"]], "What\u2019s New in Python 2.4": [[441, "what-s-new-in-python-2-4"]], "PEP 218: Built-In Set Objects": [[441, "pep-218-built-in-set-objects"]], "PEP 237: Unifying Long Integers and Integers": [[441, "pep-237-unifying-long-integers-and-integers"], [439, "pep-237-unifying-long-integers-and-integers"]], "PEP 289: Generator Expressions": [[441, "pep-289-generator-expressions"]], "PEP 292: Simpler String Substitutions": [[441, "pep-292-simpler-string-substitutions"]], "PEP 318: Decorators for Functions and Methods": [[441, "pep-318-decorators-for-functions-and-methods"]], "PEP 322: Reverse Iteration": [[441, "pep-322-reverse-iteration"]], "PEP 324: New subprocess Module": [[441, "pep-324-new-subprocess-module"]], "PEP 327: Decimal Data Type": [[441, "pep-327-decimal-data-type"]], "Why is Decimal needed?": [[441, "why-is-decimal-needed"]], "The Decimal type": [[441, "the-decimal-type"]], "The Context type": [[441, "the-context-type"]], "PEP 328: Multi-line Imports": [[441, "pep-328-multi-line-imports"]], "PEP 331: Locale-Independent Float/String Conversions": [[441, "pep-331-locale-independent-float-string-conversions"]], "cookielib": [[441, "cookielib"]], "Porting to Python 2.4": [[441, "porting-to-python-2-4"]], "What\u2019s New in Python 2.6": [[443, "what-s-new-in-python-2-6"]], "Python 3.0": [[443, "python-3-0"]], "Changes to the Development Process": [[443, "changes-to-the-development-process"]], "New Issue Tracker: Roundup": [[443, "new-issue-tracker-roundup"]], "New Documentation Format: reStructuredText Using Sphinx": [[443, "new-documentation-format-restructuredtext-using-sphinx"]], "PEP 366: Explicit Relative Imports From a Main Module": [[443, "pep-366-explicit-relative-imports-from-a-main-module"]], "PEP 370: Per-user site-packages Directory": [[443, "pep-370-per-user-site-packages-directory"]], "PEP 371: The multiprocessing Package": [[443, "pep-371-the-multiprocessing-package"]], "PEP 3101: Advanced String Formatting": [[443, "pep-3101-advanced-string-formatting"]], "PEP 3105: print As a Function": [[443, "pep-3105-print-as-a-function"]], "PEP 3110: Exception-Handling Changes": [[443, "pep-3110-exception-handling-changes"]], "PEP 3112: Byte Literals": [[443, "pep-3112-byte-literals"]], "PEP 3116: New I/O Library": [[443, "pep-3116-new-i-o-library"]], "PEP 3118: Revised Buffer Protocol": [[443, "pep-3118-revised-buffer-protocol"]], "PEP 3119: Abstract Base Classes": [[443, "pep-3119-abstract-base-classes"]], "PEP 3127: Integer Literal Support and Syntax": [[443, "pep-3127-integer-literal-support-and-syntax"]], "PEP 3129: Class Decorators": [[443, "pep-3129-class-decorators"]], "PEP 3141: A Type Hierarchy for Numbers": [[443, "pep-3141-a-type-hierarchy-for-numbers"]], "The fractions Module": [[443, "the-fractions-module"]], "Interpreter Changes": [[443, "interpreter-changes"], [444, "interpreter-changes"]], "The ast module": [[443, "the-ast-module"]], "The future_builtins module": [[443, "the-future-builtins-module"]], "The json module: JavaScript Object Notation": [[443, "the-json-module-javascript-object-notation"]], "The plistlib module: A Property-List Parser": [[443, "the-plistlib-module-a-property-list-parser"]], "ctypes Enhancements": [[443, "ctypes-enhancements"]], "Improved SSL Support": [[443, "improved-ssl-support"]], "Deprecations and Removals": [[443, "deprecations-and-removals"]], "Port-Specific Changes: Windows": [[443, "port-specific-changes-windows"], [444, "port-specific-changes-windows"]], "Port-Specific Changes: Mac OS X": [[443, "port-specific-changes-mac-os-x"], [444, "port-specific-changes-mac-os-x"]], "Port-Specific Changes: IRIX": [[443, "port-specific-changes-irix"]], "Porting to Python 2.6": [[443, "porting-to-python-2-6"]], "Command line and environment": [[430, "command-line-and-environment"]], "Command line": [[430, "command-line"]], "Interface options": [[430, "interface-options"]], "Generic options": [[430, "generic-options"]], "Miscellaneous options": [[430, "miscellaneous-options"]], "Options you shouldn\u2019t use": [[430, "options-you-shouldn-t-use"]], "Environment variables": [[430, "environment-variables"]], "Debug-mode variables": [[430, "debug-mode-variables"]], "What\u2019s New In Python 3.13": [[450, "what-s-new-in-python-3-13"]], "copy": [[450, "copy"]], "opcode": [[450, "opcode"]], "Pending Removal in Python 3.16": [[450, "pending-removal-in-python-3-16"]], "Porting to Python 3.13": [[450, "porting-to-python-3-13"], [450, "id5"]], "What\u2019s New In Python 3.3": [[452, "what-s-new-in-python-3-3"]], "PEP 405: Virtual Environments": [[452, "pep-405-virtual-environments"]], "PEP 420: Implicit Namespace Packages": [[452, "pep-420-implicit-namespace-packages"]], "PEP 3118: New memoryview implementation and buffer protocol documentation": [[452, "pep-3118-new-memoryview-implementation-and-buffer-protocol-documentation"]], "Features": [[452, "features"], [452, "id1"]], "API changes": [[452, "api-changes"], [452, "id2"]], "PEP 393: Flexible String Representation": [[452, "pep-393-flexible-string-representation"]], "Functionality": [[452, "functionality"]], "Performance and resource usage": [[452, "performance-and-resource-usage"]], "PEP 397: Python Launcher for Windows": [[452, "pep-397-python-launcher-for-windows"]], "PEP 3151: Reworking the OS and IO exception hierarchy": [[452, "pep-3151-reworking-the-os-and-io-exception-hierarchy"]], "PEP 380: Syntax for Delegating to a Subgenerator": [[452, "pep-380-syntax-for-delegating-to-a-subgenerator"]], "PEP 409: Suppressing exception context": [[452, "pep-409-suppressing-exception-context"]], "PEP 414: Explicit Unicode literals": [[452, "pep-414-explicit-unicode-literals"]], "PEP 3155: Qualified name for classes and functions": [[452, "pep-3155-qualified-name-for-classes-and-functions"]], "PEP 412: Key-Sharing Dictionary": [[452, "pep-412-key-sharing-dictionary"]], "PEP 362: Function Signature Object": [[452, "pep-362-function-signature-object"]], "PEP 421: Adding sys.implementation": [[452, "pep-421-adding-sys-implementation"]], "SimpleNamespace": [[452, "simplenamespace"]], "Using importlib as the Implementation of Import": [[452, "using-importlib-as-the-implementation-of-import"]], "New APIs": [[452, "new-apis"]], "Visible Changes": [[452, "visible-changes"]], "A Finer-Grained Import Lock": [[452, "a-finer-grained-import-lock"]], "Builtin functions and types": [[452, "builtin-functions-and-types"]], "crypt": [[452, "crypt"], [456, "crypt"]], "Policy Framework": [[452, "policy-framework"]], "Provisional Policy with New Header API": [[452, "provisional-policy-with-new-header-api"]], "Other API Changes": [[452, "other-api-changes"]], "nntplib": [[452, "nntplib"], [458, "nntplib"]], "sched": [[452, "sched"]], "Deprecated features": [[452, "deprecated-features"]], "Porting to Python 3.3": [[452, "porting-to-python-3-3"]], "Porting Python code": [[452, "porting-python-code"]], "Porting C code": [[452, "porting-c-code"]], "Building C extensions": [[452, "building-c-extensions"]], "Command Line Switch Changes": [[452, "command-line-switch-changes"]], "Changelog": [[459, "changelog"]], "What\u2019s New in Python 2.7": [[444, "what-s-new-in-python-2-7"]], "The Future for Python 2.x": [[444, "the-future-for-python-2-x"]], "Changes to the Handling of Deprecation Warnings": [[444, "changes-to-the-handling-of-deprecation-warnings"]], "Python 3.1 Features": [[444, "python-3-1-features"]], "PEP 372: Adding an Ordered Dictionary to collections": [[444, "pep-372-adding-an-ordered-dictionary-to-collections"]], "PEP 378: Format Specifier for Thousands Separator": [[444, "pep-378-format-specifier-for-thousands-separator"], [446, "pep-378-format-specifier-for-thousands-separator"]], "PEP 389: The argparse Module for Parsing Command Lines": [[444, "pep-389-the-argparse-module-for-parsing-command-lines"]], "PEP 391: Dictionary-Based Configuration For Logging": [[444, "pep-391-dictionary-based-configuration-for-logging"]], "PEP 3106: Dictionary Views": [[444, "pep-3106-dictionary-views"]], "PEP 3137: The memoryview Object": [[444, "pep-3137-the-memoryview-object"]], "New module: importlib": [[444, "new-module-importlib"]], "New module: sysconfig": [[444, "new-module-sysconfig"]], "ttk: Themed Widgets for Tk": [[444, "ttk-themed-widgets-for-tk"]], "Updated module: unittest": [[444, "updated-module-unittest"]], "Updated module: ElementTree 1.3": [[444, "updated-module-elementtree-1-3"]], "Port-Specific Changes: FreeBSD": [[444, "port-specific-changes-freebsd"]], "Porting to Python 2.7": [[444, "porting-to-python-2-7"]], "New Features Added to Python 2.7 Maintenance Releases": [[444, "new-features-added-to-python-2-7-maintenance-releases"]], "Two new environment variables for debug mode": [[444, "two-new-environment-variables-for-debug-mode"]], "PEP 434: IDLE Enhancement Exception for All Branches": [[444, "pep-434-idle-enhancement-exception-for-all-branches"]], "PEP 466: Network Security Enhancements for Python 2.7": [[444, "pep-466-network-security-enhancements-for-python-2-7"]], "PEP 477: Backport ensurepip (PEP 453) to Python 2.7": [[444, "pep-477-backport-ensurepip-pep-453-to-python-2-7"]], "PEP 493: HTTPS verification migration tools for Python 2.7": [[444, "pep-493-https-verification-migration-tools-for-python-2-7"]], "What\u2019s New in Python 2.2": [[439, "what-s-new-in-python-2-2"]], "PEPs 252 and 253: Type and Class Changes": [[439, "peps-252-and-253-type-and-class-changes"]], "Old and New Classes": [[439, "old-and-new-classes"]], "Descriptors": [[439, "descriptors"]], "Multiple Inheritance: The Diamond Rule": [[439, "multiple-inheritance-the-diamond-rule"]], "Attribute Access": [[439, "attribute-access"]], "Related Links": [[439, "related-links"]], "PEP 234: Iterators": [[439, "pep-234-iterators"]], "PEP 255: Simple Generators": [[439, "pep-255-simple-generators"], [440, "pep-255-simple-generators"]], "PEP 238: Changing the Division Operator": [[439, "pep-238-changing-the-division-operator"]], "Unicode Changes": [[439, "unicode-changes"]], "Interpreter Changes and Fixes": [[439, "interpreter-changes-and-fixes"]], "What\u2019s New in Python 2.3": [[440, "what-s-new-in-python-2-3"]], "PEP 218: A Standard Set Datatype": [[440, "pep-218-a-standard-set-datatype"]], "PEP 263: Source Code Encodings": [[440, "pep-263-source-code-encodings"]], "PEP 273: Importing Modules from ZIP Archives": [[440, "pep-273-importing-modules-from-zip-archives"]], "PEP 277: Unicode file name support for Windows NT": [[440, "pep-277-unicode-file-name-support-for-windows-nt"]], "PEP 278: Universal Newline Support": [[440, "pep-278-universal-newline-support"]], "PEP 279: enumerate()": [[440, "pep-279-enumerate"]], "PEP 282: The logging Package": [[440, "pep-282-the-logging-package"]], "PEP 285: A Boolean Type": [[440, "pep-285-a-boolean-type"]], "PEP 293: Codec Error Handling Callbacks": [[440, "pep-293-codec-error-handling-callbacks"]], "PEP 301: Package Index and Metadata for Distutils": [[440, "pep-301-package-index-and-metadata-for-distutils"]], "PEP 302: New Import Hooks": [[440, "pep-302-new-import-hooks"]], "PEP 305: Comma-separated Files": [[440, "pep-305-comma-separated-files"]], "PEP 307: Pickle Enhancements": [[440, "pep-307-pickle-enhancements"]], "Extended Slices": [[440, "extended-slices"]], "String Changes": [[440, "string-changes"]], "Date/Time Type": [[440, "date-time-type"]], "The optparse Module": [[440, "the-optparse-module"]], "Pymalloc: A Specialized Object Allocator": [[440, "pymalloc-a-specialized-object-allocator"]], "Porting to Python 2.3": [[440, "porting-to-python-2-3"]], "What\u2019s New In Python 3.1": [[446, "what-s-new-in-python-3-1"]], "PEP 372: Ordered Dictionaries": [[446, "pep-372-ordered-dictionaries"]], "Porting to Python 3.1": [[446, "porting-to-python-3-1"]], "What\u2019s New In Python 3.0": [[445, "what-s-new-in-python-3-0"]], "Common Stumbling Blocks": [[445, "common-stumbling-blocks"]], "Print Is A Function": [[445, "print-is-a-function"]], "Views And Iterators Instead Of Lists": [[445, "views-and-iterators-instead-of-lists"]], "Ordering Comparisons": [[445, "ordering-comparisons"]], "Integers": [[445, "integers"]], "Text Vs. Data Instead Of Unicode Vs. 8-bit": [[445, "text-vs-data-instead-of-unicode-vs-8-bit"]], "Overview Of Syntax Changes": [[445, "overview-of-syntax-changes"]], "New Syntax": [[445, "new-syntax"]], "Changed Syntax": [[445, "changed-syntax"]], "Removed Syntax": [[445, "removed-syntax"]], "Changes Already Present In Python 2.6": [[445, "changes-already-present-in-python-2-6"]], "Library Changes": [[445, "library-changes"]], "PEP 3101: A New Approach To String Formatting": [[445, "pep-3101-a-new-approach-to-string-formatting"]], "Changes To Exceptions": [[445, "changes-to-exceptions"]], "Miscellaneous Other Changes": [[445, "miscellaneous-other-changes"]], "Operators And Special Methods": [[445, "operators-and-special-methods"]], "Builtins": [[445, "builtins"]], "Porting To Python 3.0": [[445, "porting-to-python-3-0"]], "What\u2019s New In Python 3.7": [[456, "what-s-new-in-python-3-7"]], "PEP 563: Postponed Evaluation of Annotations": [[456, "pep-563-postponed-evaluation-of-annotations"]], "PEP 538: Legacy C Locale Coercion": [[456, "pep-538-legacy-c-locale-coercion"]], "PEP 540: Forced UTF-8 Runtime Mode": [[456, "pep-540-forced-utf-8-runtime-mode"]], "PEP 553: Built-in breakpoint()": [[456, "pep-553-built-in-breakpoint"]], "PEP 539: New C API for Thread-Local Storage": [[456, "pep-539-new-c-api-for-thread-local-storage"]], "PEP 562: Customization of Access to Module Attributes": [[456, "pep-562-customization-of-access-to-module-attributes"]], "PEP 564: New Time Functions With Nanosecond Resolution": [[456, "pep-564-new-time-functions-with-nanosecond-resolution"]], "PEP 565: Show DeprecationWarning in __main__": [[456, "pep-565-show-deprecationwarning-in-main"]], "PEP 560: Core Support for typing module and Generic Types": [[456, "pep-560-core-support-for-typing-module-and-generic-types"]], "PEP 552: Hash-based .pyc Files": [[456, "pep-552-hash-based-pyc-files"]], "PEP 545: Python Documentation Translations": [[456, "pep-545-python-documentation-translations"]], "Python Development Mode (-X dev)": [[456, "python-development-mode-x-dev"]], "contextvars": [[456, "contextvars"]], "http.server": [[456, "http-server"]], "mimetypes": [[456, "mimetypes"]], "msilib": [[456, "msilib"]], "queue": [[456, "queue"]], "uu": [[456, "uu"]], "xmlrpc.server": [[456, "xmlrpc-server"]], "macpath": [[456, "macpath"]], "Platform Support Removals": [[456, "platform-support-removals"]], "Module Removals": [[456, "module-removals"]], "Windows-only Changes": [[456, "windows-only-changes"], [456, "id12"]], "Porting to Python 3.7": [[456, "porting-to-python-3-7"]], "Changes in Python Behavior": [[456, "changes-in-python-behavior"]], "Other CPython implementation changes": [[456, "id13"]], "Notable changes in Python 3.7.1": [[456, "notable-changes-in-python-3-7-1"]], "Notable changes in Python 3.7.2": [[456, "notable-changes-in-python-3-7-2"]], "Notable changes in Python 3.7.6": [[456, "notable-changes-in-python-3-7-6"]], "Notable changes in Python 3.7.10": [[456, "notable-changes-in-python-3-7-10"]], "What\u2019s New In Python 3.9": [[458, "what-s-new-in-python-3-9"]], "You should check for DeprecationWarning in your code": [[458, "you-should-check-for-deprecationwarning-in-your-code"]], "Dictionary Merge & Update Operators": [[458, "dictionary-merge-update-operators"]], "New String Methods to Remove Prefixes and Suffixes": [[458, "new-string-methods-to-remove-prefixes-and-suffixes"]], "Type Hinting Generics in Standard Collections": [[458, "type-hinting-generics-in-standard-collections"]], "New Parser": [[458, "new-parser"]], "zoneinfo": [[458, "zoneinfo"]], "graphlib": [[458, "graphlib"]], "Porting to Python 3.9": [[458, "porting-to-python-3-9"], [458, "id2"]], "Notable changes in Python 3.9.1": [[458, "notable-changes-in-python-3-9-1"]], "macOS 11.0 (Big Sur) and Apple Silicon Mac support": [[458, "macos-11-0-big-sur-and-apple-silicon-mac-support"]], "Notable changes in Python 3.9.2": [[458, "notable-changes-in-python-3-9-2"]], "Configure Python": [[431, "configure-python"]], "Build Requirements": [[431, "build-requirements"]], "Generated files": [[431, "generated-files"]], "Configure Options": [[431, "configure-options"]], "General Options": [[431, "general-options"]], "C compiler options": [[431, "c-compiler-options"]], "Linker options": [[431, "linker-options"], [431, "id2"]], "Options for third-party dependencies": [[431, "options-for-third-party-dependencies"]], "WebAssembly Options": [[431, "webassembly-options"]], "Install Options": [[431, "install-options"]], "Performance options": [[431, "performance-options"]], "Python Debug Build": [[431, "python-debug-build"]], "Debug options": [[431, "debug-options"]], "Libraries options": [[431, "libraries-options"]], "Security Options": [[431, "security-options"]], "macOS Options": [[431, "macos-options"]], "Cross Compiling Options": [[431, "cross-compiling-options"]], "Python Build System": [[431, "python-build-system"]], "Main files of the build system": [[431, "main-files-of-the-build-system"]], "Main build steps": [[431, "main-build-steps"]], "Main Makefile targets": [[431, "main-makefile-targets"]], "C extensions": [[431, "c-extensions"]], "Compiler and linker flags": [[431, "compiler-and-linker-flags"]], "Preprocessor flags": [[431, "preprocessor-flags"]], "Compiler flags": [[431, "compiler-flags"]], "Linker flags": [[431, "linker-flags"]], "Using Python on a Mac": [[434, "using-python-on-a-mac"]], "Getting and Installing MacPython": [[434, "getting-and-installing-macpython"]], "How to run a Python script": [[434, "how-to-run-a-python-script"]], "Running scripts with a GUI": [[434, "running-scripts-with-a-gui"]], "Configuration": [[434, "configuration"]], "The IDE": [[434, "the-ide"]], "Installing Additional Python Packages": [[434, "installing-additional-python-packages"]], "GUI Programming on the Mac": [[434, "gui-programming-on-the-mac"]], "Distributing Python Applications on the Mac": [[434, "distributing-python-applications-on-the-mac"]], "Other Resources": [[434, "other-resources"]], "What\u2019s New in Python 2.0": [[437, "what-s-new-in-python-2-0"]], "What About Python 1.6?": [[437, "what-about-python-1-6"]], "New Development Process": [[437, "new-development-process"]], "Augmented Assignment": [[437, "augmented-assignment"]], "String Methods": [[437, "string-methods"], [324, "string-methods"]], "Garbage Collection of Cycles": [[437, "garbage-collection-of-cycles"]], "Other Core Changes": [[437, "other-core-changes"]], "Minor Language Changes": [[437, "minor-language-changes"]], "Changes to Built-in Functions": [[437, "changes-to-built-in-functions"]], "Porting to 2.0": [[437, "porting-to-2-0"]], "Extending/Embedding Changes": [[437, "extending-embedding-changes"]], "Distutils: Making Modules Easy to Install": [[437, "distutils-making-modules-easy-to-install"]], "XML Modules": [[437, "xml-modules"]], "SAX2 Support": [[437, "sax2-support"]], "DOM Support": [[437, "dom-support"]], "Relationship to PyXML": [[437, "relationship-to-pyxml"]], "Module changes": [[437, "module-changes"]], "New modules": [[437, "new-modules"]], "IDLE Improvements": [[437, "idle-improvements"]], "Deleted and Deprecated Modules": [[437, "deleted-and-deprecated-modules"]], "reprlib \u2014 Alternate repr() implementation": [[303, "module-reprlib"]], "Repr Objects": [[303, "repr-objects"]], "Subclassing Repr Objects": [[303, "subclassing-repr-objects"]], "shelve \u2014 Python object persistence": [[312, "module-shelve"]], "Restrictions": [[312, "restrictions"]], "statistics \u2014 Mathematical statistics functions": [[323, "module-statistics"]], "Averages and measures of central location": [[323, "averages-and-measures-of-central-location"]], "Measures of spread": [[323, "measures-of-spread"]], "Statistics for relations between two inputs": [[323, "statistics-for-relations-between-two-inputs"]], "Function details": [[323, "function-details"]], "NormalDist objects": [[323, "normaldist-objects"]], "NormalDist Examples and Recipes": [[323, "normaldist-examples-and-recipes"]], "Classic probability problems": [[323, "classic-probability-problems"]], "Monte Carlo inputs for simulations": [[323, "monte-carlo-inputs-for-simulations"]], "Approximating binomial distributions": [[323, "approximating-binomial-distributions"]], "Naive bayesian classifier": [[323, "naive-bayesian-classifier"]], "Kernel density estimation": [[323, "kernel-density-estimation"]], "shutil \u2014 High-level file operations": [[314, "module-shutil"]], "Directory and files operations": [[314, "directory-and-files-operations"]], "Platform-dependent efficient copy operations": [[314, "platform-dependent-efficient-copy-operations"]], "copytree example": [[314, "copytree-example"]], "rmtree example": [[314, "rmtree-example"]], "Archiving operations": [[314, "archiving-operations"]], "Archiving example": [[314, "archiving-example"]], "Archiving example with base_dir": [[314, "archiving-example-with-base-dir"]], "Querying the size of the output terminal": [[314, "querying-the-size-of-the-output-terminal"]], "selectors \u2014 High-level I/O multiplexing": [[311, "module-selectors"]], "select \u2014 Waiting for I/O completion": [[310, "module-select"]], "/dev/poll Polling Objects": [[310, "dev-poll-polling-objects"]], "Edge and Level Trigger Polling (epoll) Objects": [[310, "edge-and-level-trigger-polling-epoll-objects"]], "Polling Objects": [[310, "polling-objects"]], "Kqueue Objects": [[310, "kqueue-objects"]], "Kevent Objects": [[310, "kevent-objects"]], "random \u2014 Generate pseudo-random numbers": [[300, "module-random"]], "Bookkeeping functions": [[300, "bookkeeping-functions"]], "Functions for bytes": [[300, "functions-for-bytes"]], "Functions for integers": [[300, "functions-for-integers"]], "Functions for sequences": [[300, "functions-for-sequences"]], "Discrete distributions": [[300, "discrete-distributions"]], "Real-valued distributions": [[300, "real-valued-distributions"]], "Alternative Generator": [[300, "alternative-generator"]], "Notes on Reproducibility": [[300, "notes-on-reproducibility"]], "Recipes": [[300, "recipes"], [175, "recipes"]], "smtplib \u2014 SMTP protocol client": [[317, "module-smtplib"]], "SMTP Objects": [[317, "smtp-objects"]], "SMTP Example": [[317, "smtp-example"]], "stat \u2014 Interpreting stat() results": [[322, "module-stat"]], "struct \u2014 Interpret bytes as packed binary data": [[327, "struct-interpret-bytes-as-packed-binary-data"]], "Functions and Exceptions": [[327, "functions-and-exceptions"]], "Format Strings": [[327, "format-strings"]], "Byte Order, Size, and Alignment": [[327, "byte-order-size-and-alignment"]], "Format Characters": [[327, "format-characters"]], "Applications": [[327, "applications"]], "Native Formats": [[327, "native-formats"]], "Standard Formats": [[327, "standard-formats"]], "Python Runtime Services": [[297, "python-runtime-services"]], "socketserver \u2014 A framework for network servers": [[319, "module-socketserver"]], "Server Creation Notes": [[319, "server-creation-notes"]], "Request Handler Objects": [[319, "request-handler-objects"]], "socketserver.TCPServer Example": [[319, "socketserver-tcpserver-example"]], "socketserver.UDPServer Example": [[319, "socketserver-udpserver-example"]], "Asynchronous Mixins": [[319, "asynchronous-mixins"]], "subprocess \u2014 Subprocess management": [[328, "module-subprocess"]], "Using the subprocess Module": [[328, "using-the-subprocess-module"]], "Frequently Used Arguments": [[328, "frequently-used-arguments"]], "Popen Constructor": [[328, "popen-constructor"]], "Security Considerations": [[328, "security-considerations"], [309, "security-considerations"], [234, "security-considerations"], [136, "security-considerations"]], "Popen Objects": [[328, "popen-objects"]], "Windows Popen Helpers": [[328, "windows-popen-helpers"]], "Windows Constants": [[328, "windows-constants"]], "Older high-level API": [[328, "older-high-level-api"]], "Replacing Older Functions with the subprocess Module": [[328, "replacing-older-functions-with-the-subprocess-module"]], "Replacing /bin/sh shell command substitution": [[328, "replacing-bin-sh-shell-command-substitution"]], "Replacing shell pipeline": [[328, "replacing-shell-pipeline"]], "Replacing os.system()": [[328, "replacing-os-system"]], "Replacing the os.spawn family": [[328, "replacing-the-os-spawn-family"]], "Replacing os.popen(), os.popen2(), os.popen3()": [[328, "replacing-os-popen-os-popen2-os-popen3"]], "Replacing functions from the popen2 module": [[328, "replacing-functions-from-the-popen2-module"]], "Legacy Shell Invocation Functions": [[328, "legacy-shell-invocation-functions"]], "Notes": [[328, "notes"], [200, "notes"]], "Converting an argument sequence to a string on Windows": [[328, "converting-an-argument-sequence-to-a-string-on-windows"]], "Disabling use of vfork() or posix_spawn()": [[328, "disabling-use-of-vfork-or-posix-spawn"]], "runpy \u2014 Locating and executing Python modules": [[306, "module-runpy"]], "signal \u2014 Set handlers for asynchronous events": [[315, "module-signal"]], "General rules": [[315, "general-rules"]], "Execution of Python signal handlers": [[315, "execution-of-python-signal-handlers"]], "Signals and threads": [[315, "signals-and-threads"]], "Note on SIGPIPE": [[315, "note-on-sigpipe"]], "Note on Signal Handlers and Exceptions": [[315, "note-on-signal-handlers-and-exceptions"]], "sqlite3 \u2014 DB-API 2.0 interface for SQLite databases": [[320, "module-sqlite3"]], "Module functions": [[320, "module-functions"]], "Module constants": [[320, "module-constants"]], "Connection objects": [[320, "connection-objects"]], "Cursor objects": [[320, "cursor-objects"]], "Row objects": [[320, "row-objects"]], "Blob objects": [[320, "blob-objects"]], "PrepareProtocol objects": [[320, "prepareprotocol-objects"]], "SQLite and Python types": [[320, "sqlite-and-python-types"]], "Default adapters and converters (deprecated)": [[320, "default-adapters-and-converters-deprecated"]], "How to use placeholders to bind values in SQL queries": [[320, "how-to-use-placeholders-to-bind-values-in-sql-queries"]], "How to adapt custom Python types to SQLite values": [[320, "how-to-adapt-custom-python-types-to-sqlite-values"]], "How to write adaptable objects": [[320, "how-to-write-adaptable-objects"]], "How to register adapter callables": [[320, "how-to-register-adapter-callables"]], "How to convert SQLite values to custom Python types": [[320, "how-to-convert-sqlite-values-to-custom-python-types"]], "Adapter and converter recipes": [[320, "adapter-and-converter-recipes"]], "How to use connection shortcut methods": [[320, "how-to-use-connection-shortcut-methods"]], "How to use the connection context manager": [[320, "how-to-use-the-connection-context-manager"]], "How to work with SQLite URIs": [[320, "how-to-work-with-sqlite-uris"]], "How to create and use row factories": [[320, "how-to-create-and-use-row-factories"]], "Transaction control": [[320, "transaction-control"]], "Transaction control via the autocommit attribute": [[320, "transaction-control-via-the-autocommit-attribute"]], "Transaction control via the isolation_level attribute": [[320, "transaction-control-via-the-isolation-level-attribute"]], "ssl \u2014 TLS/SSL wrapper for socket objects": [[321, "module-ssl"]], "Functions, Constants, and Exceptions": [[321, "functions-constants-and-exceptions"]], "Socket creation": [[321, "socket-creation"]], "Context creation": [[321, "context-creation"]], "Random generation": [[321, "random-generation"]], "Certificate handling": [[321, "certificate-handling"]], "SSL Sockets": [[321, "ssl-sockets"]], "SSL Contexts": [[321, "ssl-contexts"]], "Certificates": [[321, "certificates"]], "Certificate chains": [[321, "certificate-chains"]], "CA certificates": [[321, "ca-certificates"]], "Combined key and certificate": [[321, "combined-key-and-certificate"]], "Self-signed certificates": [[321, "self-signed-certificates"]], "Testing for SSL support": [[321, "testing-for-ssl-support"]], "Client-side operation": [[321, "client-side-operation"]], "Server-side operation": [[321, "server-side-operation"]], "Notes on non-blocking sockets": [[321, "notes-on-non-blocking-sockets"]], "SSL session": [[321, "ssl-session"]], "Security considerations": [[321, "security-considerations"], [256, "security-considerations"]], "Best defaults": [[321, "best-defaults"]], "Manual settings": [[321, "manual-settings"]], "Verifying certificates": [[321, "verifying-certificates"]], "Protocol versions": [[321, "protocol-versions"]], "Cipher selection": [[321, "cipher-selection"]], "Multi-processing": [[321, "multi-processing"]], "TLS 1.3": [[321, "tls-1-3"]], "Built-in Types": [[324, "built-in-types"]], "Truth Value Testing": [[324, "truth-value-testing"]], "Boolean Operations \u2014 and, or, not": [[324, "boolean-operations-and-or-not"]], "Numeric Types \u2014 int, float, complex": [[324, "numeric-types-int-float-complex"]], "Bitwise Operations on Integer Types": [[324, "bitwise-operations-on-integer-types"]], "Additional Methods on Integer Types": [[324, "additional-methods-on-integer-types"]], "Additional Methods on Float": [[324, "additional-methods-on-float"]], "Hashing of numeric types": [[324, "hashing-of-numeric-types"]], "Boolean Type - bool": [[324, "boolean-type-bool"]], "Iterator Types": [[324, "iterator-types"]], "Generator Types": [[324, "generator-types"]], "Sequence Types \u2014 list, tuple, range": [[324, "sequence-types-list-tuple-range"]], "Common Sequence Operations": [[324, "common-sequence-operations"]], "Immutable Sequence Types": [[324, "immutable-sequence-types"]], "Mutable Sequence Types": [[324, "mutable-sequence-types"]], "Tuples": [[324, "tuples"]], "Ranges": [[324, "ranges"]], "Text Sequence Type \u2014 str": [[324, "text-sequence-type-str"]], "printf-style String Formatting": [[324, "printf-style-string-formatting"]], "Binary Sequence Types \u2014 bytes, bytearray, memoryview": [[324, "binary-sequence-types-bytes-bytearray-memoryview"]], "Bytearray Objects": [[324, "bytearray-objects"]], "Bytes and Bytearray Operations": [[324, "bytes-and-bytearray-operations"]], "printf-style Bytes Formatting": [[324, "printf-style-bytes-formatting"]], "Memory Views": [[324, "memory-views"]], "Set Types \u2014 set, frozenset": [[324, "set-types-set-frozenset"]], "Mapping Types \u2014 dict": [[324, "mapping-types-dict"]], "Dictionary view objects": [[324, "dictionary-view-objects"]], "Context Manager Types": [[324, "context-manager-types"]], "Type Annotation Types \u2014 Generic Alias, Union": [[324, "type-annotation-types-generic-alias-union"]], "Generic Alias Type": [[324, "generic-alias-type"]], "Standard Generic Classes": [[324, "standard-generic-classes"]], "Special Attributes of GenericAlias objects": [[324, "special-attributes-of-genericalias-objects"]], "Union Type": [[324, "union-type"]], "Other Built-in Types": [[324, "other-built-in-types"]], "Classes and Class Instances": [[324, "classes-and-class-instances"]], "The Null Object": [[324, "the-null-object"]], "The Ellipsis Object": [[324, "the-ellipsis-object"]], "The NotImplemented Object": [[324, "the-notimplemented-object"]], "Internal Objects": [[324, "internal-objects"]], "Special Attributes": [[324, "special-attributes"]], "Integer string conversion length limitation": [[324, "integer-string-conversion-length-limitation"]], "Affected APIs": [[324, "affected-apis"]], "Configuring the limit": [[324, "configuring-the-limit"]], "Recommended configuration": [[324, "recommended-configuration"]], "resource \u2014 Resource usage information": [[304, "module-resource"]], "Resource Limits": [[304, "resource-limits"]], "Resource Usage": [[304, "resource-usage"]], "rlcompleter \u2014 Completion function for GNU readline": [[305, "module-rlcompleter"]], "Completer Objects": [[305, "completer-objects"]], "Superseded Modules": [[329, "superseded-modules"]], "socket \u2014 Low-level networking interface": [[318, "module-socket"]], "Socket families": [[318, "socket-families"]], "Creating sockets": [[318, "creating-sockets"]], "Socket Objects": [[318, "socket-objects"]], "Notes on socket timeouts": [[318, "notes-on-socket-timeouts"]], "Timeouts and the connect method": [[318, "timeouts-and-the-connect-method"]], "Timeouts and the accept method": [[318, "timeouts-and-the-accept-method"]], "sched \u2014 Event scheduler": [[307, "module-sched"]], "Scheduler Objects": [[307, "scheduler-objects"]], "shlex \u2014 Simple lexical analysis": [[313, "module-shlex"]], "shlex Objects": [[313, "shlex-objects"]], "Parsing Rules": [[313, "parsing-rules"]], "Improved Compatibility with Shells": [[313, "improved-compatibility-with-shells"]], "site \u2014 Site-specific configuration hook": [[316, "module-site"]], "Readline configuration": [[316, "readline-configuration"]], "Command Line Interface": [[316, "command-line-interface"], [243, "command-line-interface"], [250, "module-json.tool"], [223, "command-line-interface"]], "stringprep \u2014 Internet String Preparation": [[326, "module-stringprep"]], "string \u2014 Common string operations": [[325, "module-string"]], "String constants": [[325, "string-constants"]], "Custom String Formatting": [[325, "custom-string-formatting"]], "Format String Syntax": [[325, "format-string-syntax"]], "Format Specification Mini-Language": [[325, "format-specification-mini-language"]], "Format examples": [[325, "format-examples"]], "Template strings": [[325, "template-strings"]], "Helper functions": [[325, "helper-functions"]], "queue \u2014 A synchronized queue class": [[298, "module-queue"]], "Queue Objects": [[298, "queue-objects"]], "SimpleQueue Objects": [[298, "simplequeue-objects"]], "readline \u2014 GNU readline interface": [[302, "module-readline"]], "Init file": [[302, "init-file"]], "Line buffer": [[302, "line-buffer"]], "History file": [[302, "history-file"]], "History list": [[302, "history-list"]], "Startup hooks": [[302, "startup-hooks"]], "Completion": [[302, "completion"]], "secrets \u2014 Generate secure random numbers for managing secrets": [[308, "module-secrets"]], "Random numbers": [[308, "random-numbers"], [277, "random-numbers"]], "Generating tokens": [[308, "generating-tokens"]], "How many bytes should tokens use?": [[308, "how-many-bytes-should-tokens-use"]], "Recipes and best practices": [[308, "recipes-and-best-practices"]], "re \u2014 Regular expression operations": [[301, "module-re"]], "Regular Expression Syntax": [[301, "regular-expression-syntax"]], "Flags": [[301, "flags"]], "Regular Expression Objects": [[301, "regular-expression-objects"]], "Match Objects": [[301, "match-objects"]], "Regular Expression Examples": [[301, "regular-expression-examples"]], "Checking for a Pair": [[301, "checking-for-a-pair"]], "Simulating scanf()": [[301, "simulating-scanf"]], "search() vs. match()": [[301, "search-vs-match"]], "Making a Phonebook": [[301, "making-a-phonebook"]], "Text Munging": [[301, "text-munging"]], "Finding all Adverbs": [[301, "finding-all-adverbs"]], "Finding all Adverbs and their Positions": [[301, "finding-all-adverbs-and-their-positions"]], "Raw String Notation": [[301, "raw-string-notation"]], "Writing a Tokenizer": [[301, "writing-a-tokenizer"]], "quopri \u2014 Encode and decode MIME quoted-printable data": [[299, "module-quopri"]], "modulefinder \u2014 Find modules used by a script": [[266, "module-modulefinder"]], "Example usage of ModuleFinder": [[266, "example-usage-of-modulefinder"]], "Multimedia Services": [[264, "multimedia-services"]], "multiprocessing.shared_memory \u2014 Shared memory for direct access across processes": [[270, "module-multiprocessing.shared_memory"]], "netrc \u2014 netrc file processing": [[272, "module-netrc"]], "netrc Objects": [[272, "netrc-objects"]], "pydoc \u2014 Documentation generator and online help system": [[295, "module-pydoc"]], "poplib \u2014 POP3 protocol client": [[287, "module-poplib"]], "POP3 Objects": [[287, "pop3-objects"]], "POP3 Example": [[287, "pop3-example"]], "plistlib \u2014 Generate and parse Apple .plist files": [[286, "module-plistlib"]], "pathlib \u2014 Object-oriented filesystem paths": [[279, "module-pathlib"]], "Basic use": [[279, "basic-use"]], "Pure paths": [[279, "pure-paths"]], "General properties": [[279, "general-properties"]], "Accessing individual parts": [[279, "accessing-individual-parts"]], "Methods and properties": [[279, "methods-and-properties"]], "Concrete paths": [[279, "concrete-paths"]], "Correspondence to tools in the os module": [[279, "correspondence-to-tools-in-the-os-module"]], "xml.parsers.expat \u2014 Fast XML parsing using Expat": [[296, "module-xml.parsers.expat"]], "ExpatError Exceptions": [[296, "expaterror-exceptions"]], "Content Model Descriptions": [[296, "module-xml.parsers.expat.model"]], "Expat error constants": [[296, "module-xml.parsers.expat.errors"]], "msvcrt \u2014 Useful routines from the MS VC++ runtime": [[268, "module-msvcrt"]], "File Operations": [[268, "file-operations"]], "Console I/O": [[268, "console-i-o"]], "Other Functions": [[268, "other-functions"]], "operator \u2014 Standard operators as functions": [[275, "module-operator"]], "Mapping Operators to Functions": [[275, "mapping-operators-to-functions"]], "In-place Operators": [[275, "in-place-operators"]], "pyclbr \u2014 Python module browser support": [[294, "module-pyclbr"]], "pickle \u2014 Python object serialization": [[282, "module-pickle"]], "Relationship to other Python modules": [[282, "relationship-to-other-python-modules"]], "Comparison with marshal": [[282, "comparison-with-marshal"]], "Comparison with json": [[282, "comparison-with-json"]], "Data stream format": [[282, "data-stream-format"]], "Module Interface": [[282, "module-interface"]], "What can be pickled and unpickled?": [[282, "what-can-be-pickled-and-unpickled"]], "Pickling Class Instances": [[282, "pickling-class-instances"]], "Persistence of External Objects": [[282, "persistence-of-external-objects"]], "Dispatch Tables": [[282, "dispatch-tables"]], "Handling Stateful Objects": [[282, "handling-stateful-objects"]], "Custom Reduction for Types, Functions, and Other Objects": [[282, "custom-reduction-for-types-functions-and-other-objects"]], "Out-of-band Buffers": [[282, "out-of-band-buffers"]], "Provider API": [[282, "provider-api"]], "Consumer API": [[282, "consumer-api"]], "Restricting Globals": [[282, "restricting-globals"]], "Data Persistence": [[281, "data-persistence"]], "multiprocessing \u2014 Process-based parallelism": [[269, "module-multiprocessing"]], "The Process class": [[269, "the-process-class"]], "Contexts and start methods": [[269, "contexts-and-start-methods"]], "Exchanging objects between processes": [[269, "exchanging-objects-between-processes"]], "Synchronization between processes": [[269, "synchronization-between-processes"]], "Sharing state between processes": [[269, "sharing-state-between-processes"]], "Using a pool of workers": [[269, "using-a-pool-of-workers"]], "Process and exceptions": [[269, "process-and-exceptions"]], "Pipes and Queues": [[269, "pipes-and-queues"]], "Connection Objects": [[269, "connection-objects"]], "Synchronization primitives": [[269, "synchronization-primitives"]], "Shared ctypes Objects": [[269, "shared-ctypes-objects"]], "The multiprocessing.sharedctypes module": [[269, "module-multiprocessing.sharedctypes"]], "Managers": [[269, "managers"]], "Customized managers": [[269, "customized-managers"]], "Using a remote manager": [[269, "using-a-remote-manager"]], "Proxy Objects": [[269, "proxy-objects"]], "Cleanup": [[269, "cleanup"], [276, "cleanup"]], "Process Pools": [[269, "module-multiprocessing.pool"]], "Listeners and Clients": [[269, "module-multiprocessing.connection"]], "Address Formats": [[269, "address-formats"]], "Authentication keys": [[269, "authentication-keys"]], "The multiprocessing.dummy module": [[269, "module-multiprocessing.dummy"]], "Programming guidelines": [[269, "programming-guidelines"]], "All start methods": [[269, "all-start-methods"]], "The spawn and forkserver start methods": [[269, "the-spawn-and-forkserver-start-methods"]], "os \u2014 Miscellaneous operating system interfaces": [[277, "module-os"]], "File Names, Command Line Arguments, and Environment Variables": [[277, "file-names-command-line-arguments-and-environment-variables"]], "Python UTF-8 Mode": [[277, "python-utf-8-mode"]], "Process Parameters": [[277, "process-parameters"]], "File Object Creation": [[277, "file-object-creation"]], "File Descriptor Operations": [[277, "file-descriptor-operations"]], "Querying the size of a terminal": [[277, "querying-the-size-of-a-terminal"]], "Inheritance of File Descriptors": [[277, "inheritance-of-file-descriptors"]], "Files and Directories": [[277, "files-and-directories"]], "Linux extended attributes": [[277, "linux-extended-attributes"]], "Process Management": [[277, "process-management"]], "Interface to the scheduler": [[277, "interface-to-the-scheduler"]], "Miscellaneous System Information": [[277, "miscellaneous-system-information"]], "numbers \u2014 Numeric abstract base classes": [[273, "module-numbers"]], "The numeric tower": [[273, "the-numeric-tower"]], "Notes for type implementors": [[273, "notes-for-type-implementors"]], "Adding More Numeric ABCs": [[273, "adding-more-numeric-abcs"]], "Implementing the arithmetic operations": [[273, "implementing-the-arithmetic-operations"]], "platform \u2014  Access to underlying platform\u2019s identifying data": [[285, "module-platform"]], "Cross Platform": [[285, "cross-platform"]], "Java Platform": [[285, "java-platform"]], "Windows Platform": [[285, "windows-platform"]], "macOS Platform": [[285, "macos-platform"]], "Unix Platforms": [[285, "unix-platforms"]], "Linux Platforms": [[285, "linux-platforms"]], "pkgutil \u2014 Package extension utility": [[284, "module-pkgutil"]], "posix \u2014 The most common POSIX system calls": [[288, "module-posix"]], "Large File Support": [[288, "large-file-support"]], "Notable Module Contents": [[288, "notable-module-contents"]], "mmap \u2014 Memory-mapped file support": [[265, "module-mmap"]], "MADV_* Constants": [[265, "madv-constants"]], "MAP_* Constants": [[265, "map-constants"]], "pty \u2014 Pseudo-terminal utilities": [[291, "module-pty"]], "pwd \u2014 The password database": [[292, "module-pwd"]], "pprint \u2014 Data pretty printer": [[289, "module-pprint"]], "PrettyPrinter Objects": [[289, "prettyprinter-objects"]], "optparse \u2014 Parser for command line options": [[276, "module-optparse"]], "What are options for?": [[276, "what-are-options-for"]], "What are positional arguments for?": [[276, "what-are-positional-arguments-for"]], "Understanding option actions": [[276, "understanding-option-actions"]], "The store action": [[276, "the-store-action"]], "Handling boolean (flag) options": [[276, "handling-boolean-flag-options"]], "Other actions": [[276, "other-actions"]], "Default values": [[276, "default-values"]], "Generating help": [[276, "generating-help"]], "Grouping Options": [[276, "grouping-options"]], "Printing a version string": [[276, "printing-a-version-string"]], "How optparse handles errors": [[276, "how-optparse-handles-errors"]], "Putting it all together": [[276, "putting-it-all-together"]], "Reference Guide": [[276, "reference-guide"]], "Creating the parser": [[276, "creating-the-parser"]], "Populating the parser": [[276, "populating-the-parser"]], "Defining options": [[276, "defining-options"]], "Option attributes": [[276, "option-attributes"]], "Standard option actions": [[276, "standard-option-actions"]], "Standard option types": [[276, "standard-option-types"]], "Querying and manipulating your option parser": [[276, "querying-and-manipulating-your-option-parser"]], "Conflicts between options": [[276, "conflicts-between-options"]], "Other methods": [[276, "other-methods"]], "Option Callbacks": [[276, "option-callbacks"]], "Defining a callback option": [[276, "defining-a-callback-option"]], "How callbacks are called": [[276, "how-callbacks-are-called"]], "Raising errors in a callback": [[276, "raising-errors-in-a-callback"]], "Callback example 1: trivial callback": [[276, "callback-example-1-trivial-callback"]], "Callback example 2: check option order": [[276, "callback-example-2-check-option-order"]], "Callback example 3: check option order (generalized)": [[276, "callback-example-3-check-option-order-generalized"]], "Callback example 4: check arbitrary condition": [[276, "callback-example-4-check-arbitrary-condition"]], "Callback example 5: fixed arguments": [[276, "callback-example-5-fixed-arguments"]], "Callback example 6: variable arguments": [[276, "callback-example-6-variable-arguments"]], "Extending optparse": [[276, "extending-optparse"]], "Adding new types": [[276, "adding-new-types"]], "Adding new actions": [[276, "adding-new-actions"]], "The Python Profilers": [[290, "the-python-profilers"]], "Introduction to the profilers": [[290, "introduction-to-the-profilers"]], "Instant User\u2019s Manual": [[290, "instant-user-s-manual"]], "profile and cProfile Module Reference": [[290, "module-cProfile"]], "The Stats Class": [[290, "the-stats-class"]], "What Is Deterministic Profiling?": [[290, "what-is-deterministic-profiling"]], "Limitations": [[290, "limitations"]], "Calibration": [[290, "calibration"]], "Using a custom timer": [[290, "using-a-custom-timer"]], "pdb \u2014 The Python Debugger": [[280, "module-pdb"]], "Debugger Commands": [[280, "debugger-commands"]], "pickletools \u2014 Tools for pickle developers": [[283, "module-pickletools"]], "Command line usage": [[283, "command-line-usage"], [236, "command-line-usage"]], "Command line options": [[283, "command-line-options"], [250, "command-line-options"], [223, "command-line-options"]], "Internet Data Handling": [[271, "internet-data-handling"]], "os.path \u2014 Common pathname manipulations": [[278, "module-os.path"]], "py_compile \u2014 Compile Python source files": [[293, "module-py_compile"]], "Numeric and Mathematical Modules": [[274, "numeric-and-mathematical-modules"]], "lzma \u2014 Compression using the LZMA algorithm": [[258, "module-lzma"]], "Reading and writing compressed files": [[258, "reading-and-writing-compressed-files"]], "Compressing and decompressing data in memory": [[258, "compressing-and-decompressing-data-in-memory"]], "Specifying custom filter chains": [[258, "specifying-custom-filter-chains"]], "logging \u2014 Logging facility for Python": [[255, "module-logging"]], "Important": [[255, "index-0"], [257, null], [256, null], [200, null]], "Logger Objects": [[255, "logger-objects"]], "Handler Objects": [[255, "handler-objects"]], "Formatter Objects": [[255, "formatter-objects"]], "Filter Objects": [[255, "filter-objects"]], "LogRecord Objects": [[255, "logrecord-objects"]], "LogRecord attributes": [[255, "logrecord-attributes"]], "LoggerAdapter Objects": [[255, "loggeradapter-objects"]], "Thread Safety": [[255, "thread-safety"]], "Module-Level Attributes": [[255, "module-level-attributes"]], "Integration with the warnings module": [[255, "integration-with-the-warnings-module"]], "http.cookies \u2014 HTTP state management": [[233, "module-http.cookies"]], "Cookie Objects": [[233, "cookie-objects"], [232, "cookie-objects"]], "Morsel Objects": [[233, "morsel-objects"]], "Internationalization": [[235, "internationalization"]], "Notes on availability": [[245, "notes-on-availability"]], "WebAssembly platforms": [[245, "webassembly-platforms"]], "http.server \u2014 HTTP servers": [[234, "module-http.server"]], "importlib.metadata \u2013 Accessing package metadata": [[239, "module-importlib.metadata"]], "Entry points": [[239, "entry-points"]], "Distribution metadata": [[239, "distribution-metadata"]], "Distribution versions": [[239, "distribution-versions"]], "Distribution files": [[239, "distribution-files"]], "Distribution requirements": [[239, "distribution-requirements"]], "Mapping import to distribution packages": [[239, "mapping-import-to-distribution-packages"]], "Distributions": [[239, "distributions"]], "Distribution Discovery": [[239, "distribution-discovery"]], "Extending the search algorithm": [[239, "extending-the-search-algorithm"]], "logging.handlers \u2014 Logging handlers": [[257, "module-logging.handlers"]], "StreamHandler": [[257, "streamhandler"]], "FileHandler": [[257, "filehandler"]], "NullHandler": [[257, "nullhandler"]], "WatchedFileHandler": [[257, "watchedfilehandler"]], "BaseRotatingHandler": [[257, "baserotatinghandler"]], "RotatingFileHandler": [[257, "rotatingfilehandler"]], "TimedRotatingFileHandler": [[257, "timedrotatingfilehandler"]], "SocketHandler": [[257, "sockethandler"]], "DatagramHandler": [[257, "datagramhandler"]], "SysLogHandler": [[257, "sysloghandler"]], "NTEventLogHandler": [[257, "nteventloghandler"]], "SMTPHandler": [[257, "smtphandler"]], "MemoryHandler": [[257, "memoryhandler"]], "HTTPHandler": [[257, "httphandler"]], "QueueHandler": [[257, "queuehandler"]], "QueueListener": [[257, "queuelistener"]], "logging.config \u2014 Logging configuration": [[256, "module-logging.config"]], "Configuration functions": [[256, "configuration-functions"]], "Configuration dictionary schema": [[256, "configuration-dictionary-schema"]], "Dictionary Schema Details": [[256, "dictionary-schema-details"]], "Incremental Configuration": [[256, "incremental-configuration"]], "Object connections": [[256, "object-connections"]], "User-defined objects": [[256, "user-defined-objects"]], "Handler configuration order": [[256, "handler-configuration-order"]], "Access to external objects": [[256, "access-to-external-objects"]], "Access to internal objects": [[256, "access-to-internal-objects"]], "Import resolution and custom importers": [[256, "import-resolution-and-custom-importers"]], "Configuring QueueHandler and QueueListener": [[256, "configuring-queuehandler-and-queuelistener"]], "Configuration file format": [[256, "configuration-file-format"]], "marshal \u2014 Internal Python object serialization": [[261, "module-marshal"]], "linecache \u2014 Random access to text lines": [[253, "module-linecache"]], "The Python Standard Library": [[242, "the-python-standard-library"]], "Python Language Services": [[252, "python-language-services"]], "inspect \u2014 Inspect live objects": [[243, "module-inspect"]], "Types and members": [[243, "types-and-members"]], "Retrieving source code": [[243, "retrieving-source-code"]], "Introspecting callables with the Signature object": [[243, "introspecting-callables-with-the-signature-object"]], "The interpreter stack": [[243, "the-interpreter-stack"]], "Fetching attributes statically": [[243, "fetching-attributes-statically"]], "Current State of Generators, Coroutines, and Asynchronous Generators": [[243, "current-state-of-generators-coroutines-and-asynchronous-generators"]], "Code Objects Bit Flags": [[243, "code-objects-bit-flags"]], "Buffer flags": [[243, "buffer-flags"]], "io \u2014 Core tools for working with streams": [[246, "module-io"]], "Text I/O": [[246, "text-i-o"], [246, "id1"], [246, "id3"]], "Binary I/O": [[246, "binary-i-o"], [246, "id2"]], "Raw I/O": [[246, "raw-i-o"]], "Text Encoding": [[246, "text-encoding"]], "Opt-in EncodingWarning": [[246, "opt-in-encodingwarning"]], "High-level Module Interface": [[246, "high-level-module-interface"]], "Class hierarchy": [[246, "class-hierarchy"]], "I/O Base Classes": [[246, "i-o-base-classes"]], "Raw File I/O": [[246, "raw-file-i-o"]], "Buffered Streams": [[246, "buffered-streams"]], "Reentrancy": [[246, "reentrancy"]], "keyword \u2014 Testing for Python keywords": [[251, "module-keyword"]], "json \u2014 JSON encoder and decoder": [[250, "module-json"]], "Basic Usage": [[250, "basic-usage"]], "Encoders and Decoders": [[250, "encoders-and-decoders"]], "Standard Compliance and Interoperability": [[250, "standard-compliance-and-interoperability"]], "Character Encodings": [[250, "character-encodings"]], "Infinite and NaN Number Values": [[250, "infinite-and-nan-number-values"]], "Repeated Names Within an Object": [[250, "repeated-names-within-an-object"]], "Top-level Non-Object, Non-Array Values": [[250, "top-level-non-object-non-array-values"]], "Implementation Limitations": [[250, "implementation-limitations"]], "Menus": [[236, "menus"]], "File menu (Shell and Editor)": [[236, "file-menu-shell-and-editor"]], "Edit menu (Shell and Editor)": [[236, "edit-menu-shell-and-editor"]], "Format menu (Editor window only)": [[236, "format-menu-editor-window-only"]], "Run menu (Editor window only)": [[236, "run-menu-editor-window-only"]], "Shell menu (Shell window only)": [[236, "shell-menu-shell-window-only"]], "Debug menu (Shell window only)": [[236, "debug-menu-shell-window-only"]], "Options menu (Shell and Editor)": [[236, "options-menu-shell-and-editor"]], "Window menu (Shell and Editor)": [[236, "window-menu-shell-and-editor"]], "Help menu (Shell and Editor)": [[236, "help-menu-shell-and-editor"]], "Context menus": [[236, "context-menus"]], "Editing and Navigation": [[236, "editing-and-navigation"]], "Editor windows": [[236, "editor-windows"]], "Key bindings": [[236, "key-bindings"]], "Automatic indentation": [[236, "automatic-indentation"]], "Completions": [[236, "completions"]], "Calltips": [[236, "calltips"]], "Code Context": [[236, "code-context"]], "Shell window": [[236, "shell-window"]], "Text colors": [[236, "text-colors"]], "Startup and Code Execution": [[236, "startup-and-code-execution"]], "Startup failure": [[236, "startup-failure"]], "Running user code": [[236, "running-user-code"]], "User output in Shell": [[236, "user-output-in-shell"]], "Developing tkinter applications": [[236, "developing-tkinter-applications"]], "Running without a subprocess": [[236, "running-without-a-subprocess"]], "Help and Preferences": [[236, "help-and-preferences"]], "Help sources": [[236, "help-sources"]], "Setting preferences": [[236, "setting-preferences"]], "IDLE on macOS": [[236, "idle-on-macos"]], "Extensions": [[236, "extensions"]], "idlelib": [[236, "module-idlelib"]], "mimetypes \u2014 Map filenames to MIME types": [[263, "module-mimetypes"]], "MimeTypes Objects": [[263, "mimetypes-objects"]], "locale \u2014 Internationalization services": [[254, "module-locale"]], "Background, details, hints, tips and caveats": [[254, "background-details-hints-tips-and-caveats"]], "For extension writers and programs that embed Python": [[254, "for-extension-writers-and-programs-that-embed-python"]], "Access to message catalogs": [[254, "access-to-message-catalogs"]], "importlib \u2014 The implementation of import": [[238, "module-importlib"]], "importlib.abc \u2013 Abstract base classes related to import": [[238, "module-importlib.abc"]], "importlib.machinery \u2013 Importers and path hooks": [[238, "module-importlib.machinery"]], "importlib.util \u2013 Utility code for importers": [[238, "module-importlib.util"]], "Importing programmatically": [[238, "importing-programmatically"]], "Checking if a module can be imported": [[238, "checking-if-a-module-can-be-imported"]], "Importing a source file directly": [[238, "importing-a-source-file-directly"]], "Implementing lazy imports": [[238, "implementing-lazy-imports"]], "Setting up an importer": [[238, "setting-up-an-importer"]], "Approximating importlib.import_module()": [[238, "approximating-importlib-import-module"]], "http.cookiejar \u2014 Cookie handling for HTTP clients": [[232, "module-http.cookiejar"]], "CookieJar and FileCookieJar Objects": [[232, "cookiejar-and-filecookiejar-objects"]], "FileCookieJar subclasses and co-operation with web browsers": [[232, "filecookiejar-subclasses-and-co-operation-with-web-browsers"]], "CookiePolicy Objects": [[232, "cookiepolicy-objects"]], "DefaultCookiePolicy Objects": [[232, "defaultcookiepolicy-objects"]], "itertools \u2014 Functions creating iterators for efficient looping": [[249, "module-itertools"]], "Itertool functions": [[249, "itertool-functions"]], "Itertools Recipes": [[249, "itertools-recipes"]], "importlib.resources \u2013 Package resource reading, opening and access": [[240, "module-importlib.resources"]], "Internet Protocols and Support": [[244, "internet-protocols-and-support"]], "importlib.resources.abc \u2013 Abstract base classes for resources": [[241, "module-importlib.resources.abc"]], "Networking and Interprocess Communication": [[248, "networking-and-interprocess-communication"]], "Structured Markup Processing Tools": [[260, "structured-markup-processing-tools"]], "imaplib \u2014 IMAP4 protocol client": [[237, "module-imaplib"]], "IMAP4 Objects": [[237, "imap4-objects"]], "IMAP4 Example": [[237, "imap4-example"]], "ipaddress \u2014 IPv4/IPv6 manipulation library": [[247, "module-ipaddress"]], "Convenience factory functions": [[247, "convenience-factory-functions"]], "IP Addresses": [[247, "ip-addresses"]], "Address objects": [[247, "address-objects"]], "Conversion to Strings and Integers": [[247, "conversion-to-strings-and-integers"]], "Comparison operators": [[247, "comparison-operators"]], "Arithmetic operators": [[247, "arithmetic-operators"]], "IP Network definitions": [[247, "ip-network-definitions"]], "Prefix, net mask and host mask": [[247, "prefix-net-mask-and-host-mask"]], "Network objects": [[247, "network-objects"]], "Logical operators": [[247, "logical-operators"], [247, "id3"]], "Networks as containers of addresses": [[247, "networks-as-containers-of-addresses"]], "Interface objects": [[247, "interface-objects"]], "Other Module Level Functions": [[247, "other-module-level-functions"]], "Custom Exceptions": [[247, "custom-exceptions"]], "mailbox \u2014 Manipulate mailboxes in various formats": [[259, "module-mailbox"]], "Mailbox objects": [[259, "mailbox-objects"]], "Maildir": [[259, "maildir"]], "mbox": [[259, "mbox"]], "MH": [[259, "mh"]], "Babyl": [[259, "babyl"]], "MMDF": [[259, "mmdf"]], "Message objects": [[259, "message-objects"]], "MaildirMessage": [[259, "maildirmessage"]], "mboxMessage": [[259, "mboxmessage"]], "MHMessage": [[259, "mhmessage"]], "BabylMessage": [[259, "babylmessage"]], "MMDFMessage": [[259, "mmdfmessage"]], "http.client \u2014 HTTP protocol client": [[231, "module-http.client"]], "HTTPConnection Objects": [[231, "httpconnection-objects"]], "HTTPResponse Objects": [[231, "httpresponse-objects"]], "HTTPMessage Objects": [[231, "httpmessage-objects"]], "math \u2014 Mathematical functions": [[262, "module-math"]], "Number-theoretic and representation functions": [[262, "number-theoretic-and-representation-functions"]], "Power and logarithmic functions": [[262, "power-and-logarithmic-functions"], [144, "power-and-logarithmic-functions"]], "Trigonometric functions": [[262, "trigonometric-functions"], [144, "trigonometric-functions"]], "Angular conversion": [[262, "angular-conversion"]], "Hyperbolic functions": [[262, "hyperbolic-functions"], [144, "hyperbolic-functions"]], "Special functions": [[262, "special-functions"]], "heapq \u2014 Heap queue algorithm": [[225, "module-heapq"]], "Priority Queue Implementation Notes": [[225, "priority-queue-implementation-notes"]], "Theory": [[225, "theory"]], "fractions \u2014 Rational numbers": [[210, "module-fractions"]], "grp \u2014 The group database": [[222, "module-grp"]], "ensurepip \u2014 Bootstrapping the pip installer": [[199, "module-ensurepip"]], "Command line interface": [[199, "command-line-interface"]], "Module API": [[199, "module-api"]], "File Formats": [[206, "file-formats"]], "errno \u2014 Standard errno system symbols": [[201, "module-errno"]], "File and Directory Access": [[208, "file-and-directory-access"]], "ftplib \u2014 FTP protocol client": [[212, "module-ftplib"]], "FTP Objects": [[212, "ftp-objects"]], "FTP_TLS Objects": [[212, "ftp-tls-objects"]], "http \u2014 HTTP modules": [[230, "module-http"]], "HTTP status codes": [[230, "http-status-codes"]], "HTTP status category": [[230, "http-status-category"]], "HTTP methods": [[230, "http-methods"]], "filecmp \u2014 File and Directory Comparisons": [[205, "module-filecmp"]], "The dircmp class": [[205, "the-dircmp-class"]], "Built-in Exceptions": [[202, "built-in-exceptions"]], "Exception context": [[202, "exception-context"]], "Inheriting from built-in exceptions": [[202, "inheriting-from-built-in-exceptions"]], "Base classes": [[202, "base-classes"]], "Concrete exceptions": [[202, "concrete-exceptions"]], "OS exceptions": [[202, "os-exceptions"]], "Warnings": [[202, "warnings"], [182, "warnings"]], "Exception groups": [[202, "exception-groups"]], "Exception hierarchy": [[202, "exception-hierarchy"]], "gc \u2014 Garbage Collector interface": [[216, "module-gc"]], "getpass \u2014 Portable password input": [[218, "module-getpass"]], "gzip \u2014 Support for gzip files": [[223, "module-gzip"]], "Examples of usage": [[223, "examples-of-usage"], [142, "examples-of-usage"]], "Built-in Functions": [[214, "built-in-functions"]], "html.entities \u2014 Definitions of HTML general entities": [[228, "module-html.entities"]], "html \u2014 HyperText Markup Language support": [[227, "module-html"]], "getopt \u2014 C-style parser for command line options": [[217, "module-getopt"]], "email.utils: Miscellaneous utilities": [[198, "module-email.utils"]], "enum \u2014 Support for enumerations": [[200, "module-enum"]], "Data Types": [[200, "data-types"], [171, "data-types"]], "Utilities and Decorators": [[200, "utilities-and-decorators"]], "Functional Programming Modules": [[213, "functional-programming-modules"]], "gettext \u2014 Multilingual internationalization services": [[219, "module-gettext"]], "GNU gettext API": [[219, "gnu-gettext-api"]], "Class-based API": [[219, "class-based-api"]], "The NullTranslations class": [[219, "the-nulltranslations-class"]], "The GNUTranslations class": [[219, "the-gnutranslations-class"]], "Solaris message catalog support": [[219, "solaris-message-catalog-support"]], "The Catalog constructor": [[219, "the-catalog-constructor"]], "Internationalizing your programs and modules": [[219, "internationalizing-your-programs-and-modules"]], "Localizing your module": [[219, "localizing-your-module"]], "Localizing your application": [[219, "localizing-your-application"]], "Changing languages on the fly": [[219, "changing-languages-on-the-fly"]], "Deferred translations": [[219, "deferred-translations"]], "html.parser \u2014 Simple HTML and XHTML parser": [[229, "module-html.parser"]], "Example HTML Parser Application": [[229, "example-html-parser-application"]], "HTMLParser Methods": [[229, "htmlparser-methods"]], "fcntl \u2014 The fcntl and ioctl system calls": [[204, "module-fcntl"]], "faulthandler \u2014 Dump the Python traceback": [[203, "module-faulthandler"]], "Dumping the traceback": [[203, "dumping-the-traceback"]], "Fault handler state": [[203, "fault-handler-state"]], "Dumping the tracebacks after a timeout": [[203, "dumping-the-tracebacks-after-a-timeout"]], "Dumping the traceback on a user signal": [[203, "dumping-the-traceback-on-a-user-signal"]], "Issue with file descriptors": [[203, "issue-with-file-descriptors"]], "graphlib \u2014 Functionality to operate with graph-like structures": [[221, "module-graphlib"]], "fnmatch \u2014 Unix filename pattern matching": [[209, "module-fnmatch"]], "Program Frameworks": [[211, "program-frameworks"]], "glob \u2014 Unix style pathname pattern expansion": [[220, "module-glob"]], "hmac \u2014 Keyed-Hashing for Message Authentication": [[226, "module-hmac"]], "functools \u2014 Higher-order functions and operations on callable objects": [[215, "module-functools"]], "partial Objects": [[215, "partial-objects"]], "fileinput \u2014 Iterate over lines from multiple input streams": [[207, "module-fileinput"]], "hashlib \u2014 Secure hashes and message digests": [[224, "module-hashlib"]], "Hash algorithms": [[224, "hash-algorithms"]], "Usage": [[224, "usage"]], "Constructors": [[224, "constructors"]], "Attributes": [[224, "attributes"]], "Hash Objects": [[224, "hash-objects"]], "SHAKE variable length digests": [[224, "shake-variable-length-digests"]], "File hashing": [[224, "file-hashing"]], "Key derivation": [[224, "key-derivation"]], "BLAKE2": [[224, "blake2"]], "Creating hash objects": [[224, "creating-hash-objects"]], "Simple hashing": [[224, "simple-hashing"]], "Using different digest sizes": [[224, "using-different-digest-sizes"]], "Keyed hashing": [[224, "keyed-hashing"]], "Randomized hashing": [[224, "randomized-hashing"]], "Personalization": [[224, "personalization"]], "Tree mode": [[224, "tree-mode"]], "Credits": [[224, "credits"]], "calendar \u2014 General calendar-related functions": [[143, "module-calendar"]], "Binary Data Services": [[138, "binary-data-services"]], "codecs \u2014 Codec registry and base classes": [[148, "module-codecs"]], "Codec Base Classes": [[148, "codec-base-classes"]], "Error Handlers": [[148, "error-handlers"]], "Stateless Encoding and Decoding": [[148, "stateless-encoding-and-decoding"]], "Incremental Encoding and Decoding": [[148, "incremental-encoding-and-decoding"]], "IncrementalEncoder Objects": [[148, "incrementalencoder-objects"]], "IncrementalDecoder Objects": [[148, "incrementaldecoder-objects"]], "Stream Encoding and Decoding": [[148, "stream-encoding-and-decoding"]], "StreamWriter Objects": [[148, "streamwriter-objects"]], "StreamReader Objects": [[148, "streamreader-objects"]], "StreamReaderWriter Objects": [[148, "streamreaderwriter-objects"]], "StreamRecoder Objects": [[148, "streamrecoder-objects"]], "Encodings and Unicode": [[148, "encodings-and-unicode"]], "Standard Encodings": [[148, "standard-encodings"]], "Python Specific Encodings": [[148, "python-specific-encodings"]], "Text Encodings": [[148, "text-encodings"]], "Binary Transforms": [[148, "binary-transforms"]], "Text Transforms": [[148, "text-transforms"]], "encodings.idna \u2014 Internationalized Domain Names in Applications": [[148, "module-encodings.idna"]], "encodings.mbcs \u2014 Windows ANSI codepage": [[148, "module-encodings.mbcs"]], "encodings.utf_8_sig \u2014 UTF-8 codec with BOM signature": [[148, "module-encodings.utf_8_sig"]], "codeop \u2014 Compile Python code": [[149, "module-codeop"]], "compileall \u2014 Byte-compile Python libraries": [[153, "module-compileall"]], "Command-line use": [[153, "command-line-use"]], "Public functions": [[153, "public-functions"]], "collections \u2014 Container datatypes": [[150, "module-collections"]], "ChainMap objects": [[150, "chainmap-objects"]], "ChainMap Examples and Recipes": [[150, "chainmap-examples-and-recipes"]], "Counter objects": [[150, "counter-objects"]], "deque objects": [[150, "deque-objects"]], "deque Recipes": [[150, "deque-recipes"]], "defaultdict objects": [[150, "defaultdict-objects"]], "defaultdict Examples": [[150, "defaultdict-examples"]], "namedtuple() Factory Function for Tuples with Named Fields": [[150, "namedtuple-factory-function-for-tuples-with-named-fields"]], "OrderedDict objects": [[150, "ordereddict-objects"]], "OrderedDict Examples and Recipes": [[150, "ordereddict-examples-and-recipes"]], "UserDict objects": [[150, "userdict-objects"]], "UserList objects": [[150, "userlist-objects"]], "UserString objects": [[150, "userstring-objects"]], "collections.abc \u2014 Abstract Base Classes for Containers": [[151, "module-collections.abc"]], "Collections Abstract Base Classes": [[151, "collections-abstract-base-classes"]], "Collections Abstract Base Classes \u2013 Detailed Descriptions": [[151, "collections-abstract-base-classes-detailed-descriptions"]], "Examples and Recipes": [[151, "examples-and-recipes"], [159, "examples-and-recipes"]], "Built-in Constants": [[158, "built-in-constants"]], "Constants added by the site module": [[158, "constants-added-by-the-site-module"]], "contextlib \u2014 Utilities for with-statement contexts": [[159, "module-contextlib"]], "Supporting a variable number of context managers": [[159, "supporting-a-variable-number-of-context-managers"]], "Catching exceptions from __enter__ methods": [[159, "catching-exceptions-from-enter-methods"]], "Cleaning up in an __enter__ implementation": [[159, "cleaning-up-in-an-enter-implementation"]], "Replacing any use of try-finally and flag variables": [[159, "replacing-any-use-of-try-finally-and-flag-variables"]], "Using a context manager as a function decorator": [[159, "using-a-context-manager-as-a-function-decorator"]], "Single use, reusable and reentrant context managers": [[159, "single-use-reusable-and-reentrant-context-managers"]], "Reentrant context managers": [[159, "reentrant-context-managers"]], "Reusable context managers": [[159, "reusable-context-managers"]], "bdb \u2014 Debugger framework": [[137, "module-bdb"]], "The concurrent package": [[155, "the-concurrent-package"]], "Audit events table": [[135, "audit-events-table"]], "Concurrent Execution": [[154, "concurrent-execution"]], "copyreg \u2014 Register pickle support functions": [[162, "module-copyreg"]], "concurrent.futures \u2014 Launching parallel tasks": [[156, "module-concurrent.futures"]], "Executor Objects": [[156, "executor-objects"]], "ThreadPoolExecutor": [[156, "threadpoolexecutor"]], "ThreadPoolExecutor Example": [[156, "threadpoolexecutor-example"]], "ProcessPoolExecutor": [[156, "processpoolexecutor"]], "ProcessPoolExecutor Example": [[156, "processpoolexecutor-example"]], "Future Objects": [[156, "future-objects"]], "Module Functions": [[156, "module-functions"]], "Exception classes": [[156, "exception-classes"]], "binascii \u2014 Convert between binary and ASCII": [[139, "module-binascii"]], "copy \u2014 Shallow and deep copy operations": [[161, "module-copy"]], "Coroutines and Tasks": [[133, "coroutines-and-tasks"]], "Awaitables": [[133, "awaitables"]], "Creating Tasks": [[133, "creating-tasks"]], "Task Cancellation": [[133, "task-cancellation"]], "Task Groups": [[133, "task-groups"]], "Sleeping": [[133, "sleeping"]], "Running Tasks Concurrently": [[133, "running-tasks-concurrently"]], "Eager Task Factory": [[133, "eager-task-factory"]], "Shielding From Cancellation": [[133, "shielding-from-cancellation"]], "Timeouts": [[133, "timeouts"]], "Waiting Primitives": [[133, "waiting-primitives"]], "Running in Threads": [[133, "running-in-threads"]], "Scheduling From Other Threads": [[133, "scheduling-from-other-threads"]], "Introspection": [[133, "introspection"]], "Task Object": [[133, "task-object"]], "csv \u2014 CSV File Reading and Writing": [[164, "module-csv"]], "Dialects and Formatting Parameters": [[164, "dialects-and-formatting-parameters"]], "Reader Objects": [[164, "reader-objects"]], "Writer Objects": [[164, "writer-objects"]], "cmd \u2014 Support for line-oriented command interpreters": [[145, "module-cmd"]], "Cmd Objects": [[145, "cmd-objects"]], "Cmd Example": [[145, "cmd-example"]], "Synchronization Primitives": [[132, "synchronization-primitives"]], "Lock": [[132, "lock"]], "Event": [[132, "event"]], "Condition": [[132, "condition"]], "Semaphore": [[132, "semaphore"]], "BoundedSemaphore": [[132, "boundedsemaphore"]], "Barrier": [[132, "barrier"]], "atexit \u2014 Exit handlers": [[134, "module-atexit"]], "atexit Example": [[134, "atexit-example"]], "Cryptographic Services": [[163, "cryptographic-services"]], "colorsys \u2014 Conversions between color systems": [[152, "module-colorsys"]], "code \u2014 Interpreter base classes": [[147, "module-code"]], "Interactive Interpreter Objects": [[147, "interactive-interpreter-objects"]], "Interactive Console Objects": [[147, "interactive-console-objects"]], "contextvars \u2014 Context Variables": [[160, "module-contextvars"]], "Context Variables": [[160, "context-variables"]], "Manual Context Management": [[160, "manual-context-management"]], "asyncio support": [[160, "asyncio-support"]], "builtins \u2014 Built-in objects": [[141, "module-builtins"]], "bisect \u2014 Array bisection algorithm": [[140, "module-bisect"]], "Performance Notes": [[140, "performance-notes"]], "Searching Sorted Lists": [[140, "searching-sorted-lists"]], "configparser \u2014 Configuration file parser": [[157, "module-configparser"]], "Quick Start": [[157, "quick-start"]], "Supported Datatypes": [[157, "supported-datatypes"]], "Fallback Values": [[157, "fallback-values"]], "Supported INI File Structure": [[157, "supported-ini-file-structure"]], "Interpolation of values": [[157, "interpolation-of-values"]], "Mapping Protocol Access": [[157, "mapping-protocol-access"]], "Customizing Parser Behaviour": [[157, "customizing-parser-behaviour"]], "Legacy API Examples": [[157, "legacy-api-examples"]], "ConfigParser Objects": [[157, "configparser-objects"]], "RawConfigParser Objects": [[157, "rawconfigparser-objects"]], "base64 \u2014 Base16, Base32, Base64, Base85 Data Encodings": [[136, "module-base64"]], "bz2 \u2014 Support for bzip2 compression": [[142, "module-bz2"]], "(De)compression of files": [[142, "de-compression-of-files"]], "Incremental (de)compression": [[142, "incremental-de-compression"]], "One-shot (de)compression": [[142, "one-shot-de-compression"]], "cmath \u2014 Mathematical functions for complex numbers": [[144, "module-cmath"]], "Conversions to and from polar coordinates": [[144, "conversions-to-and-from-polar-coordinates"]], "Classification functions": [[144, "classification-functions"]], "Modules command-line interface (CLI)": [[146, "modules-command-line-interface-cli"]], "ctypes \u2014 A foreign function library for Python": [[165, "module-ctypes"]], "ctypes tutorial": [[165, "ctypes-tutorial"]], "Loading dynamic link libraries": [[165, "loading-dynamic-link-libraries"]], "Accessing functions from loaded dlls": [[165, "accessing-functions-from-loaded-dlls"]], "Calling functions": [[165, "calling-functions"]], "Fundamental data types": [[165, "fundamental-data-types"], [165, "ctypes-fundamental-data-types-2"]], "Calling functions, continued": [[165, "calling-functions-continued"]], "Calling variadic functions": [[165, "calling-variadic-functions"]], "Calling functions with your own custom data types": [[165, "calling-functions-with-your-own-custom-data-types"]], "Specifying the required argument types (function prototypes)": [[165, "specifying-the-required-argument-types-function-prototypes"]], "Return types": [[165, "return-types"]], "Passing pointers (or: passing parameters by reference)": [[165, "passing-pointers-or-passing-parameters-by-reference"]], "Structures and unions": [[165, "structures-and-unions"]], "Structure/union alignment and byte order": [[165, "structure-union-alignment-and-byte-order"]], "Bit fields in structures and unions": [[165, "bit-fields-in-structures-and-unions"]], "Arrays": [[165, "arrays"]], "Pointers": [[165, "pointers"]], "Type conversions": [[165, "type-conversions"]], "Incomplete Types": [[165, "incomplete-types"]], "Callback functions": [[165, "callback-functions"]], "Accessing values exported from dlls": [[165, "accessing-values-exported-from-dlls"]], "Surprises": [[165, "surprises"]], "Variable-sized data types": [[165, "variable-sized-data-types"]], "ctypes reference": [[165, "ctypes-reference"]], "Finding shared libraries": [[165, "finding-shared-libraries"]], "Loading shared libraries": [[165, "loading-shared-libraries"]], "Foreign functions": [[165, "foreign-functions"]], "Function prototypes": [[165, "function-prototypes"]], "Utility functions": [[165, "utility-functions"]], "Data types": [[165, "data-types"]], "Structured data types": [[165, "structured-data-types"]], "Arrays and pointers": [[165, "arrays-and-pointers"]], "email.contentmanager: Managing MIME Content": [[186, "module-email.contentmanager"]], "Content Manager Instances": [[186, "content-manager-instances"]], "curses.panel \u2014 A panel stack extension for curses": [[168, "module-curses.panel"]], "Panel Objects": [[168, "panel-objects"]], "decimal \u2014 Decimal fixed point and floating point arithmetic": [[175, "module-decimal"]], "Quick-start Tutorial": [[175, "quick-start-tutorial"]], "Decimal objects": [[175, "decimal-objects"]], "Logical operands": [[175, "logical-operands"]], "Context objects": [[175, "context-objects"]], "Rounding modes": [[175, "rounding-modes"]], "Signals": [[175, "signals"]], "Floating Point Notes": [[175, "floating-point-notes"]], "Mitigating round-off error with increased precision": [[175, "mitigating-round-off-error-with-increased-precision"]], "Special values": [[175, "special-values"]], "Working with threads": [[175, "working-with-threads"]], "Decimal FAQ": [[175, "decimal-faq"]], "email.errors: Exception and Defect classes": [[188, "module-email.errors"]], "email.header: Internationalized headers": [[191, "module-email.header"]], "email.charset: Representing character sets": [[184, "module-email.charset"]], "Custom Python Interpreters": [[169, "custom-python-interpreters"]], "email \u2014 An email and MIME handling package": [[183, "module-email"]], "email: Examples": [[189, "email-examples"]], "Tkinter Dialogs": [[178, "tkinter-dialogs"]], "tkinter.simpledialog \u2014 Standard Tkinter input dialogs": [[178, "module-tkinter.simpledialog"]], "tkinter.filedialog \u2014 File selection dialogs": [[178, "module-tkinter.filedialog"]], "Native Load/Save Dialogs": [[178, "native-load-save-dialogs"]], "tkinter.commondialog \u2014 Dialog window templates": [[178, "module-tkinter.commondialog"]], "dataclasses \u2014 Data Classes": [[170, "module-dataclasses"]], "Post-init processing": [[170, "post-init-processing"]], "Class variables": [[170, "class-variables"]], "Init-only variables": [[170, "init-only-variables"]], "Frozen instances": [[170, "frozen-instances"]], "Re-ordering of keyword-only parameters in __init__()": [[170, "re-ordering-of-keyword-only-parameters-in-init"]], "Default factory functions": [[170, "default-factory-functions"]], "Mutable default values": [[170, "mutable-default-values"]], "Descriptor-typed fields": [[170, "descriptor-typed-fields"]], "dbm \u2014 Interfaces to Unix \u201cdatabases\u201d": [[173, "module-dbm"]], "dbm.gnu \u2014 GNU\u2019s reinterpretation of dbm": [[173, "module-dbm.gnu"]], "dbm.ndbm \u2014 Interface based on ndbm": [[173, "module-dbm.ndbm"]], "dbm.dumb \u2014 Portable DBM implementation": [[173, "module-dbm.dumb"]], "difflib \u2014 Helpers for computing deltas": [[179, "module-difflib"]], "SequenceMatcher Objects": [[179, "sequencematcher-objects"]], "SequenceMatcher Examples": [[179, "sequencematcher-examples"]], "Differ Objects": [[179, "differ-objects"]], "Differ Example": [[179, "differ-example"]], "A command-line interface to difflib": [[179, "a-command-line-interface-to-difflib"]], "ndiff example": [[179, "ndiff-example"]], "Software Packaging and Distribution": [[181, "software-packaging-and-distribution"]], "email.encoders: Encoders": [[187, "module-email.encoders"]], "email.headerregistry: Custom Header Objects": [[192, "module-email.headerregistry"]], "email.message.Message: Representing an email message using the compat32 API": [[185, "email-message-message-representing-an-email-message-using-the-compat32-api"]], "email.mime: Creating email and MIME objects from scratch": [[195, "module-email.mime"]], "doctest \u2014 Test interactive Python examples": [[182, "module-doctest"]], "Simple Usage: Checking Examples in Docstrings": [[182, "simple-usage-checking-examples-in-docstrings"]], "Simple Usage: Checking Examples in a Text File": [[182, "simple-usage-checking-examples-in-a-text-file"]], "How It Works": [[182, "how-it-works"]], "Which Docstrings Are Examined?": [[182, "which-docstrings-are-examined"]], "How are Docstring Examples Recognized?": [[182, "how-are-docstring-examples-recognized"]], "What\u2019s the Execution Context?": [[182, "what-s-the-execution-context"]], "What About Exceptions?": [[182, "what-about-exceptions"]], "Option Flags": [[182, "option-flags"]], "Directives": [[182, "directives"]], "Basic API": [[182, "basic-api"]], "Unittest API": [[182, "unittest-api"]], "Advanced API": [[182, "advanced-api"]], "DocTest Objects": [[182, "doctest-objects"]], "Example Objects": [[182, "example-objects"]], "DocTestFinder objects": [[182, "doctestfinder-objects"]], "DocTestParser objects": [[182, "doctestparser-objects"]], "TestResults objects": [[182, "testresults-objects"]], "DocTestRunner objects": [[182, "doctestrunner-objects"]], "OutputChecker objects": [[182, "outputchecker-objects"]], "Debugging": [[182, "debugging"]], "Soapbox": [[182, "soapbox"]], "email.parser: Parsing email messages": [[196, "module-email.parser"]], "FeedParser API": [[196, "feedparser-api"]], "Parser API": [[196, "parser-api"]], "Additional notes": [[196, "additional-notes"]], "email.policy: Policy Objects": [[197, "module-email.policy"]], "Development Tools": [[176, "development-tools"]], "email.iterators: Iterators": [[193, "module-email.iterators"]], "datetime \u2014 Basic date and time types": [[172, "module-datetime"]], "Aware and Naive Objects": [[172, "aware-and-naive-objects"]], "Available Types": [[172, "available-types"]], "Common Properties": [[172, "common-properties"]], "Determining if an Object is Aware or Naive": [[172, "determining-if-an-object-is-aware-or-naive"]], "timedelta Objects": [[172, "timedelta-objects"]], "Examples of usage: timedelta": [[172, "examples-of-usage-timedelta"]], "date Objects": [[172, "date-objects"]], "Examples of Usage: date": [[172, "examples-of-usage-date"]], "datetime Objects": [[172, "datetime-objects"]], "Examples of Usage: datetime": [[172, "examples-of-usage-datetime"]], "time Objects": [[172, "time-objects"]], "Examples of Usage: time": [[172, "examples-of-usage-time"]], "tzinfo Objects": [[172, "tzinfo-objects"]], "timezone Objects": [[172, "timezone-objects"]], "strftime() and strptime() Behavior": [[172, "strftime-and-strptime-behavior"]], "strftime() and strptime() Format Codes": [[172, "strftime-and-strptime-format-codes"]], "Technical Detail": [[172, "technical-detail"]], "Python Development Mode": [[177, "python-development-mode"]], "Effects of the Python Development Mode": [[177, "effects-of-the-python-development-mode"]], "ResourceWarning Example": [[177, "resourcewarning-example"]], "Bad file descriptor error example": [[177, "bad-file-descriptor-error-example"]], "email.message: Representing an email message": [[194, "module-email.message"]], "dis \u2014 Disassembler for Python bytecode": [[180, "module-dis"]], "Bytecode analysis": [[180, "bytecode-analysis"]], "Analysis functions": [[180, "analysis-functions"]], "Python Bytecode Instructions": [[180, "python-bytecode-instructions"]], "Opcode collections": [[180, "opcode-collections"]], "curses.ascii \u2014 Utilities for ASCII characters": [[167, "module-curses.ascii"]], "curses \u2014 Terminal handling for character-cell displays": [[166, "module-curses"]], "Window Objects": [[166, "window-objects"]], "curses.textpad \u2014 Text input widget for curses programs": [[166, "module-curses.textpad"]], "Textbox objects": [[166, "textbox-objects"]], "email.generator: Generating MIME documents": [[190, "module-email.generator"]], "Debugging and Profiling": [[174, "debugging-and-profiling"]]}, "indexentries": {"pyobject_del (c function)": [[3, "c.PyObject_Del"]], "pyobject_init (c function)": [[3, "c.PyObject_Init"]], "pyobject_initvar (c function)": [[3, "c.PyObject_InitVar"]], "pyobject_new (c macro)": [[3, "c.PyObject_New"]], "pyobject_newvar (c macro)": [[3, "c.PyObject_NewVar"]], "_pyobject_new (c function)": [[3, "c._PyObject_New"]], "_pyobject_newvar (c function)": [[3, "c._PyObject_NewVar"]], "_py_nonestruct (c var)": [[3, "c._Py_NoneStruct"]], "py_major_version (c macro)": [[4, "c.PY_MAJOR_VERSION"]], "py_micro_version (c macro)": [[4, "c.PY_MICRO_VERSION"]], "py_minor_version (c macro)": [[4, "c.PY_MINOR_VERSION"]], "py_release_level (c macro)": [[4, "c.PY_RELEASE_LEVEL"]], "py_release_serial (c macro)": [[4, "c.PY_RELEASE_SERIAL"]], "py_version_hex (c macro)": [[4, "c.PY_VERSION_HEX"]], "py_version (c var)": [[4, "c.Py_Version"]], "pyarg_parse (c function)": [[5, "c.PyArg_Parse"]], "pyarg_parsetuple (c function)": [[5, "c.PyArg_ParseTuple"]], "pyarg_parsetupleandkeywords (c function)": [[5, "c.PyArg_ParseTupleAndKeywords"]], "pyarg_unpacktuple (c function)": [[5, "c.PyArg_UnpackTuple"]], "pyarg_vaparse (c function)": [[5, "c.PyArg_VaParse"]], "pyarg_vaparsetupleandkeywords (c function)": [[5, "c.PyArg_VaParseTupleAndKeywords"]], "pyarg_validatekeywordarguments (c function)": [[5, "c.PyArg_ValidateKeywordArguments"]], "py_buildvalue (c function)": [[5, "c.Py_BuildValue"]], "py_vabuildvalue (c function)": [[5, "c.Py_VaBuildValue"]], "pybool_check (c function)": [[6, "c.PyBool_Check"]], "pybool_fromlong (c function)": [[6, "c.PyBool_FromLong"]], "pybool_type (c var)": [[6, "c.PyBool_Type"]], "py_false (c var)": [[6, "c.Py_False"]], "py_return_false (c macro)": [[6, "c.Py_RETURN_FALSE"]], "py_return_true (c macro)": [[6, "c.Py_RETURN_TRUE"]], "py_true (c var)": [[6, "c.Py_True"]], "(see buffer protocol)": [[7, "index-0"]], "c-contiguous": [[7, "index-2"], [85, "index-10"]], "fortran contiguous": [[7, "index-2"], [85, "index-10"]], "pybuf_any_contiguous (c macro)": [[7, "c.PyBUF_ANY_CONTIGUOUS"]], "pybuf_contig (c macro)": [[7, "c.PyBUF_CONTIG"]], "pybuf_contig_ro (c macro)": [[7, "c.PyBUF_CONTIG_RO"]], "pybuf_c_contiguous (c macro)": [[7, "c.PyBUF_C_CONTIGUOUS"]], "pybuf_format (c macro)": [[7, "c.PyBUF_FORMAT"]], "pybuf_full (c macro)": [[7, "c.PyBUF_FULL"]], "pybuf_full_ro (c macro)": [[7, "c.PyBUF_FULL_RO"]], "pybuf_f_contiguous (c macro)": [[7, "c.PyBUF_F_CONTIGUOUS"]], "pybuf_indirect (c macro)": [[7, "c.PyBUF_INDIRECT"]], "pybuf_max_ndim (c macro)": [[7, "c.PyBUF_MAX_NDIM"]], "pybuf_nd (c macro)": [[7, "c.PyBUF_ND"]], "pybuf_records (c macro)": [[7, "c.PyBUF_RECORDS"]], "pybuf_records_ro (c macro)": [[7, "c.PyBUF_RECORDS_RO"]], "pybuf_simple (c macro)": [[7, "c.PyBUF_SIMPLE"]], "pybuf_strided (c macro)": [[7, "c.PyBUF_STRIDED"]], "pybuf_strided_ro (c macro)": [[7, "c.PyBUF_STRIDED_RO"]], "pybuf_strides (c macro)": [[7, "c.PyBUF_STRIDES"]], "pybuf_writable (c macro)": [[7, "c.PyBUF_WRITABLE"]], "pybufferprocs": [[7, "index-1"]], "pybuffer_fillcontiguousstrides (c function)": [[7, "c.PyBuffer_FillContiguousStrides"]], "pybuffer_fillinfo (c function)": [[7, "c.PyBuffer_FillInfo"]], "pybuffer_fromcontiguous (c function)": [[7, "c.PyBuffer_FromContiguous"]], "pybuffer_getpointer (c function)": [[7, "c.PyBuffer_GetPointer"]], "pybuffer_iscontiguous (c function)": [[7, "c.PyBuffer_IsContiguous"]], "pybuffer_release (c function)": [[7, "c.PyBuffer_Release"]], "pybuffer_sizefromformat (c function)": [[7, "c.PyBuffer_SizeFromFormat"]], "pybuffer_tocontiguous (c function)": [[7, "c.PyBuffer_ToContiguous"]], "pyobject_checkbuffer (c function)": [[7, "c.PyObject_CheckBuffer"]], "pyobject_copydata (c function)": [[7, "c.PyObject_CopyData"]], "pyobject_getbuffer (c function)": [[7, "c.PyObject_GetBuffer"]], "py_buffer (c type)": [[7, "c.Py_buffer"]], "py_buffer.buf (c member)": [[7, "c.Py_buffer.buf"]], "py_buffer.format (c member)": [[7, "c.Py_buffer.format"]], "py_buffer.internal (c member)": [[7, "c.Py_buffer.internal"]], "py_buffer.itemsize (c member)": [[7, "c.Py_buffer.itemsize"]], "py_buffer.len (c member)": [[7, "c.Py_buffer.len"]], "py_buffer.ndim (c member)": [[7, "c.Py_buffer.ndim"]], "py_buffer.obj (c member)": [[7, "c.Py_buffer.obj"]], "py_buffer.readonly (c member)": [[7, "c.Py_buffer.readonly"]], "py_buffer.shape (c member)": [[7, "c.Py_buffer.shape"]], "py_buffer.strides (c member)": [[7, "c.Py_buffer.strides"]], "py_buffer.suboffsets (c member)": [[7, "c.Py_buffer.suboffsets"]], "buffer interface": [[7, "index-0"]], "buffer object": [[7, "index-0"]], "buffer protocol": [[7, "index-0"], [324, "index-31"], [324, "index-39"]], "contiguous": [[7, "index-2"], [85, "term-contiguous"]], "pybytearrayobject (c type)": [[8, "c.PyByteArrayObject"]], "pybytearray_as_string (c function)": [[8, "c.PyByteArray_AS_STRING"]], "pybytearray_asstring (c function)": [[8, "c.PyByteArray_AsString"]], "pybytearray_check (c function)": [[8, "c.PyByteArray_Check"]], "pybytearray_checkexact (c function)": [[8, "c.PyByteArray_CheckExact"]], "pybytearray_concat (c function)": [[8, "c.PyByteArray_Concat"]], "pybytearray_fromobject (c function)": [[8, "c.PyByteArray_FromObject"]], "pybytearray_fromstringandsize (c function)": [[8, "c.PyByteArray_FromStringAndSize"]], "pybytearray_get_size (c function)": [[8, "c.PyByteArray_GET_SIZE"]], "pybytearray_resize (c function)": [[8, "c.PyByteArray_Resize"]], "pybytearray_size (c function)": [[8, "c.PyByteArray_Size"]], "pybytearray_type (c var)": [[8, "c.PyByteArray_Type"]], "bytearray": [[8, "index-0"], [324, "index-23"], [324, "index-40"], [324, "index-42"], [324, "index-43"], [324, "index-45"], [403, "index-26"]], "object": [[8, "index-0"], [9, "index-0"], [11, "index-0"], [13, "index-0"], [15, "index-0"], [16, "index-0"], [16, "index-1"], [16, "index-2"], [22, "index-0"], [24, "index-0"], [25, "index-0"], [27, "index-0"], [34, "index-3"], [37, "index-0"], [38, "index-0"], [42, "index-0"], [43, "index-0"], [43, "index-1"], [44, "index-0"], [45, "index-0"], [53, "index-0"], [58, "index-0"], [59, "index-0"], [73, "index-0"], [85, "term-object"], [214, "index-12"], [261, "index-1"], [318, "index-0"], [324, "index-11"], [324, "index-19"], [324, "index-22"], [324, "index-23"], [324, "index-25"], [324, "index-26"], [324, "index-27"], [324, "index-28"], [324, "index-29"], [324, "index-40"], [324, "index-41"], [324, "index-42"], [324, "index-51"], [324, "index-52"], [324, "index-56"], [324, "index-59"], [324, "index-61"], [324, "index-62"], [324, "index-8"], [331, "index-8"], [358, "index-0"], [402, "index-11"], [402, "index-28"], [402, "index-40"], [402, "index-6"], [403, "index-0"], [403, "index-10"], [403, "index-12"], [403, "index-13"], [403, "index-14"], [403, "index-15"], [403, "index-17"], [403, "index-20"], [403, "index-22"], [403, "index-25"], [403, "index-27"], [403, "index-28"], [403, "index-29"], [403, "index-30"], [403, "index-31"], [403, "index-33"], [403, "index-34"], [403, "index-36"], [403, "index-41"], [403, "index-42"], [403, "index-43"], [403, "index-46"], [403, "index-50"], [403, "index-52"], [403, "index-56"], [403, "index-58"], [403, "index-6"], [403, "index-61"], [403, "index-64"], [403, "index-7"], [403, "index-78"], [403, "index-8"], [403, "index-9"], [403, "index-97"], [405, "index-15"], [405, "index-16"], [405, "index-17"], [405, "index-20"], [405, "index-22"], [405, "index-31"], [405, "index-35"], [405, "index-40"], [405, "index-42"], [405, "index-45"], [405, "index-47"], [405, "index-52"], [405, "index-53"], [405, "index-54"], [405, "index-55"], [405, "index-7"], [405, "index-80"], [405, "index-92"], [411, "index-10"], [411, "index-11"], [411, "index-28"], [411, "index-3"], [411, "index-4"], [411, "index-9"], [415, "index-0"], [421, "index-0"]], "pybytesobject (c type)": [[9, "c.PyBytesObject"]], "pybytes_as_string (c function)": [[9, "c.PyBytes_AS_STRING"]], "pybytes_asstring (c function)": [[9, "c.PyBytes_AsString"]], "pybytes_asstringandsize (c function)": [[9, "c.PyBytes_AsStringAndSize"]], "pybytes_check (c function)": [[9, "c.PyBytes_Check"]], "pybytes_checkexact (c function)": [[9, "c.PyBytes_CheckExact"]], "pybytes_concat (c function)": [[9, "c.PyBytes_Concat"]], "pybytes_concatanddel (c function)": [[9, "c.PyBytes_ConcatAndDel"]], "pybytes_fromformat (c function)": [[9, "c.PyBytes_FromFormat"]], "pybytes_fromformatv (c function)": [[9, "c.PyBytes_FromFormatV"]], "pybytes_fromobject (c function)": [[9, "c.PyBytes_FromObject"]], "pybytes_fromstring (c function)": [[9, "c.PyBytes_FromString"]], "pybytes_fromstringandsize (c function)": [[9, "c.PyBytes_FromStringAndSize"]], "pybytes_get_size (c function)": [[9, "c.PyBytes_GET_SIZE"]], "pybytes_size (c function)": [[9, "c.PyBytes_Size"]], "pybytes_type (c var)": [[9, "c.PyBytes_Type"]], "_pybytes_resize (c function)": [[9, "c._PyBytes_Resize"]], "bytes": [[9, "index-0"], [47, "index-3"], [324, "index-31"], [324, "index-40"], [324, "index-41"], [324, "index-43"], [324, "index-45"], [403, "index-21"], [403, "index-75"]], "pep 590": [[10, "index-0"], [447, "index-33"], [448, "index-38"], [450, "index-21"], [457, "index-7"], [458, "index-18"], [458, "index-8"]], "py_vectorcall_arguments_offset (c macro)": [[10, "c.PY_VECTORCALL_ARGUMENTS_OFFSET"]], "pycallable_check (c function)": [[10, "c.PyCallable_Check"]], "pyobject_call (c function)": [[10, "c.PyObject_Call"]], "pyobject_callfunction (c function)": [[10, "c.PyObject_CallFunction"]], "pyobject_callfunctionobjargs (c function)": [[10, "c.PyObject_CallFunctionObjArgs"]], "pyobject_callmethod (c function)": [[10, "c.PyObject_CallMethod"]], "pyobject_callmethodnoargs (c function)": [[10, "c.PyObject_CallMethodNoArgs"]], "pyobject_callmethodobjargs (c function)": [[10, "c.PyObject_CallMethodObjArgs"]], "pyobject_callmethodonearg (c function)": [[10, "c.PyObject_CallMethodOneArg"]], "pyobject_callnoargs (c function)": [[10, "c.PyObject_CallNoArgs"]], "pyobject_callobject (c function)": [[10, "c.PyObject_CallObject"]], "pyobject_callonearg (c function)": [[10, "c.PyObject_CallOneArg"]], "pyobject_vectorcall (c function)": [[10, "c.PyObject_Vectorcall"]], "pyobject_vectorcalldict (c function)": [[10, "c.PyObject_VectorcallDict"]], "pyobject_vectorcallmethod (c function)": [[10, "c.PyObject_VectorcallMethod"]], "pyvectorcall_call (c function)": [[10, "c.PyVectorcall_Call"]], "pyvectorcall_function (c function)": [[10, "c.PyVectorcall_Function"]], "pyvectorcall_nargs (c function)": [[10, "c.PyVectorcall_NARGS"]], "python enhancement proposals": [[10, "index-0"], [23, "index-5"], [26, "index-0"], [30, "index-3"], [32, "index-10"], [32, "index-30"], [32, "index-31"], [32, "index-32"], [32, "index-38"], [32, "index-40"], [32, "index-8"], [33, "index-0"], [33, "index-19"], [33, "index-35"], [33, "index-36"], [33, "index-39"], [33, "index-40"], [33, "index-8"], [34, "index-0"], [34, "index-1"], [34, "index-10"], [34, "index-2"], [44, "index-6"], [44, "index-7"], [44, "index-8"], [47, "index-4"], [47, "index-5"], [55, "index-0"], [57, "index-0"], [61, "index-2"], [61, "index-3"], [61, "index-4"], [62, "index-0"], [62, "index-1"], [62, "index-2"], [62, "index-3"], [62, "index-4"], [62, "index-5"], [64, "index-3"], [69, "index-1"], [71, "index-0"], [73, "index-2"], [76, "index-0"], [78, "index-0"], [78, "index-1"], [78, "index-2"], [83, "index-0"], [83, "index-2"], [83, "index-3"], [84, "index-0"], [85, "index-0"], [85, "index-1"], [85, "index-11"], [85, "index-12"], [85, "index-13"], [85, "index-14"], [85, "index-15"], [85, "index-16"], [85, "index-17"], [85, "index-18"], [85, "index-2"], [85, "index-21"], [85, "index-22"], [85, "index-23"], [85, "index-24"], [85, "index-25"], [85, "index-27"], [85, "index-28"], [85, "index-29"], [85, "index-3"], [85, "index-30"], [85, "index-31"], [85, "index-32"], [85, "index-33"], [85, "index-35"], [85, "index-36"], [85, "index-37"], [85, "index-38"], [85, "index-39"], [85, "index-4"], [85, "index-40"], [85, "index-5"], [85, "index-6"], [85, "index-7"], [85, "index-8"], [85, "index-9"], [86, "index-0"], [88, "index-0"], [88, "index-1"], [88, "index-2"], [88, "index-3"], [88, "index-4"], [93, "index-0"], [93, "index-1"], [93, "index-2"], [105, "index-0"], [108, "index-0"], [108, "index-1"], [108, "index-10"], [108, "index-2"], [108, "index-3"], [108, "index-4"], [108, "index-5"], [108, "index-6"], [108, "index-7"], [108, "index-8"], [108, "index-9"], [111, "index-0"], [111, "index-1"], [116, "index-2"], [116, "index-3"], [116, "index-4"], [116, "index-5"], [116, "index-6"], [116, "index-7"], [120, "index-0"], [120, "index-1"], [120, "index-2"], [123, "index-0"], [135, "index-1"], [144, "index-0"], [148, "index-2"], [148, "index-5"], [150, "index-0"], [150, "index-1"], [150, "index-2"], [150, "index-3"], [151, "index-0"], [151, "index-1"], [151, "index-2"], [151, "index-3"], [151, "index-4"], [151, "index-5"], [153, "index-0"], [153, "index-2"], [153, "index-3"], [156, "index-0"], [159, "index-0"], [160, "index-0"], [164, "index-2"], [170, "index-0"], [170, "index-1"], [170, "index-2"], [180, "index-0"], [199, "index-0"], [202, "index-10"], [202, "index-11"], [202, "index-2"], [202, "index-5"], [202, "index-6"], [202, "index-7"], [202, "index-8"], [202, "index-9"], [210, "index-0"], [214, "index-10"], [214, "index-14"], [214, "index-15"], [214, "index-9"], [215, "index-0"], [216, "index-0"], [236, "index-7"], [238, "index-0"], [238, "index-1"], [238, "index-10"], [238, "index-11"], [238, "index-12"], [238, "index-13"], [238, "index-14"], [238, "index-16"], [238, "index-17"], [238, "index-18"], [238, "index-19"], [238, "index-2"], [238, "index-20"], [238, "index-21"], [238, "index-22"], [238, "index-23"], [238, "index-24"], [238, "index-25"], [238, "index-26"], [238, "index-3"], [238, "index-4"], [238, "index-5"], [238, "index-6"], [238, "index-7"], [238, "index-8"], [238, "index-9"], [239, "index-0"], [243, "index-0"], [243, "index-1"], [243, "index-2"], [243, "index-3"], [246, "index-1"], [246, "index-2"], [253, "index-1"], [255, "index-1"], [262, "index-0"], [273, "index-0"], [277, "index-0"], [277, "index-22"], [277, "index-24"], [277, "index-25"], [277, "index-27"], [277, "index-44"], [277, "index-5"], [277, "index-53"], [277, "index-6"], [277, "index-7"], [279, "index-1"], [282, "index-2"], [282, "index-3"], [282, "index-4"], [282, "index-8"], [284, "index-0"], [284, "index-1"], [284, "index-2"], [284, "index-3"], [284, "index-4"], [284, "index-5"], [284, "index-6"], [284, "index-7"], [293, "index-1"], [293, "index-2"], [293, "index-4"], [293, "index-5"], [304, "index-0"], [306, "index-1"], [306, "index-2"], [306, "index-3"], [306, "index-5"], [306, "index-6"], [306, "index-7"], [306, "index-8"], [308, "index-0"], [310, "index-0"], [310, "index-3"], [310, "index-4"], [310, "index-5"], [310, "index-6"], [310, "index-7"], [311, "index-0"], [314, "index-2"], [315, "index-0"], [315, "index-1"], [316, "index-11"], [318, "index-1"], [318, "index-10"], [318, "index-11"], [318, "index-12"], [318, "index-13"], [318, "index-2"], [318, "index-4"], [318, "index-5"], [318, "index-7"], [318, "index-8"], [318, "index-9"], [320, "index-0"], [320, "index-1"], [320, "index-10"], [320, "index-11"], [320, "index-12"], [320, "index-2"], [320, "index-3"], [320, "index-4"], [320, "index-5"], [320, "index-8"], [320, "index-9"], [321, "index-2"], [324, "index-38"], [324, "index-48"], [324, "index-49"], [324, "index-50"], [324, "index-57"], [324, "index-58"], [324, "index-60"], [325, "index-0"], [325, "index-1"], [325, "index-11"], [325, "index-12"], [325, "index-6"], [325, "index-9"], [328, "index-0"], [331, "index-0"], [331, "index-1"], [331, "index-12"], [331, "index-13"], [331, "index-14"], [331, "index-15"], [331, "index-16"], [331, "index-19"], [331, "index-20"], [331, "index-25"], [331, "index-26"], [331, "index-30"], [331, "index-31"], [331, "index-32"], [331, "index-34"], [331, "index-9"], [332, "index-0"], [337, "index-0"], [340, "index-3"], [340, "index-4"], [344, "index-8"], [355, "index-0"], [355, "index-1"], [362, "index-0"], [362, "index-1"], [362, "index-2"], [362, "index-3"], [362, "index-5"], [362, "index-6"], [363, "index-0"], [363, "index-1"], [363, "index-10"], [363, "index-100"], [363, "index-11"], [363, "index-12"], [363, "index-13"], [363, "index-14"], [363, "index-15"], [363, "index-16"], [363, "index-17"], [363, "index-18"], [363, "index-19"], [363, "index-2"], [363, "index-20"], [363, "index-21"], [363, "index-22"], [363, "index-23"], [363, "index-24"], [363, "index-25"], [363, "index-26"], [363, "index-27"], [363, "index-28"], [363, "index-29"], [363, "index-3"], [363, "index-30"], [363, "index-31"], [363, "index-32"], [363, "index-33"], [363, "index-34"], [363, "index-35"], [363, "index-36"], [363, "index-37"], [363, "index-38"], [363, "index-39"], [363, "index-4"], [363, "index-40"], [363, "index-41"], [363, "index-42"], [363, "index-43"], [363, "index-44"], [363, "index-45"], [363, "index-46"], [363, "index-47"], [363, "index-48"], [363, "index-49"], [363, "index-5"], [363, "index-50"], [363, "index-51"], [363, "index-52"], [363, "index-53"], [363, "index-54"], [363, "index-55"], [363, "index-56"], [363, "index-57"], [363, "index-58"], [363, "index-59"], [363, "index-6"], [363, "index-60"], [363, "index-61"], [363, "index-62"], [363, "index-63"], [363, "index-64"], [363, "index-65"], [363, "index-66"], [363, "index-67"], [363, "index-68"], [363, "index-69"], [363, "index-7"], [363, "index-70"], [363, "index-71"], [363, "index-72"], [363, "index-73"], [363, "index-74"], [363, "index-75"], [363, "index-76"], [363, "index-77"], [363, "index-78"], [363, "index-79"], [363, "index-8"], [363, "index-80"], [363, "index-81"], [363, "index-82"], [363, "index-83"], [363, "index-84"], [363, "index-85"], [363, "index-86"], [363, "index-87"], [363, "index-88"], [363, "index-89"], [363, "index-9"], [363, "index-90"], [363, "index-91"], [363, "index-92"], [363, "index-93"], [363, "index-94"], [363, "index-95"], [363, "index-96"], [363, "index-97"], [363, "index-98"], [363, "index-99"], [375, "index-1"], [378, "index-0"], [378, "index-1"], [378, "index-2"], [383, "index-0"], [383, "index-1"], [383, "index-11"], [383, "index-12"], [383, "index-13"], [383, "index-14"], [383, "index-15"], [383, "index-16"], [383, "index-17"], [383, "index-18"], [383, "index-2"], [383, "index-3"], [383, "index-4"], [383, "index-6"], [383, "index-7"], [383, "index-8"], [383, "index-9"], [398, "index-0"], [398, "index-1"], [398, "index-2"], [400, "index-0"], [400, "index-1"], [402, "index-17"], [402, "index-19"], [402, "index-20"], [402, "index-24"], [402, "index-25"], [402, "index-26"], [402, "index-30"], [402, "index-33"], [402, "index-36"], [402, "index-37"], [402, "index-38"], [402, "index-39"], [402, "index-42"], [402, "index-43"], [402, "index-44"], [402, "index-45"], [402, "index-50"], [403, "index-105"], [403, "index-106"], [403, "index-107"], [403, "index-109"], [403, "index-82"], [403, "index-83"], [403, "index-85"], [403, "index-88"], [403, "index-91"], [403, "index-92"], [403, "index-93"], [403, "index-94"], [404, "index-11"], [404, "index-12"], [405, "index-14"], [405, "index-19"], [405, "index-21"], [405, "index-26"], [405, "index-27"], [405, "index-28"], [405, "index-29"], [405, "index-30"], [405, "index-51"], [405, "index-79"], [405, "index-87"], [405, "index-89"], [405, "index-94"], [406, "index-0"], [407, "index-1"], [407, "index-11"], [407, "index-12"], [407, "index-13"], [407, "index-14"], [407, "index-15"], [407, "index-18"], [407, "index-19"], [407, "index-2"], [407, "index-20"], [407, "index-21"], [407, "index-22"], [407, "index-23"], [407, "index-24"], [407, "index-25"], [407, "index-26"], [407, "index-6"], [410, "index-1"], [410, "index-11"], [410, "index-12"], [410, "index-21"], [410, "index-26"], [411, "index-13"], [411, "index-16"], [411, "index-17"], [411, "index-41"], [411, "index-42"], [411, "index-46"], [411, "index-48"], [416, "index-1"], [416, "index-10"], [416, "index-7"], [416, "index-8"], [425, "index-3"], [430, "index-1"], [430, "index-11"], [430, "index-13"], [430, "index-14"], [430, "index-15"], [430, "index-19"], [430, "index-41"], [430, "index-42"], [430, "index-44"], [430, "index-47"], [431, "index-0"], [431, "index-1"], [431, "index-3"], [431, "index-4"], [432, "index-0"], [436, "index-0"], [436, "index-16"], [436, "index-17"], [436, "index-19"], [436, "index-21"], [436, "index-38"], [437, "index-0"], [437, "index-1"], [437, "index-2"], [437, "index-3"], [438, "index-0"], [438, "index-1"], [438, "index-10"], [438, "index-12"], [438, "index-13"], [438, "index-14"], [438, "index-15"], [438, "index-16"], [438, "index-17"], [438, "index-2"], [438, "index-3"], [438, "index-4"], [438, "index-5"], [438, "index-6"], [438, "index-7"], [438, "index-8"], [438, "index-9"], [439, "index-0"], [439, "index-1"], [439, "index-10"], [439, "index-11"], [439, "index-12"], [439, "index-13"], [439, "index-14"], [439, "index-15"], [439, "index-16"], [439, "index-2"], [439, "index-22"], [439, "index-3"], [439, "index-4"], [439, "index-5"], [439, "index-6"], [439, "index-7"], [439, "index-8"], [439, "index-9"], [440, "index-0"], [440, "index-1"], [440, "index-10"], [440, "index-11"], [440, "index-12"], [440, "index-13"], [440, "index-14"], [440, "index-15"], [440, "index-16"], [440, "index-17"], [440, "index-18"], [440, "index-19"], [440, "index-2"], [440, "index-20"], [440, "index-21"], [440, "index-22"], [440, "index-23"], [440, "index-3"], [440, "index-4"], [440, "index-5"], [440, "index-6"], [440, "index-7"], [440, "index-9"], [441, "index-0"], [441, "index-1"], [441, "index-10"], [441, "index-11"], [441, "index-12"], [441, "index-13"], [441, "index-14"], [441, "index-15"], [441, "index-16"], [441, "index-17"], [441, "index-2"], [441, "index-3"], [441, "index-4"], [441, "index-5"], [441, "index-6"], [441, "index-8"], [441, "index-9"], [442, "index-0"], [442, "index-1"], [442, "index-10"], [442, "index-11"], [442, "index-12"], [442, "index-13"], [442, "index-14"], [442, "index-15"], [442, "index-16"], [442, "index-17"], [442, "index-18"], [442, "index-19"], [442, "index-2"], [442, "index-21"], [442, "index-24"], [442, "index-25"], [442, "index-26"], [442, "index-27"], [442, "index-28"], [442, "index-29"], [442, "index-3"], [442, "index-30"], [442, "index-31"], [442, "index-4"], [442, "index-5"], [442, "index-6"], [442, "index-7"], [442, "index-8"], [442, "index-9"], [443, "index-0"], [443, "index-1"], [443, "index-10"], [443, "index-11"], [443, "index-12"], [443, "index-14"], [443, "index-15"], [443, "index-16"], [443, "index-17"], [443, "index-18"], [443, "index-19"], [443, "index-2"], [443, "index-25"], [443, "index-3"], [443, "index-7"], [443, "index-8"], [443, "index-9"], [444, "index-0"], [444, "index-16"], [444, "index-17"], [444, "index-18"], [444, "index-19"], [444, "index-2"], [444, "index-20"], [444, "index-21"], [444, "index-22"], [444, "index-23"], [444, "index-24"], [444, "index-25"], [444, "index-26"], [444, "index-3"], [444, "index-4"], [444, "index-5"], [444, "index-6"], [444, "index-7"], [445, "index-0"], [445, "index-1"], [445, "index-10"], [445, "index-11"], [445, "index-12"], [445, "index-13"], [445, "index-14"], [445, "index-15"], [445, "index-16"], [445, "index-17"], [445, "index-18"], [445, "index-19"], [445, "index-2"], [445, "index-20"], [445, "index-21"], [445, "index-22"], [445, "index-23"], [445, "index-24"], [445, "index-25"], [445, "index-26"], [445, "index-27"], [445, "index-28"], [445, "index-29"], [445, "index-3"], [445, "index-30"], [445, "index-31"], [445, "index-32"], [445, "index-33"], [445, "index-34"], [445, "index-35"], [445, "index-4"], [445, "index-5"], [445, "index-6"], [445, "index-7"], [445, "index-8"], [445, "index-9"], [446, "index-0"], [446, "index-1"], [446, "index-2"], [446, "index-3"], [447, "index-0"], [447, "index-1"], [447, "index-10"], [447, "index-11"], [447, "index-12"], [447, "index-13"], [447, "index-14"], [447, "index-15"], [447, "index-16"], [447, "index-17"], [447, "index-19"], [447, "index-2"], [447, "index-20"], [447, "index-21"], [447, "index-22"], [447, "index-23"], [447, "index-24"], [447, "index-25"], [447, "index-26"], [447, "index-27"], [447, "index-28"], [447, "index-29"], [447, "index-3"], [447, "index-30"], [447, "index-31"], [447, "index-32"], [447, "index-33"], [447, "index-35"], [447, "index-36"], [447, "index-37"], [447, "index-38"], [447, "index-39"], [447, "index-4"], [447, "index-5"], [447, "index-6"], [447, "index-7"], [447, "index-8"], [447, "index-9"], [448, "index-0"], [448, "index-10"], [448, "index-11"], [448, "index-12"], [448, "index-13"], [448, "index-14"], [448, "index-15"], [448, "index-16"], [448, "index-17"], [448, "index-18"], [448, "index-19"], [448, "index-2"], [448, "index-20"], [448, "index-22"], [448, "index-23"], [448, "index-24"], [448, "index-25"], [448, "index-26"], [448, "index-27"], [448, "index-28"], [448, "index-29"], [448, "index-3"], [448, "index-30"], [448, "index-31"], [448, "index-32"], [448, "index-34"], [448, "index-35"], [448, "index-36"], [448, "index-37"], [448, "index-38"], [448, "index-39"], [448, "index-4"], [448, "index-40"], [448, "index-41"], [448, "index-5"], [448, "index-7"], [448, "index-8"], [448, "index-9"], [449, "index-0"], [449, "index-1"], [449, "index-10"], [449, "index-11"], [449, "index-12"], [449, "index-13"], [449, "index-14"], [449, "index-15"], [449, "index-16"], [449, "index-17"], [449, "index-18"], [449, "index-19"], [449, "index-2"], [449, "index-20"], [449, "index-21"], [449, "index-22"], [449, "index-24"], [449, "index-25"], [449, "index-26"], [449, "index-27"], [449, "index-28"], [449, "index-29"], [449, "index-3"], [449, "index-30"], [449, "index-31"], [449, "index-32"], [449, "index-33"], [449, "index-34"], [449, "index-35"], [449, "index-36"], [449, "index-37"], [449, "index-38"], [449, "index-39"], [449, "index-4"], [449, "index-40"], [449, "index-41"], [449, "index-42"], [449, "index-43"], [449, "index-44"], [449, "index-45"], [449, "index-46"], [449, "index-48"], [449, "index-5"], [449, "index-6"], [449, "index-7"], [449, "index-8"], [449, "index-9"], [450, "index-0"], [450, "index-1"], [450, "index-10"], [450, "index-11"], [450, "index-12"], [450, "index-13"], [450, "index-14"], [450, "index-15"], [450, "index-16"], [450, "index-17"], [450, "index-18"], [450, "index-2"], [450, "index-20"], [450, "index-21"], [450, "index-3"], [450, "index-4"], [450, "index-5"], [450, "index-6"], [450, "index-7"], [450, "index-8"], [450, "index-9"], [451, "index-0"], [451, "index-1"], [451, "index-14"], [451, "index-2"], [451, "index-3"], [451, "index-4"], [451, "index-5"], [451, "index-6"], [451, "index-9"], [452, "index-0"], [452, "index-1"], [452, "index-10"], [452, "index-12"], [452, "index-13"], [452, "index-14"], [452, "index-15"], [452, "index-16"], [452, "index-17"], [452, "index-18"], [452, "index-19"], [452, "index-2"], [452, "index-20"], [452, "index-21"], [452, "index-22"], [452, "index-25"], [452, "index-28"], [452, "index-29"], [452, "index-3"], [452, "index-30"], [452, "index-31"], [452, "index-32"], [452, "index-33"], [452, "index-34"], [452, "index-36"], [452, "index-37"], [452, "index-38"], [452, "index-4"], [452, "index-5"], [452, "index-6"], [452, "index-7"], [452, "index-8"], [452, "index-9"], [453, "index-0"], [453, "index-1"], [453, "index-10"], [453, "index-11"], [453, "index-12"], [453, "index-13"], [453, "index-14"], [453, "index-15"], [453, "index-16"], [453, "index-17"], [453, "index-18"], [453, "index-19"], [453, "index-2"], [453, "index-20"], [453, "index-21"], [453, "index-22"], [453, "index-23"], [453, "index-24"], [453, "index-25"], [453, "index-26"], [453, "index-27"], [453, "index-28"], [453, "index-29"], [453, "index-3"], [453, "index-30"], [453, "index-31"], [453, "index-32"], [453, "index-33"], [453, "index-34"], [453, "index-35"], [453, "index-36"], [453, "index-37"], [453, "index-38"], [453, "index-39"], [453, "index-4"], [453, "index-42"], [453, "index-43"], [453, "index-44"], [453, "index-45"], [453, "index-46"], [453, "index-47"], [453, "index-48"], [453, "index-49"], [453, "index-5"], [453, "index-52"], [453, "index-53"], [453, "index-6"], [453, "index-7"], [453, "index-8"], [453, "index-9"], [454, "index-0"], [454, "index-1"], [454, "index-10"], [454, "index-11"], [454, "index-12"], [454, "index-13"], [454, "index-14"], [454, "index-15"], [454, "index-16"], [454, "index-17"], [454, "index-18"], [454, "index-19"], [454, "index-2"], [454, "index-20"], [454, "index-21"], [454, "index-22"], [454, "index-23"], [454, "index-24"], [454, "index-25"], [454, "index-26"], [454, "index-27"], [454, "index-28"], [454, "index-29"], [454, "index-3"], [454, "index-30"], [454, "index-4"], [454, "index-45"], [454, "index-46"], [454, "index-47"], [454, "index-48"], [454, "index-49"], [454, "index-5"], [454, "index-50"], [454, "index-52"], [454, "index-6"], [454, "index-7"], [454, "index-8"], [454, "index-9"], [455, "index-0"], [455, "index-1"], [455, "index-10"], [455, "index-11"], [455, "index-12"], [455, "index-13"], [455, "index-14"], [455, "index-15"], [455, "index-16"], [455, "index-17"], [455, "index-18"], [455, "index-20"], [455, "index-22"], [455, "index-23"], [455, "index-24"], [455, "index-25"], [455, "index-26"], [455, "index-28"], [455, "index-29"], [455, "index-3"], [455, "index-30"], [455, "index-31"], [455, "index-32"], [455, "index-33"], [455, "index-34"], [455, "index-35"], [455, "index-36"], [455, "index-37"], [455, "index-4"], [455, "index-5"], [455, "index-6"], [455, "index-7"], [455, "index-8"], [455, "index-9"], [456, "index-0"], [456, "index-1"], [456, "index-10"], [456, "index-11"], [456, "index-13"], [456, "index-14"], [456, "index-15"], [456, "index-16"], [456, "index-17"], [456, "index-18"], [456, "index-19"], [456, "index-2"], [456, "index-20"], [456, "index-21"], [456, "index-22"], [456, "index-23"], [456, "index-24"], [456, "index-25"], [456, "index-28"], [456, "index-29"], [456, "index-3"], [456, "index-30"], [456, "index-32"], [456, "index-33"], [456, "index-37"], [456, "index-38"], [456, "index-5"], [456, "index-6"], [456, "index-7"], [456, "index-9"], [457, "index-0"], [457, "index-1"], [457, "index-10"], [457, "index-11"], [457, "index-12"], [457, "index-15"], [457, "index-16"], [457, "index-17"], [457, "index-18"], [457, "index-19"], [457, "index-23"], [457, "index-24"], [457, "index-4"], [457, "index-5"], [457, "index-6"], [457, "index-7"], [457, "index-8"], [457, "index-9"], [458, "index-0"], [458, "index-1"], [458, "index-10"], [458, "index-11"], [458, "index-12"], [458, "index-13"], [458, "index-14"], [458, "index-15"], [458, "index-16"], [458, "index-17"], [458, "index-18"], [458, "index-19"], [458, "index-2"], [458, "index-20"], [458, "index-23"], [458, "index-24"], [458, "index-25"], [458, "index-26"], [458, "index-27"], [458, "index-3"], [458, "index-4"], [458, "index-5"], [458, "index-6"], [458, "index-7"], [458, "index-8"], [458, "index-9"]], "vectorcallfunc (c type)": [[10, "c.vectorcallfunc"]], "capsule": [[11, "index-0"]], "pycapsule (c type)": [[11, "c.PyCapsule"]], "pycapsule_checkexact (c function)": [[11, "c.PyCapsule_CheckExact"]], "pycapsule_destructor (c type)": [[11, "c.PyCapsule_Destructor"]], "pycapsule_getcontext (c function)": [[11, "c.PyCapsule_GetContext"]], "pycapsule_getdestructor (c function)": [[11, "c.PyCapsule_GetDestructor"]], "pycapsule_getname (c function)": [[11, "c.PyCapsule_GetName"]], "pycapsule_getpointer (c function)": [[11, "c.PyCapsule_GetPointer"]], "pycapsule_import (c function)": [[11, "c.PyCapsule_Import"]], "pycapsule_isvalid (c function)": [[11, "c.PyCapsule_IsValid"]], "pycapsule_new (c function)": [[11, "c.PyCapsule_New"]], "pycapsule_setcontext (c function)": [[11, "c.PyCapsule_SetContext"]], "pycapsule_setdestructor (c function)": [[11, "c.PyCapsule_SetDestructor"]], "pycapsule_setname (c function)": [[11, "c.PyCapsule_SetName"]], "pycapsule_setpointer (c function)": [[11, "c.PyCapsule_SetPointer"]], "pycellobject (c type)": [[12, "c.PyCellObject"]], "pycell_check (c function)": [[12, "c.PyCell_Check"]], "pycell_get (c function)": [[12, "c.PyCell_GET"], [12, "c.PyCell_Get"]], "pycell_new (c function)": [[12, "c.PyCell_New"]], "pycell_set (c function)": [[12, "c.PyCell_SET"], [12, "c.PyCell_Set"]], "pycell_type (c var)": [[12, "c.PyCell_Type"]], "pycodeevent (c type)": [[13, "c.PyCodeEvent"]], "pycodeobject (c type)": [[13, "c.PyCodeObject"]], "pycode_addwatcher (c function)": [[13, "c.PyCode_AddWatcher"]], "pycode_addr2line (c function)": [[13, "c.PyCode_Addr2Line"]], "pycode_addr2location (c function)": [[13, "c.PyCode_Addr2Location"]], "pycode_check (c function)": [[13, "c.PyCode_Check"]], "pycode_clearwatcher (c function)": [[13, "c.PyCode_ClearWatcher"]], "pycode_getcellvars (c function)": [[13, "c.PyCode_GetCellvars"]], "pycode_getcode (c function)": [[13, "c.PyCode_GetCode"]], "pycode_getfreevars (c function)": [[13, "c.PyCode_GetFreevars"]], "pycode_getnumfree (c function)": [[13, "c.PyCode_GetNumFree"]], "pycode_getvarnames (c function)": [[13, "c.PyCode_GetVarnames"]], "pycode_new": [[13, "index-1"]], "pycode_newempty (c function)": [[13, "c.PyCode_NewEmpty"]], "pycode_newwithposonlyargs": [[13, "index-2"]], "pycode_type (c var)": [[13, "c.PyCode_Type"]], "pycode_watchcallback (c type)": [[13, "c.PyCode_WatchCallback"]], "pyunstable_code_getextra (c function)": [[13, "c.PyUnstable_Code_GetExtra"]], "pyunstable_code_new (c function)": [[13, "c.PyUnstable_Code_New"]], "pyunstable_code_newwithposonlyargs (c function)": [[13, "c.PyUnstable_Code_NewWithPosOnlyArgs"]], "pyunstable_code_setextra (c function)": [[13, "c.PyUnstable_Code_SetExtra"]], "pyunstable_eval_requestcodeextraindex (c function)": [[13, "c.PyUnstable_Eval_RequestCodeExtraIndex"]], "_pycode_getextra": [[13, "index-4"]], "_pycode_setextra": [[13, "index-5"]], "_pyeval_requestcodeextraindex": [[13, "index-3"]], "code": [[13, "index-0"], [147, "module-code"], [261, "index-1"], [324, "index-62"], [403, "index-56"], [404, "index-0"]], "code object": [[13, "index-0"], [261, "index-1"], [324, "index-62"], [403, "index-56"]], "pycodec_backslashreplaceerrors (c function)": [[14, "c.PyCodec_BackslashReplaceErrors"]], "pycodec_decode (c function)": [[14, "c.PyCodec_Decode"]], "pycodec_decoder (c function)": [[14, "c.PyCodec_Decoder"]], "pycodec_encode (c function)": [[14, "c.PyCodec_Encode"]], "pycodec_encoder (c function)": [[14, "c.PyCodec_Encoder"]], "pycodec_ignoreerrors (c function)": [[14, "c.PyCodec_IgnoreErrors"]], "pycodec_incrementaldecoder (c function)": [[14, "c.PyCodec_IncrementalDecoder"]], "pycodec_incrementalencoder (c function)": [[14, "c.PyCodec_IncrementalEncoder"]], "pycodec_knownencoding (c function)": [[14, "c.PyCodec_KnownEncoding"]], "pycodec_lookuperror (c function)": [[14, "c.PyCodec_LookupError"]], "pycodec_namereplaceerrors (c function)": [[14, "c.PyCodec_NameReplaceErrors"]], "pycodec_register (c function)": [[14, "c.PyCodec_Register"]], "pycodec_registererror (c function)": [[14, "c.PyCodec_RegisterError"]], "pycodec_replaceerrors (c function)": [[14, "c.PyCodec_ReplaceErrors"]], "pycodec_streamreader (c function)": [[14, "c.PyCodec_StreamReader"]], "pycodec_streamwriter (c function)": [[14, "c.PyCodec_StreamWriter"]], "pycodec_stricterrors (c function)": [[14, "c.PyCodec_StrictErrors"]], "pycodec_unregister (c function)": [[14, "c.PyCodec_Unregister"]], "pycodec_xmlcharrefreplaceerrors (c function)": [[14, "c.PyCodec_XMLCharRefReplaceErrors"]], "pycomplexobject (c type)": [[15, "c.PyComplexObject"]], "pycomplex_asccomplex (c function)": [[15, "c.PyComplex_AsCComplex"]], "pycomplex_check (c function)": [[15, "c.PyComplex_Check"]], "pycomplex_checkexact (c function)": [[15, "c.PyComplex_CheckExact"]], "pycomplex_fromccomplex (c function)": [[15, "c.PyComplex_FromCComplex"]], "pycomplex_fromdoubles (c function)": [[15, "c.PyComplex_FromDoubles"]], "pycomplex_imagasdouble (c function)": [[15, "c.PyComplex_ImagAsDouble"]], "pycomplex_realasdouble (c function)": [[15, "c.PyComplex_RealAsDouble"]], "pycomplex_type (c var)": [[15, "c.PyComplex_Type"]], "py_complex (c type)": [[15, "c.Py_complex"]], "_py_c_diff (c function)": [[15, "c._Py_c_diff"]], "_py_c_neg (c function)": [[15, "c._Py_c_neg"]], "_py_c_pow (c function)": [[15, "c._Py_c_pow"]], "_py_c_prod (c function)": [[15, "c._Py_c_prod"]], "_py_c_quot (c function)": [[15, "c._Py_c_quot"]], "_py_c_sum (c function)": [[15, "c._Py_c_sum"]], "complex number": [[15, "index-0"], [85, "term-complex-number"], [324, "index-11"], [324, "index-12"]], "mapping": [[16, "index-2"], [85, "term-mapping"], [324, "index-52"], [403, "index-30"], [403, "index-52"], [405, "index-42"], [411, "index-11"]], "numeric": [[16, "index-0"], [324, "index-11"], [324, "index-12"], [324, "index-14"], [324, "index-15"], [324, "index-8"], [403, "index-52"], [403, "index-9"]], "sequence": [[16, "index-1"], [85, "term-sequence"], [324, "index-18"], [324, "index-19"], [324, "index-20"], [324, "index-22"], [324, "index-23"], [324, "index-24"], [402, "index-6"], [403, "index-15"], [403, "index-52"], [405, "index-42"], [405, "index-45"], [405, "index-80"], [411, "index-10"]], "pycontext (c type)": [[17, "c.PyContext"]], "pycontexttoken (c type)": [[17, "c.PyContextToken"]], "pycontexttoken_checkexact (c function)": [[17, "c.PyContextToken_CheckExact"]], "pycontexttoken_type (c var)": [[17, "c.PyContextToken_Type"]], "pycontextvar (c type)": [[17, "c.PyContextVar"]], "pycontextvar_checkexact (c function)": [[17, "c.PyContextVar_CheckExact"]], "pycontextvar_get (c function)": [[17, "c.PyContextVar_Get"]], "pycontextvar_new (c function)": [[17, "c.PyContextVar_New"]], "pycontextvar_reset (c function)": [[17, "c.PyContextVar_Reset"]], "pycontextvar_set (c function)": [[17, "c.PyContextVar_Set"]], "pycontextvar_type (c var)": [[17, "c.PyContextVar_Type"]], "pycontext_checkexact (c function)": [[17, "c.PyContext_CheckExact"]], "pycontext_copy (c function)": [[17, "c.PyContext_Copy"]], "pycontext_copycurrent (c function)": [[17, "c.PyContext_CopyCurrent"]], "pycontext_enter (c function)": [[17, "c.PyContext_Enter"]], "pycontext_exit (c function)": [[17, "c.PyContext_Exit"]], "pycontext_new (c function)": [[17, "c.PyContext_New"]], "pycontext_type (c var)": [[17, "c.PyContext_Type"]], "pyos_double_to_string (c function)": [[18, "c.PyOS_double_to_string"]], "pyos_snprintf (c function)": [[18, "c.PyOS_snprintf"]], "pyos_stricmp (c function)": [[18, "c.PyOS_stricmp"]], "pyos_string_to_double (c function)": [[18, "c.PyOS_string_to_double"]], "pyos_strnicmp (c function)": [[18, "c.PyOS_strnicmp"]], "pyos_vsnprintf (c function)": [[18, "c.PyOS_vsnprintf"]], "pycoroobject (c type)": [[19, "c.PyCoroObject"]], "pycoro_checkexact (c function)": [[19, "c.PyCoro_CheckExact"]], "pycoro_new (c function)": [[19, "c.PyCoro_New"]], "pycoro_type (c var)": [[19, "c.PyCoro_Type"]], "pydatetime_check (c function)": [[20, "c.PyDateTime_Check"]], "pydatetime_checkexact (c function)": [[20, "c.PyDateTime_CheckExact"]], "pydatetime_date_get_fold (c function)": [[20, "c.PyDateTime_DATE_GET_FOLD"]], "pydatetime_date_get_hour (c function)": [[20, "c.PyDateTime_DATE_GET_HOUR"]], "pydatetime_date_get_microsecond (c function)": [[20, "c.PyDateTime_DATE_GET_MICROSECOND"]], "pydatetime_date_get_minute (c function)": [[20, "c.PyDateTime_DATE_GET_MINUTE"]], "pydatetime_date_get_second (c function)": [[20, "c.PyDateTime_DATE_GET_SECOND"]], "pydatetime_date_get_tzinfo (c function)": [[20, "c.PyDateTime_DATE_GET_TZINFO"]], "pydatetime_delta_get_days (c function)": [[20, "c.PyDateTime_DELTA_GET_DAYS"]], "pydatetime_delta_get_microseconds (c function)": [[20, "c.PyDateTime_DELTA_GET_MICROSECONDS"]], "pydatetime_delta_get_seconds (c function)": [[20, "c.PyDateTime_DELTA_GET_SECONDS"]], "pydatetime_date (c type)": [[20, "c.PyDateTime_Date"]], "pydatetime_datetime (c type)": [[20, "c.PyDateTime_DateTime"]], "pydatetime_datetimetype (c var)": [[20, "c.PyDateTime_DateTimeType"]], "pydatetime_datetype (c var)": [[20, "c.PyDateTime_DateType"]], "pydatetime_delta (c type)": [[20, "c.PyDateTime_Delta"]], "pydatetime_deltatype (c var)": [[20, "c.PyDateTime_DeltaType"]], "pydatetime_fromdateandtime (c function)": [[20, "c.PyDateTime_FromDateAndTime"]], "pydatetime_fromdateandtimeandfold (c function)": [[20, "c.PyDateTime_FromDateAndTimeAndFold"]], "pydatetime_fromtimestamp (c function)": [[20, "c.PyDateTime_FromTimestamp"]], "pydatetime_get_day (c function)": [[20, "c.PyDateTime_GET_DAY"]], "pydatetime_get_month (c function)": [[20, "c.PyDateTime_GET_MONTH"]], "pydatetime_get_year (c function)": [[20, "c.PyDateTime_GET_YEAR"]], "pydatetime_time_get_fold (c function)": [[20, "c.PyDateTime_TIME_GET_FOLD"]], "pydatetime_time_get_hour (c function)": [[20, "c.PyDateTime_TIME_GET_HOUR"]], "pydatetime_time_get_microsecond (c function)": [[20, "c.PyDateTime_TIME_GET_MICROSECOND"]], "pydatetime_time_get_minute (c function)": [[20, "c.PyDateTime_TIME_GET_MINUTE"]], "pydatetime_time_get_second (c function)": [[20, "c.PyDateTime_TIME_GET_SECOND"]], "pydatetime_time_get_tzinfo (c function)": [[20, "c.PyDateTime_TIME_GET_TZINFO"]], "pydatetime_tzinfotype (c var)": [[20, "c.PyDateTime_TZInfoType"]], "pydatetime_time (c type)": [[20, "c.PyDateTime_Time"]], "pydatetime_timetype (c var)": [[20, "c.PyDateTime_TimeType"]], "pydatetime_timezone_utc (c var)": [[20, "c.PyDateTime_TimeZone_UTC"]], "pydate_check (c function)": [[20, "c.PyDate_Check"]], "pydate_checkexact (c function)": [[20, "c.PyDate_CheckExact"]], "pydate_fromdate (c function)": [[20, "c.PyDate_FromDate"]], "pydate_fromtimestamp (c function)": [[20, "c.PyDate_FromTimestamp"]], "pydelta_check (c function)": [[20, "c.PyDelta_Check"]], "pydelta_checkexact (c function)": [[20, "c.PyDelta_CheckExact"]], "pydelta_fromdsu (c function)": [[20, "c.PyDelta_FromDSU"]], "pytzinfo_check (c function)": [[20, "c.PyTZInfo_Check"]], "pytzinfo_checkexact (c function)": [[20, "c.PyTZInfo_CheckExact"]], "pytimezone_fromoffset (c function)": [[20, "c.PyTimeZone_FromOffset"]], "pytimezone_fromoffsetandname (c function)": [[20, "c.PyTimeZone_FromOffsetAndName"]], "pytime_check (c function)": [[20, "c.PyTime_Check"]], "pytime_checkexact (c function)": [[20, "c.PyTime_CheckExact"]], "pytime_fromtime (c function)": [[20, "c.PyTime_FromTime"]], "pytime_fromtimeandfold (c function)": [[20, "c.PyTime_FromTimeAndFold"]], "pydescr_isdata (c function)": [[21, "c.PyDescr_IsData"]], "pydescr_newclassmethod (c function)": [[21, "c.PyDescr_NewClassMethod"]], "pydescr_newgetset (c function)": [[21, "c.PyDescr_NewGetSet"]], "pydescr_newmember (c function)": [[21, "c.PyDescr_NewMember"]], "pydescr_newmethod (c function)": [[21, "c.PyDescr_NewMethod"]], "pydescr_newwrapper (c function)": [[21, "c.PyDescr_NewWrapper"]], "pyproperty_type (c var)": [[21, "c.PyProperty_Type"]], "pywrapper_new (c function)": [[21, "c.PyWrapper_New"]], "pydictobject (c type)": [[22, "c.PyDictObject"]], "pydictproxy_new (c function)": [[22, "c.PyDictProxy_New"]], "pydict_addwatcher (c function)": [[22, "c.PyDict_AddWatcher"]], "pydict_check (c function)": [[22, "c.PyDict_Check"]], "pydict_checkexact (c function)": [[22, "c.PyDict_CheckExact"]], "pydict_clear (c function)": [[22, "c.PyDict_Clear"]], "pydict_clearwatcher (c function)": [[22, "c.PyDict_ClearWatcher"]], "pydict_contains (c function)": [[22, "c.PyDict_Contains"]], "pydict_containsstring (c function)": [[22, "c.PyDict_ContainsString"]], "pydict_copy (c function)": [[22, "c.PyDict_Copy"]], "pydict_delitem (c function)": [[22, "c.PyDict_DelItem"]], "pydict_delitemstring (c function)": [[22, "c.PyDict_DelItemString"]], "pydict_getitem (c function)": [[22, "c.PyDict_GetItem"]], "pydict_getitemref (c function)": [[22, "c.PyDict_GetItemRef"]], "pydict_getitemstring (c function)": [[22, "c.PyDict_GetItemString"]], "pydict_getitemstringref (c function)": [[22, "c.PyDict_GetItemStringRef"]], "pydict_getitemwitherror (c function)": [[22, "c.PyDict_GetItemWithError"]], "pydict_items (c function)": [[22, "c.PyDict_Items"]], "pydict_keys (c function)": [[22, "c.PyDict_Keys"]], "pydict_merge (c function)": [[22, "c.PyDict_Merge"]], "pydict_mergefromseq2 (c function)": [[22, "c.PyDict_MergeFromSeq2"]], "pydict_new (c function)": [[22, "c.PyDict_New"]], "pydict_next (c function)": [[22, "c.PyDict_Next"]], "pydict_setdefault (c function)": [[22, "c.PyDict_SetDefault"]], "pydict_setitem (c function)": [[22, "c.PyDict_SetItem"]], "pydict_setitemstring (c function)": [[22, "c.PyDict_SetItemString"]], "pydict_size (c function)": [[22, "c.PyDict_Size"]], "pydict_type (c var)": [[22, "c.PyDict_Type"]], "pydict_unwatch (c function)": [[22, "c.PyDict_Unwatch"]], "pydict_update (c function)": [[22, "c.PyDict_Update"]], "pydict_values (c function)": [[22, "c.PyDict_Values"]], "pydict_watch (c function)": [[22, "c.PyDict_Watch"]], "pydict_watchcallback (c type)": [[22, "c.PyDict_WatchCallback"]], "pydict_watchevent (c type)": [[22, "c.PyDict_WatchEvent"]], "built-in function": [[22, "index-1"], [30, "index-1"], [30, "index-2"], [37, "index-1"], [37, "index-2"], [39, "index-0"], [46, "index-0"], [46, "index-1"], [46, "index-2"], [46, "index-3"], [46, "index-4"], [46, "index-5"], [47, "index-0"], [47, "index-1"], [47, "index-3"], [47, "index-6"], [47, "index-7"], [47, "index-8"], [52, "index-0"], [52, "index-1"], [53, "index-1"], [56, "index-0"], [56, "index-1"], [61, "index-0"], [61, "index-1"], [73, "index-3"], [180, "index-1"], [214, "abs"], [214, "aiter"], [214, "all"], [214, "anext"], [214, "any"], [214, "ascii"], [214, "bin"], [214, "breakpoint"], [214, "callable"], [214, "chr"], [214, "classmethod"], [214, "compile"], [214, "delattr"], [214, "dir"], [214, "divmod"], [214, "enumerate"], [214, "eval"], [214, "exec"], [214, "filter"], [214, "format"], [214, "getattr"], [214, "globals"], [214, "hasattr"], [214, "hash"], [214, "help"], [214, "hex"], [214, "id"], [214, "import__"], [214, "index-2"], [214, "input"], [214, "isinstance"], [214, "issubclass"], [214, "iter"], [214, "len"], [214, "locals"], [214, "map"], [214, "max"], [214, "min"], [214, "next"], [214, "oct"], [214, "open"], [214, "ord"], [214, "pow"], [214, "print"], [214, "repr"], [214, "reversed"], [214, "round"], [214, "setattr"], [214, "sorted"], [214, "staticmethod"], [214, "sum"], [214, "vars"], [214, "zip"], [269, "multiprocessing.Manager"], [289, "index-1"], [289, "index-2"], [324, "index-13"], [324, "index-20"], [324, "index-22"], [324, "index-52"], [324, "index-63"], [324, "index-64"], [324, "index-65"], [362, "index-4"], [388, "xml.etree.ElementInclude.default_loader"], [388, "xml.etree.ElementInclude.include"], [402, "index-8"], [403, "index-1"], [403, "index-100"], [403, "index-101"], [403, "index-102"], [403, "index-103"], [403, "index-15"], [403, "index-19"], [403, "index-27"], [403, "index-30"], [403, "index-41"], [403, "index-54"], [403, "index-67"], [403, "index-75"], [403, "index-76"], [403, "index-78"], [403, "index-84"], [403, "index-96"], [403, "index-98"], [403, "index-99"], [405, "index-53"], [411, "index-3"], [411, "index-44"], [412, "index-6"], [421, "index-0"], [426, "index-0"]], "dictionary": [[22, "index-0"], [85, "term-dictionary"], [324, "index-52"], [403, "index-31"], [403, "index-46"], [403, "index-78"], [405, "index-17"], [405, "index-18"], [405, "index-42"], [411, "index-11"]], "len": [[22, "index-1"], [37, "index-1"], [39, "index-0"], [47, "index-8"], [52, "index-0"], [53, "index-1"], [324, "index-20"], [324, "index-52"], [403, "index-15"], [403, "index-27"], [403, "index-30"], [403, "index-96"]], "keyboardinterrupt (built-in exception)": [[23, "index-1"], [23, "index-2"], [23, "index-3"]], "pep 3151": [[23, "index-5"], [202, "index-8"], [304, "index-0"], [310, "index-0"], [318, "index-2"], [452, "index-10"]], "pyerr_badargument (c function)": [[23, "c.PyErr_BadArgument"]], "pyerr_badinternalcall (c function)": [[23, "c.PyErr_BadInternalCall"]], "pyerr_checksignals (c function)": [[23, "c.PyErr_CheckSignals"]], "pyerr_clear (c function)": [[23, "c.PyErr_Clear"]], "pyerr_displayexception (c function)": [[23, "c.PyErr_DisplayException"]], "pyerr_exceptionmatches (c function)": [[23, "c.PyErr_ExceptionMatches"]], "pyerr_fetch (c function)": [[23, "c.PyErr_Fetch"]], "pyerr_format (c function)": [[23, "c.PyErr_Format"]], "pyerr_formatv (c function)": [[23, "c.PyErr_FormatV"]], "pyerr_getexcinfo (c function)": [[23, "c.PyErr_GetExcInfo"]], "pyerr_gethandledexception (c function)": [[23, "c.PyErr_GetHandledException"]], "pyerr_getraisedexception (c function)": [[23, "c.PyErr_GetRaisedException"]], "pyerr_givenexceptionmatches (c function)": [[23, "c.PyErr_GivenExceptionMatches"]], "pyerr_newexception (c function)": [[23, "c.PyErr_NewException"]], "pyerr_newexceptionwithdoc (c function)": [[23, "c.PyErr_NewExceptionWithDoc"]], "pyerr_nomemory (c function)": [[23, "c.PyErr_NoMemory"]], "pyerr_normalizeexception (c function)": [[23, "c.PyErr_NormalizeException"]], "pyerr_occurred (c function)": [[23, "c.PyErr_Occurred"]], "pyerr_print (c function)": [[23, "c.PyErr_Print"]], "pyerr_printex (c function)": [[23, "c.PyErr_PrintEx"]], "pyerr_resourcewarning (c function)": [[23, "c.PyErr_ResourceWarning"]], "pyerr_restore (c function)": [[23, "c.PyErr_Restore"]], "pyerr_setexcfromwindowserr (c function)": [[23, "c.PyErr_SetExcFromWindowsErr"]], "pyerr_setexcfromwindowserrwithfilename (c function)": [[23, "c.PyErr_SetExcFromWindowsErrWithFilename"]], "pyerr_setexcfromwindowserrwithfilenameobject (c function)": [[23, "c.PyErr_SetExcFromWindowsErrWithFilenameObject"]], "pyerr_setexcfromwindowserrwithfilenameobjects (c function)": [[23, "c.PyErr_SetExcFromWindowsErrWithFilenameObjects"]], "pyerr_setexcinfo (c function)": [[23, "c.PyErr_SetExcInfo"]], "pyerr_setfromerrno (c function)": [[23, "c.PyErr_SetFromErrno"]], "pyerr_setfromerrnowithfilename (c function)": [[23, "c.PyErr_SetFromErrnoWithFilename"]], "pyerr_setfromerrnowithfilenameobject (c function)": [[23, "c.PyErr_SetFromErrnoWithFilenameObject"]], "pyerr_setfromerrnowithfilenameobjects (c function)": [[23, "c.PyErr_SetFromErrnoWithFilenameObjects"]], "pyerr_setfromwindowserr (c function)": [[23, "c.PyErr_SetFromWindowsErr"]], "pyerr_setfromwindowserrwithfilename (c function)": [[23, "c.PyErr_SetFromWindowsErrWithFilename"]], "pyerr_sethandledexception (c function)": [[23, "c.PyErr_SetHandledException"]], "pyerr_setimporterror (c function)": [[23, "c.PyErr_SetImportError"]], "pyerr_setimporterrorsubclass (c function)": [[23, "c.PyErr_SetImportErrorSubclass"]], "pyerr_setinterrupt (c function)": [[23, "c.PyErr_SetInterrupt"]], "pyerr_setinterruptex (c function)": [[23, "c.PyErr_SetInterruptEx"]], "pyerr_setnone (c function)": [[23, "c.PyErr_SetNone"]], "pyerr_setobject (c function)": [[23, "c.PyErr_SetObject"]], "pyerr_setraisedexception (c function)": [[23, "c.PyErr_SetRaisedException"]], "pyerr_setstring (c function)": [[23, "c.PyErr_SetString"]], "pyerr_syntaxlocation (c function)": [[23, "c.PyErr_SyntaxLocation"]], "pyerr_syntaxlocationex (c function)": [[23, "c.PyErr_SyntaxLocationEx"]], "pyerr_syntaxlocationobject (c function)": [[23, "c.PyErr_SyntaxLocationObject"]], "pyerr_warnex (c function)": [[23, "c.PyErr_WarnEx"]], "pyerr_warnexplicit (c function)": [[23, "c.PyErr_WarnExplicit"]], "pyerr_warnexplicitobject (c function)": [[23, "c.PyErr_WarnExplicitObject"]], "pyerr_warnformat (c function)": [[23, "c.PyErr_WarnFormat"]], "pyerr_writeunraisable (c function)": [[23, "c.PyErr_WriteUnraisable"]], "pyexc_arithmeticerror": [[23, "index-4"]], "pyexc_assertionerror": [[23, "index-4"]], "pyexc_attributeerror": [[23, "index-4"]], "pyexc_baseexception": [[23, "index-4"]], "pyexc_blockingioerror": [[23, "index-4"]], "pyexc_brokenpipeerror": [[23, "index-4"]], "pyexc_buffererror": [[23, "index-4"]], "pyexc_byteswarning": [[23, "index-7"]], "pyexc_childprocesserror": [[23, "index-4"]], "pyexc_connectionabortederror": [[23, "index-4"]], "pyexc_connectionerror": [[23, "index-4"]], "pyexc_connectionrefusederror": [[23, "index-4"]], "pyexc_connectionreseterror": [[23, "index-4"]], "pyexc_deprecationwarning": [[23, "index-7"]], "pyexc_eoferror": [[23, "index-4"]], "pyexc_environmenterror": [[23, "index-6"]], "pyexc_exception": [[23, "index-4"]], "pyexc_fileexistserror": [[23, "index-4"]], "pyexc_filenotfounderror": [[23, "index-4"]], "pyexc_floatingpointerror": [[23, "index-4"]], "pyexc_futurewarning": [[23, "index-7"]], "pyexc_generatorexit": [[23, "index-4"]], "pyexc_ioerror": [[23, "index-6"]], "pyexc_importerror": [[23, "index-4"]], "pyexc_importwarning": [[23, "index-7"]], "pyexc_indentationerror": [[23, "index-4"]], "pyexc_indexerror": [[23, "index-4"]], "pyexc_interruptederror": [[23, "index-4"]], "pyexc_isadirectoryerror": [[23, "index-4"]], "pyexc_keyerror": [[23, "index-4"]], "pyexc_keyboardinterrupt": [[23, "index-4"]], "pyexc_lookuperror": [[23, "index-4"]], "pyexc_memoryerror": [[23, "index-4"]], "pyexc_modulenotfounderror": [[23, "index-4"]], "pyexc_nameerror": [[23, "index-4"]], "pyexc_notadirectoryerror": [[23, "index-4"]], "pyexc_notimplementederror": [[23, "index-4"]], "pyexc_oserror": [[23, "index-4"]], "pyexc_overflowerror": [[23, "index-4"]], "pyexc_pendingdeprecationwarning": [[23, "index-7"]], "pyexc_permissionerror": [[23, "index-4"]], "pyexc_processlookuperror": [[23, "index-4"]], "pyexc_recursionerror": [[23, "index-4"]], "pyexc_referenceerror": [[23, "index-4"]], "pyexc_resourcewarning": [[23, "index-7"]], "pyexc_runtimeerror": [[23, "index-4"]], "pyexc_runtimewarning": [[23, "index-7"]], "pyexc_stopasynciteration": [[23, "index-4"]], "pyexc_stopiteration": [[23, "index-4"]], "pyexc_syntaxerror": [[23, "index-4"]], "pyexc_syntaxwarning": [[23, "index-7"]], "pyexc_systemerror": [[23, "index-4"]], "pyexc_systemexit": [[23, "index-4"]], "pyexc_taberror": [[23, "index-4"]], "pyexc_timeouterror": [[23, "index-4"]], "pyexc_typeerror": [[23, "index-4"]], "pyexc_unboundlocalerror": [[23, "index-4"]], "pyexc_unicodedecodeerror": [[23, "index-4"]], "pyexc_unicodeencodeerror": [[23, "index-4"]], "pyexc_unicodeerror": [[23, "index-4"]], "pyexc_unicodetranslateerror": [[23, "index-4"]], "pyexc_unicodewarning": [[23, "index-7"]], "pyexc_userwarning": [[23, "index-7"]], "pyexc_valueerror": [[23, "index-4"]], "pyexc_warning": [[23, "index-7"]], "pyexc_windowserror": [[23, "index-6"]], "pyexc_zerodivisionerror": [[23, "index-4"]], "pyexception_getargs (c function)": [[23, "c.PyException_GetArgs"]], "pyexception_getcause (c function)": [[23, "c.PyException_GetCause"]], "pyexception_getcontext (c function)": [[23, "c.PyException_GetContext"]], "pyexception_gettraceback (c function)": [[23, "c.PyException_GetTraceback"]], "pyexception_setargs (c function)": [[23, "c.PyException_SetArgs"]], "pyexception_setcause (c function)": [[23, "c.PyException_SetCause"]], "pyexception_setcontext (c function)": [[23, "c.PyException_SetContext"]], "pyexception_settraceback (c function)": [[23, "c.PyException_SetTraceback"]], "pysignal_setwakeupfd (c function)": [[23, "c.PySignal_SetWakeupFd"]], "pyunicodedecodeerror_create (c function)": [[23, "c.PyUnicodeDecodeError_Create"]], "pyunicodedecodeerror_getencoding (c function)": [[23, "c.PyUnicodeDecodeError_GetEncoding"]], "pyunicodedecodeerror_getend (c function)": [[23, "c.PyUnicodeDecodeError_GetEnd"]], "pyunicodedecodeerror_getobject (c function)": [[23, "c.PyUnicodeDecodeError_GetObject"]], "pyunicodedecodeerror_getreason (c function)": [[23, "c.PyUnicodeDecodeError_GetReason"]], "pyunicodedecodeerror_getstart (c function)": [[23, "c.PyUnicodeDecodeError_GetStart"]], "pyunicodedecodeerror_setend (c function)": [[23, "c.PyUnicodeDecodeError_SetEnd"]], "pyunicodedecodeerror_setreason (c function)": [[23, "c.PyUnicodeDecodeError_SetReason"]], "pyunicodedecodeerror_setstart (c function)": [[23, "c.PyUnicodeDecodeError_SetStart"]], "pyunicodeencodeerror_getencoding (c function)": [[23, "c.PyUnicodeEncodeError_GetEncoding"]], "pyunicodeencodeerror_getend (c function)": [[23, "c.PyUnicodeEncodeError_GetEnd"]], "pyunicodeencodeerror_getobject (c function)": [[23, "c.PyUnicodeEncodeError_GetObject"]], "pyunicodeencodeerror_getreason (c function)": [[23, "c.PyUnicodeEncodeError_GetReason"]], "pyunicodeencodeerror_getstart (c function)": [[23, "c.PyUnicodeEncodeError_GetStart"]], "pyunicodeencodeerror_setend (c function)": [[23, "c.PyUnicodeEncodeError_SetEnd"]], "pyunicodeencodeerror_setreason (c function)": [[23, "c.PyUnicodeEncodeError_SetReason"]], "pyunicodeencodeerror_setstart (c function)": [[23, "c.PyUnicodeEncodeError_SetStart"]], "pyunicodetranslateerror_getend (c function)": [[23, "c.PyUnicodeTranslateError_GetEnd"]], "pyunicodetranslateerror_getobject (c function)": [[23, "c.PyUnicodeTranslateError_GetObject"]], "pyunicodetranslateerror_getreason (c function)": [[23, "c.PyUnicodeTranslateError_GetReason"]], "pyunicodetranslateerror_getstart (c function)": [[23, "c.PyUnicodeTranslateError_GetStart"]], "pyunicodetranslateerror_setend (c function)": [[23, "c.PyUnicodeTranslateError_SetEnd"]], "pyunicodetranslateerror_setreason (c function)": [[23, "c.PyUnicodeTranslateError_SetReason"]], "pyunicodetranslateerror_setstart (c function)": [[23, "c.PyUnicodeTranslateError_SetStart"]], "pyunstable_exc_prepreraisestar (c function)": [[23, "c.PyUnstable_Exc_PrepReraiseStar"]], "py_enterrecursivecall (c function)": [[23, "c.Py_EnterRecursiveCall"]], "py_leaverecursivecall (c function)": [[23, "c.Py_LeaveRecursiveCall"]], "py_reprenter (c function)": [[23, "c.Py_ReprEnter"]], "py_reprleave (c function)": [[23, "c.Py_ReprLeave"]], "sigint": [[23, "index-1"], [23, "index-2"]], "module": [[23, "index-1"], [23, "index-2"], [23, "index-3"], [32, "index-15"], [32, "index-17"], [32, "index-33"], [32, "index-36"], [34, "index-18"], [44, "index-0"], [85, "term-module"], [88, "module-clinic"], [108, "module-__future__"], [109, "module-__main__"], [110, "index-2"], [110, "module-_thread"], [111, "module-abc"], [114, "module-argparse"], [115, "module-array"], [116, "module-ast"], [117, "module-asyncio"], [134, "module-atexit"], [136, "module-base64"], [137, "module-bdb"], [139, "index-0"], [139, "module-binascii"], [140, "module-bisect"], [141, "module-builtins"], [142, "module-bz2"], [143, "module-calendar"], [144, "index-1"], [144, "module-cmath"], [145, "module-cmd"], [147, "module-code"], [148, "module-codecs"], [148, "module-encodings.idna"], [148, "module-encodings.mbcs"], [148, "module-encodings.utf_8_sig"], [149, "module-codeop"], [150, "module-collections"], [151, "module-collections.abc"], [152, "module-colorsys"], [153, "module-compileall"], [156, "module-concurrent.futures"], [157, "module-configparser"], [159, "module-contextlib"], [160, "module-contextvars"], [161, "index-0"], [161, "module-copy"], [162, "index-0"], [162, "module-copyreg"], [164, "module-csv"], [165, "module-ctypes"], [166, "module-curses"], [166, "module-curses.textpad"], [167, "module-curses.ascii"], [168, "module-curses.panel"], [170, "module-dataclasses"], [172, "module-datetime"], [173, "module-dbm"], [173, "module-dbm.dumb"], [173, "module-dbm.gnu"], [173, "module-dbm.ndbm"], [175, "module-decimal"], [178, "module-tkinter.commondialog"], [178, "module-tkinter.filedialog"], [178, "module-tkinter.simpledialog"], [179, "module-difflib"], [180, "module-dis"], [182, "module-doctest"], [183, "module-email"], [184, "module-email.charset"], [186, "module-email.contentmanager"], [187, "module-email.encoders"], [188, "module-email.errors"], [190, "module-email.generator"], [191, "module-email.header"], [192, "module-email.headerregistry"], [193, "module-email.iterators"], [194, "module-email.message"], [195, "module-email.mime"], [196, "module-email.parser"], [197, "module-email.policy"], [198, "module-email.utils"], [199, "module-ensurepip"], [200, "module-enum"], [201, "module-errno"], [202, "index-4"], [203, "module-faulthandler"], [204, "module-fcntl"], [205, "module-filecmp"], [207, "module-fileinput"], [209, "index-1"], [209, "index-3"], [209, "module-fnmatch"], [210, "module-fractions"], [212, "module-ftplib"], [214, "index-13"], [214, "index-8"], [215, "module-functools"], [216, "module-gc"], [217, "module-getopt"], [218, "module-getpass"], [219, "module-gettext"], [220, "module-glob"], [221, "module-graphlib"], [222, "module-grp"], [223, "module-gzip"], [224, "module-hashlib"], [225, "module-heapq"], [226, "module-hmac"], [227, "module-html"], [228, "module-html.entities"], [229, "module-html.parser"], [230, "module-http"], [231, "index-1"], [231, "module-http.client"], [232, "module-http.cookiejar"], [233, "module-http.cookies"], [234, "module-http.server"], [236, "module-idlelib"], [237, "module-imaplib"], [238, "module-importlib"], [238, "module-importlib.abc"], [238, "module-importlib.machinery"], [238, "module-importlib.util"], [239, "module-importlib.metadata"], [240, "module-importlib.resources"], [241, "module-importlib.resources.abc"], [243, "module-inspect"], [244, "index-1"], [246, "module-io"], [247, "module-ipaddress"], [249, "module-itertools"], [250, "module-json"], [250, "module-json.tool"], [251, "module-keyword"], [253, "index-0"], [253, "module-linecache"], [254, "index-0"], [254, "index-6"], [254, "module-locale"], [255, "module-logging"], [256, "module-logging.config"], [257, "module-logging.handlers"], [258, "module-lzma"], [259, "module-mailbox"], [261, "index-0"], [261, "module-marshal"], [262, "module-math"], [263, "module-mimetypes"], [265, "module-mmap"], [266, "module-modulefinder"], [268, "module-msvcrt"], [269, "module-multiprocessing"], [269, "module-multiprocessing.connection"], [269, "module-multiprocessing.dummy"], [269, "module-multiprocessing.managers"], [269, "module-multiprocessing.pool"], [269, "module-multiprocessing.sharedctypes"], [270, "module-multiprocessing.shared_memory"], [272, "module-netrc"], [273, "module-numbers"], [275, "module-operator"], [276, "module-optparse"], [277, "index-23"], [277, "index-30"], [277, "module-os"], [278, "index-2"], [278, "module-os.path"], [279, "module-pathlib"], [280, "index-1"], [280, "module-pdb"], [282, "module-pickle"], [283, "module-pickletools"], [284, "module-pkgutil"], [285, "module-platform"], [286, "module-plistlib"], [287, "module-poplib"], [288, "index-0"], [288, "module-posix"], [289, "module-pprint"], [290, "module-cProfile"], [290, "module-profile"], [290, "module-pstats"], [291, "module-pty"], [292, "module-pwd"], [293, "module-py_compile"], [294, "module-pyclbr"], [295, "module-pydoc"], [296, "index-1"], [296, "module-xml.parsers.expat"], [296, "module-xml.parsers.expat.errors"], [296, "module-xml.parsers.expat.model"], [298, "module-queue"], [299, "module-quopri"], [300, "module-random"], [301, "module-re"], [302, "module-readline"], [303, "module-reprlib"], [304, "module-resource"], [305, "module-rlcompleter"], [306, "index-0"], [306, "index-4"], [306, "module-runpy"], [307, "module-sched"], [308, "module-secrets"], [310, "module-select"], [311, "module-selectors"], [312, "index-0"], [312, "index-1"], [312, "module-shelve"], [313, "module-shlex"], [314, "module-shutil"], [315, "module-signal"], [316, "index-0"], [316, "index-5"], [316, "index-6"], [316, "module-site"], [317, "module-smtplib"], [318, "index-14"], [318, "module-socket"], [319, "module-socketserver"], [320, "module-sqlite3"], [321, "module-ssl"], [322, "module-stat"], [323, "module-statistics"], [324, "index-15"], [324, "index-33"], [324, "index-40"], [324, "index-65"], [325, "module-string"], [326, "module-stringprep"], [327, "module-struct"], [328, "module-subprocess"], [330, "module-symtable"], [331, "index-21"], [331, "module-sys"], [332, "module-sys.monitoring"], [334, "module-sysconfig"], [335, "module-syslog"], [336, "module-tabnanny"], [337, "module-tarfile"], [338, "module-tempfile"], [339, "module-termios"], [340, "module-test"], [340, "module-test.support"], [340, "module-test.support.bytecode_helper"], [340, "module-test.support.import_helper"], [340, "module-test.support.os_helper"], [340, "module-test.support.script_helper"], [340, "module-test.support.socket_helper"], [340, "module-test.support.threading_helper"], [340, "module-test.support.warnings_helper"], [342, "module-textwrap"], [343, "module-threading"], [344, "module-time"], [345, "module-timeit"], [347, "module-tkinter"], [348, "module-tkinter.colorchooser"], [349, "module-tkinter.dnd"], [350, "module-tkinter.font"], [351, "module-tkinter.messagebox"], [352, "module-tkinter.scrolledtext"], [353, "module-tkinter.ttk"], [354, "module-token"], [355, "module-tokenize"], [356, "module-tomllib"], [357, "module-trace"], [358, "module-traceback"], [359, "module-tracemalloc"], [360, "module-tty"], [361, "module-turtle"], [361, "module-turtledemo"], [362, "module-types"], [363, "module-typing"], [364, "module-unicodedata"], [365, "module-unittest"], [366, "module-unittest.mock"], [369, "module-urllib"], [370, "module-urllib.error"], [371, "module-urllib.parse"], [372, "module-urllib.request"], [372, "module-urllib.response"], [373, "module-urllib.robotparser"], [374, "module-uuid"], [375, "module-venv"], [376, "module-warnings"], [377, "module-wave"], [378, "module-weakref"], [379, "module-webbrowser"], [381, "module-winreg"], [382, "module-winsound"], [383, "module-wsgiref"], [383, "module-wsgiref.handlers"], [383, "module-wsgiref.headers"], [383, "module-wsgiref.simple_server"], [383, "module-wsgiref.types"], [383, "module-wsgiref.util"], [383, "module-wsgiref.validate"], [384, "module-xml"], [385, "module-xml.dom"], [386, "module-xml.dom.minidom"], [387, "module-xml.dom.pulldom"], [388, "module-xml.etree.ElementInclude"], [388, "module-xml.etree.ElementTree"], [389, "module-xml.sax"], [390, "module-xml.sax.handler"], [391, "module-xml.sax.xmlreader"], [392, "module-xml.sax.saxutils"], [394, "module-xmlrpc.client"], [395, "module-xmlrpc.server"], [396, "module-zipapp"], [397, "module-zipfile"], [398, "module-zipimport"], [399, "module-zlib"], [400, "module-zoneinfo"], [402, "index-11"], [403, "index-23"], [403, "index-24"], [403, "index-32"], [403, "index-4"], [403, "index-43"], [403, "index-44"], [403, "index-54"], [404, "index-10"], [405, "index-40"], [411, "index-34"], [412, "index-2"], [412, "index-3"], [421, "index-1"], [425, "index-0"], [425, "index-4"], [425, "index-7"]], "signal": [[23, "index-1"], [23, "index-2"], [23, "index-3"], [110, "index-2"], [315, "module-signal"]], "strerror()": [[23, "index-0"]], "eoferror (built-in exception)": [[24, "index-1"]], "pyfile_fromfd (c function)": [[24, "c.PyFile_FromFd"]], "pyfile_getline (c function)": [[24, "c.PyFile_GetLine"]], "pyfile_setopencodehook (c function)": [[24, "c.PyFile_SetOpenCodeHook"]], "pyfile_writeobject (c function)": [[24, "c.PyFile_WriteObject"]], "pyfile_writestring (c function)": [[24, "c.PyFile_WriteString"]], "pyobject_asfiledescriptor (c function)": [[24, "c.PyObject_AsFileDescriptor"]], "py_print_raw": [[24, "index-2"]], "file": [[24, "index-0"], [88, "cmdoption-.-Tools-clinic-clinic.py-h-f-o-OUTPUT-v-converters-make-srcdir-SRCDIR-limited-FILE-...-arg-FILE"], [153, "cmdoption-compileall-arg-file"], [157, "index-0"], [214, "index-6"], [223, "cmdoption-gzip-arg-file"], [263, "index-2"], [280, "index-2"], [286, "index-0"], [288, "index-1"], [293, "index-0"], [314, "index-0"], [316, "index-4"], [338, "index-0"], [421, "index-0"]], "pyfloatobject (c type)": [[25, "c.PyFloatObject"]], "pyfloat_as_double (c function)": [[25, "c.PyFloat_AS_DOUBLE"]], "pyfloat_asdouble (c function)": [[25, "c.PyFloat_AsDouble"]], "pyfloat_check (c function)": [[25, "c.PyFloat_Check"]], "pyfloat_checkexact (c function)": [[25, "c.PyFloat_CheckExact"]], "pyfloat_fromdouble (c function)": [[25, "c.PyFloat_FromDouble"]], "pyfloat_fromstring (c function)": [[25, "c.PyFloat_FromString"]], "pyfloat_getinfo (c function)": [[25, "c.PyFloat_GetInfo"]], "pyfloat_getmax (c function)": [[25, "c.PyFloat_GetMax"]], "pyfloat_getmin (c function)": [[25, "c.PyFloat_GetMin"]], "pyfloat_pack2 (c function)": [[25, "c.PyFloat_Pack2"]], "pyfloat_pack4 (c function)": [[25, "c.PyFloat_Pack4"]], "pyfloat_pack8 (c function)": [[25, "c.PyFloat_Pack8"]], "pyfloat_type (c var)": [[25, "c.PyFloat_Type"]], "pyfloat_unpack2 (c function)": [[25, "c.PyFloat_Unpack2"]], "pyfloat_unpack4 (c function)": [[25, "c.PyFloat_Unpack4"]], "pyfloat_unpack8 (c function)": [[25, "c.PyFloat_Unpack8"]], "floating point": [[25, "index-0"], [324, "index-11"], [324, "index-12"], [403, "index-13"]], "pep 523": [[26, "index-0"], [32, "index-30"], [32, "index-31"], [448, "index-37"], [449, "index-41"], [455, "index-25"], [455, "index-26"], [458, "index-24"]], "pyframeobject (c type)": [[26, "c.PyFrameObject"]], "pyframe_check (c function)": [[26, "c.PyFrame_Check"]], "pyframe_getback (c function)": [[26, "c.PyFrame_GetBack"]], "pyframe_getbuiltins (c function)": [[26, "c.PyFrame_GetBuiltins"]], "pyframe_getcode (c function)": [[26, "c.PyFrame_GetCode"]], "pyframe_getgenerator (c function)": [[26, "c.PyFrame_GetGenerator"]], "pyframe_getglobals (c function)": [[26, "c.PyFrame_GetGlobals"]], "pyframe_getlasti (c function)": [[26, "c.PyFrame_GetLasti"]], "pyframe_getlinenumber (c function)": [[26, "c.PyFrame_GetLineNumber"]], "pyframe_getlocals (c function)": [[26, "c.PyFrame_GetLocals"]], "pyframe_getvar (c function)": [[26, "c.PyFrame_GetVar"]], "pyframe_getvarstring (c function)": [[26, "c.PyFrame_GetVarString"]], "pyframe_type (c var)": [[26, "c.PyFrame_Type"]], "pyunstable_interpreterframe_getcode (c function)": [[26, "c.PyUnstable_InterpreterFrame_GetCode"]], "pyunstable_interpreterframe_getlasti (c function)": [[26, "c.PyUnstable_InterpreterFrame_GetLasti"]], "pyunstable_interpreterframe_getline (c function)": [[26, "c.PyUnstable_InterpreterFrame_GetLine"]], "_pyinterpreterframe (c struct)": [[26, "c._PyInterpreterFrame"]], "methodtype (in module types)": [[27, "index-1"], [43, "index-2"], [362, "types.MethodType"]], "pyfunctionobject (c type)": [[27, "c.PyFunctionObject"]], "pyfunction_addwatcher (c function)": [[27, "c.PyFunction_AddWatcher"]], "pyfunction_check (c function)": [[27, "c.PyFunction_Check"]], "pyfunction_clearwatcher (c function)": [[27, "c.PyFunction_ClearWatcher"]], "pyfunction_getannotations (c function)": [[27, "c.PyFunction_GetAnnotations"]], "pyfunction_getclosure (c function)": [[27, "c.PyFunction_GetClosure"]], "pyfunction_getcode (c function)": [[27, "c.PyFunction_GetCode"]], "pyfunction_getdefaults (c function)": [[27, "c.PyFunction_GetDefaults"]], "pyfunction_getglobals (c function)": [[27, "c.PyFunction_GetGlobals"]], "pyfunction_getmodule (c function)": [[27, "c.PyFunction_GetModule"]], "pyfunction_new (c function)": [[27, "c.PyFunction_New"]], "pyfunction_newwithqualname (c function)": [[27, "c.PyFunction_NewWithQualName"]], "pyfunction_setannotations (c function)": [[27, "c.PyFunction_SetAnnotations"]], "pyfunction_setclosure (c function)": [[27, "c.PyFunction_SetClosure"]], "pyfunction_setdefaults (c function)": [[27, "c.PyFunction_SetDefaults"]], "pyfunction_setvectorcall (c function)": [[27, "c.PyFunction_SetVectorcall"]], "pyfunction_type (c var)": [[27, "c.PyFunction_Type"]], "pyfunction_watchcallback (c type)": [[27, "c.PyFunction_WatchCallback"]], "pyfunction_watchevent (c type)": [[27, "c.PyFunction_WatchEvent"]], "function": [[27, "index-0"], [85, "term-function"], [402, "index-28"], [402, "index-34"], [403, "index-33"], [403, "index-34"], [403, "index-38"], [403, "index-39"], [403, "index-40"], [403, "index-41"], [405, "index-23"], [405, "index-52"], [405, "index-53"], [405, "index-90"], [411, "index-24"], [411, "index-26"], [416, "index-6"]], "pygc_collect (c function)": [[28, "c.PyGC_Collect"]], "pygc_disable (c function)": [[28, "c.PyGC_Disable"]], "pygc_enable (c function)": [[28, "c.PyGC_Enable"]], "pygc_isenabled (c function)": [[28, "c.PyGC_IsEnabled"]], "pyobject_gc_del (c function)": [[28, "c.PyObject_GC_Del"]], "pyobject_gc_isfinalized (c function)": [[28, "c.PyObject_GC_IsFinalized"]], "pyobject_gc_istracked (c function)": [[28, "c.PyObject_GC_IsTracked"]], "pyobject_gc_new (c macro)": [[28, "c.PyObject_GC_New"]], "pyobject_gc_newvar (c macro)": [[28, "c.PyObject_GC_NewVar"]], "pyobject_gc_resize (c function)": [[28, "c.PyObject_GC_Resize"]], "pyobject_gc_track (c function)": [[28, "c.PyObject_GC_Track"]], "pyobject_gc_untrack (c function)": [[28, "c.PyObject_GC_UnTrack"]], "pyobject_is_gc (c function)": [[28, "c.PyObject_IS_GC"]], "pyunstable_gc_visitobjects (c function)": [[28, "c.PyUnstable_GC_VisitObjects"]], "pyunstable_object_gc_newwithextradata (c function)": [[28, "c.PyUnstable_Object_GC_NewWithExtraData"]], "py_visit (c function)": [[28, "c.Py_VISIT"]], "gcvisitobjects_t (c type)": [[28, "c.gcvisitobjects_t"]], "inquiry (c type)": [[28, "c.inquiry"]], "traverseproc (c type)": [[28, "c.traverseproc"]], "visitproc (c type)": [[28, "c.visitproc"]], "pygenobject (c type)": [[29, "c.PyGenObject"]], "pygen_check (c function)": [[29, "c.PyGen_Check"]], "pygen_checkexact (c function)": [[29, "c.PyGen_CheckExact"]], "pygen_new (c function)": [[29, "c.PyGen_New"]], "pygen_newwithqualname (c function)": [[29, "c.PyGen_NewWithQualName"]], "pygen_type (c var)": [[29, "c.PyGen_Type"]], "pep 3147": [[30, "index-3"], [83, "index-3"], [153, "index-0"], [153, "index-2"], [153, "index-3"], [238, "index-11"], [238, "index-21"], [238, "index-23"], [238, "index-24"], [293, "index-1"], [293, "index-4"], [306, "index-2"], [340, "index-3"], [407, "index-13"], [425, "index-3"], [451, "index-5"], [452, "index-18"]], "pyimport_addmodule (c function)": [[30, "c.PyImport_AddModule"]], "pyimport_addmoduleobject (c function)": [[30, "c.PyImport_AddModuleObject"]], "pyimport_addmoduleref (c function)": [[30, "c.PyImport_AddModuleRef"]], "pyimport_appendinittab (c function)": [[30, "c.PyImport_AppendInittab"]], "pyimport_execcodemodule (c function)": [[30, "c.PyImport_ExecCodeModule"]], "pyimport_execcodemoduleex (c function)": [[30, "c.PyImport_ExecCodeModuleEx"]], "pyimport_execcodemoduleobject (c function)": [[30, "c.PyImport_ExecCodeModuleObject"]], "pyimport_execcodemodulewithpathnames (c function)": [[30, "c.PyImport_ExecCodeModuleWithPathnames"]], "pyimport_extendinittab (c function)": [[30, "c.PyImport_ExtendInittab"]], "pyimport_frozenmodules (c var)": [[30, "c.PyImport_FrozenModules"]], "pyimport_getimporter (c function)": [[30, "c.PyImport_GetImporter"]], "pyimport_getmagicnumber (c function)": [[30, "c.PyImport_GetMagicNumber"]], "pyimport_getmagictag (c function)": [[30, "c.PyImport_GetMagicTag"]], "pyimport_getmodule (c function)": [[30, "c.PyImport_GetModule"]], "pyimport_getmoduledict (c function)": [[30, "c.PyImport_GetModuleDict"]], "pyimport_import (c function)": [[30, "c.PyImport_Import"]], "pyimport_importfrozenmodule (c function)": [[30, "c.PyImport_ImportFrozenModule"]], "pyimport_importfrozenmoduleobject (c function)": [[30, "c.PyImport_ImportFrozenModuleObject"]], "pyimport_importmodule (c function)": [[30, "c.PyImport_ImportModule"]], "pyimport_importmoduleex (c function)": [[30, "c.PyImport_ImportModuleEx"]], "pyimport_importmodulelevel (c function)": [[30, "c.PyImport_ImportModuleLevel"]], "pyimport_importmodulelevelobject (c function)": [[30, "c.PyImport_ImportModuleLevelObject"]], "pyimport_importmodulenoblock (c function)": [[30, "c.PyImport_ImportModuleNoBlock"]], "pyimport_reloadmodule (c function)": [[30, "c.PyImport_ReloadModule"]], "__all__": [[30, "index-0"], [425, "index-8"]], "__all__ (package variable)": [[30, "index-0"]], "__import__": [[30, "index-1"]], "_frozen (c struct)": [[30, "c._frozen"]], "_inittab (c struct)": [[30, "c._inittab"]], "_inittab.name (c member)": [[30, "c._inittab.name"]], "compile": [[30, "index-2"], [324, "index-63"], [362, "index-4"], [411, "index-44"]], "freeze utility": [[30, "index-4"]], "modules (in module sys)": [[30, "index-0"], [32, "index-15"], [331, "sys.modules"]], "package variable": [[30, "index-0"]], "pep 489": [[32, "index-32"], [44, "index-8"], [69, "index-1"], [71, "index-0"], [238, "index-17"], [238, "index-18"], [238, "index-19"], [238, "index-20"], [238, "index-26"], [238, "index-8"], [454, "index-26"], [454, "index-28"], [454, "index-45"]], "pep 528": [[32, "index-10"], [33, "index-19"], [436, "index-16"], [455, "index-22"]], "pep 529": [[32, "index-8"], [62, "index-5"], [277, "index-27"], [331, "index-34"], [331, "index-9"], [430, "index-44"], [436, "index-17"], [455, "index-20"], [457, "index-19"]], "pep 539": [[32, "index-40"], [456, "index-14"], [456, "index-15"]], "pep 554": [[32, "index-38"], [449, "index-10"]], "pythondebug": [[32, "index-0"], [33, "index-24"], [430, "envvar-PYTHONDEBUG"], [430, "index-4"], [431, "index-7"]], "pythondontwritebytecode": [[32, "index-1"], [33, "index-34"], [83, "index-4"], [331, "index-6"], [430, "envvar-PYTHONDONTWRITEBYTECODE"], [430, "index-3"], [443, "index-20"], [443, "index-24"]], "pythonhashseed": [[32, "index-2"], [32, "index-3"], [33, "index-12"], [403, "index-79"], [430, "envvar-PYTHONHASHSEED"], [430, "index-17"], [430, "index-18"], [430, "index-39"], [452, "index-23"], [452, "index-35"]], "pythonhome": [[32, "index-23"], [32, "index-24"], [32, "index-5"], [33, "index-13"], [33, "index-14"], [34, "index-21"], [34, "index-24"], [333, "index-2"], [333, "index-4"], [340, "index-0"], [430, "envvar-PYTHONHOME"], [430, "index-32"], [430, "index-33"], [430, "index-36"], [430, "index-7"], [436, "index-33"], [436, "index-35"], [436, "index-37"], [449, "index-47"], [450, "index-19"], [450, "index-22"], [455, "index-2"]], "pythoninspect": [[32, "index-6"], [33, "index-16"], [430, "envvar-PYTHONINSPECT"], [430, "index-9"], [440, "index-29"]], "pythonlegacywindowsfsencoding": [[32, "index-7"], [33, "index-1"], [331, "index-33"], [430, "envvar-PYTHONLEGACYWINDOWSFSENCODING"], [455, "index-19"]], "pythonlegacywindowsstdio": [[32, "index-9"], [33, "index-18"], [331, "index-37"], [430, "envvar-PYTHONLEGACYWINDOWSSTDIO"], [430, "index-40"], [455, "index-21"]], "pythonnousersite": [[32, "index-11"], [33, "index-31"], [316, "index-8"], [430, "envvar-PYTHONNOUSERSITE"], [443, "index-6"]], "pythonoptimize": [[32, "index-12"], [33, "index-23"], [430, "envvar-PYTHONOPTIMIZE"], [430, "index-12"]], "pythonpath": [[32, "index-4"], [33, "index-22"], [34, "index-22"], [34, "index-25"], [69, "index-0"], [331, "index-22"], [331, "index-23"], [333, "index-0"], [333, "index-1"], [340, "index-1"], [407, "index-17"], [425, "index-1"], [425, "index-5"], [425, "index-6"], [430, "envvar-PYTHONPATH"], [430, "index-35"], [430, "index-37"], [430, "index-38"], [430, "index-6"], [434, "index-0"], [436, "index-11"], [436, "index-32"], [436, "index-34"], [436, "index-36"], [453, "index-56"], [453, "index-57"]], "pythonunbuffered": [[32, "index-13"], [33, "index-6"], [331, "index-38"], [430, "envvar-PYTHONUNBUFFERED"], [430, "index-20"]], "pythonverbose": [[32, "index-14"], [33, "index-32"], [430, "envvar-PYTHONVERBOSE"], [430, "index-21"]], "pyeval_acquirethread (c function)": [[32, "c.PyEval_AcquireThread"]], "pyeval_releasethread (c function)": [[32, "c.PyEval_ReleaseThread"]], "pyeval_restorethread (c function)": [[32, "c.PyEval_RestoreThread"]], "pyeval_restorethread()": [[32, "index-29"]], "pyeval_savethread (c function)": [[32, "c.PyEval_SaveThread"]], "pyeval_savethread()": [[32, "index-29"]], "pyeval_setprofile (c function)": [[32, "c.PyEval_SetProfile"]], "pyeval_setprofileallthreads (c function)": [[32, "c.PyEval_SetProfileAllThreads"]], "pyeval_settrace (c function)": [[32, "c.PyEval_SetTrace"]], "pyeval_settraceallthreads (c function)": [[32, "c.PyEval_SetTraceAllThreads"]], "pygilstate_check (c function)": [[32, "c.PyGILState_Check"]], "pygilstate_ensure (c function)": [[32, "c.PyGILState_Ensure"]], "pygilstate_getthisthreadstate (c function)": [[32, "c.PyGILState_GetThisThreadState"]], "pygilstate_release (c function)": [[32, "c.PyGILState_Release"]], "pyinterpreterconfig (c type)": [[32, "c.PyInterpreterConfig"]], "pyinterpreterconfig.allow_daemon_threads (c member)": [[32, "c.PyInterpreterConfig.allow_daemon_threads"]], "pyinterpreterconfig.allow_exec (c member)": [[32, "c.PyInterpreterConfig.allow_exec"]], "pyinterpreterconfig.allow_fork (c member)": [[32, "c.PyInterpreterConfig.allow_fork"]], "pyinterpreterconfig.allow_threads (c member)": [[32, "c.PyInterpreterConfig.allow_threads"]], "pyinterpreterconfig.check_multi_interp_extensions (c member)": [[32, "c.PyInterpreterConfig.check_multi_interp_extensions"]], "pyinterpreterconfig.gil (c member)": [[32, "c.PyInterpreterConfig.gil"]], "pyinterpreterconfig.use_main_obmalloc (c member)": [[32, "c.PyInterpreterConfig.use_main_obmalloc"]], "pyinterpreterconfig_default_gil (c macro)": [[32, "c.PyInterpreterConfig_DEFAULT_GIL"]], "pyinterpreterconfig_own_gil (c macro)": [[32, "c.PyInterpreterConfig_OWN_GIL"]], "pyinterpreterconfig_shared_gil (c macro)": [[32, "c.PyInterpreterConfig_SHARED_GIL"]], "pyinterpreterstate (c type)": [[32, "c.PyInterpreterState"]], "pyinterpreterstate_clear (c function)": [[32, "c.PyInterpreterState_Clear"]], "pyinterpreterstate_delete (c function)": [[32, "c.PyInterpreterState_Delete"]], "pyinterpreterstate_get (c function)": [[32, "c.PyInterpreterState_Get"]], "pyinterpreterstate_getdict (c function)": [[32, "c.PyInterpreterState_GetDict"]], "pyinterpreterstate_getid (c function)": [[32, "c.PyInterpreterState_GetID"]], "pyinterpreterstate_head (c function)": [[32, "c.PyInterpreterState_Head"]], "pyinterpreterstate_main (c function)": [[32, "c.PyInterpreterState_Main"]], "pyinterpreterstate_new (c function)": [[32, "c.PyInterpreterState_New"]], "pyinterpreterstate_next (c function)": [[32, "c.PyInterpreterState_Next"]], "pyinterpreterstate_threadhead (c function)": [[32, "c.PyInterpreterState_ThreadHead"]], "pythreadstate": [[32, "index-27"]], "pythreadstate (c type)": [[32, "c.PyThreadState"]], "pythreadstate.interp (c member)": [[32, "c.PyThreadState.interp"]], "pythreadstate_clear (c function)": [[32, "c.PyThreadState_Clear"]], "pythreadstate_delete (c function)": [[32, "c.PyThreadState_Delete"]], "pythreadstate_deletecurrent (c function)": [[32, "c.PyThreadState_DeleteCurrent"]], "pythreadstate_entertracing (c function)": [[32, "c.PyThreadState_EnterTracing"]], "pythreadstate_get (c function)": [[32, "c.PyThreadState_Get"]], "pythreadstate_getdict (c function)": [[32, "c.PyThreadState_GetDict"]], "pythreadstate_getframe (c function)": [[32, "c.PyThreadState_GetFrame"]], "pythreadstate_getid (c function)": [[32, "c.PyThreadState_GetID"]], "pythreadstate_getinterpreter (c function)": [[32, "c.PyThreadState_GetInterpreter"]], "pythreadstate_leavetracing (c function)": [[32, "c.PyThreadState_LeaveTracing"]], "pythreadstate_new (c function)": [[32, "c.PyThreadState_New"]], "pythreadstate_next (c function)": [[32, "c.PyThreadState_Next"]], "pythreadstate_setasyncexc (c function)": [[32, "c.PyThreadState_SetAsyncExc"]], "pythreadstate_swap (c function)": [[32, "c.PyThreadState_Swap"]], "pythread_reinittls (c function)": [[32, "c.PyThread_ReInitTLS"]], "pythread_create_key (c function)": [[32, "c.PyThread_create_key"]], "pythread_delete_key (c function)": [[32, "c.PyThread_delete_key"]], "pythread_delete_key_value (c function)": [[32, "c.PyThread_delete_key_value"]], "pythread_get_key_value (c function)": [[32, "c.PyThread_get_key_value"]], "pythread_set_key_value (c function)": [[32, "c.PyThread_set_key_value"]], "pythread_tss_alloc (c function)": [[32, "c.PyThread_tss_alloc"]], "pythread_tss_create (c function)": [[32, "c.PyThread_tss_create"]], "pythread_tss_delete (c function)": [[32, "c.PyThread_tss_delete"]], "pythread_tss_free (c function)": [[32, "c.PyThread_tss_free"]], "pythread_tss_get (c function)": [[32, "c.PyThread_tss_get"]], "pythread_tss_is_created (c function)": [[32, "c.PyThread_tss_is_created"]], "pythread_tss_set (c function)": [[32, "c.PyThread_tss_set"]], "pytrace_call (c var)": [[32, "c.PyTrace_CALL"]], "pytrace_c_call (c var)": [[32, "c.PyTrace_C_CALL"]], "pytrace_c_exception (c var)": [[32, "c.PyTrace_C_EXCEPTION"]], "pytrace_c_return (c var)": [[32, "c.PyTrace_C_RETURN"]], "pytrace_exception (c var)": [[32, "c.PyTrace_EXCEPTION"]], "pytrace_line (c var)": [[32, "c.PyTrace_LINE"]], "pytrace_opcode (c var)": [[32, "c.PyTrace_OPCODE"]], "pytrace_return (c var)": [[32, "c.PyTrace_RETURN"]], "py_addpendingcall (c function)": [[32, "c.Py_AddPendingCall"]], "py_addpendingcall()": [[32, "index-39"]], "py_begin_allow_threads": [[32, "index-28"]], "py_begin_allow_threads (c macro)": [[32, "c.Py_BEGIN_ALLOW_THREADS"]], "py_block_threads (c macro)": [[32, "c.Py_BLOCK_THREADS"]], "py_byteswarningflag (c var)": [[32, "c.Py_BytesWarningFlag"]], "py_debugflag (c var)": [[32, "c.Py_DebugFlag"]], "py_dontwritebytecodeflag (c var)": [[32, "c.Py_DontWriteBytecodeFlag"]], "py_end_allow_threads": [[32, "index-28"]], "py_end_allow_threads (c macro)": [[32, "c.Py_END_ALLOW_THREADS"]], "py_endinterpreter (c function)": [[32, "c.Py_EndInterpreter"]], "py_finalize (c function)": [[32, "c.Py_Finalize"]], "py_finalizeex (c function)": [[32, "c.Py_FinalizeEx"]], "py_finalizeex()": [[32, "index-15"], [32, "index-34"], [32, "index-37"], [57, "index-2"], [57, "index-3"]], "py_frozenflag (c var)": [[32, "c.Py_FrozenFlag"]], "py_getbuildinfo (c function)": [[32, "c.Py_GetBuildInfo"]], "py_getcompiler (c function)": [[32, "c.Py_GetCompiler"]], "py_getcopyright (c function)": [[32, "c.Py_GetCopyright"]], "py_getexecprefix (c function)": [[32, "c.Py_GetExecPrefix"]], "py_getpath (c function)": [[32, "c.Py_GetPath"]], "py_getplatform (c function)": [[32, "c.Py_GetPlatform"]], "py_getprefix (c function)": [[32, "c.Py_GetPrefix"]], "py_getprogramfullpath (c function)": [[32, "c.Py_GetProgramFullPath"]], "py_getprogramname (c function)": [[32, "c.Py_GetProgramName"]], "py_getpythonhome (c function)": [[32, "c.Py_GetPythonHome"]], "py_getversion (c function)": [[32, "c.Py_GetVersion"]], "py_hashrandomizationflag (c var)": [[32, "c.Py_HashRandomizationFlag"]], "py_ignoreenvironmentflag (c var)": [[32, "c.Py_IgnoreEnvironmentFlag"]], "py_initialize (c function)": [[32, "c.Py_Initialize"]], "py_initialize()": [[32, "index-34"], [34, "index-18"]], "py_initializeex (c function)": [[32, "c.Py_InitializeEx"]], "py_inspectflag (c var)": [[32, "c.Py_InspectFlag"]], "py_interactiveflag (c var)": [[32, "c.Py_InteractiveFlag"]], "py_isfinalizing (c function)": [[32, "c.Py_IsFinalizing"]], "py_isinitialized (c function)": [[32, "c.Py_IsInitialized"]], "py_isolatedflag (c var)": [[32, "c.Py_IsolatedFlag"]], "py_legacywindowsfsencodingflag (c var)": [[32, "c.Py_LegacyWindowsFSEncodingFlag"]], "py_legacywindowsstdioflag (c var)": [[32, "c.Py_LegacyWindowsStdioFlag"]], "py_newinterpreter (c function)": [[32, "c.Py_NewInterpreter"]], "py_newinterpreterfromconfig (c function)": [[32, "c.Py_NewInterpreterFromConfig"]], "py_nositeflag (c var)": [[32, "c.Py_NoSiteFlag"]], "py_nousersitedirectory (c var)": [[32, "c.Py_NoUserSiteDirectory"]], "py_optimizeflag (c var)": [[32, "c.Py_OptimizeFlag"]], "py_quietflag (c var)": [[32, "c.Py_QuietFlag"]], "py_unblock_threads (c macro)": [[32, "c.Py_UNBLOCK_THREADS"]], "py_unbufferedstdioflag (c var)": [[32, "c.Py_UnbufferedStdioFlag"]], "py_verboseflag (c var)": [[32, "c.Py_VerboseFlag"]], "py_tracefunc (c type)": [[32, "c.Py_tracefunc"]], "py_tss_needs_init (c macro)": [[32, "c.Py_tss_NEEDS_INIT"]], "py_tss_t (c type)": [[32, "c.Py_tss_t"]], "_pyframeevalfunction (c type)": [[32, "c._PyFrameEvalFunction"]], "_pyinterpreterstate_getevalframefunc (c function)": [[32, "c._PyInterpreterState_GetEvalFrameFunc"]], "_pyinterpreterstate_setevalframefunc (c function)": [[32, "c._PyInterpreterState_SetEvalFrameFunc"]], "__main__": [[32, "index-15"], [32, "index-33"], [32, "index-36"], [34, "index-18"], [109, "module-__main__"], [306, "index-0"], [306, "index-4"], [404, "index-10"], [412, "index-2"], [412, "index-3"]], "builtins": [[32, "index-15"], [32, "index-33"], [32, "index-36"], [34, "index-18"], [141, "module-builtins"], [214, "index-13"], [412, "index-2"], [425, "index-7"]], "close() (in module os)": [[32, "index-35"], [277, "os.close"]], "copyright (in module sys)": [[32, "index-20"], [331, "sys.copyright"]], "environment variable": [[32, "index-0"], [32, "index-1"], [32, "index-11"], [32, "index-12"], [32, "index-13"], [32, "index-14"], [32, "index-2"], [32, "index-23"], [32, "index-24"], [32, "index-3"], [32, "index-4"], [32, "index-5"], [32, "index-6"], [32, "index-7"], [32, "index-9"], [33, "index-1"], [33, "index-10"], [33, "index-11"], [33, "index-12"], [33, "index-13"], [33, "index-14"], [33, "index-15"], [33, "index-16"], [33, "index-17"], [33, "index-18"], [33, "index-2"], [33, "index-20"], [33, "index-21"], [33, "index-22"], [33, "index-23"], [33, "index-24"], [33, "index-25"], [33, "index-26"], [33, "index-27"], [33, "index-28"], [33, "index-29"], [33, "index-30"], [33, "index-31"], [33, "index-32"], [33, "index-33"], [33, "index-34"], [33, "index-37"], [33, "index-38"], [33, "index-4"], [33, "index-5"], [33, "index-6"], [33, "index-7"], [33, "index-9"], [34, "index-19"], [34, "index-20"], [34, "index-21"], [34, "index-22"], [34, "index-24"], [34, "index-25"], [41, "index-1"], [41, "index-2"], [41, "index-3"], [41, "index-4"], [41, "index-5"], [69, "index-0"], [82, "index-0"], [82, "index-1"], [83, "index-4"], [100, "index-0"], [106, "index-3"], [119, "index-0"], [120, "index-5"], [153, "index-1"], [166, "index-0"], [166, "index-1"], [166, "index-2"], [166, "index-3"], [166, "index-4"], [166, "index-5"], [166, "index-6"], [177, "index-0"], [177, "index-1"], [177, "index-2"], [177, "index-3"], [177, "index-4"], [177, "index-5"], [203, "index-0"], [214, "index-1"], [214, "index-16"], [218, "index-0"], [218, "index-1"], [218, "index-2"], [218, "index-3"], [219, "index-0"], [219, "index-1"], [219, "index-2"], [219, "index-3"], [219, "index-5"], [219, "index-6"], [219, "index-7"], [219, "index-8"], [236, "index-5"], [236, "index-6"], [246, "index-3"], [254, "index-1"], [254, "index-2"], [254, "index-3"], [277, "index-1"], [277, "index-10"], [277, "index-11"], [277, "index-2"], [277, "index-3"], [277, "index-33"], [277, "index-34"], [277, "index-35"], [277, "index-36"], [277, "index-39"], [277, "index-4"], [277, "index-40"], [277, "index-41"], [277, "index-42"], [277, "index-43"], [277, "index-52"], [278, "index-3"], [278, "index-4"], [278, "index-5"], [278, "index-6"], [278, "index-7"], [278, "index-8"], [293, "index-3"], [293, "index-6"], [293, "index-7"], [295, "index-1"], [295, "index-2"], [302, "index-0"], [309, "index-2"], [316, "index-10"], [316, "index-3"], [316, "index-7"], [316, "index-8"], [316, "index-9"], [321, "index-3"], [321, "index-4"], [324, "index-67"], [324, "index-68"], [328, "index-2"], [328, "index-3"], [328, "index-4"], [331, "index-17"], [331, "index-18"], [331, "index-22"], [331, "index-23"], [331, "index-24"], [331, "index-3"], [331, "index-33"], [331, "index-35"], [331, "index-36"], [331, "index-37"], [331, "index-38"], [331, "index-4"], [331, "index-5"], [331, "index-6"], [331, "index-7"], [333, "index-0"], [333, "index-1"], [333, "index-2"], [333, "index-3"], [333, "index-4"], [338, "index-1"], [338, "index-2"], [338, "index-3"], [340, "index-0"], [340, "index-1"], [340, "index-2"], [344, "index-13"], [344, "index-14"], [344, "index-15"], [344, "index-16"], [344, "index-17"], [344, "index-18"], [347, "index-0"], [347, "index-1"], [359, "index-0"], [359, "index-1"], [359, "index-2"], [372, "index-0"], [372, "index-4"], [372, "index-9"], [375, "index-2"], [375, "index-3"], [375, "index-4"], [376, "index-1"], [376, "index-2"], [376, "index-3"], [376, "index-4"], [376, "index-5"], [379, "index-0"], [379, "index-1"], [379, "index-2"], [385, "index-0"], [400, "envvar-PYTHONTZPATH"], [400, "index-2"], [403, "index-60"], [403, "index-79"], [413, "index-0"], [413, "index-1"], [425, "index-1"], [425, "index-2"], [425, "index-5"], [425, "index-6"], [430, "envvar-PYTHONASYNCIODEBUG"], [430, "envvar-PYTHONBREAKPOINT"], [430, "envvar-PYTHONCASEOK"], [430, "envvar-PYTHONCOERCECLOCALE"], [430, "envvar-PYTHONDEBUG"], [430, "envvar-PYTHONDEVMODE"], [430, "envvar-PYTHONDONTWRITEBYTECODE"], [430, "envvar-PYTHONDUMPREFS"], [430, "envvar-PYTHONDUMPREFSFILE-FILENAME"], [430, "envvar-PYTHONEXECUTABLE"], [430, "envvar-PYTHONFAULTHANDLER"], [430, "envvar-PYTHONHASHSEED"], [430, "envvar-PYTHONHOME"], [430, "envvar-PYTHONINSPECT"], [430, "envvar-PYTHONINTMAXSTRDIGITS"], [430, "envvar-PYTHONIOENCODING"], [430, "envvar-PYTHONLEGACYWINDOWSFSENCODING"], [430, "envvar-PYTHONLEGACYWINDOWSSTDIO"], [430, "envvar-PYTHONMALLOC"], [430, "envvar-PYTHONMALLOCSTATS"], [430, "envvar-PYTHONNODEBUGRANGES"], [430, "envvar-PYTHONNOUSERSITE"], [430, "envvar-PYTHONOPTIMIZE"], [430, "envvar-PYTHONPATH"], [430, "envvar-PYTHONPERFSUPPORT"], [430, "envvar-PYTHONPLATLIBDIR"], [430, "envvar-PYTHONPROFILEIMPORTTIME"], [430, "envvar-PYTHONPYCACHEPREFIX"], [430, "envvar-PYTHONSAFEPATH"], [430, "envvar-PYTHONSTARTUP"], [430, "envvar-PYTHONTRACEMALLOC"], [430, "envvar-PYTHONUNBUFFERED"], [430, "envvar-PYTHONUSERBASE"], [430, "envvar-PYTHONUTF8"], [430, "envvar-PYTHONVERBOSE"], [430, "envvar-PYTHONWARNDEFAULTENCODING"], [430, "envvar-PYTHONWARNINGS"], [430, "index-0"], [430, "index-10"], [430, "index-12"], [430, "index-16"], [430, "index-17"], [430, "index-18"], [430, "index-2"], [430, "index-20"], [430, "index-21"], [430, "index-22"], [430, "index-23"], [430, "index-24"], [430, "index-25"], [430, "index-26"], [430, "index-27"], [430, "index-28"], [430, "index-29"], [430, "index-3"], [430, "index-30"], [430, "index-31"], [430, "index-32"], [430, "index-33"], [430, "index-34"], [430, "index-35"], [430, "index-36"], [430, "index-37"], [430, "index-38"], [430, "index-39"], [430, "index-4"], [430, "index-40"], [430, "index-43"], [430, "index-45"], [430, "index-46"], [430, "index-5"], [430, "index-6"], [430, "index-7"], [430, "index-8"], [430, "index-9"], [431, "envvar-BASECFLAGS"], [431, "envvar-BASECPPFLAGS"], [431, "envvar-BLDSHARED"], [431, "envvar-CC"], [431, "envvar-CCSHARED"], [431, "envvar-CFLAGS"], [431, "envvar-CFLAGSFORSHARED"], [431, "envvar-CFLAGS_ALIASING"], [431, "envvar-CFLAGS_NODIST"], [431, "envvar-COMPILEALL_OPTS"], [431, "envvar-CONFIGURE_CFLAGS"], [431, "envvar-CONFIGURE_CFLAGS_NODIST"], [431, "envvar-CONFIGURE_CPPFLAGS"], [431, "envvar-CONFIGURE_LDFLAGS"], [431, "envvar-CONFIGURE_LDFLAGS_NODIST"], [431, "envvar-CPPFLAGS"], [431, "envvar-CXX"], [431, "envvar-EXTRA_CFLAGS"], [431, "envvar-LDFLAGS"], [431, "envvar-LDFLAGS_NODIST"], [431, "envvar-LDSHARED"], [431, "envvar-LIBS"], [431, "envvar-LINKCC"], [431, "envvar-OPT"], [431, "envvar-PROFILE_TASK"], [431, "envvar-PURIFY"], [431, "envvar-PY_BUILTIN_MODULE_CFLAGS"], [431, "envvar-PY_CFLAGS"], [431, "envvar-PY_CFLAGS_NODIST"], [431, "envvar-PY_CORE_CFLAGS"], [431, "envvar-PY_CORE_LDFLAGS"], [431, "envvar-PY_CPPFLAGS"], [431, "envvar-PY_LDFLAGS"], [431, "envvar-PY_LDFLAGS_NODIST"], [431, "envvar-PY_STDMODULE_CFLAGS"], [431, "index-10"], [431, "index-11"], [431, "index-12"], [431, "index-13"], [431, "index-14"], [431, "index-15"], [431, "index-16"], [431, "index-17"], [431, "index-18"], [431, "index-19"], [431, "index-2"], [431, "index-20"], [431, "index-21"], [431, "index-22"], [431, "index-23"], [431, "index-24"], [431, "index-25"], [431, "index-26"], [431, "index-27"], [431, "index-28"], [431, "index-29"], [431, "index-30"], [431, "index-5"], [431, "index-6"], [431, "index-7"], [431, "index-8"], [431, "index-9"], [434, "index-0"], [435, "index-0"], [436, "index-1"], [436, "index-10"], [436, "index-11"], [436, "index-12"], [436, "index-13"], [436, "index-14"], [436, "index-15"], [436, "index-18"], [436, "index-2"], [436, "index-20"], [436, "index-22"], [436, "index-23"], [436, "index-24"], [436, "index-25"], [436, "index-26"], [436, "index-27"], [436, "index-28"], [436, "index-29"], [436, "index-3"], [436, "index-30"], [436, "index-31"], [436, "index-32"], [436, "index-33"], [436, "index-34"], [436, "index-35"], [436, "index-36"], [436, "index-37"], [436, "index-4"], [436, "index-5"], [436, "index-6"], [436, "index-7"], [436, "index-8"], [436, "index-9"], [438, "index-11"], [440, "index-24"], [440, "index-25"], [440, "index-26"], [440, "index-27"], [440, "index-28"], [440, "index-29"], [443, "index-20"], [443, "index-21"], [443, "index-24"], [443, "index-4"], [443, "index-5"], [443, "index-6"], [444, "index-1"], [444, "index-12"], [444, "index-14"], [444, "index-15"], [444, "index-8"], [444, "index-9"], [447, "index-18"], [447, "index-34"], [448, "index-1"], [448, "index-21"], [448, "index-33"], [448, "index-6"], [449, "index-23"], [449, "index-47"], [450, "index-19"], [450, "index-22"], [451, "index-10"], [452, "index-23"], [452, "index-24"], [452, "index-35"], [453, "index-40"], [453, "index-41"], [453, "index-50"], [453, "index-51"], [453, "index-54"], [453, "index-55"], [453, "index-56"], [453, "index-57"], [453, "index-58"], [453, "index-59"], [455, "index-19"], [455, "index-2"], [455, "index-21"], [455, "index-27"], [455, "index-38"], [456, "index-12"], [456, "index-26"], [456, "index-27"], [456, "index-31"], [456, "index-36"], [456, "index-4"], [456, "index-8"], [457, "index-13"], [457, "index-14"], [457, "index-2"], [457, "index-20"], [457, "index-21"], [457, "index-22"], [457, "index-3"], [458, "index-21"]], "executable (in module sys)": [[32, "index-16"], [331, "sys.executable"]], "global interpreter lock": [[32, "index-25"], [85, "term-global-interpreter-lock"]], "interpreter lock": [[32, "index-25"]], "lock, interpreter": [[32, "index-25"]], "path": [[32, "index-15"], [32, "index-17"], [34, "index-19"], [34, "index-20"], [34, "index-18"], [82, "index-0"], [82, "index-1"], [253, "index-0"], [277, "index-33"], [277, "index-34"], [277, "index-35"], [277, "index-36"], [277, "index-39"], [277, "index-40"], [277, "index-41"], [277, "index-42"], [277, "index-52"], [278, "index-0"], [279, "index-0"], [316, "index-3"], [316, "index-0"], [316, "index-4"], [328, "index-2"], [331, "index-21"], [375, "index-2"], [375, "index-3"], [375, "index-4"], [379, "index-2"], [407, "index-9"], [413, "index-0"], [425, "index-2"], [425, "index-0"], [430, "index-34"], [435, "index-0"], [436, "index-1"], [436, "index-10"], [436, "index-12"], [436, "index-13"], [436, "index-14"], [436, "index-18"], [436, "index-2"], [436, "index-20"], [436, "index-22"], [436, "index-23"], [436, "index-25"], [436, "index-3"], [436, "index-5"], [436, "index-9"], [453, "index-55"], [453, "index-58"], [453, "index-59"], [457, "index-22"]], "path (in module sys)": [[32, "index-15"], [32, "index-17"], [34, "index-18"], [331, "sys.path"]], "platform (in module sys)": [[32, "index-19"], [331, "sys.platform"]], "search": [[32, "index-15"], [32, "index-17"], [34, "index-18"], [253, "index-0"], [316, "index-0"], [331, "index-21"], [425, "index-0"]], "setswitchinterval() (in module sys)": [[32, "index-26"], [331, "sys.setswitchinterval"]], "stderr (in module sys)": [[32, "index-33"], [32, "index-36"], [331, "sys.stderr"], [403, "index-54"]], "stdin (in module sys)": [[32, "index-33"], [32, "index-36"], [331, "sys.stdin"], [403, "index-54"]], "stdout (in module sys)": [[32, "index-33"], [32, "index-36"], [331, "sys.stdout"], [403, "index-54"]], "sys": [[32, "index-15"], [32, "index-33"], [32, "index-36"], [34, "index-18"], [214, "index-8"], [331, "module-sys"], [402, "index-11"], [412, "index-2"], [425, "index-4"]], "version (in module sys)": [[32, "index-18"], [32, "index-21"], [32, "index-22"], [331, "sys.version"]], "pep 432": [[33, "index-39"], [33, "index-40"], [456, "index-38"]], "pep 538": [[33, "index-35"], [430, "index-47"], [431, "index-3"], [456, "index-10"], [456, "index-3"], [456, "index-6"], [456, "index-7"]], "pep 540": [[33, "index-36"], [277, "index-0"], [456, "index-11"], [456, "index-9"]], "pep 552": [[33, "index-8"], [238, "index-9"], [293, "index-5"], [448, "index-23"], [456, "index-22"], [456, "index-23"]], "pep 587": [[33, "index-0"], [448, "index-39"], [450, "index-20"], [457, "index-5"], [457, "index-6"]], "pythoncoerceclocale": [[33, "index-38"], [277, "index-4"], [430, "envvar-PYTHONCOERCECLOCALE"], [431, "index-2"], [456, "index-4"]], "pythondevmode": [[33, "index-9"], [177, "index-0"], [430, "envvar-PYTHONDEVMODE"], [456, "index-26"]], "pythondumprefs": [[33, "index-10"], [430, "envvar-PYTHONDUMPREFS"], [431, "index-8"], [431, "index-9"], [457, "index-3"]], "pythonexecutable": [[33, "index-25"], [430, "envvar-PYTHONEXECUTABLE"]], "pythonfaulthandler": [[33, "index-11"], [177, "index-4"], [203, "index-0"], [430, "envvar-PYTHONFAULTHANDLER"], [430, "index-23"], [452, "index-24"]], "pythonintmaxstrdigits": [[33, "index-17"], [324, "index-67"], [324, "index-68"], [331, "index-17"], [430, "envvar-PYTHONINTMAXSTRDIGITS"], [430, "index-25"]], "pythonioencoding": [[33, "index-28"], [277, "index-1"], [331, "index-35"], [430, "envvar-PYTHONIOENCODING"], [430, "index-45"], [443, "index-21"], [453, "index-54"]], "pythonmallocstats": [[33, "index-20"], [41, "index-2"], [430, "envvar-PYTHONMALLOCSTATS"]], "pythonnodebugranges": [[33, "index-7"], [403, "index-60"], [430, "envvar-PYTHONNODEBUGRANGES"], [430, "index-30"], [448, "index-6"]], "pythonperfsupport": [[33, "index-30"], [100, "index-0"], [430, "envvar-PYTHONPERFSUPPORT"], [430, "index-31"], [449, "index-23"]], "pythonplatlibdir": [[33, "index-21"], [333, "index-3"], [430, "envvar-PYTHONPLATLIBDIR"]], "pythonprofileimporttime": [[33, "index-15"], [430, "envvar-PYTHONPROFILEIMPORTTIME"], [430, "index-26"], [456, "index-27"]], "pythonpycacheprefix": [[33, "index-27"], [331, "index-7"], [430, "envvar-PYTHONPYCACHEPREFIX"], [430, "index-28"], [457, "index-2"]], "pythonsafepath": [[33, "index-4"], [309, "index-2"], [331, "index-24"], [430, "envvar-PYTHONSAFEPATH"], [430, "index-16"], [448, "index-1"], [448, "index-21"]], "pythontracemalloc": [[33, "index-29"], [359, "index-0"], [359, "index-1"], [359, "index-2"], [430, "envvar-PYTHONTRACEMALLOC"], [430, "index-24"]], "pythonutf8": [[33, "index-2"], [33, "index-37"], [277, "index-2"], [277, "index-3"], [331, "index-36"], [430, "envvar-PYTHONUTF8"], [430, "index-27"], [430, "index-46"], [436, "index-15"], [456, "index-8"]], "pythonwarnings": [[33, "index-33"], [177, "index-1"], [376, "index-1"], [376, "index-2"], [376, "index-3"], [376, "index-4"], [376, "index-5"], [430, "envvar-PYTHONWARNINGS"], [430, "index-22"], [444, "index-1"], [444, "index-8"], [451, "index-10"], [456, "index-36"]], "pyconfig (c type)": [[33, "c.PyConfig"]], "pyconfig.argv (c member)": [[33, "c.PyConfig.argv"]], "pyconfig.base_exec_prefix (c member)": [[33, "c.PyConfig.base_exec_prefix"]], "pyconfig.base_executable (c member)": [[33, "c.PyConfig.base_executable"]], "pyconfig.base_prefix (c member)": [[33, "c.PyConfig.base_prefix"]], "pyconfig.buffered_stdio (c member)": [[33, "c.PyConfig.buffered_stdio"]], "pyconfig.bytes_warning (c member)": [[33, "c.PyConfig.bytes_warning"]], "pyconfig.check_hash_pycs_mode (c member)": [[33, "c.PyConfig.check_hash_pycs_mode"]], "pyconfig.code_debug_ranges (c member)": [[33, "c.PyConfig.code_debug_ranges"]], "pyconfig.configure_c_stdio (c member)": [[33, "c.PyConfig.configure_c_stdio"]], "pyconfig.dev_mode (c member)": [[33, "c.PyConfig.dev_mode"]], "pyconfig.dump_refs (c member)": [[33, "c.PyConfig.dump_refs"]], "pyconfig.exec_prefix (c member)": [[33, "c.PyConfig.exec_prefix"]], "pyconfig.executable (c member)": [[33, "c.PyConfig.executable"]], "pyconfig.faulthandler (c member)": [[33, "c.PyConfig.faulthandler"]], "pyconfig.filesystem_encoding (c member)": [[33, "c.PyConfig.filesystem_encoding"]], "pyconfig.filesystem_errors (c member)": [[33, "c.PyConfig.filesystem_errors"]], "pyconfig.hash_seed (c member)": [[33, "c.PyConfig.hash_seed"]], "pyconfig.home (c member)": [[33, "c.PyConfig.home"]], "pyconfig.import_time (c member)": [[33, "c.PyConfig.import_time"]], "pyconfig.inspect (c member)": [[33, "c.PyConfig.inspect"]], "pyconfig.install_signal_handlers (c member)": [[33, "c.PyConfig.install_signal_handlers"]], "pyconfig.int_max_str_digits (c member)": [[33, "c.PyConfig.int_max_str_digits"]], "pyconfig.interactive (c member)": [[33, "c.PyConfig.interactive"]], "pyconfig.isolated (c member)": [[33, "c.PyConfig.isolated"]], "pyconfig.legacy_windows_stdio (c member)": [[33, "c.PyConfig.legacy_windows_stdio"]], "pyconfig.malloc_stats (c member)": [[33, "c.PyConfig.malloc_stats"]], "pyconfig.module_search_paths (c member)": [[33, "c.PyConfig.module_search_paths"]], "pyconfig.module_search_paths_set (c member)": [[33, "c.PyConfig.module_search_paths_set"]], "pyconfig.optimization_level (c member)": [[33, "c.PyConfig.optimization_level"]], "pyconfig.orig_argv (c member)": [[33, "c.PyConfig.orig_argv"]], "pyconfig.parse_argv (c member)": [[33, "c.PyConfig.parse_argv"]], "pyconfig.parser_debug (c member)": [[33, "c.PyConfig.parser_debug"]], "pyconfig.pathconfig_warnings (c member)": [[33, "c.PyConfig.pathconfig_warnings"]], "pyconfig.perf_profiling (c member)": [[33, "c.PyConfig.perf_profiling"]], "pyconfig.platlibdir (c member)": [[33, "c.PyConfig.platlibdir"]], "pyconfig.prefix (c member)": [[33, "c.PyConfig.prefix"]], "pyconfig.program_name (c member)": [[33, "c.PyConfig.program_name"]], "pyconfig.pycache_prefix (c member)": [[33, "c.PyConfig.pycache_prefix"]], "pyconfig.pythonpath_env (c member)": [[33, "c.PyConfig.pythonpath_env"]], "pyconfig.quiet (c member)": [[33, "c.PyConfig.quiet"]], "pyconfig.run_command (c member)": [[33, "c.PyConfig.run_command"]], "pyconfig.run_filename (c member)": [[33, "c.PyConfig.run_filename"]], "pyconfig.run_module (c member)": [[33, "c.PyConfig.run_module"]], "pyconfig.safe_path (c member)": [[33, "c.PyConfig.safe_path"]], "pyconfig.show_ref_count (c member)": [[33, "c.PyConfig.show_ref_count"]], "pyconfig.site_import (c member)": [[33, "c.PyConfig.site_import"]], "pyconfig.skip_source_first_line (c member)": [[33, "c.PyConfig.skip_source_first_line"]], "pyconfig.stdio_encoding (c member)": [[33, "c.PyConfig.stdio_encoding"]], "pyconfig.stdio_errors (c member)": [[33, "c.PyConfig.stdio_errors"]], "pyconfig.tracemalloc (c member)": [[33, "c.PyConfig.tracemalloc"]], "pyconfig.use_environment (c member)": [[33, "c.PyConfig.use_environment"]], "pyconfig.use_hash_seed (c member)": [[33, "c.PyConfig.use_hash_seed"]], "pyconfig.user_site_directory (c member)": [[33, "c.PyConfig.user_site_directory"]], "pyconfig.verbose (c member)": [[33, "c.PyConfig.verbose"]], "pyconfig.warn_default_encoding (c member)": [[33, "c.PyConfig.warn_default_encoding"]], "pyconfig.warnoptions (c member)": [[33, "c.PyConfig.warnoptions"]], "pyconfig.write_bytecode (c member)": [[33, "c.PyConfig.write_bytecode"]], "pyconfig.xoptions (c member)": [[33, "c.PyConfig.xoptions"]], "pyconfig_clear (c function)": [[33, "c.PyConfig_Clear"]], "pyconfig_initisolatedconfig (c function)": [[33, "c.PyConfig_InitIsolatedConfig"]], "pyconfig_initpythonconfig (c function)": [[33, "c.PyConfig_InitPythonConfig"]], "pyconfig_read (c function)": [[33, "c.PyConfig_Read"]], "pyconfig_setargv (c function)": [[33, "c.PyConfig_SetArgv"]], "pyconfig_setbytesargv (c function)": [[33, "c.PyConfig_SetBytesArgv"]], "pyconfig_setbytesstring (c function)": [[33, "c.PyConfig_SetBytesString"]], "pyconfig_setstring (c function)": [[33, "c.PyConfig_SetString"]], "pyconfig_setwidestringlist (c function)": [[33, "c.PyConfig_SetWideStringList"]], "pypreconfig (c type)": [[33, "c.PyPreConfig"]], "pypreconfig.allocator (c member)": [[33, "c.PyPreConfig.allocator"]], "pypreconfig.coerce_c_locale (c member)": [[33, "c.PyPreConfig.coerce_c_locale"]], "pypreconfig.coerce_c_locale_warn (c member)": [[33, "c.PyPreConfig.coerce_c_locale_warn"]], "pypreconfig.configure_locale (c member)": [[33, "c.PyPreConfig.configure_locale"]], "pypreconfig.dev_mode (c member)": [[33, "c.PyPreConfig.dev_mode"]], "pypreconfig.isolated (c member)": [[33, "c.PyPreConfig.isolated"]], "pypreconfig.legacy_windows_fs_encoding (c member)": [[33, "c.PyPreConfig.legacy_windows_fs_encoding"]], "pypreconfig.parse_argv (c member)": [[33, "c.PyPreConfig.parse_argv"]], "pypreconfig.use_environment (c member)": [[33, "c.PyPreConfig.use_environment"]], "pypreconfig.utf8_mode (c member)": [[33, "c.PyPreConfig.utf8_mode"]], "pypreconfig_initisolatedconfig (c function)": [[33, "c.PyPreConfig_InitIsolatedConfig"]], "pypreconfig_initpythonconfig (c function)": [[33, "c.PyPreConfig_InitPythonConfig"]], "pystatus (c type)": [[33, "c.PyStatus"]], "pystatus.err_msg (c member)": [[33, "c.PyStatus.err_msg"]], "pystatus.exitcode (c member)": [[33, "c.PyStatus.exitcode"]], "pystatus.func (c member)": [[33, "c.PyStatus.func"]], "pystatus_error (c function)": [[33, "c.PyStatus_Error"]], "pystatus_exception (c function)": [[33, "c.PyStatus_Exception"]], "pystatus_exit (c function)": [[33, "c.PyStatus_Exit"]], "pystatus_iserror (c function)": [[33, "c.PyStatus_IsError"]], "pystatus_isexit (c function)": [[33, "c.PyStatus_IsExit"]], "pystatus_nomemory (c function)": [[33, "c.PyStatus_NoMemory"]], "pystatus_ok (c function)": [[33, "c.PyStatus_Ok"]], "pywidestringlist (c type)": [[33, "c.PyWideStringList"]], "pywidestringlist.items (c member)": [[33, "c.PyWideStringList.items"]], "pywidestringlist.length (c member)": [[33, "c.PyWideStringList.length"]], "pywidestringlist_append (c function)": [[33, "c.PyWideStringList_Append"]], "pywidestringlist_insert (c function)": [[33, "c.PyWideStringList_Insert"]], "py_exitstatusexception (c function)": [[33, "c.Py_ExitStatusException"]], "py_getargcargv (c function)": [[33, "c.Py_GetArgcArgv"]], "py_initializefromconfig (c function)": [[33, "c.Py_InitializeFromConfig"]], "py_preinitialize (c function)": [[33, "c.Py_PreInitialize"]], "py_preinitializefromargs (c function)": [[33, "c.Py_PreInitializeFromArgs"]], "py_preinitializefrombytesargs (c function)": [[33, "c.Py_PreInitializeFromBytesArgs"]], "py_runmain (c function)": [[33, "c.Py_RunMain"]], "_py_initializemain (c function)": [[33, "c._Py_InitializeMain"]], "__pyvenv_launcher__": [[33, "index-26"], [33, "index-5"]], "argv (in module sys)": [[33, "index-3"], [331, "sys.argv"]], "main()": [[33, "index-3"]], "pep 353": [[34, "index-10"], [442, "index-16"], [442, "index-17"], [442, "index-29"], [447, "index-37"]], "pep 7": [[34, "index-0"], [34, "index-1"], [34, "index-2"], [431, "index-0"], [455, "index-34"]], "pydoc_str (c macro)": [[34, "c.PyDoc_STR"]], "pydoc_strvar (c macro)": [[34, "c.PyDoc_STRVAR"]], "pyerr_clear()": [[34, "index-12"], [34, "index-17"]], "pyerr_exceptionmatches()": [[34, "index-17"]], "pyerr_occurred()": [[34, "index-11"]], "pyerr_setstring()": [[34, "index-12"]], "pylist_getitem()": [[34, "index-7"]], "pylist_setitem()": [[34, "index-5"]], "pymodinit_func (c macro)": [[34, "c.PyMODINIT_FUNC"]], "pysequence_getitem()": [[34, "index-7"]], "pytuple_setitem()": [[34, "index-5"]], "py_abs (c macro)": [[34, "c.Py_ABS"]], "py_always_inline (c macro)": [[34, "c.Py_ALWAYS_INLINE"]], "py_charmask (c macro)": [[34, "c.Py_CHARMASK"]], "py_decref()": [[34, "index-4"]], "py_deprecated (c macro)": [[34, "c.Py_DEPRECATED"]], "py_getenv (c macro)": [[34, "c.Py_GETENV"]], "py_getexecprefix()": [[34, "index-23"]], "py_getpath()": [[34, "index-23"]], "py_getprefix()": [[34, "index-23"]], "py_getprogramfullpath()": [[34, "index-23"]], "py_incref()": [[34, "index-4"]], "py_isinitialized()": [[34, "index-26"]], "py_max (c macro)": [[34, "c.Py_MAX"]], "py_member_size (c macro)": [[34, "c.Py_MEMBER_SIZE"]], "py_min (c macro)": [[34, "c.Py_MIN"]], "py_no_inline (c macro)": [[34, "c.Py_NO_INLINE"]], "py_stringify (c macro)": [[34, "c.Py_STRINGIFY"]], "py_unreachable (c macro)": [[34, "c.Py_UNREACHABLE"]], "py_unused (c macro)": [[34, "c.Py_UNUSED"]], "py_xdecref()": [[34, "index-17"]], "py_ssize_t (c type)": [[34, "c.Py_ssize_t"]], "exc_info() (in module sys)": [[34, "index-13"], [331, "sys.exc_info"]], "incr_item()": [[34, "index-15"], [34, "index-16"]], "set_all()": [[34, "index-6"]], "sum_list()": [[34, "index-8"]], "sum_sequence()": [[34, "index-14"], [34, "index-9"]], "type": [[34, "index-3"], [47, "index-7"], [59, "index-0"], [85, "term-type"], [214, "index-0"], [214, "index-12"], [324, "index-24"], [324, "index-52"], [324, "index-59"], [324, "index-65"], [403, "index-1"], [403, "index-4"], [403, "index-84"], [405, "index-7"], [411, "index-47"]], "pyaiter_check (c function)": [[35, "c.PyAIter_Check"]], "pyiter_check (c function)": [[35, "c.PyIter_Check"]], "pyiter_next (c function)": [[35, "c.PyIter_Next"]], "pyiter_send (c function)": [[35, "c.PyIter_Send"]], "pysendresult (c type)": [[35, "c.PySendResult"]], "pycalliter_check (c function)": [[36, "c.PyCallIter_Check"]], "pycalliter_new (c function)": [[36, "c.PyCallIter_New"]], "pycalliter_type (c var)": [[36, "c.PyCallIter_Type"]], "pyseqiter_check (c function)": [[36, "c.PySeqIter_Check"]], "pyseqiter_new (c function)": [[36, "c.PySeqIter_New"]], "pyseqiter_type (c var)": [[36, "c.PySeqIter_Type"]], "pylistobject (c type)": [[37, "c.PyListObject"]], "pylist_append (c function)": [[37, "c.PyList_Append"]], "pylist_astuple (c function)": [[37, "c.PyList_AsTuple"]], "pylist_check (c function)": [[37, "c.PyList_Check"]], "pylist_checkexact (c function)": [[37, "c.PyList_CheckExact"]], "pylist_get_item (c function)": [[37, "c.PyList_GET_ITEM"]], "pylist_get_size (c function)": [[37, "c.PyList_GET_SIZE"]], "pylist_getitem (c function)": [[37, "c.PyList_GetItem"]], "pylist_getslice (c function)": [[37, "c.PyList_GetSlice"]], "pylist_insert (c function)": [[37, "c.PyList_Insert"]], "pylist_new (c function)": [[37, "c.PyList_New"]], "pylist_reverse (c function)": [[37, "c.PyList_Reverse"]], "pylist_set_item (c function)": [[37, "c.PyList_SET_ITEM"]], "pylist_setitem (c function)": [[37, "c.PyList_SetItem"]], "pylist_setslice (c function)": [[37, "c.PyList_SetSlice"]], "pylist_size (c function)": [[37, "c.PyList_Size"]], "pylist_sort (c function)": [[37, "c.PyList_Sort"]], "pylist_type (c var)": [[37, "c.PyList_Type"]], "list": [[37, "index-0"], [85, "term-list"], [324, "index-23"], [324, "index-24"], [324, "index-25"], [402, "index-6"], [403, "index-25"], [405, "index-15"], [405, "index-40"], [405, "index-42"], [405, "index-45"], [405, "index-91"], [411, "index-1"], [411, "index-10"], [411, "index-2"], [411, "index-21"], [411, "index-5"], [411, "index-6"]], "tuple": [[37, "index-2"], [52, "index-1"], [58, "index-0"], [324, "index-22"], [324, "index-26"], [403, "index-20"], [405, "index-42"], [405, "index-45"], [405, "index-9"], [405, "index-92"]], "long_max": [[38, "index-1"]], "overflowerror (built-in exception)": [[38, "index-1"], [38, "index-2"], [38, "index-3"], [38, "index-4"], [38, "index-5"], [38, "index-6"]], "py_ssize_t_max": [[38, "index-3"]], "pylongobject (c type)": [[38, "c.PyLongObject"]], "pylong_asdouble (c function)": [[38, "c.PyLong_AsDouble"]], "pylong_asint (c function)": [[38, "c.PyLong_AsInt"]], "pylong_aslong (c function)": [[38, "c.PyLong_AsLong"]], "pylong_aslongandoverflow (c function)": [[38, "c.PyLong_AsLongAndOverflow"]], "pylong_aslonglong (c function)": [[38, "c.PyLong_AsLongLong"]], "pylong_aslonglongandoverflow (c function)": [[38, "c.PyLong_AsLongLongAndOverflow"]], "pylong_assize_t (c function)": [[38, "c.PyLong_AsSize_t"]], "pylong_asssize_t (c function)": [[38, "c.PyLong_AsSsize_t"]], "pylong_asunsignedlong (c function)": [[38, "c.PyLong_AsUnsignedLong"]], "pylong_asunsignedlonglong (c function)": [[38, "c.PyLong_AsUnsignedLongLong"]], "pylong_asunsignedlonglongmask (c function)": [[38, "c.PyLong_AsUnsignedLongLongMask"]], "pylong_asunsignedlongmask (c function)": [[38, "c.PyLong_AsUnsignedLongMask"]], "pylong_asvoidptr (c function)": [[38, "c.PyLong_AsVoidPtr"]], "pylong_check (c function)": [[38, "c.PyLong_Check"]], "pylong_checkexact (c function)": [[38, "c.PyLong_CheckExact"]], "pylong_fromdouble (c function)": [[38, "c.PyLong_FromDouble"]], "pylong_fromlong (c function)": [[38, "c.PyLong_FromLong"]], "pylong_fromlonglong (c function)": [[38, "c.PyLong_FromLongLong"]], "pylong_fromsize_t (c function)": [[38, "c.PyLong_FromSize_t"]], "pylong_fromssize_t (c function)": [[38, "c.PyLong_FromSsize_t"]], "pylong_fromstring (c function)": [[38, "c.PyLong_FromString"]], "pylong_fromunicodeobject (c function)": [[38, "c.PyLong_FromUnicodeObject"]], "pylong_fromunsignedlong (c function)": [[38, "c.PyLong_FromUnsignedLong"]], "pylong_fromunsignedlonglong (c function)": [[38, "c.PyLong_FromUnsignedLongLong"]], "pylong_fromvoidptr (c function)": [[38, "c.PyLong_FromVoidPtr"]], "pylong_type (c var)": [[38, "c.PyLong_Type"]], "pyunstable_long_compactvalue (c function)": [[38, "c.PyUnstable_Long_CompactValue"]], "pyunstable_long_iscompact (c function)": [[38, "c.PyUnstable_Long_IsCompact"]], "size_max": [[38, "index-5"]], "ulong_max": [[38, "index-4"]], "integer": [[38, "index-0"], [324, "index-11"], [324, "index-12"], [324, "index-16"], [403, "index-10"], [403, "index-11"], [403, "index-19"]], "long integer": [[38, "index-0"]], "pymapping_check (c function)": [[39, "c.PyMapping_Check"]], "pymapping_delitem (c function)": [[39, "c.PyMapping_DelItem"]], "pymapping_delitemstring (c function)": [[39, "c.PyMapping_DelItemString"]], "pymapping_getitemstring (c function)": [[39, "c.PyMapping_GetItemString"]], "pymapping_getoptionalitem (c function)": [[39, "c.PyMapping_GetOptionalItem"]], "pymapping_getoptionalitemstring (c function)": [[39, "c.PyMapping_GetOptionalItemString"]], "pymapping_haskey (c function)": [[39, "c.PyMapping_HasKey"]], "pymapping_haskeystring (c function)": [[39, "c.PyMapping_HasKeyString"]], "pymapping_haskeystringwitherror (c function)": [[39, "c.PyMapping_HasKeyStringWithError"]], "pymapping_haskeywitherror (c function)": [[39, "c.PyMapping_HasKeyWithError"]], "pymapping_items (c function)": [[39, "c.PyMapping_Items"]], "pymapping_keys (c function)": [[39, "c.PyMapping_Keys"]], "pymapping_length (c function)": [[39, "c.PyMapping_Length"]], "pymapping_setitemstring (c function)": [[39, "c.PyMapping_SetItemString"]], "pymapping_size (c function)": [[39, "c.PyMapping_Size"]], "pymapping_values (c function)": [[39, "c.PyMapping_Values"]], "pymarshal_readlastobjectfromfile (c function)": [[40, "c.PyMarshal_ReadLastObjectFromFile"]], "pymarshal_readlongfromfile (c function)": [[40, "c.PyMarshal_ReadLongFromFile"]], "pymarshal_readobjectfromfile (c function)": [[40, "c.PyMarshal_ReadObjectFromFile"]], "pymarshal_readobjectfromstring (c function)": [[40, "c.PyMarshal_ReadObjectFromString"]], "pymarshal_readshortfromfile (c function)": [[40, "c.PyMarshal_ReadShortFromFile"]], "pymarshal_writelongtofile (c function)": [[40, "c.PyMarshal_WriteLongToFile"]], "pymarshal_writeobjecttofile (c function)": [[40, "c.PyMarshal_WriteObjectToFile"]], "pymarshal_writeobjecttostring (c function)": [[40, "c.PyMarshal_WriteObjectToString"]], "pymem_domain_mem (c macro)": [[41, "c.PYMEM_DOMAIN_MEM"]], "pymem_domain_obj (c macro)": [[41, "c.PYMEM_DOMAIN_OBJ"]], "pymem_domain_raw (c macro)": [[41, "c.PYMEM_DOMAIN_RAW"]], "pythonmalloc": [[41, "index-1"], [41, "index-3"], [41, "index-4"], [41, "index-5"], [177, "index-2"], [177, "index-3"], [430, "envvar-PYTHONMALLOC"], [430, "index-43"], [431, "index-6"], [455, "index-27"], [455, "index-38"]], "pymemallocatordomain (c type)": [[41, "c.PyMemAllocatorDomain"]], "pymemallocatorex (c type)": [[41, "c.PyMemAllocatorEx"]], "pymem_calloc (c function)": [[41, "c.PyMem_Calloc"]], "pymem_del (c function)": [[41, "c.PyMem_Del"]], "pymem_free (c function)": [[41, "c.PyMem_Free"]], "pymem_getallocator (c function)": [[41, "c.PyMem_GetAllocator"]], "pymem_malloc (c function)": [[41, "c.PyMem_Malloc"]], "pymem_new (c macro)": [[41, "c.PyMem_New"]], "pymem_rawcalloc (c function)": [[41, "c.PyMem_RawCalloc"]], "pymem_rawfree (c function)": [[41, "c.PyMem_RawFree"]], "pymem_rawmalloc (c function)": [[41, "c.PyMem_RawMalloc"]], "pymem_rawrealloc (c function)": [[41, "c.PyMem_RawRealloc"]], "pymem_realloc (c function)": [[41, "c.PyMem_Realloc"]], "pymem_resize (c macro)": [[41, "c.PyMem_Resize"]], "pymem_setallocator (c function)": [[41, "c.PyMem_SetAllocator"]], "pymem_setupdebughooks (c function)": [[41, "c.PyMem_SetupDebugHooks"]], "pyobjectarenaallocator (c type)": [[41, "c.PyObjectArenaAllocator"]], "pyobject_calloc (c function)": [[41, "c.PyObject_Calloc"]], "pyobject_free (c function)": [[41, "c.PyObject_Free"]], "pyobject_getarenaallocator (c function)": [[41, "c.PyObject_GetArenaAllocator"]], "pyobject_malloc (c function)": [[41, "c.PyObject_Malloc"]], "pyobject_realloc (c function)": [[41, "c.PyObject_Realloc"]], "pyobject_setarenaallocator (c function)": [[41, "c.PyObject_SetArenaAllocator"]], "pytracemalloc_track (c function)": [[41, "c.PyTraceMalloc_Track"]], "pytracemalloc_untrack (c function)": [[41, "c.PyTraceMalloc_Untrack"]], "calloc()": [[41, "index-0"]], "free()": [[41, "index-0"]], "malloc()": [[41, "index-0"]], "realloc()": [[41, "index-0"]], "pymemoryview_check (c function)": [[42, "c.PyMemoryView_Check"]], "pymemoryview_frombuffer (c function)": [[42, "c.PyMemoryView_FromBuffer"]], "pymemoryview_frommemory (c function)": [[42, "c.PyMemoryView_FromMemory"]], "pymemoryview_fromobject (c function)": [[42, "c.PyMemoryView_FromObject"]], "pymemoryview_get_base (c function)": [[42, "c.PyMemoryView_GET_BASE"]], "pymemoryview_get_buffer (c function)": [[42, "c.PyMemoryView_GET_BUFFER"]], "pymemoryview_getcontiguous (c function)": [[42, "c.PyMemoryView_GetContiguous"]], "memoryview": [[42, "index-0"], [324, "index-40"]], "pyinstancemethod_check (c function)": [[43, "c.PyInstanceMethod_Check"]], "pyinstancemethod_function (c function)": [[43, "c.PyInstanceMethod_Function"]], "pyinstancemethod_get_function (c function)": [[43, "c.PyInstanceMethod_GET_FUNCTION"]], "pyinstancemethod_new (c function)": [[43, "c.PyInstanceMethod_New"]], "pyinstancemethod_type (c var)": [[43, "c.PyInstanceMethod_Type"]], "pymethod_check (c function)": [[43, "c.PyMethod_Check"]], "pymethod_function (c function)": [[43, "c.PyMethod_Function"]], "pymethod_get_function (c function)": [[43, "c.PyMethod_GET_FUNCTION"]], "pymethod_get_self (c function)": [[43, "c.PyMethod_GET_SELF"]], "pymethod_new (c function)": [[43, "c.PyMethod_New"]], "pymethod_self (c function)": [[43, "c.PyMethod_Self"]], "pymethod_type (c var)": [[43, "c.PyMethod_Type"]], "instancemethod": [[43, "index-0"]], "method": [[43, "index-1"], [85, "index-26"], [85, "index-34"], [85, "term-method"], [324, "index-61"], [403, "index-36"], [403, "index-42"], [405, "index-53"], [415, "index-0"]], "moduletype (in module types)": [[44, "index-1"]], "pep 3121": [[44, "index-6"], [445, "index-34"]], "pep 451": [[44, "index-7"], [85, "index-16"], [238, "index-6"], [284, "index-1"], [284, "index-4"], [306, "index-3"], [306, "index-5"], [306, "index-8"], [331, "index-20"], [407, "index-26"], [447, "index-32"], [449, "index-36"], [453, "index-23"], [453, "index-3"], [454, "index-27"]], "pymoduledef (c type)": [[44, "c.PyModuleDef"]], "pymoduledef.m_base (c member)": [[44, "c.PyModuleDef.m_base"]], "pymoduledef.m_clear (c member)": [[44, "c.PyModuleDef.m_clear"]], "pymoduledef.m_doc (c member)": [[44, "c.PyModuleDef.m_doc"]], "pymoduledef.m_free (c member)": [[44, "c.PyModuleDef.m_free"]], "pymoduledef.m_methods (c member)": [[44, "c.PyModuleDef.m_methods"]], "pymoduledef.m_name (c member)": [[44, "c.PyModuleDef.m_name"]], "pymoduledef.m_size (c member)": [[44, "c.PyModuleDef.m_size"]], "pymoduledef.m_slots (c member)": [[44, "c.PyModuleDef.m_slots"]], "pymoduledef.m_slots.m_reload (c member)": [[44, "c.PyModuleDef.m_slots.m_reload"]], "pymoduledef.m_traverse (c member)": [[44, "c.PyModuleDef.m_traverse"]], "pymoduledef_init (c function)": [[44, "c.PyModuleDef_Init"]], "pymoduledef_slot (c type)": [[44, "c.PyModuleDef_Slot"]], "pymoduledef_slot.slot (c member)": [[44, "c.PyModuleDef_Slot.slot"]], "pymoduledef_slot.value (c member)": [[44, "c.PyModuleDef_Slot.value"]], "pymodule_add (c function)": [[44, "c.PyModule_Add"]], "pymodule_addfunctions (c function)": [[44, "c.PyModule_AddFunctions"]], "pymodule_addintconstant (c function)": [[44, "c.PyModule_AddIntConstant"]], "pymodule_addintmacro (c macro)": [[44, "c.PyModule_AddIntMacro"]], "pymodule_addobject (c function)": [[44, "c.PyModule_AddObject"]], "pymodule_addobjectref (c function)": [[44, "c.PyModule_AddObjectRef"]], "pymodule_addstringconstant (c function)": [[44, "c.PyModule_AddStringConstant"]], "pymodule_addstringmacro (c macro)": [[44, "c.PyModule_AddStringMacro"]], "pymodule_addtype (c function)": [[44, "c.PyModule_AddType"]], "pymodule_check (c function)": [[44, "c.PyModule_Check"]], "pymodule_checkexact (c function)": [[44, "c.PyModule_CheckExact"]], "pymodule_create (c function)": [[44, "c.PyModule_Create"]], "pymodule_create2 (c function)": [[44, "c.PyModule_Create2"]], "pymodule_execdef (c function)": [[44, "c.PyModule_ExecDef"]], "pymodule_fromdefandspec (c function)": [[44, "c.PyModule_FromDefAndSpec"]], "pymodule_fromdefandspec2 (c function)": [[44, "c.PyModule_FromDefAndSpec2"]], "pymodule_getdef (c function)": [[44, "c.PyModule_GetDef"]], "pymodule_getdict (c function)": [[44, "c.PyModule_GetDict"]], "pymodule_getfilename (c function)": [[44, "c.PyModule_GetFilename"]], "pymodule_getfilenameobject (c function)": [[44, "c.PyModule_GetFilenameObject"]], "pymodule_getname (c function)": [[44, "c.PyModule_GetName"]], "pymodule_getnameobject (c function)": [[44, "c.PyModule_GetNameObject"]], "pymodule_getstate (c function)": [[44, "c.PyModule_GetState"]], "pymodule_new (c function)": [[44, "c.PyModule_New"]], "pymodule_newobject (c function)": [[44, "c.PyModule_NewObject"]], "pymodule_setdocstring (c function)": [[44, "c.PyModule_SetDocString"]], "pymodule_type (c var)": [[44, "c.PyModule_Type"]], "pystate_addmodule (c function)": [[44, "c.PyState_AddModule"]], "pystate_findmodule (c function)": [[44, "c.PyState_FindModule"]], "pystate_removemodule (c function)": [[44, "c.PyState_RemoveModule"]], "py_mod_multiple_interpreters_not_supported (c macro)": [[44, "c.Py_MOD_MULTIPLE_INTERPRETERS_NOT_SUPPORTED"]], "py_mod_multiple_interpreters_supported (c macro)": [[44, "c.Py_MOD_MULTIPLE_INTERPRETERS_SUPPORTED"]], "py_mod_per_interpreter_gil_supported (c macro)": [[44, "c.Py_MOD_PER_INTERPRETER_GIL_SUPPORTED"]], "py_mod_create (c macro)": [[44, "c.Py_mod_create"]], "py_mod_exec (c macro)": [[44, "c.Py_mod_exec"]], "py_mod_multiple_interpreters (c macro)": [[44, "c.Py_mod_multiple_interpreters"]], "systemerror (built-in exception)": [[44, "index-4"], [44, "index-5"]], "__dict__ (module attribute)": [[44, "index-3"], [403, "index-45"]], "__doc__ (module attribute)": [[44, "index-2"], [403, "index-44"]], "__file__ (module attribute)": [[44, "index-2"], [44, "index-5"], [403, "index-44"]], "__loader__ (module attribute)": [[44, "index-2"]], "__name__ (module attribute)": [[44, "index-2"], [44, "index-4"], [403, "index-44"]], "__package__ (module attribute)": [[44, "index-2"]], "none": [[45, "index-0"], [403, "index-6"], [411, "index-3"]], "py_none (c var)": [[45, "c.Py_None"]], "py_return_none (c macro)": [[45, "c.Py_RETURN_NONE"]], "pyindex_check (c function)": [[46, "c.PyIndex_Check"]], "pynumber_absolute (c function)": [[46, "c.PyNumber_Absolute"]], "pynumber_add (c function)": [[46, "c.PyNumber_Add"]], "pynumber_and (c function)": [[46, "c.PyNumber_And"]], "pynumber_asssize_t (c function)": [[46, "c.PyNumber_AsSsize_t"]], "pynumber_check (c function)": [[46, "c.PyNumber_Check"]], "pynumber_divmod (c function)": [[46, "c.PyNumber_Divmod"]], "pynumber_float (c function)": [[46, "c.PyNumber_Float"]], "pynumber_floordivide (c function)": [[46, "c.PyNumber_FloorDivide"]], "pynumber_inplaceadd (c function)": [[46, "c.PyNumber_InPlaceAdd"]], "pynumber_inplaceand (c function)": [[46, "c.PyNumber_InPlaceAnd"]], "pynumber_inplacefloordivide (c function)": [[46, "c.PyNumber_InPlaceFloorDivide"]], "pynumber_inplacelshift (c function)": [[46, "c.PyNumber_InPlaceLshift"]], "pynumber_inplacematrixmultiply (c function)": [[46, "c.PyNumber_InPlaceMatrixMultiply"]], "pynumber_inplacemultiply (c function)": [[46, "c.PyNumber_InPlaceMultiply"]], "pynumber_inplaceor (c function)": [[46, "c.PyNumber_InPlaceOr"]], "pynumber_inplacepower (c function)": [[46, "c.PyNumber_InPlacePower"]], "pynumber_inplaceremainder (c function)": [[46, "c.PyNumber_InPlaceRemainder"]], "pynumber_inplacershift (c function)": [[46, "c.PyNumber_InPlaceRshift"]], "pynumber_inplacesubtract (c function)": [[46, "c.PyNumber_InPlaceSubtract"]], "pynumber_inplacetruedivide (c function)": [[46, "c.PyNumber_InPlaceTrueDivide"]], "pynumber_inplacexor (c function)": [[46, "c.PyNumber_InPlaceXor"]], "pynumber_index (c function)": [[46, "c.PyNumber_Index"]], "pynumber_invert (c function)": [[46, "c.PyNumber_Invert"]], "pynumber_long (c function)": [[46, "c.PyNumber_Long"]], "pynumber_lshift (c function)": [[46, "c.PyNumber_Lshift"]], "pynumber_matrixmultiply (c function)": [[46, "c.PyNumber_MatrixMultiply"]], "pynumber_multiply (c function)": [[46, "c.PyNumber_Multiply"]], "pynumber_negative (c function)": [[46, "c.PyNumber_Negative"]], "pynumber_or (c function)": [[46, "c.PyNumber_Or"]], "pynumber_positive (c function)": [[46, "c.PyNumber_Positive"]], "pynumber_power (c function)": [[46, "c.PyNumber_Power"]], "pynumber_remainder (c function)": [[46, "c.PyNumber_Remainder"]], "pynumber_rshift (c function)": [[46, "c.PyNumber_Rshift"]], "pynumber_subtract (c function)": [[46, "c.PyNumber_Subtract"]], "pynumber_tobase (c function)": [[46, "c.PyNumber_ToBase"]], "pynumber_truedivide (c function)": [[46, "c.PyNumber_TrueDivide"]], "pynumber_xor (c function)": [[46, "c.PyNumber_Xor"]], "abs": [[46, "index-2"], [403, "index-101"]], "divmod": [[46, "index-0"], [403, "index-98"], [403, "index-99"]], "float": [[46, "index-5"], [324, "index-13"], [403, "index-102"]], "int": [[46, "index-4"], [324, "index-13"], [403, "index-102"]], "pow": [[46, "index-1"], [46, "index-3"], [403, "index-100"], [403, "index-98"], [403, "index-99"]], "pep 3119": [[47, "index-4"], [47, "index-5"], [111, "index-0"], [151, "index-5"], [403, "index-92"], [443, "index-16"]], "pyobject_ascii (c function)": [[47, "c.PyObject_ASCII"]], "pyobject_bytes (c function)": [[47, "c.PyObject_Bytes"]], "pyobject_delattr (c function)": [[47, "c.PyObject_DelAttr"]], "pyobject_delattrstring (c function)": [[47, "c.PyObject_DelAttrString"]], "pyobject_delitem (c function)": [[47, "c.PyObject_DelItem"]], "pyobject_dir (c function)": [[47, "c.PyObject_Dir"]], "pyobject_format (c function)": [[47, "c.PyObject_Format"]], "pyobject_genericgetattr (c function)": [[47, "c.PyObject_GenericGetAttr"]], "pyobject_genericgetdict (c function)": [[47, "c.PyObject_GenericGetDict"]], "pyobject_genericsetattr (c function)": [[47, "c.PyObject_GenericSetAttr"]], "pyobject_genericsetdict (c function)": [[47, "c.PyObject_GenericSetDict"]], "pyobject_getaiter (c function)": [[47, "c.PyObject_GetAIter"]], "pyobject_getattr (c function)": [[47, "c.PyObject_GetAttr"]], "pyobject_getattrstring (c function)": [[47, "c.PyObject_GetAttrString"]], "pyobject_getitem (c function)": [[47, "c.PyObject_GetItem"]], "pyobject_getitemdata (c function)": [[47, "c.PyObject_GetItemData"]], "pyobject_getiter (c function)": [[47, "c.PyObject_GetIter"]], "pyobject_getoptionalattr (c function)": [[47, "c.PyObject_GetOptionalAttr"]], "pyobject_getoptionalattrstring (c function)": [[47, "c.PyObject_GetOptionalAttrString"]], "pyobject_gettypedata (c function)": [[47, "c.PyObject_GetTypeData"]], "pyobject_hasattr (c function)": [[47, "c.PyObject_HasAttr"]], "pyobject_hasattrstring (c function)": [[47, "c.PyObject_HasAttrString"]], "pyobject_hasattrstringwitherror (c function)": [[47, "c.PyObject_HasAttrStringWithError"]], "pyobject_hasattrwitherror (c function)": [[47, "c.PyObject_HasAttrWithError"]], "pyobject_hash (c function)": [[47, "c.PyObject_Hash"]], "pyobject_hashnotimplemented (c function)": [[47, "c.PyObject_HashNotImplemented"]], "pyobject_isinstance (c function)": [[47, "c.PyObject_IsInstance"]], "pyobject_issubclass (c function)": [[47, "c.PyObject_IsSubclass"]], "pyobject_istrue (c function)": [[47, "c.PyObject_IsTrue"]], "pyobject_length (c function)": [[47, "c.PyObject_Length"]], "pyobject_lengthhint (c function)": [[47, "c.PyObject_LengthHint"]], "pyobject_not (c function)": [[47, "c.PyObject_Not"]], "pyobject_print (c function)": [[47, "c.PyObject_Print"]], "pyobject_repr (c function)": [[47, "c.PyObject_Repr"]], "pyobject_richcompare (c function)": [[47, "c.PyObject_RichCompare"]], "pyobject_richcomparebool (c function)": [[47, "c.PyObject_RichCompareBool"]], "pyobject_setattr (c function)": [[47, "c.PyObject_SetAttr"]], "pyobject_setattrstring (c function)": [[47, "c.PyObject_SetAttrString"]], "pyobject_setitem (c function)": [[47, "c.PyObject_SetItem"]], "pyobject_size (c function)": [[47, "c.PyObject_Size"]], "pyobject_str (c function)": [[47, "c.PyObject_Str"], [47, "index-2"]], "pyobject_type (c function)": [[47, "c.PyObject_Type"]], "pyobject_typecheck (c function)": [[47, "c.PyObject_TypeCheck"]], "pytype_gettypedatasize (c function)": [[47, "c.PyType_GetTypeDataSize"]], "py_notimplemented (c var)": [[47, "c.Py_NotImplemented"]], "py_return_notimplemented (c macro)": [[47, "c.Py_RETURN_NOTIMPLEMENTED"]], "_pyobject_getdictptr (c function)": [[47, "c._PyObject_GetDictPtr"]], "ascii": [[47, "index-1"], [409, "index-1"], [410, "index-17"]], "hash": [[47, "index-6"], [61, "index-1"], [324, "index-22"], [403, "index-78"]], "repr": [[47, "index-0"], [61, "index-0"], [73, "index-3"], [411, "index-3"]], "string": [[47, "index-2"], [73, "index-3"], [214, "index-11"], [214, "index-4"], [254, "index-6"], [324, "index-28"], [324, "index-30"], [324, "index-32"], [324, "index-35"], [325, "module-string"], [403, "index-18"], [403, "index-74"], [403, "index-76"], [405, "index-42"], [405, "index-43"], [405, "index-45"], [410, "index-25"], [411, "index-3"]], "pyunstable_perfmapstate_fini (c function)": [[49, "c.PyUnstable_PerfMapState_Fini"]], "pyunstable_perfmapstate_init (c function)": [[49, "c.PyUnstable_PerfMapState_Init"]], "pyunstable_writeperfmapentry (c function)": [[49, "c.PyUnstable_WritePerfMapEntry"]], "py_clear (c function)": [[50, "c.Py_CLEAR"]], "py_decref (c function)": [[50, "c.Py_DECREF"], [50, "c.Py_DecRef"]], "py_incref (c function)": [[50, "c.Py_INCREF"], [50, "c.Py_IncRef"]], "py_newref (c function)": [[50, "c.Py_NewRef"]], "py_refcnt (c function)": [[50, "c.Py_REFCNT"]], "py_setref (c macro)": [[50, "c.Py_SETREF"]], "py_set_refcnt (c function)": [[50, "c.Py_SET_REFCNT"]], "py_xdecref (c function)": [[50, "c.Py_XDECREF"]], "py_xincref (c function)": [[50, "c.Py_XINCREF"]], "py_xnewref (c function)": [[50, "c.Py_XNewRef"]], "py_xsetref (c macro)": [[50, "c.Py_XSETREF"]], "pyeval_getbuiltins (c function)": [[51, "c.PyEval_GetBuiltins"]], "pyeval_getframe (c function)": [[51, "c.PyEval_GetFrame"]], "pyeval_getfuncdesc (c function)": [[51, "c.PyEval_GetFuncDesc"]], "pyeval_getfuncname (c function)": [[51, "c.PyEval_GetFuncName"]], "pyeval_getglobals (c function)": [[51, "c.PyEval_GetGlobals"]], "pyeval_getlocals (c function)": [[51, "c.PyEval_GetLocals"]], "pysequence_check (c function)": [[52, "c.PySequence_Check"]], "pysequence_concat (c function)": [[52, "c.PySequence_Concat"]], "pysequence_contains (c function)": [[52, "c.PySequence_Contains"]], "pysequence_count (c function)": [[52, "c.PySequence_Count"]], "pysequence_delitem (c function)": [[52, "c.PySequence_DelItem"]], "pysequence_delslice (c function)": [[52, "c.PySequence_DelSlice"]], "pysequence_fast (c function)": [[52, "c.PySequence_Fast"]], "pysequence_fast_get_item (c function)": [[52, "c.PySequence_Fast_GET_ITEM"]], "pysequence_fast_get_size (c function)": [[52, "c.PySequence_Fast_GET_SIZE"]], "pysequence_fast_items (c function)": [[52, "c.PySequence_Fast_ITEMS"]], "pysequence_getitem (c function)": [[52, "c.PySequence_GetItem"]], "pysequence_getslice (c function)": [[52, "c.PySequence_GetSlice"]], "pysequence_item (c function)": [[52, "c.PySequence_ITEM"]], "pysequence_inplaceconcat (c function)": [[52, "c.PySequence_InPlaceConcat"]], "pysequence_inplacerepeat (c function)": [[52, "c.PySequence_InPlaceRepeat"]], "pysequence_index (c function)": [[52, "c.PySequence_Index"]], "pysequence_length (c function)": [[52, "c.PySequence_Length"]], "pysequence_list (c function)": [[52, "c.PySequence_List"]], "pysequence_repeat (c function)": [[52, "c.PySequence_Repeat"]], "pysequence_setitem (c function)": [[52, "c.PySequence_SetItem"]], "pysequence_setslice (c function)": [[52, "c.PySequence_SetSlice"]], "pysequence_size (c function)": [[52, "c.PySequence_Size"]], "pysequence_tuple (c function)": [[52, "c.PySequence_Tuple"]], "pyanyset_check (c function)": [[53, "c.PyAnySet_Check"]], "pyanyset_checkexact (c function)": [[53, "c.PyAnySet_CheckExact"]], "pyfrozenset_check (c function)": [[53, "c.PyFrozenSet_Check"]], "pyfrozenset_checkexact (c function)": [[53, "c.PyFrozenSet_CheckExact"]], "pyfrozenset_new (c function)": [[53, "c.PyFrozenSet_New"]], "pyfrozenset_type (c var)": [[53, "c.PyFrozenSet_Type"]], "pysetobject (c type)": [[53, "c.PySetObject"]], "pyset_add (c function)": [[53, "c.PySet_Add"]], "pyset_check (c function)": [[53, "c.PySet_Check"]], "pyset_checkexact (c function)": [[53, "c.PySet_CheckExact"]], "pyset_clear (c function)": [[53, "c.PySet_Clear"]], "pyset_contains (c function)": [[53, "c.PySet_Contains"]], "pyset_discard (c function)": [[53, "c.PySet_Discard"]], "pyset_get_size (c function)": [[53, "c.PySet_GET_SIZE"]], "pyset_new (c function)": [[53, "c.PySet_New"]], "pyset_pop (c function)": [[53, "c.PySet_Pop"]], "pyset_size (c function)": [[53, "c.PySet_Size"]], "pyset_type (c var)": [[53, "c.PySet_Type"]], "frozenset": [[53, "index-0"], [403, "index-29"]], "set": [[53, "index-0"], [324, "index-51"], [403, "index-28"], [405, "index-16"]], "pyslice_adjustindices (c function)": [[54, "c.PySlice_AdjustIndices"]], "pyslice_check (c function)": [[54, "c.PySlice_Check"]], "pyslice_getindices (c function)": [[54, "c.PySlice_GetIndices"]], "pyslice_getindicesex (c function)": [[54, "c.PySlice_GetIndicesEx"]], "pyslice_new (c function)": [[54, "c.PySlice_New"]], "pyslice_type (c var)": [[54, "c.PySlice_Type"]], "pyslice_unpack (c function)": [[54, "c.PySlice_Unpack"]], "py_ellipsis (c var)": [[54, "c.Py_Ellipsis"]], "pep 387": [[55, "index-0"], [88, "index-4"], [202, "index-10"], [202, "index-11"]], "pyunstable": [[55, "index-1"]], "py_limited_api (c macro)": [[55, "c.Py_LIMITED_API"]], "meth_class (c macro)": [[56, "c.METH_CLASS"]], "meth_coexist (c macro)": [[56, "c.METH_COEXIST"]], "meth_fastcall (c macro)": [[56, "c.METH_FASTCALL"]], "meth_keywords (c macro)": [[56, "c.METH_KEYWORDS"]], "meth_method (c macro)": [[56, "c.METH_METHOD"]], "meth_noargs (c macro)": [[56, "c.METH_NOARGS"]], "meth_o (c macro)": [[56, "c.METH_O"]], "meth_static (c macro)": [[56, "c.METH_STATIC"]], "meth_varargs (c macro)": [[56, "c.METH_VARARGS"]], "pycfunction (c type)": [[56, "c.PyCFunction"]], "pycfunctionwithkeywords (c type)": [[56, "c.PyCFunctionWithKeywords"]], "pycmethod (c type)": [[56, "c.PyCMethod"]], "pygetsetdef (c type)": [[56, "c.PyGetSetDef"]], "pygetsetdef.closure (c member)": [[56, "c.PyGetSetDef.closure"]], "pygetsetdef.doc (c member)": [[56, "c.PyGetSetDef.doc"]], "pygetsetdef.get (c member)": [[56, "c.PyGetSetDef.get"]], "pygetsetdef.name (c member)": [[56, "c.PyGetSetDef.name"]], "pygetsetdef.set (c member)": [[56, "c.PyGetSetDef.set"]], "pymemberdef (c type)": [[56, "c.PyMemberDef"]], "pymemberdef.doc (c member)": [[56, "c.PyMemberDef.doc"]], "pymemberdef.flags (c member)": [[56, "c.PyMemberDef.flags"]], "pymemberdef.name (c member)": [[56, "c.PyMemberDef.name"]], "pymemberdef.offset (c member)": [[56, "c.PyMemberDef.offset"]], "pymemberdef.type (c member)": [[56, "c.PyMemberDef.type"]], "pymember_getone (c function)": [[56, "c.PyMember_GetOne"]], "pymember_setone (c function)": [[56, "c.PyMember_SetOne"]], "pymethoddef (c type)": [[56, "c.PyMethodDef"]], "pymethoddef.ml_doc (c member)": [[56, "c.PyMethodDef.ml_doc"]], "pymethoddef.ml_flags (c member)": [[56, "c.PyMethodDef.ml_flags"]], "pymethoddef.ml_meth (c member)": [[56, "c.PyMethodDef.ml_meth"]], "pymethoddef.ml_name (c member)": [[56, "c.PyMethodDef.ml_name"]], "pyobject (c type)": [[56, "c.PyObject"]], "pyobject_head (c macro)": [[56, "c.PyObject_HEAD"]], "pyobject_head_init (c macro)": [[56, "c.PyObject_HEAD_INIT"]], "pyobject_var_head (c macro)": [[56, "c.PyObject_VAR_HEAD"]], "pyvarobject (c type)": [[56, "c.PyVarObject"]], "pyvarobject_head_init (c macro)": [[56, "c.PyVarObject_HEAD_INIT"]], "py_audit_read (c macro)": [[56, "c.Py_AUDIT_READ"]], "py_is_type (c function)": [[56, "c.Py_IS_TYPE"]], "py_is (c function)": [[56, "c.Py_Is"]], "py_isfalse (c function)": [[56, "c.Py_IsFalse"]], "py_isnone (c function)": [[56, "c.Py_IsNone"]], "py_istrue (c function)": [[56, "c.Py_IsTrue"]], "py_readonly (c macro)": [[56, "c.Py_READONLY"]], "py_relative_offset (c macro)": [[56, "c.Py_RELATIVE_OFFSET"]], "py_set_size (c function)": [[56, "c.Py_SET_SIZE"]], "py_set_type (c function)": [[56, "c.Py_SET_TYPE"]], "py_size (c function)": [[56, "c.Py_SIZE"]], "py_type (c function)": [[56, "c.Py_TYPE"]], "py_t_bool (c macro)": [[56, "c.Py_T_BOOL"]], "py_t_byte (c macro)": [[56, "c.Py_T_BYTE"]], "py_t_char (c macro)": [[56, "c.Py_T_CHAR"]], "py_t_double (c macro)": [[56, "c.Py_T_DOUBLE"]], "py_t_float (c macro)": [[56, "c.Py_T_FLOAT"]], "py_t_int (c macro)": [[56, "c.Py_T_INT"]], "py_t_long (c macro)": [[56, "c.Py_T_LONG"]], "py_t_longlong (c macro)": [[56, "c.Py_T_LONGLONG"]], "py_t_object_ex (c macro)": [[56, "c.Py_T_OBJECT_EX"]], "py_t_pyssizet (c macro)": [[56, "c.Py_T_PYSSIZET"]], "py_t_short (c macro)": [[56, "c.Py_T_SHORT"]], "py_t_string (c macro)": [[56, "c.Py_T_STRING"]], "py_t_string_inplace (c macro)": [[56, "c.Py_T_STRING_INPLACE"]], "py_t_ubyte (c macro)": [[56, "c.Py_T_UBYTE"]], "py_t_uint (c macro)": [[56, "c.Py_T_UINT"]], "py_t_ulong (c macro)": [[56, "c.Py_T_ULONG"]], "py_t_ulonglong (c macro)": [[56, "c.Py_T_ULONGLONG"]], "py_t_ushort (c macro)": [[56, "c.Py_T_USHORT"]], "readonly": [[56, "index-3"]], "read_restricted": [[56, "index-2"]], "restricted": [[56, "index-2"], [404, "index-13"]], "t_bool": [[56, "index-4"]], "t_byte": [[56, "index-4"]], "t_char": [[56, "index-4"]], "t_double": [[56, "index-4"]], "t_float": [[56, "index-4"]], "t_int": [[56, "index-4"]], "t_long": [[56, "index-4"]], "t_longlong": [[56, "index-4"]], "t_none (c macro)": [[56, "c.T_NONE"]], "t_object (c macro)": [[56, "c.T_OBJECT"]], "t_object_ex": [[56, "index-4"]], "t_pyssizet": [[56, "index-4"]], "t_short": [[56, "index-4"]], "t_string": [[56, "index-4"]], "t_string_inplace": [[56, "index-4"]], "t_ubyte": [[56, "index-4"]], "t_uint": [[56, "index-4"]], "t_ulong": [[56, "index-4"]], "t_ulongulong": [[56, "index-4"]], "t_ushort": [[56, "index-4"]], "write_restricted": [[56, "index-2"]], "_pycfunctionfast (c type)": [[56, "c._PyCFunctionFast"]], "_pycfunctionfastwithkeywords (c type)": [[56, "c._PyCFunctionFastWithKeywords"]], "classmethod": [[56, "index-0"]], "staticmethod": [[56, "index-1"]], "structmember.h": [[56, "index-4"]], "pep 578": [[57, "index-0"], [135, "index-1"], [331, "index-1"], [457, "index-4"]], "pyos_afterfork (c function)": [[57, "c.PyOS_AfterFork"]], "pyos_afterfork_child (c function)": [[57, "c.PyOS_AfterFork_Child"]], "pyos_afterfork_parent (c function)": [[57, "c.PyOS_AfterFork_Parent"]], "pyos_beforefork (c function)": [[57, "c.PyOS_BeforeFork"]], "pyos_checkstack (c function)": [[57, "c.PyOS_CheckStack"]], "pyos_fspath (c function)": [[57, "c.PyOS_FSPath"]], "pyos_getsig (c function)": [[57, "c.PyOS_getsig"]], "pyos_setsig (c function)": [[57, "c.PyOS_setsig"]], "pysys_addaudithook (c function)": [[57, "c.PySys_AddAuditHook"]], "pysys_audit (c function)": [[57, "c.PySys_Audit"]], "pysys_formatstderr (c function)": [[57, "c.PySys_FormatStderr"]], "pysys_formatstdout (c function)": [[57, "c.PySys_FormatStdout"]], "pysys_getobject (c function)": [[57, "c.PySys_GetObject"]], "pysys_getxoptions (c function)": [[57, "c.PySys_GetXOptions"]], "pysys_resetwarnoptions (c function)": [[57, "c.PySys_ResetWarnOptions"]], "pysys_setobject (c function)": [[57, "c.PySys_SetObject"]], "pysys_writestderr (c function)": [[57, "c.PySys_WriteStderr"]], "pysys_writestdout (c function)": [[57, "c.PySys_WriteStdout"]], "py_atexit (c function)": [[57, "c.Py_AtExit"]], "py_decodelocale (c function)": [[57, "c.Py_DecodeLocale"]], "py_encodelocale (c function)": [[57, "c.Py_EncodeLocale"]], "py_exit (c function)": [[57, "c.Py_Exit"]], "py_fatalerror (c function)": [[57, "c.Py_FatalError"]], "py_fdisinteractive (c function)": [[57, "c.Py_FdIsInteractive"]], "abort()": [[57, "index-1"]], "cleanup functions": [[57, "index-3"]], "exit()": [[57, "index-2"]], "pystructsequence_desc (c type)": [[58, "c.PyStructSequence_Desc"]], "pystructsequence_desc.doc (c member)": [[58, "c.PyStructSequence_Desc.doc"]], "pystructsequence_desc.fields (c member)": [[58, "c.PyStructSequence_Desc.fields"]], "pystructsequence_desc.n_in_sequence (c member)": [[58, "c.PyStructSequence_Desc.n_in_sequence"]], "pystructsequence_desc.name (c member)": [[58, "c.PyStructSequence_Desc.name"]], "pystructsequence_field (c type)": [[58, "c.PyStructSequence_Field"]], "pystructsequence_field.doc (c member)": [[58, "c.PyStructSequence_Field.doc"]], "pystructsequence_field.name (c member)": [[58, "c.PyStructSequence_Field.name"]], "pystructsequence_get_item (c function)": [[58, "c.PyStructSequence_GET_ITEM"]], "pystructsequence_getitem (c function)": [[58, "c.PyStructSequence_GetItem"]], "pystructsequence_inittype (c function)": [[58, "c.PyStructSequence_InitType"]], "pystructsequence_inittype2 (c function)": [[58, "c.PyStructSequence_InitType2"]], "pystructsequence_new (c function)": [[58, "c.PyStructSequence_New"]], "pystructsequence_newtype (c function)": [[58, "c.PyStructSequence_NewType"]], "pystructsequence_set_item (c function)": [[58, "c.PyStructSequence_SET_ITEM"]], "pystructsequence_setitem (c function)": [[58, "c.PyStructSequence_SetItem"]], "pystructsequence_unnamedfield (c var)": [[58, "c.PyStructSequence_UnnamedField"]], "pytupleobject (c type)": [[58, "c.PyTupleObject"]], "pytuple_check (c function)": [[58, "c.PyTuple_Check"]], "pytuple_checkexact (c function)": [[58, "c.PyTuple_CheckExact"]], "pytuple_get_item (c function)": [[58, "c.PyTuple_GET_ITEM"]], "pytuple_get_size (c function)": [[58, "c.PyTuple_GET_SIZE"]], "pytuple_getitem (c function)": [[58, "c.PyTuple_GetItem"]], "pytuple_getslice (c function)": [[58, "c.PyTuple_GetSlice"]], "pytuple_new (c function)": [[58, "c.PyTuple_New"]], "pytuple_pack (c function)": [[58, "c.PyTuple_Pack"]], "pytuple_set_item (c function)": [[58, "c.PyTuple_SET_ITEM"]], "pytuple_setitem (c function)": [[58, "c.PyTuple_SetItem"]], "pytuple_size (c function)": [[58, "c.PyTuple_Size"]], "pytuple_type (c var)": [[58, "c.PyTuple_Type"]], "_pytuple_resize (c function)": [[58, "c._PyTuple_Resize"]], "pytypeobject (c type)": [[59, "c.PyTypeObject"]], "pytype_addwatcher (c function)": [[59, "c.PyType_AddWatcher"]], "pytype_check (c function)": [[59, "c.PyType_Check"]], "pytype_checkexact (c function)": [[59, "c.PyType_CheckExact"]], "pytype_clearcache (c function)": [[59, "c.PyType_ClearCache"]], "pytype_clearwatcher (c function)": [[59, "c.PyType_ClearWatcher"]], "pytype_frommetaclass (c function)": [[59, "c.PyType_FromMetaclass"]], "pytype_frommoduleandspec (c function)": [[59, "c.PyType_FromModuleAndSpec"]], "pytype_fromspec (c function)": [[59, "c.PyType_FromSpec"]], "pytype_fromspecwithbases (c function)": [[59, "c.PyType_FromSpecWithBases"]], "pytype_genericalloc (c function)": [[59, "c.PyType_GenericAlloc"]], "pytype_genericnew (c function)": [[59, "c.PyType_GenericNew"]], "pytype_getdict (c function)": [[59, "c.PyType_GetDict"]], "pytype_getflags (c function)": [[59, "c.PyType_GetFlags"]], "pytype_getmodule (c function)": [[59, "c.PyType_GetModule"]], "pytype_getmodulebydef (c function)": [[59, "c.PyType_GetModuleByDef"]], "pytype_getmodulestate (c function)": [[59, "c.PyType_GetModuleState"]], "pytype_getname (c function)": [[59, "c.PyType_GetName"]], "pytype_getqualname (c function)": [[59, "c.PyType_GetQualName"]], "pytype_getslot (c function)": [[59, "c.PyType_GetSlot"]], "pytype_hasfeature (c function)": [[59, "c.PyType_HasFeature"]], "pytype_is_gc (c function)": [[59, "c.PyType_IS_GC"]], "pytype_issubtype (c function)": [[59, "c.PyType_IsSubtype"]], "pytype_modified (c function)": [[59, "c.PyType_Modified"]], "pytype_ready (c function)": [[59, "c.PyType_Ready"]], "pytype_slot (c type)": [[59, "c.PyType_Slot"]], "pytype_slot.pfunc (c member)": [[59, "c.PyType_Slot.pfunc"]], "pytype_slot.slot (c member)": [[59, "c.PyType_Slot.slot"]], "pytype_spec (c type)": [[59, "c.PyType_Spec"]], "pytype_spec.basicsize (c member)": [[59, "c.PyType_Spec.basicsize"]], "pytype_spec.flags (c member)": [[59, "c.PyType_Spec.flags"]], "pytype_spec.itemsize (c member)": [[59, "c.PyType_Spec.itemsize"]], "pytype_spec.name (c member)": [[59, "c.PyType_Spec.name"]], "pytype_spec.slots (c member)": [[59, "c.PyType_Spec.slots"]], "pytype_type (c var)": [[59, "c.PyType_Type"]], "pytype_watch (c function)": [[59, "c.PyType_Watch"]], "pytype_watchcallback (c type)": [[59, "c.PyType_WatchCallback"]], "pyunstable_type_assignversiontag (c function)": [[59, "c.PyUnstable_Type_AssignVersionTag"]], "py_genericalias (c function)": [[60, "c.Py_GenericAlias"]], "py_genericaliastype (c var)": [[60, "c.Py_GenericAliasType"]], "pep 442": [[61, "index-4"], [73, "index-2"], [216, "index-0"], [453, "index-15"], [453, "index-16"], [453, "index-45"], [453, "index-46"], [458, "index-20"]], "pep 634": [[61, "index-2"], [61, "index-3"], [402, "index-19"], [402, "index-25"], [403, "index-106"], [447, "index-0"], [447, "index-15"]], "pyasyncmethods (c type)": [[61, "c.PyAsyncMethods"]], "pyasyncmethods.am_aiter (c member)": [[61, "c.PyAsyncMethods.am_aiter"]], "pyasyncmethods.am_anext (c member)": [[61, "c.PyAsyncMethods.am_anext"]], "pyasyncmethods.am_await (c member)": [[61, "c.PyAsyncMethods.am_await"]], "pyasyncmethods.am_send (c member)": [[61, "c.PyAsyncMethods.am_send"]], "pybufferprocs (c type)": [[61, "c.PyBufferProcs"]], "pybufferprocs.bf_getbuffer (c member)": [[61, "c.PyBufferProcs.bf_getbuffer"]], "pybufferprocs.bf_releasebuffer (c member)": [[61, "c.PyBufferProcs.bf_releasebuffer"]], "pymappingmethods (c type)": [[61, "c.PyMappingMethods"]], "pymappingmethods.mp_ass_subscript (c member)": [[61, "c.PyMappingMethods.mp_ass_subscript"]], "pymappingmethods.mp_length (c member)": [[61, "c.PyMappingMethods.mp_length"]], "pymappingmethods.mp_subscript (c member)": [[61, "c.PyMappingMethods.mp_subscript"]], "pynumbermethods (c type)": [[61, "c.PyNumberMethods"]], "pynumbermethods.nb_absolute (c member)": [[61, "c.PyNumberMethods.nb_absolute"]], "pynumbermethods.nb_add (c member)": [[61, "c.PyNumberMethods.nb_add"]], "pynumbermethods.nb_and (c member)": [[61, "c.PyNumberMethods.nb_and"]], "pynumbermethods.nb_bool (c member)": [[61, "c.PyNumberMethods.nb_bool"]], "pynumbermethods.nb_divmod (c member)": [[61, "c.PyNumberMethods.nb_divmod"]], "pynumbermethods.nb_float (c member)": [[61, "c.PyNumberMethods.nb_float"]], "pynumbermethods.nb_floor_divide (c member)": [[61, "c.PyNumberMethods.nb_floor_divide"]], "pynumbermethods.nb_index (c member)": [[61, "c.PyNumberMethods.nb_index"]], "pynumbermethods.nb_inplace_add (c member)": [[61, "c.PyNumberMethods.nb_inplace_add"]], "pynumbermethods.nb_inplace_and (c member)": [[61, "c.PyNumberMethods.nb_inplace_and"]], "pynumbermethods.nb_inplace_floor_divide (c member)": [[61, "c.PyNumberMethods.nb_inplace_floor_divide"]], "pynumbermethods.nb_inplace_lshift (c member)": [[61, "c.PyNumberMethods.nb_inplace_lshift"]], "pynumbermethods.nb_inplace_matrix_multiply (c member)": [[61, "c.PyNumberMethods.nb_inplace_matrix_multiply"]], "pynumbermethods.nb_inplace_multiply (c member)": [[61, "c.PyNumberMethods.nb_inplace_multiply"]], "pynumbermethods.nb_inplace_or (c member)": [[61, "c.PyNumberMethods.nb_inplace_or"]], "pynumbermethods.nb_inplace_power (c member)": [[61, "c.PyNumberMethods.nb_inplace_power"]], "pynumbermethods.nb_inplace_remainder (c member)": [[61, "c.PyNumberMethods.nb_inplace_remainder"]], "pynumbermethods.nb_inplace_rshift (c member)": [[61, "c.PyNumberMethods.nb_inplace_rshift"]], "pynumbermethods.nb_inplace_subtract (c member)": [[61, "c.PyNumberMethods.nb_inplace_subtract"]], "pynumbermethods.nb_inplace_true_divide (c member)": [[61, "c.PyNumberMethods.nb_inplace_true_divide"]], "pynumbermethods.nb_inplace_xor (c member)": [[61, "c.PyNumberMethods.nb_inplace_xor"]], "pynumbermethods.nb_int (c member)": [[61, "c.PyNumberMethods.nb_int"]], "pynumbermethods.nb_invert (c member)": [[61, "c.PyNumberMethods.nb_invert"]], "pynumbermethods.nb_lshift (c member)": [[61, "c.PyNumberMethods.nb_lshift"]], "pynumbermethods.nb_matrix_multiply (c member)": [[61, "c.PyNumberMethods.nb_matrix_multiply"]], "pynumbermethods.nb_multiply (c member)": [[61, "c.PyNumberMethods.nb_multiply"]], "pynumbermethods.nb_negative (c member)": [[61, "c.PyNumberMethods.nb_negative"]], "pynumbermethods.nb_or (c member)": [[61, "c.PyNumberMethods.nb_or"]], "pynumbermethods.nb_positive (c member)": [[61, "c.PyNumberMethods.nb_positive"]], "pynumbermethods.nb_power (c member)": [[61, "c.PyNumberMethods.nb_power"]], "pynumbermethods.nb_remainder (c member)": [[61, "c.PyNumberMethods.nb_remainder"]], "pynumbermethods.nb_reserved (c member)": [[61, "c.PyNumberMethods.nb_reserved"]], "pynumbermethods.nb_rshift (c member)": [[61, "c.PyNumberMethods.nb_rshift"]], "pynumbermethods.nb_subtract (c member)": [[61, "c.PyNumberMethods.nb_subtract"]], "pynumbermethods.nb_true_divide (c member)": [[61, "c.PyNumberMethods.nb_true_divide"]], "pynumbermethods.nb_xor (c member)": [[61, "c.PyNumberMethods.nb_xor"]], "pyobject.ob_refcnt (c member)": [[61, "c.PyObject.ob_refcnt"]], "pyobject.ob_type (c member)": [[61, "c.PyObject.ob_type"]], "pysequencemethods (c type)": [[61, "c.PySequenceMethods"]], "pysequencemethods.sq_ass_item (c member)": [[61, "c.PySequenceMethods.sq_ass_item"]], "pysequencemethods.sq_concat (c member)": [[61, "c.PySequenceMethods.sq_concat"]], "pysequencemethods.sq_contains (c member)": [[61, "c.PySequenceMethods.sq_contains"]], "pysequencemethods.sq_inplace_concat (c member)": [[61, "c.PySequenceMethods.sq_inplace_concat"]], "pysequencemethods.sq_inplace_repeat (c member)": [[61, "c.PySequenceMethods.sq_inplace_repeat"]], "pysequencemethods.sq_item (c member)": [[61, "c.PySequenceMethods.sq_item"]], "pysequencemethods.sq_length (c member)": [[61, "c.PySequenceMethods.sq_length"]], "pysequencemethods.sq_repeat (c member)": [[61, "c.PySequenceMethods.sq_repeat"]], "pytypeobject.tp_alloc (c member)": [[61, "c.PyTypeObject.tp_alloc"]], "pytypeobject.tp_as_async (c member)": [[61, "c.PyTypeObject.tp_as_async"]], "pytypeobject.tp_as_buffer (c member)": [[61, "c.PyTypeObject.tp_as_buffer"]], "pytypeobject.tp_as_mapping (c member)": [[61, "c.PyTypeObject.tp_as_mapping"]], "pytypeobject.tp_as_number (c member)": [[61, "c.PyTypeObject.tp_as_number"]], "pytypeobject.tp_as_sequence (c member)": [[61, "c.PyTypeObject.tp_as_sequence"]], "pytypeobject.tp_base (c member)": [[61, "c.PyTypeObject.tp_base"]], "pytypeobject.tp_bases (c member)": [[61, "c.PyTypeObject.tp_bases"]], "pytypeobject.tp_basicsize (c member)": [[61, "c.PyTypeObject.tp_basicsize"]], "pytypeobject.tp_cache (c member)": [[61, "c.PyTypeObject.tp_cache"]], "pytypeobject.tp_call (c member)": [[61, "c.PyTypeObject.tp_call"]], "pytypeobject.tp_clear (c member)": [[61, "c.PyTypeObject.tp_clear"]], "pytypeobject.tp_dealloc (c member)": [[61, "c.PyTypeObject.tp_dealloc"]], "pytypeobject.tp_del (c member)": [[61, "c.PyTypeObject.tp_del"]], "pytypeobject.tp_descr_get (c member)": [[61, "c.PyTypeObject.tp_descr_get"]], "pytypeobject.tp_descr_set (c member)": [[61, "c.PyTypeObject.tp_descr_set"]], "pytypeobject.tp_dict (c member)": [[61, "c.PyTypeObject.tp_dict"]], "pytypeobject.tp_dictoffset (c member)": [[61, "c.PyTypeObject.tp_dictoffset"]], "pytypeobject.tp_doc (c member)": [[61, "c.PyTypeObject.tp_doc"]], "pytypeobject.tp_finalize (c member)": [[61, "c.PyTypeObject.tp_finalize"]], "pytypeobject.tp_flags (c member)": [[61, "c.PyTypeObject.tp_flags"]], "pytypeobject.tp_free (c member)": [[61, "c.PyTypeObject.tp_free"]], "pytypeobject.tp_getattr (c member)": [[61, "c.PyTypeObject.tp_getattr"]], "pytypeobject.tp_getattro (c member)": [[61, "c.PyTypeObject.tp_getattro"]], "pytypeobject.tp_getset (c member)": [[61, "c.PyTypeObject.tp_getset"]], "pytypeobject.tp_hash (c member)": [[61, "c.PyTypeObject.tp_hash"]], "pytypeobject.tp_init (c member)": [[61, "c.PyTypeObject.tp_init"]], "pytypeobject.tp_is_gc (c member)": [[61, "c.PyTypeObject.tp_is_gc"]], "pytypeobject.tp_itemsize (c member)": [[61, "c.PyTypeObject.tp_itemsize"]], "pytypeobject.tp_iter (c member)": [[61, "c.PyTypeObject.tp_iter"]], "pytypeobject.tp_iternext (c member)": [[61, "c.PyTypeObject.tp_iternext"]], "pytypeobject.tp_members (c member)": [[61, "c.PyTypeObject.tp_members"]], "pytypeobject.tp_methods (c member)": [[61, "c.PyTypeObject.tp_methods"]], "pytypeobject.tp_mro (c member)": [[61, "c.PyTypeObject.tp_mro"]], "pytypeobject.tp_name (c member)": [[61, "c.PyTypeObject.tp_name"]], "pytypeobject.tp_new (c member)": [[61, "c.PyTypeObject.tp_new"]], "pytypeobject.tp_repr (c member)": [[61, "c.PyTypeObject.tp_repr"]], "pytypeobject.tp_richcompare (c member)": [[61, "c.PyTypeObject.tp_richcompare"]], "pytypeobject.tp_setattr (c member)": [[61, "c.PyTypeObject.tp_setattr"]], "pytypeobject.tp_setattro (c member)": [[61, "c.PyTypeObject.tp_setattro"]], "pytypeobject.tp_str (c member)": [[61, "c.PyTypeObject.tp_str"]], "pytypeobject.tp_subclasses (c member)": [[61, "c.PyTypeObject.tp_subclasses"]], "pytypeobject.tp_traverse (c member)": [[61, "c.PyTypeObject.tp_traverse"]], "pytypeobject.tp_vectorcall (c member)": [[61, "c.PyTypeObject.tp_vectorcall"]], "pytypeobject.tp_vectorcall_offset (c member)": [[61, "c.PyTypeObject.tp_vectorcall_offset"]], "pytypeobject.tp_version_tag (c member)": [[61, "c.PyTypeObject.tp_version_tag"]], "pytypeobject.tp_watched (c member)": [[61, "c.PyTypeObject.tp_watched"]], "pytypeobject.tp_weaklist (c member)": [[61, "c.PyTypeObject.tp_weaklist"]], "pytypeobject.tp_weaklistoffset (c member)": [[61, "c.PyTypeObject.tp_weaklistoffset"]], "pyvarobject.ob_size (c member)": [[61, "c.PyVarObject.ob_size"]], "py_eq (c macro)": [[61, "c.Py_EQ"]], "py_ge (c macro)": [[61, "c.Py_GE"]], "py_gt (c macro)": [[61, "c.Py_GT"]], "py_le (c macro)": [[61, "c.Py_LE"]], "py_lt (c macro)": [[61, "c.Py_LT"]], "py_ne (c macro)": [[61, "c.Py_NE"]], "py_return_richcompare (c macro)": [[61, "c.Py_RETURN_RICHCOMPARE"]], "py_tpflags_basetype (c macro)": [[61, "c.Py_TPFLAGS_BASETYPE"]], "py_tpflags_base_exc_subclass (c macro)": [[61, "c.Py_TPFLAGS_BASE_EXC_SUBCLASS"]], "py_tpflags_bytes_subclass (c macro)": [[61, "c.Py_TPFLAGS_BYTES_SUBCLASS"]], "py_tpflags_default (c macro)": [[61, "c.Py_TPFLAGS_DEFAULT"]], "py_tpflags_dict_subclass (c macro)": [[61, "c.Py_TPFLAGS_DICT_SUBCLASS"]], "py_tpflags_disallow_instantiation (c macro)": [[61, "c.Py_TPFLAGS_DISALLOW_INSTANTIATION"]], "py_tpflags_have_finalize (c macro)": [[61, "c.Py_TPFLAGS_HAVE_FINALIZE"]], "py_tpflags_have_gc (c macro)": [[61, "c.Py_TPFLAGS_HAVE_GC"]], "py_tpflags_have_vectorcall (c macro)": [[61, "c.Py_TPFLAGS_HAVE_VECTORCALL"]], "py_tpflags_heaptype (c macro)": [[61, "c.Py_TPFLAGS_HEAPTYPE"]], "py_tpflags_immutabletype (c macro)": [[61, "c.Py_TPFLAGS_IMMUTABLETYPE"]], "py_tpflags_items_at_end (c macro)": [[61, "c.Py_TPFLAGS_ITEMS_AT_END"]], "py_tpflags_list_subclass (c macro)": [[61, "c.Py_TPFLAGS_LIST_SUBCLASS"]], "py_tpflags_long_subclass (c macro)": [[61, "c.Py_TPFLAGS_LONG_SUBCLASS"]], "py_tpflags_managed_dict (c macro)": [[61, "c.Py_TPFLAGS_MANAGED_DICT"]], "py_tpflags_managed_weakref (c macro)": [[61, "c.Py_TPFLAGS_MANAGED_WEAKREF"]], "py_tpflags_mapping (c macro)": [[61, "c.Py_TPFLAGS_MAPPING"]], "py_tpflags_method_descriptor (c macro)": [[61, "c.Py_TPFLAGS_METHOD_DESCRIPTOR"]], "py_tpflags_ready (c macro)": [[61, "c.Py_TPFLAGS_READY"]], "py_tpflags_readying (c macro)": [[61, "c.Py_TPFLAGS_READYING"]], "py_tpflags_sequence (c macro)": [[61, "c.Py_TPFLAGS_SEQUENCE"]], "py_tpflags_tuple_subclass (c macro)": [[61, "c.Py_TPFLAGS_TUPLE_SUBCLASS"]], "py_tpflags_type_subclass (c macro)": [[61, "c.Py_TPFLAGS_TYPE_SUBCLASS"]], "py_tpflags_unicode_subclass (c macro)": [[61, "c.Py_TPFLAGS_UNICODE_SUBCLASS"]], "py_tpflags_valid_version_tag (c macro)": [[61, "c.Py_TPFLAGS_VALID_VERSION_TAG"]], "allocfunc (c type)": [[61, "c.allocfunc"]], "binaryfunc (c type)": [[61, "c.binaryfunc"]], "descrgetfunc (c type)": [[61, "c.descrgetfunc"]], "descrsetfunc (c type)": [[61, "c.descrsetfunc"]], "destructor (c type)": [[61, "c.destructor"]], "freefunc (c type)": [[61, "c.freefunc"]], "getattrfunc (c type)": [[61, "c.getattrfunc"]], "getattrofunc (c type)": [[61, "c.getattrofunc"]], "getbufferproc (c type)": [[61, "c.getbufferproc"]], "getiterfunc (c type)": [[61, "c.getiterfunc"]], "hashfunc (c type)": [[61, "c.hashfunc"]], "initproc (c type)": [[61, "c.initproc"]], "iternextfunc (c type)": [[61, "c.iternextfunc"]], "lenfunc (c type)": [[61, "c.lenfunc"]], "newfunc (c type)": [[61, "c.newfunc"]], "objobjargproc (c type)": [[61, "c.objobjargproc"]], "objobjproc (c type)": [[61, "c.objobjproc"]], "releasebufferproc (c type)": [[61, "c.releasebufferproc"]], "reprfunc (c type)": [[61, "c.reprfunc"]], "richcmpfunc (c type)": [[61, "c.richcmpfunc"]], "sendfunc (c type)": [[61, "c.sendfunc"]], "setattrfunc (c type)": [[61, "c.setattrfunc"]], "setattrofunc (c type)": [[61, "c.setattrofunc"]], "ssizeargfunc (c type)": [[61, "c.ssizeargfunc"]], "ssizeobjargproc (c type)": [[61, "c.ssizeobjargproc"]], "ternaryfunc (c type)": [[61, "c.ternaryfunc"]], "unaryfunc (c type)": [[61, "c.unaryfunc"]], "pep 383": [[62, "index-2"], [62, "index-3"], [62, "index-4"], [148, "index-2"], [318, "index-1"]], "pep 393": [[62, "index-0"], [148, "index-5"], [331, "index-19"], [447, "index-38"], [452, "index-30"], [452, "index-32"], [452, "index-33"], [452, "index-34"], [452, "index-38"], [452, "index-6"], [452, "index-7"], [452, "index-8"], [458, "index-25"], [458, "index-26"]], "pep 623": [[62, "index-1"], [447, "index-11"], [449, "index-1"], [449, "index-26"], [449, "index-48"]], "pyasciiobject (c type)": [[62, "c.PyASCIIObject"]], "pycompactunicodeobject (c type)": [[62, "c.PyCompactUnicodeObject"]], "pyunicodeobject (c type)": [[62, "c.PyUnicodeObject"]], "pyunicode_1byte_data (c function)": [[62, "c.PyUnicode_1BYTE_DATA"]], "pyunicode_1byte_kind (c macro)": [[62, "c.PyUnicode_1BYTE_KIND"]], "pyunicode_2byte_data (c function)": [[62, "c.PyUnicode_2BYTE_DATA"]], "pyunicode_2byte_kind (c macro)": [[62, "c.PyUnicode_2BYTE_KIND"]], "pyunicode_4byte_data (c function)": [[62, "c.PyUnicode_4BYTE_DATA"]], "pyunicode_4byte_kind (c macro)": [[62, "c.PyUnicode_4BYTE_KIND"]], "pyunicode_asasciistring (c function)": [[62, "c.PyUnicode_AsASCIIString"]], "pyunicode_ascharmapstring (c function)": [[62, "c.PyUnicode_AsCharmapString"]], "pyunicode_asencodedstring (c function)": [[62, "c.PyUnicode_AsEncodedString"]], "pyunicode_aslatin1string (c function)": [[62, "c.PyUnicode_AsLatin1String"]], "pyunicode_asmbcsstring (c function)": [[62, "c.PyUnicode_AsMBCSString"]], "pyunicode_asrawunicodeescapestring (c function)": [[62, "c.PyUnicode_AsRawUnicodeEscapeString"]], "pyunicode_asucs4 (c function)": [[62, "c.PyUnicode_AsUCS4"]], "pyunicode_asucs4copy (c function)": [[62, "c.PyUnicode_AsUCS4Copy"]], "pyunicode_asutf16string (c function)": [[62, "c.PyUnicode_AsUTF16String"]], "pyunicode_asutf32string (c function)": [[62, "c.PyUnicode_AsUTF32String"]], "pyunicode_asutf8 (c function)": [[62, "c.PyUnicode_AsUTF8"]], "pyunicode_asutf8andsize (c function)": [[62, "c.PyUnicode_AsUTF8AndSize"]], "pyunicode_asutf8string (c function)": [[62, "c.PyUnicode_AsUTF8String"]], "pyunicode_asunicodeescapestring (c function)": [[62, "c.PyUnicode_AsUnicodeEscapeString"]], "pyunicode_aswidechar (c function)": [[62, "c.PyUnicode_AsWideChar"]], "pyunicode_aswidecharstring (c function)": [[62, "c.PyUnicode_AsWideCharString"]], "pyunicode_check (c function)": [[62, "c.PyUnicode_Check"]], "pyunicode_checkexact (c function)": [[62, "c.PyUnicode_CheckExact"]], "pyunicode_compare (c function)": [[62, "c.PyUnicode_Compare"]], "pyunicode_comparewithasciistring (c function)": [[62, "c.PyUnicode_CompareWithASCIIString"]], "pyunicode_concat (c function)": [[62, "c.PyUnicode_Concat"]], "pyunicode_contains (c function)": [[62, "c.PyUnicode_Contains"]], "pyunicode_copycharacters (c function)": [[62, "c.PyUnicode_CopyCharacters"]], "pyunicode_count (c function)": [[62, "c.PyUnicode_Count"]], "pyunicode_data (c function)": [[62, "c.PyUnicode_DATA"]], "pyunicode_decode (c function)": [[62, "c.PyUnicode_Decode"]], "pyunicode_decodeascii (c function)": [[62, "c.PyUnicode_DecodeASCII"]], "pyunicode_decodecharmap (c function)": [[62, "c.PyUnicode_DecodeCharmap"]], "pyunicode_decodefsdefault (c function)": [[62, "c.PyUnicode_DecodeFSDefault"]], "pyunicode_decodefsdefaultandsize (c function)": [[62, "c.PyUnicode_DecodeFSDefaultAndSize"]], "pyunicode_decodelatin1 (c function)": [[62, "c.PyUnicode_DecodeLatin1"]], "pyunicode_decodelocale (c function)": [[62, "c.PyUnicode_DecodeLocale"]], "pyunicode_decodelocaleandsize (c function)": [[62, "c.PyUnicode_DecodeLocaleAndSize"]], "pyunicode_decodembcs (c function)": [[62, "c.PyUnicode_DecodeMBCS"]], "pyunicode_decodembcsstateful (c function)": [[62, "c.PyUnicode_DecodeMBCSStateful"]], "pyunicode_decoderawunicodeescape (c function)": [[62, "c.PyUnicode_DecodeRawUnicodeEscape"]], "pyunicode_decodeutf16 (c function)": [[62, "c.PyUnicode_DecodeUTF16"]], "pyunicode_decodeutf16stateful (c function)": [[62, "c.PyUnicode_DecodeUTF16Stateful"]], "pyunicode_decodeutf32 (c function)": [[62, "c.PyUnicode_DecodeUTF32"]], "pyunicode_decodeutf32stateful (c function)": [[62, "c.PyUnicode_DecodeUTF32Stateful"]], "pyunicode_decodeutf7 (c function)": [[62, "c.PyUnicode_DecodeUTF7"]], "pyunicode_decodeutf7stateful (c function)": [[62, "c.PyUnicode_DecodeUTF7Stateful"]], "pyunicode_decodeutf8 (c function)": [[62, "c.PyUnicode_DecodeUTF8"]], "pyunicode_decodeutf8stateful (c function)": [[62, "c.PyUnicode_DecodeUTF8Stateful"]], "pyunicode_decodeunicodeescape (c function)": [[62, "c.PyUnicode_DecodeUnicodeEscape"]], "pyunicode_encodecodepage (c function)": [[62, "c.PyUnicode_EncodeCodePage"]], "pyunicode_encodefsdefault (c function)": [[62, "c.PyUnicode_EncodeFSDefault"]], "pyunicode_encodelocale (c function)": [[62, "c.PyUnicode_EncodeLocale"]], "pyunicode_fsconverter (c function)": [[62, "c.PyUnicode_FSConverter"]], "pyunicode_fsdecoder (c function)": [[62, "c.PyUnicode_FSDecoder"]], "pyunicode_fill (c function)": [[62, "c.PyUnicode_Fill"]], "pyunicode_find (c function)": [[62, "c.PyUnicode_Find"]], "pyunicode_findchar (c function)": [[62, "c.PyUnicode_FindChar"]], "pyunicode_format (c function)": [[62, "c.PyUnicode_Format"]], "pyunicode_fromencodedobject (c function)": [[62, "c.PyUnicode_FromEncodedObject"]], "pyunicode_fromformat (c function)": [[62, "c.PyUnicode_FromFormat"]], "pyunicode_fromformatv (c function)": [[62, "c.PyUnicode_FromFormatV"]], "pyunicode_fromkindanddata (c function)": [[62, "c.PyUnicode_FromKindAndData"]], "pyunicode_fromobject (c function)": [[62, "c.PyUnicode_FromObject"]], "pyunicode_fromstring (c function)": [[62, "c.PyUnicode_FromString"]], "pyunicode_fromstringandsize (c function)": [[62, "c.PyUnicode_FromStringAndSize"]], "pyunicode_fromwidechar (c function)": [[62, "c.PyUnicode_FromWideChar"]], "pyunicode_get_length (c function)": [[62, "c.PyUnicode_GET_LENGTH"]], "pyunicode_getlength (c function)": [[62, "c.PyUnicode_GetLength"]], "pyunicode_internfromstring (c function)": [[62, "c.PyUnicode_InternFromString"]], "pyunicode_interninplace (c function)": [[62, "c.PyUnicode_InternInPlace"]], "pyunicode_isidentifier (c function)": [[62, "c.PyUnicode_IsIdentifier"]], "pyunicode_join (c function)": [[62, "c.PyUnicode_Join"]], "pyunicode_kind (c function)": [[62, "c.PyUnicode_KIND"]], "pyunicode_max_char_value (c function)": [[62, "c.PyUnicode_MAX_CHAR_VALUE"]], "pyunicode_new (c function)": [[62, "c.PyUnicode_New"]], "pyunicode_read (c function)": [[62, "c.PyUnicode_READ"]], "pyunicode_ready (c function)": [[62, "c.PyUnicode_READY"]], "pyunicode_read_char (c function)": [[62, "c.PyUnicode_READ_CHAR"]], "pyunicode_readchar (c function)": [[62, "c.PyUnicode_ReadChar"]], "pyunicode_replace (c function)": [[62, "c.PyUnicode_Replace"]], "pyunicode_richcompare (c function)": [[62, "c.PyUnicode_RichCompare"]], "pyunicode_split (c function)": [[62, "c.PyUnicode_Split"]], "pyunicode_splitlines (c function)": [[62, "c.PyUnicode_Splitlines"]], "pyunicode_substring (c function)": [[62, "c.PyUnicode_Substring"]], "pyunicode_tailmatch (c function)": [[62, "c.PyUnicode_Tailmatch"]], "pyunicode_translate (c function)": [[62, "c.PyUnicode_Translate"]], "pyunicode_type (c var)": [[62, "c.PyUnicode_Type"]], "pyunicode_write (c function)": [[62, "c.PyUnicode_WRITE"]], "pyunicode_writechar (c function)": [[62, "c.PyUnicode_WriteChar"]], "py_ucs1 (c type)": [[62, "c.Py_UCS1"]], "py_ucs2 (c type)": [[62, "c.Py_UCS2"]], "py_ucs4 (c type)": [[62, "c.Py_UCS4"]], "py_unicode (c type)": [[62, "c.Py_UNICODE"]], "py_unicode_isalnum (c function)": [[62, "c.Py_UNICODE_ISALNUM"]], "py_unicode_isalpha (c function)": [[62, "c.Py_UNICODE_ISALPHA"]], "py_unicode_isdecimal (c function)": [[62, "c.Py_UNICODE_ISDECIMAL"]], "py_unicode_isdigit (c function)": [[62, "c.Py_UNICODE_ISDIGIT"]], "py_unicode_islinebreak (c function)": [[62, "c.Py_UNICODE_ISLINEBREAK"]], "py_unicode_islower (c function)": [[62, "c.Py_UNICODE_ISLOWER"]], "py_unicode_isnumeric (c function)": [[62, "c.Py_UNICODE_ISNUMERIC"]], "py_unicode_isprintable (c function)": [[62, "c.Py_UNICODE_ISPRINTABLE"]], "py_unicode_isspace (c function)": [[62, "c.Py_UNICODE_ISSPACE"]], "py_unicode_istitle (c function)": [[62, "c.Py_UNICODE_ISTITLE"]], "py_unicode_isupper (c function)": [[62, "c.Py_UNICODE_ISUPPER"]], "py_unicode_is_high_surrogate (c function)": [[62, "c.Py_UNICODE_IS_HIGH_SURROGATE"]], "py_unicode_is_low_surrogate (c function)": [[62, "c.Py_UNICODE_IS_LOW_SURROGATE"]], "py_unicode_is_surrogate (c function)": [[62, "c.Py_UNICODE_IS_SURROGATE"]], "py_unicode_join_surrogates (c function)": [[62, "c.Py_UNICODE_JOIN_SURROGATES"]], "py_unicode_todecimal (c function)": [[62, "c.Py_UNICODE_TODECIMAL"]], "py_unicode_todigit (c function)": [[62, "c.Py_UNICODE_TODIGIT"]], "py_unicode_tolower (c function)": [[62, "c.Py_UNICODE_TOLOWER"]], "py_unicode_tonumeric (c function)": [[62, "c.Py_UNICODE_TONUMERIC"]], "py_unicode_totitle (c function)": [[62, "c.Py_UNICODE_TOTITLE"]], "py_unicode_toupper (c function)": [[62, "c.Py_UNICODE_TOUPPER"]], "co_future_division (c var)": [[64, "c.CO_FUTURE_DIVISION"]], "pep 238": [[64, "index-3"], [85, "index-17"], [108, "index-2"], [439, "index-11"], [439, "index-12"], [439, "index-13"], [445, "index-2"]], "pycompilerflags (c struct)": [[64, "c.PyCompilerFlags"]], "pycompilerflags.cf_feature_version (c member)": [[64, "c.PyCompilerFlags.cf_feature_version"]], "pycompilerflags.cf_flags (c member)": [[64, "c.PyCompilerFlags.cf_flags"]], "pyeval_evalcode (c function)": [[64, "c.PyEval_EvalCode"]], "pyeval_evalcodeex (c function)": [[64, "c.PyEval_EvalCodeEx"]], "pyeval_evalframe (c function)": [[64, "c.PyEval_EvalFrame"]], "pyeval_evalframeex (c function)": [[64, "c.PyEval_EvalFrameEx"]], "pyeval_mergecompilerflags (c function)": [[64, "c.PyEval_MergeCompilerFlags"]], "pyos_inputhook (c var)": [[64, "c.PyOS_InputHook"]], "pyos_readlinefunctionpointer (c var)": [[64, "c.PyOS_ReadlineFunctionPointer"]], "pyrun_anyfile (c function)": [[64, "c.PyRun_AnyFile"]], "pyrun_anyfileex (c function)": [[64, "c.PyRun_AnyFileEx"]], "pyrun_anyfileexflags (c function)": [[64, "c.PyRun_AnyFileExFlags"]], "pyrun_anyfileflags (c function)": [[64, "c.PyRun_AnyFileFlags"]], "pyrun_file (c function)": [[64, "c.PyRun_File"]], "pyrun_fileex (c function)": [[64, "c.PyRun_FileEx"]], "pyrun_fileexflags (c function)": [[64, "c.PyRun_FileExFlags"]], "pyrun_fileflags (c function)": [[64, "c.PyRun_FileFlags"]], "pyrun_interactiveloop (c function)": [[64, "c.PyRun_InteractiveLoop"]], "pyrun_interactiveloopflags (c function)": [[64, "c.PyRun_InteractiveLoopFlags"]], "pyrun_interactiveone (c function)": [[64, "c.PyRun_InteractiveOne"]], "pyrun_interactiveoneflags (c function)": [[64, "c.PyRun_InteractiveOneFlags"]], "pyrun_simplefile (c function)": [[64, "c.PyRun_SimpleFile"]], "pyrun_simplefileex (c function)": [[64, "c.PyRun_SimpleFileEx"]], "pyrun_simplefileexflags (c function)": [[64, "c.PyRun_SimpleFileExFlags"]], "pyrun_simplestring (c function)": [[64, "c.PyRun_SimpleString"]], "pyrun_simplestringflags (c function)": [[64, "c.PyRun_SimpleStringFlags"]], "pyrun_string (c function)": [[64, "c.PyRun_String"]], "pyrun_stringflags (c function)": [[64, "c.PyRun_StringFlags"]], "py_bytesmain (c function)": [[64, "c.Py_BytesMain"]], "py_compilestring (c function)": [[64, "c.Py_CompileString"]], "py_compilestring()": [[64, "index-0"], [64, "index-1"], [64, "index-2"]], "py_compilestringexflags (c function)": [[64, "c.Py_CompileStringExFlags"]], "py_compilestringflags (c function)": [[64, "c.Py_CompileStringFlags"]], "py_compilestringobject (c function)": [[64, "c.Py_CompileStringObject"]], "py_main (c function)": [[64, "c.Py_Main"]], "py_eval_input (c var)": [[64, "c.Py_eval_input"]], "py_file_input (c var)": [[64, "c.Py_file_input"]], "py_single_input (c var)": [[64, "c.Py_single_input"]], "pyobject_clearweakrefs (c function)": [[65, "c.PyObject_ClearWeakRefs"]], "pyweakref_check (c function)": [[65, "c.PyWeakref_Check"]], "pyweakref_checkproxy (c function)": [[65, "c.PyWeakref_CheckProxy"]], "pyweakref_checkref (c function)": [[65, "c.PyWeakref_CheckRef"]], "pyweakref_get_object (c function)": [[65, "c.PyWeakref_GET_OBJECT"]], "pyweakref_getobject (c function)": [[65, "c.PyWeakref_GetObject"]], "pyweakref_getref (c function)": [[65, "c.PyWeakref_GetRef"]], "pyweakref_newproxy (c function)": [[65, "c.PyWeakref_NewProxy"]], "pyweakref_newref (c function)": [[65, "c.PyWeakref_NewRef"]], "rfc": [[66, "index-0"], [98, "index-0"], [99, "index-0"], [99, "index-1"], [99, "index-2"], [99, "index-3"], [99, "index-4"], [99, "index-5"], [106, "index-0"], [106, "index-1"], [106, "index-2"], [120, "index-3"], [120, "index-4"], [136, "index-1"], [136, "index-10"], [136, "index-11"], [136, "index-12"], [136, "index-2"], [136, "index-3"], [136, "index-4"], [136, "index-5"], [136, "index-6"], [136, "index-7"], [136, "index-8"], [136, "index-9"], [139, "index-1"], [139, "index-2"], [139, "index-3"], [148, "index-10"], [148, "index-11"], [148, "index-12"], [148, "index-13"], [148, "index-14"], [148, "index-6"], [148, "index-7"], [148, "index-8"], [148, "index-9"], [164, "index-1"], [183, "index-0"], [183, "index-1"], [183, "index-2"], [183, "index-3"], [183, "index-4"], [183, "index-5"], [183, "index-6"], [183, "index-7"], [185, "index-0"], [185, "index-1"], [185, "index-10"], [185, "index-11"], [185, "index-2"], [185, "index-3"], [185, "index-4"], [185, "index-5"], [185, "index-6"], [185, "index-7"], [185, "index-8"], [185, "index-9"], [186, "index-0"], [188, "index-0"], [189, "index-0"], [190, "index-0"], [190, "index-1"], [191, "index-0"], [191, "index-1"], [191, "index-10"], [191, "index-11"], [191, "index-12"], [191, "index-13"], [191, "index-2"], [191, "index-3"], [191, "index-4"], [191, "index-5"], [191, "index-6"], [191, "index-7"], [191, "index-8"], [191, "index-9"], [192, "index-0"], [192, "index-1"], [192, "index-10"], [192, "index-11"], [192, "index-12"], [192, "index-13"], [192, "index-14"], [192, "index-2"], [192, "index-3"], [192, "index-4"], [192, "index-5"], [192, "index-6"], [192, "index-7"], [192, "index-8"], [192, "index-9"], [194, "index-0"], [194, "index-1"], [194, "index-10"], [194, "index-2"], [194, "index-3"], [194, "index-4"], [194, "index-5"], [194, "index-6"], [194, "index-7"], [194, "index-8"], [194, "index-9"], [196, "index-0"], [196, "index-1"], [197, "index-0"], [197, "index-1"], [197, "index-2"], [197, "index-3"], [197, "index-4"], [197, "index-5"], [197, "index-6"], [197, "index-7"], [197, "index-8"], [197, "index-9"], [198, "index-0"], [198, "index-1"], [198, "index-10"], [198, "index-2"], [198, "index-3"], [198, "index-4"], [198, "index-5"], [198, "index-6"], [198, "index-7"], [198, "index-8"], [198, "index-9"], [212, "index-1"], [212, "index-2"], [212, "index-3"], [212, "index-4"], [212, "index-5"], [212, "index-6"], [219, "index-9"], [224, "index-1"], [224, "index-3"], [224, "index-5"], [226, "index-0"], [230, "index-1"], [230, "index-10"], [230, "index-11"], [230, "index-12"], [230, "index-13"], [230, "index-14"], [230, "index-15"], [230, "index-16"], [230, "index-17"], [230, "index-18"], [230, "index-19"], [230, "index-2"], [230, "index-20"], [230, "index-21"], [230, "index-22"], [230, "index-23"], [230, "index-24"], [230, "index-25"], [230, "index-26"], [230, "index-27"], [230, "index-28"], [230, "index-29"], [230, "index-3"], [230, "index-30"], [230, "index-31"], [230, "index-32"], [230, "index-33"], [230, "index-34"], [230, "index-35"], [230, "index-36"], [230, "index-37"], [230, "index-38"], [230, "index-39"], [230, "index-4"], [230, "index-40"], [230, "index-41"], [230, "index-42"], [230, "index-43"], [230, "index-44"], [230, "index-45"], [230, "index-46"], [230, "index-47"], [230, "index-48"], [230, "index-49"], [230, "index-5"], [230, "index-50"], [230, "index-51"], [230, "index-52"], [230, "index-53"], [230, "index-54"], [230, "index-55"], [230, "index-56"], [230, "index-57"], [230, "index-58"], [230, "index-59"], [230, "index-6"], [230, "index-60"], [230, "index-61"], [230, "index-62"], [230, "index-63"], [230, "index-64"], [230, "index-65"], [230, "index-66"], [230, "index-67"], [230, "index-68"], [230, "index-69"], [230, "index-7"], [230, "index-70"], [230, "index-71"], [230, "index-72"], [230, "index-73"], [230, "index-74"], [230, "index-75"], [230, "index-76"], [230, "index-8"], [230, "index-9"], [231, "index-2"], [231, "index-3"], [231, "index-4"], [231, "index-5"], [231, "index-6"], [231, "index-7"], [232, "index-0"], [232, "index-1"], [232, "index-10"], [232, "index-11"], [232, "index-12"], [232, "index-13"], [232, "index-14"], [232, "index-15"], [232, "index-16"], [232, "index-17"], [232, "index-18"], [232, "index-19"], [232, "index-2"], [232, "index-20"], [232, "index-21"], [232, "index-22"], [232, "index-23"], [232, "index-24"], [232, "index-25"], [232, "index-3"], [232, "index-4"], [232, "index-5"], [232, "index-6"], [232, "index-7"], [232, "index-8"], [232, "index-9"], [233, "index-0"], [233, "index-1"], [233, "index-2"], [233, "index-3"], [233, "index-4"], [233, "index-5"], [233, "index-6"], [233, "index-7"], [234, "index-1"], [234, "index-2"], [237, "index-1"], [237, "index-2"], [237, "index-3"], [237, "index-4"], [237, "index-5"], [237, "index-6"], [237, "index-7"], [237, "index-8"], [242, "index-0"], [244, "index-0"], [247, "index-0"], [247, "index-1"], [247, "index-10"], [247, "index-11"], [247, "index-12"], [247, "index-13"], [247, "index-2"], [247, "index-3"], [247, "index-4"], [247, "index-5"], [247, "index-6"], [247, "index-7"], [247, "index-8"], [247, "index-9"], [250, "index-0"], [250, "index-1"], [250, "index-2"], [250, "index-3"], [250, "index-4"], [254, "index-4"], [254, "index-5"], [257, "index-0"], [259, "index-0"], [287, "index-1"], [287, "index-2"], [287, "index-3"], [287, "index-4"], [287, "index-5"], [287, "index-6"], [299, "index-1"], [299, "index-2"], [299, "index-3"], [299, "index-4"], [309, "index-1"], [317, "index-1"], [317, "index-10"], [317, "index-11"], [317, "index-12"], [317, "index-2"], [317, "index-3"], [317, "index-4"], [317, "index-5"], [317, "index-6"], [317, "index-7"], [317, "index-8"], [317, "index-9"], [318, "index-15"], [318, "index-3"], [321, "index-10"], [321, "index-11"], [321, "index-12"], [321, "index-13"], [321, "index-16"], [321, "index-17"], [321, "index-18"], [321, "index-19"], [321, "index-20"], [321, "index-21"], [321, "index-22"], [321, "index-5"], [321, "index-6"], [321, "index-7"], [321, "index-8"], [321, "index-9"], [326, "index-0"], [326, "index-1"], [344, "index-10"], [344, "index-19"], [344, "index-20"], [344, "index-21"], [344, "index-22"], [370, "index-0"], [371, "index-1"], [371, "index-10"], [371, "index-11"], [371, "index-12"], [371, "index-13"], [371, "index-2"], [371, "index-3"], [371, "index-4"], [371, "index-5"], [371, "index-6"], [371, "index-7"], [371, "index-8"], [371, "index-9"], [372, "index-1"], [372, "index-10"], [372, "index-2"], [372, "index-3"], [372, "index-5"], [372, "index-6"], [372, "index-7"], [372, "index-8"], [374, "index-0"], [374, "index-1"], [374, "index-10"], [374, "index-11"], [374, "index-2"], [374, "index-3"], [374, "index-4"], [383, "index-10"], [383, "index-5"], [394, "index-0"], [426, "index-1"], [439, "index-17"], [439, "index-18"], [439, "index-19"], [439, "index-20"], [439, "index-21"], [441, "index-18"], [442, "index-22"], [442, "index-23"], [443, "index-22"], [443, "index-23"], [444, "index-10"], [444, "index-11"], [444, "index-13"], [451, "index-11"], [451, "index-12"], [451, "index-13"], [451, "index-7"], [451, "index-8"], [452, "index-26"], [452, "index-27"], [454, "index-31"], [454, "index-32"], [454, "index-33"], [454, "index-34"], [454, "index-35"], [454, "index-36"], [454, "index-37"], [454, "index-38"], [454, "index-39"], [454, "index-40"], [454, "index-41"], [454, "index-42"], [454, "index-43"], [454, "index-44"], [454, "index-51"], [456, "index-34"], [456, "index-35"], [458, "index-22"]], "rfc 4122": [[66, "index-0"], [242, "index-0"], [244, "index-0"], [374, "index-0"], [374, "index-1"], [374, "index-10"], [374, "index-11"], [374, "index-2"], [374, "index-3"], [374, "index-4"], [442, "index-22"], [442, "index-23"]], "pyinit_modulename (c function)": [[69, "c.PyInit_modulename"]], "philbrick, geoff": [[71, "index-4"]], "pyarg_parsetuple()": [[71, "index-2"]], "pyarg_parsetupleandkeywords()": [[71, "index-3"]], "pyobject_callobject()": [[71, "index-1"]], "pyerr_fetch()": [[73, "index-1"]], "pyerr_restore()": [[73, "index-1"]], "deallocation": [[73, "index-0"]], "deallocation, object": [[73, "index-0"]], "finalization": [[73, "index-0"]], "finalization, of objects": [[73, "index-0"]], "object representation": [[73, "index-3"]], "pep 572": [[76, "index-0"], [402, "index-24"], [405, "index-21"], [405, "index-87"], [449, "index-20"], [457, "index-0"], [457, "index-24"]], "pep 5": [[78, "index-2"], [438, "index-6"]], "pep 6": [[78, "index-0"]], "pep 602": [[78, "index-1"], [458, "index-10"]], "pep 8": [[83, "index-0"], [83, "index-2"], [84, "index-0"], [88, "index-2"], [214, "index-10"], [405, "index-79"], [416, "index-10"], [432, "index-0"], [445, "index-21"]], "argument": [[83, "index-1"], [85, "term-argument"], [402, "index-31"], [403, "index-33"], [405, "index-47"]], "difference from argument": [[83, "index-1"]], "difference from parameter": [[83, "index-1"]], "parameter": [[83, "index-1"], [85, "term-parameter"], [402, "index-27"], [402, "index-31"], [405, "index-48"]], "...": [[85, "term-..."], [158, "index-0"], [182, "index-0"], [182, "index-3"], [289, "index-0"], [303, "index-0"], [324, "index-66"], [331, "index-27"], [342, "index-0"], [403, "index-8"]], ">>>": [[85, "term-0"], [182, "index-0"], [331, "index-27"]], "bdfl": [[85, "term-BDFL"]], "cpython": [[85, "term-CPython"]], "eafp": [[85, "term-EAFP"]], "gil": [[85, "term-GIL"]], "idle": [[85, "term-IDLE"], [236, "index-0"]], "lbyl": [[85, "term-LBYL"]], "mro": [[85, "term-MRO"]], "pep": [[85, "term-PEP"]], "pep 1": [[85, "index-30"], [437, "index-0"], [437, "index-1"]], "pep 278": [[85, "index-37"], [440, "index-9"]], "pep 302": [[85, "index-14"], [85, "index-25"], [214, "index-14"], [238, "index-12"], [238, "index-13"], [238, "index-14"], [238, "index-16"], [238, "index-2"], [253, "index-1"], [284, "index-0"], [284, "index-2"], [284, "index-3"], [284, "index-5"], [284, "index-6"], [284, "index-7"], [306, "index-1"], [331, "index-25"], [331, "index-26"], [398, "index-2"], [407, "index-1"], [407, "index-18"], [440, "index-17"], [440, "index-18"], [440, "index-19"], [440, "index-6"], [442, "index-21"], [446, "index-2"], [452, "index-20"], [452, "index-21"], [452, "index-37"]], "pep 3116": [[85, "index-38"], [443, "index-14"], [446, "index-3"]], "pep 3155": [[85, "index-33"], [452, "index-15"]], "pep 343": [[85, "index-9"], [108, "index-4"], [159, "index-0"], [402, "index-17"], [403, "index-105"], [442, "index-10"], [442, "index-14"], [443, "index-3"]], "pep 362": [[85, "index-2"], [85, "index-28"], [243, "index-0"], [452, "index-17"]], "pep 411": [[85, "index-32"], [331, "index-13"], [331, "index-14"], [331, "index-31"], [331, "index-32"]], "pep 420": [[85, "index-15"], [85, "index-27"], [85, "index-31"], [238, "index-5"], [407, "index-14"], [407, "index-15"], [407, "index-19"], [407, "index-2"], [407, "index-20"], [407, "index-21"], [407, "index-6"], [452, "index-2"], [452, "index-3"]], "pep 443": [[85, "index-21"], [453, "index-11"], [453, "index-36"]], "pep 483": [[85, "index-22"], [363, "index-1"], [363, "index-3"], [454, "index-12"]], "pep 484": [[85, "index-0"], [85, "index-18"], [85, "index-23"], [85, "index-35"], [85, "index-36"], [85, "index-39"], [116, "index-2"], [116, "index-3"], [116, "index-5"], [116, "index-6"], [324, "index-57"], [363, "index-0"], [363, "index-2"], [363, "index-23"], [363, "index-26"], [363, "index-27"], [363, "index-42"], [363, "index-54"], [402, "index-37"], [403, "index-93"], [411, "index-17"], [416, "index-8"], [447, "index-19"], [447, "index-21"], [447, "index-23"], [448, "index-11"], [448, "index-12"], [449, "index-15"], [449, "index-16"], [449, "index-3"], [454, "index-10"], [454, "index-11"], [455, "index-5"], [456, "index-20"], [457, "index-10"], [457, "index-12"]], "pep 492": [[85, "index-11"], [85, "index-12"], [85, "index-3"], [85, "index-4"], [85, "index-6"], [85, "index-7"], [85, "index-8"], [151, "index-3"], [243, "index-1"], [243, "index-2"], [402, "index-50"], [403, "index-109"], [405, "index-30"], [454, "index-1"], [454, "index-2"], [454, "index-47"], [454, "index-52"], [455, "index-35"], [455, "index-9"]], "pep 498": [[85, "index-13"], [410, "index-26"], [455, "index-3"], [455, "index-4"]], "pep 519": [[85, "index-29"], [455, "index-16"]], "pep 525": [[85, "index-5"], [151, "index-2"], [243, "index-3"], [331, "index-12"], [331, "index-30"], [405, "index-29"], [455, "index-10"]], "pep 526": [[85, "index-1"], [85, "index-40"], [116, "index-4"], [116, "index-7"], [170, "index-1"], [170, "index-2"], [363, "index-35"], [363, "index-4"], [363, "index-49"], [402, "index-38"], [411, "index-16"], [447, "index-27"], [455, "index-33"], [455, "index-6"], [456, "index-1"], [457, "index-11"]], "pep 585": [[85, "index-24"], [151, "index-0"], [324, "index-58"], [362, "index-5"], [363, "index-59"], [363, "index-6"], [363, "index-61"], [363, "index-62"], [363, "index-63"], [363, "index-64"], [363, "index-65"], [363, "index-66"], [363, "index-67"], [363, "index-68"], [363, "index-69"], [363, "index-70"], [363, "index-71"], [363, "index-72"], [363, "index-73"], [363, "index-74"], [363, "index-75"], [363, "index-76"], [363, "index-77"], [363, "index-78"], [363, "index-79"], [363, "index-80"], [363, "index-81"], [363, "index-82"], [363, "index-83"], [363, "index-84"], [363, "index-85"], [363, "index-86"], [363, "index-87"], [363, "index-88"], [363, "index-89"], [363, "index-90"], [363, "index-91"], [363, "index-92"], [363, "index-93"], [363, "index-95"], [363, "index-96"], [363, "index-97"], [363, "index-98"], [363, "index-99"], [458, "index-13"], [458, "index-2"]], "python 3000": [[85, "term-Python-3000"]], "pythonic": [[85, "term-Pythonic"]], "zen of python": [[85, "term-Zen-of-Python"]], "__future__": [[85, "term-__future__"], [108, "module-__future__"], [411, "index-40"]], "__slots__": [[85, "term-__slots__"]], "abstract base class": [[85, "term-abstract-base-class"]], "annotation": [[85, "term-annotation"], [324, "index-55"]], "asynchronous context manager": [[85, "term-asynchronous-context-manager"]], "asynchronous generator": [[85, "term-asynchronous-generator"], [403, "index-40"]], "asynchronous generator iterator": [[85, "term-asynchronous-generator-iterator"]], "asynchronous iterable": [[85, "term-asynchronous-iterable"]], "asynchronous iterator": [[85, "term-asynchronous-iterator"], [403, "index-40"]], "attribute": [[85, "term-attribute"], [403, "index-46"], [403, "index-47"], [403, "index-5"], [403, "index-50"], [403, "index-51"], [405, "index-39"], [411, "index-23"], [411, "index-4"], [411, "index-8"]], "awaitable": [[85, "term-awaitable"]], "binary file": [[85, "term-binary-file"]], "borrowed reference": [[85, "term-borrowed-reference"]], "bytecode": [[85, "term-bytecode"], [403, "index-56"]], "bytes-like object": [[85, "term-bytes-like-object"]], "callable": [[85, "term-callable"], [403, "index-33"], [405, "index-47"]], "callback": [[85, "term-callback"]], "class": [[85, "term-class"], [402, "index-40"], [403, "index-46"], [403, "index-47"], [403, "index-50"], [403, "index-71"], [403, "index-89"], [405, "index-54"], [411, "index-24"]], "class variable": [[85, "term-class-variable"]], "context manager": [[85, "term-context-manager"], [324, "index-54"], [403, "index-104"]], "context variable": [[85, "term-context-variable"]], "coroutine": [[85, "term-coroutine"], [403, "index-108"], [403, "index-39"], [405, "index-24"]], "coroutine function": [[85, "term-coroutine-function"]], "decorator": [[85, "term-decorator"]], "descriptor": [[85, "term-descriptor"]], "dictionary comprehension": [[85, "term-dictionary-comprehension"]], "dictionary view": [[85, "term-dictionary-view"]], "docstring": [[85, "term-docstring"], [402, "index-40"]], "duck-typing": [[85, "term-duck-typing"]], "expression": [[85, "term-expression"], [402, "index-35"], [405, "index-0"], [405, "index-22"], [405, "index-23"], [405, "index-82"], [405, "index-88"], [405, "index-90"], [405, "index-91"], [411, "index-1"], [411, "index-2"]], "extension module": [[85, "term-extension-module"]], "f-string": [[85, "term-f-string"], [410, "index-25"]], "file object": [[85, "term-file-object"], [214, "index-5"], [246, "index-0"]], "file-like object": [[85, "term-file-like-object"]], "filesystem encoding and error handler": [[85, "term-filesystem-encoding-and-error-handler"]], "finder": [[85, "term-finder"], [407, "index-10"], [407, "index-8"]], "floor division": [[85, "term-floor-division"]], "function annotation": [[85, "term-function-annotation"]], "garbage collection": [[85, "term-garbage-collection"], [403, "index-2"]], "generator": [[85, "index-19"], [85, "term-generator"], [403, "index-38"], [403, "index-58"], [405, "index-22"], [405, "index-23"], [405, "index-31"], [411, "index-26"]], "generator expression": [[85, "index-20"], [85, "term-generator-expression"], [405, "index-22"]], "generator iterator": [[85, "term-generator-iterator"]], "generic function": [[85, "term-generic-function"]], "generic type": [[85, "term-generic-type"]], "hash-based pyc": [[85, "term-hash-based-pyc"]], "hashable": [[85, "term-hashable"], [405, "index-20"]], "immutable": [[85, "term-immutable"], [324, "index-22"], [403, "index-17"], [405, "index-20"], [405, "index-7"]], "import path": [[85, "term-import-path"]], "importer": [[85, "term-importer"]], "importing": [[85, "term-importing"], [411, "index-34"]], "interactive": [[85, "term-interactive"]], "interpreted": [[85, "term-interpreted"]], "interpreter shutdown": [[85, "term-interpreter-shutdown"]], "iterable": [[85, "term-iterable"], [405, "index-93"]], "iterator": [[85, "term-iterator"], [324, "index-18"], [403, "index-38"], [411, "index-26"]], "key function": [[85, "term-key-function"]], "keyword argument": [[85, "term-keyword-argument"]], "lambda": [[85, "term-lambda"], [402, "index-35"], [405, "index-90"]], "list comprehension": [[85, "term-list-comprehension"]], "loader": [[85, "term-loader"], [407, "index-8"]], "locale encoding": [[85, "term-locale-encoding"]], "magic": [[85, "index-26"]], "magic method": [[85, "term-magic-method"]], "meta path finder": [[85, "term-meta-path-finder"]], "metaclass": [[85, "term-metaclass"], [403, "index-84"]], "method resolution order": [[85, "term-method-resolution-order"]], "module spec": [[85, "term-module-spec"], [407, "index-8"]], "mutable": [[85, "term-mutable"], [324, "index-23"], [403, "index-22"], [411, "index-4"], [411, "index-9"]], "named tuple": [[85, "term-named-tuple"]], "namespace": [[85, "term-namespace"], [403, "index-35"], [403, "index-44"], [404, "index-3"], [407, "index-5"]], "namespace package": [[85, "term-namespace-package"]], "nested scope": [[85, "term-nested-scope"]], "new-style class": [[85, "term-new-style-class"]], "package": [[85, "term-package"], [316, "index-4"], [407, "index-3"], [407, "index-4"], [407, "index-5"]], "path based finder": [[85, "term-path-based-finder"], [407, "index-16"]], "path entry": [[85, "term-path-entry"]], "path entry finder": [[85, "term-path-entry-finder"]], "path entry hook": [[85, "term-path-entry-hook"]], "path-like object": [[85, "term-path-like-object"]], "portion": [[85, "term-portion"], [407, "index-5"]], "positional argument": [[85, "term-positional-argument"]], "provisional api": [[85, "term-provisional-API"]], "provisional package": [[85, "term-provisional-package"]], "qualified name": [[85, "term-qualified-name"]], "reference count": [[85, "term-reference-count"]], "regular package": [[85, "term-regular-package"]], "set comprehension": [[85, "term-set-comprehension"]], "single dispatch": [[85, "term-single-dispatch"]], "slice": [[85, "term-slice"], [180, "index-1"], [324, "index-20"], [324, "index-24"], [403, "index-67"], [403, "index-97"], [405, "index-44"]], "soft deprecated": [[85, "term-soft-deprecated"]], "special": [[85, "index-34"], [403, "index-5"]], "special method": [[85, "term-special-method"]], "statement": [[85, "term-statement"], [202, "index-0"], [202, "index-1"], [202, "index-3"], [214, "index-13"], [316, "index-2"], [324, "index-1"], [324, "index-24"], [324, "index-52"], [402, "index-0"], [402, "index-13"], [402, "index-15"], [402, "index-16"], [402, "index-18"], [402, "index-28"], [402, "index-3"], [402, "index-4"], [402, "index-4"], [402, "index-40"], [402, "index-46"], [402, "index-48"], [402, "index-49"], [402, "index-5"], [402, "index-6"], [402, "index-6"], [402, "index-7"], [402, "index-9"], [403, "index-104"], [403, "index-22"], [403, "index-43"], [403, "index-65"], [403, "index-72"], [411, "index-0"], [411, "index-1"], [411, "index-14"], [411, "index-15"], [411, "index-18"], [411, "index-20"], [411, "index-21"], [411, "index-22"], [411, "index-24"], [411, "index-26"], [411, "index-27"], [411, "index-30"], [411, "index-30"], [411, "index-33"], [411, "index-33"], [411, "index-34"], [411, "index-4"], [411, "index-40"], [411, "index-43"], [411, "index-45"], [411, "index-47"], [416, "index-0"]], "strong reference": [[85, "term-strong-reference"]], "text encoding": [[85, "term-text-encoding"]], "text file": [[85, "term-text-file"]], "triple-quoted string": [[85, "term-triple-quoted-string"], [410, "index-18"]], "type alias": [[85, "term-type-alias"]], "type hint": [[85, "term-type-hint"]], "universal newlines": [[85, "term-universal-newlines"], [164, "index-3"], [214, "index-7"], [238, "index-15"], [246, "index-4"], [246, "index-5"], [324, "index-34"], [324, "index-44"], [328, "index-1"], [440, "index-8"], [441, "index-7"], [442, "index-20"], [443, "index-13"]], "variable annotation": [[85, "term-variable-annotation"]], "virtual environment": [[85, "term-virtual-environment"]], "virtual machine": [[85, "term-virtual-machine"]], "pep 604": [[86, "index-0"], [324, "index-60"], [363, "index-11"], [447, "index-20"], [447, "index-5"]], "--converters": [[88, "cmdoption-.-Tools-clinic-clinic.py-h-f-o-OUTPUT-v-converters-make-srcdir-SRCDIR-limited-FILE-...-converters"]], "--exclude": [[88, "cmdoption-.-Tools-clinic-clinic.py-h-f-o-OUTPUT-v-converters-make-srcdir-SRCDIR-limited-FILE-...-exclude"]], "--force": [[88, "cmdoption-.-Tools-clinic-clinic.py-h-f-o-OUTPUT-v-converters-make-srcdir-SRCDIR-limited-FILE-...-f"]], "--help": [[88, "cmdoption-.-Tools-clinic-clinic.py-h-f-o-OUTPUT-v-converters-make-srcdir-SRCDIR-limited-FILE-...-h"], [116, "cmdoption-ast-h"], [143, "cmdoption-calendar-help"], [223, "cmdoption-gzip-h"], [250, "cmdoption-json.tool-h"], [320, "cmdoption-python-m-sqlite3-h-v-filename-sql-h"], [345, "cmdoption-timeit-h"], [355, "cmdoption-tokenize-h"], [357, "cmdoption-trace-help"], [374, "cmdoption-uuid-h"], [396, "cmdoption-zipapp-h"], [430, "cmdoption-help"]], "--limited": [[88, "cmdoption-.-Tools-clinic-clinic.py-h-f-o-OUTPUT-v-converters-make-srcdir-SRCDIR-limited-FILE-...-limited"]], "--make": [[88, "cmdoption-.-Tools-clinic-clinic.py-h-f-o-OUTPUT-v-converters-make-srcdir-SRCDIR-limited-FILE-...-make"]], "--output": [[88, "cmdoption-.-Tools-clinic-clinic.py-h-f-o-OUTPUT-v-converters-make-srcdir-SRCDIR-limited-FILE-...-o"], [283, "cmdoption-pickletools-o"], [396, "cmdoption-zipapp-o"]], "--srcdir": [[88, "cmdoption-.-Tools-clinic-clinic.py-h-f-o-OUTPUT-v-converters-make-srcdir-SRCDIR-limited-FILE-...-srcdir"]], "--verbose": [[88, "cmdoption-.-Tools-clinic-clinic.py-h-f-o-OUTPUT-v-converters-make-srcdir-SRCDIR-limited-FILE-...-v"], [337, "cmdoption-tarfile-v"], [345, "cmdoption-timeit-v"], [365, "cmdoption-unittest-discover-v"]], "-f": [[88, "cmdoption-.-Tools-clinic-clinic.py-h-f-o-OUTPUT-v-converters-make-srcdir-SRCDIR-limited-FILE-...-f"], [153, "cmdoption-compileall-f"], [357, "cmdoption-trace-f"], [365, "cmdoption-unittest-f"]], "-h": [[88, "cmdoption-.-Tools-clinic-clinic.py-h-f-o-OUTPUT-v-converters-make-srcdir-SRCDIR-limited-FILE-...-h"], [116, "cmdoption-ast-h"], [143, "cmdoption-calendar-help"], [223, "cmdoption-gzip-h"], [250, "cmdoption-json.tool-h"], [320, "cmdoption-python-m-sqlite3-h-v-filename-sql-h"], [345, "cmdoption-timeit-h"], [355, "cmdoption-tokenize-h"], [374, "cmdoption-uuid-h"], [396, "cmdoption-zipapp-h"], [430, "cmdoption-h"]], "-o": [[88, "cmdoption-.-Tools-clinic-clinic.py-h-f-o-OUTPUT-v-converters-make-srcdir-SRCDIR-limited-FILE-...-o"], [153, "cmdoption-compileall-o"], [283, "cmdoption-pickletools-o"], [396, "cmdoption-zipapp-o"], [430, "cmdoption-O"]], "-v": [[88, "cmdoption-.-Tools-clinic-clinic.py-h-f-o-OUTPUT-v-converters-make-srcdir-SRCDIR-limited-FILE-...-v"], [320, "cmdoption-python-m-sqlite3-h-v-filename-sql-v"], [337, "cmdoption-tarfile-v"], [345, "cmdoption-timeit-v"], [365, "cmdoption-unittest-discover-v"], [430, "cmdoption-V"], [430, "cmdoption-1"]], "./tools/clinic/clinic.py-[-h]-[-f]-[-o-output]-[-v]-\\-[--converters]-[--make]-[--srcdir-srcdir]-[--limited]-[file-...] command line option": [[88, "cmdoption-.-Tools-clinic-clinic.py-h-f-o-OUTPUT-v-converters-make-srcdir-SRCDIR-limited-FILE-...-arg-FILE"], [88, "cmdoption-.-Tools-clinic-clinic.py-h-f-o-OUTPUT-v-converters-make-srcdir-SRCDIR-limited-FILE-...-converters"], [88, "cmdoption-.-Tools-clinic-clinic.py-h-f-o-OUTPUT-v-converters-make-srcdir-SRCDIR-limited-FILE-...-exclude"], [88, "cmdoption-.-Tools-clinic-clinic.py-h-f-o-OUTPUT-v-converters-make-srcdir-SRCDIR-limited-FILE-...-f"], [88, "cmdoption-.-Tools-clinic-clinic.py-h-f-o-OUTPUT-v-converters-make-srcdir-SRCDIR-limited-FILE-...-h"], [88, "cmdoption-.-Tools-clinic-clinic.py-h-f-o-OUTPUT-v-converters-make-srcdir-SRCDIR-limited-FILE-...-limited"], [88, "cmdoption-.-Tools-clinic-clinic.py-h-f-o-OUTPUT-v-converters-make-srcdir-SRCDIR-limited-FILE-...-make"], [88, "cmdoption-.-Tools-clinic-clinic.py-h-f-o-OUTPUT-v-converters-make-srcdir-SRCDIR-limited-FILE-...-o"], [88, "cmdoption-.-Tools-clinic-clinic.py-h-f-o-OUTPUT-v-converters-make-srcdir-SRCDIR-limited-FILE-...-srcdir"], [88, "cmdoption-.-Tools-clinic-clinic.py-h-f-o-OUTPUT-v-converters-make-srcdir-SRCDIR-limited-FILE-...-v"]], "cconverter (class in clinic)": [[88, "clinic.CConverter"]], "pep 257": [[88, "index-1"]], "pep 436": [[88, "index-0"], [453, "index-18"], [453, "index-48"], [453, "index-49"]], "pep 573": [[88, "index-3"], [458, "index-23"], [458, "index-6"]], "block": [[88, "term-block"], [404, "index-0"], [404, "index-1"]], "c_default (clinic.cconverter attribute)": [[88, "clinic.CConverter.c_default"]], "c_ignored_default (clinic.cconverter attribute)": [[88, "clinic.CConverter.c_ignored_default"]], "checksum": [[88, "term-checksum"], [399, "index-0"]], "checksum line": [[88, "term-checksum-line"]], "clinic": [[88, "module-clinic"]], "converter (clinic.cconverter attribute)": [[88, "clinic.CConverter.converter"]], "default (clinic.cconverter attribute)": [[88, "clinic.CConverter.default"]], "end line": [[88, "term-end-line"]], "impl_by_reference (clinic.cconverter attribute)": [[88, "clinic.CConverter.impl_by_reference"]], "input": [[88, "term-input"], [412, "index-5"]], "output": [[88, "term-output"], [411, "index-3"]], "parse_by_reference (clinic.cconverter attribute)": [[88, "clinic.CConverter.parse_by_reference"]], "py_default (clinic.cconverter attribute)": [[88, "clinic.CConverter.py_default"]], "start line": [[88, "term-start-line"]], "type (clinic.cconverter attribute)": [[88, "clinic.CConverter.type"]], "pep 289": [[93, "index-1"], [441, "index-15"], [441, "index-2"]], "pep 342": [[93, "index-0"], [93, "index-2"], [151, "index-1"], [405, "index-27"], [442, "index-11"], [442, "index-31"], [442, "index-9"]], "rfc 3339": [[98, "index-0"]], "__init__() (logging.logging.formatter method)": [[98, "logging.logging.Formatter.__init__"]], "rfc 3164": [[99, "index-5"]], "rfc 5424": [[99, "index-0"], [99, "index-2"], [99, "index-3"], [99, "index-4"], [257, "index-0"]], "rfc 5424#section-6": [[99, "index-1"]], "pep 263": [[105, "index-0"], [238, "index-1"], [355, "index-0"], [355, "index-1"], [440, "index-3"], [442, "index-19"]], "rfc 2616": [[106, "index-0"], [106, "index-1"], [106, "index-2"], [370, "index-0"], [372, "index-10"], [372, "index-6"], [372, "index-7"], [383, "index-10"], [383, "index-5"], [451, "index-7"]], "http_proxy": [[106, "index-3"], [372, "index-0"], [372, "index-9"]], "pep 227": [[108, "index-0"], [438, "index-2"], [439, "index-16"]], "pep 255": [[108, "index-1"], [405, "index-26"], [439, "index-8"], [439, "index-9"], [440, "index-1"], [440, "index-2"]], "pep 3105": [[108, "index-5"], [443, "index-10"], [445, "index-0"]], "pep 3112": [[108, "index-6"], [443, "index-12"]], "pep 328": [[108, "index-3"], [214, "index-15"], [238, "index-3"], [407, "index-23"], [441, "index-10"], [441, "index-17"], [442, "index-5"], [442, "index-6"], [445, "index-16"], [452, "index-36"]], "pep 479": [[108, "index-7"], [202, "index-5"], [202, "index-6"], [454, "index-17"], [454, "index-18"], [456, "index-37"]], "pep 563": [[108, "index-8"], [108, "index-9"], [363, "index-57"], [363, "index-60"], [402, "index-39"], [411, "index-41"], [448, "index-20"], [456, "index-2"]], "pep 649": [[108, "index-10"], [404, "index-11"]], "_feature (class in __future__)": [[108, "future__._Feature"]], "compiler_flag (__future__._feature attribute)": [[108, "future__._Feature.compiler_flag"]], "getmandatoryrelease() (__future__._feature method)": [[108, "future__._Feature.getMandatoryRelease"]], "getoptionalrelease() (__future__._feature method)": [[108, "future__._Feature.getOptionalRelease"]], "locktype (in module _thread)": [[110, "thread.LockType"]], "posix": [[110, "index-1"], [288, "module-posix"], [339, "index-0"]], "timeout_max (in module _thread)": [[110, "thread.TIMEOUT_MAX"]], "_thread": [[110, "module-_thread"]], "acquire() (_thread.lock method)": [[110, "thread.lock.acquire"]], "allocate_lock() (in module _thread)": [[110, "thread.allocate_lock"]], "binary semaphores": [[110, "index-0"]], "error": [[110, "thread.error"], [139, "binascii.Error"], [157, "configparser.Error"], [161, "copy.Error"], [164, "csv.Error"], [166, "curses.error"], [173, "dbm.dumb.error"], [173, "dbm.error"], [173, "dbm.gnu.error"], [173, "dbm.ndbm.error"], [217, "getopt.error"], [254, "locale.Error"], [259, "mailbox.Error"], [277, "os.error"], [296, "xml.parsers.expat.error"], [301, "re.error"], [304, "resource.error"], [310, "select.error"], [314, "shutil.Error"], [318, "socket.error"], [320, "sqlite3.Error"], [327, "struct.error"], [377, "wave.Error"], [379, "webbrowser.Error"], [399, "zlib.error"]], "exit() (in module _thread)": [[110, "thread.exit"]], "get_ident() (in module _thread)": [[110, "thread.get_ident"]], "get_native_id() (in module _thread)": [[110, "thread.get_native_id"]], "interrupt_main() (in module _thread)": [[110, "thread.interrupt_main"]], "light-weight processes": [[110, "index-0"]], "locked() (_thread.lock method)": [[110, "thread.lock.locked"]], "processes, light-weight": [[110, "index-0"]], "pthreads": [[110, "index-1"]], "release() (_thread.lock method)": [[110, "thread.lock.release"]], "semaphores, binary": [[110, "index-0"]], "stack_size() (in module _thread)": [[110, "thread.stack_size"]], "start_new_thread() (in module _thread)": [[110, "thread.start_new_thread"]], "threads": [[110, "index-1"]], "abc (class in abc)": [[111, "abc.ABC"]], "abcmeta (class in abc)": [[111, "abc.ABCMeta"]], "pep 3141": [[111, "index-1"], [273, "index-0"], [443, "index-19"]], "__subclasshook__() (abc.abcmeta method)": [[111, "abc.ABCMeta.__subclasshook__"]], "abc": [[111, "module-abc"]], "abstractclassmethod() (in module abc)": [[111, "abc.abstractclassmethod"]], "abstractmethod() (in module abc)": [[111, "abc.abstractmethod"]], "abstractproperty() (in module abc)": [[111, "abc.abstractproperty"]], "abstractstaticmethod() (in module abc)": [[111, "abc.abstractstaticmethod"]], "get_cache_token() (in module abc)": [[111, "abc.get_cache_token"]], "register() (abc.abcmeta method)": [[111, "abc.ABCMeta.register"]], "update_abstractmethods() (in module abc)": [[111, "abc.update_abstractmethods"]], "* (asterisk)": [[114, "index-1"], [116, "index-1"], [209, "index-2"], [220, "index-1"], [301, "index-3"], [324, "index-13"], [324, "index-36"], [324, "index-46"], [402, "index-32"], [405, "index-49"], [405, "index-65"], [405, "index-93"], [411, "index-37"], [411, "index-6"], [416, "index-3"]], "+ (plus)": [[114, "index-2"], [182, "index-4"], [301, "index-4"], [324, "index-13"], [324, "index-37"], [324, "index-47"], [325, "index-4"], [405, "index-61"], [405, "index-69"]], "? (question mark)": [[114, "index-0"], [116, "index-0"], [145, "index-0"], [148, "index-1"], [209, "index-2"], [220, "index-1"], [301, "index-5"], [320, "index-6"], [327, "index-2"], [327, "index-3"]], "action (class in argparse)": [[114, "argparse.Action"]], "argumentdefaultshelpformatter (class in argparse)": [[114, "argparse.ArgumentDefaultsHelpFormatter"]], "argumenterror": [[114, "argparse.ArgumentError"], [165, "ctypes.ArgumentError"]], "argumentparser (class in argparse)": [[114, "argparse.ArgumentParser"]], "argumenttypeerror": [[114, "argparse.ArgumentTypeError"]], "filetype (class in argparse)": [[114, "argparse.FileType"]], "metavartypehelpformatter (class in argparse)": [[114, "argparse.MetavarTypeHelpFormatter"]], "namespace (class in argparse)": [[114, "argparse.Namespace"]], "rawdescriptionhelpformatter (class in argparse)": [[114, "argparse.RawDescriptionHelpFormatter"]], "rawtexthelpformatter (class in argparse)": [[114, "argparse.RawTextHelpFormatter"]], "add_argument() (argparse.argumentparser method)": [[114, "argparse.ArgumentParser.add_argument"]], "add_argument_group() (argparse.argumentparser method)": [[114, "argparse.ArgumentParser.add_argument_group"]], "add_mutually_exclusive_group() (argparse.argumentparser method)": [[114, "argparse.ArgumentParser.add_mutually_exclusive_group"]], "add_subparsers() (argparse.argumentparser method)": [[114, "argparse.ArgumentParser.add_subparsers"]], "argparse": [[114, "module-argparse"]], "convert_arg_line_to_args() (argparse.argumentparser method)": [[114, "argparse.ArgumentParser.convert_arg_line_to_args"]], "error() (argparse.argumentparser method)": [[114, "argparse.ArgumentParser.error"]], "exit() (argparse.argumentparser method)": [[114, "argparse.ArgumentParser.exit"]], "format_help() (argparse.argumentparser method)": [[114, "argparse.ArgumentParser.format_help"]], "format_usage() (argparse.argumentparser method)": [[114, "argparse.ArgumentParser.format_usage"]], "get_default() (argparse.argumentparser method)": [[114, "argparse.ArgumentParser.get_default"]], "in argparse module": [[114, "index-0"], [114, "index-1"], [114, "index-2"]], "parse_args() (argparse.argumentparser method)": [[114, "argparse.ArgumentParser.parse_args"]], "parse_intermixed_args() (argparse.argumentparser method)": [[114, "argparse.ArgumentParser.parse_intermixed_args"]], "parse_known_args() (argparse.argumentparser method)": [[114, "argparse.ArgumentParser.parse_known_args"]], "parse_known_intermixed_args() (argparse.argumentparser method)": [[114, "argparse.ArgumentParser.parse_known_intermixed_args"]], "print_help() (argparse.argumentparser method)": [[114, "argparse.ArgumentParser.print_help"]], "print_usage() (argparse.argumentparser method)": [[114, "argparse.ArgumentParser.print_usage"]], "set_defaults() (argparse.argumentparser method)": [[114, "argparse.ArgumentParser.set_defaults"]], "append() (array.array method)": [[115, "array.array.append"]], "array": [[115, "module-array"], [324, "index-40"], [403, "index-23"]], "array (class in array)": [[115, "array.array"]], "arrays": [[115, "index-0"]], "buffer_info() (array.array method)": [[115, "array.array.buffer_info"]], "byteswap() (array.array method)": [[115, "array.array.byteswap"]], "count() (array.array method)": [[115, "array.array.count"]], "extend() (array.array method)": [[115, "array.array.extend"]], "frombytes() (array.array method)": [[115, "array.array.frombytes"]], "fromfile() (array.array method)": [[115, "array.array.fromfile"]], "fromlist() (array.array method)": [[115, "array.array.fromlist"]], "fromunicode() (array.array method)": [[115, "array.array.fromunicode"]], "index() (array.array method)": [[115, "array.array.index"]], "insert() (array.array method)": [[115, "array.array.insert"]], "itemsize (array.array attribute)": [[115, "array.array.itemsize"]], "pop() (array.array method)": [[115, "array.array.pop"]], "remove() (array.array method)": [[115, "array.array.remove"]], "reverse() (array.array method)": [[115, "array.array.reverse"]], "tobytes() (array.array method)": [[115, "array.array.tobytes"]], "tofile() (array.array method)": [[115, "array.array.tofile"]], "tolist() (array.array method)": [[115, "array.array.tolist"]], "tounicode() (array.array method)": [[115, "array.array.tounicode"]], "typecode (array.array attribute)": [[115, "array.array.typecode"]], "typecodes (in module array)": [[115, "array.typecodes"]], "--include-attributes": [[116, "cmdoption-ast-a"]], "--indent": [[116, "cmdoption-ast-indent"], [250, "cmdoption-json.tool-indent"]], "--mode": [[116, "cmdoption-ast-mode"]], "--no-type-comments": [[116, "cmdoption-ast-no-type-comments"]], "-a": [[116, "cmdoption-ast-a"], [283, "cmdoption-pickletools-a"]], "-i": [[116, "cmdoption-ast-i"], [153, "cmdoption-compileall-i"], [430, "cmdoption-I"], [430, "cmdoption-i"]], "-m": [[116, "cmdoption-ast-m"], [143, "cmdoption-calendar-months"], [283, "cmdoption-pickletools-m"], [357, "cmdoption-trace-m"], [396, "cmdoption-zipapp-m"], [430, "cmdoption-m"]], "ast (class in ast)": [[116, "ast.AST"]], "add (class in ast)": [[116, "ast.Add"]], "and (class in ast)": [[116, "ast.And"]], "annassign (class in ast)": [[116, "ast.AnnAssign"]], "assert (class in ast)": [[116, "ast.Assert"]], "assign (class in ast)": [[116, "ast.Assign"]], "asyncfor (class in ast)": [[116, "ast.AsyncFor"]], "asyncfunctiondef (class in ast)": [[116, "ast.AsyncFunctionDef"]], "asyncwith (class in ast)": [[116, "ast.AsyncWith"]], "attribute (class in ast)": [[116, "ast.Attribute"]], "augassign (class in ast)": [[116, "ast.AugAssign"]], "await (class in ast)": [[116, "ast.Await"]], "binop (class in ast)": [[116, "ast.BinOp"]], "bitand (class in ast)": [[116, "ast.BitAnd"]], "bitor (class in ast)": [[116, "ast.BitOr"]], "bitxor (class in ast)": [[116, "ast.BitXor"]], "boolop (class in ast)": [[116, "ast.BoolOp"]], "break (class in ast)": [[116, "ast.Break"]], "call (class in ast)": [[116, "ast.Call"]], "classdef (class in ast)": [[116, "ast.ClassDef"]], "compare (class in ast)": [[116, "ast.Compare"]], "constant (class in ast)": [[116, "ast.Constant"]], "continue (class in ast)": [[116, "ast.Continue"]], "del (class in ast)": [[116, "ast.Del"]], "delete (class in ast)": [[116, "ast.Delete"]], "dict (class in ast)": [[116, "ast.Dict"]], "dictcomp (class in ast)": [[116, "ast.DictComp"]], "div (class in ast)": [[116, "ast.Div"]], "eq (class in ast)": [[116, "ast.Eq"]], "excepthandler (class in ast)": [[116, "ast.ExceptHandler"]], "expr (class in ast)": [[116, "ast.Expr"]], "expression (class in ast)": [[116, "ast.Expression"]], "floordiv (class in ast)": [[116, "ast.FloorDiv"]], "for (class in ast)": [[116, "ast.For"]], "formattedvalue (class in ast)": [[116, "ast.FormattedValue"]], "functiondef (class in ast)": [[116, "ast.FunctionDef"]], "functiontype (class in ast)": [[116, "ast.FunctionType"]], "generatorexp (class in ast)": [[116, "ast.GeneratorExp"]], "global (class in ast)": [[116, "ast.Global"]], "gt (class in ast)": [[116, "ast.Gt"]], "gte (class in ast)": [[116, "ast.GtE"]], "if (class in ast)": [[116, "ast.If"]], "ifexp (class in ast)": [[116, "ast.IfExp"]], "import (class in ast)": [[116, "ast.Import"]], "importfrom (class in ast)": [[116, "ast.ImportFrom"]], "in (class in ast)": [[116, "ast.In"]], "interactive (class in ast)": [[116, "ast.Interactive"]], "invert (class in ast)": [[116, "ast.Invert"]], "is (class in ast)": [[116, "ast.Is"]], "isnot (class in ast)": [[116, "ast.IsNot"]], "joinedstr (class in ast)": [[116, "ast.JoinedStr"]], "lshift (class in ast)": [[116, "ast.LShift"]], "lambda (class in ast)": [[116, "ast.Lambda"]], "list (class in ast)": [[116, "ast.List"]], "listcomp (class in ast)": [[116, "ast.ListComp"]], "load (class in ast)": [[116, "ast.Load"]], "lt (class in ast)": [[116, "ast.Lt"]], "lte (class in ast)": [[116, "ast.LtE"]], "matmult (class in ast)": [[116, "ast.MatMult"]], "match (class in ast)": [[116, "ast.Match"]], "matchas (class in ast)": [[116, "ast.MatchAs"]], "matchclass (class in ast)": [[116, "ast.MatchClass"]], "matchmapping (class in ast)": [[116, "ast.MatchMapping"]], "matchor (class in ast)": [[116, "ast.MatchOr"]], "matchsequence (class in ast)": [[116, "ast.MatchSequence"]], "matchsingleton (class in ast)": [[116, "ast.MatchSingleton"]], "matchstar (class in ast)": [[116, "ast.MatchStar"]], "matchvalue (class in ast)": [[116, "ast.MatchValue"]], "mod (class in ast)": [[116, "ast.Mod"]], "module (class in ast)": [[116, "ast.Module"]], "mult (class in ast)": [[116, "ast.Mult"]], "name (class in ast)": [[116, "ast.Name"]], "namedexpr (class in ast)": [[116, "ast.NamedExpr"]], "nodetransformer (class in ast)": [[116, "ast.NodeTransformer"]], "nodevisitor (class in ast)": [[116, "ast.NodeVisitor"]], "nonlocal (class in ast)": [[116, "ast.Nonlocal"]], "not (class in ast)": [[116, "ast.Not"]], "noteq (class in ast)": [[116, "ast.NotEq"]], "notin (class in ast)": [[116, "ast.NotIn"]], "or (class in ast)": [[116, "ast.Or"]], "paramspec (class in ast)": [[116, "ast.ParamSpec"]], "pass (class in ast)": [[116, "ast.Pass"]], "pow (class in ast)": [[116, "ast.Pow"]], "pycf_allow_top_level_await (in module ast)": [[116, "ast.PyCF_ALLOW_TOP_LEVEL_AWAIT"]], "pycf_only_ast (in module ast)": [[116, "ast.PyCF_ONLY_AST"]], "pycf_type_comments (in module ast)": [[116, "ast.PyCF_TYPE_COMMENTS"]], "rshift (class in ast)": [[116, "ast.RShift"]], "raise (class in ast)": [[116, "ast.Raise"]], "return (class in ast)": [[116, "ast.Return"]], "set (class in ast)": [[116, "ast.Set"]], "setcomp (class in ast)": [[116, "ast.SetComp"]], "slice (class in ast)": [[116, "ast.Slice"]], "starred (class in ast)": [[116, "ast.Starred"]], "store (class in ast)": [[116, "ast.Store"]], "sub (class in ast)": [[116, "ast.Sub"]], "subscript (class in ast)": [[116, "ast.Subscript"]], "try (class in ast)": [[116, "ast.Try"]], "trystar (class in ast)": [[116, "ast.TryStar"]], "tuple (class in ast)": [[116, "ast.Tuple"]], "typealias (class in ast)": [[116, "ast.TypeAlias"]], "typevar (class in ast)": [[116, "ast.TypeVar"]], "typevartuple (class in ast)": [[116, "ast.TypeVarTuple"]], "uadd (class in ast)": [[116, "ast.UAdd"]], "usub (class in ast)": [[116, "ast.USub"]], "unaryop (class in ast)": [[116, "ast.UnaryOp"]], "while (class in ast)": [[116, "ast.While"]], "with (class in ast)": [[116, "ast.With"]], "yield (class in ast)": [[116, "ast.Yield"]], "yieldfrom (class in ast)": [[116, "ast.YieldFrom"]], "_fields (ast.ast attribute)": [[116, "ast.AST._fields"]], "alias (class in ast)": [[116, "ast.alias"]], "arg (class in ast)": [[116, "ast.arg"]], "arguments (class in ast)": [[116, "ast.arguments"]], "ast": [[116, "module-ast"]], "ast command line option": [[116, "cmdoption-ast-a"], [116, "cmdoption-ast-h"], [116, "cmdoption-ast-i"], [116, "cmdoption-ast-indent"], [116, "cmdoption-ast-m"], [116, "cmdoption-ast-mode"], [116, "cmdoption-ast-no-type-comments"]], "col_offset (ast.ast attribute)": [[116, "ast.AST.col_offset"]], "comprehension (class in ast)": [[116, "ast.comprehension"]], "copy_location() (in module ast)": [[116, "ast.copy_location"]], "dump() (in module ast)": [[116, "ast.dump"]], "end_col_offset (ast.ast attribute)": [[116, "ast.AST.end_col_offset"]], "end_lineno (ast.ast attribute)": [[116, "ast.AST.end_lineno"]], "fix_missing_locations() (in module ast)": [[116, "ast.fix_missing_locations"]], "generic_visit() (ast.nodevisitor method)": [[116, "ast.NodeVisitor.generic_visit"]], "get_docstring() (in module ast)": [[116, "ast.get_docstring"]], "get_source_segment() (in module ast)": [[116, "ast.get_source_segment"]], "in ast grammar": [[116, "index-0"], [116, "index-1"]], "increment_lineno() (in module ast)": [[116, "ast.increment_lineno"]], "iter_child_nodes() (in module ast)": [[116, "ast.iter_child_nodes"]], "iter_fields() (in module ast)": [[116, "ast.iter_fields"]], "keyword (class in ast)": [[116, "ast.keyword"]], "lineno (ast.ast attribute)": [[116, "ast.AST.lineno"]], "literal_eval() (in module ast)": [[116, "ast.literal_eval"]], "match_case (class in ast)": [[116, "ast.match_case"]], "parse() (in module ast)": [[116, "ast.parse"]], "type_comment (ast.assign attribute)": [[116, "ast.Assign.type_comment"]], "type_comment (ast.for attribute)": [[116, "ast.For.type_comment"]], "type_comment (ast.functiondef attribute)": [[116, "ast.FunctionDef.type_comment"]], "type_comment (ast.with attribute)": [[116, "ast.With.type_comment"]], "type_comment (ast.arg attribute)": [[116, "ast.arg.type_comment"]], "unparse() (in module ast)": [[116, "ast.unparse"]], "visit() (ast.nodevisitor method)": [[116, "ast.NodeVisitor.visit"]], "walk() (in module ast)": [[116, "ast.walk"]], "withitem (class in ast)": [[116, "ast.withitem"]], "asyncio": [[117, "module-asyncio"]], "pythonasynciodebug": [[119, "index-0"], [120, "index-5"], [177, "index-5"], [430, "envvar-PYTHONASYNCIODEBUG"]], "abstracteventloop (class in asyncio)": [[120, "asyncio.AbstractEventLoop"]], "handle (class in asyncio)": [[120, "asyncio.Handle"]], "pep 567": [[120, "index-0"], [120, "index-1"], [120, "index-2"], [123, "index-0"], [160, "index-0"], [456, "index-28"], [456, "index-30"]], "proactoreventloop (class in asyncio)": [[120, "asyncio.ProactorEventLoop"]], "rfc 8305": [[120, "index-3"], [120, "index-4"]], "selectoreventloop (class in asyncio)": [[120, "asyncio.SelectorEventLoop"]], "server (class in asyncio)": [[120, "asyncio.Server"]], "timerhandle (class in asyncio)": [[120, "asyncio.TimerHandle"]], "add_reader() (asyncio.loop method)": [[120, "asyncio.loop.add_reader"]], "add_signal_handler() (asyncio.loop method)": [[120, "asyncio.loop.add_signal_handler"]], "add_writer() (asyncio.loop method)": [[120, "asyncio.loop.add_writer"]], "call_at() (asyncio.loop method)": [[120, "asyncio.loop.call_at"]], "call_exception_handler() (asyncio.loop method)": [[120, "asyncio.loop.call_exception_handler"]], "call_later() (asyncio.loop method)": [[120, "asyncio.loop.call_later"]], "call_soon() (asyncio.loop method)": [[120, "asyncio.loop.call_soon"]], "call_soon_threadsafe() (asyncio.loop method)": [[120, "asyncio.loop.call_soon_threadsafe"]], "cancel() (asyncio.handle method)": [[120, "asyncio.Handle.cancel"]], "cancelled() (asyncio.handle method)": [[120, "asyncio.Handle.cancelled"]], "close() (asyncio.server method)": [[120, "asyncio.Server.close"]], "close() (asyncio.loop method)": [[120, "asyncio.loop.close"]], "connect_accepted_socket() (asyncio.loop method)": [[120, "asyncio.loop.connect_accepted_socket"]], "connect_read_pipe() (asyncio.loop method)": [[120, "asyncio.loop.connect_read_pipe"]], "connect_write_pipe() (asyncio.loop method)": [[120, "asyncio.loop.connect_write_pipe"]], "create_connection() (asyncio.loop method)": [[120, "asyncio.loop.create_connection"]], "create_datagram_endpoint() (asyncio.loop method)": [[120, "asyncio.loop.create_datagram_endpoint"]], "create_future() (asyncio.loop method)": [[120, "asyncio.loop.create_future"]], "create_server() (asyncio.loop method)": [[120, "asyncio.loop.create_server"]], "create_task() (asyncio.loop method)": [[120, "asyncio.loop.create_task"]], "create_unix_connection() (asyncio.loop method)": [[120, "asyncio.loop.create_unix_connection"]], "create_unix_server() (asyncio.loop method)": [[120, "asyncio.loop.create_unix_server"]], "default_exception_handler() (asyncio.loop method)": [[120, "asyncio.loop.default_exception_handler"]], "get_context() (asyncio.handle method)": [[120, "asyncio.Handle.get_context"]], "get_debug() (asyncio.loop method)": [[120, "asyncio.loop.get_debug"]], "get_event_loop() (in module asyncio)": [[120, "asyncio.get_event_loop"]], "get_exception_handler() (asyncio.loop method)": [[120, "asyncio.loop.get_exception_handler"]], "get_loop() (asyncio.server method)": [[120, "asyncio.Server.get_loop"]], "get_running_loop() (in module asyncio)": [[120, "asyncio.get_running_loop"]], "get_task_factory() (asyncio.loop method)": [[120, "asyncio.loop.get_task_factory"]], "getaddrinfo() (asyncio.loop method)": [[120, "asyncio.loop.getaddrinfo"]], "getnameinfo() (asyncio.loop method)": [[120, "asyncio.loop.getnameinfo"]], "is_closed() (asyncio.loop method)": [[120, "asyncio.loop.is_closed"]], "is_running() (asyncio.loop method)": [[120, "asyncio.loop.is_running"]], "is_serving() (asyncio.server method)": [[120, "asyncio.Server.is_serving"]], "new_event_loop() (in module asyncio)": [[120, "asyncio.new_event_loop"]], "remove_reader() (asyncio.loop method)": [[120, "asyncio.loop.remove_reader"]], "remove_signal_handler() (asyncio.loop method)": [[120, "asyncio.loop.remove_signal_handler"]], "remove_writer() (asyncio.loop method)": [[120, "asyncio.loop.remove_writer"]], "run_forever() (asyncio.loop method)": [[120, "asyncio.loop.run_forever"]], "run_in_executor() (asyncio.loop method)": [[120, "asyncio.loop.run_in_executor"]], "run_until_complete() (asyncio.loop method)": [[120, "asyncio.loop.run_until_complete"]], "sendfile() (asyncio.loop method)": [[120, "asyncio.loop.sendfile"]], "serve_forever() (asyncio.server method)": [[120, "asyncio.Server.serve_forever"]], "set_debug() (asyncio.loop method)": [[120, "asyncio.loop.set_debug"]], "set_default_executor() (asyncio.loop method)": [[120, "asyncio.loop.set_default_executor"]], "set_event_loop() (in module asyncio)": [[120, "asyncio.set_event_loop"]], "set_exception_handler() (asyncio.loop method)": [[120, "asyncio.loop.set_exception_handler"]], "set_task_factory() (asyncio.loop method)": [[120, "asyncio.loop.set_task_factory"]], "shutdown_asyncgens() (asyncio.loop method)": [[120, "asyncio.loop.shutdown_asyncgens"]], "shutdown_default_executor() (asyncio.loop method)": [[120, "asyncio.loop.shutdown_default_executor"]], "sock_accept() (asyncio.loop method)": [[120, "asyncio.loop.sock_accept"]], "sock_connect() (asyncio.loop method)": [[120, "asyncio.loop.sock_connect"]], "sock_recv() (asyncio.loop method)": [[120, "asyncio.loop.sock_recv"]], "sock_recv_into() (asyncio.loop method)": [[120, "asyncio.loop.sock_recv_into"]], "sock_recvfrom() (asyncio.loop method)": [[120, "asyncio.loop.sock_recvfrom"]], "sock_recvfrom_into() (asyncio.loop method)": [[120, "asyncio.loop.sock_recvfrom_into"]], "sock_sendall() (asyncio.loop method)": [[120, "asyncio.loop.sock_sendall"]], "sock_sendfile() (asyncio.loop method)": [[120, "asyncio.loop.sock_sendfile"]], "sock_sendto() (asyncio.loop method)": [[120, "asyncio.loop.sock_sendto"]], "sockets (asyncio.server attribute)": [[120, "asyncio.Server.sockets"]], "start_serving() (asyncio.server method)": [[120, "asyncio.Server.start_serving"]], "start_tls() (asyncio.loop method)": [[120, "asyncio.loop.start_tls"]], "stop() (asyncio.loop method)": [[120, "asyncio.loop.stop"]], "subprocess_exec() (asyncio.loop method)": [[120, "asyncio.loop.subprocess_exec"]], "subprocess_shell() (asyncio.loop method)": [[120, "asyncio.loop.subprocess_shell"]], "time() (asyncio.loop method)": [[120, "asyncio.loop.time"]], "wait_closed() (asyncio.server method)": [[120, "asyncio.Server.wait_closed"]], "when() (asyncio.timerhandle method)": [[120, "asyncio.TimerHandle.when"]], "cancellederror": [[121, "asyncio.CancelledError"], [156, "concurrent.futures.CancelledError"]], "incompletereaderror": [[121, "asyncio.IncompleteReadError"]], "invalidstateerror": [[121, "asyncio.InvalidStateError"], [156, "concurrent.futures.InvalidStateError"]], "limitoverrunerror": [[121, "asyncio.LimitOverrunError"]], "sendfilenotavailableerror": [[121, "asyncio.SendfileNotAvailableError"]], "timeouterror": [[121, "asyncio.TimeoutError"], [156, "concurrent.futures.TimeoutError"], [202, "TimeoutError"], [269, "multiprocessing.TimeoutError"]], "consumed (asyncio.limitoverrunerror attribute)": [[121, "asyncio.LimitOverrunError.consumed"]], "expected (asyncio.incompletereaderror attribute)": [[121, "asyncio.IncompleteReadError.expected"]], "partial (asyncio.incompletereaderror attribute)": [[121, "asyncio.IncompleteReadError.partial"]], "__init__() (asyncio.future method)": [[122, "asyncio.Future.__init__"]], "__init__() (asyncio.task method)": [[122, "asyncio.Task.__init__"]], "_enter_task() (in module asyncio)": [[122, "asyncio._enter_task"]], "_leave_task() (in module asyncio)": [[122, "asyncio._leave_task"]], "_register_task() (in module asyncio)": [[122, "asyncio._register_task"]], "_unregister_task() (in module asyncio)": [[122, "asyncio._unregister_task"]], "future (class in asyncio)": [[123, "asyncio.Future"]], "add_done_callback() (asyncio.future method)": [[123, "asyncio.Future.add_done_callback"]], "cancel() (asyncio.future method)": [[123, "asyncio.Future.cancel"]], "cancelled() (asyncio.future method)": [[123, "asyncio.Future.cancelled"]], "done() (asyncio.future method)": [[123, "asyncio.Future.done"]], "ensure_future() (in module asyncio)": [[123, "asyncio.ensure_future"]], "exception() (asyncio.future method)": [[123, "asyncio.Future.exception"]], "get_loop() (asyncio.future method)": [[123, "asyncio.Future.get_loop"]], "isfuture() (in module asyncio)": [[123, "asyncio.isfuture"]], "remove_done_callback() (asyncio.future method)": [[123, "asyncio.Future.remove_done_callback"]], "result() (asyncio.future method)": [[123, "asyncio.Future.result"]], "set_exception() (asyncio.future method)": [[123, "asyncio.Future.set_exception"]], "set_result() (asyncio.future method)": [[123, "asyncio.Future.set_result"]], "wrap_future() (in module asyncio)": [[123, "asyncio.wrap_future"]], "abstractchildwatcher (class in asyncio)": [[126, "asyncio.AbstractChildWatcher"]], "abstracteventlooppolicy (class in asyncio)": [[126, "asyncio.AbstractEventLoopPolicy"]], "defaulteventlooppolicy (class in asyncio)": [[126, "asyncio.DefaultEventLoopPolicy"]], "fastchildwatcher (class in asyncio)": [[126, "asyncio.FastChildWatcher"]], "multiloopchildwatcher (class in asyncio)": [[126, "asyncio.MultiLoopChildWatcher"]], "pidfdchildwatcher (class in asyncio)": [[126, "asyncio.PidfdChildWatcher"]], "safechildwatcher (class in asyncio)": [[126, "asyncio.SafeChildWatcher"]], "threadedchildwatcher (class in asyncio)": [[126, "asyncio.ThreadedChildWatcher"]], "windowsproactoreventlooppolicy (class in asyncio)": [[126, "asyncio.WindowsProactorEventLoopPolicy"]], "windowsselectoreventlooppolicy (class in asyncio)": [[126, "asyncio.WindowsSelectorEventLoopPolicy"]], "add_child_handler() (asyncio.abstractchildwatcher method)": [[126, "asyncio.AbstractChildWatcher.add_child_handler"]], "attach_loop() (asyncio.abstractchildwatcher method)": [[126, "asyncio.AbstractChildWatcher.attach_loop"]], "close() (asyncio.abstractchildwatcher method)": [[126, "asyncio.AbstractChildWatcher.close"]], "get_child_watcher() (asyncio.abstracteventlooppolicy method)": [[126, "asyncio.AbstractEventLoopPolicy.get_child_watcher"]], "get_child_watcher() (in module asyncio)": [[126, "asyncio.get_child_watcher"]], "get_event_loop() (asyncio.abstracteventlooppolicy method)": [[126, "asyncio.AbstractEventLoopPolicy.get_event_loop"]], "get_event_loop_policy() (in module asyncio)": [[126, "asyncio.get_event_loop_policy"]], "is_active() (asyncio.abstractchildwatcher method)": [[126, "asyncio.AbstractChildWatcher.is_active"]], "new_event_loop() (asyncio.abstracteventlooppolicy method)": [[126, "asyncio.AbstractEventLoopPolicy.new_event_loop"]], "remove_child_handler() (asyncio.abstractchildwatcher method)": [[126, "asyncio.AbstractChildWatcher.remove_child_handler"]], "set_child_watcher() (asyncio.abstracteventlooppolicy method)": [[126, "asyncio.AbstractEventLoopPolicy.set_child_watcher"]], "set_child_watcher() (in module asyncio)": [[126, "asyncio.set_child_watcher"]], "set_event_loop() (asyncio.abstracteventlooppolicy method)": [[126, "asyncio.AbstractEventLoopPolicy.set_event_loop"]], "set_event_loop_policy() (in module asyncio)": [[126, "asyncio.set_event_loop_policy"]], "baseprotocol (class in asyncio)": [[127, "asyncio.BaseProtocol"]], "basetransport (class in asyncio)": [[127, "asyncio.BaseTransport"]], "bufferedprotocol (class in asyncio)": [[127, "asyncio.BufferedProtocol"]], "datagramprotocol (class in asyncio)": [[127, "asyncio.DatagramProtocol"]], "datagramtransport (class in asyncio)": [[127, "asyncio.DatagramTransport"]], "protocol (class in asyncio)": [[127, "asyncio.Protocol"]], "readtransport (class in asyncio)": [[127, "asyncio.ReadTransport"]], "subprocessprotocol (class in asyncio)": [[127, "asyncio.SubprocessProtocol"]], "subprocesstransport (class in asyncio)": [[127, "asyncio.SubprocessTransport"]], "transport (class in asyncio)": [[127, "asyncio.Transport"]], "writetransport (class in asyncio)": [[127, "asyncio.WriteTransport"]], "abort() (asyncio.datagramtransport method)": [[127, "asyncio.DatagramTransport.abort"]], "abort() (asyncio.writetransport method)": [[127, "asyncio.WriteTransport.abort"]], "buffer_updated() (asyncio.bufferedprotocol method)": [[127, "asyncio.BufferedProtocol.buffer_updated"]], "can_write_eof() (asyncio.writetransport method)": [[127, "asyncio.WriteTransport.can_write_eof"]], "close() (asyncio.basetransport method)": [[127, "asyncio.BaseTransport.close"]], "close() (asyncio.subprocesstransport method)": [[127, "asyncio.SubprocessTransport.close"]], "connection_lost() (asyncio.baseprotocol method)": [[127, "asyncio.BaseProtocol.connection_lost"]], "connection_made() (asyncio.baseprotocol method)": [[127, "asyncio.BaseProtocol.connection_made"]], "data_received() (asyncio.protocol method)": [[127, "asyncio.Protocol.data_received"]], "datagram_received() (asyncio.datagramprotocol method)": [[127, "asyncio.DatagramProtocol.datagram_received"]], "eof_received() (asyncio.bufferedprotocol method)": [[127, "asyncio.BufferedProtocol.eof_received"]], "eof_received() (asyncio.protocol method)": [[127, "asyncio.Protocol.eof_received"]], "error_received() (asyncio.datagramprotocol method)": [[127, "asyncio.DatagramProtocol.error_received"]], "get_buffer() (asyncio.bufferedprotocol method)": [[127, "asyncio.BufferedProtocol.get_buffer"]], "get_extra_info() (asyncio.basetransport method)": [[127, "asyncio.BaseTransport.get_extra_info"]], "get_pid() (asyncio.subprocesstransport method)": [[127, "asyncio.SubprocessTransport.get_pid"]], "get_pipe_transport() (asyncio.subprocesstransport method)": [[127, "asyncio.SubprocessTransport.get_pipe_transport"]], "get_protocol() (asyncio.basetransport method)": [[127, "asyncio.BaseTransport.get_protocol"]], "get_returncode() (asyncio.subprocesstransport method)": [[127, "asyncio.SubprocessTransport.get_returncode"]], "get_write_buffer_limits() (asyncio.writetransport method)": [[127, "asyncio.WriteTransport.get_write_buffer_limits"]], "get_write_buffer_size() (asyncio.writetransport method)": [[127, "asyncio.WriteTransport.get_write_buffer_size"]], "is_closing() (asyncio.basetransport method)": [[127, "asyncio.BaseTransport.is_closing"]], "is_reading() (asyncio.readtransport method)": [[127, "asyncio.ReadTransport.is_reading"]], "kill() (asyncio.subprocesstransport method)": [[127, "asyncio.SubprocessTransport.kill"]], "pause_reading() (asyncio.readtransport method)": [[127, "asyncio.ReadTransport.pause_reading"]], "pause_writing() (asyncio.baseprotocol method)": [[127, "asyncio.BaseProtocol.pause_writing"]], "pipe_connection_lost() (asyncio.subprocessprotocol method)": [[127, "asyncio.SubprocessProtocol.pipe_connection_lost"]], "pipe_data_received() (asyncio.subprocessprotocol method)": [[127, "asyncio.SubprocessProtocol.pipe_data_received"]], "process_exited() (asyncio.subprocessprotocol method)": [[127, "asyncio.SubprocessProtocol.process_exited"]], "resume_reading() (asyncio.readtransport method)": [[127, "asyncio.ReadTransport.resume_reading"]], "resume_writing() (asyncio.baseprotocol method)": [[127, "asyncio.BaseProtocol.resume_writing"]], "send_signal() (asyncio.subprocesstransport method)": [[127, "asyncio.SubprocessTransport.send_signal"]], "sendto() (asyncio.datagramtransport method)": [[127, "asyncio.DatagramTransport.sendto"]], "set_protocol() (asyncio.basetransport method)": [[127, "asyncio.BaseTransport.set_protocol"]], "set_write_buffer_limits() (asyncio.writetransport method)": [[127, "asyncio.WriteTransport.set_write_buffer_limits"]], "terminate() (asyncio.subprocesstransport method)": [[127, "asyncio.SubprocessTransport.terminate"]], "write() (asyncio.writetransport method)": [[127, "asyncio.WriteTransport.write"]], "write_eof() (asyncio.writetransport method)": [[127, "asyncio.WriteTransport.write_eof"]], "writelines() (asyncio.writetransport method)": [[127, "asyncio.WriteTransport.writelines"]], "lifoqueue (class in asyncio)": [[128, "asyncio.LifoQueue"]], "priorityqueue (class in asyncio)": [[128, "asyncio.PriorityQueue"]], "queue (class in asyncio)": [[128, "asyncio.Queue"]], "queueempty": [[128, "asyncio.QueueEmpty"]], "queuefull": [[128, "asyncio.QueueFull"]], "empty() (asyncio.queue method)": [[128, "asyncio.Queue.empty"]], "full() (asyncio.queue method)": [[128, "asyncio.Queue.full"]], "get() (asyncio.queue method)": [[128, "asyncio.Queue.get"]], "get_nowait() (asyncio.queue method)": [[128, "asyncio.Queue.get_nowait"]], "join() (asyncio.queue method)": [[128, "asyncio.Queue.join"]], "maxsize (asyncio.queue attribute)": [[128, "asyncio.Queue.maxsize"]], "put() (asyncio.queue method)": [[128, "asyncio.Queue.put"]], "put_nowait() (asyncio.queue method)": [[128, "asyncio.Queue.put_nowait"]], "qsize() (asyncio.queue method)": [[128, "asyncio.Queue.qsize"]], "task_done() (asyncio.queue method)": [[128, "asyncio.Queue.task_done"]], "runner (class in asyncio)": [[129, "asyncio.Runner"]], "close() (asyncio.runner method)": [[129, "asyncio.Runner.close"]], "get_loop() (asyncio.runner method)": [[129, "asyncio.Runner.get_loop"]], "run() (asyncio.runner method)": [[129, "asyncio.Runner.run"]], "run() (in module asyncio)": [[129, "asyncio.run"]], "streamreader (class in asyncio)": [[130, "asyncio.StreamReader"]], "streamwriter (class in asyncio)": [[130, "asyncio.StreamWriter"]], "at_eof() (asyncio.streamreader method)": [[130, "asyncio.StreamReader.at_eof"]], "can_write_eof() (asyncio.streamwriter method)": [[130, "asyncio.StreamWriter.can_write_eof"]], "close() (asyncio.streamwriter method)": [[130, "asyncio.StreamWriter.close"]], "drain() (asyncio.streamwriter method)": [[130, "asyncio.StreamWriter.drain"]], "get_extra_info() (asyncio.streamwriter method)": [[130, "asyncio.StreamWriter.get_extra_info"]], "is_closing() (asyncio.streamwriter method)": [[130, "asyncio.StreamWriter.is_closing"]], "open_connection() (in module asyncio)": [[130, "asyncio.open_connection"]], "open_unix_connection() (in module asyncio)": [[130, "asyncio.open_unix_connection"]], "read() (asyncio.streamreader method)": [[130, "asyncio.StreamReader.read"]], "readexactly() (asyncio.streamreader method)": [[130, "asyncio.StreamReader.readexactly"]], "readline() (asyncio.streamreader method)": [[130, "asyncio.StreamReader.readline"]], "readuntil() (asyncio.streamreader method)": [[130, "asyncio.StreamReader.readuntil"]], "start_server() (in module asyncio)": [[130, "asyncio.start_server"]], "start_tls() (asyncio.streamwriter method)": [[130, "asyncio.StreamWriter.start_tls"]], "start_unix_server() (in module asyncio)": [[130, "asyncio.start_unix_server"]], "transport (asyncio.streamwriter attribute)": [[130, "asyncio.StreamWriter.transport"]], "wait_closed() (asyncio.streamwriter method)": [[130, "asyncio.StreamWriter.wait_closed"]], "write() (asyncio.streamwriter method)": [[130, "asyncio.StreamWriter.write"]], "write_eof() (asyncio.streamwriter method)": [[130, "asyncio.StreamWriter.write_eof"]], "writelines() (asyncio.streamwriter method)": [[130, "asyncio.StreamWriter.writelines"]], "asyncio.subprocess.devnull (built-in variable)": [[131, "asyncio.subprocess.DEVNULL"]], "asyncio.subprocess.pipe (built-in variable)": [[131, "asyncio.subprocess.PIPE"]], "asyncio.subprocess.process (built-in class)": [[131, "asyncio.subprocess.Process"]], "asyncio.subprocess.stdout (built-in variable)": [[131, "asyncio.subprocess.STDOUT"]], "communicate() (asyncio.subprocess.process method)": [[131, "asyncio.subprocess.Process.communicate"]], "create_subprocess_exec() (in module asyncio)": [[131, "asyncio.create_subprocess_exec"]], "create_subprocess_shell() (in module asyncio)": [[131, "asyncio.create_subprocess_shell"]], "kill() (asyncio.subprocess.process method)": [[131, "asyncio.subprocess.Process.kill"]], "pid (asyncio.subprocess.process attribute)": [[131, "asyncio.subprocess.Process.pid"]], "returncode (asyncio.subprocess.process attribute)": [[131, "asyncio.subprocess.Process.returncode"]], "send_signal() (asyncio.subprocess.process method)": [[131, "asyncio.subprocess.Process.send_signal"]], "stderr (asyncio.subprocess.process attribute)": [[131, "asyncio.subprocess.Process.stderr"]], "stdin (asyncio.subprocess.process attribute)": [[131, "asyncio.subprocess.Process.stdin"]], "stdout (asyncio.subprocess.process attribute)": [[131, "asyncio.subprocess.Process.stdout"]], "terminate() (asyncio.subprocess.process method)": [[131, "asyncio.subprocess.Process.terminate"]], "wait() (asyncio.subprocess.process method)": [[131, "asyncio.subprocess.Process.wait"]], "barrier (class in asyncio)": [[132, "asyncio.Barrier"]], "boundedsemaphore (class in asyncio)": [[132, "asyncio.BoundedSemaphore"]], "brokenbarriererror": [[132, "asyncio.BrokenBarrierError"], [343, "threading.BrokenBarrierError"]], "condition (class in asyncio)": [[132, "asyncio.Condition"]], "event (class in asyncio)": [[132, "asyncio.Event"]], "lock (class in asyncio)": [[132, "asyncio.Lock"]], "semaphore (class in asyncio)": [[132, "asyncio.Semaphore"]], "abort() (asyncio.barrier method)": [[132, "asyncio.Barrier.abort"]], "acquire() (asyncio.condition method)": [[132, "asyncio.Condition.acquire"]], "acquire() (asyncio.lock method)": [[132, "asyncio.Lock.acquire"]], "acquire() (asyncio.semaphore method)": [[132, "asyncio.Semaphore.acquire"]], "broken (asyncio.barrier attribute)": [[132, "asyncio.Barrier.broken"]], "clear() (asyncio.event method)": [[132, "asyncio.Event.clear"]], "is_set() (asyncio.event method)": [[132, "asyncio.Event.is_set"]], "locked() (asyncio.condition method)": [[132, "asyncio.Condition.locked"]], "locked() (asyncio.lock method)": [[132, "asyncio.Lock.locked"]], "locked() (asyncio.semaphore method)": [[132, "asyncio.Semaphore.locked"]], "n_waiting (asyncio.barrier attribute)": [[132, "asyncio.Barrier.n_waiting"]], "notify() (asyncio.condition method)": [[132, "asyncio.Condition.notify"]], "notify_all() (asyncio.condition method)": [[132, "asyncio.Condition.notify_all"]], "parties (asyncio.barrier attribute)": [[132, "asyncio.Barrier.parties"]], "release() (asyncio.condition method)": [[132, "asyncio.Condition.release"]], "release() (asyncio.lock method)": [[132, "asyncio.Lock.release"]], "release() (asyncio.semaphore method)": [[132, "asyncio.Semaphore.release"]], "reset() (asyncio.barrier method)": [[132, "asyncio.Barrier.reset"]], "set() (asyncio.event method)": [[132, "asyncio.Event.set"]], "wait() (asyncio.barrier method)": [[132, "asyncio.Barrier.wait"]], "wait() (asyncio.condition method)": [[132, "asyncio.Condition.wait"]], "wait() (asyncio.event method)": [[132, "asyncio.Event.wait"]], "wait_for() (asyncio.condition method)": [[132, "asyncio.Condition.wait_for"]], "task (class in asyncio)": [[133, "asyncio.Task"]], "taskgroup (class in asyncio)": [[133, "asyncio.TaskGroup"]], "timeout (class in asyncio)": [[133, "asyncio.Timeout"]], "add_done_callback() (asyncio.task method)": [[133, "asyncio.Task.add_done_callback"]], "all_tasks() (in module asyncio)": [[133, "asyncio.all_tasks"]], "as_completed() (in module asyncio)": [[133, "asyncio.as_completed"]], "cancel() (asyncio.task method)": [[133, "asyncio.Task.cancel"]], "cancelled() (asyncio.task method)": [[133, "asyncio.Task.cancelled"]], "cancelling() (asyncio.task method)": [[133, "asyncio.Task.cancelling"]], "create_eager_task_factory() (in module asyncio)": [[133, "asyncio.create_eager_task_factory"]], "create_task() (asyncio.taskgroup method)": [[133, "asyncio.TaskGroup.create_task"]], "create_task() (in module asyncio)": [[133, "asyncio.create_task"]], "current_task() (in module asyncio)": [[133, "asyncio.current_task"]], "done() (asyncio.task method)": [[133, "asyncio.Task.done"]], "eager_task_factory() (in module asyncio)": [[133, "asyncio.eager_task_factory"]], "exception() (asyncio.task method)": [[133, "asyncio.Task.exception"]], "expired() (asyncio.timeout method)": [[133, "asyncio.Timeout.expired"]], "gather() (in module asyncio)": [[133, "asyncio.gather"]], "get_context() (asyncio.task method)": [[133, "asyncio.Task.get_context"]], "get_coro() (asyncio.task method)": [[133, "asyncio.Task.get_coro"]], "get_name() (asyncio.task method)": [[133, "asyncio.Task.get_name"]], "get_stack() (asyncio.task method)": [[133, "asyncio.Task.get_stack"]], "iscoroutine() (in module asyncio)": [[133, "asyncio.iscoroutine"]], "print_stack() (asyncio.task method)": [[133, "asyncio.Task.print_stack"]], "remove_done_callback() (asyncio.task method)": [[133, "asyncio.Task.remove_done_callback"]], "reschedule() (asyncio.timeout method)": [[133, "asyncio.Timeout.reschedule"]], "result() (asyncio.task method)": [[133, "asyncio.Task.result"]], "run_coroutine_threadsafe() (in module asyncio)": [[133, "asyncio.run_coroutine_threadsafe"]], "set_name() (asyncio.task method)": [[133, "asyncio.Task.set_name"]], "shield() (in module asyncio)": [[133, "asyncio.shield"]], "sleep() (in module asyncio)": [[133, "asyncio.sleep"]], "timeout() (in module asyncio)": [[133, "asyncio.timeout"]], "timeout_at() (in module asyncio)": [[133, "asyncio.timeout_at"]], "to_thread() (in module asyncio)": [[133, "asyncio.to_thread"]], "uncancel() (asyncio.task method)": [[133, "asyncio.Task.uncancel"]], "wait() (in module asyncio)": [[133, "asyncio.wait"]], "wait_for() (in module asyncio)": [[133, "asyncio.wait_for"]], "when() (asyncio.timeout method)": [[133, "asyncio.Timeout.when"]], "atexit": [[134, "module-atexit"]], "register() (in module atexit)": [[134, "atexit.register"]], "unregister() (in module atexit)": [[134, "atexit.unregister"]], "audit events": [[135, "index-0"]], "mime": [[136, "index-0"], [263, "index-0"], [263, "index-1"], [299, "index-0"]], "rfc 1521": [[136, "index-12"], [299, "index-1"], [299, "index-3"]], "rfc 2045": [[136, "index-10"], [136, "index-4"], [136, "index-5"], [136, "index-9"], [183, "index-3"], [185, "index-4"], [185, "index-5"], [185, "index-6"], [185, "index-9"], [191, "index-4"], [192, "index-10"], [192, "index-9"], [194, "index-6"], [194, "index-7"], [194, "index-8"]], "rfc 4648": [[136, "index-1"], [136, "index-11"], [136, "index-2"], [136, "index-3"], [136, "index-6"], [136, "index-7"], [136, "index-8"], [309, "index-1"]], "a85decode() (in module base64)": [[136, "base64.a85decode"]], "a85encode() (in module base64)": [[136, "base64.a85encode"]], "b16decode() (in module base64)": [[136, "base64.b16decode"]], "b16encode() (in module base64)": [[136, "base64.b16encode"]], "b32decode() (in module base64)": [[136, "base64.b32decode"]], "b32encode() (in module base64)": [[136, "base64.b32encode"]], "b32hexdecode() (in module base64)": [[136, "base64.b32hexdecode"]], "b32hexencode() (in module base64)": [[136, "base64.b32hexencode"]], "b64decode() (in module base64)": [[136, "base64.b64decode"]], "b64encode() (in module base64)": [[136, "base64.b64encode"]], "b85decode() (in module base64)": [[136, "base64.b85decode"]], "b85encode() (in module base64)": [[136, "base64.b85encode"]], "base64": [[136, "index-0"], [136, "module-base64"], [139, "index-0"]], "base64 encoding": [[136, "index-0"]], "decode() (in module base64)": [[136, "base64.decode"]], "decodebytes() (in module base64)": [[136, "base64.decodebytes"]], "encode() (in module base64)": [[136, "base64.encode"]], "encodebytes() (in module base64)": [[136, "base64.encodebytes"]], "encoding": [[136, "index-0"], [299, "index-0"]], "standard_b64decode() (in module base64)": [[136, "base64.standard_b64decode"]], "standard_b64encode() (in module base64)": [[136, "base64.standard_b64encode"]], "urlsafe_b64decode() (in module base64)": [[136, "base64.urlsafe_b64decode"]], "urlsafe_b64encode() (in module base64)": [[136, "base64.urlsafe_b64encode"]], "bdb (class in bdb)": [[137, "bdb.Bdb"]], "bdbquit": [[137, "bdb.BdbQuit"]], "breakpoint (class in bdb)": [[137, "bdb.Breakpoint"]], "bdb": [[137, "module-bdb"], [280, "index-1"]], "bpbynumber (bdb.breakpoint attribute)": [[137, "bdb.Breakpoint.bpbynumber"]], "bpformat() (bdb.breakpoint method)": [[137, "bdb.Breakpoint.bpformat"]], "bplist (bdb.breakpoint attribute)": [[137, "bdb.Breakpoint.bplist"]], "bpprint() (bdb.breakpoint method)": [[137, "bdb.Breakpoint.bpprint"]], "break_anywhere() (bdb.bdb method)": [[137, "bdb.Bdb.break_anywhere"]], "break_here() (bdb.bdb method)": [[137, "bdb.Bdb.break_here"]], "canonic() (bdb.bdb method)": [[137, "bdb.Bdb.canonic"]], "checkfuncname() (in module bdb)": [[137, "bdb.checkfuncname"]], "clear_all_breaks() (bdb.bdb method)": [[137, "bdb.Bdb.clear_all_breaks"]], "clear_all_file_breaks() (bdb.bdb method)": [[137, "bdb.Bdb.clear_all_file_breaks"]], "clear_bpbynumber() (bdb.bdb method)": [[137, "bdb.Bdb.clear_bpbynumber"]], "clear_break() (bdb.bdb method)": [[137, "bdb.Bdb.clear_break"]], "cond (bdb.breakpoint attribute)": [[137, "bdb.Breakpoint.cond"]], "deleteme() (bdb.breakpoint method)": [[137, "bdb.Breakpoint.deleteMe"]], "disable() (bdb.breakpoint method)": [[137, "bdb.Breakpoint.disable"]], "dispatch_call() (bdb.bdb method)": [[137, "bdb.Bdb.dispatch_call"]], "dispatch_exception() (bdb.bdb method)": [[137, "bdb.Bdb.dispatch_exception"]], "dispatch_line() (bdb.bdb method)": [[137, "bdb.Bdb.dispatch_line"]], "dispatch_return() (bdb.bdb method)": [[137, "bdb.Bdb.dispatch_return"]], "do_clear() (bdb.bdb method)": [[137, "bdb.Bdb.do_clear"]], "effective() (in module bdb)": [[137, "bdb.effective"]], "enable() (bdb.breakpoint method)": [[137, "bdb.Breakpoint.enable"]], "enabled (bdb.breakpoint attribute)": [[137, "bdb.Breakpoint.enabled"]], "file (bdb.breakpoint attribute)": [[137, "bdb.Breakpoint.file"]], "format_stack_entry() (bdb.bdb method)": [[137, "bdb.Bdb.format_stack_entry"]], "funcname (bdb.breakpoint attribute)": [[137, "bdb.Breakpoint.funcname"]], "get_all_breaks() (bdb.bdb method)": [[137, "bdb.Bdb.get_all_breaks"]], "get_bpbynumber() (bdb.bdb method)": [[137, "bdb.Bdb.get_bpbynumber"]], "get_break() (bdb.bdb method)": [[137, "bdb.Bdb.get_break"]], "get_breaks() (bdb.bdb method)": [[137, "bdb.Bdb.get_breaks"]], "get_file_breaks() (bdb.bdb method)": [[137, "bdb.Bdb.get_file_breaks"]], "get_stack() (bdb.bdb method)": [[137, "bdb.Bdb.get_stack"]], "hits (bdb.breakpoint attribute)": [[137, "bdb.Breakpoint.hits"]], "ignore (bdb.breakpoint attribute)": [[137, "bdb.Breakpoint.ignore"]], "is_skipped_line() (bdb.bdb method)": [[137, "bdb.Bdb.is_skipped_line"]], "line (bdb.breakpoint attribute)": [[137, "bdb.Breakpoint.line"]], "reset() (bdb.bdb method)": [[137, "bdb.Bdb.reset"]], "run() (bdb.bdb method)": [[137, "bdb.Bdb.run"]], "runcall() (bdb.bdb method)": [[137, "bdb.Bdb.runcall"]], "runctx() (bdb.bdb method)": [[137, "bdb.Bdb.runctx"]], "runeval() (bdb.bdb method)": [[137, "bdb.Bdb.runeval"]], "set_break() (bdb.bdb method)": [[137, "bdb.Bdb.set_break"]], "set_continue() (bdb.bdb method)": [[137, "bdb.Bdb.set_continue"]], "set_next() (bdb.bdb method)": [[137, "bdb.Bdb.set_next"]], "set_quit() (bdb.bdb method)": [[137, "bdb.Bdb.set_quit"]], "set_return() (bdb.bdb method)": [[137, "bdb.Bdb.set_return"]], "set_step() (bdb.bdb method)": [[137, "bdb.Bdb.set_step"]], "set_trace() (bdb.bdb method)": [[137, "bdb.Bdb.set_trace"]], "set_trace() (in module bdb)": [[137, "bdb.set_trace"]], "set_until() (bdb.bdb method)": [[137, "bdb.Bdb.set_until"]], "stop_here() (bdb.bdb method)": [[137, "bdb.Bdb.stop_here"]], "temporary (bdb.breakpoint attribute)": [[137, "bdb.Breakpoint.temporary"]], "trace_dispatch() (bdb.bdb method)": [[137, "bdb.Bdb.trace_dispatch"]], "user_call() (bdb.bdb method)": [[137, "bdb.Bdb.user_call"]], "user_exception() (bdb.bdb method)": [[137, "bdb.Bdb.user_exception"]], "user_line() (bdb.bdb method)": [[137, "bdb.Bdb.user_line"]], "user_return() (bdb.bdb method)": [[137, "bdb.Bdb.user_return"]], "incomplete": [[139, "binascii.Incomplete"]], "rfc 1522": [[139, "index-3"], [299, "index-2"], [299, "index-4"]], "rfc 3548": [[139, "index-1"], [139, "index-2"], [441, "index-18"]], "a2b_base64() (in module binascii)": [[139, "binascii.a2b_base64"]], "a2b_hex() (in module binascii)": [[139, "binascii.a2b_hex"]], "a2b_qp() (in module binascii)": [[139, "binascii.a2b_qp"]], "a2b_uu() (in module binascii)": [[139, "binascii.a2b_uu"]], "b2a_base64() (in module binascii)": [[139, "binascii.b2a_base64"]], "b2a_hex() (in module binascii)": [[139, "binascii.b2a_hex"]], "b2a_qp() (in module binascii)": [[139, "binascii.b2a_qp"]], "b2a_uu() (in module binascii)": [[139, "binascii.b2a_uu"]], "binascii": [[139, "module-binascii"]], "crc32() (in module binascii)": [[139, "binascii.crc32"]], "crc_hqx() (in module binascii)": [[139, "binascii.crc_hqx"]], "hexlify() (in module binascii)": [[139, "binascii.hexlify"]], "unhexlify() (in module binascii)": [[139, "binascii.unhexlify"]], "bisect": [[140, "module-bisect"]], "bisect() (in module bisect)": [[140, "bisect.bisect"]], "bisect_left() (in module bisect)": [[140, "bisect.bisect_left"]], "bisect_right() (in module bisect)": [[140, "bisect.bisect_right"]], "insort() (in module bisect)": [[140, "bisect.insort"]], "insort_left() (in module bisect)": [[140, "bisect.insort_left"]], "insort_right() (in module bisect)": [[140, "bisect.insort_right"]], "bz2compressor (class in bz2)": [[142, "bz2.BZ2Compressor"]], "bz2decompressor (class in bz2)": [[142, "bz2.BZ2Decompressor"]], "bz2file (class in bz2)": [[142, "bz2.BZ2File"]], "bz2": [[142, "module-bz2"]], "compress() (bz2.bz2compressor method)": [[142, "bz2.BZ2Compressor.compress"]], "compress() (in module bz2)": [[142, "bz2.compress"]], "decompress() (bz2.bz2decompressor method)": [[142, "bz2.BZ2Decompressor.decompress"]], "decompress() (in module bz2)": [[142, "bz2.decompress"]], "eof (bz2.bz2decompressor attribute)": [[142, "bz2.BZ2Decompressor.eof"]], "flush() (bz2.bz2compressor method)": [[142, "bz2.BZ2Compressor.flush"]], "needs_input (bz2.bz2decompressor attribute)": [[142, "bz2.BZ2Decompressor.needs_input"]], "open() (in module bz2)": [[142, "bz2.open"]], "peek() (bz2.bz2file method)": [[142, "bz2.BZ2File.peek"]], "unused_data (bz2.bz2decompressor attribute)": [[142, "bz2.BZ2Decompressor.unused_data"]], "--css": [[143, "cmdoption-calendar-css"]], "--encoding": [[143, "cmdoption-calendar-encoding"]], "--lines": [[143, "cmdoption-calendar-lines"]], "--locale": [[143, "cmdoption-calendar-locale"]], "--months": [[143, "cmdoption-calendar-months"]], "--spacing": [[143, "cmdoption-calendar-spacing"]], "--type": [[143, "cmdoption-calendar-type"]], "--width": [[143, "cmdoption-calendar-width"]], "-l": [[143, "cmdoption-calendar-locale"], [143, "cmdoption-calendar-lines"], [153, "cmdoption-compileall-l"], [283, "cmdoption-pickletools-l"], [337, "cmdoption-tarfile-l"], [357, "cmdoption-trace-l"], [397, "cmdoption-zipfile-l"]], "-c": [[143, "cmdoption-calendar-css"], [337, "cmdoption-tarfile-c"], [357, "cmdoption-trace-C"], [357, "cmdoption-trace-c"], [365, "cmdoption-unittest-c"], [396, "cmdoption-zipapp-c"], [397, "cmdoption-zipfile-c"], [430, "cmdoption-c"]], "-e": [[143, "cmdoption-calendar-encoding"], [153, "cmdoption-compileall-e"], [337, "cmdoption-tarfile-e"], [355, "cmdoption-tokenize-e"], [397, "cmdoption-zipfile-e"], [430, "cmdoption-E"]], "-s": [[143, "cmdoption-calendar-spacing"], [153, "cmdoption-compileall-s"], [345, "cmdoption-timeit-s"], [357, "cmdoption-trace-s"], [365, "cmdoption-unittest-discover-s"], [430, "cmdoption-S"], [430, "cmdoption-s"]], "-t": [[143, "cmdoption-calendar-type"], [337, "cmdoption-tarfile-t"], [357, "cmdoption-trace-T"], [357, "cmdoption-trace-t"], [365, "cmdoption-unittest-discover-t"], [397, "cmdoption-zipfile-t"]], "-w": [[143, "cmdoption-calendar-width"], [430, "cmdoption-W"]], "april (in module calendar)": [[143, "calendar.APRIL"]], "august (in module calendar)": [[143, "calendar.AUGUST"]], "calendar (class in calendar)": [[143, "calendar.Calendar"]], "december (in module calendar)": [[143, "calendar.DECEMBER"]], "day (class in calendar)": [[143, "calendar.Day"]], "february (in module calendar)": [[143, "calendar.FEBRUARY"]], "friday (in module calendar)": [[143, "calendar.FRIDAY"]], "htmlcalendar (class in calendar)": [[143, "calendar.HTMLCalendar"]], "illegalmontherror": [[143, "calendar.IllegalMonthError"]], "illegalweekdayerror": [[143, "calendar.IllegalWeekdayError"]], "january (in module calendar)": [[143, "calendar.JANUARY"]], "july (in module calendar)": [[143, "calendar.JULY"]], "june (in module calendar)": [[143, "calendar.JUNE"]], "localehtmlcalendar (class in calendar)": [[143, "calendar.LocaleHTMLCalendar"]], "localetextcalendar (class in calendar)": [[143, "calendar.LocaleTextCalendar"]], "march (in module calendar)": [[143, "calendar.MARCH"]], "may (in module calendar)": [[143, "calendar.MAY"]], "monday (in module calendar)": [[143, "calendar.MONDAY"]], "month (class in calendar)": [[143, "calendar.Month"]], "november (in module calendar)": [[143, "calendar.NOVEMBER"]], "october (in module calendar)": [[143, "calendar.OCTOBER"]], "saturday (in module calendar)": [[143, "calendar.SATURDAY"]], "september (in module calendar)": [[143, "calendar.SEPTEMBER"]], "sunday (in module calendar)": [[143, "calendar.SUNDAY"]], "thursday (in module calendar)": [[143, "calendar.THURSDAY"]], "tuesday (in module calendar)": [[143, "calendar.TUESDAY"]], "textcalendar (class in calendar)": [[143, "calendar.TextCalendar"]], "wednesday (in module calendar)": [[143, "calendar.WEDNESDAY"]], "calendar": [[143, "module-calendar"]], "calendar command line option": [[143, "cmdoption-calendar-arg-month"], [143, "cmdoption-calendar-arg-year"], [143, "cmdoption-calendar-css"], [143, "cmdoption-calendar-encoding"], [143, "cmdoption-calendar-help"], [143, "cmdoption-calendar-lines"], [143, "cmdoption-calendar-locale"], [143, "cmdoption-calendar-months"], [143, "cmdoption-calendar-spacing"], [143, "cmdoption-calendar-type"], [143, "cmdoption-calendar-width"]], "calendar() (in module calendar)": [[143, "calendar.calendar"]], "cssclass_month (calendar.htmlcalendar attribute)": [[143, "calendar.HTMLCalendar.cssclass_month"]], "cssclass_month_head (calendar.htmlcalendar attribute)": [[143, "calendar.HTMLCalendar.cssclass_month_head"]], "cssclass_noday (calendar.htmlcalendar attribute)": [[143, "calendar.HTMLCalendar.cssclass_noday"]], "cssclass_year (calendar.htmlcalendar attribute)": [[143, "calendar.HTMLCalendar.cssclass_year"]], "cssclass_year_head (calendar.htmlcalendar attribute)": [[143, "calendar.HTMLCalendar.cssclass_year_head"]], "cssclasses (calendar.htmlcalendar attribute)": [[143, "calendar.HTMLCalendar.cssclasses"]], "cssclasses_weekday_head (calendar.htmlcalendar attribute)": [[143, "calendar.HTMLCalendar.cssclasses_weekday_head"]], "day_abbr (in module calendar)": [[143, "calendar.day_abbr"]], "day_name (in module calendar)": [[143, "calendar.day_name"]], "firstweekday() (in module calendar)": [[143, "calendar.firstweekday"]], "formatmonth() (calendar.htmlcalendar method)": [[143, "calendar.HTMLCalendar.formatmonth"]], "formatmonth() (calendar.textcalendar method)": [[143, "calendar.TextCalendar.formatmonth"]], "formatyear() (calendar.htmlcalendar method)": [[143, "calendar.HTMLCalendar.formatyear"]], "formatyear() (calendar.textcalendar method)": [[143, "calendar.TextCalendar.formatyear"]], "formatyearpage() (calendar.htmlcalendar method)": [[143, "calendar.HTMLCalendar.formatyearpage"]], "isleap() (in module calendar)": [[143, "calendar.isleap"]], "itermonthdates() (calendar.calendar method)": [[143, "calendar.Calendar.itermonthdates"]], "itermonthdays() (calendar.calendar method)": [[143, "calendar.Calendar.itermonthdays"]], "itermonthdays2() (calendar.calendar method)": [[143, "calendar.Calendar.itermonthdays2"]], "itermonthdays3() (calendar.calendar method)": [[143, "calendar.Calendar.itermonthdays3"]], "itermonthdays4() (calendar.calendar method)": [[143, "calendar.Calendar.itermonthdays4"]], "iterweekdays() (calendar.calendar method)": [[143, "calendar.Calendar.iterweekdays"]], "leapdays() (in module calendar)": [[143, "calendar.leapdays"]], "month": [[143, "cmdoption-calendar-arg-month"]], "month (calendar.illegalmontherror attribute)": [[143, "calendar.IllegalMonthError.month"]], "month() (in module calendar)": [[143, "calendar.month"]], "month_abbr (in module calendar)": [[143, "calendar.month_abbr"]], "month_name (in module calendar)": [[143, "calendar.month_name"]], "monthcalendar() (in module calendar)": [[143, "calendar.monthcalendar"]], "monthdatescalendar() (calendar.calendar method)": [[143, "calendar.Calendar.monthdatescalendar"]], "monthdays2calendar() (calendar.calendar method)": [[143, "calendar.Calendar.monthdays2calendar"]], "monthdayscalendar() (calendar.calendar method)": [[143, "calendar.Calendar.monthdayscalendar"]], "monthrange() (in module calendar)": [[143, "calendar.monthrange"]], "prcal() (in module calendar)": [[143, "calendar.prcal"]], "prmonth() (calendar.textcalendar method)": [[143, "calendar.TextCalendar.prmonth"]], "prmonth() (in module calendar)": [[143, "calendar.prmonth"]], "pryear() (calendar.textcalendar method)": [[143, "calendar.TextCalendar.pryear"]], "setfirstweekday() (in module calendar)": [[143, "calendar.setfirstweekday"]], "timegm() (in module calendar)": [[143, "calendar.timegm"]], "weekday (calendar.illegalweekdayerror attribute)": [[143, "calendar.IllegalWeekdayError.weekday"]], "weekday() (in module calendar)": [[143, "calendar.weekday"]], "weekheader() (in module calendar)": [[143, "calendar.weekheader"]], "year": [[143, "cmdoption-calendar-arg-year"]], "yeardatescalendar() (calendar.calendar method)": [[143, "calendar.Calendar.yeardatescalendar"]], "yeardays2calendar() (calendar.calendar method)": [[143, "calendar.Calendar.yeardays2calendar"]], "yeardayscalendar() (calendar.calendar method)": [[143, "calendar.Calendar.yeardayscalendar"]], "pep 485": [[144, "index-0"], [262, "index-0"], [454, "index-19"], [454, "index-20"]], "acos() (in module cmath)": [[144, "cmath.acos"]], "acosh() (in module cmath)": [[144, "cmath.acosh"]], "asin() (in module cmath)": [[144, "cmath.asin"]], "asinh() (in module cmath)": [[144, "cmath.asinh"]], "atan() (in module cmath)": [[144, "cmath.atan"]], "atanh() (in module cmath)": [[144, "cmath.atanh"]], "cmath": [[144, "module-cmath"]], "cos() (in module cmath)": [[144, "cmath.cos"]], "cosh() (in module cmath)": [[144, "cmath.cosh"]], "e (in module cmath)": [[144, "cmath.e"]], "exp() (in module cmath)": [[144, "cmath.exp"]], "inf (in module cmath)": [[144, "cmath.inf"]], "infj (in module cmath)": [[144, "cmath.infj"]], "isclose() (in module cmath)": [[144, "cmath.isclose"]], "isfinite() (in module cmath)": [[144, "cmath.isfinite"]], "isinf() (in module cmath)": [[144, "cmath.isinf"]], "isnan() (in module cmath)": [[144, "cmath.isnan"]], "log() (in module cmath)": [[144, "cmath.log"]], "log10() (in module cmath)": [[144, "cmath.log10"]], "math": [[144, "index-1"], [262, "module-math"], [324, "index-15"]], "nan (in module cmath)": [[144, "cmath.nan"]], "nanj (in module cmath)": [[144, "cmath.nanj"]], "phase() (in module cmath)": [[144, "cmath.phase"]], "pi (in module cmath)": [[144, "cmath.pi"]], "polar() (in module cmath)": [[144, "cmath.polar"]], "rect() (in module cmath)": [[144, "cmath.rect"]], "sin() (in module cmath)": [[144, "cmath.sin"]], "sinh() (in module cmath)": [[144, "cmath.sinh"]], "sqrt() (in module cmath)": [[144, "cmath.sqrt"]], "tan() (in module cmath)": [[144, "cmath.tan"]], "tanh() (in module cmath)": [[144, "cmath.tanh"]], "tau (in module cmath)": [[144, "cmath.tau"]], "! (exclamation)": [[145, "index-0"], [167, "index-0"], [209, "index-2"], [220, "index-1"], [325, "index-2"], [327, "index-1"], [410, "index-25"]], "cmd (class in cmd)": [[145, "cmd.Cmd"]], "cmd": [[145, "module-cmd"], [280, "index-1"]], "cmdloop() (cmd.cmd method)": [[145, "cmd.Cmd.cmdloop"]], "cmdqueue (cmd.cmd attribute)": [[145, "cmd.Cmd.cmdqueue"]], "columnize() (cmd.cmd method)": [[145, "cmd.Cmd.columnize"]], "completedefault() (cmd.cmd method)": [[145, "cmd.Cmd.completedefault"]], "default() (cmd.cmd method)": [[145, "cmd.Cmd.default"]], "doc_header (cmd.cmd attribute)": [[145, "cmd.Cmd.doc_header"]], "emptyline() (cmd.cmd method)": [[145, "cmd.Cmd.emptyline"]], "identchars (cmd.cmd attribute)": [[145, "cmd.Cmd.identchars"]], "in a command interpreter": [[145, "index-0"]], "intro (cmd.cmd attribute)": [[145, "cmd.Cmd.intro"]], "lastcmd (cmd.cmd attribute)": [[145, "cmd.Cmd.lastcmd"]], "misc_header (cmd.cmd attribute)": [[145, "cmd.Cmd.misc_header"]], "onecmd() (cmd.cmd method)": [[145, "cmd.Cmd.onecmd"]], "postcmd() (cmd.cmd method)": [[145, "cmd.Cmd.postcmd"]], "postloop() (cmd.cmd method)": [[145, "cmd.Cmd.postloop"]], "precmd() (cmd.cmd method)": [[145, "cmd.Cmd.precmd"]], "preloop() (cmd.cmd method)": [[145, "cmd.Cmd.preloop"]], "prompt (cmd.cmd attribute)": [[145, "cmd.Cmd.prompt"]], "ruler (cmd.cmd attribute)": [[145, "cmd.Cmd.ruler"]], "undoc_header (cmd.cmd attribute)": [[145, "cmd.Cmd.undoc_header"]], "use_rawinput (cmd.cmd attribute)": [[145, "cmd.Cmd.use_rawinput"]], "interactiveconsole (class in code)": [[147, "code.InteractiveConsole"]], "interactiveinterpreter (class in code)": [[147, "code.InteractiveInterpreter"]], "compile_command() (in module code)": [[147, "code.compile_command"]], "interact() (code.interactiveconsole method)": [[147, "code.InteractiveConsole.interact"]], "interact() (in module code)": [[147, "code.interact"]], "push() (code.interactiveconsole method)": [[147, "code.InteractiveConsole.push"]], "raw_input() (code.interactiveconsole method)": [[147, "code.InteractiveConsole.raw_input"]], "resetbuffer() (code.interactiveconsole method)": [[147, "code.InteractiveConsole.resetbuffer"]], "runcode() (code.interactiveinterpreter method)": [[147, "code.InteractiveInterpreter.runcode"]], "runsource() (code.interactiveinterpreter method)": [[147, "code.InteractiveInterpreter.runsource"]], "showsyntaxerror() (code.interactiveinterpreter method)": [[147, "code.InteractiveInterpreter.showsyntaxerror"]], "showtraceback() (code.interactiveinterpreter method)": [[147, "code.InteractiveInterpreter.showtraceback"]], "write() (code.interactiveinterpreter method)": [[147, "code.InteractiveInterpreter.write"]], "bom (in module codecs)": [[148, "codecs.BOM"]], "bom_be (in module codecs)": [[148, "codecs.BOM_BE"]], "bom_le (in module codecs)": [[148, "codecs.BOM_LE"]], "bom_utf16 (in module codecs)": [[148, "codecs.BOM_UTF16"]], "bom_utf16_be (in module codecs)": [[148, "codecs.BOM_UTF16_BE"]], "bom_utf16_le (in module codecs)": [[148, "codecs.BOM_UTF16_LE"]], "bom_utf32 (in module codecs)": [[148, "codecs.BOM_UTF32"]], "bom_utf32_be (in module codecs)": [[148, "codecs.BOM_UTF32_BE"]], "bom_utf32_le (in module codecs)": [[148, "codecs.BOM_UTF32_LE"]], "bom_utf8 (in module codecs)": [[148, "codecs.BOM_UTF8"]], "codecinfo (class in codecs)": [[148, "codecs.CodecInfo"]], "codecs": [[148, "index-0"], [148, "module-codecs"]], "encodedfile() (in module codecs)": [[148, "codecs.EncodedFile"]], "incrementaldecoder (class in codecs)": [[148, "codecs.IncrementalDecoder"]], "incrementalencoder (class in codecs)": [[148, "codecs.IncrementalEncoder"]], "rfc 3490": [[148, "index-13"], [148, "index-14"], [148, "index-6"], [148, "index-8"]], "rfc 3490#section-3.1": [[148, "index-12"]], "rfc 3492": [[148, "index-7"], [148, "index-9"]], "rfc 5891": [[148, "index-10"]], "rfc 5895": [[148, "index-11"]], "streamreader (class in codecs)": [[148, "codecs.StreamReader"]], "streamreaderwriter (class in codecs)": [[148, "codecs.StreamReaderWriter"]], "streamrecoder (class in codecs)": [[148, "codecs.StreamRecoder"]], "streamwriter (class in codecs)": [[148, "codecs.StreamWriter"]], "toascii() (in module encodings.idna)": [[148, "encodings.idna.ToASCII"]], "tounicode() (in module encodings.idna)": [[148, "encodings.idna.ToUnicode"]], "unicode": [[148, "index-0"], [364, "index-0"], [403, "index-19"]], "\\ (backslash)": [[148, "index-1"], [277, "index-48"], [301, "index-12"], [301, "index-26"], [301, "index-9"], [410, "index-23"]], "\\n": [[148, "index-3"], [301, "index-37"], [301, "index-37"], [410, "index-23"], [410, "index-23"]], "\\u": [[148, "index-1"], [148, "index-1"], [301, "index-37"], [301, "index-37"], [410, "index-23"], [410, "index-23"]], "\\x": [[148, "index-1"], [301, "index-37"], [410, "index-23"]], "backslashreplace": [[148, "index-1"]], "backslashreplace_errors() (in module codecs)": [[148, "codecs.backslashreplace_errors"]], "decode": [[148, "index-0"]], "decode (codecs.codecinfo attribute)": [[148, "codecs.CodecInfo.decode"]], "decode() (codecs.codec method)": [[148, "codecs.Codec.decode"]], "decode() (codecs.incrementaldecoder method)": [[148, "codecs.IncrementalDecoder.decode"]], "decode() (in module codecs)": [[148, "codecs.decode"]], "encode": [[148, "index-0"]], "encode (codecs.codecinfo attribute)": [[148, "codecs.CodecInfo.encode"]], "encode() (codecs.codec method)": [[148, "codecs.Codec.encode"]], "encode() (codecs.incrementalencoder method)": [[148, "codecs.IncrementalEncoder.encode"]], "encode() (in module codecs)": [[148, "codecs.encode"]], "encodings.idna": [[148, "module-encodings.idna"]], "encodings.mbcs": [[148, "module-encodings.mbcs"]], "encodings.utf_8_sig": [[148, "module-encodings.utf_8_sig"]], "error handler's name": [[148, "index-1"], [148, "index-3"], [148, "index-4"]], "escape sequence": [[148, "index-1"], [148, "index-3"], [410, "index-23"]], "getdecoder() (in module codecs)": [[148, "codecs.getdecoder"]], "getencoder() (in module codecs)": [[148, "codecs.getencoder"]], "getincrementaldecoder() (in module codecs)": [[148, "codecs.getincrementaldecoder"]], "getincrementalencoder() (in module codecs)": [[148, "codecs.getincrementalencoder"]], "getreader() (in module codecs)": [[148, "codecs.getreader"]], "getstate() (codecs.incrementaldecoder method)": [[148, "codecs.IncrementalDecoder.getstate"]], "getstate() (codecs.incrementalencoder method)": [[148, "codecs.IncrementalEncoder.getstate"]], "getwriter() (in module codecs)": [[148, "codecs.getwriter"]], "ignore": [[148, "index-1"]], "ignore_errors() (in module codecs)": [[148, "codecs.ignore_errors"]], "incrementaldecoder (codecs.codecinfo attribute)": [[148, "codecs.CodecInfo.incrementaldecoder"]], "incrementalencoder (codecs.codecinfo attribute)": [[148, "codecs.CodecInfo.incrementalencoder"]], "iterdecode() (in module codecs)": [[148, "codecs.iterdecode"]], "iterencode() (in module codecs)": [[148, "codecs.iterencode"]], "lookup() (in module codecs)": [[148, "codecs.lookup"]], "lookup_error() (in module codecs)": [[148, "codecs.lookup_error"]], "name (codecs.codecinfo attribute)": [[148, "codecs.CodecInfo.name"]], "nameprep() (in module encodings.idna)": [[148, "encodings.idna.nameprep"]], "namereplace": [[148, "index-3"]], "namereplace_errors() (in module codecs)": [[148, "codecs.namereplace_errors"]], "open() (in module codecs)": [[148, "codecs.open"]], "read() (codecs.streamreader method)": [[148, "codecs.StreamReader.read"]], "readline() (codecs.streamreader method)": [[148, "codecs.StreamReader.readline"]], "readlines() (codecs.streamreader method)": [[148, "codecs.StreamReader.readlines"]], "register() (in module codecs)": [[148, "codecs.register"]], "register_error() (in module codecs)": [[148, "codecs.register_error"]], "replace": [[148, "index-1"]], "replace_errors() (in module codecs)": [[148, "codecs.replace_errors"]], "replacement character": [[148, "index-1"]], "reset() (codecs.incrementaldecoder method)": [[148, "codecs.IncrementalDecoder.reset"]], "reset() (codecs.incrementalencoder method)": [[148, "codecs.IncrementalEncoder.reset"]], "reset() (codecs.streamreader method)": [[148, "codecs.StreamReader.reset"]], "reset() (codecs.streamwriter method)": [[148, "codecs.StreamWriter.reset"]], "setstate() (codecs.incrementaldecoder method)": [[148, "codecs.IncrementalDecoder.setstate"]], "setstate() (codecs.incrementalencoder method)": [[148, "codecs.IncrementalEncoder.setstate"]], "stackable": [[148, "index-0"]], "streamreader (codecs.codecinfo attribute)": [[148, "codecs.CodecInfo.streamreader"]], "streams": [[148, "index-0"]], "streamwriter (codecs.codecinfo attribute)": [[148, "codecs.CodecInfo.streamwriter"]], "strict": [[148, "index-1"]], "strict_errors() (in module codecs)": [[148, "codecs.strict_errors"]], "surrogateescape": [[148, "index-1"]], "surrogatepass": [[148, "index-4"]], "unregister() (in module codecs)": [[148, "codecs.unregister"]], "write() (codecs.streamwriter method)": [[148, "codecs.StreamWriter.write"]], "writelines() (codecs.streamwriter method)": [[148, "codecs.StreamWriter.writelines"]], "xmlcharrefreplace": [[148, "index-3"]], "xmlcharrefreplace_errors() (in module codecs)": [[148, "codecs.xmlcharrefreplace_errors"]], "commandcompiler (class in codeop)": [[149, "codeop.CommandCompiler"]], "compile (class in codeop)": [[149, "codeop.Compile"]], "codeop": [[149, "module-codeop"]], "compile_command() (in module codeop)": [[149, "codeop.compile_command"]], "chainmap (class in collections)": [[150, "collections.ChainMap"]], "counter (class in collections)": [[150, "collections.Counter"]], "ordereddict (class in collections)": [[150, "collections.OrderedDict"]], "pep 468": [[150, "index-2"], [455, "index-24"]], "pep 584": [[150, "index-0"], [150, "index-1"], [150, "index-3"], [277, "index-6"], [277, "index-7"], [362, "index-6"], [378, "index-0"], [378, "index-1"], [458, "index-1"], [458, "index-11"]], "userdict (class in collections)": [[150, "collections.UserDict"]], "userlist (class in collections)": [[150, "collections.UserList"]], "userstring (class in collections)": [[150, "collections.UserString"]], "__missing__() (collections.defaultdict method)": [[150, "collections.defaultdict.__missing__"]], "_asdict() (collections.somenamedtuple method)": [[150, "collections.somenamedtuple._asdict"]], "_field_defaults (collections.somenamedtuple attribute)": [[150, "collections.somenamedtuple._field_defaults"]], "_fields (collections.somenamedtuple attribute)": [[150, "collections.somenamedtuple._fields"]], "_make() (collections.somenamedtuple class method)": [[150, "collections.somenamedtuple._make"]], "_replace() (collections.somenamedtuple method)": [[150, "collections.somenamedtuple._replace"]], "append() (collections.deque method)": [[150, "collections.deque.append"]], "appendleft() (collections.deque method)": [[150, "collections.deque.appendleft"]], "clear() (collections.deque method)": [[150, "collections.deque.clear"]], "collections": [[150, "module-collections"], [403, "index-24"]], "copy() (collections.deque method)": [[150, "collections.deque.copy"]], "count() (collections.deque method)": [[150, "collections.deque.count"]], "data (collections.userdict attribute)": [[150, "collections.UserDict.data"]], "data (collections.userlist attribute)": [[150, "collections.UserList.data"]], "data (collections.userstring attribute)": [[150, "collections.UserString.data"]], "default_factory (collections.defaultdict attribute)": [[150, "collections.defaultdict.default_factory"]], "defaultdict (class in collections)": [[150, "collections.defaultdict"]], "deque (class in collections)": [[150, "collections.deque"]], "elements() (collections.counter method)": [[150, "collections.Counter.elements"]], "extend() (collections.deque method)": [[150, "collections.deque.extend"]], "extendleft() (collections.deque method)": [[150, "collections.deque.extendleft"]], "fromkeys() (collections.counter method)": [[150, "collections.Counter.fromkeys"]], "index() (collections.deque method)": [[150, "collections.deque.index"]], "insert() (collections.deque method)": [[150, "collections.deque.insert"]], "maps (collections.chainmap attribute)": [[150, "collections.ChainMap.maps"]], "maxlen (collections.deque attribute)": [[150, "collections.deque.maxlen"]], "most_common() (collections.counter method)": [[150, "collections.Counter.most_common"]], "move_to_end() (collections.ordereddict method)": [[150, "collections.OrderedDict.move_to_end"]], "namedtuple() (in module collections)": [[150, "collections.namedtuple"]], "new_child() (collections.chainmap method)": [[150, "collections.ChainMap.new_child"]], "parents (collections.chainmap attribute)": [[150, "collections.ChainMap.parents"]], "pop() (collections.deque method)": [[150, "collections.deque.pop"]], "popitem() (collections.ordereddict method)": [[150, "collections.OrderedDict.popitem"]], "popleft() (collections.deque method)": [[150, "collections.deque.popleft"]], "remove() (collections.deque method)": [[150, "collections.deque.remove"]], "reverse() (collections.deque method)": [[150, "collections.deque.reverse"]], "rotate() (collections.deque method)": [[150, "collections.deque.rotate"]], "subtract() (collections.counter method)": [[150, "collections.Counter.subtract"]], "total() (collections.counter method)": [[150, "collections.Counter.total"]], "update() (collections.counter method)": [[150, "collections.Counter.update"]], "asyncgenerator (class in collections.abc)": [[151, "collections.abc.AsyncGenerator"]], "asynciterable (class in collections.abc)": [[151, "collections.abc.AsyncIterable"]], "asynciterator (class in collections.abc)": [[151, "collections.abc.AsyncIterator"]], "awaitable (class in collections.abc)": [[151, "collections.abc.Awaitable"]], "buffer (class in collections.abc)": [[151, "collections.abc.Buffer"]], "bytestring (class in collections.abc)": [[151, "collections.abc.ByteString"]], "callable (class in collections.abc)": [[151, "collections.abc.Callable"]], "collection (class in collections.abc)": [[151, "collections.abc.Collection"]], "container (class in collections.abc)": [[151, "collections.abc.Container"]], "coroutine (class in collections.abc)": [[151, "collections.abc.Coroutine"]], "generator (class in collections.abc)": [[151, "collections.abc.Generator"]], "hashable (class in collections.abc)": [[151, "collections.abc.Hashable"]], "itemsview (class in collections.abc)": [[151, "collections.abc.ItemsView"]], "iterable (class in collections.abc)": [[151, "collections.abc.Iterable"]], "iterator (class in collections.abc)": [[151, "collections.abc.Iterator"]], "keysview (class in collections.abc)": [[151, "collections.abc.KeysView"]], "mapping (class in collections.abc)": [[151, "collections.abc.Mapping"]], "mappingview (class in collections.abc)": [[151, "collections.abc.MappingView"]], "mutablemapping (class in collections.abc)": [[151, "collections.abc.MutableMapping"]], "mutablesequence (class in collections.abc)": [[151, "collections.abc.MutableSequence"]], "mutableset (class in collections.abc)": [[151, "collections.abc.MutableSet"]], "pep 688": [[151, "index-4"], [403, "index-107"], [449, "index-12"]], "reversible (class in collections.abc)": [[151, "collections.abc.Reversible"]], "sequence (class in collections.abc)": [[151, "collections.abc.Sequence"]], "set (class in collections.abc)": [[151, "collections.abc.Set"]], "sized (class in collections.abc)": [[151, "collections.abc.Sized"]], "valuesview (class in collections.abc)": [[151, "collections.abc.ValuesView"]], "collections.abc": [[151, "module-collections.abc"]], "colorsys": [[152, "module-colorsys"]], "hls_to_rgb() (in module colorsys)": [[152, "colorsys.hls_to_rgb"]], "hsv_to_rgb() (in module colorsys)": [[152, "colorsys.hsv_to_rgb"]], "rgb_to_hls() (in module colorsys)": [[152, "colorsys.rgb_to_hls"]], "rgb_to_hsv() (in module colorsys)": [[152, "colorsys.rgb_to_hsv"]], "rgb_to_yiq() (in module colorsys)": [[152, "colorsys.rgb_to_yiq"]], "yiq_to_rgb() (in module colorsys)": [[152, "colorsys.yiq_to_rgb"]], "--hardlink-dupes": [[153, "cmdoption-compileall-hardlink-dupes"]], "--invalidation-mode": [[153, "cmdoption-compileall-invalidation-mode"]], "-b": [[153, "cmdoption-compileall-b"], [365, "cmdoption-unittest-b"], [430, "cmdoption-B"], [430, "cmdoption-b"]], "-d": [[153, "cmdoption-compileall-d"], [223, "cmdoption-gzip-d"], [430, "cmdoption-d"]], "-j": [[153, "cmdoption-compileall-j"], [430, "cmdoption-J"]], "-p": [[153, "cmdoption-compileall-p"], [283, "cmdoption-pickletools-p"], [345, "cmdoption-timeit-p"], [365, "cmdoption-unittest-discover-p"], [396, "cmdoption-zipapp-p"], [430, "cmdoption-P"]], "-q": [[153, "cmdoption-compileall-q"], [293, "cmdoption-python-m-py_compile-q"], [430, "cmdoption-q"]], "-r": [[153, "cmdoption-compileall-r"], [345, "cmdoption-timeit-r"], [357, "cmdoption-trace-R"], [357, "cmdoption-trace-r"], [430, "cmdoption-R"]], "-x": [[153, "cmdoption-compileall-x"], [430, "cmdoption-X"], [430, "cmdoption-x"]], "source_date_epoch": [[153, "index-1"], [293, "index-3"], [293, "index-6"], [293, "index-7"], [456, "index-31"]], "compile_dir() (in module compileall)": [[153, "compileall.compile_dir"]], "compile_file() (in module compileall)": [[153, "compileall.compile_file"]], "compile_path() (in module compileall)": [[153, "compileall.compile_path"]], "compileall": [[153, "module-compileall"]], "compileall command line option": [[153, "cmdoption-compileall-arg-directory"], [153, "cmdoption-compileall-arg-file"], [153, "cmdoption-compileall-b"], [153, "cmdoption-compileall-d"], [153, "cmdoption-compileall-e"], [153, "cmdoption-compileall-f"], [153, "cmdoption-compileall-hardlink-dupes"], [153, "cmdoption-compileall-i"], [153, "cmdoption-compileall-invalidation-mode"], [153, "cmdoption-compileall-j"], [153, "cmdoption-compileall-l"], [153, "cmdoption-compileall-o"], [153, "cmdoption-compileall-p"], [153, "cmdoption-compileall-q"], [153, "cmdoption-compileall-r"], [153, "cmdoption-compileall-s"], [153, "cmdoption-compileall-x"]], "directory": [[153, "cmdoption-compileall-arg-directory"], [277, "index-26"], [277, "index-28"], [277, "index-29"], [277, "index-31"], [277, "index-32"], [314, "index-1"], [316, "index-1"]], "brokenexecutor": [[156, "concurrent.futures.BrokenExecutor"]], "brokenprocesspool": [[156, "concurrent.futures.process.BrokenProcessPool"]], "brokenthreadpool": [[156, "concurrent.futures.thread.BrokenThreadPool"]], "executor (class in concurrent.futures)": [[156, "concurrent.futures.Executor"]], "future (class in concurrent.futures)": [[156, "concurrent.futures.Future"]], "pep 3148": [[156, "index-0"], [451, "index-4"]], "processpoolexecutor (class in concurrent.futures)": [[156, "concurrent.futures.ProcessPoolExecutor"]], "threadpoolexecutor (class in concurrent.futures)": [[156, "concurrent.futures.ThreadPoolExecutor"]], "add_done_callback() (concurrent.futures.future method)": [[156, "concurrent.futures.Future.add_done_callback"]], "as_completed() (in module concurrent.futures)": [[156, "concurrent.futures.as_completed"]], "cancel() (concurrent.futures.future method)": [[156, "concurrent.futures.Future.cancel"]], "cancelled() (concurrent.futures.future method)": [[156, "concurrent.futures.Future.cancelled"]], "concurrent.futures": [[156, "module-concurrent.futures"]], "done() (concurrent.futures.future method)": [[156, "concurrent.futures.Future.done"]], "exception() (concurrent.futures.future method)": [[156, "concurrent.futures.Future.exception"]], "map() (concurrent.futures.executor method)": [[156, "concurrent.futures.Executor.map"]], "result() (concurrent.futures.future method)": [[156, "concurrent.futures.Future.result"]], "running() (concurrent.futures.future method)": [[156, "concurrent.futures.Future.running"]], "set_exception() (concurrent.futures.future method)": [[156, "concurrent.futures.Future.set_exception"]], "set_result() (concurrent.futures.future method)": [[156, "concurrent.futures.Future.set_result"]], "set_running_or_notify_cancel() (concurrent.futures.future method)": [[156, "concurrent.futures.Future.set_running_or_notify_cancel"]], "shutdown() (concurrent.futures.executor method)": [[156, "concurrent.futures.Executor.shutdown"]], "submit() (concurrent.futures.executor method)": [[156, "concurrent.futures.Executor.submit"]], "wait() (in module concurrent.futures)": [[156, "concurrent.futures.wait"]], "$ (dollar)": [[157, "index-2"], [278, "index-9"], [301, "index-2"], [325, "index-13"]], "% (percent)": [[157, "index-1"], [172, "index-0"], [278, "index-9"], [324, "index-13"], [324, "index-35"], [324, "index-45"], [344, "index-11"], [344, "index-9"], [381, "index-0"], [405, "index-68"]], ".ini": [[157, "index-0"]], "boolean_states (configparser.configparser attribute)": [[157, "configparser.ConfigParser.BOOLEAN_STATES"]], "basicinterpolation (class in configparser)": [[157, "configparser.BasicInterpolation"]], "configparser (class in configparser)": [[157, "configparser.ConfigParser"]], "duplicateoptionerror": [[157, "configparser.DuplicateOptionError"]], "duplicatesectionerror": [[157, "configparser.DuplicateSectionError"]], "extendedinterpolation (class in configparser)": [[157, "configparser.ExtendedInterpolation"]], "interpolationdeptherror": [[157, "configparser.InterpolationDepthError"]], "interpolationerror": [[157, "configparser.InterpolationError"]], "interpolationmissingoptionerror": [[157, "configparser.InterpolationMissingOptionError"]], "interpolationsyntaxerror": [[157, "configparser.InterpolationSyntaxError"]], "max_interpolation_depth (in module configparser)": [[157, "configparser.MAX_INTERPOLATION_DEPTH"]], "missingsectionheadererror": [[157, "configparser.MissingSectionHeaderError"]], "nooptionerror": [[157, "configparser.NoOptionError"]], "nosectionerror": [[157, "configparser.NoSectionError"]], "parsingerror": [[157, "configparser.ParsingError"]], "rawconfigparser (class in configparser)": [[157, "configparser.RawConfigParser"]], "sectcre (configparser.configparser attribute)": [[157, "configparser.ConfigParser.SECTCRE"]], "windows ini file": [[157, "index-0"]], "add_section() (configparser.configparser method)": [[157, "configparser.ConfigParser.add_section"]], "add_section() (configparser.rawconfigparser method)": [[157, "configparser.RawConfigParser.add_section"]], "configparser": [[157, "module-configparser"]], "configuration": [[157, "index-0"], [280, "index-2"], [316, "index-4"]], "defaults() (configparser.configparser method)": [[157, "configparser.ConfigParser.defaults"]], "get() (configparser.configparser method)": [[157, "configparser.ConfigParser.get"]], "getboolean() (configparser.configparser method)": [[157, "configparser.ConfigParser.getboolean"]], "getfloat() (configparser.configparser method)": [[157, "configparser.ConfigParser.getfloat"]], "getint() (configparser.configparser method)": [[157, "configparser.ConfigParser.getint"]], "has_option() (configparser.configparser method)": [[157, "configparser.ConfigParser.has_option"]], "has_section() (configparser.configparser method)": [[157, "configparser.ConfigParser.has_section"]], "ini file": [[157, "index-0"]], "interpolation in configuration files": [[157, "index-1"], [157, "index-2"]], "items() (configparser.configparser method)": [[157, "configparser.ConfigParser.items"]], "options() (configparser.configparser method)": [[157, "configparser.ConfigParser.options"]], "optionxform() (configparser.configparser method)": [[157, "configparser.ConfigParser.optionxform"]], "read() (configparser.configparser method)": [[157, "configparser.ConfigParser.read"]], "read_dict() (configparser.configparser method)": [[157, "configparser.ConfigParser.read_dict"]], "read_file() (configparser.configparser method)": [[157, "configparser.ConfigParser.read_file"]], "read_string() (configparser.configparser method)": [[157, "configparser.ConfigParser.read_string"]], "remove_option() (configparser.configparser method)": [[157, "configparser.ConfigParser.remove_option"]], "remove_section() (configparser.configparser method)": [[157, "configparser.ConfigParser.remove_section"]], "sections() (configparser.configparser method)": [[157, "configparser.ConfigParser.sections"]], "set() (configparser.configparser method)": [[157, "configparser.ConfigParser.set"]], "set() (configparser.rawconfigparser method)": [[157, "configparser.RawConfigParser.set"]], "write() (configparser.configparser method)": [[157, "configparser.ConfigParser.write"]], "ellipsis (built-in variable)": [[158, "Ellipsis"]], "false (built-in variable)": [[158, "False"]], "none (built-in variable)": [[158, "None"]], "notimplemented (built-in variable)": [[158, "NotImplemented"]], "true (built-in variable)": [[158, "True"]], "__debug__ (built-in variable)": [[158, "debug__"]], "copyright (built-in variable)": [[158, "copyright"]], "credits (built-in variable)": [[158, "credits"]], "ellipsis literal": [[158, "index-0"], [324, "index-66"], [403, "index-8"]], "exit (built-in variable)": [[158, "exit"]], "license (built-in variable)": [[158, "license"]], "quit (built-in variable)": [[158, "quit"]], "abstractasynccontextmanager (class in contextlib)": [[159, "contextlib.AbstractAsyncContextManager"]], "abstractcontextmanager (class in contextlib)": [[159, "contextlib.AbstractContextManager"]], "asynccontextdecorator (class in contextlib)": [[159, "contextlib.AsyncContextDecorator"]], "asyncexitstack (class in contextlib)": [[159, "contextlib.AsyncExitStack"]], "contextdecorator (class in contextlib)": [[159, "contextlib.ContextDecorator"]], "exitstack (class in contextlib)": [[159, "contextlib.ExitStack"]], "aclose() (contextlib.asyncexitstack method)": [[159, "contextlib.AsyncExitStack.aclose"]], "aclosing() (in module contextlib)": [[159, "contextlib.aclosing"]], "asynccontextmanager() (in module contextlib)": [[159, "contextlib.asynccontextmanager"]], "callback() (contextlib.exitstack method)": [[159, "contextlib.ExitStack.callback"]], "chdir() (in module contextlib)": [[159, "contextlib.chdir"]], "close() (contextlib.exitstack method)": [[159, "contextlib.ExitStack.close"]], "closing() (in module contextlib)": [[159, "contextlib.closing"]], "contextlib": [[159, "module-contextlib"]], "contextmanager() (in module contextlib)": [[159, "contextlib.contextmanager"]], "enter_async_context() (contextlib.asyncexitstack method)": [[159, "contextlib.AsyncExitStack.enter_async_context"]], "enter_context() (contextlib.exitstack method)": [[159, "contextlib.ExitStack.enter_context"]], "nullcontext() (in module contextlib)": [[159, "contextlib.nullcontext"]], "pop_all() (contextlib.exitstack method)": [[159, "contextlib.ExitStack.pop_all"]], "push() (contextlib.exitstack method)": [[159, "contextlib.ExitStack.push"]], "push_async_callback() (contextlib.asyncexitstack method)": [[159, "contextlib.AsyncExitStack.push_async_callback"]], "push_async_exit() (contextlib.asyncexitstack method)": [[159, "contextlib.AsyncExitStack.push_async_exit"]], "redirect_stderr() (in module contextlib)": [[159, "contextlib.redirect_stderr"]], "redirect_stdout() (in module contextlib)": [[159, "contextlib.redirect_stdout"]], "suppress() (in module contextlib)": [[159, "contextlib.suppress"]], "context (class in contextvars)": [[160, "contextvars.Context"]], "contextvar (class in contextvars)": [[160, "contextvars.ContextVar"]], "missing (contextvars.token attribute)": [[160, "contextvars.Token.MISSING"]], "token (class in contextvars)": [[160, "contextvars.Token"]], "contextvars": [[160, "module-contextvars"]], "copy() (contextvars.context method)": [[160, "contextvars.Context.copy"]], "copy_context() (in module contextvars)": [[160, "contextvars.copy_context"]], "get() (contextvars.context method)": [[160, "contextvars.Context.get"]], "get() (contextvars.contextvar method)": [[160, "contextvars.ContextVar.get"]], "items() (contextvars.context method)": [[160, "contextvars.Context.items"]], "keys() (contextvars.context method)": [[160, "contextvars.Context.keys"]], "name (contextvars.contextvar attribute)": [[160, "contextvars.ContextVar.name"]], "old_value (contextvars.token attribute)": [[160, "contextvars.Token.old_value"]], "reset() (contextvars.contextvar method)": [[160, "contextvars.ContextVar.reset"]], "run() (contextvars.context method)": [[160, "contextvars.Context.run"]], "set() (contextvars.contextvar method)": [[160, "contextvars.ContextVar.set"]], "values() (contextvars.context method)": [[160, "contextvars.Context.values"]], "var (contextvars.token attribute)": [[160, "contextvars.Token.var"]], "__copy__() (copy protocol)": [[161, "index-1"]], "__deepcopy__() (copy protocol)": [[161, "index-1"]], "__replace__() (replace protocol)": [[161, "index-2"]], "copy": [[161, "module-copy"], [162, "index-0"], [236, "index-4"], [282, "index-5"]], "copy() (in module copy)": [[161, "copy.copy"]], "deepcopy() (in module copy)": [[161, "copy.deepcopy"]], "pickle": [[161, "index-0"], [162, "index-0"], [261, "index-0"], [282, "module-pickle"], [312, "index-0"]], "replace() (in module copy)": [[161, "copy.replace"]], "constructor() (in module copyreg)": [[162, "copyreg.constructor"]], "copyreg": [[162, "module-copyreg"]], "pickle() (in module copyreg)": [[162, "copyreg.pickle"]], "cryptography": [[163, "index-0"]], "dialect (class in csv)": [[164, "csv.Dialect"]], "dictreader (class in csv)": [[164, "csv.DictReader"]], "dictwriter (class in csv)": [[164, "csv.DictWriter"]], "pep 305": [[164, "index-2"], [440, "index-20"]], "quote_all (in module csv)": [[164, "csv.QUOTE_ALL"]], "quote_minimal (in module csv)": [[164, "csv.QUOTE_MINIMAL"]], "quote_none (in module csv)": [[164, "csv.QUOTE_NONE"]], "quote_nonnumeric (in module csv)": [[164, "csv.QUOTE_NONNUMERIC"]], "quote_notnull (in module csv)": [[164, "csv.QUOTE_NOTNULL"]], "quote_strings (in module csv)": [[164, "csv.QUOTE_STRINGS"]], "rfc 4180": [[164, "index-1"]], "sniffer (class in csv)": [[164, "csv.Sniffer"]], "__next__() (csv.csvreader method)": [[164, "csv.csvreader.__next__"]], "csv": [[164, "index-0"], [164, "module-csv"]], "csv.reader function": [[164, "index-3"]], "data": [[164, "index-0"], [327, "index-0"], [403, "index-0"], [403, "index-4"], [405, "index-7"]], "delimiter (csv.dialect attribute)": [[164, "csv.Dialect.delimiter"]], "dialect (csv.csvreader attribute)": [[164, "csv.csvreader.dialect"]], "dialect (csv.csvwriter attribute)": [[164, "csv.csvwriter.dialect"]], "doublequote (csv.dialect attribute)": [[164, "csv.Dialect.doublequote"]], "escapechar (csv.dialect attribute)": [[164, "csv.Dialect.escapechar"]], "excel (class in csv)": [[164, "csv.excel"]], "excel_tab (class in csv)": [[164, "csv.excel_tab"]], "field_size_limit() (in module csv)": [[164, "csv.field_size_limit"]], "fieldnames (csv.dictreader attribute)": [[164, "csv.DictReader.fieldnames"]], "get_dialect() (in module csv)": [[164, "csv.get_dialect"]], "has_header() (csv.sniffer method)": [[164, "csv.Sniffer.has_header"]], "line_num (csv.csvreader attribute)": [[164, "csv.csvreader.line_num"]], "lineterminator (csv.dialect attribute)": [[164, "csv.Dialect.lineterminator"]], "list_dialects() (in module csv)": [[164, "csv.list_dialects"]], "quotechar (csv.dialect attribute)": [[164, "csv.Dialect.quotechar"]], "quoting (csv.dialect attribute)": [[164, "csv.Dialect.quoting"]], "reader() (in module csv)": [[164, "csv.reader"]], "register_dialect() (in module csv)": [[164, "csv.register_dialect"]], "skipinitialspace (csv.dialect attribute)": [[164, "csv.Dialect.skipinitialspace"]], "sniff() (csv.sniffer method)": [[164, "csv.Sniffer.sniff"]], "strict (csv.dialect attribute)": [[164, "csv.Dialect.strict"]], "tabular": [[164, "index-0"]], "unix_dialect (class in csv)": [[164, "csv.unix_dialect"]], "unregister_dialect() (in module csv)": [[164, "csv.unregister_dialect"]], "writeheader() (csv.dictwriter method)": [[164, "csv.DictWriter.writeheader"]], "writer() (in module csv)": [[164, "csv.writer"]], "writerow() (csv.csvwriter method)": [[164, "csv.csvwriter.writerow"]], "writerows() (csv.csvwriter method)": [[164, "csv.csvwriter.writerows"]], "array (class in ctypes)": [[165, "ctypes.Array"]], "bigendianstructure (class in ctypes)": [[165, "ctypes.BigEndianStructure"]], "bigendianunion (class in ctypes)": [[165, "ctypes.BigEndianUnion"]], "cdll (class in ctypes)": [[165, "ctypes.CDLL"]], "cfunctype() (in module ctypes)": [[165, "ctypes.CFUNCTYPE"]], "dllcanunloadnow() (in module ctypes)": [[165, "ctypes.DllCanUnloadNow"]], "dllgetclassobject() (in module ctypes)": [[165, "ctypes.DllGetClassObject"]], "formaterror() (in module ctypes)": [[165, "ctypes.FormatError"]], "getlasterror() (in module ctypes)": [[165, "ctypes.GetLastError"]], "hresult (class in ctypes)": [[165, "ctypes.HRESULT"]], "libraryloader (class in ctypes)": [[165, "ctypes.LibraryLoader"]], "littleendianstructure (class in ctypes)": [[165, "ctypes.LittleEndianStructure"]], "littleendianunion (class in ctypes)": [[165, "ctypes.LittleEndianUnion"]], "loadlibrary() (ctypes.libraryloader method)": [[165, "ctypes.LibraryLoader.LoadLibrary"]], "oledll (class in ctypes)": [[165, "ctypes.OleDLL"]], "pointer() (in module ctypes)": [[165, "ctypes.POINTER"], [165, "ctypes.pointer"]], "pyfunctype() (in module ctypes)": [[165, "ctypes.PYFUNCTYPE"]], "pydll (class in ctypes)": [[165, "ctypes.PyDLL"]], "structure (class in ctypes)": [[165, "ctypes.Structure"]], "union (class in ctypes)": [[165, "ctypes.Union"]], "winfunctype() (in module ctypes)": [[165, "ctypes.WINFUNCTYPE"]], "windll (class in ctypes)": [[165, "ctypes.WinDLL"]], "winerror() (in module ctypes)": [[165, "ctypes.WinError"]], "_cdata (class in ctypes)": [[165, "ctypes._CData"]], "_funcptr (class in ctypes)": [[165, "ctypes._FuncPtr"]], "_pointer (class in ctypes)": [[165, "ctypes._Pointer"]], "_simplecdata (class in ctypes)": [[165, "ctypes._SimpleCData"]], "_anonymous_ (ctypes.structure attribute)": [[165, "ctypes.Structure._anonymous_"]], "_b_base_ (ctypes._cdata attribute)": [[165, "ctypes._CData._b_base_"]], "_b_needsfree_ (ctypes._cdata attribute)": [[165, "ctypes._CData._b_needsfree_"]], "_fields_ (ctypes.structure attribute)": [[165, "ctypes.Structure._fields_"]], "_handle (ctypes.pydll attribute)": [[165, "ctypes.PyDLL._handle"]], "_length_ (ctypes.array attribute)": [[165, "ctypes.Array._length_"]], "_name (ctypes.pydll attribute)": [[165, "ctypes.PyDLL._name"]], "_objects (ctypes._cdata attribute)": [[165, "ctypes._CData._objects"]], "_pack_ (ctypes.structure attribute)": [[165, "ctypes.Structure._pack_"]], "_type_ (ctypes.array attribute)": [[165, "ctypes.Array._type_"]], "_type_ (ctypes._pointer attribute)": [[165, "ctypes._Pointer._type_"]], "addressof() (in module ctypes)": [[165, "ctypes.addressof"]], "alignment() (in module ctypes)": [[165, "ctypes.alignment"]], "argtypes (ctypes._funcptr attribute)": [[165, "ctypes._FuncPtr.argtypes"]], "byref() (in module ctypes)": [[165, "ctypes.byref"]], "c_bool (class in ctypes)": [[165, "ctypes.c_bool"]], "c_byte (class in ctypes)": [[165, "ctypes.c_byte"]], "c_char (class in ctypes)": [[165, "ctypes.c_char"]], "c_char_p (class in ctypes)": [[165, "ctypes.c_char_p"]], "c_double (class in ctypes)": [[165, "ctypes.c_double"]], "c_float (class in ctypes)": [[165, "ctypes.c_float"]], "c_int (class in ctypes)": [[165, "ctypes.c_int"]], "c_int16 (class in ctypes)": [[165, "ctypes.c_int16"]], "c_int32 (class in ctypes)": [[165, "ctypes.c_int32"]], "c_int64 (class in ctypes)": [[165, "ctypes.c_int64"]], "c_int8 (class in ctypes)": [[165, "ctypes.c_int8"]], "c_long (class in ctypes)": [[165, "ctypes.c_long"]], "c_longdouble (class in ctypes)": [[165, "ctypes.c_longdouble"]], "c_longlong (class in ctypes)": [[165, "ctypes.c_longlong"]], "c_short (class in ctypes)": [[165, "ctypes.c_short"]], "c_size_t (class in ctypes)": [[165, "ctypes.c_size_t"]], "c_ssize_t (class in ctypes)": [[165, "ctypes.c_ssize_t"]], "c_time_t (class in ctypes)": [[165, "ctypes.c_time_t"]], "c_ubyte (class in ctypes)": [[165, "ctypes.c_ubyte"]], "c_uint (class in ctypes)": [[165, "ctypes.c_uint"]], "c_uint16 (class in ctypes)": [[165, "ctypes.c_uint16"]], "c_uint32 (class in ctypes)": [[165, "ctypes.c_uint32"]], "c_uint64 (class in ctypes)": [[165, "ctypes.c_uint64"]], "c_uint8 (class in ctypes)": [[165, "ctypes.c_uint8"]], "c_ulong (class in ctypes)": [[165, "ctypes.c_ulong"]], "c_ulonglong (class in ctypes)": [[165, "ctypes.c_ulonglong"]], "c_ushort (class in ctypes)": [[165, "ctypes.c_ushort"]], "c_void_p (class in ctypes)": [[165, "ctypes.c_void_p"]], "c_wchar (class in ctypes)": [[165, "ctypes.c_wchar"]], "c_wchar_p (class in ctypes)": [[165, "ctypes.c_wchar_p"]], "cast() (in module ctypes)": [[165, "ctypes.cast"]], "contents (ctypes._pointer attribute)": [[165, "ctypes._Pointer.contents"]], "create_string_buffer() (in module ctypes)": [[165, "ctypes.create_string_buffer"]], "create_unicode_buffer() (in module ctypes)": [[165, "ctypes.create_unicode_buffer"]], "ctypes": [[165, "module-ctypes"]], "errcheck (ctypes._funcptr attribute)": [[165, "ctypes._FuncPtr.errcheck"]], "find_library() (in module ctypes.util)": [[165, "ctypes.util.find_library"]], "find_msvcrt() (in module ctypes.util)": [[165, "ctypes.util.find_msvcrt"]], "from_address() (ctypes._cdata method)": [[165, "ctypes._CData.from_address"]], "from_buffer() (ctypes._cdata method)": [[165, "ctypes._CData.from_buffer"]], "from_buffer_copy() (ctypes._cdata method)": [[165, "ctypes._CData.from_buffer_copy"]], "from_param() (ctypes._cdata method)": [[165, "ctypes._CData.from_param"]], "get_errno() (in module ctypes)": [[165, "ctypes.get_errno"]], "get_last_error() (in module ctypes)": [[165, "ctypes.get_last_error"]], "in_dll() (ctypes._cdata method)": [[165, "ctypes._CData.in_dll"]], "memmove() (in module ctypes)": [[165, "ctypes.memmove"]], "memset() (in module ctypes)": [[165, "ctypes.memset"]], "py_object (class in ctypes)": [[165, "ctypes.py_object"]], "resize() (in module ctypes)": [[165, "ctypes.resize"]], "restype (ctypes._funcptr attribute)": [[165, "ctypes._FuncPtr.restype"]], "set_errno() (in module ctypes)": [[165, "ctypes.set_errno"]], "set_last_error() (in module ctypes)": [[165, "ctypes.set_last_error"]], "sizeof() (in module ctypes)": [[165, "ctypes.sizeof"]], "string_at() (in module ctypes)": [[165, "ctypes.string_at"]], "value (ctypes._simplecdata attribute)": [[165, "ctypes._SimpleCData.value"]], "wstring_at() (in module ctypes)": [[165, "ctypes.wstring_at"]], "acs_bbss (in module curses)": [[166, "curses.ACS_BBSS"]], "acs_block (in module curses)": [[166, "curses.ACS_BLOCK"]], "acs_board (in module curses)": [[166, "curses.ACS_BOARD"]], "acs_bsbs (in module curses)": [[166, "curses.ACS_BSBS"]], "acs_bssb (in module curses)": [[166, "curses.ACS_BSSB"]], "acs_bsss (in module curses)": [[166, "curses.ACS_BSSS"]], "acs_btee (in module curses)": [[166, "curses.ACS_BTEE"]], "acs_bullet (in module curses)": [[166, "curses.ACS_BULLET"]], "acs_ckboard (in module curses)": [[166, "curses.ACS_CKBOARD"]], "acs_darrow (in module curses)": [[166, "curses.ACS_DARROW"]], "acs_degree (in module curses)": [[166, "curses.ACS_DEGREE"]], "acs_diamond (in module curses)": [[166, "curses.ACS_DIAMOND"]], "acs_gequal (in module curses)": [[166, "curses.ACS_GEQUAL"]], "acs_hline (in module curses)": [[166, "curses.ACS_HLINE"]], "acs_lantern (in module curses)": [[166, "curses.ACS_LANTERN"]], "acs_larrow (in module curses)": [[166, "curses.ACS_LARROW"]], "acs_lequal (in module curses)": [[166, "curses.ACS_LEQUAL"]], "acs_llcorner (in module curses)": [[166, "curses.ACS_LLCORNER"]], "acs_lrcorner (in module curses)": [[166, "curses.ACS_LRCORNER"]], "acs_ltee (in module curses)": [[166, "curses.ACS_LTEE"]], "acs_nequal (in module curses)": [[166, "curses.ACS_NEQUAL"]], "acs_pi (in module curses)": [[166, "curses.ACS_PI"]], "acs_plminus (in module curses)": [[166, "curses.ACS_PLMINUS"]], "acs_plus (in module curses)": [[166, "curses.ACS_PLUS"]], "acs_rarrow (in module curses)": [[166, "curses.ACS_RARROW"]], "acs_rtee (in module curses)": [[166, "curses.ACS_RTEE"]], "acs_s1 (in module curses)": [[166, "curses.ACS_S1"]], "acs_s3 (in module curses)": [[166, "curses.ACS_S3"]], "acs_s7 (in module curses)": [[166, "curses.ACS_S7"]], "acs_s9 (in module curses)": [[166, "curses.ACS_S9"]], "acs_sbbs (in module curses)": [[166, "curses.ACS_SBBS"]], "acs_sbsb (in module curses)": [[166, "curses.ACS_SBSB"]], "acs_sbss (in module curses)": [[166, "curses.ACS_SBSS"]], "acs_ssbb (in module curses)": [[166, "curses.ACS_SSBB"]], "acs_ssbs (in module curses)": [[166, "curses.ACS_SSBS"]], "acs_sssb (in module curses)": [[166, "curses.ACS_SSSB"]], "acs_ssss (in module curses)": [[166, "curses.ACS_SSSS"]], "acs_sterling (in module curses)": [[166, "curses.ACS_STERLING"]], "acs_ttee (in module curses)": [[166, "curses.ACS_TTEE"]], "acs_uarrow (in module curses)": [[166, "curses.ACS_UARROW"]], "acs_ulcorner (in module curses)": [[166, "curses.ACS_ULCORNER"]], "acs_urcorner (in module curses)": [[166, "curses.ACS_URCORNER"]], "acs_vline (in module curses)": [[166, "curses.ACS_VLINE"]], "a_altcharset (in module curses)": [[166, "curses.A_ALTCHARSET"]], "a_attributes (in module curses)": [[166, "curses.A_ATTRIBUTES"]], "a_blink (in module curses)": [[166, "curses.A_BLINK"]], "a_bold (in module curses)": [[166, "curses.A_BOLD"]], "a_chartext (in module curses)": [[166, "curses.A_CHARTEXT"]], "a_color (in module curses)": [[166, "curses.A_COLOR"]], "a_dim (in module curses)": [[166, "curses.A_DIM"]], "a_horizontal (in module curses)": [[166, "curses.A_HORIZONTAL"]], "a_invis (in module curses)": [[166, "curses.A_INVIS"]], "a_italic (in module curses)": [[166, "curses.A_ITALIC"]], "a_left (in module curses)": [[166, "curses.A_LEFT"]], "a_low (in module curses)": [[166, "curses.A_LOW"]], "a_normal (in module curses)": [[166, "curses.A_NORMAL"]], "a_protect (in module curses)": [[166, "curses.A_PROTECT"]], "a_reverse (in module curses)": [[166, "curses.A_REVERSE"]], "a_right (in module curses)": [[166, "curses.A_RIGHT"]], "a_standout (in module curses)": [[166, "curses.A_STANDOUT"]], "a_top (in module curses)": [[166, "curses.A_TOP"]], "a_underline (in module curses)": [[166, "curses.A_UNDERLINE"]], "a_vertical (in module curses)": [[166, "curses.A_VERTICAL"]], "button_alt (in module curses)": [[166, "curses.BUTTON_ALT"]], "button_ctrl (in module curses)": [[166, "curses.BUTTON_CTRL"]], "button_shift (in module curses)": [[166, "curses.BUTTON_SHIFT"]], "buttonn_clicked (in module curses)": [[166, "curses.BUTTONn_CLICKED"]], "buttonn_double_clicked (in module curses)": [[166, "curses.BUTTONn_DOUBLE_CLICKED"]], "buttonn_pressed (in module curses)": [[166, "curses.BUTTONn_PRESSED"]], "buttonn_released (in module curses)": [[166, "curses.BUTTONn_RELEASED"]], "buttonn_triple_clicked (in module curses)": [[166, "curses.BUTTONn_TRIPLE_CLICKED"]], "colors (in module curses)": [[166, "curses.COLORS"]], "color_black (in module curses)": [[166, "curses.COLOR_BLACK"]], "color_blue (in module curses)": [[166, "curses.COLOR_BLUE"]], "color_cyan (in module curses)": [[166, "curses.COLOR_CYAN"]], "color_green (in module curses)": [[166, "curses.COLOR_GREEN"]], "color_magenta (in module curses)": [[166, "curses.COLOR_MAGENTA"]], "color_pairs (in module curses)": [[166, "curses.COLOR_PAIRS"]], "color_red (in module curses)": [[166, "curses.COLOR_RED"]], "color_white (in module curses)": [[166, "curses.COLOR_WHITE"]], "color_yellow (in module curses)": [[166, "curses.COLOR_YELLOW"]], "cols (in module curses)": [[166, "curses.COLS"]], "columns": [[166, "index-4"], [166, "index-6"]], "err (in module curses)": [[166, "curses.ERR"]], "key_a1 (in module curses)": [[166, "curses.KEY_A1"]], "key_a3 (in module curses)": [[166, "curses.KEY_A3"]], "key_b2 (in module curses)": [[166, "curses.KEY_B2"]], "key_backspace (in module curses)": [[166, "curses.KEY_BACKSPACE"]], "key_beg (in module curses)": [[166, "curses.KEY_BEG"]], "key_break (in module curses)": [[166, "curses.KEY_BREAK"]], "key_btab (in module curses)": [[166, "curses.KEY_BTAB"]], "key_c1 (in module curses)": [[166, "curses.KEY_C1"]], "key_c3 (in module curses)": [[166, "curses.KEY_C3"]], "key_cancel (in module curses)": [[166, "curses.KEY_CANCEL"]], "key_catab (in module curses)": [[166, "curses.KEY_CATAB"]], "key_clear (in module curses)": [[166, "curses.KEY_CLEAR"]], "key_close (in module curses)": [[166, "curses.KEY_CLOSE"]], "key_command (in module curses)": [[166, "curses.KEY_COMMAND"]], "key_copy (in module curses)": [[166, "curses.KEY_COPY"]], "key_create (in module curses)": [[166, "curses.KEY_CREATE"]], "key_ctab (in module curses)": [[166, "curses.KEY_CTAB"]], "key_dc (in module curses)": [[166, "curses.KEY_DC"]], "key_dl (in module curses)": [[166, "curses.KEY_DL"]], "key_down (in module curses)": [[166, "curses.KEY_DOWN"]], "key_eic (in module curses)": [[166, "curses.KEY_EIC"]], "key_end (in module curses)": [[166, "curses.KEY_END"]], "key_enter (in module curses)": [[166, "curses.KEY_ENTER"]], "key_eol (in module curses)": [[166, "curses.KEY_EOL"]], "key_eos (in module curses)": [[166, "curses.KEY_EOS"]], "key_exit (in module curses)": [[166, "curses.KEY_EXIT"]], "key_f0 (in module curses)": [[166, "curses.KEY_F0"]], "key_find (in module curses)": [[166, "curses.KEY_FIND"]], "key_fn (in module curses)": [[166, "curses.KEY_Fn"]], "key_help (in module curses)": [[166, "curses.KEY_HELP"]], "key_home (in module curses)": [[166, "curses.KEY_HOME"]], "key_ic (in module curses)": [[166, "curses.KEY_IC"]], "key_il (in module curses)": [[166, "curses.KEY_IL"]], "key_left (in module curses)": [[166, "curses.KEY_LEFT"]], "key_ll (in module curses)": [[166, "curses.KEY_LL"]], "key_mark (in module curses)": [[166, "curses.KEY_MARK"]], "key_max (in module curses)": [[166, "curses.KEY_MAX"]], "key_message (in module curses)": [[166, "curses.KEY_MESSAGE"]], "key_min (in module curses)": [[166, "curses.KEY_MIN"]], "key_mouse (in module curses)": [[166, "curses.KEY_MOUSE"]], "key_move (in module curses)": [[166, "curses.KEY_MOVE"]], "key_next (in module curses)": [[166, "curses.KEY_NEXT"]], "key_npage (in module curses)": [[166, "curses.KEY_NPAGE"]], "key_open (in module curses)": [[166, "curses.KEY_OPEN"]], "key_options (in module curses)": [[166, "curses.KEY_OPTIONS"]], "key_ppage (in module curses)": [[166, "curses.KEY_PPAGE"]], "key_previous (in module curses)": [[166, "curses.KEY_PREVIOUS"]], "key_print (in module curses)": [[166, "curses.KEY_PRINT"]], "key_redo (in module curses)": [[166, "curses.KEY_REDO"]], "key_reference (in module curses)": [[166, "curses.KEY_REFERENCE"]], "key_refresh (in module curses)": [[166, "curses.KEY_REFRESH"]], "key_replace (in module curses)": [[166, "curses.KEY_REPLACE"]], "key_reset (in module curses)": [[166, "curses.KEY_RESET"]], "key_resize (in module curses)": [[166, "curses.KEY_RESIZE"]], "key_restart (in module curses)": [[166, "curses.KEY_RESTART"]], "key_resume (in module curses)": [[166, "curses.KEY_RESUME"]], "key_right (in module curses)": [[166, "curses.KEY_RIGHT"]], "key_save (in module curses)": [[166, "curses.KEY_SAVE"]], "key_sbeg (in module curses)": [[166, "curses.KEY_SBEG"]], "key_scancel (in module curses)": [[166, "curses.KEY_SCANCEL"]], "key_scommand (in module curses)": [[166, "curses.KEY_SCOMMAND"]], "key_scopy (in module curses)": [[166, "curses.KEY_SCOPY"]], "key_screate (in module curses)": [[166, "curses.KEY_SCREATE"]], "key_sdc (in module curses)": [[166, "curses.KEY_SDC"]], "key_sdl (in module curses)": [[166, "curses.KEY_SDL"]], "key_select (in module curses)": [[166, "curses.KEY_SELECT"]], "key_send (in module curses)": [[166, "curses.KEY_SEND"]], "key_seol (in module curses)": [[166, "curses.KEY_SEOL"]], "key_sexit (in module curses)": [[166, "curses.KEY_SEXIT"]], "key_sf (in module curses)": [[166, "curses.KEY_SF"]], "key_sfind (in module curses)": [[166, "curses.KEY_SFIND"]], "key_shelp (in module curses)": [[166, "curses.KEY_SHELP"]], "key_shome (in module curses)": [[166, "curses.KEY_SHOME"]], "key_sic (in module curses)": [[166, "curses.KEY_SIC"]], "key_sleft (in module curses)": [[166, "curses.KEY_SLEFT"]], "key_smessage (in module curses)": [[166, "curses.KEY_SMESSAGE"]], "key_smove (in module curses)": [[166, "curses.KEY_SMOVE"]], "key_snext (in module curses)": [[166, "curses.KEY_SNEXT"]], "key_soptions (in module curses)": [[166, "curses.KEY_SOPTIONS"]], "key_sprevious (in module curses)": [[166, "curses.KEY_SPREVIOUS"]], "key_sprint (in module curses)": [[166, "curses.KEY_SPRINT"]], "key_sr (in module curses)": [[166, "curses.KEY_SR"]], "key_sredo (in module curses)": [[166, "curses.KEY_SREDO"]], "key_sreplace (in module curses)": [[166, "curses.KEY_SREPLACE"]], "key_sreset (in module curses)": [[166, "curses.KEY_SRESET"]], "key_sright (in module curses)": [[166, "curses.KEY_SRIGHT"]], "key_srsume (in module curses)": [[166, "curses.KEY_SRSUME"]], "key_ssave (in module curses)": [[166, "curses.KEY_SSAVE"]], "key_ssuspend (in module curses)": [[166, "curses.KEY_SSUSPEND"]], "key_stab (in module curses)": [[166, "curses.KEY_STAB"]], "key_sundo (in module curses)": [[166, "curses.KEY_SUNDO"]], "key_suspend (in module curses)": [[166, "curses.KEY_SUSPEND"]], "key_undo (in module curses)": [[166, "curses.KEY_UNDO"]], "key_up (in module curses)": [[166, "curses.KEY_UP"]], "lines": [[166, "index-0"], [166, "index-3"], [166, "index-5"]], "lines (in module curses)": [[166, "curses.LINES"]], "ok (in module curses)": [[166, "curses.OK"]], "term": [[166, "index-1"], [166, "index-2"]], "textbox (class in curses.textpad)": [[166, "curses.textpad.Textbox"]], "__version__ (in module curses)": [[166, "curses.__version__"]], "addch() (curses.window method)": [[166, "curses.window.addch"]], "addnstr() (curses.window method)": [[166, "curses.window.addnstr"]], "addstr() (curses.window method)": [[166, "curses.window.addstr"]], "attroff() (curses.window method)": [[166, "curses.window.attroff"]], "attron() (curses.window method)": [[166, "curses.window.attron"]], "attrset() (curses.window method)": [[166, "curses.window.attrset"]], "baudrate() (in module curses)": [[166, "curses.baudrate"]], "beep() (in module curses)": [[166, "curses.beep"]], "bkgd() (curses.window method)": [[166, "curses.window.bkgd"]], "bkgdset() (curses.window method)": [[166, "curses.window.bkgdset"]], "border() (curses.window method)": [[166, "curses.window.border"]], "box() (curses.window method)": [[166, "curses.window.box"]], "can_change_color() (in module curses)": [[166, "curses.can_change_color"]], "cbreak() (in module curses)": [[166, "curses.cbreak"]], "chgat() (curses.window method)": [[166, "curses.window.chgat"]], "clear() (curses.window method)": [[166, "curses.window.clear"]], "clearok() (curses.window method)": [[166, "curses.window.clearok"]], "clrtobot() (curses.window method)": [[166, "curses.window.clrtobot"]], "clrtoeol() (curses.window method)": [[166, "curses.window.clrtoeol"]], "color_content() (in module curses)": [[166, "curses.color_content"]], "color_pair() (in module curses)": [[166, "curses.color_pair"]], "curs_set() (in module curses)": [[166, "curses.curs_set"]], "curses": [[166, "module-curses"]], "curses.textpad": [[166, "module-curses.textpad"]], "cursyncup() (curses.window method)": [[166, "curses.window.cursyncup"]], "def_prog_mode() (in module curses)": [[166, "curses.def_prog_mode"]], "def_shell_mode() (in module curses)": [[166, "curses.def_shell_mode"]], "delay_output() (in module curses)": [[166, "curses.delay_output"]], "delch() (curses.window method)": [[166, "curses.window.delch"]], "deleteln() (curses.window method)": [[166, "curses.window.deleteln"]], "derwin() (curses.window method)": [[166, "curses.window.derwin"]], "do_command() (curses.textpad.textbox method)": [[166, "curses.textpad.Textbox.do_command"]], "doupdate() (in module curses)": [[166, "curses.doupdate"]], "echo() (in module curses)": [[166, "curses.echo"]], "echochar() (curses.window method)": [[166, "curses.window.echochar"]], "edit() (curses.textpad.textbox method)": [[166, "curses.textpad.Textbox.edit"]], "enclose() (curses.window method)": [[166, "curses.window.enclose"]], "encoding (curses.window attribute)": [[166, "curses.window.encoding"]], "endwin() (in module curses)": [[166, "curses.endwin"]], "erase() (curses.window method)": [[166, "curses.window.erase"]], "erasechar() (in module curses)": [[166, "curses.erasechar"]], "filter() (in module curses)": [[166, "curses.filter"]], "flash() (in module curses)": [[166, "curses.flash"]], "flushinp() (in module curses)": [[166, "curses.flushinp"]], "gather() (curses.textpad.textbox method)": [[166, "curses.textpad.Textbox.gather"]], "get_escdelay() (in module curses)": [[166, "curses.get_escdelay"]], "get_tabsize() (in module curses)": [[166, "curses.get_tabsize"]], "get_wch() (curses.window method)": [[166, "curses.window.get_wch"]], "getbegyx() (curses.window method)": [[166, "curses.window.getbegyx"]], "getbkgd() (curses.window method)": [[166, "curses.window.getbkgd"]], "getch() (curses.window method)": [[166, "curses.window.getch"]], "getkey() (curses.window method)": [[166, "curses.window.getkey"]], "getmaxyx() (curses.window method)": [[166, "curses.window.getmaxyx"]], "getmouse() (in module curses)": [[166, "curses.getmouse"]], "getparyx() (curses.window method)": [[166, "curses.window.getparyx"]], "getstr() (curses.window method)": [[166, "curses.window.getstr"]], "getsyx() (in module curses)": [[166, "curses.getsyx"]], "getwin() (in module curses)": [[166, "curses.getwin"]], "getyx() (curses.window method)": [[166, "curses.window.getyx"]], "halfdelay() (in module curses)": [[166, "curses.halfdelay"]], "has_colors() (in module curses)": [[166, "curses.has_colors"]], "has_extended_color_support() (in module curses)": [[166, "curses.has_extended_color_support"]], "has_ic() (in module curses)": [[166, "curses.has_ic"]], "has_il() (in module curses)": [[166, "curses.has_il"]], "has_key() (in module curses)": [[166, "curses.has_key"]], "hline() (curses.window method)": [[166, "curses.window.hline"]], "idcok() (curses.window method)": [[166, "curses.window.idcok"]], "idlok() (curses.window method)": [[166, "curses.window.idlok"]], "immedok() (curses.window method)": [[166, "curses.window.immedok"]], "inch() (curses.window method)": [[166, "curses.window.inch"]], "init_color() (in module curses)": [[166, "curses.init_color"]], "init_pair() (in module curses)": [[166, "curses.init_pair"]], "initscr() (in module curses)": [[166, "curses.initscr"]], "insch() (curses.window method)": [[166, "curses.window.insch"]], "insdelln() (curses.window method)": [[166, "curses.window.insdelln"]], "insertln() (curses.window method)": [[166, "curses.window.insertln"]], "insnstr() (curses.window method)": [[166, "curses.window.insnstr"]], "insstr() (curses.window method)": [[166, "curses.window.insstr"]], "instr() (curses.window method)": [[166, "curses.window.instr"]], "is_linetouched() (curses.window method)": [[166, "curses.window.is_linetouched"]], "is_term_resized() (in module curses)": [[166, "curses.is_term_resized"]], "is_wintouched() (curses.window method)": [[166, "curses.window.is_wintouched"]], "isendwin() (in module curses)": [[166, "curses.isendwin"]], "keyname() (in module curses)": [[166, "curses.keyname"]], "keypad() (curses.window method)": [[166, "curses.window.keypad"]], "killchar() (in module curses)": [[166, "curses.killchar"]], "leaveok() (curses.window method)": [[166, "curses.window.leaveok"]], "longname() (in module curses)": [[166, "curses.longname"]], "meta() (in module curses)": [[166, "curses.meta"]], "mouseinterval() (in module curses)": [[166, "curses.mouseinterval"]], "mousemask() (in module curses)": [[166, "curses.mousemask"]], "move() (curses.window method)": [[166, "curses.window.move"]], "mvderwin() (curses.window method)": [[166, "curses.window.mvderwin"]], "mvwin() (curses.window method)": [[166, "curses.window.mvwin"]], "napms() (in module curses)": [[166, "curses.napms"]], "ncurses_version (in module curses)": [[166, "curses.ncurses_version"]], "newpad() (in module curses)": [[166, "curses.newpad"]], "newwin() (in module curses)": [[166, "curses.newwin"]], "nl() (in module curses)": [[166, "curses.nl"]], "nocbreak() (in module curses)": [[166, "curses.nocbreak"]], "nodelay() (curses.window method)": [[166, "curses.window.nodelay"]], "noecho() (in module curses)": [[166, "curses.noecho"]], "nonl() (in module curses)": [[166, "curses.nonl"]], "noqiflush() (in module curses)": [[166, "curses.noqiflush"]], "noraw() (in module curses)": [[166, "curses.noraw"]], "notimeout() (curses.window method)": [[166, "curses.window.notimeout"]], "noutrefresh() (curses.window method)": [[166, "curses.window.noutrefresh"]], "overlay() (curses.window method)": [[166, "curses.window.overlay"]], "overwrite() (curses.window method)": [[166, "curses.window.overwrite"]], "pair_content() (in module curses)": [[166, "curses.pair_content"]], "pair_number() (in module curses)": [[166, "curses.pair_number"]], "putp() (in module curses)": [[166, "curses.putp"]], "putwin() (curses.window method)": [[166, "curses.window.putwin"]], "qiflush() (in module curses)": [[166, "curses.qiflush"]], "raw() (in module curses)": [[166, "curses.raw"]], "rectangle() (in module curses.textpad)": [[166, "curses.textpad.rectangle"]], "redrawln() (curses.window method)": [[166, "curses.window.redrawln"]], "redrawwin() (curses.window method)": [[166, "curses.window.redrawwin"]], "refresh() (curses.window method)": [[166, "curses.window.refresh"]], "reset_prog_mode() (in module curses)": [[166, "curses.reset_prog_mode"]], "reset_shell_mode() (in module curses)": [[166, "curses.reset_shell_mode"]], "resetty() (in module curses)": [[166, "curses.resetty"]], "resize() (curses.window method)": [[166, "curses.window.resize"]], "resize_term() (in module curses)": [[166, "curses.resize_term"]], "resizeterm() (in module curses)": [[166, "curses.resizeterm"]], "savetty() (in module curses)": [[166, "curses.savetty"]], "scroll() (curses.window method)": [[166, "curses.window.scroll"]], "scrollok() (curses.window method)": [[166, "curses.window.scrollok"]], "set_escdelay() (in module curses)": [[166, "curses.set_escdelay"]], "set_tabsize() (in module curses)": [[166, "curses.set_tabsize"]], "setscrreg() (curses.window method)": [[166, "curses.window.setscrreg"]], "setsyx() (in module curses)": [[166, "curses.setsyx"]], "setupterm() (in module curses)": [[166, "curses.setupterm"]], "standend() (curses.window method)": [[166, "curses.window.standend"]], "standout() (curses.window method)": [[166, "curses.window.standout"]], "start_color() (in module curses)": [[166, "curses.start_color"]], "stripspaces (curses.textpad.textbox attribute)": [[166, "curses.textpad.Textbox.stripspaces"]], "subpad() (curses.window method)": [[166, "curses.window.subpad"]], "subwin() (curses.window method)": [[166, "curses.window.subwin"]], "syncdown() (curses.window method)": [[166, "curses.window.syncdown"]], "syncok() (curses.window method)": [[166, "curses.window.syncok"]], "syncup() (curses.window method)": [[166, "curses.window.syncup"]], "termattrs() (in module curses)": [[166, "curses.termattrs"]], "termname() (in module curses)": [[166, "curses.termname"]], "tigetflag() (in module curses)": [[166, "curses.tigetflag"]], "tigetnum() (in module curses)": [[166, "curses.tigetnum"]], "tigetstr() (in module curses)": [[166, "curses.tigetstr"]], "timeout() (curses.window method)": [[166, "curses.window.timeout"]], "touchline() (curses.window method)": [[166, "curses.window.touchline"]], "touchwin() (curses.window method)": [[166, "curses.window.touchwin"]], "tparm() (in module curses)": [[166, "curses.tparm"]], "typeahead() (in module curses)": [[166, "curses.typeahead"]], "unctrl() (in module curses)": [[166, "curses.unctrl"]], "unget_wch() (in module curses)": [[166, "curses.unget_wch"]], "ungetch() (in module curses)": [[166, "curses.ungetch"]], "ungetmouse() (in module curses)": [[166, "curses.ungetmouse"]], "untouchwin() (curses.window method)": [[166, "curses.window.untouchwin"]], "update_lines_cols() (in module curses)": [[166, "curses.update_lines_cols"]], "use_default_colors() (in module curses)": [[166, "curses.use_default_colors"]], "use_env() (in module curses)": [[166, "curses.use_env"]], "version (in module curses)": [[166, "curses.version"]], "vline() (curses.window method)": [[166, "curses.window.vline"]], "wrapper() (in module curses)": [[166, "curses.wrapper"]], "ack (in module curses.ascii)": [[167, "curses.ascii.ACK"]], "bel (in module curses.ascii)": [[167, "curses.ascii.BEL"]], "bs (in module curses.ascii)": [[167, "curses.ascii.BS"]], "can (in module curses.ascii)": [[167, "curses.ascii.CAN"]], "cr (in module curses.ascii)": [[167, "curses.ascii.CR"]], "dc1 (in module curses.ascii)": [[167, "curses.ascii.DC1"]], "dc2 (in module curses.ascii)": [[167, "curses.ascii.DC2"]], "dc3 (in module curses.ascii)": [[167, "curses.ascii.DC3"]], "dc4 (in module curses.ascii)": [[167, "curses.ascii.DC4"]], "del (in module curses.ascii)": [[167, "curses.ascii.DEL"]], "dle (in module curses.ascii)": [[167, "curses.ascii.DLE"]], "em (in module curses.ascii)": [[167, "curses.ascii.EM"]], "enq (in module curses.ascii)": [[167, "curses.ascii.ENQ"]], "eot (in module curses.ascii)": [[167, "curses.ascii.EOT"]], "esc (in module curses.ascii)": [[167, "curses.ascii.ESC"]], "etb (in module curses.ascii)": [[167, "curses.ascii.ETB"]], "etx (in module curses.ascii)": [[167, "curses.ascii.ETX"]], "ff (in module curses.ascii)": [[167, "curses.ascii.FF"]], "fs (in module curses.ascii)": [[167, "curses.ascii.FS"]], "gs (in module curses.ascii)": [[167, "curses.ascii.GS"]], "ht (in module curses.ascii)": [[167, "curses.ascii.HT"]], "lf (in module curses.ascii)": [[167, "curses.ascii.LF"]], "nak (in module curses.ascii)": [[167, "curses.ascii.NAK"]], "nl (in module curses.ascii)": [[167, "curses.ascii.NL"]], "nul (in module curses.ascii)": [[167, "curses.ascii.NUL"]], "rs (in module curses.ascii)": [[167, "curses.ascii.RS"]], "si (in module curses.ascii)": [[167, "curses.ascii.SI"]], "so (in module curses.ascii)": [[167, "curses.ascii.SO"]], "soh (in module curses.ascii)": [[167, "curses.ascii.SOH"]], "sp (in module curses.ascii)": [[167, "curses.ascii.SP"]], "stx (in module curses.ascii)": [[167, "curses.ascii.STX"]], "sub (in module curses.ascii)": [[167, "curses.ascii.SUB"]], "syn (in module curses.ascii)": [[167, "curses.ascii.SYN"]], "tab (in module curses.ascii)": [[167, "curses.ascii.TAB"]], "us (in module curses.ascii)": [[167, "curses.ascii.US"]], "vt (in module curses.ascii)": [[167, "curses.ascii.VT"]], "^ (caret)": [[167, "index-0"], [182, "index-1"], [301, "index-1"], [301, "index-13"], [324, "index-16"], [325, "index-3"], [358, "index-1"], [405, "index-75"]], "alt() (in module curses.ascii)": [[167, "curses.ascii.alt"]], "ascii() (in module curses.ascii)": [[167, "curses.ascii.ascii"]], "controlnames (in module curses.ascii)": [[167, "curses.ascii.controlnames"]], "ctrl() (in module curses.ascii)": [[167, "curses.ascii.ctrl"]], "curses.ascii": [[167, "module-curses.ascii"]], "in curses module": [[167, "index-0"]], "isalnum() (in module curses.ascii)": [[167, "curses.ascii.isalnum"]], "isalpha() (in module curses.ascii)": [[167, "curses.ascii.isalpha"]], "isascii() (in module curses.ascii)": [[167, "curses.ascii.isascii"]], "isblank() (in module curses.ascii)": [[167, "curses.ascii.isblank"]], "iscntrl() (in module curses.ascii)": [[167, "curses.ascii.iscntrl"]], "isctrl() (in module curses.ascii)": [[167, "curses.ascii.isctrl"]], "isdigit() (in module curses.ascii)": [[167, "curses.ascii.isdigit"]], "isgraph() (in module curses.ascii)": [[167, "curses.ascii.isgraph"]], "islower() (in module curses.ascii)": [[167, "curses.ascii.islower"]], "ismeta() (in module curses.ascii)": [[167, "curses.ascii.ismeta"]], "isprint() (in module curses.ascii)": [[167, "curses.ascii.isprint"]], "ispunct() (in module curses.ascii)": [[167, "curses.ascii.ispunct"]], "isspace() (in module curses.ascii)": [[167, "curses.ascii.isspace"]], "isupper() (in module curses.ascii)": [[167, "curses.ascii.isupper"]], "isxdigit() (in module curses.ascii)": [[167, "curses.ascii.isxdigit"]], "unctrl() (in module curses.ascii)": [[167, "curses.ascii.unctrl"]], "above() (curses.panel.panel method)": [[168, "curses.panel.Panel.above"]], "below() (curses.panel.panel method)": [[168, "curses.panel.Panel.below"]], "bottom() (curses.panel.panel method)": [[168, "curses.panel.Panel.bottom"]], "bottom_panel() (in module curses.panel)": [[168, "curses.panel.bottom_panel"]], "curses.panel": [[168, "module-curses.panel"]], "hidden() (curses.panel.panel method)": [[168, "curses.panel.Panel.hidden"]], "hide() (curses.panel.panel method)": [[168, "curses.panel.Panel.hide"]], "move() (curses.panel.panel method)": [[168, "curses.panel.Panel.move"]], "new_panel() (in module curses.panel)": [[168, "curses.panel.new_panel"]], "replace() (curses.panel.panel method)": [[168, "curses.panel.Panel.replace"]], "set_userptr() (curses.panel.panel method)": [[168, "curses.panel.Panel.set_userptr"]], "show() (curses.panel.panel method)": [[168, "curses.panel.Panel.show"]], "top() (curses.panel.panel method)": [[168, "curses.panel.Panel.top"]], "top_panel() (in module curses.panel)": [[168, "curses.panel.top_panel"]], "update_panels() (in module curses.panel)": [[168, "curses.panel.update_panels"]], "userptr() (curses.panel.panel method)": [[168, "curses.panel.Panel.userptr"]], "window() (curses.panel.panel method)": [[168, "curses.panel.Panel.window"]], "field (class in dataclasses)": [[170, "dataclasses.Field"]], "frozeninstanceerror": [[170, "dataclasses.FrozenInstanceError"]], "kw_only (in module dataclasses)": [[170, "dataclasses.KW_ONLY"]], "missing (in module dataclasses)": [[170, "dataclasses.MISSING"]], "pep 557": [[170, "index-0"], [456, "index-29"]], "__post_init__() (in module dataclasses)": [[170, "dataclasses.__post_init__"]], "asdict() (in module dataclasses)": [[170, "dataclasses.asdict"]], "astuple() (in module dataclasses)": [[170, "dataclasses.astuple"]], "dataclass() (in module dataclasses)": [[170, "dataclasses.dataclass"]], "dataclasses": [[170, "module-dataclasses"]], "field() (in module dataclasses)": [[170, "dataclasses.field"]], "fields() (in module dataclasses)": [[170, "dataclasses.fields"]], "is_dataclass() (in module dataclasses)": [[170, "dataclasses.is_dataclass"]], "make_dataclass() (in module dataclasses)": [[170, "dataclasses.make_dataclass"]], "replace() (in module dataclasses)": [[170, "dataclasses.replace"]], "maxyear (in module datetime)": [[172, "datetime.MAXYEAR"]], "minyear (in module datetime)": [[172, "datetime.MINYEAR"]], "utc (in module datetime)": [[172, "datetime.UTC"]], "__format__() (datetime.date method)": [[172, "datetime.date.__format__"]], "__format__() (datetime.datetime method)": [[172, "datetime.datetime.__format__"]], "__format__() (datetime.time method)": [[172, "datetime.time.__format__"]], "__str__() (datetime.date method)": [[172, "datetime.date.__str__"]], "__str__() (datetime.datetime method)": [[172, "datetime.datetime.__str__"]], "__str__() (datetime.time method)": [[172, "datetime.time.__str__"]], "astimezone() (datetime.datetime method)": [[172, "datetime.datetime.astimezone"]], "combine() (datetime.datetime class method)": [[172, "datetime.datetime.combine"]], "ctime() (datetime.date method)": [[172, "datetime.date.ctime"]], "ctime() (datetime.datetime method)": [[172, "datetime.datetime.ctime"]], "date (class in datetime)": [[172, "datetime.date"]], "date() (datetime.datetime method)": [[172, "datetime.datetime.date"]], "datetime": [[172, "module-datetime"]], "datetime (class in datetime)": [[172, "datetime.datetime"]], "datetime format": [[172, "index-0"], [344, "index-11"], [344, "index-9"]], "day (datetime.date attribute)": [[172, "datetime.date.day"]], "day (datetime.datetime attribute)": [[172, "datetime.datetime.day"]], "dst() (datetime.datetime method)": [[172, "datetime.datetime.dst"]], "dst() (datetime.time method)": [[172, "datetime.time.dst"]], "dst() (datetime.timezone method)": [[172, "datetime.timezone.dst"]], "dst() (datetime.tzinfo method)": [[172, "datetime.tzinfo.dst"]], "fold (datetime.datetime attribute)": [[172, "datetime.datetime.fold"]], "fold (datetime.time attribute)": [[172, "datetime.time.fold"]], "fromisocalendar() (datetime.date class method)": [[172, "datetime.date.fromisocalendar"]], "fromisocalendar() (datetime.datetime class method)": [[172, "datetime.datetime.fromisocalendar"]], "fromisoformat() (datetime.date class method)": [[172, "datetime.date.fromisoformat"]], "fromisoformat() (datetime.datetime class method)": [[172, "datetime.datetime.fromisoformat"]], "fromisoformat() (datetime.time class method)": [[172, "datetime.time.fromisoformat"]], "fromordinal() (datetime.date class method)": [[172, "datetime.date.fromordinal"]], "fromordinal() (datetime.datetime class method)": [[172, "datetime.datetime.fromordinal"]], "fromtimestamp() (datetime.date class method)": [[172, "datetime.date.fromtimestamp"]], "fromtimestamp() (datetime.datetime class method)": [[172, "datetime.datetime.fromtimestamp"]], "fromutc() (datetime.timezone method)": [[172, "datetime.timezone.fromutc"]], "fromutc() (datetime.tzinfo method)": [[172, "datetime.tzinfo.fromutc"]], "hour (datetime.datetime attribute)": [[172, "datetime.datetime.hour"]], "hour (datetime.time attribute)": [[172, "datetime.time.hour"]], "isocalendar() (datetime.date method)": [[172, "datetime.date.isocalendar"]], "isocalendar() (datetime.datetime method)": [[172, "datetime.datetime.isocalendar"]], "isoformat() (datetime.date method)": [[172, "datetime.date.isoformat"]], "isoformat() (datetime.datetime method)": [[172, "datetime.datetime.isoformat"]], "isoformat() (datetime.time method)": [[172, "datetime.time.isoformat"]], "isoweekday() (datetime.date method)": [[172, "datetime.date.isoweekday"]], "isoweekday() (datetime.datetime method)": [[172, "datetime.datetime.isoweekday"]], "max (datetime.date attribute)": [[172, "datetime.date.max"]], "max (datetime.datetime attribute)": [[172, "datetime.datetime.max"]], "max (datetime.time attribute)": [[172, "datetime.time.max"]], "max (datetime.timedelta attribute)": [[172, "datetime.timedelta.max"]], "microsecond (datetime.datetime attribute)": [[172, "datetime.datetime.microsecond"]], "microsecond (datetime.time attribute)": [[172, "datetime.time.microsecond"]], "min (datetime.date attribute)": [[172, "datetime.date.min"]], "min (datetime.datetime attribute)": [[172, "datetime.datetime.min"]], "min (datetime.time attribute)": [[172, "datetime.time.min"]], "min (datetime.timedelta attribute)": [[172, "datetime.timedelta.min"]], "minute (datetime.datetime attribute)": [[172, "datetime.datetime.minute"]], "minute (datetime.time attribute)": [[172, "datetime.time.minute"]], "month (datetime.date attribute)": [[172, "datetime.date.month"]], "month (datetime.datetime attribute)": [[172, "datetime.datetime.month"]], "now() (datetime.datetime class method)": [[172, "datetime.datetime.now"]], "replace() (datetime.date method)": [[172, "datetime.date.replace"]], "replace() (datetime.datetime method)": [[172, "datetime.datetime.replace"]], "replace() (datetime.time method)": [[172, "datetime.time.replace"]], "resolution (datetime.date attribute)": [[172, "datetime.date.resolution"]], "resolution (datetime.datetime attribute)": [[172, "datetime.datetime.resolution"]], "resolution (datetime.time attribute)": [[172, "datetime.time.resolution"]], "resolution (datetime.timedelta attribute)": [[172, "datetime.timedelta.resolution"]], "second (datetime.datetime attribute)": [[172, "datetime.datetime.second"]], "second (datetime.time attribute)": [[172, "datetime.time.second"]], "strftime() (datetime.date method)": [[172, "datetime.date.strftime"]], "strftime() (datetime.datetime method)": [[172, "datetime.datetime.strftime"]], "strftime() (datetime.time method)": [[172, "datetime.time.strftime"]], "strptime() (datetime.datetime class method)": [[172, "datetime.datetime.strptime"]], "time (class in datetime)": [[172, "datetime.time"]], "time() (datetime.datetime method)": [[172, "datetime.datetime.time"]], "timedelta (class in datetime)": [[172, "datetime.timedelta"]], "timestamp() (datetime.datetime method)": [[172, "datetime.datetime.timestamp"]], "timetuple() (datetime.date method)": [[172, "datetime.date.timetuple"]], "timetuple() (datetime.datetime method)": [[172, "datetime.datetime.timetuple"]], "timetz() (datetime.datetime method)": [[172, "datetime.datetime.timetz"]], "timezone (class in datetime)": [[172, "datetime.timezone"]], "today() (datetime.date class method)": [[172, "datetime.date.today"]], "today() (datetime.datetime class method)": [[172, "datetime.datetime.today"]], "toordinal() (datetime.date method)": [[172, "datetime.date.toordinal"]], "toordinal() (datetime.datetime method)": [[172, "datetime.datetime.toordinal"]], "total_seconds() (datetime.timedelta method)": [[172, "datetime.timedelta.total_seconds"]], "tzinfo (class in datetime)": [[172, "datetime.tzinfo"]], "tzinfo (datetime.datetime attribute)": [[172, "datetime.datetime.tzinfo"]], "tzinfo (datetime.time attribute)": [[172, "datetime.time.tzinfo"]], "tzname() (datetime.datetime method)": [[172, "datetime.datetime.tzname"]], "tzname() (datetime.time method)": [[172, "datetime.time.tzname"]], "tzname() (datetime.timezone method)": [[172, "datetime.timezone.tzname"]], "tzname() (datetime.tzinfo method)": [[172, "datetime.tzinfo.tzname"]], "utc (datetime.timezone attribute)": [[172, "datetime.timezone.utc"]], "utcfromtimestamp() (datetime.datetime class method)": [[172, "datetime.datetime.utcfromtimestamp"]], "utcnow() (datetime.datetime class method)": [[172, "datetime.datetime.utcnow"]], "utcoffset() (datetime.datetime method)": [[172, "datetime.datetime.utcoffset"]], "utcoffset() (datetime.time method)": [[172, "datetime.time.utcoffset"]], "utcoffset() (datetime.timezone method)": [[172, "datetime.timezone.utcoffset"]], "utcoffset() (datetime.tzinfo method)": [[172, "datetime.tzinfo.utcoffset"]], "utctimetuple() (datetime.datetime method)": [[172, "datetime.datetime.utctimetuple"]], "weekday() (datetime.date method)": [[172, "datetime.date.weekday"]], "weekday() (datetime.datetime method)": [[172, "datetime.datetime.weekday"]], "year (datetime.date attribute)": [[172, "datetime.date.year"]], "year (datetime.datetime attribute)": [[172, "datetime.datetime.year"]], "clear() (dbm.gnu.gdbm method)": [[173, "dbm.gnu.gdbm.clear"]], "clear() (dbm.ndbm.ndbm method)": [[173, "dbm.ndbm.ndbm.clear"]], "close() (dbm.dumb.dumbdbm method)": [[173, "dbm.dumb.dumbdbm.close"]], "close() (dbm.gnu.gdbm method)": [[173, "dbm.gnu.gdbm.close"]], "close() (dbm.ndbm.ndbm method)": [[173, "dbm.ndbm.ndbm.close"]], "databases": [[173, "index-0"]], "dbm": [[173, "module-dbm"]], "dbm.dumb": [[173, "module-dbm.dumb"]], "dbm.gnu": [[173, "module-dbm.gnu"], [312, "index-1"], [403, "index-32"]], "dbm.ndbm": [[173, "module-dbm.ndbm"], [312, "index-1"], [403, "index-32"]], "firstkey() (dbm.gnu.gdbm method)": [[173, "dbm.gnu.gdbm.firstkey"]], "library (in module dbm.ndbm)": [[173, "dbm.ndbm.library"]], "nextkey() (dbm.gnu.gdbm method)": [[173, "dbm.gnu.gdbm.nextkey"]], "open() (in module dbm)": [[173, "dbm.open"]], "open() (in module dbm.dumb)": [[173, "dbm.dumb.open"]], "open() (in module dbm.gnu)": [[173, "dbm.gnu.open"]], "open() (in module dbm.ndbm)": [[173, "dbm.ndbm.open"]], "reorganize() (dbm.gnu.gdbm method)": [[173, "dbm.gnu.gdbm.reorganize"]], "sync() (dbm.dumb.dumbdbm method)": [[173, "dbm.dumb.dumbdbm.sync"]], "sync() (dbm.gnu.gdbm method)": [[173, "dbm.gnu.gdbm.sync"]], "whichdb() (in module dbm)": [[173, "dbm.whichdb"]], "basiccontext (class in decimal)": [[175, "decimal.BasicContext"]], "clamped (class in decimal)": [[175, "decimal.Clamped"]], "context (class in decimal)": [[175, "decimal.Context"]], "decimal (class in decimal)": [[175, "decimal.Decimal"]], "decimalexception (class in decimal)": [[175, "decimal.DecimalException"]], "defaultcontext (class in decimal)": [[175, "decimal.DefaultContext"]], "divisionbyzero (class in decimal)": [[175, "decimal.DivisionByZero"]], "etiny() (decimal.context method)": [[175, "decimal.Context.Etiny"]], "etop() (decimal.context method)": [[175, "decimal.Context.Etop"]], "extendedcontext (class in decimal)": [[175, "decimal.ExtendedContext"]], "floatoperation (class in decimal)": [[175, "decimal.FloatOperation"]], "have_contextvar (in module decimal)": [[175, "decimal.HAVE_CONTEXTVAR"]], "have_threads (in module decimal)": [[175, "decimal.HAVE_THREADS"]], "inexact (class in decimal)": [[175, "decimal.Inexact"]], "invalidoperation (class in decimal)": [[175, "decimal.InvalidOperation"]], "max_emax (in module decimal)": [[175, "decimal.MAX_EMAX"]], "max_prec (in module decimal)": [[175, "decimal.MAX_PREC"]], "min_emin (in module decimal)": [[175, "decimal.MIN_EMIN"]], "min_etiny (in module decimal)": [[175, "decimal.MIN_ETINY"]], "overflow (class in decimal)": [[175, "decimal.Overflow"]], "round_05up (in module decimal)": [[175, "decimal.ROUND_05UP"]], "round_ceiling (in module decimal)": [[175, "decimal.ROUND_CEILING"]], "round_down (in module decimal)": [[175, "decimal.ROUND_DOWN"]], "round_floor (in module decimal)": [[175, "decimal.ROUND_FLOOR"]], "round_half_down (in module decimal)": [[175, "decimal.ROUND_HALF_DOWN"]], "round_half_even (in module decimal)": [[175, "decimal.ROUND_HALF_EVEN"]], "round_half_up (in module decimal)": [[175, "decimal.ROUND_HALF_UP"]], "round_up (in module decimal)": [[175, "decimal.ROUND_UP"]], "rounded (class in decimal)": [[175, "decimal.Rounded"]], "subnormal (class in decimal)": [[175, "decimal.Subnormal"]], "underflow (class in decimal)": [[175, "decimal.Underflow"]], "abs() (decimal.context method)": [[175, "decimal.Context.abs"]], "add() (decimal.context method)": [[175, "decimal.Context.add"]], "adjusted() (decimal.decimal method)": [[175, "decimal.Decimal.adjusted"]], "as_integer_ratio() (decimal.decimal method)": [[175, "decimal.Decimal.as_integer_ratio"]], "as_tuple() (decimal.decimal method)": [[175, "decimal.Decimal.as_tuple"]], "canonical() (decimal.context method)": [[175, "decimal.Context.canonical"]], "canonical() (decimal.decimal method)": [[175, "decimal.Decimal.canonical"]], "clear_flags() (decimal.context method)": [[175, "decimal.Context.clear_flags"]], "clear_traps() (decimal.context method)": [[175, "decimal.Context.clear_traps"]], "compare() (decimal.context method)": [[175, "decimal.Context.compare"]], "compare() (decimal.decimal method)": [[175, "decimal.Decimal.compare"]], "compare_signal() (decimal.context method)": [[175, "decimal.Context.compare_signal"]], "compare_signal() (decimal.decimal method)": [[175, "decimal.Decimal.compare_signal"]], "compare_total() (decimal.context method)": [[175, "decimal.Context.compare_total"]], "compare_total() (decimal.decimal method)": [[175, "decimal.Decimal.compare_total"]], "compare_total_mag() (decimal.context method)": [[175, "decimal.Context.compare_total_mag"]], "compare_total_mag() (decimal.decimal method)": [[175, "decimal.Decimal.compare_total_mag"]], "conjugate() (decimal.decimal method)": [[175, "decimal.Decimal.conjugate"]], "copy() (decimal.context method)": [[175, "decimal.Context.copy"]], "copy_abs() (decimal.context method)": [[175, "decimal.Context.copy_abs"]], "copy_abs() (decimal.decimal method)": [[175, "decimal.Decimal.copy_abs"]], "copy_decimal() (decimal.context method)": [[175, "decimal.Context.copy_decimal"]], "copy_negate() (decimal.context method)": [[175, "decimal.Context.copy_negate"]], "copy_negate() (decimal.decimal method)": [[175, "decimal.Decimal.copy_negate"]], "copy_sign() (decimal.context method)": [[175, "decimal.Context.copy_sign"]], "copy_sign() (decimal.decimal method)": [[175, "decimal.Decimal.copy_sign"]], "create_decimal() (decimal.context method)": [[175, "decimal.Context.create_decimal"]], "create_decimal_from_float() (decimal.context method)": [[175, "decimal.Context.create_decimal_from_float"]], "decimal": [[175, "module-decimal"]], "divide() (decimal.context method)": [[175, "decimal.Context.divide"]], "divide_int() (decimal.context method)": [[175, "decimal.Context.divide_int"]], "divmod() (decimal.context method)": [[175, "decimal.Context.divmod"]], "exp() (decimal.context method)": [[175, "decimal.Context.exp"]], "exp() (decimal.decimal method)": [[175, "decimal.Decimal.exp"]], "fma() (decimal.context method)": [[175, "decimal.Context.fma"]], "fma() (decimal.decimal method)": [[175, "decimal.Decimal.fma"]], "from_float() (decimal.decimal class method)": [[175, "decimal.Decimal.from_float"]], "getcontext() (in module decimal)": [[175, "decimal.getcontext"]], "is_canonical() (decimal.context method)": [[175, "decimal.Context.is_canonical"]], "is_canonical() (decimal.decimal method)": [[175, "decimal.Decimal.is_canonical"]], "is_finite() (decimal.context method)": [[175, "decimal.Context.is_finite"]], "is_finite() (decimal.decimal method)": [[175, "decimal.Decimal.is_finite"]], "is_infinite() (decimal.context method)": [[175, "decimal.Context.is_infinite"]], "is_infinite() (decimal.decimal method)": [[175, "decimal.Decimal.is_infinite"]], "is_nan() (decimal.context method)": [[175, "decimal.Context.is_nan"]], "is_nan() (decimal.decimal method)": [[175, "decimal.Decimal.is_nan"]], "is_normal() (decimal.context method)": [[175, "decimal.Context.is_normal"]], "is_normal() (decimal.decimal method)": [[175, "decimal.Decimal.is_normal"]], "is_qnan() (decimal.context method)": [[175, "decimal.Context.is_qnan"]], "is_qnan() (decimal.decimal method)": [[175, "decimal.Decimal.is_qnan"]], "is_signed() (decimal.context method)": [[175, "decimal.Context.is_signed"]], "is_signed() (decimal.decimal method)": [[175, "decimal.Decimal.is_signed"]], "is_snan() (decimal.context method)": [[175, "decimal.Context.is_snan"]], "is_snan() (decimal.decimal method)": [[175, "decimal.Decimal.is_snan"]], "is_subnormal() (decimal.context method)": [[175, "decimal.Context.is_subnormal"]], "is_subnormal() (decimal.decimal method)": [[175, "decimal.Decimal.is_subnormal"]], "is_zero() (decimal.context method)": [[175, "decimal.Context.is_zero"]], "is_zero() (decimal.decimal method)": [[175, "decimal.Decimal.is_zero"]], "ln() (decimal.context method)": [[175, "decimal.Context.ln"]], "ln() (decimal.decimal method)": [[175, "decimal.Decimal.ln"]], "localcontext() (in module decimal)": [[175, "decimal.localcontext"]], "log10() (decimal.context method)": [[175, "decimal.Context.log10"]], "log10() (decimal.decimal method)": [[175, "decimal.Decimal.log10"]], "logb() (decimal.context method)": [[175, "decimal.Context.logb"]], "logb() (decimal.decimal method)": [[175, "decimal.Decimal.logb"]], "logical_and() (decimal.context method)": [[175, "decimal.Context.logical_and"]], "logical_and() (decimal.decimal method)": [[175, "decimal.Decimal.logical_and"]], "logical_invert() (decimal.context method)": [[175, "decimal.Context.logical_invert"]], "logical_invert() (decimal.decimal method)": [[175, "decimal.Decimal.logical_invert"]], "logical_or() (decimal.context method)": [[175, "decimal.Context.logical_or"]], "logical_or() (decimal.decimal method)": [[175, "decimal.Decimal.logical_or"]], "logical_xor() (decimal.context method)": [[175, "decimal.Context.logical_xor"]], "logical_xor() (decimal.decimal method)": [[175, "decimal.Decimal.logical_xor"]], "max() (decimal.context method)": [[175, "decimal.Context.max"]], "max() (decimal.decimal method)": [[175, "decimal.Decimal.max"]], "max_mag() (decimal.context method)": [[175, "decimal.Context.max_mag"]], "max_mag() (decimal.decimal method)": [[175, "decimal.Decimal.max_mag"]], "min() (decimal.context method)": [[175, "decimal.Context.min"]], "min() (decimal.decimal method)": [[175, "decimal.Decimal.min"]], "min_mag() (decimal.context method)": [[175, "decimal.Context.min_mag"]], "min_mag() (decimal.decimal method)": [[175, "decimal.Decimal.min_mag"]], "minus() (decimal.context method)": [[175, "decimal.Context.minus"]], "multiply() (decimal.context method)": [[175, "decimal.Context.multiply"]], "next_minus() (decimal.context method)": [[175, "decimal.Context.next_minus"]], "next_minus() (decimal.decimal method)": [[175, "decimal.Decimal.next_minus"]], "next_plus() (decimal.context method)": [[175, "decimal.Context.next_plus"]], "next_plus() (decimal.decimal method)": [[175, "decimal.Decimal.next_plus"]], "next_toward() (decimal.context method)": [[175, "decimal.Context.next_toward"]], "next_toward() (decimal.decimal method)": [[175, "decimal.Decimal.next_toward"]], "normalize() (decimal.context method)": [[175, "decimal.Context.normalize"]], "normalize() (decimal.decimal method)": [[175, "decimal.Decimal.normalize"]], "number_class() (decimal.context method)": [[175, "decimal.Context.number_class"]], "number_class() (decimal.decimal method)": [[175, "decimal.Decimal.number_class"]], "plus() (decimal.context method)": [[175, "decimal.Context.plus"]], "power() (decimal.context method)": [[175, "decimal.Context.power"]], "quantize() (decimal.context method)": [[175, "decimal.Context.quantize"]], "quantize() (decimal.decimal method)": [[175, "decimal.Decimal.quantize"]], "radix() (decimal.context method)": [[175, "decimal.Context.radix"]], "radix() (decimal.decimal method)": [[175, "decimal.Decimal.radix"]], "remainder() (decimal.context method)": [[175, "decimal.Context.remainder"]], "remainder_near() (decimal.context method)": [[175, "decimal.Context.remainder_near"]], "remainder_near() (decimal.decimal method)": [[175, "decimal.Decimal.remainder_near"]], "rotate() (decimal.context method)": [[175, "decimal.Context.rotate"]], "rotate() (decimal.decimal method)": [[175, "decimal.Decimal.rotate"]], "same_quantum() (decimal.context method)": [[175, "decimal.Context.same_quantum"]], "same_quantum() (decimal.decimal method)": [[175, "decimal.Decimal.same_quantum"]], "scaleb() (decimal.context method)": [[175, "decimal.Context.scaleb"]], "scaleb() (decimal.decimal method)": [[175, "decimal.Decimal.scaleb"]], "setcontext() (in module decimal)": [[175, "decimal.setcontext"]], "shift() (decimal.context method)": [[175, "decimal.Context.shift"]], "shift() (decimal.decimal method)": [[175, "decimal.Decimal.shift"]], "sqrt() (decimal.context method)": [[175, "decimal.Context.sqrt"]], "sqrt() (decimal.decimal method)": [[175, "decimal.Decimal.sqrt"]], "subtract() (decimal.context method)": [[175, "decimal.Context.subtract"]], "to_eng_string() (decimal.context method)": [[175, "decimal.Context.to_eng_string"]], "to_eng_string() (decimal.decimal method)": [[175, "decimal.Decimal.to_eng_string"]], "to_integral() (decimal.decimal method)": [[175, "decimal.Decimal.to_integral"]], "to_integral_exact() (decimal.context method)": [[175, "decimal.Context.to_integral_exact"]], "to_integral_exact() (decimal.decimal method)": [[175, "decimal.Decimal.to_integral_exact"]], "to_integral_value() (decimal.decimal method)": [[175, "decimal.Decimal.to_integral_value"]], "to_sci_string() (decimal.context method)": [[175, "decimal.Context.to_sci_string"]], "dialog (class in tkinter.commondialog)": [[178, "tkinter.commondialog.Dialog"]], "dialog (class in tkinter.simpledialog)": [[178, "tkinter.simpledialog.Dialog"]], "directory (class in tkinter.filedialog)": [[178, "tkinter.filedialog.Directory"]], "filedialog (class in tkinter.filedialog)": [[178, "tkinter.filedialog.FileDialog"]], "loadfiledialog (class in tkinter.filedialog)": [[178, "tkinter.filedialog.LoadFileDialog"]], "open (class in tkinter.filedialog)": [[178, "tkinter.filedialog.Open"]], "saveas (class in tkinter.filedialog)": [[178, "tkinter.filedialog.SaveAs"]], "savefiledialog (class in tkinter.filedialog)": [[178, "tkinter.filedialog.SaveFileDialog"]], "askdirectory() (in module tkinter.filedialog)": [[178, "tkinter.filedialog.askdirectory"]], "askfloat() (in module tkinter.simpledialog)": [[178, "tkinter.simpledialog.askfloat"]], "askinteger() (in module tkinter.simpledialog)": [[178, "tkinter.simpledialog.askinteger"]], "askopenfile() (in module tkinter.filedialog)": [[178, "tkinter.filedialog.askopenfile"]], "askopenfilename() (in module tkinter.filedialog)": [[178, "tkinter.filedialog.askopenfilename"]], "askopenfilenames() (in module tkinter.filedialog)": [[178, "tkinter.filedialog.askopenfilenames"]], "askopenfiles() (in module tkinter.filedialog)": [[178, "tkinter.filedialog.askopenfiles"]], "asksaveasfile() (in module tkinter.filedialog)": [[178, "tkinter.filedialog.asksaveasfile"]], "asksaveasfilename() (in module tkinter.filedialog)": [[178, "tkinter.filedialog.asksaveasfilename"]], "askstring() (in module tkinter.simpledialog)": [[178, "tkinter.simpledialog.askstring"]], "body() (tkinter.simpledialog.dialog method)": [[178, "tkinter.simpledialog.Dialog.body"]], "buttonbox() (tkinter.simpledialog.dialog method)": [[178, "tkinter.simpledialog.Dialog.buttonbox"]], "cancel_command() (tkinter.filedialog.filedialog method)": [[178, "tkinter.filedialog.FileDialog.cancel_command"]], "dirs_double_event() (tkinter.filedialog.filedialog method)": [[178, "tkinter.filedialog.FileDialog.dirs_double_event"]], "dirs_select_event() (tkinter.filedialog.filedialog method)": [[178, "tkinter.filedialog.FileDialog.dirs_select_event"]], "files_double_event() (tkinter.filedialog.filedialog method)": [[178, "tkinter.filedialog.FileDialog.files_double_event"]], "files_select_event() (tkinter.filedialog.filedialog method)": [[178, "tkinter.filedialog.FileDialog.files_select_event"]], "filter_command() (tkinter.filedialog.filedialog method)": [[178, "tkinter.filedialog.FileDialog.filter_command"]], "get_filter() (tkinter.filedialog.filedialog method)": [[178, "tkinter.filedialog.FileDialog.get_filter"]], "get_selection() (tkinter.filedialog.filedialog method)": [[178, "tkinter.filedialog.FileDialog.get_selection"]], "go() (tkinter.filedialog.filedialog method)": [[178, "tkinter.filedialog.FileDialog.go"]], "ok_command() (tkinter.filedialog.loadfiledialog method)": [[178, "tkinter.filedialog.LoadFileDialog.ok_command"]], "ok_command() (tkinter.filedialog.savefiledialog method)": [[178, "tkinter.filedialog.SaveFileDialog.ok_command"]], "ok_event() (tkinter.filedialog.filedialog method)": [[178, "tkinter.filedialog.FileDialog.ok_event"]], "quit() (tkinter.filedialog.filedialog method)": [[178, "tkinter.filedialog.FileDialog.quit"]], "set_filter() (tkinter.filedialog.filedialog method)": [[178, "tkinter.filedialog.FileDialog.set_filter"]], "set_selection() (tkinter.filedialog.filedialog method)": [[178, "tkinter.filedialog.FileDialog.set_selection"]], "show() (tkinter.commondialog.dialog method)": [[178, "tkinter.commondialog.Dialog.show"]], "tkinter.commondialog": [[178, "module-tkinter.commondialog"]], "tkinter.filedialog": [[178, "module-tkinter.filedialog"]], "tkinter.simpledialog": [[178, "module-tkinter.simpledialog"]], "differ (class in difflib)": [[179, "difflib.Differ"]], "htmldiff (class in difflib)": [[179, "difflib.HtmlDiff"]], "is_character_junk() (in module difflib)": [[179, "difflib.IS_CHARACTER_JUNK"]], "is_line_junk() (in module difflib)": [[179, "difflib.IS_LINE_JUNK"]], "sequencematcher (class in difflib)": [[179, "difflib.SequenceMatcher"]], "__init__() (difflib.htmldiff method)": [[179, "difflib.HtmlDiff.__init__"]], "compare() (difflib.differ method)": [[179, "difflib.Differ.compare"]], "context_diff() (in module difflib)": [[179, "difflib.context_diff"]], "diff_bytes() (in module difflib)": [[179, "difflib.diff_bytes"]], "difflib": [[179, "module-difflib"]], "find_longest_match() (difflib.sequencematcher method)": [[179, "difflib.SequenceMatcher.find_longest_match"]], "get_close_matches() (in module difflib)": [[179, "difflib.get_close_matches"]], "get_grouped_opcodes() (difflib.sequencematcher method)": [[179, "difflib.SequenceMatcher.get_grouped_opcodes"]], "get_matching_blocks() (difflib.sequencematcher method)": [[179, "difflib.SequenceMatcher.get_matching_blocks"]], "get_opcodes() (difflib.sequencematcher method)": [[179, "difflib.SequenceMatcher.get_opcodes"]], "make_file() (difflib.htmldiff method)": [[179, "difflib.HtmlDiff.make_file"]], "make_table() (difflib.htmldiff method)": [[179, "difflib.HtmlDiff.make_table"]], "ndiff() (in module difflib)": [[179, "difflib.ndiff"]], "quick_ratio() (difflib.sequencematcher method)": [[179, "difflib.SequenceMatcher.quick_ratio"]], "ratio() (difflib.sequencematcher method)": [[179, "difflib.SequenceMatcher.ratio"]], "real_quick_ratio() (difflib.sequencematcher method)": [[179, "difflib.SequenceMatcher.real_quick_ratio"]], "restore() (in module difflib)": [[179, "difflib.restore"]], "set_seq1() (difflib.sequencematcher method)": [[179, "difflib.SequenceMatcher.set_seq1"]], "set_seq2() (difflib.sequencematcher method)": [[179, "difflib.SequenceMatcher.set_seq2"]], "set_seqs() (difflib.sequencematcher method)": [[179, "difflib.SequenceMatcher.set_seqs"]], "unified_diff() (in module difflib)": [[179, "difflib.unified_diff"]], "before_async_with (opcode)": [[180, "opcode-BEFORE_ASYNC_WITH"]], "before_with (opcode)": [[180, "opcode-BEFORE_WITH"]], "binary_op (opcode)": [[180, "opcode-BINARY_OP"]], "binary_slice (opcode)": [[180, "opcode-BINARY_SLICE"]], "binary_subscr (opcode)": [[180, "opcode-BINARY_SUBSCR"]], "build_const_key_map (opcode)": [[180, "opcode-BUILD_CONST_KEY_MAP"]], "build_list (opcode)": [[180, "opcode-BUILD_LIST"]], "build_map (opcode)": [[180, "opcode-BUILD_MAP"]], "build_set (opcode)": [[180, "opcode-BUILD_SET"]], "build_slice (opcode)": [[180, "opcode-BUILD_SLICE"]], "build_string (opcode)": [[180, "opcode-BUILD_STRING"]], "build_tuple (opcode)": [[180, "opcode-BUILD_TUPLE"]], "bytecode (class in dis)": [[180, "dis.Bytecode"]], "bytecode.codeobj (in module dis)": [[180, "dis.Bytecode.codeobj"]], "bytecode.first_line (in module dis)": [[180, "dis.Bytecode.first_line"]], "cache (opcode)": [[180, "opcode-CACHE"]], "call (opcode)": [[180, "opcode-CALL"]], "call_function_ex (opcode)": [[180, "opcode-CALL_FUNCTION_EX"]], "call_intrinsic_1 (opcode)": [[180, "opcode-CALL_INTRINSIC_1"]], "call_intrinsic_2 (opcode)": [[180, "opcode-CALL_INTRINSIC_2"]], "call_kw (opcode)": [[180, "opcode-CALL_KW"]], "check_eg_match (opcode)": [[180, "opcode-CHECK_EG_MATCH"]], "check_exc_match (opcode)": [[180, "opcode-CHECK_EXC_MATCH"]], "cleanup_throw (opcode)": [[180, "opcode-CLEANUP_THROW"]], "compare_op (opcode)": [[180, "opcode-COMPARE_OP"]], "contains_op (opcode)": [[180, "opcode-CONTAINS_OP"]], "convert_value (opcode)": [[180, "opcode-CONVERT_VALUE"]], "copy (opcode)": [[180, "opcode-COPY"]], "copy_free_vars (opcode)": [[180, "opcode-COPY_FREE_VARS"]], "delete_attr (opcode)": [[180, "opcode-DELETE_ATTR"]], "delete_deref (opcode)": [[180, "opcode-DELETE_DEREF"]], "delete_fast (opcode)": [[180, "opcode-DELETE_FAST"]], "delete_global (opcode)": [[180, "opcode-DELETE_GLOBAL"]], "delete_name (opcode)": [[180, "opcode-DELETE_NAME"]], "delete_subscr (opcode)": [[180, "opcode-DELETE_SUBSCR"]], "dict_merge (opcode)": [[180, "opcode-DICT_MERGE"]], "dict_update (opcode)": [[180, "opcode-DICT_UPDATE"]], "end_async_for (opcode)": [[180, "opcode-END_ASYNC_FOR"]], "end_for (opcode)": [[180, "opcode-END_FOR"]], "extended_arg (opcode)": [[180, "opcode-EXTENDED_ARG"]], "format_simple (opcode)": [[180, "opcode-FORMAT_SIMPLE"]], "format_spec (opcode)": [[180, "opcode-FORMAT_SPEC"]], "for_iter (opcode)": [[180, "opcode-FOR_ITER"]], "get_aiter (opcode)": [[180, "opcode-GET_AITER"]], "get_anext (opcode)": [[180, "opcode-GET_ANEXT"]], "get_awaitable (opcode)": [[180, "opcode-GET_AWAITABLE"]], "get_iter (opcode)": [[180, "opcode-GET_ITER"]], "get_len (opcode)": [[180, "opcode-GET_LEN"]], "get_yield_from_iter (opcode)": [[180, "opcode-GET_YIELD_FROM_ITER"]], "have_argument (opcode)": [[180, "opcode-HAVE_ARGUMENT"]], "import_from (opcode)": [[180, "opcode-IMPORT_FROM"]], "import_name (opcode)": [[180, "opcode-IMPORT_NAME"]], "is_op (opcode)": [[180, "opcode-IS_OP"]], "instruction (class in dis)": [[180, "dis.Instruction"]], "instruction.arg (in module dis)": [[180, "dis.Instruction.arg"]], "instruction.argrepr (in module dis)": [[180, "dis.Instruction.argrepr"]], "instruction.argval (in module dis)": [[180, "dis.Instruction.argval"]], "instruction.baseopcode (in module dis)": [[180, "dis.Instruction.baseopcode"]], "instruction.baseopname (in module dis)": [[180, "dis.Instruction.baseopname"]], "instruction.cache_offset (in module dis)": [[180, "dis.Instruction.cache_offset"]], "instruction.end_offset (in module dis)": [[180, "dis.Instruction.end_offset"]], "instruction.is_jump_target (in module dis)": [[180, "dis.Instruction.is_jump_target"]], "instruction.jump_target (in module dis)": [[180, "dis.Instruction.jump_target"]], "instruction.line_number (in module dis)": [[180, "dis.Instruction.line_number"]], "instruction.offset (in module dis)": [[180, "dis.Instruction.offset"]], "instruction.oparg (in module dis)": [[180, "dis.Instruction.oparg"]], "instruction.opcode (in module dis)": [[180, "dis.Instruction.opcode"]], "instruction.opname (in module dis)": [[180, "dis.Instruction.opname"]], "instruction.positions (in module dis)": [[180, "dis.Instruction.positions"]], "instruction.start_offset (in module dis)": [[180, "dis.Instruction.start_offset"]], "instruction.starts_line (in module dis)": [[180, "dis.Instruction.starts_line"]], "jump (opcode)": [[180, "opcode-JUMP"]], "jump_backward (opcode)": [[180, "opcode-JUMP_BACKWARD"]], "jump_backward_no_interrupt (opcode)": [[180, "opcode-JUMP_BACKWARD_NO_INTERRUPT"]], "jump_forward (opcode)": [[180, "opcode-JUMP_FORWARD"]], "jump_no_interrupt (opcode)": [[180, "opcode-JUMP_NO_INTERRUPT"]], "list_append (opcode)": [[180, "opcode-LIST_APPEND"]], "list_extend (opcode)": [[180, "opcode-LIST_EXTEND"]], "load_assertion_error (opcode)": [[180, "opcode-LOAD_ASSERTION_ERROR"]], "load_attr (opcode)": [[180, "opcode-LOAD_ATTR"]], "load_build_class (opcode)": [[180, "opcode-LOAD_BUILD_CLASS"]], "load_closure (opcode)": [[180, "opcode-LOAD_CLOSURE"]], "load_const (opcode)": [[180, "opcode-LOAD_CONST"]], "load_deref (opcode)": [[180, "opcode-LOAD_DEREF"]], "load_fast (opcode)": [[180, "opcode-LOAD_FAST"]], "load_fast_and_clear (opcode)": [[180, "opcode-LOAD_FAST_AND_CLEAR"]], "load_fast_check (opcode)": [[180, "opcode-LOAD_FAST_CHECK"]], "load_from_dict_or_deref (opcode)": [[180, "opcode-LOAD_FROM_DICT_OR_DEREF"]], "load_from_dict_or_globals (opcode)": [[180, "opcode-LOAD_FROM_DICT_OR_GLOBALS"]], "load_global (opcode)": [[180, "opcode-LOAD_GLOBAL"]], "load_locals (opcode)": [[180, "opcode-LOAD_LOCALS"]], "load_method (opcode)": [[180, "opcode-LOAD_METHOD"]], "load_name (opcode)": [[180, "opcode-LOAD_NAME"]], "load_super_attr (opcode)": [[180, "opcode-LOAD_SUPER_ATTR"]], "make_cell (opcode)": [[180, "opcode-MAKE_CELL"]], "make_function (opcode)": [[180, "opcode-MAKE_FUNCTION"]], "map_add (opcode)": [[180, "opcode-MAP_ADD"]], "match_class (opcode)": [[180, "opcode-MATCH_CLASS"]], "match_keys (opcode)": [[180, "opcode-MATCH_KEYS"]], "match_mapping (opcode)": [[180, "opcode-MATCH_MAPPING"]], "match_sequence (opcode)": [[180, "opcode-MATCH_SEQUENCE"]], "nop (opcode)": [[180, "opcode-NOP"]], "pep 626": [[180, "index-0"], [447, "index-4"], [449, "index-30"], [450, "index-0"]], "pop_block (opcode)": [[180, "opcode-POP_BLOCK"]], "pop_except (opcode)": [[180, "opcode-POP_EXCEPT"]], "pop_jump_if_false (opcode)": [[180, "opcode-POP_JUMP_IF_FALSE"]], "pop_jump_if_none (opcode)": [[180, "opcode-POP_JUMP_IF_NONE"]], "pop_jump_if_not_none (opcode)": [[180, "opcode-POP_JUMP_IF_NOT_NONE"]], "pop_jump_if_true (opcode)": [[180, "opcode-POP_JUMP_IF_TRUE"]], "pop_top (opcode)": [[180, "opcode-POP_TOP"]], "push_exc_info (opcode)": [[180, "opcode-PUSH_EXC_INFO"]], "push_null (opcode)": [[180, "opcode-PUSH_NULL"]], "positions (class in dis)": [[180, "dis.Positions"]], "positions.col_offset (in module dis)": [[180, "dis.Positions.col_offset"]], "positions.end_col_offset (in module dis)": [[180, "dis.Positions.end_col_offset"]], "positions.end_lineno (in module dis)": [[180, "dis.Positions.end_lineno"]], "positions.lineno (in module dis)": [[180, "dis.Positions.lineno"]], "raise_varargs (opcode)": [[180, "opcode-RAISE_VARARGS"]], "reraise (opcode)": [[180, "opcode-RERAISE"]], "resume (opcode)": [[180, "opcode-RESUME"]], "return_const (opcode)": [[180, "opcode-RETURN_CONST"]], "return_generator (opcode)": [[180, "opcode-RETURN_GENERATOR"]], "return_value (opcode)": [[180, "opcode-RETURN_VALUE"]], "send (opcode)": [[180, "opcode-SEND"]], "setup_annotations (opcode)": [[180, "opcode-SETUP_ANNOTATIONS"]], "setup_cleanup (opcode)": [[180, "opcode-SETUP_CLEANUP"]], "setup_finally (opcode)": [[180, "opcode-SETUP_FINALLY"]], "setup_with (opcode)": [[180, "opcode-SETUP_WITH"]], "set_add (opcode)": [[180, "opcode-SET_ADD"]], "set_function_attribute (opcode)": [[180, "opcode-SET_FUNCTION_ATTRIBUTE"]], "set_update (opcode)": [[180, "opcode-SET_UPDATE"]], "store_attr (opcode)": [[180, "opcode-STORE_ATTR"]], "store_deref (opcode)": [[180, "opcode-STORE_DEREF"]], "store_fast (opcode)": [[180, "opcode-STORE_FAST"]], "store_global (opcode)": [[180, "opcode-STORE_GLOBAL"]], "store_name (opcode)": [[180, "opcode-STORE_NAME"]], "store_slice (opcode)": [[180, "opcode-STORE_SLICE"]], "store_subscr (opcode)": [[180, "opcode-STORE_SUBSCR"]], "swap (opcode)": [[180, "opcode-SWAP"]], "to_bool (opcode)": [[180, "opcode-TO_BOOL"]], "unary_invert (opcode)": [[180, "opcode-UNARY_INVERT"]], "unary_negative (opcode)": [[180, "opcode-UNARY_NEGATIVE"]], "unary_not (opcode)": [[180, "opcode-UNARY_NOT"]], "unpack_ex (opcode)": [[180, "opcode-UNPACK_EX"]], "unpack_sequence (opcode)": [[180, "opcode-UNPACK_SEQUENCE"]], "with_except_start (opcode)": [[180, "opcode-WITH_EXCEPT_START"]], "yield_value (opcode)": [[180, "opcode-YIELD_VALUE"]], "cmp_op (in module dis)": [[180, "dis.cmp_op"]], "code_info() (in module dis)": [[180, "dis.code_info"]], "dis": [[180, "module-dis"]], "dis() (dis.bytecode method)": [[180, "dis.Bytecode.dis"]], "dis() (in module dis)": [[180, "dis.dis"]], "disassemble() (in module dis)": [[180, "dis.disassemble"]], "disco() (in module dis)": [[180, "dis.disco"]], "distb() (in module dis)": [[180, "dis.distb"]], "findlabels() (in module dis)": [[180, "dis.findlabels"]], "findlinestarts() (in module dis)": [[180, "dis.findlinestarts"]], "from_traceback() (dis.bytecode class method)": [[180, "dis.Bytecode.from_traceback"]], "get_instructions() (in module dis)": [[180, "dis.get_instructions"]], "hasarg (in module dis)": [[180, "dis.hasarg"]], "hascompare (in module dis)": [[180, "dis.hascompare"]], "hasconst (in module dis)": [[180, "dis.hasconst"]], "hasexc (in module dis)": [[180, "dis.hasexc"]], "hasfree (in module dis)": [[180, "dis.hasfree"]], "hasjabs (in module dis)": [[180, "dis.hasjabs"]], "hasjrel (in module dis)": [[180, "dis.hasjrel"]], "hasjump (in module dis)": [[180, "dis.hasjump"]], "haslocal (in module dis)": [[180, "dis.haslocal"]], "hasname (in module dis)": [[180, "dis.hasname"]], "info() (dis.bytecode method)": [[180, "dis.Bytecode.info"]], "opmap (in module dis)": [[180, "dis.opmap"]], "opname (in module dis)": [[180, "dis.opname"]], "show_code() (in module dis)": [[180, "dis.show_code"]], "stack_effect() (in module dis)": [[180, "dis.stack_effect"]], "# (hash)": [[182, "index-4"], [301, "index-38"], [316, "index-2"], [324, "index-37"], [324, "index-47"], [325, "index-7"], [410, "index-4"], [410, "index-5"], [424, "index-0"]], "- (minus)": [[182, "index-4"], [209, "index-2"], [220, "index-1"], [301, "index-11"], [324, "index-13"], [324, "index-37"], [324, "index-47"], [325, "index-4"], [405, "index-60"], [405, "index-70"]], "<blankline>": [[182, "index-2"]], "comparison_flags (in module doctest)": [[182, "doctest.COMPARISON_FLAGS"]], "dont_accept_blankline (in module doctest)": [[182, "doctest.DONT_ACCEPT_BLANKLINE"]], "dont_accept_true_for_1 (in module doctest)": [[182, "doctest.DONT_ACCEPT_TRUE_FOR_1"]], "debugrunner (class in doctest)": [[182, "doctest.DebugRunner"]], "docfilesuite() (in module doctest)": [[182, "doctest.DocFileSuite"]], "doctest (class in doctest)": [[182, "doctest.DocTest"]], "doctestfailure": [[182, "doctest.DocTestFailure"]], "doctestfinder (class in doctest)": [[182, "doctest.DocTestFinder"]], "doctestparser (class in doctest)": [[182, "doctest.DocTestParser"]], "doctestrunner (class in doctest)": [[182, "doctest.DocTestRunner"]], "doctestsuite() (in module doctest)": [[182, "doctest.DocTestSuite"]], "ellipsis (in module doctest)": [[182, "doctest.ELLIPSIS"]], "example (class in doctest)": [[182, "doctest.Example"]], "fail_fast (in module doctest)": [[182, "doctest.FAIL_FAST"]], "ignore_exception_detail (in module doctest)": [[182, "doctest.IGNORE_EXCEPTION_DETAIL"]], "normalize_whitespace (in module doctest)": [[182, "doctest.NORMALIZE_WHITESPACE"]], "outputchecker (class in doctest)": [[182, "doctest.OutputChecker"]], "reporting_flags (in module doctest)": [[182, "doctest.REPORTING_FLAGS"]], "report_cdiff (in module doctest)": [[182, "doctest.REPORT_CDIFF"]], "report_ndiff (in module doctest)": [[182, "doctest.REPORT_NDIFF"]], "report_only_first_failure (in module doctest)": [[182, "doctest.REPORT_ONLY_FIRST_FAILURE"]], "report_udiff (in module doctest)": [[182, "doctest.REPORT_UDIFF"]], "skip (in module doctest)": [[182, "doctest.SKIP"]], "testresults (class in doctest)": [[182, "doctest.TestResults"]], "unexpectedexception": [[182, "doctest.UnexpectedException"]], "attempted (doctest.testresults attribute)": [[182, "doctest.TestResults.attempted"]], "check_output() (doctest.outputchecker method)": [[182, "doctest.OutputChecker.check_output"]], "debug() (in module doctest)": [[182, "doctest.debug"]], "debug_src() (in module doctest)": [[182, "doctest.debug_src"]], "docstring (doctest.doctest attribute)": [[182, "doctest.DocTest.docstring"]], "doctest": [[182, "module-doctest"]], "example (doctest.doctestfailure attribute)": [[182, "doctest.DocTestFailure.example"]], "example (doctest.unexpectedexception attribute)": [[182, "doctest.UnexpectedException.example"]], "examples (doctest.doctest attribute)": [[182, "doctest.DocTest.examples"]], "exc_info (doctest.unexpectedexception attribute)": [[182, "doctest.UnexpectedException.exc_info"]], "exc_msg (doctest.example attribute)": [[182, "doctest.Example.exc_msg"]], "failed (doctest.testresults attribute)": [[182, "doctest.TestResults.failed"]], "failures (doctest.doctestrunner attribute)": [[182, "doctest.DocTestRunner.failures"]], "filename (doctest.doctest attribute)": [[182, "doctest.DocTest.filename"]], "find() (doctest.doctestfinder method)": [[182, "doctest.DocTestFinder.find"]], "get_doctest() (doctest.doctestparser method)": [[182, "doctest.DocTestParser.get_doctest"]], "get_examples() (doctest.doctestparser method)": [[182, "doctest.DocTestParser.get_examples"]], "globs (doctest.doctest attribute)": [[182, "doctest.DocTest.globs"]], "got (doctest.doctestfailure attribute)": [[182, "doctest.DocTestFailure.got"]], "in doctests": [[182, "index-3"], [182, "index-4"]], "indent (doctest.example attribute)": [[182, "doctest.Example.indent"]], "interpreter prompt": [[182, "index-0"], [331, "index-27"]], "lineno (doctest.doctest attribute)": [[182, "doctest.DocTest.lineno"]], "lineno (doctest.example attribute)": [[182, "doctest.Example.lineno"]], "marker": [[182, "index-1"], [358, "index-1"]], "name (doctest.doctest attribute)": [[182, "doctest.DocTest.name"]], "options (doctest.example attribute)": [[182, "doctest.Example.options"]], "output_difference() (doctest.outputchecker method)": [[182, "doctest.OutputChecker.output_difference"]], "parse() (doctest.doctestparser method)": [[182, "doctest.DocTestParser.parse"]], "register_optionflag() (in module doctest)": [[182, "doctest.register_optionflag"]], "report_failure() (doctest.doctestrunner method)": [[182, "doctest.DocTestRunner.report_failure"]], "report_start() (doctest.doctestrunner method)": [[182, "doctest.DocTestRunner.report_start"]], "report_success() (doctest.doctestrunner method)": [[182, "doctest.DocTestRunner.report_success"]], "report_unexpected_exception() (doctest.doctestrunner method)": [[182, "doctest.DocTestRunner.report_unexpected_exception"]], "run() (doctest.doctestrunner method)": [[182, "doctest.DocTestRunner.run"]], "run_docstring_examples() (in module doctest)": [[182, "doctest.run_docstring_examples"]], "script_from_examples() (in module doctest)": [[182, "doctest.script_from_examples"]], "set_unittest_reportflags() (in module doctest)": [[182, "doctest.set_unittest_reportflags"]], "skipped (doctest.testresults attribute)": [[182, "doctest.TestResults.skipped"]], "skips (doctest.doctestrunner attribute)": [[182, "doctest.DocTestRunner.skips"]], "source (doctest.example attribute)": [[182, "doctest.Example.source"]], "summarize() (doctest.doctestrunner method)": [[182, "doctest.DocTestRunner.summarize"]], "test (doctest.doctestfailure attribute)": [[182, "doctest.DocTestFailure.test"]], "test (doctest.unexpectedexception attribute)": [[182, "doctest.UnexpectedException.test"]], "testfile() (in module doctest)": [[182, "doctest.testfile"]], "testmod() (in module doctest)": [[182, "doctest.testmod"]], "testsource() (in module doctest)": [[182, "doctest.testsource"]], "tries (doctest.doctestrunner attribute)": [[182, "doctest.DocTestRunner.tries"]], "want (doctest.example attribute)": [[182, "doctest.Example.want"]], "rfc 2046": [[183, "index-4"], [186, "index-0"], [191, "index-5"]], "rfc 2047": [[183, "index-5"], [191, "index-11"], [191, "index-13"], [191, "index-6"], [191, "index-8"], [192, "index-1"], [192, "index-4"], [192, "index-6"], [197, "index-3"], [197, "index-4"], [198, "index-1"], [451, "index-11"], [451, "index-8"]], "rfc 2183": [[183, "index-6"], [185, "index-11"], [194, "index-10"]], "rfc 2231": [[183, "index-7"], [185, "index-10"], [185, "index-2"], [185, "index-3"], [185, "index-7"], [185, "index-8"], [191, "index-7"], [194, "index-4"], [194, "index-5"], [194, "index-9"], [198, "index-5"], [198, "index-6"], [198, "index-7"], [198, "index-8"], [198, "index-9"]], "rfc 2821": [[183, "index-0"]], "rfc 5322": [[183, "index-1"], [185, "index-0"], [188, "index-0"], [190, "index-0"], [190, "index-1"], [192, "index-0"], [192, "index-11"], [192, "index-12"], [192, "index-14"], [192, "index-2"], [192, "index-3"], [192, "index-5"], [192, "index-7"], [192, "index-8"], [194, "index-0"], [194, "index-2"], [196, "index-0"], [197, "index-0"], [197, "index-1"], [197, "index-2"], [197, "index-5"], [197, "index-6"], [197, "index-9"], [317, "index-11"]], "rfc 6532": [[183, "index-2"], [194, "index-1"], [196, "index-1"], [197, "index-7"], [454, "index-31"]], "email": [[183, "module-email"]], "charset (class in email.charset)": [[184, "email.charset.Charset"]], "__eq__() (email.charset.charset method)": [[184, "email.charset.Charset.__eq__"]], "__ne__() (email.charset.charset method)": [[184, "email.charset.Charset.__ne__"]], "__str__() (email.charset.charset method)": [[184, "email.charset.Charset.__str__"]], "add_alias() (in module email.charset)": [[184, "email.charset.add_alias"]], "add_charset() (in module email.charset)": [[184, "email.charset.add_charset"]], "add_codec() (in module email.charset)": [[184, "email.charset.add_codec"]], "body_encode() (email.charset.charset method)": [[184, "email.charset.Charset.body_encode"]], "body_encoding (email.charset.charset attribute)": [[184, "email.charset.Charset.body_encoding"]], "email.charset": [[184, "module-email.charset"]], "get_body_encoding() (email.charset.charset method)": [[184, "email.charset.Charset.get_body_encoding"]], "get_output_charset() (email.charset.charset method)": [[184, "email.charset.Charset.get_output_charset"]], "header_encode() (email.charset.charset method)": [[184, "email.charset.Charset.header_encode"]], "header_encode_lines() (email.charset.charset method)": [[184, "email.charset.Charset.header_encode_lines"]], "header_encoding (email.charset.charset attribute)": [[184, "email.charset.Charset.header_encoding"]], "input_charset (email.charset.charset attribute)": [[184, "email.charset.Charset.input_charset"]], "input_codec (email.charset.charset attribute)": [[184, "email.charset.Charset.input_codec"]], "output_charset (email.charset.charset attribute)": [[184, "email.charset.Charset.output_charset"]], "output_codec (email.charset.charset attribute)": [[184, "email.charset.Charset.output_codec"]], "message (class in email.message)": [[185, "email.message.Message"]], "rfc 2822": [[185, "index-1"], [191, "index-0"], [191, "index-10"], [191, "index-12"], [191, "index-2"], [191, "index-3"], [191, "index-9"], [198, "index-0"], [198, "index-10"], [198, "index-2"], [198, "index-3"], [198, "index-4"], [231, "index-2"], [234, "index-2"], [259, "index-0"], [344, "index-10"], [344, "index-22"], [426, "index-1"], [439, "index-20"]], "__bytes__() (email.message.message method)": [[185, "email.message.Message.__bytes__"]], "__contains__() (email.message.message method)": [[185, "email.message.Message.__contains__"]], "__delitem__() (email.message.message method)": [[185, "email.message.Message.__delitem__"]], "__getitem__() (email.message.message method)": [[185, "email.message.Message.__getitem__"]], "__len__() (email.message.message method)": [[185, "email.message.Message.__len__"]], "__setitem__() (email.message.message method)": [[185, "email.message.Message.__setitem__"]], "__str__() (email.message.message method)": [[185, "email.message.Message.__str__"]], "add_header() (email.message.message method)": [[185, "email.message.Message.add_header"]], "as_bytes() (email.message.message method)": [[185, "email.message.Message.as_bytes"]], "as_string() (email.message.message method)": [[185, "email.message.Message.as_string"]], "attach() (email.message.message method)": [[185, "email.message.Message.attach"]], "defects (email.message.message attribute)": [[185, "email.message.Message.defects"]], "del_param() (email.message.message method)": [[185, "email.message.Message.del_param"]], "epilogue (email.message.message attribute)": [[185, "email.message.Message.epilogue"]], "get() (email.message.message method)": [[185, "email.message.Message.get"]], "get_all() (email.message.message method)": [[185, "email.message.Message.get_all"]], "get_boundary() (email.message.message method)": [[185, "email.message.Message.get_boundary"]], "get_charset() (email.message.message method)": [[185, "email.message.Message.get_charset"]], "get_charsets() (email.message.message method)": [[185, "email.message.Message.get_charsets"]], "get_content_charset() (email.message.message method)": [[185, "email.message.Message.get_content_charset"]], "get_content_disposition() (email.message.message method)": [[185, "email.message.Message.get_content_disposition"]], "get_content_maintype() (email.message.message method)": [[185, "email.message.Message.get_content_maintype"]], "get_content_subtype() (email.message.message method)": [[185, "email.message.Message.get_content_subtype"]], "get_content_type() (email.message.message method)": [[185, "email.message.Message.get_content_type"]], "get_default_type() (email.message.message method)": [[185, "email.message.Message.get_default_type"]], "get_filename() (email.message.message method)": [[185, "email.message.Message.get_filename"]], "get_param() (email.message.message method)": [[185, "email.message.Message.get_param"]], "get_params() (email.message.message method)": [[185, "email.message.Message.get_params"]], "get_payload() (email.message.message method)": [[185, "email.message.Message.get_payload"]], "get_unixfrom() (email.message.message method)": [[185, "email.message.Message.get_unixfrom"]], "is_multipart() (email.message.message method)": [[185, "email.message.Message.is_multipart"]], "items() (email.message.message method)": [[185, "email.message.Message.items"]], "keys() (email.message.message method)": [[185, "email.message.Message.keys"]], "preamble (email.message.message attribute)": [[185, "email.message.Message.preamble"]], "replace_header() (email.message.message method)": [[185, "email.message.Message.replace_header"]], "set_boundary() (email.message.message method)": [[185, "email.message.Message.set_boundary"]], "set_charset() (email.message.message method)": [[185, "email.message.Message.set_charset"]], "set_default_type() (email.message.message method)": [[185, "email.message.Message.set_default_type"]], "set_param() (email.message.message method)": [[185, "email.message.Message.set_param"]], "set_payload() (email.message.message method)": [[185, "email.message.Message.set_payload"]], "set_type() (email.message.message method)": [[185, "email.message.Message.set_type"]], "set_unixfrom() (email.message.message method)": [[185, "email.message.Message.set_unixfrom"]], "values() (email.message.message method)": [[185, "email.message.Message.values"]], "walk() (email.message.message method)": [[185, "email.message.Message.walk"]], "contentmanager (class in email.contentmanager)": [[186, "email.contentmanager.ContentManager"]], "add_get_handler() (email.contentmanager.contentmanager method)": [[186, "email.contentmanager.ContentManager.add_get_handler"]], "add_set_handler() (email.contentmanager.contentmanager method)": [[186, "email.contentmanager.ContentManager.add_set_handler"]], "email.contentmanager": [[186, "module-email.contentmanager"]], "get_content() (email.contentmanager.contentmanager method)": [[186, "email.contentmanager.ContentManager.get_content"]], "get_content() (in module email.contentmanager)": [[186, "email.contentmanager.get_content"]], "raw_data_manager (in module email.contentmanager)": [[186, "email.contentmanager.raw_data_manager"]], "set_content() (email.contentmanager.contentmanager method)": [[186, "email.contentmanager.ContentManager.set_content"]], "set_content() (in module email.contentmanager)": [[186, "email.contentmanager.set_content"]], "email.encoders": [[187, "module-email.encoders"]], "encode_7or8bit() (in module email.encoders)": [[187, "email.encoders.encode_7or8bit"]], "encode_base64() (in module email.encoders)": [[187, "email.encoders.encode_base64"]], "encode_noop() (in module email.encoders)": [[187, "email.encoders.encode_noop"]], "encode_quopri() (in module email.encoders)": [[187, "email.encoders.encode_quopri"]], "boundaryerror": [[188, "email.errors.BoundaryError"]], "headerparseerror": [[188, "email.errors.HeaderParseError"]], "messageerror": [[188, "email.errors.MessageError"]], "messageparseerror": [[188, "email.errors.MessageParseError"]], "multipartconversionerror": [[188, "email.errors.MultipartConversionError"]], "email.errors": [[188, "module-email.errors"]], "rfc 822": [[189, "index-0"], [191, "index-1"], [219, "index-9"], [231, "index-6"], [317, "index-10"], [317, "index-12"], [317, "index-6"], [317, "index-9"], [344, "index-19"], [344, "index-20"], [439, "index-21"]], "bytesgenerator (class in email.generator)": [[190, "email.generator.BytesGenerator"]], "decodedgenerator (class in email.generator)": [[190, "email.generator.DecodedGenerator"]], "generator (class in email.generator)": [[190, "email.generator.Generator"]], "clone() (email.generator.bytesgenerator method)": [[190, "email.generator.BytesGenerator.clone"]], "clone() (email.generator.generator method)": [[190, "email.generator.Generator.clone"]], "email.generator": [[190, "module-email.generator"]], "flatten() (email.generator.bytesgenerator method)": [[190, "email.generator.BytesGenerator.flatten"]], "flatten() (email.generator.generator method)": [[190, "email.generator.Generator.flatten"]], "write() (email.generator.bytesgenerator method)": [[190, "email.generator.BytesGenerator.write"]], "write() (email.generator.generator method)": [[190, "email.generator.Generator.write"]], "header (class in email.header)": [[191, "email.header.Header"]], "__eq__() (email.header.header method)": [[191, "email.header.Header.__eq__"]], "__ne__() (email.header.header method)": [[191, "email.header.Header.__ne__"]], "__str__() (email.header.header method)": [[191, "email.header.Header.__str__"]], "append() (email.header.header method)": [[191, "email.header.Header.append"]], "decode_header() (in module email.header)": [[191, "email.header.decode_header"]], "email.header": [[191, "module-email.header"]], "encode() (email.header.header method)": [[191, "email.header.Header.encode"]], "make_header() (in module email.header)": [[191, "email.header.make_header"]], "address (class in email.headerregistry)": [[192, "email.headerregistry.Address"]], "addressheader (class in email.headerregistry)": [[192, "email.headerregistry.AddressHeader"]], "baseheader (class in email.headerregistry)": [[192, "email.headerregistry.BaseHeader"]], "contentdispositionheader (class in email.headerregistry)": [[192, "email.headerregistry.ContentDispositionHeader"]], "contenttransferencoding (class in email.headerregistry)": [[192, "email.headerregistry.ContentTransferEncoding"]], "contenttypeheader (class in email.headerregistry)": [[192, "email.headerregistry.ContentTypeHeader"]], "dateheader (class in email.headerregistry)": [[192, "email.headerregistry.DateHeader"]], "group (class in email.headerregistry)": [[192, "email.headerregistry.Group"]], "headerregistry (class in email.headerregistry)": [[192, "email.headerregistry.HeaderRegistry"]], "mimeversionheader (class in email.headerregistry)": [[192, "email.headerregistry.MIMEVersionHeader"]], "parameterizedmimeheader (class in email.headerregistry)": [[192, "email.headerregistry.ParameterizedMIMEHeader"]], "rfc 5321": [[192, "index-13"], [452, "index-26"]], "singleaddressheader (class in email.headerregistry)": [[192, "email.headerregistry.SingleAddressHeader"]], "unstructuredheader (class in email.headerregistry)": [[192, "email.headerregistry.UnstructuredHeader"]], "__call__() (email.headerregistry.headerregistry method)": [[192, "email.headerregistry.HeaderRegistry.__call__"]], "__getitem__() (email.headerregistry.headerregistry method)": [[192, "email.headerregistry.HeaderRegistry.__getitem__"]], "__str__() (email.headerregistry.address method)": [[192, "email.headerregistry.Address.__str__"]], "__str__() (email.headerregistry.group method)": [[192, "email.headerregistry.Group.__str__"]], "addr_spec (email.headerregistry.address attribute)": [[192, "email.headerregistry.Address.addr_spec"]], "address (email.headerregistry.singleaddressheader attribute)": [[192, "email.headerregistry.SingleAddressHeader.address"]], "addresses (email.headerregistry.addressheader attribute)": [[192, "email.headerregistry.AddressHeader.addresses"]], "addresses (email.headerregistry.group attribute)": [[192, "email.headerregistry.Group.addresses"]], "content_disposition (email.headerregistry.contentdispositionheader attribute)": [[192, "email.headerregistry.ContentDispositionHeader.content_disposition"]], "content_type (email.headerregistry.contenttypeheader attribute)": [[192, "email.headerregistry.ContentTypeHeader.content_type"]], "cte (email.headerregistry.contenttransferencoding attribute)": [[192, "email.headerregistry.ContentTransferEncoding.cte"]], "datetime (email.headerregistry.dateheader attribute)": [[192, "email.headerregistry.DateHeader.datetime"]], "defects (email.headerregistry.baseheader attribute)": [[192, "email.headerregistry.BaseHeader.defects"]], "display_name (email.headerregistry.address attribute)": [[192, "email.headerregistry.Address.display_name"]], "display_name (email.headerregistry.group attribute)": [[192, "email.headerregistry.Group.display_name"]], "domain (email.headerregistry.address attribute)": [[192, "email.headerregistry.Address.domain"]], "email.headerregistry": [[192, "module-email.headerregistry"]], "fold() (email.headerregistry.baseheader method)": [[192, "email.headerregistry.BaseHeader.fold"]], "groups (email.headerregistry.addressheader attribute)": [[192, "email.headerregistry.AddressHeader.groups"]], "maintype (email.headerregistry.contenttypeheader attribute)": [[192, "email.headerregistry.ContentTypeHeader.maintype"]], "major (email.headerregistry.mimeversionheader attribute)": [[192, "email.headerregistry.MIMEVersionHeader.major"]], "map_to_type() (email.headerregistry.headerregistry method)": [[192, "email.headerregistry.HeaderRegistry.map_to_type"]], "max_count (email.headerregistry.baseheader attribute)": [[192, "email.headerregistry.BaseHeader.max_count"]], "minor (email.headerregistry.mimeversionheader attribute)": [[192, "email.headerregistry.MIMEVersionHeader.minor"]], "name (email.headerregistry.baseheader attribute)": [[192, "email.headerregistry.BaseHeader.name"]], "params (email.headerregistry.parameterizedmimeheader attribute)": [[192, "email.headerregistry.ParameterizedMIMEHeader.params"]], "subtype (email.headerregistry.contenttypeheader attribute)": [[192, "email.headerregistry.ContentTypeHeader.subtype"]], "username (email.headerregistry.address attribute)": [[192, "email.headerregistry.Address.username"]], "version (email.headerregistry.mimeversionheader attribute)": [[192, "email.headerregistry.MIMEVersionHeader.version"]], "_structure() (in module email.iterators)": [[193, "email.iterators._structure"]], "body_line_iterator() (in module email.iterators)": [[193, "email.iterators.body_line_iterator"]], "email.iterators": [[193, "module-email.iterators"]], "typed_subpart_iterator() (in module email.iterators)": [[193, "email.iterators.typed_subpart_iterator"]], "emailmessage (class in email.message)": [[194, "email.message.EmailMessage"]], "mimepart (class in email.message)": [[194, "email.message.MIMEPart"]], "rfc 6531": [[194, "index-3"], [197, "index-8"], [317, "index-3"], [454, "index-32"], [454, "index-38"], [454, "index-39"]], "__bytes__() (email.message.emailmessage method)": [[194, "email.message.EmailMessage.__bytes__"]], "__contains__() (email.message.emailmessage method)": [[194, "email.message.EmailMessage.__contains__"]], "__delitem__() (email.message.emailmessage method)": [[194, "email.message.EmailMessage.__delitem__"]], "__getitem__() (email.message.emailmessage method)": [[194, "email.message.EmailMessage.__getitem__"]], "__len__() (email.message.emailmessage method)": [[194, "email.message.EmailMessage.__len__"]], "__setitem__() (email.message.emailmessage method)": [[194, "email.message.EmailMessage.__setitem__"]], "__str__() (email.message.emailmessage method)": [[194, "email.message.EmailMessage.__str__"]], "add_alternative() (email.message.emailmessage method)": [[194, "email.message.EmailMessage.add_alternative"]], "add_attachment() (email.message.emailmessage method)": [[194, "email.message.EmailMessage.add_attachment"]], "add_header() (email.message.emailmessage method)": [[194, "email.message.EmailMessage.add_header"]], "add_related() (email.message.emailmessage method)": [[194, "email.message.EmailMessage.add_related"]], "as_bytes() (email.message.emailmessage method)": [[194, "email.message.EmailMessage.as_bytes"]], "as_string() (email.message.emailmessage method)": [[194, "email.message.EmailMessage.as_string"]], "clear() (email.message.emailmessage method)": [[194, "email.message.EmailMessage.clear"]], "clear_content() (email.message.emailmessage method)": [[194, "email.message.EmailMessage.clear_content"]], "defects (email.message.emailmessage attribute)": [[194, "email.message.EmailMessage.defects"]], "del_param() (email.message.emailmessage method)": [[194, "email.message.EmailMessage.del_param"]], "email.message": [[194, "module-email.message"]], "epilogue (email.message.emailmessage attribute)": [[194, "email.message.EmailMessage.epilogue"]], "get() (email.message.emailmessage method)": [[194, "email.message.EmailMessage.get"]], "get_all() (email.message.emailmessage method)": [[194, "email.message.EmailMessage.get_all"]], "get_body() (email.message.emailmessage method)": [[194, "email.message.EmailMessage.get_body"]], "get_boundary() (email.message.emailmessage method)": [[194, "email.message.EmailMessage.get_boundary"]], "get_charsets() (email.message.emailmessage method)": [[194, "email.message.EmailMessage.get_charsets"]], "get_content() (email.message.emailmessage method)": [[194, "email.message.EmailMessage.get_content"]], "get_content_charset() (email.message.emailmessage method)": [[194, "email.message.EmailMessage.get_content_charset"]], "get_content_disposition() (email.message.emailmessage method)": [[194, "email.message.EmailMessage.get_content_disposition"]], "get_content_maintype() (email.message.emailmessage method)": [[194, "email.message.EmailMessage.get_content_maintype"]], "get_content_subtype() (email.message.emailmessage method)": [[194, "email.message.EmailMessage.get_content_subtype"]], "get_content_type() (email.message.emailmessage method)": [[194, "email.message.EmailMessage.get_content_type"]], "get_default_type() (email.message.emailmessage method)": [[194, "email.message.EmailMessage.get_default_type"]], "get_filename() (email.message.emailmessage method)": [[194, "email.message.EmailMessage.get_filename"]], "get_unixfrom() (email.message.emailmessage method)": [[194, "email.message.EmailMessage.get_unixfrom"]], "is_attachment() (email.message.emailmessage method)": [[194, "email.message.EmailMessage.is_attachment"]], "is_multipart() (email.message.emailmessage method)": [[194, "email.message.EmailMessage.is_multipart"]], "items() (email.message.emailmessage method)": [[194, "email.message.EmailMessage.items"]], "iter_attachments() (email.message.emailmessage method)": [[194, "email.message.EmailMessage.iter_attachments"]], "iter_parts() (email.message.emailmessage method)": [[194, "email.message.EmailMessage.iter_parts"]], "keys() (email.message.emailmessage method)": [[194, "email.message.EmailMessage.keys"]], "make_alternative() (email.message.emailmessage method)": [[194, "email.message.EmailMessage.make_alternative"]], "make_mixed() (email.message.emailmessage method)": [[194, "email.message.EmailMessage.make_mixed"]], "make_related() (email.message.emailmessage method)": [[194, "email.message.EmailMessage.make_related"]], "preamble (email.message.emailmessage attribute)": [[194, "email.message.EmailMessage.preamble"]], "replace_header() (email.message.emailmessage method)": [[194, "email.message.EmailMessage.replace_header"]], "set_boundary() (email.message.emailmessage method)": [[194, "email.message.EmailMessage.set_boundary"]], "set_content() (email.message.emailmessage method)": [[194, "email.message.EmailMessage.set_content"]], "set_default_type() (email.message.emailmessage method)": [[194, "email.message.EmailMessage.set_default_type"]], "set_param() (email.message.emailmessage method)": [[194, "email.message.EmailMessage.set_param"]], "set_unixfrom() (email.message.emailmessage method)": [[194, "email.message.EmailMessage.set_unixfrom"]], "values() (email.message.emailmessage method)": [[194, "email.message.EmailMessage.values"]], "walk() (email.message.emailmessage method)": [[194, "email.message.EmailMessage.walk"]], "mimeapplication (class in email.mime.application)": [[195, "email.mime.application.MIMEApplication"]], "mimeaudio (class in email.mime.audio)": [[195, "email.mime.audio.MIMEAudio"]], "mimebase (class in email.mime.base)": [[195, "email.mime.base.MIMEBase"]], "mimeimage (class in email.mime.image)": [[195, "email.mime.image.MIMEImage"]], "mimemessage (class in email.mime.message)": [[195, "email.mime.message.MIMEMessage"]], "mimemultipart (class in email.mime.multipart)": [[195, "email.mime.multipart.MIMEMultipart"]], "mimenonmultipart (class in email.mime.nonmultipart)": [[195, "email.mime.nonmultipart.MIMENonMultipart"]], "mimetext (class in email.mime.text)": [[195, "email.mime.text.MIMEText"]], "email.mime": [[195, "module-email.mime"]], "bytesfeedparser (class in email.parser)": [[196, "email.parser.BytesFeedParser"]], "bytesheaderparser (class in email.parser)": [[196, "email.parser.BytesHeaderParser"]], "bytesparser (class in email.parser)": [[196, "email.parser.BytesParser"]], "feedparser (class in email.parser)": [[196, "email.parser.FeedParser"]], "headerparser (class in email.parser)": [[196, "email.parser.HeaderParser"]], "parser (class in email.parser)": [[196, "email.parser.Parser"]], "close() (email.parser.bytesfeedparser method)": [[196, "email.parser.BytesFeedParser.close"]], "email.parser": [[196, "module-email.parser"]], "feed() (email.parser.bytesfeedparser method)": [[196, "email.parser.BytesFeedParser.feed"]], "message_from_binary_file() (in module email)": [[196, "email.message_from_binary_file"]], "message_from_bytes() (in module email)": [[196, "email.message_from_bytes"]], "message_from_file() (in module email)": [[196, "email.message_from_file"]], "message_from_string() (in module email)": [[196, "email.message_from_string"]], "parse() (email.parser.bytesparser method)": [[196, "email.parser.BytesParser.parse"]], "parse() (email.parser.parser method)": [[196, "email.parser.Parser.parse"]], "parsebytes() (email.parser.bytesparser method)": [[196, "email.parser.BytesParser.parsebytes"]], "parsestr() (email.parser.parser method)": [[196, "email.parser.Parser.parsestr"]], "compat32 (class in email.policy)": [[197, "email.policy.Compat32"]], "emailpolicy (class in email.policy)": [[197, "email.policy.EmailPolicy"]], "http (in module email.policy)": [[197, "email.policy.HTTP"]], "policy (class in email.policy)": [[197, "email.policy.Policy"]], "smtp (in module email.policy)": [[197, "email.policy.SMTP"]], "smtputf8 (in module email.policy)": [[197, "email.policy.SMTPUTF8"]], "clone() (email.policy.policy method)": [[197, "email.policy.Policy.clone"]], "compat32 (in module email.policy)": [[197, "email.policy.compat32"]], "content_manager (email.policy.emailpolicy attribute)": [[197, "email.policy.EmailPolicy.content_manager"]], "cte_type (email.policy.policy attribute)": [[197, "email.policy.Policy.cte_type"]], "default (in module email.policy)": [[197, "email.policy.default"]], "email.policy": [[197, "module-email.policy"]], "fold() (email.policy.compat32 method)": [[197, "email.policy.Compat32.fold"]], "fold() (email.policy.emailpolicy method)": [[197, "email.policy.EmailPolicy.fold"]], "fold() (email.policy.policy method)": [[197, "email.policy.Policy.fold"]], "fold_binary() (email.policy.compat32 method)": [[197, "email.policy.Compat32.fold_binary"]], "fold_binary() (email.policy.emailpolicy method)": [[197, "email.policy.EmailPolicy.fold_binary"]], "fold_binary() (email.policy.policy method)": [[197, "email.policy.Policy.fold_binary"]], "handle_defect() (email.policy.policy method)": [[197, "email.policy.Policy.handle_defect"]], "header_factory (email.policy.emailpolicy attribute)": [[197, "email.policy.EmailPolicy.header_factory"]], "header_fetch_parse() (email.policy.compat32 method)": [[197, "email.policy.Compat32.header_fetch_parse"]], "header_fetch_parse() (email.policy.emailpolicy method)": [[197, "email.policy.EmailPolicy.header_fetch_parse"]], "header_fetch_parse() (email.policy.policy method)": [[197, "email.policy.Policy.header_fetch_parse"]], "header_max_count() (email.policy.emailpolicy method)": [[197, "email.policy.EmailPolicy.header_max_count"]], "header_max_count() (email.policy.policy method)": [[197, "email.policy.Policy.header_max_count"]], "header_source_parse() (email.policy.compat32 method)": [[197, "email.policy.Compat32.header_source_parse"]], "header_source_parse() (email.policy.emailpolicy method)": [[197, "email.policy.EmailPolicy.header_source_parse"]], "header_source_parse() (email.policy.policy method)": [[197, "email.policy.Policy.header_source_parse"]], "header_store_parse() (email.policy.compat32 method)": [[197, "email.policy.Compat32.header_store_parse"]], "header_store_parse() (email.policy.emailpolicy method)": [[197, "email.policy.EmailPolicy.header_store_parse"]], "header_store_parse() (email.policy.policy method)": [[197, "email.policy.Policy.header_store_parse"]], "linesep (email.policy.policy attribute)": [[197, "email.policy.Policy.linesep"]], "mangle_from_ (email.policy.compat32 attribute)": [[197, "email.policy.Compat32.mangle_from_"]], "mangle_from_ (email.policy.policy attribute)": [[197, "email.policy.Policy.mangle_from_"]], "max_line_length (email.policy.policy attribute)": [[197, "email.policy.Policy.max_line_length"]], "message_factory (email.policy.policy attribute)": [[197, "email.policy.Policy.message_factory"]], "raise_on_defect (email.policy.policy attribute)": [[197, "email.policy.Policy.raise_on_defect"]], "refold_source (email.policy.emailpolicy attribute)": [[197, "email.policy.EmailPolicy.refold_source"]], "register_defect() (email.policy.policy method)": [[197, "email.policy.Policy.register_defect"]], "strict (in module email.policy)": [[197, "email.policy.strict"]], "utf8 (email.policy.emailpolicy attribute)": [[197, "email.policy.EmailPolicy.utf8"]], "collapse_rfc2231_value() (in module email.utils)": [[198, "email.utils.collapse_rfc2231_value"]], "decode_params() (in module email.utils)": [[198, "email.utils.decode_params"]], "decode_rfc2231() (in module email.utils)": [[198, "email.utils.decode_rfc2231"]], "email.utils": [[198, "module-email.utils"]], "encode_rfc2231() (in module email.utils)": [[198, "email.utils.encode_rfc2231"]], "format_datetime() (in module email.utils)": [[198, "email.utils.format_datetime"]], "formataddr() (in module email.utils)": [[198, "email.utils.formataddr"]], "formatdate() (in module email.utils)": [[198, "email.utils.formatdate"]], "getaddresses() (in module email.utils)": [[198, "email.utils.getaddresses"]], "localtime() (in module email.utils)": [[198, "email.utils.localtime"]], "make_msgid() (in module email.utils)": [[198, "email.utils.make_msgid"]], "mktime_tz() (in module email.utils)": [[198, "email.utils.mktime_tz"]], "parseaddr() (in module email.utils)": [[198, "email.utils.parseaddr"]], "parsedate() (in module email.utils)": [[198, "email.utils.parsedate"]], "parsedate_to_datetime() (in module email.utils)": [[198, "email.utils.parsedate_to_datetime"]], "parsedate_tz() (in module email.utils)": [[198, "email.utils.parsedate_tz"]], "quote() (in module email.utils)": [[198, "email.utils.quote"]], "unquote() (in module email.utils)": [[198, "email.utils.unquote"]], "pep 453": [[199, "index-0"], [444, "index-22"], [444, "index-23"], [444, "index-24"], [453, "index-1"], [453, "index-19"], [453, "index-20"], [453, "index-27"], [453, "index-42"], [453, "index-5"], [453, "index-53"]], "bootstrap() (in module ensurepip)": [[199, "ensurepip.bootstrap"]], "ensurepip": [[199, "module-ensurepip"]], "version() (in module ensurepip)": [[199, "ensurepip.version"]], "conform (enum.flagboundary attribute)": [[200, "enum.FlagBoundary.CONFORM"]], "continuous (enum.enumcheck attribute)": [[200, "enum.EnumCheck.CONTINUOUS"]], "eject (enum.flagboundary attribute)": [[200, "enum.FlagBoundary.EJECT"]], "enum (class in enum)": [[200, "enum.Enum"]], "enumcheck (class in enum)": [[200, "enum.EnumCheck"]], "enumtype (class in enum)": [[200, "enum.EnumType"]], "flag (class in enum)": [[200, "enum.Flag"]], "flagboundary (class in enum)": [[200, "enum.FlagBoundary"]], "intenum (class in enum)": [[200, "enum.IntEnum"]], "intflag (class in enum)": [[200, "enum.IntFlag"]], "keep (enum.flagboundary attribute)": [[200, "enum.FlagBoundary.KEEP"]], "named_flags (enum.enumcheck attribute)": [[200, "enum.EnumCheck.NAMED_FLAGS"]], "reprenum (class in enum)": [[200, "enum.ReprEnum"]], "strict (enum.flagboundary attribute)": [[200, "enum.FlagBoundary.STRICT"]], "strenum (class in enum)": [[200, "enum.StrEnum"]], "unique (enum.enumcheck attribute)": [[200, "enum.EnumCheck.UNIQUE"]], "__and__() (enum.flag method)": [[200, "enum.Flag.__and__"]], "__call__() (enum.enumtype method)": [[200, "enum.EnumType.__call__"]], "__contains__() (enum.enumtype method)": [[200, "enum.EnumType.__contains__"]], "__contains__() (enum.flag method)": [[200, "enum.Flag.__contains__"]], "__dir__() (enum.enum method)": [[200, "enum.Enum.__dir__"]], "__dir__() (enum.enumtype method)": [[200, "enum.EnumType.__dir__"]], "__format__() (enum.enum method)": [[200, "enum.Enum.__format__"]], "__getitem__() (enum.enumtype method)": [[200, "enum.EnumType.__getitem__"]], "__init_subclass__() (enum.enum method)": [[200, "enum.Enum.__init_subclass__"]], "__iter__() (enum.enumtype method)": [[200, "enum.EnumType.__iter__"]], "__len__() (enum.enumtype method)": [[200, "enum.EnumType.__len__"]], "__or__() (enum.flag method)": [[200, "enum.Flag.__or__"]], "__repr__() (enum.enum method)": [[200, "enum.Enum.__repr__"]], "__reversed__() (enum.enumtype method)": [[200, "enum.EnumType.__reversed__"]], "__str__() (enum.enum method)": [[200, "enum.Enum.__str__"]], "__xor__() (enum.flag method)": [[200, "enum.Flag.__xor__"]], "_generate_next_value_() (enum.enum method)": [[200, "enum.Enum._generate_next_value_"]], "_ignore_ (enum.enum attribute)": [[200, "enum.Enum._ignore_"]], "_missing_() (enum.enum method)": [[200, "enum.Enum._missing_"]], "_numeric_repr_() (enum.flag method)": [[200, "enum.Flag._numeric_repr_"]], "auto (class in enum)": [[200, "enum.auto"]], "enum": [[200, "module-enum"]], "global_enum() (in module enum)": [[200, "enum.global_enum"]], "member() (in module enum)": [[200, "enum.member"]], "name (enum.enum attribute)": [[200, "enum.Enum.name"]], "nonmember() (in module enum)": [[200, "enum.nonmember"]], "property() (in module enum)": [[200, "enum.property"]], "show_flag_values() (in module enum)": [[200, "enum.show_flag_values"]], "unique() (in module enum)": [[200, "enum.unique"]], "value (enum.enum attribute)": [[200, "enum.Enum.value"]], "verify() (in module enum)": [[200, "enum.verify"]], "e2big (in module errno)": [[201, "errno.E2BIG"]], "eacces (in module errno)": [[201, "errno.EACCES"]], "eaddrinuse (in module errno)": [[201, "errno.EADDRINUSE"]], "eaddrnotavail (in module errno)": [[201, "errno.EADDRNOTAVAIL"]], "eadv (in module errno)": [[201, "errno.EADV"]], "eafnosupport (in module errno)": [[201, "errno.EAFNOSUPPORT"]], "eagain (in module errno)": [[201, "errno.EAGAIN"]], "ealready (in module errno)": [[201, "errno.EALREADY"]], "ebade (in module errno)": [[201, "errno.EBADE"]], "ebadf (in module errno)": [[201, "errno.EBADF"]], "ebadfd (in module errno)": [[201, "errno.EBADFD"]], "ebadmsg (in module errno)": [[201, "errno.EBADMSG"]], "ebadr (in module errno)": [[201, "errno.EBADR"]], "ebadrqc (in module errno)": [[201, "errno.EBADRQC"]], "ebadslt (in module errno)": [[201, "errno.EBADSLT"]], "ebfont (in module errno)": [[201, "errno.EBFONT"]], "ebusy (in module errno)": [[201, "errno.EBUSY"]], "ecanceled (in module errno)": [[201, "errno.ECANCELED"]], "echild (in module errno)": [[201, "errno.ECHILD"]], "echrng (in module errno)": [[201, "errno.ECHRNG"]], "ecomm (in module errno)": [[201, "errno.ECOMM"]], "econnaborted (in module errno)": [[201, "errno.ECONNABORTED"]], "econnrefused (in module errno)": [[201, "errno.ECONNREFUSED"]], "econnreset (in module errno)": [[201, "errno.ECONNRESET"]], "edeadlk (in module errno)": [[201, "errno.EDEADLK"]], "edeadlock (in module errno)": [[201, "errno.EDEADLOCK"]], "edestaddrreq (in module errno)": [[201, "errno.EDESTADDRREQ"]], "edom (in module errno)": [[201, "errno.EDOM"]], "edotdot (in module errno)": [[201, "errno.EDOTDOT"]], "edquot (in module errno)": [[201, "errno.EDQUOT"]], "eexist (in module errno)": [[201, "errno.EEXIST"]], "efault (in module errno)": [[201, "errno.EFAULT"]], "efbig (in module errno)": [[201, "errno.EFBIG"]], "ehostdown (in module errno)": [[201, "errno.EHOSTDOWN"]], "ehostunreach (in module errno)": [[201, "errno.EHOSTUNREACH"]], "eidrm (in module errno)": [[201, "errno.EIDRM"]], "eilseq (in module errno)": [[201, "errno.EILSEQ"]], "einprogress (in module errno)": [[201, "errno.EINPROGRESS"]], "eintr (in module errno)": [[201, "errno.EINTR"]], "einval (in module errno)": [[201, "errno.EINVAL"]], "eio (in module errno)": [[201, "errno.EIO"]], "eisconn (in module errno)": [[201, "errno.EISCONN"]], "eisdir (in module errno)": [[201, "errno.EISDIR"]], "eisnam (in module errno)": [[201, "errno.EISNAM"]], "el2hlt (in module errno)": [[201, "errno.EL2HLT"]], "el2nsync (in module errno)": [[201, "errno.EL2NSYNC"]], "el3hlt (in module errno)": [[201, "errno.EL3HLT"]], "el3rst (in module errno)": [[201, "errno.EL3RST"]], "elibacc (in module errno)": [[201, "errno.ELIBACC"]], "elibbad (in module errno)": [[201, "errno.ELIBBAD"]], "elibexec (in module errno)": [[201, "errno.ELIBEXEC"]], "elibmax (in module errno)": [[201, "errno.ELIBMAX"]], "elibscn (in module errno)": [[201, "errno.ELIBSCN"]], "elnrng (in module errno)": [[201, "errno.ELNRNG"]], "eloop (in module errno)": [[201, "errno.ELOOP"]], "emfile (in module errno)": [[201, "errno.EMFILE"]], "emlink (in module errno)": [[201, "errno.EMLINK"]], "emsgsize (in module errno)": [[201, "errno.EMSGSIZE"]], "emultihop (in module errno)": [[201, "errno.EMULTIHOP"]], "enametoolong (in module errno)": [[201, "errno.ENAMETOOLONG"]], "enavail (in module errno)": [[201, "errno.ENAVAIL"]], "enetdown (in module errno)": [[201, "errno.ENETDOWN"]], "enetreset (in module errno)": [[201, "errno.ENETRESET"]], "enetunreach (in module errno)": [[201, "errno.ENETUNREACH"]], "enfile (in module errno)": [[201, "errno.ENFILE"]], "enoano (in module errno)": [[201, "errno.ENOANO"]], "enobufs (in module errno)": [[201, "errno.ENOBUFS"]], "enocsi (in module errno)": [[201, "errno.ENOCSI"]], "enodata (in module errno)": [[201, "errno.ENODATA"]], "enodev (in module errno)": [[201, "errno.ENODEV"]], "enoent (in module errno)": [[201, "errno.ENOENT"]], "enoexec (in module errno)": [[201, "errno.ENOEXEC"]], "enolck (in module errno)": [[201, "errno.ENOLCK"]], "enolink (in module errno)": [[201, "errno.ENOLINK"]], "enomem (in module errno)": [[201, "errno.ENOMEM"]], "enomsg (in module errno)": [[201, "errno.ENOMSG"]], "enonet (in module errno)": [[201, "errno.ENONET"]], "enopkg (in module errno)": [[201, "errno.ENOPKG"]], "enoprotoopt (in module errno)": [[201, "errno.ENOPROTOOPT"]], "enospc (in module errno)": [[201, "errno.ENOSPC"]], "enosr (in module errno)": [[201, "errno.ENOSR"]], "enostr (in module errno)": [[201, "errno.ENOSTR"]], "enosys (in module errno)": [[201, "errno.ENOSYS"]], "enotblk (in module errno)": [[201, "errno.ENOTBLK"]], "enotcapable (in module errno)": [[201, "errno.ENOTCAPABLE"]], "enotconn (in module errno)": [[201, "errno.ENOTCONN"]], "enotdir (in module errno)": [[201, "errno.ENOTDIR"]], "enotempty (in module errno)": [[201, "errno.ENOTEMPTY"]], "enotnam (in module errno)": [[201, "errno.ENOTNAM"]], "enotrecoverable (in module errno)": [[201, "errno.ENOTRECOVERABLE"]], "enotsock (in module errno)": [[201, "errno.ENOTSOCK"]], "enotsup (in module errno)": [[201, "errno.ENOTSUP"]], "enotty (in module errno)": [[201, "errno.ENOTTY"]], "enotuniq (in module errno)": [[201, "errno.ENOTUNIQ"]], "enxio (in module errno)": [[201, "errno.ENXIO"]], "eopnotsupp (in module errno)": [[201, "errno.EOPNOTSUPP"]], "eoverflow (in module errno)": [[201, "errno.EOVERFLOW"]], "eownerdead (in module errno)": [[201, "errno.EOWNERDEAD"]], "eperm (in module errno)": [[201, "errno.EPERM"]], "epfnosupport (in module errno)": [[201, "errno.EPFNOSUPPORT"]], "epipe (in module errno)": [[201, "errno.EPIPE"]], "eproto (in module errno)": [[201, "errno.EPROTO"]], "eprotonosupport (in module errno)": [[201, "errno.EPROTONOSUPPORT"]], "eprototype (in module errno)": [[201, "errno.EPROTOTYPE"]], "eqfull (in module errno)": [[201, "errno.EQFULL"]], "erange (in module errno)": [[201, "errno.ERANGE"]], "eremchg (in module errno)": [[201, "errno.EREMCHG"]], "eremote (in module errno)": [[201, "errno.EREMOTE"]], "eremoteio (in module errno)": [[201, "errno.EREMOTEIO"]], "erestart (in module errno)": [[201, "errno.ERESTART"]], "erofs (in module errno)": [[201, "errno.EROFS"]], "eshutdown (in module errno)": [[201, "errno.ESHUTDOWN"]], "esocktnosupport (in module errno)": [[201, "errno.ESOCKTNOSUPPORT"]], "espipe (in module errno)": [[201, "errno.ESPIPE"]], "esrch (in module errno)": [[201, "errno.ESRCH"]], "esrmnt (in module errno)": [[201, "errno.ESRMNT"]], "estale (in module errno)": [[201, "errno.ESTALE"]], "estrpipe (in module errno)": [[201, "errno.ESTRPIPE"]], "etime (in module errno)": [[201, "errno.ETIME"]], "etimedout (in module errno)": [[201, "errno.ETIMEDOUT"]], "etoomanyrefs (in module errno)": [[201, "errno.ETOOMANYREFS"]], "etxtbsy (in module errno)": [[201, "errno.ETXTBSY"]], "euclean (in module errno)": [[201, "errno.EUCLEAN"]], "eunatch (in module errno)": [[201, "errno.EUNATCH"]], "eusers (in module errno)": [[201, "errno.EUSERS"]], "ewouldblock (in module errno)": [[201, "errno.EWOULDBLOCK"]], "exdev (in module errno)": [[201, "errno.EXDEV"]], "exfull (in module errno)": [[201, "errno.EXFULL"]], "errno": [[201, "module-errno"], [202, "index-4"]], "errorcode (in module errno)": [[201, "errno.errorcode"]], "arithmeticerror": [[202, "ArithmeticError"]], "assertionerror": [[202, "AssertionError"], [411, "index-19"]], "attributeerror": [[202, "AttributeError"], [405, "index-40"]], "baseexception": [[202, "BaseException"]], "baseexceptiongroup": [[202, "BaseExceptionGroup"]], "blockingioerror": [[202, "BlockingIOError"], [246, "io.BlockingIOError"]], "brokenpipeerror": [[202, "BrokenPipeError"]], "buffererror": [[202, "BufferError"]], "byteswarning": [[202, "BytesWarning"]], "childprocesserror": [[202, "ChildProcessError"]], "connectionabortederror": [[202, "ConnectionAbortedError"]], "connectionerror": [[202, "ConnectionError"]], "connectionrefusederror": [[202, "ConnectionRefusedError"]], "connectionreseterror": [[202, "ConnectionResetError"]], "deprecationwarning": [[202, "DeprecationWarning"]], "eoferror": [[202, "EOFError"]], "encodingwarning": [[202, "EncodingWarning"]], "environmenterror": [[202, "EnvironmentError"]], "exception": [[202, "Exception"], [403, "index-64"], [404, "index-14"], [405, "index-32"], [405, "index-33"], [405, "index-36"], [405, "index-37"], [405, "index-4"], [405, "index-40"], [405, "index-63"], [405, "index-67"], [405, "index-72"], [411, "index-19"], [411, "index-26"], [411, "index-27"], [411, "index-29"], [411, "index-34"]], "exceptiongroup": [[202, "ExceptionGroup"]], "fileexistserror": [[202, "FileExistsError"]], "filenotfounderror": [[202, "FileNotFoundError"]], "floatingpointerror": [[202, "FloatingPointError"]], "futurewarning": [[202, "FutureWarning"]], "generatorexit": [[202, "GeneratorExit"], [405, "index-33"], [405, "index-37"]], "ioerror": [[202, "IOError"]], "importerror": [[202, "ImportError"], [411, "index-34"]], "importwarning": [[202, "ImportWarning"]], "indentationerror": [[202, "IndentationError"]], "indexerror": [[202, "IndexError"]], "interruptederror": [[202, "InterruptedError"]], "isadirectoryerror": [[202, "IsADirectoryError"]], "keyerror": [[202, "KeyError"]], "keyboardinterrupt": [[202, "KeyboardInterrupt"]], "lookuperror": [[202, "LookupError"]], "memoryerror": [[202, "MemoryError"]], "modulenotfounderror": [[202, "ModuleNotFoundError"]], "nameerror": [[202, "NameError"], [405, "index-4"]], "notadirectoryerror": [[202, "NotADirectoryError"]], "notimplementederror": [[202, "NotImplementedError"]], "oserror": [[202, "OSError"]], "overflowerror": [[202, "OverflowError"]], "pep 3134": [[202, "index-2"], [445, "index-12"], [445, "index-28"], [445, "index-29"]], "pep 475": [[202, "index-7"], [214, "index-9"], [277, "index-22"], [277, "index-24"], [277, "index-25"], [277, "index-44"], [310, "index-3"], [310, "index-4"], [310, "index-5"], [310, "index-6"], [310, "index-7"], [311, "index-0"], [315, "index-0"], [315, "index-1"], [318, "index-10"], [318, "index-11"], [318, "index-12"], [318, "index-13"], [318, "index-4"], [318, "index-5"], [318, "index-7"], [318, "index-8"], [318, "index-9"], [344, "index-8"], [454, "index-15"], [454, "index-16"], [454, "index-49"]], "pep 565": [[202, "index-9"], [456, "index-19"]], "pendingdeprecationwarning": [[202, "PendingDeprecationWarning"]], "permissionerror": [[202, "PermissionError"]], "processlookuperror": [[202, "ProcessLookupError"]], "recursionerror": [[202, "RecursionError"]], "referenceerror": [[202, "ReferenceError"]], "resourcewarning": [[202, "ResourceWarning"]], "runtimeerror": [[202, "RuntimeError"]], "runtimewarning": [[202, "RuntimeWarning"]], "stopasynciteration": [[202, "StopAsyncIteration"], [405, "index-36"]], "stopiteration": [[202, "StopIteration"], [405, "index-32"], [411, "index-26"]], "syntaxerror": [[202, "SyntaxError"]], "syntaxwarning": [[202, "SyntaxWarning"]], "systemerror": [[202, "SystemError"]], "systemexit": [[202, "SystemExit"]], "taberror": [[202, "TabError"]], "typeerror": [[202, "TypeError"], [405, "index-63"]], "unboundlocalerror": [[202, "UnboundLocalError"], [404, "index-9"]], "unicodedecodeerror": [[202, "UnicodeDecodeError"]], "unicodeencodeerror": [[202, "UnicodeEncodeError"]], "unicodeerror": [[202, "UnicodeError"]], "unicodetranslateerror": [[202, "UnicodeTranslateError"]], "unicodewarning": [[202, "UnicodeWarning"]], "userwarning": [[202, "UserWarning"]], "valueerror": [[202, "ValueError"], [405, "index-72"]], "warning": [[202, "Warning"], [320, "sqlite3.Warning"]], "windowserror": [[202, "WindowsError"]], "zerodivisionerror": [[202, "ZeroDivisionError"], [405, "index-67"]], "__notes__ (baseexception attribute)": [[202, "BaseException.__notes__"]], "add_note() (baseexception method)": [[202, "BaseException.add_note"]], "args (baseexception attribute)": [[202, "BaseException.args"]], "assert": [[202, "index-3"], [411, "index-18"]], "characters_written (blockingioerror attribute)": [[202, "BlockingIOError.characters_written"]], "code (systemexit attribute)": [[202, "SystemExit.code"]], "derive() (baseexceptiongroup method)": [[202, "BaseExceptionGroup.derive"]], "encoding (unicodeerror attribute)": [[202, "UnicodeError.encoding"]], "end (unicodeerror attribute)": [[202, "UnicodeError.end"]], "end_lineno (syntaxerror attribute)": [[202, "SyntaxError.end_lineno"]], "end_offset (syntaxerror attribute)": [[202, "SyntaxError.end_offset"]], "errno (oserror attribute)": [[202, "OSError.errno"]], "except": [[202, "index-0"], [402, "index-9"]], "exceptions (baseexceptiongroup attribute)": [[202, "BaseExceptionGroup.exceptions"]], "filename (oserror attribute)": [[202, "OSError.filename"]], "filename (syntaxerror attribute)": [[202, "SyntaxError.filename"]], "filename2 (oserror attribute)": [[202, "OSError.filename2"]], "lineno (syntaxerror attribute)": [[202, "SyntaxError.lineno"]], "message (baseexceptiongroup attribute)": [[202, "BaseExceptionGroup.message"]], "object (unicodeerror attribute)": [[202, "UnicodeError.object"]], "offset (syntaxerror attribute)": [[202, "SyntaxError.offset"]], "raise": [[202, "index-1"], [411, "index-27"]], "reason (unicodeerror attribute)": [[202, "UnicodeError.reason"]], "split() (baseexceptiongroup method)": [[202, "BaseExceptionGroup.split"]], "start (unicodeerror attribute)": [[202, "UnicodeError.start"]], "strerror (oserror attribute)": [[202, "OSError.strerror"]], "subgroup() (baseexceptiongroup method)": [[202, "BaseExceptionGroup.subgroup"]], "text (syntaxerror attribute)": [[202, "SyntaxError.text"]], "try": [[202, "index-0"], [402, "index-9"], [403, "index-65"]], "winerror (oserror attribute)": [[202, "OSError.winerror"]], "with_traceback() (baseexception method)": [[202, "BaseException.with_traceback"]], "cancel_dump_traceback_later() (in module faulthandler)": [[203, "faulthandler.cancel_dump_traceback_later"]], "disable() (in module faulthandler)": [[203, "faulthandler.disable"]], "dump_traceback() (in module faulthandler)": [[203, "faulthandler.dump_traceback"]], "dump_traceback_later() (in module faulthandler)": [[203, "faulthandler.dump_traceback_later"]], "enable() (in module faulthandler)": [[203, "faulthandler.enable"]], "faulthandler": [[203, "module-faulthandler"]], "is_enabled() (in module faulthandler)": [[203, "faulthandler.is_enabled"]], "register() (in module faulthandler)": [[203, "faulthandler.register"]], "unregister() (in module faulthandler)": [[203, "faulthandler.unregister"]], "i/o control": [[204, "index-0"], [214, "index-8"], [318, "index-6"], [339, "index-0"]], "unix": [[204, "index-0"], [412, "index-4"]], "fcntl": [[204, "module-fcntl"]], "fcntl() (in module fcntl)": [[204, "fcntl.fcntl"]], "file control": [[204, "index-0"]], "flock() (in module fcntl)": [[204, "fcntl.flock"]], "ioctl() (in module fcntl)": [[204, "fcntl.ioctl"]], "lockf() (in module fcntl)": [[204, "fcntl.lockf"]], "default_ignores (in module filecmp)": [[205, "filecmp.DEFAULT_IGNORES"]], "clear_cache() (in module filecmp)": [[205, "filecmp.clear_cache"]], "cmp() (in module filecmp)": [[205, "filecmp.cmp"]], "cmpfiles() (in module filecmp)": [[205, "filecmp.cmpfiles"]], "common (filecmp.dircmp attribute)": [[205, "filecmp.dircmp.common"]], "common_dirs (filecmp.dircmp attribute)": [[205, "filecmp.dircmp.common_dirs"]], "common_files (filecmp.dircmp attribute)": [[205, "filecmp.dircmp.common_files"]], "common_funny (filecmp.dircmp attribute)": [[205, "filecmp.dircmp.common_funny"]], "diff_files (filecmp.dircmp attribute)": [[205, "filecmp.dircmp.diff_files"]], "dircmp (class in filecmp)": [[205, "filecmp.dircmp"]], "filecmp": [[205, "module-filecmp"]], "funny_files (filecmp.dircmp attribute)": [[205, "filecmp.dircmp.funny_files"]], "left (filecmp.dircmp attribute)": [[205, "filecmp.dircmp.left"]], "left_list (filecmp.dircmp attribute)": [[205, "filecmp.dircmp.left_list"]], "left_only (filecmp.dircmp attribute)": [[205, "filecmp.dircmp.left_only"]], "report() (filecmp.dircmp method)": [[205, "filecmp.dircmp.report"]], "report_full_closure() (filecmp.dircmp method)": [[205, "filecmp.dircmp.report_full_closure"]], "report_partial_closure() (filecmp.dircmp method)": [[205, "filecmp.dircmp.report_partial_closure"]], "right (filecmp.dircmp attribute)": [[205, "filecmp.dircmp.right"]], "right_list (filecmp.dircmp attribute)": [[205, "filecmp.dircmp.right_list"]], "right_only (filecmp.dircmp attribute)": [[205, "filecmp.dircmp.right_only"]], "same_files (filecmp.dircmp attribute)": [[205, "filecmp.dircmp.same_files"]], "subdirs (filecmp.dircmp attribute)": [[205, "filecmp.dircmp.subdirs"]], "fileinput (class in fileinput)": [[207, "fileinput.FileInput"]], "close() (in module fileinput)": [[207, "fileinput.close"]], "fileinput": [[207, "module-fileinput"]], "filelineno() (in module fileinput)": [[207, "fileinput.filelineno"]], "filename() (in module fileinput)": [[207, "fileinput.filename"]], "fileno() (in module fileinput)": [[207, "fileinput.fileno"]], "hook_compressed() (in module fileinput)": [[207, "fileinput.hook_compressed"]], "hook_encoded() (in module fileinput)": [[207, "fileinput.hook_encoded"]], "input() (in module fileinput)": [[207, "fileinput.input"]], "isfirstline() (in module fileinput)": [[207, "fileinput.isfirstline"]], "isstdin() (in module fileinput)": [[207, "fileinput.isstdin"]], "lineno() (in module fileinput)": [[207, "fileinput.lineno"]], "nextfile() (in module fileinput)": [[207, "fileinput.nextfile"]], "[] (square brackets)": [[209, "index-2"], [220, "index-1"], [301, "index-10"], [325, "index-2"], [405, "index-15"], [405, "index-41"], [411, "index-6"]], "filenames": [[209, "index-0"], [220, "index-0"]], "filter() (in module fnmatch)": [[209, "fnmatch.filter"]], "fnmatch": [[209, "module-fnmatch"]], "fnmatch() (in module fnmatch)": [[209, "fnmatch.fnmatch"]], "fnmatchcase() (in module fnmatch)": [[209, "fnmatch.fnmatchcase"]], "glob": [[209, "index-3"], [220, "module-glob"]], "in glob-style wildcards": [[209, "index-2"], [220, "index-1"], [220, "index-2"]], "re": [[209, "index-1"], [301, "module-re"], [324, "index-33"]], "translate() (in module fnmatch)": [[209, "fnmatch.translate"]], "wildcard expansion": [[209, "index-0"]], "fraction (class in fractions)": [[210, "fractions.Fraction"]], "pep 515": [[210, "index-0"], [325, "index-11"], [448, "index-26"], [455, "index-7"], [455, "index-8"]], "__ceil__() (fractions.fraction method)": [[210, "fractions.Fraction.__ceil__"]], "__floor__() (fractions.fraction method)": [[210, "fractions.Fraction.__floor__"]], "__format__() (fractions.fraction method)": [[210, "fractions.Fraction.__format__"]], "__round__() (fractions.fraction method)": [[210, "fractions.Fraction.__round__"]], "as_integer_ratio() (fractions.fraction method)": [[210, "fractions.Fraction.as_integer_ratio"]], "denominator (fractions.fraction attribute)": [[210, "fractions.Fraction.denominator"]], "fractions": [[210, "module-fractions"]], "from_decimal() (fractions.fraction class method)": [[210, "fractions.Fraction.from_decimal"]], "from_float() (fractions.fraction class method)": [[210, "fractions.Fraction.from_float"]], "is_integer() (fractions.fraction method)": [[210, "fractions.Fraction.is_integer"]], "limit_denominator() (fractions.fraction method)": [[210, "fractions.Fraction.limit_denominator"]], "numerator (fractions.fraction attribute)": [[210, "fractions.Fraction.numerator"]], "ftp": [[212, "index-0"], [372, "index-11"], [372, "index-13"]], "ftp (class in ftplib)": [[212, "ftplib.FTP"]], "rfc 2640": [[212, "index-2"], [212, "index-3"], [212, "index-5"], [458, "index-22"]], "rfc 3659": [[212, "index-6"]], "rfc 4217": [[212, "index-4"]], "rfc 959": [[212, "index-1"]], "abort() (ftplib.ftp method)": [[212, "ftplib.FTP.abort"]], "all_errors (in module ftplib)": [[212, "ftplib.all_errors"]], "auth() (ftplib.ftp_tls method)": [[212, "ftplib.FTP_TLS.auth"]], "ccc() (ftplib.ftp_tls method)": [[212, "ftplib.FTP_TLS.ccc"]], "close() (ftplib.ftp method)": [[212, "ftplib.FTP.close"]], "connect() (ftplib.ftp method)": [[212, "ftplib.FTP.connect"]], "cwd() (ftplib.ftp method)": [[212, "ftplib.FTP.cwd"]], "delete() (ftplib.ftp method)": [[212, "ftplib.FTP.delete"]], "dir() (ftplib.ftp method)": [[212, "ftplib.FTP.dir"]], "error_perm": [[212, "ftplib.error_perm"]], "error_proto": [[212, "ftplib.error_proto"], [287, "poplib.error_proto"]], "error_reply": [[212, "ftplib.error_reply"]], "error_temp": [[212, "ftplib.error_temp"]], "ftplib": [[212, "module-ftplib"]], "ftplib (standard module)": [[212, "index-0"]], "getwelcome() (ftplib.ftp method)": [[212, "ftplib.FTP.getwelcome"]], "login() (ftplib.ftp method)": [[212, "ftplib.FTP.login"]], "mkd() (ftplib.ftp method)": [[212, "ftplib.FTP.mkd"]], "mlsd() (ftplib.ftp method)": [[212, "ftplib.FTP.mlsd"]], "nlst() (ftplib.ftp method)": [[212, "ftplib.FTP.nlst"]], "ntransfercmd() (ftplib.ftp method)": [[212, "ftplib.FTP.ntransfercmd"]], "prot_c() (ftplib.ftp_tls method)": [[212, "ftplib.FTP_TLS.prot_c"]], "prot_p() (ftplib.ftp_tls method)": [[212, "ftplib.FTP_TLS.prot_p"]], "protocol": [[212, "index-0"], [230, "index-0"], [231, "index-0"], [234, "index-0"], [237, "index-0"], [282, "index-5"], [287, "index-0"], [317, "index-0"], [324, "index-18"], [324, "index-54"], [372, "index-11"], [372, "index-12"]], "pwd() (ftplib.ftp method)": [[212, "ftplib.FTP.pwd"]], "quit() (ftplib.ftp method)": [[212, "ftplib.FTP.quit"]], "rename() (ftplib.ftp method)": [[212, "ftplib.FTP.rename"]], "retrbinary() (ftplib.ftp method)": [[212, "ftplib.FTP.retrbinary"]], "retrlines() (ftplib.ftp method)": [[212, "ftplib.FTP.retrlines"]], "rmd() (ftplib.ftp method)": [[212, "ftplib.FTP.rmd"]], "sendcmd() (ftplib.ftp method)": [[212, "ftplib.FTP.sendcmd"]], "set_debuglevel() (ftplib.ftp method)": [[212, "ftplib.FTP.set_debuglevel"]], "set_pasv() (ftplib.ftp method)": [[212, "ftplib.FTP.set_pasv"]], "size() (ftplib.ftp method)": [[212, "ftplib.FTP.size"]], "ssl_version (ftplib.ftp_tls attribute)": [[212, "ftplib.FTP_TLS.ssl_version"]], "storbinary() (ftplib.ftp method)": [[212, "ftplib.FTP.storbinary"]], "storlines() (ftplib.ftp method)": [[212, "ftplib.FTP.storlines"]], "transfercmd() (ftplib.ftp method)": [[212, "ftplib.FTP.transfercmd"]], "voidcmd() (ftplib.ftp method)": [[212, "ftplib.FTP.voidcmd"]], "boolean": [[214, "index-0"], [324, "index-1"], [324, "index-11"], [324, "index-17"], [324, "index-5"], [403, "index-12"], [405, "index-82"]], "infinity": [[214, "index-3"]], "nan": [[214, "index-3"]], "pythonbreakpoint": [[214, "index-1"], [331, "index-3"], [331, "index-4"], [331, "index-5"], [430, "envvar-PYTHONBREAKPOINT"], [456, "index-12"]], "pythoncaseok": [[214, "index-16"], [430, "envvar-PYTHONCASEOK"], [438, "index-11"], [458, "index-21"]], "__format__": [[214, "index-4"]], "__import__()": [[214, "import__"]], "abs()": [[214, "abs"]], "aiter()": [[214, "aiter"]], "all()": [[214, "all"]], "anext()": [[214, "anext"]], "any()": [[214, "any"]], "ascii()": [[214, "ascii"]], "bin()": [[214, "bin"]], "binary mode": [[214, "index-8"]], "bool (built-in class)": [[214, "bool"]], "breakpoint()": [[214, "breakpoint"]], "buffer size, i/o": [[214, "index-8"]], "buffering": [[214, "index-8"], [318, "index-6"]], "callable()": [[214, "callable"]], "chr()": [[214, "chr"]], "classmethod()": [[214, "classmethod"]], "compile()": [[214, "compile"]], "complex (built-in class)": [[214, "complex"]], "delattr()": [[214, "delattr"]], "dir()": [[214, "dir"]], "divmod()": [[214, "divmod"]], "enumerate()": [[214, "enumerate"]], "eval()": [[214, "eval"]], "exec": [[214, "index-2"], [324, "index-64"], [411, "index-44"]], "exec()": [[214, "exec"]], "filter()": [[214, "filter"]], "float (built-in class)": [[214, "float"]], "format()": [[214, "format"]], "format() (built-in function)": [[214, "index-4"], [403, "index-74"]], "getattr()": [[214, "getattr"]], "globals()": [[214, "globals"]], "hasattr()": [[214, "hasattr"]], "hash()": [[214, "hash"]], "help()": [[214, "help"]], "hex()": [[214, "hex"]], "id()": [[214, "id"]], "import": [[214, "index-13"], [316, "index-2"], [403, "index-43"], [407, "index-9"], [411, "index-34"], [411, "index-39"]], "input()": [[214, "input"]], "int (built-in class)": [[214, "int"]], "isinstance()": [[214, "isinstance"]], "issubclass()": [[214, "issubclass"]], "iter()": [[214, "iter"]], "len()": [[214, "len"]], "line-buffered i/o": [[214, "index-8"]], "locals()": [[214, "locals"]], "map()": [[214, "map"]], "max()": [[214, "max"]], "min()": [[214, "min"]], "modes": [[214, "index-6"]], "next()": [[214, "next"]], "object (built-in class)": [[214, "object"]], "oct()": [[214, "oct"]], "open()": [[214, "open"]], "open() built-in function": [[214, "index-5"], [214, "index-7"]], "ord()": [[214, "ord"]], "pow()": [[214, "pow"]], "print()": [[214, "print"]], "property (built-in class)": [[214, "property"]], "repr()": [[214, "repr"]], "reversed()": [[214, "reversed"]], "round()": [[214, "round"]], "setattr()": [[214, "setattr"]], "slice (built-in class)": [[214, "slice"]], "sorted()": [[214, "sorted"]], "staticmethod()": [[214, "staticmethod"]], "str() (built-in function)": [[214, "index-11"]], "sum()": [[214, "sum"]], "super (built-in class)": [[214, "super"]], "text mode": [[214, "index-8"]], "type (built-in class)": [[214, "type"]], "unbuffered i/o": [[214, "index-8"]], "vars()": [[214, "vars"]], "zip()": [[214, "zip"]], "pep 412": [[215, "index-0"], [452, "index-16"]], "args (functools.partial attribute)": [[215, "functools.partial.args"]], "cache() (in module functools)": [[215, "functools.cache"]], "cached_property() (in module functools)": [[215, "functools.cached_property"]], "cmp_to_key() (in module functools)": [[215, "functools.cmp_to_key"]], "func (functools.partial attribute)": [[215, "functools.partial.func"]], "functools": [[215, "module-functools"]], "keywords (functools.partial attribute)": [[215, "functools.partial.keywords"]], "lru_cache() (in module functools)": [[215, "functools.lru_cache"]], "partial() (in module functools)": [[215, "functools.partial"]], "partialmethod (class in functools)": [[215, "functools.partialmethod"]], "reduce() (in module functools)": [[215, "functools.reduce"]], "singledispatch() (in module functools)": [[215, "functools.singledispatch"]], "singledispatchmethod (class in functools)": [[215, "functools.singledispatchmethod"]], "total_ordering() (in module functools)": [[215, "functools.total_ordering"]], "update_wrapper() (in module functools)": [[215, "functools.update_wrapper"]], "wraps() (in module functools)": [[215, "functools.wraps"]], "debug_collectable (in module gc)": [[216, "gc.DEBUG_COLLECTABLE"]], "debug_leak (in module gc)": [[216, "gc.DEBUG_LEAK"]], "debug_saveall (in module gc)": [[216, "gc.DEBUG_SAVEALL"]], "debug_stats (in module gc)": [[216, "gc.DEBUG_STATS"]], "debug_uncollectable (in module gc)": [[216, "gc.DEBUG_UNCOLLECTABLE"]], "callbacks (in module gc)": [[216, "gc.callbacks"]], "collect() (in module gc)": [[216, "gc.collect"]], "disable() (in module gc)": [[216, "gc.disable"]], "enable() (in module gc)": [[216, "gc.enable"]], "freeze() (in module gc)": [[216, "gc.freeze"]], "garbage (in module gc)": [[216, "gc.garbage"]], "gc": [[216, "module-gc"]], "get_count() (in module gc)": [[216, "gc.get_count"]], "get_debug() (in module gc)": [[216, "gc.get_debug"]], "get_freeze_count() (in module gc)": [[216, "gc.get_freeze_count"]], "get_objects() (in module gc)": [[216, "gc.get_objects"]], "get_referents() (in module gc)": [[216, "gc.get_referents"]], "get_referrers() (in module gc)": [[216, "gc.get_referrers"]], "get_stats() (in module gc)": [[216, "gc.get_stats"]], "get_threshold() (in module gc)": [[216, "gc.get_threshold"]], "is_finalized() (in module gc)": [[216, "gc.is_finalized"]], "is_tracked() (in module gc)": [[216, "gc.is_tracked"]], "isenabled() (in module gc)": [[216, "gc.isenabled"]], "set_debug() (in module gc)": [[216, "gc.set_debug"]], "set_threshold() (in module gc)": [[216, "gc.set_threshold"]], "unfreeze() (in module gc)": [[216, "gc.unfreeze"]], "getopterror": [[217, "getopt.GetoptError"]], "getopt": [[217, "module-getopt"]], "getopt() (in module getopt)": [[217, "getopt.getopt"]], "gnu_getopt() (in module getopt)": [[217, "getopt.gnu_getopt"]], "getpasswarning": [[218, "getpass.GetPassWarning"]], "lname": [[218, "index-2"]], "logname": [[218, "index-0"], [277, "index-10"]], "user": [[218, "index-1"], [277, "index-16"], [277, "index-19"], [277, "index-8"]], "username": [[218, "index-3"], [277, "index-11"], [278, "index-7"]], "getpass": [[218, "module-getpass"]], "getpass() (in module getpass)": [[218, "getpass.getpass"]], "getuser() (in module getpass)": [[218, "getpass.getuser"]], "gnome": [[219, "index-10"]], "gnutranslations (class in gettext)": [[219, "gettext.GNUTranslations"]], "lang": [[219, "index-3"], [219, "index-8"], [254, "index-1"], [254, "index-2"], [254, "index-3"]], "language": [[219, "index-0"], [219, "index-5"], [324, "index-11"], [403, "index-13"], [403, "index-4"], [403, "index-41"], [405, "index-77"]], "lc_all": [[219, "index-1"], [219, "index-6"]], "lc_messages": [[219, "index-2"], [219, "index-7"]], "nulltranslations (class in gettext)": [[219, "gettext.NullTranslations"]], "_ (underscore)": [[219, "index-4"], [325, "index-10"], [410, "index-28"], [410, "index-29"]], "_parse() (gettext.nulltranslations method)": [[219, "gettext.NullTranslations._parse"]], "add_fallback() (gettext.nulltranslations method)": [[219, "gettext.NullTranslations.add_fallback"]], "bindtextdomain() (in module gettext)": [[219, "gettext.bindtextdomain"]], "charset() (gettext.nulltranslations method)": [[219, "gettext.NullTranslations.charset"]], "dgettext() (in module gettext)": [[219, "gettext.dgettext"]], "dngettext() (in module gettext)": [[219, "gettext.dngettext"]], "dnpgettext() (in module gettext)": [[219, "gettext.dnpgettext"]], "dpgettext() (in module gettext)": [[219, "gettext.dpgettext"]], "find() (in module gettext)": [[219, "gettext.find"]], "gettext": [[219, "index-4"], [219, "module-gettext"]], "gettext() (gettext.gnutranslations method)": [[219, "gettext.GNUTranslations.gettext"]], "gettext() (gettext.nulltranslations method)": [[219, "gettext.NullTranslations.gettext"]], "gettext() (in module gettext)": [[219, "gettext.gettext"]], "info() (gettext.nulltranslations method)": [[219, "gettext.NullTranslations.info"]], "install() (gettext.nulltranslations method)": [[219, "gettext.NullTranslations.install"]], "install() (in module gettext)": [[219, "gettext.install"]], "ngettext() (gettext.gnutranslations method)": [[219, "gettext.GNUTranslations.ngettext"]], "ngettext() (gettext.nulltranslations method)": [[219, "gettext.NullTranslations.ngettext"]], "ngettext() (in module gettext)": [[219, "gettext.ngettext"]], "npgettext() (gettext.gnutranslations method)": [[219, "gettext.GNUTranslations.npgettext"]], "npgettext() (gettext.nulltranslations method)": [[219, "gettext.NullTranslations.npgettext"]], "npgettext() (in module gettext)": [[219, "gettext.npgettext"]], "pgettext() (gettext.gnutranslations method)": [[219, "gettext.GNUTranslations.pgettext"]], "pgettext() (gettext.nulltranslations method)": [[219, "gettext.NullTranslations.pgettext"]], "pgettext() (in module gettext)": [[219, "gettext.pgettext"]], "textdomain() (in module gettext)": [[219, "gettext.textdomain"]], "translation() (in module gettext)": [[219, "gettext.translation"]], "**": [[220, "index-2"], [324, "index-13"], [402, "index-32"], [405, "index-18"], [405, "index-50"], [405, "index-58"], [416, "index-4"]], ". (dot)": [[220, "index-1"], [277, "index-45"], [277, "index-50"], [301, "index-0"], [324, "index-36"], [324, "index-46"], [325, "index-2"], [405, "index-39"], [410, "index-29"]], "escape() (in module glob)": [[220, "glob.escape"]], "glob() (in module glob)": [[220, "glob.glob"]], "iglob() (in module glob)": [[220, "glob.iglob"]], "pathname expansion": [[220, "index-0"]], "cycleerror": [[221, "graphlib.CycleError"]], "topologicalsorter (class in graphlib)": [[221, "graphlib.TopologicalSorter"]], "add() (graphlib.topologicalsorter method)": [[221, "graphlib.TopologicalSorter.add"]], "done() (graphlib.topologicalsorter method)": [[221, "graphlib.TopologicalSorter.done"]], "get_ready() (graphlib.topologicalsorter method)": [[221, "graphlib.TopologicalSorter.get_ready"]], "graphlib": [[221, "module-graphlib"]], "is_active() (graphlib.topologicalsorter method)": [[221, "graphlib.TopologicalSorter.is_active"]], "prepare() (graphlib.topologicalsorter method)": [[221, "graphlib.TopologicalSorter.prepare"]], "static_order() (graphlib.topologicalsorter method)": [[221, "graphlib.TopologicalSorter.static_order"]], "getgrall() (in module grp)": [[222, "grp.getgrall"]], "getgrgid() (in module grp)": [[222, "grp.getgrgid"]], "getgrnam() (in module grp)": [[222, "grp.getgrnam"]], "grp": [[222, "module-grp"]], "--best": [[223, "cmdoption-gzip-best"]], "--decompress": [[223, "cmdoption-gzip-d"]], "--fast": [[223, "cmdoption-gzip-fast"]], "badgzipfile": [[223, "gzip.BadGzipFile"]], "gzipfile (class in gzip)": [[223, "gzip.GzipFile"]], "compress() (in module gzip)": [[223, "gzip.compress"]], "decompress() (in module gzip)": [[223, "gzip.decompress"]], "gzip": [[223, "module-gzip"]], "gzip command line option": [[223, "cmdoption-gzip-arg-file"], [223, "cmdoption-gzip-best"], [223, "cmdoption-gzip-d"], [223, "cmdoption-gzip-fast"], [223, "cmdoption-gzip-h"]], "mtime (gzip.gzipfile attribute)": [[223, "gzip.GzipFile.mtime"]], "name (gzip.gzipfile attribute)": [[223, "gzip.GzipFile.name"]], "open() (in module gzip)": [[223, "gzip.open"]], "peek() (gzip.gzipfile method)": [[223, "gzip.GzipFile.peek"]], "(use in module hashlib)": [[224, "index-2"]], "openssl": [[224, "index-2"], [321, "index-0"]], "rfc 1321": [[224, "index-1"]], "rfc 7693": [[224, "index-5"]], "rfc 7914": [[224, "index-3"]], "algorithms_available (in module hashlib)": [[224, "hashlib.algorithms_available"]], "algorithms_guaranteed (in module hashlib)": [[224, "hashlib.algorithms_guaranteed"]], "blake2b() (in module hashlib)": [[224, "hashlib.blake2b"]], "blake2b, blake2s": [[224, "index-4"]], "blake2b.max_digest_size (in module hashlib)": [[224, "hashlib.blake2b.MAX_DIGEST_SIZE"]], "blake2b.max_key_size (in module hashlib)": [[224, "hashlib.blake2b.MAX_KEY_SIZE"]], "blake2b.person_size (in module hashlib)": [[224, "hashlib.blake2b.PERSON_SIZE"]], "blake2b.salt_size (in module hashlib)": [[224, "hashlib.blake2b.SALT_SIZE"]], "blake2s() (in module hashlib)": [[224, "hashlib.blake2s"]], "blake2s.max_digest_size (in module hashlib)": [[224, "hashlib.blake2s.MAX_DIGEST_SIZE"]], "blake2s.max_key_size (in module hashlib)": [[224, "hashlib.blake2s.MAX_KEY_SIZE"]], "blake2s.person_size (in module hashlib)": [[224, "hashlib.blake2s.PERSON_SIZE"]], "blake2s.salt_size (in module hashlib)": [[224, "hashlib.blake2s.SALT_SIZE"]], "copy() (hashlib.hash method)": [[224, "hashlib.hash.copy"]], "digest() (hashlib.hash method)": [[224, "hashlib.hash.digest"]], "digest() (hashlib.shake method)": [[224, "hashlib.shake.digest"]], "file_digest() (in module hashlib)": [[224, "hashlib.file_digest"]], "hash.block_size (in module hashlib)": [[224, "hashlib.hash.block_size"]], "hash.digest_size (in module hashlib)": [[224, "hashlib.hash.digest_size"]], "hashlib": [[224, "module-hashlib"]], "hexdigest() (hashlib.hash method)": [[224, "hashlib.hash.hexdigest"]], "hexdigest() (hashlib.shake method)": [[224, "hashlib.shake.hexdigest"]], "md5() (in module hashlib)": [[224, "hashlib.md5"]], "message digest, md5": [[224, "index-0"]], "name (hashlib.hash attribute)": [[224, "hashlib.hash.name"]], "new() (in module hashlib)": [[224, "hashlib.new"]], "pbkdf2_hmac() (in module hashlib)": [[224, "hashlib.pbkdf2_hmac"]], "scrypt() (in module hashlib)": [[224, "hashlib.scrypt"]], "secure hash algorithm, sha1, sha2, sha224, sha256, sha384, sha512, sha3, shake, blake2": [[224, "index-0"]], "sha1() (in module hashlib)": [[224, "hashlib.sha1"]], "sha224() (in module hashlib)": [[224, "hashlib.sha224"]], "sha256() (in module hashlib)": [[224, "hashlib.sha256"]], "sha384() (in module hashlib)": [[224, "hashlib.sha384"]], "sha3_224() (in module hashlib)": [[224, "hashlib.sha3_224"]], "sha3_256() (in module hashlib)": [[224, "hashlib.sha3_256"]], "sha3_384() (in module hashlib)": [[224, "hashlib.sha3_384"]], "sha3_512() (in module hashlib)": [[224, "hashlib.sha3_512"]], "sha512() (in module hashlib)": [[224, "hashlib.sha512"]], "shake_128() (in module hashlib)": [[224, "hashlib.shake_128"]], "shake_256() (in module hashlib)": [[224, "hashlib.shake_256"]], "update() (hashlib.hash method)": [[224, "hashlib.hash.update"]], "heapify() (in module heapq)": [[225, "heapq.heapify"]], "heappop() (in module heapq)": [[225, "heapq.heappop"]], "heappush() (in module heapq)": [[225, "heapq.heappush"]], "heappushpop() (in module heapq)": [[225, "heapq.heappushpop"]], "heapq": [[225, "module-heapq"]], "heapreplace() (in module heapq)": [[225, "heapq.heapreplace"]], "merge() (in module heapq)": [[225, "heapq.merge"]], "nlargest() (in module heapq)": [[225, "heapq.nlargest"]], "nsmallest() (in module heapq)": [[225, "heapq.nsmallest"]], "rfc 2104": [[226, "index-0"], [439, "index-17"]], "block_size (hmac.hmac attribute)": [[226, "hmac.HMAC.block_size"]], "compare_digest() (in module hmac)": [[226, "hmac.compare_digest"]], "copy() (hmac.hmac method)": [[226, "hmac.HMAC.copy"]], "digest() (hmac.hmac method)": [[226, "hmac.HMAC.digest"]], "digest() (in module hmac)": [[226, "hmac.digest"]], "digest_size (hmac.hmac attribute)": [[226, "hmac.HMAC.digest_size"]], "hexdigest() (hmac.hmac method)": [[226, "hmac.HMAC.hexdigest"]], "hmac": [[226, "module-hmac"]], "name (hmac.hmac attribute)": [[226, "hmac.HMAC.name"]], "new() (in module hmac)": [[226, "hmac.new"]], "update() (hmac.hmac method)": [[226, "hmac.HMAC.update"]], "escape() (in module html)": [[227, "html.escape"]], "html": [[227, "module-html"], [229, "index-0"], [372, "index-12"]], "unescape() (in module html)": [[227, "html.unescape"]], "codepoint2name (in module html.entities)": [[228, "html.entities.codepoint2name"]], "entitydefs (in module html.entities)": [[228, "html.entities.entitydefs"]], "html.entities": [[228, "module-html.entities"]], "html5 (in module html.entities)": [[228, "html.entities.html5"]], "name2codepoint (in module html.entities)": [[228, "html.entities.name2codepoint"]], "htmlparser (class in html.parser)": [[229, "html.parser.HTMLParser"]], "xhtml": [[229, "index-0"]], "close() (html.parser.htmlparser method)": [[229, "html.parser.HTMLParser.close"]], "feed() (html.parser.htmlparser method)": [[229, "html.parser.HTMLParser.feed"]], "get_starttag_text() (html.parser.htmlparser method)": [[229, "html.parser.HTMLParser.get_starttag_text"]], "getpos() (html.parser.htmlparser method)": [[229, "html.parser.HTMLParser.getpos"]], "handle_charref() (html.parser.htmlparser method)": [[229, "html.parser.HTMLParser.handle_charref"]], "handle_comment() (html.parser.htmlparser method)": [[229, "html.parser.HTMLParser.handle_comment"]], "handle_data() (html.parser.htmlparser method)": [[229, "html.parser.HTMLParser.handle_data"]], "handle_decl() (html.parser.htmlparser method)": [[229, "html.parser.HTMLParser.handle_decl"]], "handle_endtag() (html.parser.htmlparser method)": [[229, "html.parser.HTMLParser.handle_endtag"]], "handle_entityref() (html.parser.htmlparser method)": [[229, "html.parser.HTMLParser.handle_entityref"]], "handle_pi() (html.parser.htmlparser method)": [[229, "html.parser.HTMLParser.handle_pi"]], "handle_startendtag() (html.parser.htmlparser method)": [[229, "html.parser.HTMLParser.handle_startendtag"]], "handle_starttag() (html.parser.htmlparser method)": [[229, "html.parser.HTMLParser.handle_starttag"]], "html.parser": [[229, "module-html.parser"]], "reset() (html.parser.htmlparser method)": [[229, "html.parser.HTMLParser.reset"]], "unknown_decl() (html.parser.htmlparser method)": [[229, "html.parser.HTMLParser.unknown_decl"]], "http": [[230, "index-0"], [230, "module-http"], [231, "index-0"], [234, "index-0"], [372, "index-11"], [372, "index-12"]], "httpmethod (class in http)": [[230, "http.HTTPMethod"]], "httpstatus (class in http)": [[230, "http.HTTPStatus"]], "rfc 2295": [[230, "index-58"]], "rfc 2324": [[230, "index-41"]], "rfc 2518": [[230, "index-3"]], "rfc 2774": [[230, "index-61"]], "rfc 3229": [[230, "index-14"]], "rfc 4918": [[230, "index-12"], [230, "index-43"], [230, "index-44"], [230, "index-45"], [230, "index-59"]], "rfc 5789": [[230, "index-76"]], "rfc 5842": [[230, "index-13"], [230, "index-60"]], "rfc 6585": [[230, "index-48"], [230, "index-49"], [230, "index-50"], [230, "index-62"]], "rfc 7231": [[230, "index-1"], [230, "index-10"], [230, "index-15"], [230, "index-16"], [230, "index-17"], [230, "index-18"], [230, "index-2"], [230, "index-20"], [230, "index-21"], [230, "index-23"], [230, "index-25"], [230, "index-26"], [230, "index-27"], [230, "index-28"], [230, "index-29"], [230, "index-31"], [230, "index-32"], [230, "index-33"], [230, "index-34"], [230, "index-36"], [230, "index-37"], [230, "index-38"], [230, "index-40"], [230, "index-47"], [230, "index-5"], [230, "index-52"], [230, "index-53"], [230, "index-54"], [230, "index-55"], [230, "index-56"], [230, "index-57"], [230, "index-6"], [230, "index-63"], [230, "index-64"], [230, "index-65"], [230, "index-66"], [230, "index-67"], [230, "index-68"], [230, "index-69"], [230, "index-7"], [230, "index-70"], [230, "index-71"], [230, "index-72"], [230, "index-73"], [230, "index-74"], [230, "index-75"], [230, "index-8"], [230, "index-9"]], "rfc 7232": [[230, "index-19"], [230, "index-35"]], "rfc 7233": [[230, "index-11"], [230, "index-39"]], "rfc 7235": [[230, "index-24"], [230, "index-30"]], "rfc 7238": [[230, "index-22"]], "rfc 7540": [[230, "index-42"]], "rfc 7725": [[230, "index-51"]], "rfc 8297": [[230, "index-4"]], "rfc 8470": [[230, "index-46"]], "http (standard module)": [[230, "index-0"]], "badstatusline": [[231, "http.client.BadStatusLine"]], "cannotsendheader": [[231, "http.client.CannotSendHeader"]], "cannotsendrequest": [[231, "http.client.CannotSendRequest"]], "httpconnection (class in http.client)": [[231, "http.client.HTTPConnection"]], "httpexception": [[231, "http.client.HTTPException"]], "httpresponse (class in http.client)": [[231, "http.client.HTTPResponse"]], "httpsconnection (class in http.client)": [[231, "http.client.HTTPSConnection"]], "https_port (in module http.client)": [[231, "http.client.HTTPS_PORT"]], "http_port (in module http.client)": [[231, "http.client.HTTP_PORT"]], "improperconnectionstate": [[231, "http.client.ImproperConnectionState"]], "incompleteread": [[231, "http.client.IncompleteRead"]], "invalidurl": [[231, "http.client.InvalidURL"]], "linetoolong": [[231, "http.client.LineTooLong"]], "notconnected": [[231, "http.client.NotConnected"]], "rfc 2616#section-14.23": [[231, "index-4"]], "rfc 2616#section-5.1.2": [[231, "index-3"], [231, "index-5"]], "rfc 7230": [[231, "index-7"], [372, "index-1"]], "remotedisconnected": [[231, "http.client.RemoteDisconnected"]], "responsenotready": [[231, "http.client.ResponseNotReady"]], "unimplementedfilemode": [[231, "http.client.UnimplementedFileMode"]], "unknownprotocol": [[231, "http.client.UnknownProtocol"]], "unknowntransferencoding": [[231, "http.client.UnknownTransferEncoding"]], "blocksize (http.client.httpconnection attribute)": [[231, "http.client.HTTPConnection.blocksize"]], "close() (http.client.httpconnection method)": [[231, "http.client.HTTPConnection.close"]], "closed (http.client.httpresponse attribute)": [[231, "http.client.HTTPResponse.closed"]], "connect() (http.client.httpconnection method)": [[231, "http.client.HTTPConnection.connect"]], "debuglevel (http.client.httpresponse attribute)": [[231, "http.client.HTTPResponse.debuglevel"]], "endheaders() (http.client.httpconnection method)": [[231, "http.client.HTTPConnection.endheaders"]], "fileno() (http.client.httpresponse method)": [[231, "http.client.HTTPResponse.fileno"]], "get_proxy_response_headers() (http.client.httpconnection method)": [[231, "http.client.HTTPConnection.get_proxy_response_headers"]], "getcode() (http.client.httpresponse method)": [[231, "http.client.HTTPResponse.getcode"]], "getheader() (http.client.httpresponse method)": [[231, "http.client.HTTPResponse.getheader"]], "getheaders() (http.client.httpresponse method)": [[231, "http.client.HTTPResponse.getheaders"]], "getresponse() (http.client.httpconnection method)": [[231, "http.client.HTTPConnection.getresponse"]], "geturl() (http.client.httpresponse method)": [[231, "http.client.HTTPResponse.geturl"]], "headers (http.client.httpresponse attribute)": [[231, "http.client.HTTPResponse.headers"]], "http.client": [[231, "module-http.client"]], "http.client (standard module)": [[231, "index-0"]], "info() (http.client.httpresponse method)": [[231, "http.client.HTTPResponse.info"]], "msg (http.client.httpresponse attribute)": [[231, "http.client.HTTPResponse.msg"]], "parse_headers() (in module http.client)": [[231, "http.client.parse_headers"]], "putheader() (http.client.httpconnection method)": [[231, "http.client.HTTPConnection.putheader"]], "putrequest() (http.client.httpconnection method)": [[231, "http.client.HTTPConnection.putrequest"]], "read() (http.client.httpresponse method)": [[231, "http.client.HTTPResponse.read"]], "readinto() (http.client.httpresponse method)": [[231, "http.client.HTTPResponse.readinto"]], "reason (http.client.httpresponse attribute)": [[231, "http.client.HTTPResponse.reason"]], "request() (http.client.httpconnection method)": [[231, "http.client.HTTPConnection.request"]], "responses (in module http.client)": [[231, "http.client.responses"]], "send() (http.client.httpconnection method)": [[231, "http.client.HTTPConnection.send"]], "set_debuglevel() (http.client.httpconnection method)": [[231, "http.client.HTTPConnection.set_debuglevel"]], "set_tunnel() (http.client.httpconnection method)": [[231, "http.client.HTTPConnection.set_tunnel"]], "status (http.client.httpresponse attribute)": [[231, "http.client.HTTPResponse.status"]], "url (http.client.httpresponse attribute)": [[231, "http.client.HTTPResponse.url"]], "urllib.request": [[231, "index-1"], [372, "module-urllib.request"]], "version (http.client.httpresponse attribute)": [[231, "http.client.HTTPResponse.version"]], "cookie (class in http.cookiejar)": [[232, "http.cookiejar.Cookie"]], "cookiejar (class in http.cookiejar)": [[232, "http.cookiejar.CookieJar"]], "cookiepolicy (class in http.cookiejar)": [[232, "http.cookiejar.CookiePolicy"]], "defaultcookiepolicy (class in http.cookiejar)": [[232, "http.cookiejar.DefaultCookiePolicy"]], "domainliberal (http.cookiejar.defaultcookiepolicy attribute)": [[232, "http.cookiejar.DefaultCookiePolicy.DomainLiberal"]], "domainrfc2965match (http.cookiejar.defaultcookiepolicy attribute)": [[232, "http.cookiejar.DefaultCookiePolicy.DomainRFC2965Match"]], "domainstrict (http.cookiejar.defaultcookiepolicy attribute)": [[232, "http.cookiejar.DefaultCookiePolicy.DomainStrict"]], "domainstrictnodots (http.cookiejar.defaultcookiepolicy attribute)": [[232, "http.cookiejar.DefaultCookiePolicy.DomainStrictNoDots"]], "domainstrictnondomain (http.cookiejar.defaultcookiepolicy attribute)": [[232, "http.cookiejar.DefaultCookiePolicy.DomainStrictNonDomain"]], "filecookiejar (class in http.cookiejar)": [[232, "http.cookiejar.FileCookieJar"]], "lwpcookiejar (class in http.cookiejar)": [[232, "http.cookiejar.LWPCookieJar"]], "loaderror": [[232, "http.cookiejar.LoadError"]], "mozillacookiejar (class in http.cookiejar)": [[232, "http.cookiejar.MozillaCookieJar"]], "rfc 2109": [[232, "index-1"], [232, "index-15"], [232, "index-21"], [232, "index-23"], [232, "index-24"], [232, "index-3"], [232, "index-4"], [232, "index-6"], [233, "index-0"], [233, "index-2"], [233, "index-3"], [233, "index-4"], [233, "index-5"], [233, "index-6"], [233, "index-7"]], "rfc 2964": [[232, "index-10"]], "rfc 2965": [[232, "index-0"], [232, "index-11"], [232, "index-12"], [232, "index-13"], [232, "index-14"], [232, "index-16"], [232, "index-17"], [232, "index-18"], [232, "index-19"], [232, "index-2"], [232, "index-20"], [232, "index-22"], [232, "index-25"], [232, "index-5"], [232, "index-7"], [232, "index-8"], [232, "index-9"], [372, "index-2"], [372, "index-3"], [372, "index-5"]], "add_cookie_header() (http.cookiejar.cookiejar method)": [[232, "http.cookiejar.CookieJar.add_cookie_header"]], "allowed_domains() (http.cookiejar.defaultcookiepolicy method)": [[232, "http.cookiejar.DefaultCookiePolicy.allowed_domains"]], "blocked_domains() (http.cookiejar.defaultcookiepolicy method)": [[232, "http.cookiejar.DefaultCookiePolicy.blocked_domains"]], "clear() (http.cookiejar.cookiejar method)": [[232, "http.cookiejar.CookieJar.clear"]], "clear_session_cookies() (http.cookiejar.cookiejar method)": [[232, "http.cookiejar.CookieJar.clear_session_cookies"]], "comment (http.cookiejar.cookie attribute)": [[232, "http.cookiejar.Cookie.comment"]], "comment_url (http.cookiejar.cookie attribute)": [[232, "http.cookiejar.Cookie.comment_url"]], "delayload (http.cookiejar.filecookiejar attribute)": [[232, "http.cookiejar.FileCookieJar.delayload"]], "discard (http.cookiejar.cookie attribute)": [[232, "http.cookiejar.Cookie.discard"]], "domain_initial_dot (http.cookiejar.cookie attribute)": [[232, "http.cookiejar.Cookie.domain_initial_dot"]], "domain_return_ok() (http.cookiejar.cookiepolicy method)": [[232, "http.cookiejar.CookiePolicy.domain_return_ok"]], "domain_specified (http.cookiejar.cookie attribute)": [[232, "http.cookiejar.Cookie.domain_specified"]], "expires (http.cookiejar.cookie attribute)": [[232, "http.cookiejar.Cookie.expires"]], "extract_cookies() (http.cookiejar.cookiejar method)": [[232, "http.cookiejar.CookieJar.extract_cookies"]], "filename (http.cookiejar.filecookiejar attribute)": [[232, "http.cookiejar.FileCookieJar.filename"]], "get_nonstandard_attr() (http.cookiejar.cookie method)": [[232, "http.cookiejar.Cookie.get_nonstandard_attr"]], "has_nonstandard_attr() (http.cookiejar.cookie method)": [[232, "http.cookiejar.Cookie.has_nonstandard_attr"]], "hide_cookie2 (http.cookiejar.cookiepolicy attribute)": [[232, "http.cookiejar.CookiePolicy.hide_cookie2"]], "http.cookiejar": [[232, "module-http.cookiejar"]], "is_blocked() (http.cookiejar.defaultcookiepolicy method)": [[232, "http.cookiejar.DefaultCookiePolicy.is_blocked"]], "is_expired() (http.cookiejar.cookie method)": [[232, "http.cookiejar.Cookie.is_expired"]], "is_not_allowed() (http.cookiejar.defaultcookiepolicy method)": [[232, "http.cookiejar.DefaultCookiePolicy.is_not_allowed"]], "load() (http.cookiejar.filecookiejar method)": [[232, "http.cookiejar.FileCookieJar.load"]], "make_cookies() (http.cookiejar.cookiejar method)": [[232, "http.cookiejar.CookieJar.make_cookies"]], "name (http.cookiejar.cookie attribute)": [[232, "http.cookiejar.Cookie.name"]], "netscape (http.cookiejar.cookiepolicy attribute)": [[232, "http.cookiejar.CookiePolicy.netscape"]], "path (http.cookiejar.cookie attribute)": [[232, "http.cookiejar.Cookie.path"]], "path_return_ok() (http.cookiejar.cookiepolicy method)": [[232, "http.cookiejar.CookiePolicy.path_return_ok"]], "port (http.cookiejar.cookie attribute)": [[232, "http.cookiejar.Cookie.port"]], "port_specified (http.cookiejar.cookie attribute)": [[232, "http.cookiejar.Cookie.port_specified"]], "return_ok() (http.cookiejar.cookiepolicy method)": [[232, "http.cookiejar.CookiePolicy.return_ok"]], "revert() (http.cookiejar.filecookiejar method)": [[232, "http.cookiejar.FileCookieJar.revert"]], "rfc2109 (http.cookiejar.cookie attribute)": [[232, "http.cookiejar.Cookie.rfc2109"]], "rfc2109_as_netscape (http.cookiejar.defaultcookiepolicy attribute)": [[232, "http.cookiejar.DefaultCookiePolicy.rfc2109_as_netscape"]], "rfc2965 (http.cookiejar.cookiepolicy attribute)": [[232, "http.cookiejar.CookiePolicy.rfc2965"]], "save() (http.cookiejar.filecookiejar method)": [[232, "http.cookiejar.FileCookieJar.save"]], "secure (http.cookiejar.cookie attribute)": [[232, "http.cookiejar.Cookie.secure"]], "set_allowed_domains() (http.cookiejar.defaultcookiepolicy method)": [[232, "http.cookiejar.DefaultCookiePolicy.set_allowed_domains"]], "set_blocked_domains() (http.cookiejar.defaultcookiepolicy method)": [[232, "http.cookiejar.DefaultCookiePolicy.set_blocked_domains"]], "set_cookie() (http.cookiejar.cookiejar method)": [[232, "http.cookiejar.CookieJar.set_cookie"]], "set_cookie_if_ok() (http.cookiejar.cookiejar method)": [[232, "http.cookiejar.CookieJar.set_cookie_if_ok"]], "set_nonstandard_attr() (http.cookiejar.cookie method)": [[232, "http.cookiejar.Cookie.set_nonstandard_attr"]], "set_ok() (http.cookiejar.cookiepolicy method)": [[232, "http.cookiejar.CookiePolicy.set_ok"]], "set_policy() (http.cookiejar.cookiejar method)": [[232, "http.cookiejar.CookieJar.set_policy"]], "strict_domain (http.cookiejar.defaultcookiepolicy attribute)": [[232, "http.cookiejar.DefaultCookiePolicy.strict_domain"]], "strict_ns_domain (http.cookiejar.defaultcookiepolicy attribute)": [[232, "http.cookiejar.DefaultCookiePolicy.strict_ns_domain"]], "strict_ns_set_initial_dollar (http.cookiejar.defaultcookiepolicy attribute)": [[232, "http.cookiejar.DefaultCookiePolicy.strict_ns_set_initial_dollar"]], "strict_ns_set_path (http.cookiejar.defaultcookiepolicy attribute)": [[232, "http.cookiejar.DefaultCookiePolicy.strict_ns_set_path"]], "strict_ns_unverifiable (http.cookiejar.defaultcookiepolicy attribute)": [[232, "http.cookiejar.DefaultCookiePolicy.strict_ns_unverifiable"]], "strict_rfc2965_unverifiable (http.cookiejar.defaultcookiepolicy attribute)": [[232, "http.cookiejar.DefaultCookiePolicy.strict_rfc2965_unverifiable"]], "value (http.cookiejar.cookie attribute)": [[232, "http.cookiejar.Cookie.value"]], "version (http.cookiejar.cookie attribute)": [[232, "http.cookiejar.Cookie.version"]], "basecookie (class in http.cookies)": [[233, "http.cookies.BaseCookie"]], "cookieerror": [[233, "http.cookies.CookieError"]], "morsel (class in http.cookies)": [[233, "http.cookies.Morsel"]], "outputstring() (http.cookies.morsel method)": [[233, "http.cookies.Morsel.OutputString"]], "rfc 2068": [[233, "index-1"]], "simplecookie (class in http.cookies)": [[233, "http.cookies.SimpleCookie"]], "coded_value (http.cookies.morsel attribute)": [[233, "http.cookies.Morsel.coded_value"]], "copy() (http.cookies.morsel method)": [[233, "http.cookies.Morsel.copy"]], "http.cookies": [[233, "module-http.cookies"]], "isreservedkey() (http.cookies.morsel method)": [[233, "http.cookies.Morsel.isReservedKey"]], "js_output() (http.cookies.basecookie method)": [[233, "http.cookies.BaseCookie.js_output"]], "js_output() (http.cookies.morsel method)": [[233, "http.cookies.Morsel.js_output"]], "key (http.cookies.morsel attribute)": [[233, "http.cookies.Morsel.key"]], "load() (http.cookies.basecookie method)": [[233, "http.cookies.BaseCookie.load"]], "output() (http.cookies.basecookie method)": [[233, "http.cookies.BaseCookie.output"]], "output() (http.cookies.morsel method)": [[233, "http.cookies.Morsel.output"]], "set() (http.cookies.morsel method)": [[233, "http.cookies.Morsel.set"]], "setdefault() (http.cookies.morsel method)": [[233, "http.cookies.Morsel.setdefault"]], "update() (http.cookies.morsel method)": [[233, "http.cookies.Morsel.update"]], "value (http.cookies.morsel attribute)": [[233, "http.cookies.Morsel.value"]], "value_decode() (http.cookies.basecookie method)": [[233, "http.cookies.BaseCookie.value_decode"]], "value_encode() (http.cookies.basecookie method)": [[233, "http.cookies.BaseCookie.value_encode"]], "basehttprequesthandler (class in http.server)": [[234, "http.server.BaseHTTPRequestHandler"]], "cgihttprequesthandler (class in http.server)": [[234, "http.server.CGIHTTPRequestHandler"]], "httpserver (class in http.server)": [[234, "http.server.HTTPServer"]], "messageclass (http.server.basehttprequesthandler attribute)": [[234, "http.server.BaseHTTPRequestHandler.MessageClass"]], "rfc 3986": [[234, "index-1"], [371, "index-2"], [371, "index-4"], [371, "index-5"], [371, "index-7"], [371, "index-8"], [444, "index-10"], [444, "index-13"], [454, "index-42"], [456, "index-35"]], "simplehttprequesthandler (class in http.server)": [[234, "http.server.SimpleHTTPRequestHandler"]], "threadinghttpserver (class in http.server)": [[234, "http.server.ThreadingHTTPServer"]], "url": [[234, "index-0"], [371, "index-0"], [373, "index-0"]], "www": [[234, "index-0"], [244, "index-0"], [371, "index-0"], [373, "index-0"]], "address_string() (http.server.basehttprequesthandler method)": [[234, "http.server.BaseHTTPRequestHandler.address_string"]], "cgi_directories (http.server.cgihttprequesthandler attribute)": [[234, "http.server.CGIHTTPRequestHandler.cgi_directories"]], "client_address (http.server.basehttprequesthandler attribute)": [[234, "http.server.BaseHTTPRequestHandler.client_address"]], "close_connection (http.server.basehttprequesthandler attribute)": [[234, "http.server.BaseHTTPRequestHandler.close_connection"]], "command (http.server.basehttprequesthandler attribute)": [[234, "http.server.BaseHTTPRequestHandler.command"]], "date_time_string() (http.server.basehttprequesthandler method)": [[234, "http.server.BaseHTTPRequestHandler.date_time_string"]], "do_get() (http.server.simplehttprequesthandler method)": [[234, "http.server.SimpleHTTPRequestHandler.do_GET"]], "do_head() (http.server.simplehttprequesthandler method)": [[234, "http.server.SimpleHTTPRequestHandler.do_HEAD"]], "do_post() (http.server.cgihttprequesthandler method)": [[234, "http.server.CGIHTTPRequestHandler.do_POST"]], "end_headers() (http.server.basehttprequesthandler method)": [[234, "http.server.BaseHTTPRequestHandler.end_headers"]], "error_content_type (http.server.basehttprequesthandler attribute)": [[234, "http.server.BaseHTTPRequestHandler.error_content_type"]], "error_message_format (http.server.basehttprequesthandler attribute)": [[234, "http.server.BaseHTTPRequestHandler.error_message_format"]], "extensions_map (http.server.simplehttprequesthandler attribute)": [[234, "http.server.SimpleHTTPRequestHandler.extensions_map"]], "flush_headers() (http.server.basehttprequesthandler method)": [[234, "http.server.BaseHTTPRequestHandler.flush_headers"]], "handle() (http.server.basehttprequesthandler method)": [[234, "http.server.BaseHTTPRequestHandler.handle"]], "handle_expect_100() (http.server.basehttprequesthandler method)": [[234, "http.server.BaseHTTPRequestHandler.handle_expect_100"]], "handle_one_request() (http.server.basehttprequesthandler method)": [[234, "http.server.BaseHTTPRequestHandler.handle_one_request"]], "headers (http.server.basehttprequesthandler attribute)": [[234, "http.server.BaseHTTPRequestHandler.headers"]], "http.server": [[234, "index-3"], [234, "module-http.server"]], "httpd": [[234, "index-0"]], "log_date_time_string() (http.server.basehttprequesthandler method)": [[234, "http.server.BaseHTTPRequestHandler.log_date_time_string"]], "log_error() (http.server.basehttprequesthandler method)": [[234, "http.server.BaseHTTPRequestHandler.log_error"]], "log_message() (http.server.basehttprequesthandler method)": [[234, "http.server.BaseHTTPRequestHandler.log_message"]], "log_request() (http.server.basehttprequesthandler method)": [[234, "http.server.BaseHTTPRequestHandler.log_request"]], "path (http.server.basehttprequesthandler attribute)": [[234, "http.server.BaseHTTPRequestHandler.path"]], "protocol_version (http.server.basehttprequesthandler attribute)": [[234, "http.server.BaseHTTPRequestHandler.protocol_version"]], "request_version (http.server.basehttprequesthandler attribute)": [[234, "http.server.BaseHTTPRequestHandler.request_version"]], "requestline (http.server.basehttprequesthandler attribute)": [[234, "http.server.BaseHTTPRequestHandler.requestline"]], "responses (http.server.basehttprequesthandler attribute)": [[234, "http.server.BaseHTTPRequestHandler.responses"]], "rfile (http.server.basehttprequesthandler attribute)": [[234, "http.server.BaseHTTPRequestHandler.rfile"]], "security": [[234, "index-3"]], "send_error() (http.server.basehttprequesthandler method)": [[234, "http.server.BaseHTTPRequestHandler.send_error"]], "send_header() (http.server.basehttprequesthandler method)": [[234, "http.server.BaseHTTPRequestHandler.send_header"]], "send_response() (http.server.basehttprequesthandler method)": [[234, "http.server.BaseHTTPRequestHandler.send_response"]], "send_response_only() (http.server.basehttprequesthandler method)": [[234, "http.server.BaseHTTPRequestHandler.send_response_only"]], "server": [[234, "index-0"]], "server (http.server.basehttprequesthandler attribute)": [[234, "http.server.BaseHTTPRequestHandler.server"]], "server_version (http.server.basehttprequesthandler attribute)": [[234, "http.server.BaseHTTPRequestHandler.server_version"]], "server_version (http.server.simplehttprequesthandler attribute)": [[234, "http.server.SimpleHTTPRequestHandler.server_version"]], "sys_version (http.server.basehttprequesthandler attribute)": [[234, "http.server.BaseHTTPRequestHandler.sys_version"]], "version_string() (http.server.basehttprequesthandler method)": [[234, "http.server.BaseHTTPRequestHandler.version_string"]], "wfile (http.server.basehttprequesthandler attribute)": [[234, "http.server.BaseHTTPRequestHandler.wfile"]], "clear breakpoint": [[236, "index-4"]], "cut": [[236, "index-4"]], "idlestartup": [[236, "index-5"]], "integrated development environment": [[236, "index-0"]], "module browser": [[236, "index-1"]], "pep 434": [[236, "index-7"], [444, "index-16"]], "pythonstartup": [[236, "index-6"], [302, "index-0"], [316, "index-7"], [331, "index-18"], [413, "index-1"], [430, "envvar-PYTHONSTARTUP"], [430, "index-8"], [453, "index-40"], [453, "index-41"]], "paste": [[236, "index-4"]], "path browser": [[236, "index-1"]], "python editor": [[236, "index-0"]], "run script": [[236, "index-2"]], "set breakpoint": [[236, "index-4"]], "breakpoints": [[236, "index-4"]], "debugger": [[236, "index-3"], [280, "index-2"], [331, "index-11"], [331, "index-29"], [343, "index-1"]], "idlelib": [[236, "module-idlelib"]], "stack viewer": [[236, "index-3"]], "imap4": [[237, "index-0"]], "imap4 (class in imaplib)": [[237, "imaplib.IMAP4"]], "imap4.abort": [[237, "imaplib.IMAP4.abort"]], "imap4.error": [[237, "imaplib.IMAP4.error"]], "imap4.readonly": [[237, "imaplib.IMAP4.readonly"]], "imap4_ssl": [[237, "index-0"]], "imap4_ssl (class in imaplib)": [[237, "imaplib.IMAP4_SSL"]], "imap4_stream": [[237, "index-0"]], "imap4_stream (class in imaplib)": [[237, "imaplib.IMAP4_stream"]], "int2ap() (in module imaplib)": [[237, "imaplib.Int2AP"]], "internaldate2tuple() (in module imaplib)": [[237, "imaplib.Internaldate2tuple"]], "protocol_version (imaplib.imap4 attribute)": [[237, "imaplib.IMAP4.PROTOCOL_VERSION"]], "parseflags() (in module imaplib)": [[237, "imaplib.ParseFlags"]], "rfc 1730": [[237, "index-2"]], "rfc 2060": [[237, "index-1"], [237, "index-7"]], "rfc 2342": [[237, "index-6"], [439, "index-19"]], "rfc 3501": [[237, "index-8"]], "rfc 5161": [[237, "index-3"], [454, "index-33"]], "rfc 6855": [[237, "index-4"], [237, "index-5"], [454, "index-34"], [454, "index-35"]], "time2internaldate() (in module imaplib)": [[237, "imaplib.Time2Internaldate"]], "append() (imaplib.imap4 method)": [[237, "imaplib.IMAP4.append"]], "authenticate() (imaplib.imap4 method)": [[237, "imaplib.IMAP4.authenticate"]], "check() (imaplib.imap4 method)": [[237, "imaplib.IMAP4.check"]], "close() (imaplib.imap4 method)": [[237, "imaplib.IMAP4.close"]], "copy() (imaplib.imap4 method)": [[237, "imaplib.IMAP4.copy"]], "create() (imaplib.imap4 method)": [[237, "imaplib.IMAP4.create"]], "debug (imaplib.imap4 attribute)": [[237, "imaplib.IMAP4.debug"]], "delete() (imaplib.imap4 method)": [[237, "imaplib.IMAP4.delete"]], "deleteacl() (imaplib.imap4 method)": [[237, "imaplib.IMAP4.deleteacl"]], "enable() (imaplib.imap4 method)": [[237, "imaplib.IMAP4.enable"]], "expunge() (imaplib.imap4 method)": [[237, "imaplib.IMAP4.expunge"]], "fetch() (imaplib.imap4 method)": [[237, "imaplib.IMAP4.fetch"]], "getacl() (imaplib.imap4 method)": [[237, "imaplib.IMAP4.getacl"]], "getannotation() (imaplib.imap4 method)": [[237, "imaplib.IMAP4.getannotation"]], "getquota() (imaplib.imap4 method)": [[237, "imaplib.IMAP4.getquota"]], "getquotaroot() (imaplib.imap4 method)": [[237, "imaplib.IMAP4.getquotaroot"]], "imaplib": [[237, "module-imaplib"]], "list() (imaplib.imap4 method)": [[237, "imaplib.IMAP4.list"]], "login() (imaplib.imap4 method)": [[237, "imaplib.IMAP4.login"]], "login_cram_md5() (imaplib.imap4 method)": [[237, "imaplib.IMAP4.login_cram_md5"]], "logout() (imaplib.imap4 method)": [[237, "imaplib.IMAP4.logout"]], "lsub() (imaplib.imap4 method)": [[237, "imaplib.IMAP4.lsub"]], "myrights() (imaplib.imap4 method)": [[237, "imaplib.IMAP4.myrights"]], "namespace() (imaplib.imap4 method)": [[237, "imaplib.IMAP4.namespace"]], "noop() (imaplib.imap4 method)": [[237, "imaplib.IMAP4.noop"]], "open() (imaplib.imap4 method)": [[237, "imaplib.IMAP4.open"]], "partial() (imaplib.imap4 method)": [[237, "imaplib.IMAP4.partial"]], "proxyauth() (imaplib.imap4 method)": [[237, "imaplib.IMAP4.proxyauth"]], "read() (imaplib.imap4 method)": [[237, "imaplib.IMAP4.read"]], "readline() (imaplib.imap4 method)": [[237, "imaplib.IMAP4.readline"]], "recent() (imaplib.imap4 method)": [[237, "imaplib.IMAP4.recent"]], "rename() (imaplib.imap4 method)": [[237, "imaplib.IMAP4.rename"]], "response() (imaplib.imap4 method)": [[237, "imaplib.IMAP4.response"]], "search() (imaplib.imap4 method)": [[237, "imaplib.IMAP4.search"]], "select() (imaplib.imap4 method)": [[237, "imaplib.IMAP4.select"]], "send() (imaplib.imap4 method)": [[237, "imaplib.IMAP4.send"]], "setacl() (imaplib.imap4 method)": [[237, "imaplib.IMAP4.setacl"]], "setannotation() (imaplib.imap4 method)": [[237, "imaplib.IMAP4.setannotation"]], "setquota() (imaplib.imap4 method)": [[237, "imaplib.IMAP4.setquota"]], "shutdown() (imaplib.imap4 method)": [[237, "imaplib.IMAP4.shutdown"]], "socket() (imaplib.imap4 method)": [[237, "imaplib.IMAP4.socket"]], "sort() (imaplib.imap4 method)": [[237, "imaplib.IMAP4.sort"]], "starttls() (imaplib.imap4 method)": [[237, "imaplib.IMAP4.starttls"]], "status() (imaplib.imap4 method)": [[237, "imaplib.IMAP4.status"]], "store() (imaplib.imap4 method)": [[237, "imaplib.IMAP4.store"]], "subscribe() (imaplib.imap4 method)": [[237, "imaplib.IMAP4.subscribe"]], "thread() (imaplib.imap4 method)": [[237, "imaplib.IMAP4.thread"]], "uid() (imaplib.imap4 method)": [[237, "imaplib.IMAP4.uid"]], "unselect() (imaplib.imap4 method)": [[237, "imaplib.IMAP4.unselect"]], "unsubscribe() (imaplib.imap4 method)": [[237, "imaplib.IMAP4.unsubscribe"]], "utf8_enabled (imaplib.imap4 attribute)": [[237, "imaplib.IMAP4.utf8_enabled"]], "xatom() (imaplib.imap4 method)": [[237, "imaplib.IMAP4.xatom"]], "bytecode_suffixes (in module importlib.machinery)": [[238, "importlib.machinery.BYTECODE_SUFFIXES"]], "builtinimporter (class in importlib.machinery)": [[238, "importlib.machinery.BuiltinImporter"]], "debug_bytecode_suffixes (in module importlib.machinery)": [[238, "importlib.machinery.DEBUG_BYTECODE_SUFFIXES"]], "extension_suffixes (in module importlib.machinery)": [[238, "importlib.machinery.EXTENSION_SUFFIXES"]], "executionloader (class in importlib.abc)": [[238, "importlib.abc.ExecutionLoader"]], "extensionfileloader (class in importlib.machinery)": [[238, "importlib.machinery.ExtensionFileLoader"]], "filefinder (class in importlib.machinery)": [[238, "importlib.machinery.FileFinder"]], "fileloader (class in importlib.abc)": [[238, "importlib.abc.FileLoader"]], "frozenimporter (class in importlib.machinery)": [[238, "importlib.machinery.FrozenImporter"]], "inspectloader (class in importlib.abc)": [[238, "importlib.abc.InspectLoader"]], "lazyloader (class in importlib.util)": [[238, "importlib.util.LazyLoader"]], "loader (class in importlib.abc)": [[238, "importlib.abc.Loader"]], "magic_number (in module importlib.util)": [[238, "importlib.util.MAGIC_NUMBER"]], "metapathfinder (class in importlib.abc)": [[238, "importlib.abc.MetaPathFinder"]], "modulespec (class in importlib.machinery)": [[238, "importlib.machinery.ModuleSpec"]], "optimized_bytecode_suffixes (in module importlib.machinery)": [[238, "importlib.machinery.OPTIMIZED_BYTECODE_SUFFIXES"]], "pep 235": [[238, "index-0"]], "pep 3120": [[238, "index-10"], [410, "index-1"], [445, "index-4"]], "pep 366": [[238, "index-4"], [306, "index-7"], [407, "index-11"], [407, "index-12"], [407, "index-22"], [407, "index-24"], [452, "index-22"]], "pep 488": [[238, "index-22"], [238, "index-25"], [238, "index-7"], [293, "index-2"], [340, "index-4"], [430, "index-11"], [430, "index-13"], [430, "index-14"], [430, "index-15"], [454, "index-24"], [454, "index-25"], [454, "index-50"]], "pathentryfinder (class in importlib.abc)": [[238, "importlib.abc.PathEntryFinder"]], "pathfinder (class in importlib.machinery)": [[238, "importlib.machinery.PathFinder"]], "resourceloader (class in importlib.abc)": [[238, "importlib.abc.ResourceLoader"]], "resourcereader (class in importlib.abc)": [[238, "importlib.abc.ResourceReader"]], "source_suffixes (in module importlib.machinery)": [[238, "importlib.machinery.SOURCE_SUFFIXES"]], "sourcefileloader (class in importlib.machinery)": [[238, "importlib.machinery.SourceFileLoader"]], "sourceloader (class in importlib.abc)": [[238, "importlib.abc.SourceLoader"]], "sourcelessfileloader (class in importlib.machinery)": [[238, "importlib.machinery.SourcelessFileLoader"]], "traversable (class in importlib.abc)": [[238, "importlib.abc.Traversable"]], "traversableresources (class in importlib.abc)": [[238, "importlib.abc.TraversableResources"]], "windowsregistryfinder (class in importlib.machinery)": [[238, "importlib.machinery.WindowsRegistryFinder"]], "__import__() (in module importlib)": [[238, "importlib.__import__"]], "__truediv__() (importlib.abc.traversable method)": [[238, "importlib.abc.Traversable.__truediv__"]], "_incompatible_extension_module_restrictions() (in module importlib.util)": [[238, "importlib.util._incompatible_extension_module_restrictions"]], "all_suffixes() (in module importlib.machinery)": [[238, "importlib.machinery.all_suffixes"]], "cache_from_source() (in module importlib.util)": [[238, "importlib.util.cache_from_source"]], "cached (importlib.machinery.modulespec attribute)": [[238, "importlib.machinery.ModuleSpec.cached"]], "contents() (importlib.abc.resourcereader method)": [[238, "importlib.abc.ResourceReader.contents"]], "create_module() (importlib.abc.loader method)": [[238, "importlib.abc.Loader.create_module"]], "create_module() (importlib.machinery.extensionfileloader method)": [[238, "importlib.machinery.ExtensionFileLoader.create_module"]], "decode_source() (in module importlib.util)": [[238, "importlib.util.decode_source"]], "exec_module() (importlib.abc.inspectloader method)": [[238, "importlib.abc.InspectLoader.exec_module"]], "exec_module() (importlib.abc.loader method)": [[238, "importlib.abc.Loader.exec_module"]], "exec_module() (importlib.abc.sourceloader method)": [[238, "importlib.abc.SourceLoader.exec_module"]], "exec_module() (importlib.machinery.extensionfileloader method)": [[238, "importlib.machinery.ExtensionFileLoader.exec_module"]], "factory() (importlib.util.lazyloader class method)": [[238, "importlib.util.LazyLoader.factory"]], "files() (importlib.abc.traversableresources method)": [[238, "importlib.abc.TraversableResources.files"]], "find_spec() (importlib.abc.metapathfinder method)": [[238, "importlib.abc.MetaPathFinder.find_spec"]], "find_spec() (importlib.abc.pathentryfinder method)": [[238, "importlib.abc.PathEntryFinder.find_spec"]], "find_spec() (importlib.machinery.filefinder method)": [[238, "importlib.machinery.FileFinder.find_spec"]], "find_spec() (importlib.machinery.pathfinder class method)": [[238, "importlib.machinery.PathFinder.find_spec"]], "find_spec() (in module importlib.util)": [[238, "importlib.util.find_spec"]], "get_code() (importlib.abc.inspectloader method)": [[238, "importlib.abc.InspectLoader.get_code"]], "get_code() (importlib.abc.sourceloader method)": [[238, "importlib.abc.SourceLoader.get_code"]], "get_code() (importlib.machinery.extensionfileloader method)": [[238, "importlib.machinery.ExtensionFileLoader.get_code"]], "get_code() (importlib.machinery.sourcelessfileloader method)": [[238, "importlib.machinery.SourcelessFileLoader.get_code"]], "get_data() (importlib.abc.fileloader method)": [[238, "importlib.abc.FileLoader.get_data"]], "get_data() (importlib.abc.resourceloader method)": [[238, "importlib.abc.ResourceLoader.get_data"]], "get_filename() (importlib.abc.executionloader method)": [[238, "importlib.abc.ExecutionLoader.get_filename"]], "get_filename() (importlib.abc.fileloader method)": [[238, "importlib.abc.FileLoader.get_filename"]], "get_filename() (importlib.machinery.extensionfileloader method)": [[238, "importlib.machinery.ExtensionFileLoader.get_filename"]], "get_source() (importlib.abc.inspectloader method)": [[238, "importlib.abc.InspectLoader.get_source"]], "get_source() (importlib.abc.sourceloader method)": [[238, "importlib.abc.SourceLoader.get_source"]], "get_source() (importlib.machinery.extensionfileloader method)": [[238, "importlib.machinery.ExtensionFileLoader.get_source"]], "get_source() (importlib.machinery.sourcelessfileloader method)": [[238, "importlib.machinery.SourcelessFileLoader.get_source"]], "has_location (importlib.machinery.modulespec attribute)": [[238, "importlib.machinery.ModuleSpec.has_location"]], "import_module() (in module importlib)": [[238, "importlib.import_module"]], "importlib": [[238, "module-importlib"]], "importlib.abc": [[238, "module-importlib.abc"]], "importlib.abc.inspectloader.get_source method": [[238, "index-15"]], "importlib.machinery": [[238, "module-importlib.machinery"]], "importlib.util": [[238, "module-importlib.util"]], "invalidate_caches() (importlib.abc.metapathfinder method)": [[238, "importlib.abc.MetaPathFinder.invalidate_caches"]], "invalidate_caches() (importlib.abc.pathentryfinder method)": [[238, "importlib.abc.PathEntryFinder.invalidate_caches"]], "invalidate_caches() (importlib.machinery.filefinder method)": [[238, "importlib.machinery.FileFinder.invalidate_caches"]], "invalidate_caches() (importlib.machinery.pathfinder class method)": [[238, "importlib.machinery.PathFinder.invalidate_caches"]], "invalidate_caches() (in module importlib)": [[238, "importlib.invalidate_caches"]], "is_dir() (importlib.abc.traversable method)": [[238, "importlib.abc.Traversable.is_dir"]], "is_file() (importlib.abc.traversable method)": [[238, "importlib.abc.Traversable.is_file"]], "is_package() (importlib.abc.inspectloader method)": [[238, "importlib.abc.InspectLoader.is_package"]], "is_package() (importlib.abc.sourceloader method)": [[238, "importlib.abc.SourceLoader.is_package"]], "is_package() (importlib.machinery.extensionfileloader method)": [[238, "importlib.machinery.ExtensionFileLoader.is_package"]], "is_package() (importlib.machinery.sourcefileloader method)": [[238, "importlib.machinery.SourceFileLoader.is_package"]], "is_package() (importlib.machinery.sourcelessfileloader method)": [[238, "importlib.machinery.SourcelessFileLoader.is_package"]], "is_resource() (importlib.abc.resourcereader method)": [[238, "importlib.abc.ResourceReader.is_resource"]], "iterdir() (importlib.abc.traversable method)": [[238, "importlib.abc.Traversable.iterdir"]], "joinpath() (importlib.abc.traversable method)": [[238, "importlib.abc.Traversable.joinpath"]], "load_module() (importlib.abc.fileloader method)": [[238, "importlib.abc.FileLoader.load_module"]], "load_module() (importlib.abc.inspectloader method)": [[238, "importlib.abc.InspectLoader.load_module"]], "load_module() (importlib.abc.loader method)": [[238, "importlib.abc.Loader.load_module"]], "load_module() (importlib.abc.sourceloader method)": [[238, "importlib.abc.SourceLoader.load_module"]], "load_module() (importlib.machinery.sourcefileloader method)": [[238, "importlib.machinery.SourceFileLoader.load_module"]], "load_module() (importlib.machinery.sourcelessfileloader method)": [[238, "importlib.machinery.SourcelessFileLoader.load_module"]], "loader (importlib.machinery.modulespec attribute)": [[238, "importlib.machinery.ModuleSpec.loader"]], "loader_state (importlib.machinery.modulespec attribute)": [[238, "importlib.machinery.ModuleSpec.loader_state"]], "module_from_spec() (in module importlib.util)": [[238, "importlib.util.module_from_spec"]], "name (importlib.abc.fileloader attribute)": [[238, "importlib.abc.FileLoader.name"]], "name (importlib.abc.traversable attribute)": [[238, "importlib.abc.Traversable.name"]], "name (importlib.machinery.extensionfileloader attribute)": [[238, "importlib.machinery.ExtensionFileLoader.name"]], "name (importlib.machinery.modulespec attribute)": [[238, "importlib.machinery.ModuleSpec.name"]], "name (importlib.machinery.sourcefileloader attribute)": [[238, "importlib.machinery.SourceFileLoader.name"]], "name (importlib.machinery.sourcelessfileloader attribute)": [[238, "importlib.machinery.SourcelessFileLoader.name"]], "open() (importlib.abc.traversable method)": [[238, "importlib.abc.Traversable.open"]], "open_resource() (importlib.abc.resourcereader method)": [[238, "importlib.abc.ResourceReader.open_resource"]], "origin (importlib.machinery.modulespec attribute)": [[238, "importlib.machinery.ModuleSpec.origin"]], "parent (importlib.machinery.modulespec attribute)": [[238, "importlib.machinery.ModuleSpec.parent"]], "path (importlib.abc.fileloader attribute)": [[238, "importlib.abc.FileLoader.path"]], "path (importlib.machinery.extensionfileloader attribute)": [[238, "importlib.machinery.ExtensionFileLoader.path"]], "path (importlib.machinery.filefinder attribute)": [[238, "importlib.machinery.FileFinder.path"]], "path (importlib.machinery.sourcefileloader attribute)": [[238, "importlib.machinery.SourceFileLoader.path"]], "path (importlib.machinery.sourcelessfileloader attribute)": [[238, "importlib.machinery.SourcelessFileLoader.path"]], "path_hook() (importlib.machinery.filefinder class method)": [[238, "importlib.machinery.FileFinder.path_hook"]], "path_mtime() (importlib.abc.sourceloader method)": [[238, "importlib.abc.SourceLoader.path_mtime"]], "path_stats() (importlib.abc.sourceloader method)": [[238, "importlib.abc.SourceLoader.path_stats"]], "path_stats() (importlib.machinery.sourcefileloader method)": [[238, "importlib.machinery.SourceFileLoader.path_stats"]], "read_bytes() (importlib.abc.traversable method)": [[238, "importlib.abc.Traversable.read_bytes"]], "read_text() (importlib.abc.traversable method)": [[238, "importlib.abc.Traversable.read_text"]], "reload() (in module importlib)": [[238, "importlib.reload"]], "resolve_name() (in module importlib.util)": [[238, "importlib.util.resolve_name"]], "resource_path() (importlib.abc.resourcereader method)": [[238, "importlib.abc.ResourceReader.resource_path"]], "set_data() (importlib.abc.sourceloader method)": [[238, "importlib.abc.SourceLoader.set_data"]], "set_data() (importlib.machinery.sourcefileloader method)": [[238, "importlib.machinery.SourceFileLoader.set_data"]], "source_from_cache() (in module importlib.util)": [[238, "importlib.util.source_from_cache"]], "source_hash() (in module importlib.util)": [[238, "importlib.util.source_hash"]], "source_to_code() (importlib.abc.inspectloader static method)": [[238, "importlib.abc.InspectLoader.source_to_code"]], "spec_from_file_location() (in module importlib.util)": [[238, "importlib.util.spec_from_file_location"]], "spec_from_loader() (in module importlib.util)": [[238, "importlib.util.spec_from_loader"]], "submodule_search_locations (importlib.machinery.modulespec attribute)": [[238, "importlib.machinery.ModuleSpec.submodule_search_locations"]], "pep 566": [[239, "index-0"]], "importlib.metadata": [[239, "module-importlib.metadata"]], "anchor (in module importlib.resources)": [[240, "importlib.resources.Anchor"]], "as_file() (in module importlib.resources)": [[240, "importlib.resources.as_file"]], "files() (in module importlib.resources)": [[240, "importlib.resources.files"]], "importlib.resources": [[240, "module-importlib.resources"]], "resourcereader (class in importlib.resources.abc)": [[241, "importlib.resources.abc.ResourceReader"]], "traversable (class in importlib.resources.abc)": [[241, "importlib.resources.abc.Traversable"]], "traversableresources (class in importlib.resources.abc)": [[241, "importlib.resources.abc.TraversableResources"]], "__truediv__() (importlib.resources.abc.traversable method)": [[241, "importlib.resources.abc.Traversable.__truediv__"]], "contents() (importlib.resources.abc.resourcereader method)": [[241, "importlib.resources.abc.ResourceReader.contents"]], "files() (importlib.resources.abc.traversableresources method)": [[241, "importlib.resources.abc.TraversableResources.files"]], "importlib.resources.abc": [[241, "module-importlib.resources.abc"]], "is_dir() (importlib.resources.abc.traversable method)": [[241, "importlib.resources.abc.Traversable.is_dir"]], "is_file() (importlib.resources.abc.traversable method)": [[241, "importlib.resources.abc.Traversable.is_file"]], "is_resource() (importlib.resources.abc.resourcereader method)": [[241, "importlib.resources.abc.ResourceReader.is_resource"]], "iterdir() (importlib.resources.abc.traversable method)": [[241, "importlib.resources.abc.Traversable.iterdir"]], "joinpath() (importlib.resources.abc.traversable method)": [[241, "importlib.resources.abc.Traversable.joinpath"]], "name (importlib.resources.abc.traversable attribute)": [[241, "importlib.resources.abc.Traversable.name"]], "open() (importlib.resources.abc.traversable method)": [[241, "importlib.resources.abc.Traversable.open"]], "open_resource() (importlib.resources.abc.resourcereader method)": [[241, "importlib.resources.abc.ResourceReader.open_resource"]], "read_bytes() (importlib.resources.abc.traversable method)": [[241, "importlib.resources.abc.Traversable.read_bytes"]], "read_text() (importlib.resources.abc.traversable method)": [[241, "importlib.resources.abc.Traversable.read_text"]], "resource_path() (importlib.resources.abc.resourcereader method)": [[241, "importlib.resources.abc.ResourceReader.resource_path"]], "--details": [[243, "cmdoption-inspect-details"]], "any_contiguous (inspect.bufferflags attribute)": [[243, "inspect.BufferFlags.ANY_CONTIGUOUS"]], "boundarguments (class in inspect)": [[243, "inspect.BoundArguments"]], "bufferflags (class in inspect)": [[243, "inspect.BufferFlags"]], "contig (inspect.bufferflags attribute)": [[243, "inspect.BufferFlags.CONTIG"]], "contig_ro (inspect.bufferflags attribute)": [[243, "inspect.BufferFlags.CONTIG_RO"]], "co_async_generator (in module inspect)": [[243, "inspect.CO_ASYNC_GENERATOR"]], "co_coroutine (in module inspect)": [[243, "inspect.CO_COROUTINE"]], "co_generator (in module inspect)": [[243, "inspect.CO_GENERATOR"]], "co_iterable_coroutine (in module inspect)": [[243, "inspect.CO_ITERABLE_COROUTINE"]], "co_nested (in module inspect)": [[243, "inspect.CO_NESTED"]], "co_newlocals (in module inspect)": [[243, "inspect.CO_NEWLOCALS"]], "co_optimized (in module inspect)": [[243, "inspect.CO_OPTIMIZED"]], "co_varargs (in module inspect)": [[243, "inspect.CO_VARARGS"]], "co_varkeywords (in module inspect)": [[243, "inspect.CO_VARKEYWORDS"]], "c_contiguous (inspect.bufferflags attribute)": [[243, "inspect.BufferFlags.C_CONTIGUOUS"]], "format (inspect.bufferflags attribute)": [[243, "inspect.BufferFlags.FORMAT"]], "full (inspect.bufferflags attribute)": [[243, "inspect.BufferFlags.FULL"]], "full_ro (inspect.bufferflags attribute)": [[243, "inspect.BufferFlags.FULL_RO"]], "f_contiguous (inspect.bufferflags attribute)": [[243, "inspect.BufferFlags.F_CONTIGUOUS"]], "frameinfo (class in inspect)": [[243, "inspect.FrameInfo"]], "indirect (inspect.bufferflags attribute)": [[243, "inspect.BufferFlags.INDIRECT"]], "nd (inspect.bufferflags attribute)": [[243, "inspect.BufferFlags.ND"]], "parameter (class in inspect)": [[243, "inspect.Parameter"]], "read (inspect.bufferflags attribute)": [[243, "inspect.BufferFlags.READ"]], "records (inspect.bufferflags attribute)": [[243, "inspect.BufferFlags.RECORDS"]], "records_ro (inspect.bufferflags attribute)": [[243, "inspect.BufferFlags.RECORDS_RO"]], "simple (inspect.bufferflags attribute)": [[243, "inspect.BufferFlags.SIMPLE"]], "strided (inspect.bufferflags attribute)": [[243, "inspect.BufferFlags.STRIDED"]], "strided_ro (inspect.bufferflags attribute)": [[243, "inspect.BufferFlags.STRIDED_RO"]], "strides (inspect.bufferflags attribute)": [[243, "inspect.BufferFlags.STRIDES"]], "signature (class in inspect)": [[243, "inspect.Signature"]], "traceback (class in inspect)": [[243, "inspect.Traceback"]], "writable (inspect.bufferflags attribute)": [[243, "inspect.BufferFlags.WRITABLE"]], "write (inspect.bufferflags attribute)": [[243, "inspect.BufferFlags.WRITE"]], "annotation (inspect.parameter attribute)": [[243, "inspect.Parameter.annotation"]], "apply_defaults() (inspect.boundarguments method)": [[243, "inspect.BoundArguments.apply_defaults"]], "args (inspect.boundarguments attribute)": [[243, "inspect.BoundArguments.args"]], "arguments (inspect.boundarguments attribute)": [[243, "inspect.BoundArguments.arguments"]], "bind() (inspect.signature method)": [[243, "inspect.Signature.bind"]], "bind_partial() (inspect.signature method)": [[243, "inspect.Signature.bind_partial"]], "cleandoc() (in module inspect)": [[243, "inspect.cleandoc"]], "code_context (inspect.frameinfo attribute)": [[243, "inspect.FrameInfo.code_context"]], "code_context (inspect.traceback attribute)": [[243, "inspect.Traceback.code_context"]], "currentframe() (in module inspect)": [[243, "inspect.currentframe"]], "default (inspect.parameter attribute)": [[243, "inspect.Parameter.default"]], "description (inspect.parameter.kind attribute)": [[243, "inspect.Parameter.kind.description"]], "empty (inspect.parameter attribute)": [[243, "inspect.Parameter.empty"]], "empty (inspect.signature attribute)": [[243, "inspect.Signature.empty"]], "filename (inspect.frameinfo attribute)": [[243, "inspect.FrameInfo.filename"]], "filename (inspect.traceback attribute)": [[243, "inspect.Traceback.filename"]], "formatargvalues() (in module inspect)": [[243, "inspect.formatargvalues"]], "frame (inspect.frameinfo attribute)": [[243, "inspect.FrameInfo.frame"]], "from_callable() (inspect.signature class method)": [[243, "inspect.Signature.from_callable"]], "function (inspect.frameinfo attribute)": [[243, "inspect.FrameInfo.function"]], "function (inspect.traceback attribute)": [[243, "inspect.Traceback.function"]], "get_annotations() (in module inspect)": [[243, "inspect.get_annotations"]], "getargvalues() (in module inspect)": [[243, "inspect.getargvalues"]], "getasyncgenlocals() (in module inspect)": [[243, "inspect.getasyncgenlocals"]], "getasyncgenstate() (in module inspect)": [[243, "inspect.getasyncgenstate"]], "getattr_static() (in module inspect)": [[243, "inspect.getattr_static"]], "getcallargs() (in module inspect)": [[243, "inspect.getcallargs"]], "getclasstree() (in module inspect)": [[243, "inspect.getclasstree"]], "getclosurevars() (in module inspect)": [[243, "inspect.getclosurevars"]], "getcomments() (in module inspect)": [[243, "inspect.getcomments"]], "getcoroutinelocals() (in module inspect)": [[243, "inspect.getcoroutinelocals"]], "getcoroutinestate() (in module inspect)": [[243, "inspect.getcoroutinestate"]], "getdoc() (in module inspect)": [[243, "inspect.getdoc"]], "getfile() (in module inspect)": [[243, "inspect.getfile"]], "getframeinfo() (in module inspect)": [[243, "inspect.getframeinfo"]], "getfullargspec() (in module inspect)": [[243, "inspect.getfullargspec"]], "getgeneratorlocals() (in module inspect)": [[243, "inspect.getgeneratorlocals"]], "getgeneratorstate() (in module inspect)": [[243, "inspect.getgeneratorstate"]], "getinnerframes() (in module inspect)": [[243, "inspect.getinnerframes"]], "getmembers() (in module inspect)": [[243, "inspect.getmembers"]], "getmembers_static() (in module inspect)": [[243, "inspect.getmembers_static"]], "getmodule() (in module inspect)": [[243, "inspect.getmodule"]], "getmodulename() (in module inspect)": [[243, "inspect.getmodulename"]], "getmro() (in module inspect)": [[243, "inspect.getmro"]], "getouterframes() (in module inspect)": [[243, "inspect.getouterframes"]], "getsource() (in module inspect)": [[243, "inspect.getsource"]], "getsourcefile() (in module inspect)": [[243, "inspect.getsourcefile"]], "getsourcelines() (in module inspect)": [[243, "inspect.getsourcelines"]], "index (inspect.frameinfo attribute)": [[243, "inspect.FrameInfo.index"]], "index (inspect.traceback attribute)": [[243, "inspect.Traceback.index"]], "inspect": [[243, "module-inspect"]], "inspect command line option": [[243, "cmdoption-inspect-details"]], "isabstract() (in module inspect)": [[243, "inspect.isabstract"]], "isasyncgen() (in module inspect)": [[243, "inspect.isasyncgen"]], "isasyncgenfunction() (in module inspect)": [[243, "inspect.isasyncgenfunction"]], "isawaitable() (in module inspect)": [[243, "inspect.isawaitable"]], "isbuiltin() (in module inspect)": [[243, "inspect.isbuiltin"]], "isclass() (in module inspect)": [[243, "inspect.isclass"]], "iscode() (in module inspect)": [[243, "inspect.iscode"]], "iscoroutine() (in module inspect)": [[243, "inspect.iscoroutine"]], "iscoroutinefunction() (in module inspect)": [[243, "inspect.iscoroutinefunction"]], "isdatadescriptor() (in module inspect)": [[243, "inspect.isdatadescriptor"]], "isframe() (in module inspect)": [[243, "inspect.isframe"]], "isfunction() (in module inspect)": [[243, "inspect.isfunction"]], "isgenerator() (in module inspect)": [[243, "inspect.isgenerator"]], "isgeneratorfunction() (in module inspect)": [[243, "inspect.isgeneratorfunction"]], "isgetsetdescriptor() (in module inspect)": [[243, "inspect.isgetsetdescriptor"]], "ismemberdescriptor() (in module inspect)": [[243, "inspect.ismemberdescriptor"]], "ismethod() (in module inspect)": [[243, "inspect.ismethod"]], "ismethoddescriptor() (in module inspect)": [[243, "inspect.ismethoddescriptor"]], "ismethodwrapper() (in module inspect)": [[243, "inspect.ismethodwrapper"]], "ismodule() (in module inspect)": [[243, "inspect.ismodule"]], "isroutine() (in module inspect)": [[243, "inspect.isroutine"]], "istraceback() (in module inspect)": [[243, "inspect.istraceback"]], "kind (inspect.parameter attribute)": [[243, "inspect.Parameter.kind"]], "kwargs (inspect.boundarguments attribute)": [[243, "inspect.BoundArguments.kwargs"]], "lineno (inspect.frameinfo attribute)": [[243, "inspect.FrameInfo.lineno"]], "lineno (inspect.traceback attribute)": [[243, "inspect.Traceback.lineno"]], "markcoroutinefunction() (in module inspect)": [[243, "inspect.markcoroutinefunction"]], "name (inspect.parameter attribute)": [[243, "inspect.Parameter.name"]], "parameters (inspect.signature attribute)": [[243, "inspect.Signature.parameters"]], "positions (inspect.frameinfo attribute)": [[243, "inspect.FrameInfo.positions"]], "positions (inspect.traceback attribute)": [[243, "inspect.Traceback.positions"]], "replace() (inspect.parameter method)": [[243, "inspect.Parameter.replace"]], "replace() (inspect.signature method)": [[243, "inspect.Signature.replace"]], "return_annotation (inspect.signature attribute)": [[243, "inspect.Signature.return_annotation"]], "signature (inspect.boundarguments attribute)": [[243, "inspect.BoundArguments.signature"]], "signature() (in module inspect)": [[243, "inspect.signature"]], "stack() (in module inspect)": [[243, "inspect.stack"]], "trace() (in module inspect)": [[243, "inspect.trace"]], "unwrap() (in module inspect)": [[243, "inspect.unwrap"]], "internet": [[244, "index-0"]], "world wide web": [[244, "index-0"], [371, "index-0"], [373, "index-0"]], "socket": [[244, "index-1"], [318, "index-0"], [318, "module-socket"]], "bufferediobase (class in io)": [[246, "io.BufferedIOBase"]], "bufferedrwpair (class in io)": [[246, "io.BufferedRWPair"]], "bufferedrandom (class in io)": [[246, "io.BufferedRandom"]], "bufferedreader (class in io)": [[246, "io.BufferedReader"]], "bufferedwriter (class in io)": [[246, "io.BufferedWriter"]], "bytesio (class in io)": [[246, "io.BytesIO"]], "default_buffer_size (in module io)": [[246, "io.DEFAULT_BUFFER_SIZE"]], "fileio (class in io)": [[246, "io.FileIO"]], "iobase (class in io)": [[246, "io.IOBase"]], "incrementalnewlinedecoder (class in io)": [[246, "io.IncrementalNewlineDecoder"]], "pep 597": [[246, "index-2"], [447, "index-13"]], "pep 686": [[246, "index-1"], [277, "index-5"]], "pythonwarndefaultencoding": [[246, "index-3"], [430, "envvar-PYTHONWARNDEFAULTENCODING"], [430, "index-29"], [447, "index-18"]], "rawiobase (class in io)": [[246, "io.RawIOBase"]], "stringio (class in io)": [[246, "io.StringIO"]], "textiobase (class in io)": [[246, "io.TextIOBase"]], "textiowrapper (class in io)": [[246, "io.TextIOWrapper"]], "unsupportedoperation": [[246, "io.UnsupportedOperation"], [279, "pathlib.UnsupportedOperation"]], "__del__() (io.iobase method)": [[246, "io.IOBase.__del__"]], "buffer (io.textiobase attribute)": [[246, "io.TextIOBase.buffer"]], "close() (io.iobase method)": [[246, "io.IOBase.close"]], "closed (io.iobase attribute)": [[246, "io.IOBase.closed"]], "detach() (io.bufferediobase method)": [[246, "io.BufferedIOBase.detach"]], "detach() (io.textiobase method)": [[246, "io.TextIOBase.detach"]], "encoding (io.textiobase attribute)": [[246, "io.TextIOBase.encoding"]], "errors (io.textiobase attribute)": [[246, "io.TextIOBase.errors"]], "fileno() (io.iobase method)": [[246, "io.IOBase.fileno"]], "flush() (io.bufferedwriter method)": [[246, "io.BufferedWriter.flush"]], "flush() (io.iobase method)": [[246, "io.IOBase.flush"]], "getbuffer() (io.bytesio method)": [[246, "io.BytesIO.getbuffer"]], "getvalue() (io.bytesio method)": [[246, "io.BytesIO.getvalue"]], "getvalue() (io.stringio method)": [[246, "io.StringIO.getvalue"]], "io": [[246, "module-io"], [403, "index-54"]], "io module": [[246, "index-0"]], "io.incrementalnewlinedecoder class": [[246, "index-5"]], "io.textiowrapper class": [[246, "index-4"]], "isatty() (io.iobase method)": [[246, "io.IOBase.isatty"]], "line_buffering (io.textiowrapper attribute)": [[246, "io.TextIOWrapper.line_buffering"]], "mode (io.fileio attribute)": [[246, "io.FileIO.mode"]], "name (io.fileio attribute)": [[246, "io.FileIO.name"]], "newlines (io.textiobase attribute)": [[246, "io.TextIOBase.newlines"]], "open() (in module io)": [[246, "io.open"]], "open_code() (in module io)": [[246, "io.open_code"]], "peek() (io.bufferedreader method)": [[246, "io.BufferedReader.peek"]], "raw (io.bufferediobase attribute)": [[246, "io.BufferedIOBase.raw"]], "read() (io.bufferediobase method)": [[246, "io.BufferedIOBase.read"]], "read() (io.bufferedreader method)": [[246, "io.BufferedReader.read"]], "read() (io.rawiobase method)": [[246, "io.RawIOBase.read"]], "read() (io.textiobase method)": [[246, "io.TextIOBase.read"]], "read1() (io.bufferediobase method)": [[246, "io.BufferedIOBase.read1"]], "read1() (io.bufferedreader method)": [[246, "io.BufferedReader.read1"]], "read1() (io.bytesio method)": [[246, "io.BytesIO.read1"]], "readable() (io.iobase method)": [[246, "io.IOBase.readable"]], "readall() (io.rawiobase method)": [[246, "io.RawIOBase.readall"]], "readinto() (io.bufferediobase method)": [[246, "io.BufferedIOBase.readinto"]], "readinto() (io.rawiobase method)": [[246, "io.RawIOBase.readinto"]], "readinto1() (io.bufferediobase method)": [[246, "io.BufferedIOBase.readinto1"]], "readinto1() (io.bytesio method)": [[246, "io.BytesIO.readinto1"]], "readline() (io.iobase method)": [[246, "io.IOBase.readline"]], "readline() (io.textiobase method)": [[246, "io.TextIOBase.readline"]], "readlines() (io.iobase method)": [[246, "io.IOBase.readlines"]], "reconfigure() (io.textiowrapper method)": [[246, "io.TextIOWrapper.reconfigure"]], "seek() (io.iobase method)": [[246, "io.IOBase.seek"]], "seek() (io.textiobase method)": [[246, "io.TextIOBase.seek"]], "seek() (io.textiowrapper method)": [[246, "io.TextIOWrapper.seek"]], "seekable() (io.iobase method)": [[246, "io.IOBase.seekable"]], "tell() (io.iobase method)": [[246, "io.IOBase.tell"]], "tell() (io.textiobase method)": [[246, "io.TextIOBase.tell"]], "tell() (io.textiowrapper method)": [[246, "io.TextIOWrapper.tell"]], "text_encoding() (in module io)": [[246, "io.text_encoding"]], "truncate() (io.iobase method)": [[246, "io.IOBase.truncate"]], "writable() (io.iobase method)": [[246, "io.IOBase.writable"]], "write() (io.bufferediobase method)": [[246, "io.BufferedIOBase.write"]], "write() (io.bufferedwriter method)": [[246, "io.BufferedWriter.write"]], "write() (io.rawiobase method)": [[246, "io.RawIOBase.write"]], "write() (io.textiobase method)": [[246, "io.TextIOBase.write"]], "write_through (io.textiowrapper attribute)": [[246, "io.TextIOWrapper.write_through"]], "writelines() (io.iobase method)": [[246, "io.IOBase.writelines"]], "addressvalueerror": [[247, "ipaddress.AddressValueError"]], "ipv4address (class in ipaddress)": [[247, "ipaddress.IPv4Address"]], "ipv4interface (class in ipaddress)": [[247, "ipaddress.IPv4Interface"]], "ipv4network (class in ipaddress)": [[247, "ipaddress.IPv4Network"]], "ipv6address (class in ipaddress)": [[247, "ipaddress.IPv6Address"]], "ipv6interface (class in ipaddress)": [[247, "ipaddress.IPv6Interface"]], "ipv6network (class in ipaddress)": [[247, "ipaddress.IPv6Network"]], "netmaskvalueerror": [[247, "ipaddress.NetmaskValueError"]], "rfc 2373": [[247, "index-1"], [247, "index-3"], [247, "index-5"]], "rfc 3056": [[247, "index-12"]], "rfc 3171": [[247, "index-0"]], "rfc 3330": [[247, "index-4"]], "rfc 3879": [[247, "index-9"]], "rfc 3927": [[247, "index-6"]], "rfc 4007": [[247, "index-11"], [247, "index-8"]], "rfc 4193": [[247, "index-10"]], "rfc 4291": [[247, "index-7"]], "rfc 4380": [[247, "index-13"]], "rfc 5735": [[247, "index-2"]], "__format__() (ipaddress.ipv4address method)": [[247, "ipaddress.IPv4Address.__format__"]], "__format__() (ipaddress.ipv6address method)": [[247, "ipaddress.IPv6Address.__format__"]], "address_exclude() (ipaddress.ipv4network method)": [[247, "ipaddress.IPv4Network.address_exclude"]], "address_exclude() (ipaddress.ipv6network method)": [[247, "ipaddress.IPv6Network.address_exclude"]], "broadcast_address (ipaddress.ipv4network attribute)": [[247, "ipaddress.IPv4Network.broadcast_address"]], "broadcast_address (ipaddress.ipv6network attribute)": [[247, "ipaddress.IPv6Network.broadcast_address"]], "collapse_addresses() (in module ipaddress)": [[247, "ipaddress.collapse_addresses"]], "compare_networks() (ipaddress.ipv4network method)": [[247, "ipaddress.IPv4Network.compare_networks"]], "compare_networks() (ipaddress.ipv6network method)": [[247, "ipaddress.IPv6Network.compare_networks"]], "compressed (ipaddress.ipv4address attribute)": [[247, "ipaddress.IPv4Address.compressed"]], "compressed (ipaddress.ipv4network attribute)": [[247, "ipaddress.IPv4Network.compressed"]], "compressed (ipaddress.ipv6address attribute)": [[247, "ipaddress.IPv6Address.compressed"]], "compressed (ipaddress.ipv6network attribute)": [[247, "ipaddress.IPv6Network.compressed"]], "exploded (ipaddress.ipv4address attribute)": [[247, "ipaddress.IPv4Address.exploded"]], "exploded (ipaddress.ipv4network attribute)": [[247, "ipaddress.IPv4Network.exploded"]], "exploded (ipaddress.ipv6address attribute)": [[247, "ipaddress.IPv6Address.exploded"]], "exploded (ipaddress.ipv6network attribute)": [[247, "ipaddress.IPv6Network.exploded"]], "get_mixed_type_key() (in module ipaddress)": [[247, "ipaddress.get_mixed_type_key"]], "hostmask (ipaddress.ipv4network attribute)": [[247, "ipaddress.IPv4Network.hostmask"]], "hostmask (ipaddress.ipv6network attribute)": [[247, "ipaddress.IPv6Network.hostmask"]], "hosts() (ipaddress.ipv4network method)": [[247, "ipaddress.IPv4Network.hosts"]], "hosts() (ipaddress.ipv6network method)": [[247, "ipaddress.IPv6Network.hosts"]], "ip (ipaddress.ipv4interface attribute)": [[247, "ipaddress.IPv4Interface.ip"]], "ip (ipaddress.ipv6interface attribute)": [[247, "ipaddress.IPv6Interface.ip"]], "ip_address() (in module ipaddress)": [[247, "ipaddress.ip_address"]], "ip_interface() (in module ipaddress)": [[247, "ipaddress.ip_interface"]], "ip_network() (in module ipaddress)": [[247, "ipaddress.ip_network"]], "ipaddress": [[247, "module-ipaddress"]], "ipv4_mapped (ipaddress.ipv6address attribute)": [[247, "ipaddress.IPv6Address.ipv4_mapped"]], "is_global (ipaddress.ipv4address attribute)": [[247, "ipaddress.IPv4Address.is_global"]], "is_global (ipaddress.ipv6address attribute)": [[247, "ipaddress.IPv6Address.is_global"]], "is_link_local (ipaddress.ipv4address attribute)": [[247, "ipaddress.IPv4Address.is_link_local"]], "is_link_local (ipaddress.ipv4network attribute)": [[247, "ipaddress.IPv4Network.is_link_local"]], "is_link_local (ipaddress.ipv6address attribute)": [[247, "ipaddress.IPv6Address.is_link_local"]], "is_link_local (ipaddress.ipv6network attribute)": [[247, "ipaddress.IPv6Network.is_link_local"]], "is_loopback (ipaddress.ipv4address attribute)": [[247, "ipaddress.IPv4Address.is_loopback"]], "is_loopback (ipaddress.ipv4network attribute)": [[247, "ipaddress.IPv4Network.is_loopback"]], "is_loopback (ipaddress.ipv6address attribute)": [[247, "ipaddress.IPv6Address.is_loopback"]], "is_loopback (ipaddress.ipv6network attribute)": [[247, "ipaddress.IPv6Network.is_loopback"]], "is_multicast (ipaddress.ipv4address attribute)": [[247, "ipaddress.IPv4Address.is_multicast"]], "is_multicast (ipaddress.ipv4network attribute)": [[247, "ipaddress.IPv4Network.is_multicast"]], "is_multicast (ipaddress.ipv6address attribute)": [[247, "ipaddress.IPv6Address.is_multicast"]], "is_multicast (ipaddress.ipv6network attribute)": [[247, "ipaddress.IPv6Network.is_multicast"]], "is_private (ipaddress.ipv4address attribute)": [[247, "ipaddress.IPv4Address.is_private"]], "is_private (ipaddress.ipv4network attribute)": [[247, "ipaddress.IPv4Network.is_private"]], "is_private (ipaddress.ipv6address attribute)": [[247, "ipaddress.IPv6Address.is_private"]], "is_private (ipaddress.ipv6network attribute)": [[247, "ipaddress.IPv6Network.is_private"]], "is_reserved (ipaddress.ipv4address attribute)": [[247, "ipaddress.IPv4Address.is_reserved"]], "is_reserved (ipaddress.ipv4network attribute)": [[247, "ipaddress.IPv4Network.is_reserved"]], "is_reserved (ipaddress.ipv6address attribute)": [[247, "ipaddress.IPv6Address.is_reserved"]], "is_reserved (ipaddress.ipv6network attribute)": [[247, "ipaddress.IPv6Network.is_reserved"]], "is_site_local (ipaddress.ipv6address attribute)": [[247, "ipaddress.IPv6Address.is_site_local"]], "is_site_local (ipaddress.ipv6network attribute)": [[247, "ipaddress.IPv6Network.is_site_local"]], "is_unspecified (ipaddress.ipv4address attribute)": [[247, "ipaddress.IPv4Address.is_unspecified"]], "is_unspecified (ipaddress.ipv4network attribute)": [[247, "ipaddress.IPv4Network.is_unspecified"]], "is_unspecified (ipaddress.ipv6address attribute)": [[247, "ipaddress.IPv6Address.is_unspecified"]], "is_unspecified (ipaddress.ipv6network attribute)": [[247, "ipaddress.IPv6Network.is_unspecified"]], "max_prefixlen (ipaddress.ipv4address attribute)": [[247, "ipaddress.IPv4Address.max_prefixlen"]], "max_prefixlen (ipaddress.ipv4network attribute)": [[247, "ipaddress.IPv4Network.max_prefixlen"]], "max_prefixlen (ipaddress.ipv6address attribute)": [[247, "ipaddress.IPv6Address.max_prefixlen"]], "max_prefixlen (ipaddress.ipv6network attribute)": [[247, "ipaddress.IPv6Network.max_prefixlen"]], "netmask (ipaddress.ipv4network attribute)": [[247, "ipaddress.IPv4Network.netmask"]], "netmask (ipaddress.ipv6network attribute)": [[247, "ipaddress.IPv6Network.netmask"]], "network (ipaddress.ipv4interface attribute)": [[247, "ipaddress.IPv4Interface.network"]], "network (ipaddress.ipv6interface attribute)": [[247, "ipaddress.IPv6Interface.network"]], "network_address (ipaddress.ipv4network attribute)": [[247, "ipaddress.IPv4Network.network_address"]], "network_address (ipaddress.ipv6network attribute)": [[247, "ipaddress.IPv6Network.network_address"]], "num_addresses (ipaddress.ipv4network attribute)": [[247, "ipaddress.IPv4Network.num_addresses"]], "num_addresses (ipaddress.ipv6network attribute)": [[247, "ipaddress.IPv6Network.num_addresses"]], "overlaps() (ipaddress.ipv4network method)": [[247, "ipaddress.IPv4Network.overlaps"]], "overlaps() (ipaddress.ipv6network method)": [[247, "ipaddress.IPv6Network.overlaps"]], "packed (ipaddress.ipv4address attribute)": [[247, "ipaddress.IPv4Address.packed"]], "packed (ipaddress.ipv6address attribute)": [[247, "ipaddress.IPv6Address.packed"]], "prefixlen (ipaddress.ipv4network attribute)": [[247, "ipaddress.IPv4Network.prefixlen"]], "prefixlen (ipaddress.ipv6network attribute)": [[247, "ipaddress.IPv6Network.prefixlen"]], "reverse_pointer (ipaddress.ipv4address attribute)": [[247, "ipaddress.IPv4Address.reverse_pointer"]], "reverse_pointer (ipaddress.ipv6address attribute)": [[247, "ipaddress.IPv6Address.reverse_pointer"]], "scope_id (ipaddress.ipv6address attribute)": [[247, "ipaddress.IPv6Address.scope_id"]], "sixtofour (ipaddress.ipv6address attribute)": [[247, "ipaddress.IPv6Address.sixtofour"]], "subnet_of() (ipaddress.ipv4network method)": [[247, "ipaddress.IPv4Network.subnet_of"]], "subnet_of() (ipaddress.ipv6network method)": [[247, "ipaddress.IPv6Network.subnet_of"]], "subnets() (ipaddress.ipv4network method)": [[247, "ipaddress.IPv4Network.subnets"]], "subnets() (ipaddress.ipv6network method)": [[247, "ipaddress.IPv6Network.subnets"]], "summarize_address_range() (in module ipaddress)": [[247, "ipaddress.summarize_address_range"]], "supernet() (ipaddress.ipv4network method)": [[247, "ipaddress.IPv4Network.supernet"]], "supernet() (ipaddress.ipv6network method)": [[247, "ipaddress.IPv6Network.supernet"]], "supernet_of() (ipaddress.ipv4network method)": [[247, "ipaddress.IPv4Network.supernet_of"]], "supernet_of() (ipaddress.ipv6network method)": [[247, "ipaddress.IPv6Network.supernet_of"]], "teredo (ipaddress.ipv6address attribute)": [[247, "ipaddress.IPv6Address.teredo"]], "v4_int_to_packed() (in module ipaddress)": [[247, "ipaddress.v4_int_to_packed"]], "v6_int_to_packed() (in module ipaddress)": [[247, "ipaddress.v6_int_to_packed"]], "version (ipaddress.ipv4address attribute)": [[247, "ipaddress.IPv4Address.version"]], "version (ipaddress.ipv4network attribute)": [[247, "ipaddress.IPv4Network.version"]], "version (ipaddress.ipv6address attribute)": [[247, "ipaddress.IPv6Address.version"]], "version (ipaddress.ipv6network attribute)": [[247, "ipaddress.IPv6Network.version"]], "with_hostmask (ipaddress.ipv4interface attribute)": [[247, "ipaddress.IPv4Interface.with_hostmask"]], "with_hostmask (ipaddress.ipv4network attribute)": [[247, "ipaddress.IPv4Network.with_hostmask"]], "with_hostmask (ipaddress.ipv6interface attribute)": [[247, "ipaddress.IPv6Interface.with_hostmask"]], "with_hostmask (ipaddress.ipv6network attribute)": [[247, "ipaddress.IPv6Network.with_hostmask"]], "with_netmask (ipaddress.ipv4interface attribute)": [[247, "ipaddress.IPv4Interface.with_netmask"]], "with_netmask (ipaddress.ipv4network attribute)": [[247, "ipaddress.IPv4Network.with_netmask"]], "with_netmask (ipaddress.ipv6interface attribute)": [[247, "ipaddress.IPv6Interface.with_netmask"]], "with_netmask (ipaddress.ipv6network attribute)": [[247, "ipaddress.IPv6Network.with_netmask"]], "with_prefixlen (ipaddress.ipv4interface attribute)": [[247, "ipaddress.IPv4Interface.with_prefixlen"]], "with_prefixlen (ipaddress.ipv4network attribute)": [[247, "ipaddress.IPv4Network.with_prefixlen"]], "with_prefixlen (ipaddress.ipv6interface attribute)": [[247, "ipaddress.IPv6Interface.with_prefixlen"]], "with_prefixlen (ipaddress.ipv6network attribute)": [[247, "ipaddress.IPv6Network.with_prefixlen"]], "accumulate() (in module itertools)": [[249, "itertools.accumulate"]], "batched() (in module itertools)": [[249, "itertools.batched"]], "chain() (in module itertools)": [[249, "itertools.chain"]], "combinations() (in module itertools)": [[249, "itertools.combinations"]], "combinations_with_replacement() (in module itertools)": [[249, "itertools.combinations_with_replacement"]], "compress() (in module itertools)": [[249, "itertools.compress"]], "count() (in module itertools)": [[249, "itertools.count"]], "cycle() (in module itertools)": [[249, "itertools.cycle"]], "dropwhile() (in module itertools)": [[249, "itertools.dropwhile"]], "filterfalse() (in module itertools)": [[249, "itertools.filterfalse"]], "from_iterable() (itertools.chain class method)": [[249, "itertools.chain.from_iterable"]], "groupby() (in module itertools)": [[249, "itertools.groupby"]], "islice() (in module itertools)": [[249, "itertools.islice"]], "itertools": [[249, "module-itertools"]], "pairwise() (in module itertools)": [[249, "itertools.pairwise"]], "permutations() (in module itertools)": [[249, "itertools.permutations"]], "product() (in module itertools)": [[249, "itertools.product"]], "repeat() (in module itertools)": [[249, "itertools.repeat"]], "starmap() (in module itertools)": [[249, "itertools.starmap"]], "takewhile() (in module itertools)": [[249, "itertools.takewhile"]], "tee() (in module itertools)": [[249, "itertools.tee"]], "zip_longest() (in module itertools)": [[249, "itertools.zip_longest"]], "--compact": [[250, "cmdoption-json.tool-indent"]], "--json-lines": [[250, "cmdoption-json.tool-json-lines"]], "--no-ensure-ascii": [[250, "cmdoption-json.tool-no-ensure-ascii"]], "--no-indent": [[250, "cmdoption-json.tool-indent"]], "--sort-keys": [[250, "cmdoption-json.tool-sort-keys"]], "--tab": [[250, "cmdoption-json.tool-indent"]], "jsondecodeerror": [[250, "json.JSONDecodeError"]], "jsondecoder (class in json)": [[250, "json.JSONDecoder"]], "jsonencoder (class in json)": [[250, "json.JSONEncoder"]], "rfc 4627": [[250, "index-1"], [250, "index-3"]], "rfc 7159": [[250, "index-0"], [250, "index-2"], [250, "index-4"]], "colno (json.jsondecodeerror attribute)": [[250, "json.JSONDecodeError.colno"]], "decode() (json.jsondecoder method)": [[250, "json.JSONDecoder.decode"]], "default() (json.jsonencoder method)": [[250, "json.JSONEncoder.default"]], "doc (json.jsondecodeerror attribute)": [[250, "json.JSONDecodeError.doc"]], "dump() (in module json)": [[250, "json.dump"]], "dumps() (in module json)": [[250, "json.dumps"]], "encode() (json.jsonencoder method)": [[250, "json.JSONEncoder.encode"]], "infile": [[250, "cmdoption-json.tool-arg-infile"]], "iterencode() (json.jsonencoder method)": [[250, "json.JSONEncoder.iterencode"]], "json": [[250, "module-json"], [421, "index-1"]], "json.tool": [[250, "module-json.tool"]], "json.tool command line option": [[250, "cmdoption-json.tool-arg-infile"], [250, "cmdoption-json.tool-arg-outfile"], [250, "cmdoption-json.tool-h"], [250, "cmdoption-json.tool-indent"], [250, "cmdoption-json.tool-json-lines"], [250, "cmdoption-json.tool-no-ensure-ascii"], [250, "cmdoption-json.tool-sort-keys"]], "lineno (json.jsondecodeerror attribute)": [[250, "json.JSONDecodeError.lineno"]], "load() (in module json)": [[250, "json.load"]], "loads() (in module json)": [[250, "json.loads"]], "msg (json.jsondecodeerror attribute)": [[250, "json.JSONDecodeError.msg"]], "outfile": [[250, "cmdoption-json.tool-arg-outfile"]], "pos (json.jsondecodeerror attribute)": [[250, "json.JSONDecodeError.pos"]], "raw_decode() (json.jsondecoder method)": [[250, "json.JSONDecoder.raw_decode"]], "iskeyword() (in module keyword)": [[251, "keyword.iskeyword"]], "issoftkeyword() (in module keyword)": [[251, "keyword.issoftkeyword"]], "keyword": [[251, "module-keyword"], [402, "index-12"], [402, "index-13"], [402, "index-14"], [402, "index-16"], [402, "index-18"], [402, "index-18"], [402, "index-3"], [402, "index-4"], [402, "index-47"], [402, "index-6"], [402, "index-9"], [405, "index-23"], [405, "index-57"], [410, "index-13"], [410, "index-14"], [411, "index-25"], [411, "index-31"], [411, "index-32"], [411, "index-33"], [411, "index-34"]], "kwlist (in module keyword)": [[251, "keyword.kwlist"]], "softkwlist (in module keyword)": [[251, "keyword.softkwlist"]], "checkcache() (in module linecache)": [[253, "linecache.checkcache"]], "clearcache() (in module linecache)": [[253, "linecache.clearcache"]], "getline() (in module linecache)": [[253, "linecache.getline"]], "lazycache() (in module linecache)": [[253, "linecache.lazycache"]], "linecache": [[253, "module-linecache"]], "alt_digits (in module locale)": [[254, "locale.ALT_DIGITS"]], "char_max (in module locale)": [[254, "locale.CHAR_MAX"]], "codeset (in module locale)": [[254, "locale.CODESET"]], "crncystr (in module locale)": [[254, "locale.CRNCYSTR"]], "d_fmt (in module locale)": [[254, "locale.D_FMT"]], "d_t_fmt (in module locale)": [[254, "locale.D_T_FMT"]], "era (in module locale)": [[254, "locale.ERA"]], "era_d_fmt (in module locale)": [[254, "locale.ERA_D_FMT"]], "era_d_t_fmt (in module locale)": [[254, "locale.ERA_D_T_FMT"]], "era_t_fmt (in module locale)": [[254, "locale.ERA_T_FMT"]], "lc_all (in module locale)": [[254, "locale.LC_ALL"]], "lc_collate (in module locale)": [[254, "locale.LC_COLLATE"]], "lc_ctype (in module locale)": [[254, "locale.LC_CTYPE"]], "lc_messages (in module locale)": [[254, "locale.LC_MESSAGES"]], "lc_monetary (in module locale)": [[254, "locale.LC_MONETARY"]], "lc_numeric (in module locale)": [[254, "locale.LC_NUMERIC"]], "lc_time (in module locale)": [[254, "locale.LC_TIME"]], "noexpr (in module locale)": [[254, "locale.NOEXPR"]], "radixchar (in module locale)": [[254, "locale.RADIXCHAR"]], "rfc 1766": [[254, "index-4"], [254, "index-5"]], "thousep (in module locale)": [[254, "locale.THOUSEP"]], "t_fmt (in module locale)": [[254, "locale.T_FMT"]], "t_fmt_ampm (in module locale)": [[254, "locale.T_FMT_AMPM"]], "yesexpr (in module locale)": [[254, "locale.YESEXPR"]], "_locale": [[254, "index-0"]], "atof() (in module locale)": [[254, "locale.atof"]], "atoi() (in module locale)": [[254, "locale.atoi"]], "bindtextdomain() (in module locale)": [[254, "locale.bindtextdomain"]], "currency() (in module locale)": [[254, "locale.currency"]], "dcgettext() (in module locale)": [[254, "locale.dcgettext"]], "delocalize() (in module locale)": [[254, "locale.delocalize"]], "dgettext() (in module locale)": [[254, "locale.dgettext"]], "format_string() (in module locale)": [[254, "locale.format_string"]], "getdefaultlocale() (in module locale)": [[254, "locale.getdefaultlocale"]], "getencoding() (in module locale)": [[254, "locale.getencoding"]], "getlocale() (in module locale)": [[254, "locale.getlocale"]], "getpreferredencoding() (in module locale)": [[254, "locale.getpreferredencoding"]], "gettext() (in module locale)": [[254, "locale.gettext"]], "locale": [[254, "module-locale"]], "localeconv() (in module locale)": [[254, "locale.localeconv"]], "localize() (in module locale)": [[254, "locale.localize"]], "nl_langinfo() (in module locale)": [[254, "locale.nl_langinfo"]], "normalize() (in module locale)": [[254, "locale.normalize"]], "setlocale() (in module locale)": [[254, "locale.setlocale"]], "str() (in module locale)": [[254, "locale.str"]], "strcoll() (in module locale)": [[254, "locale.strcoll"]], "strxfrm() (in module locale)": [[254, "locale.strxfrm"]], "textdomain() (in module locale)": [[254, "locale.textdomain"]], "bufferingformatter (class in logging)": [[255, "logging.BufferingFormatter"]], "critical (in module logging)": [[255, "logging.CRITICAL"]], "debug (in module logging)": [[255, "logging.DEBUG"]], "error (in module logging)": [[255, "logging.ERROR"]], "errors": [[255, "index-0"], [404, "index-15"]], "filter (class in logging)": [[255, "logging.Filter"]], "formatter (class in logging)": [[255, "logging.Formatter"]], "handler (class in logging)": [[255, "logging.Handler"]], "info (in module logging)": [[255, "logging.INFO"]], "logrecord (class in logging)": [[255, "logging.LogRecord"]], "logger (class in logging)": [[255, "logging.Logger"]], "loggeradapter (class in logging)": [[255, "logging.LoggerAdapter"]], "notset (in module logging)": [[255, "logging.NOTSET"]], "pep 282": [[255, "index-1"], [314, "index-2"], [440, "index-11"], [440, "index-12"]], "warning (in module logging)": [[255, "logging.WARNING"]], "__init__() (logging.handler method)": [[255, "logging.Handler.__init__"]], "_log (logging.loggeradapter attribute)": [[255, "logging.LoggerAdapter._log"]], "acquire() (logging.handler method)": [[255, "logging.Handler.acquire"]], "addfilter() (logging.handler method)": [[255, "logging.Handler.addFilter"]], "addfilter() (logging.logger method)": [[255, "logging.Logger.addFilter"]], "addhandler() (logging.logger method)": [[255, "logging.Logger.addHandler"]], "addlevelname() (in module logging)": [[255, "logging.addLevelName"]], "basicconfig() (in module logging)": [[255, "logging.basicConfig"]], "capturewarnings() (in module logging)": [[255, "logging.captureWarnings"]], "close() (logging.handler method)": [[255, "logging.Handler.close"]], "createlock() (logging.handler method)": [[255, "logging.Handler.createLock"]], "critical() (in module logging)": [[255, "logging.critical"]], "critical() (logging.logger method)": [[255, "logging.Logger.critical"]], "debug() (in module logging)": [[255, "logging.debug"]], "debug() (logging.logger method)": [[255, "logging.Logger.debug"]], "disable() (in module logging)": [[255, "logging.disable"]], "emit() (logging.handler method)": [[255, "logging.Handler.emit"]], "error() (in module logging)": [[255, "logging.error"]], "error() (logging.logger method)": [[255, "logging.Logger.error"]], "exception() (in module logging)": [[255, "logging.exception"]], "exception() (logging.logger method)": [[255, "logging.Logger.exception"]], "filter() (logging.filter method)": [[255, "logging.Filter.filter"]], "filter() (logging.handler method)": [[255, "logging.Handler.filter"]], "filter() (logging.logger method)": [[255, "logging.Logger.filter"]], "findcaller() (logging.logger method)": [[255, "logging.Logger.findCaller"]], "flush() (logging.handler method)": [[255, "logging.Handler.flush"]], "format() (logging.bufferingformatter method)": [[255, "logging.BufferingFormatter.format"]], "format() (logging.formatter method)": [[255, "logging.Formatter.format"]], "format() (logging.handler method)": [[255, "logging.Handler.format"]], "formatexception() (logging.formatter method)": [[255, "logging.Formatter.formatException"]], "formatfooter() (logging.bufferingformatter method)": [[255, "logging.BufferingFormatter.formatFooter"]], "formatheader() (logging.bufferingformatter method)": [[255, "logging.BufferingFormatter.formatHeader"]], "formatstack() (logging.formatter method)": [[255, "logging.Formatter.formatStack"]], "formattime() (logging.formatter method)": [[255, "logging.Formatter.formatTime"]], "getchild() (logging.logger method)": [[255, "logging.Logger.getChild"]], "getchildren() (logging.logger method)": [[255, "logging.Logger.getChildren"]], "geteffectivelevel() (logging.logger method)": [[255, "logging.Logger.getEffectiveLevel"]], "gethandlerbyname() (in module logging)": [[255, "logging.getHandlerByName"]], "gethandlernames() (in module logging)": [[255, "logging.getHandlerNames"]], "getlevelname() (in module logging)": [[255, "logging.getLevelName"]], "getlevelnamesmapping() (in module logging)": [[255, "logging.getLevelNamesMapping"]], "getlogrecordfactory() (in module logging)": [[255, "logging.getLogRecordFactory"]], "getlogger() (in module logging)": [[255, "logging.getLogger"]], "getloggerclass() (in module logging)": [[255, "logging.getLoggerClass"]], "getmessage() (logging.logrecord method)": [[255, "logging.LogRecord.getMessage"]], "handle() (logging.handler method)": [[255, "logging.Handler.handle"]], "handle() (logging.logger method)": [[255, "logging.Logger.handle"]], "handleerror() (logging.handler method)": [[255, "logging.Handler.handleError"]], "hashandlers() (logging.logger method)": [[255, "logging.Logger.hasHandlers"]], "info() (in module logging)": [[255, "logging.info"]], "info() (logging.logger method)": [[255, "logging.Logger.info"]], "isenabledfor() (logging.logger method)": [[255, "logging.Logger.isEnabledFor"]], "lastresort (in module logging)": [[255, "logging.lastResort"]], "log() (in module logging)": [[255, "logging.log"]], "log() (logging.logger method)": [[255, "logging.Logger.log"]], "logging": [[255, "index-0"], [255, "module-logging"]], "makelogrecord() (in module logging)": [[255, "logging.makeLogRecord"]], "makerecord() (logging.logger method)": [[255, "logging.Logger.makeRecord"]], "manager (logging.loggeradapter attribute)": [[255, "logging.LoggerAdapter.manager"]], "process() (logging.loggeradapter method)": [[255, "logging.LoggerAdapter.process"]], "propagate (logging.logger attribute)": [[255, "logging.Logger.propagate"]], "release() (logging.handler method)": [[255, "logging.Handler.release"]], "removefilter() (logging.handler method)": [[255, "logging.Handler.removeFilter"]], "removefilter() (logging.logger method)": [[255, "logging.Logger.removeFilter"]], "removehandler() (logging.logger method)": [[255, "logging.Logger.removeHandler"]], "setformatter() (logging.handler method)": [[255, "logging.Handler.setFormatter"]], "setlevel() (logging.handler method)": [[255, "logging.Handler.setLevel"]], "setlevel() (logging.logger method)": [[255, "logging.Logger.setLevel"]], "setlogrecordfactory() (in module logging)": [[255, "logging.setLogRecordFactory"]], "setloggerclass() (in module logging)": [[255, "logging.setLoggerClass"]], "shutdown() (in module logging)": [[255, "logging.shutdown"]], "warning() (in module logging)": [[255, "logging.warning"]], "warning() (logging.logger method)": [[255, "logging.Logger.warning"]], "dictconfig() (in module logging.config)": [[256, "logging.config.dictConfig"]], "fileconfig() (in module logging.config)": [[256, "logging.config.fileConfig"]], "listen() (in module logging.config)": [[256, "logging.config.listen"]], "logging.config": [[256, "module-logging.config"]], "stoplistening() (in module logging.config)": [[256, "logging.config.stopListening"]], "baserotatinghandler (class in logging.handlers)": [[257, "logging.handlers.BaseRotatingHandler"]], "bufferinghandler (class in logging.handlers)": [[257, "logging.handlers.BufferingHandler"]], "datagramhandler (class in logging.handlers)": [[257, "logging.handlers.DatagramHandler"]], "filehandler (class in logging)": [[257, "logging.FileHandler"]], "httphandler (class in logging.handlers)": [[257, "logging.handlers.HTTPHandler"]], "memoryhandler (class in logging.handlers)": [[257, "logging.handlers.MemoryHandler"]], "nteventloghandler (class in logging.handlers)": [[257, "logging.handlers.NTEventLogHandler"]], "nullhandler (class in logging)": [[257, "logging.NullHandler"]], "queuehandler (class in logging.handlers)": [[257, "logging.handlers.QueueHandler"]], "queuelistener (class in logging.handlers)": [[257, "logging.handlers.QueueListener"]], "rotatingfilehandler (class in logging.handlers)": [[257, "logging.handlers.RotatingFileHandler"]], "smtphandler (class in logging.handlers)": [[257, "logging.handlers.SMTPHandler"]], "sockethandler (class in logging.handlers)": [[257, "logging.handlers.SocketHandler"]], "streamhandler (class in logging)": [[257, "logging.StreamHandler"]], "sysloghandler (class in logging.handlers)": [[257, "logging.handlers.SysLogHandler"]], "timedrotatingfilehandler (class in logging.handlers)": [[257, "logging.handlers.TimedRotatingFileHandler"]], "watchedfilehandler (class in logging.handlers)": [[257, "logging.handlers.WatchedFileHandler"]], "close() (logging.filehandler method)": [[257, "logging.FileHandler.close"]], "close() (logging.handlers.memoryhandler method)": [[257, "logging.handlers.MemoryHandler.close"]], "close() (logging.handlers.nteventloghandler method)": [[257, "logging.handlers.NTEventLogHandler.close"]], "close() (logging.handlers.sockethandler method)": [[257, "logging.handlers.SocketHandler.close"]], "close() (logging.handlers.sysloghandler method)": [[257, "logging.handlers.SysLogHandler.close"]], "createlock() (logging.nullhandler method)": [[257, "logging.NullHandler.createLock"]], "createsocket() (logging.handlers.sockethandler method)": [[257, "logging.handlers.SocketHandler.createSocket"]], "createsocket() (logging.handlers.sysloghandler method)": [[257, "logging.handlers.SysLogHandler.createSocket"]], "dequeue() (logging.handlers.queuelistener method)": [[257, "logging.handlers.QueueListener.dequeue"]], "dorollover() (logging.handlers.rotatingfilehandler method)": [[257, "logging.handlers.RotatingFileHandler.doRollover"]], "dorollover() (logging.handlers.timedrotatingfilehandler method)": [[257, "logging.handlers.TimedRotatingFileHandler.doRollover"]], "emit() (logging.filehandler method)": [[257, "logging.FileHandler.emit"]], "emit() (logging.nullhandler method)": [[257, "logging.NullHandler.emit"]], "emit() (logging.streamhandler method)": [[257, "logging.StreamHandler.emit"]], "emit() (logging.handlers.bufferinghandler method)": [[257, "logging.handlers.BufferingHandler.emit"]], "emit() (logging.handlers.datagramhandler method)": [[257, "logging.handlers.DatagramHandler.emit"]], "emit() (logging.handlers.httphandler method)": [[257, "logging.handlers.HTTPHandler.emit"]], "emit() (logging.handlers.nteventloghandler method)": [[257, "logging.handlers.NTEventLogHandler.emit"]], "emit() (logging.handlers.queuehandler method)": [[257, "logging.handlers.QueueHandler.emit"]], "emit() (logging.handlers.rotatingfilehandler method)": [[257, "logging.handlers.RotatingFileHandler.emit"]], "emit() (logging.handlers.smtphandler method)": [[257, "logging.handlers.SMTPHandler.emit"]], "emit() (logging.handlers.sockethandler method)": [[257, "logging.handlers.SocketHandler.emit"]], "emit() (logging.handlers.sysloghandler method)": [[257, "logging.handlers.SysLogHandler.emit"]], "emit() (logging.handlers.timedrotatingfilehandler method)": [[257, "logging.handlers.TimedRotatingFileHandler.emit"]], "emit() (logging.handlers.watchedfilehandler method)": [[257, "logging.handlers.WatchedFileHandler.emit"]], "encodepriority() (logging.handlers.sysloghandler method)": [[257, "logging.handlers.SysLogHandler.encodePriority"]], "enqueue() (logging.handlers.queuehandler method)": [[257, "logging.handlers.QueueHandler.enqueue"]], "enqueue_sentinel() (logging.handlers.queuelistener method)": [[257, "logging.handlers.QueueListener.enqueue_sentinel"]], "flush() (logging.streamhandler method)": [[257, "logging.StreamHandler.flush"]], "flush() (logging.handlers.bufferinghandler method)": [[257, "logging.handlers.BufferingHandler.flush"]], "flush() (logging.handlers.memoryhandler method)": [[257, "logging.handlers.MemoryHandler.flush"]], "geteventcategory() (logging.handlers.nteventloghandler method)": [[257, "logging.handlers.NTEventLogHandler.getEventCategory"]], "geteventtype() (logging.handlers.nteventloghandler method)": [[257, "logging.handlers.NTEventLogHandler.getEventType"]], "getfilestodelete() (logging.handlers.timedrotatingfilehandler method)": [[257, "logging.handlers.TimedRotatingFileHandler.getFilesToDelete"]], "getmessageid() (logging.handlers.nteventloghandler method)": [[257, "logging.handlers.NTEventLogHandler.getMessageID"]], "getsubject() (logging.handlers.smtphandler method)": [[257, "logging.handlers.SMTPHandler.getSubject"]], "handle() (logging.nullhandler method)": [[257, "logging.NullHandler.handle"]], "handle() (logging.handlers.queuelistener method)": [[257, "logging.handlers.QueueListener.handle"]], "handleerror() (logging.handlers.sockethandler method)": [[257, "logging.handlers.SocketHandler.handleError"]], "listener (logging.handlers.queuehandler attribute)": [[257, "logging.handlers.QueueHandler.listener"]], "logging.handlers": [[257, "module-logging.handlers"]], "makepickle() (logging.handlers.sockethandler method)": [[257, "logging.handlers.SocketHandler.makePickle"]], "makesocket() (logging.handlers.datagramhandler method)": [[257, "logging.handlers.DatagramHandler.makeSocket"]], "makesocket() (logging.handlers.sockethandler method)": [[257, "logging.handlers.SocketHandler.makeSocket"]], "maplogrecord() (logging.handlers.httphandler method)": [[257, "logging.handlers.HTTPHandler.mapLogRecord"]], "mappriority() (logging.handlers.sysloghandler method)": [[257, "logging.handlers.SysLogHandler.mapPriority"]], "namer (logging.handlers.baserotatinghandler attribute)": [[257, "logging.handlers.BaseRotatingHandler.namer"]], "prepare() (logging.handlers.queuehandler method)": [[257, "logging.handlers.QueueHandler.prepare"]], "prepare() (logging.handlers.queuelistener method)": [[257, "logging.handlers.QueueListener.prepare"]], "reopenifneeded() (logging.handlers.watchedfilehandler method)": [[257, "logging.handlers.WatchedFileHandler.reopenIfNeeded"]], "rotate() (logging.handlers.baserotatinghandler method)": [[257, "logging.handlers.BaseRotatingHandler.rotate"]], "rotation_filename() (logging.handlers.baserotatinghandler method)": [[257, "logging.handlers.BaseRotatingHandler.rotation_filename"]], "rotator (logging.handlers.baserotatinghandler attribute)": [[257, "logging.handlers.BaseRotatingHandler.rotator"]], "send() (logging.handlers.datagramhandler method)": [[257, "logging.handlers.DatagramHandler.send"]], "send() (logging.handlers.sockethandler method)": [[257, "logging.handlers.SocketHandler.send"]], "setstream() (logging.streamhandler method)": [[257, "logging.StreamHandler.setStream"]], "settarget() (logging.handlers.memoryhandler method)": [[257, "logging.handlers.MemoryHandler.setTarget"]], "shouldflush() (logging.handlers.bufferinghandler method)": [[257, "logging.handlers.BufferingHandler.shouldFlush"]], "shouldflush() (logging.handlers.memoryhandler method)": [[257, "logging.handlers.MemoryHandler.shouldFlush"]], "start() (logging.handlers.queuelistener method)": [[257, "logging.handlers.QueueListener.start"]], "stop() (logging.handlers.queuelistener method)": [[257, "logging.handlers.QueueListener.stop"]], "terminator (logging.streamhandler attribute)": [[257, "logging.StreamHandler.terminator"]], "lzmacompressor (class in lzma)": [[258, "lzma.LZMACompressor"]], "lzmadecompressor (class in lzma)": [[258, "lzma.LZMADecompressor"]], "lzmaerror": [[258, "lzma.LZMAError"]], "lzmafile (class in lzma)": [[258, "lzma.LZMAFile"]], "check (lzma.lzmadecompressor attribute)": [[258, "lzma.LZMADecompressor.check"]], "compress() (in module lzma)": [[258, "lzma.compress"]], "compress() (lzma.lzmacompressor method)": [[258, "lzma.LZMACompressor.compress"]], "decompress() (in module lzma)": [[258, "lzma.decompress"]], "decompress() (lzma.lzmadecompressor method)": [[258, "lzma.LZMADecompressor.decompress"]], "eof (lzma.lzmadecompressor attribute)": [[258, "lzma.LZMADecompressor.eof"]], "flush() (lzma.lzmacompressor method)": [[258, "lzma.LZMACompressor.flush"]], "is_check_supported() (in module lzma)": [[258, "lzma.is_check_supported"]], "lzma": [[258, "module-lzma"]], "needs_input (lzma.lzmadecompressor attribute)": [[258, "lzma.LZMADecompressor.needs_input"]], "open() (in module lzma)": [[258, "lzma.open"]], "peek() (lzma.lzmafile method)": [[258, "lzma.LZMAFile.peek"]], "unused_data (lzma.lzmadecompressor attribute)": [[258, "lzma.LZMADecompressor.unused_data"]], "babyl (class in mailbox)": [[259, "mailbox.Babyl"]], "babylmessage (class in mailbox)": [[259, "mailbox.BabylMessage"]], "externalclasherror": [[259, "mailbox.ExternalClashError"]], "formaterror": [[259, "mailbox.FormatError"]], "mh (class in mailbox)": [[259, "mailbox.MH"]], "mhmessage (class in mailbox)": [[259, "mailbox.MHMessage"]], "mmdf (class in mailbox)": [[259, "mailbox.MMDF"]], "mmdfmessage (class in mailbox)": [[259, "mailbox.MMDFMessage"]], "mailbox (class in mailbox)": [[259, "mailbox.Mailbox"]], "maildir (class in mailbox)": [[259, "mailbox.Maildir"]], "maildirmessage (class in mailbox)": [[259, "mailbox.MaildirMessage"]], "message (class in mailbox)": [[259, "mailbox.Message"]], "nosuchmailboxerror": [[259, "mailbox.NoSuchMailboxError"]], "notemptyerror": [[259, "mailbox.NotEmptyError"]], "__contains__() (mailbox.mailbox method)": [[259, "mailbox.Mailbox.__contains__"]], "__delitem__() (mailbox.mh method)": [[259, "mailbox.MH.__delitem__"]], "__delitem__() (mailbox.mailbox method)": [[259, "mailbox.Mailbox.__delitem__"]], "__getitem__() (mailbox.mailbox method)": [[259, "mailbox.Mailbox.__getitem__"]], "__iter__() (mailbox.mailbox method)": [[259, "mailbox.Mailbox.__iter__"]], "__len__() (mailbox.mailbox method)": [[259, "mailbox.Mailbox.__len__"]], "__setitem__() (mailbox.mailbox method)": [[259, "mailbox.Mailbox.__setitem__"]], "__setitem__() (mailbox.maildir method)": [[259, "mailbox.Maildir.__setitem__"]], "add() (mailbox.mailbox method)": [[259, "mailbox.Mailbox.add"]], "add() (mailbox.maildir method)": [[259, "mailbox.Maildir.add"]], "add_flag() (mailbox.mmdfmessage method)": [[259, "mailbox.MMDFMessage.add_flag"]], "add_flag() (mailbox.maildirmessage method)": [[259, "mailbox.MaildirMessage.add_flag"]], "add_flag() (mailbox.mboxmessage method)": [[259, "mailbox.mboxMessage.add_flag"]], "add_folder() (mailbox.mh method)": [[259, "mailbox.MH.add_folder"]], "add_folder() (mailbox.maildir method)": [[259, "mailbox.Maildir.add_folder"]], "add_label() (mailbox.babylmessage method)": [[259, "mailbox.BabylMessage.add_label"]], "add_sequence() (mailbox.mhmessage method)": [[259, "mailbox.MHMessage.add_sequence"]], "clean() (mailbox.maildir method)": [[259, "mailbox.Maildir.clean"]], "clear() (mailbox.mailbox method)": [[259, "mailbox.Mailbox.clear"]], "close() (mailbox.mh method)": [[259, "mailbox.MH.close"]], "close() (mailbox.mailbox method)": [[259, "mailbox.Mailbox.close"]], "close() (mailbox.maildir method)": [[259, "mailbox.Maildir.close"]], "discard() (mailbox.mh method)": [[259, "mailbox.MH.discard"]], "discard() (mailbox.mailbox method)": [[259, "mailbox.Mailbox.discard"]], "flush() (mailbox.mh method)": [[259, "mailbox.MH.flush"]], "flush() (mailbox.mailbox method)": [[259, "mailbox.Mailbox.flush"]], "flush() (mailbox.maildir method)": [[259, "mailbox.Maildir.flush"]], "get() (mailbox.mailbox method)": [[259, "mailbox.Mailbox.get"]], "get_bytes() (mailbox.mailbox method)": [[259, "mailbox.Mailbox.get_bytes"]], "get_date() (mailbox.maildirmessage method)": [[259, "mailbox.MaildirMessage.get_date"]], "get_file() (mailbox.babyl method)": [[259, "mailbox.Babyl.get_file"]], "get_file() (mailbox.mh method)": [[259, "mailbox.MH.get_file"]], "get_file() (mailbox.mmdf method)": [[259, "mailbox.MMDF.get_file"]], "get_file() (mailbox.mailbox method)": [[259, "mailbox.Mailbox.get_file"]], "get_file() (mailbox.maildir method)": [[259, "mailbox.Maildir.get_file"]], "get_file() (mailbox.mbox method)": [[259, "mailbox.mbox.get_file"]], "get_flags() (mailbox.mmdfmessage method)": [[259, "mailbox.MMDFMessage.get_flags"]], "get_flags() (mailbox.maildirmessage method)": [[259, "mailbox.MaildirMessage.get_flags"]], "get_flags() (mailbox.mboxmessage method)": [[259, "mailbox.mboxMessage.get_flags"]], "get_folder() (mailbox.mh method)": [[259, "mailbox.MH.get_folder"]], "get_folder() (mailbox.maildir method)": [[259, "mailbox.Maildir.get_folder"]], "get_from() (mailbox.mmdfmessage method)": [[259, "mailbox.MMDFMessage.get_from"]], "get_from() (mailbox.mboxmessage method)": [[259, "mailbox.mboxMessage.get_from"]], "get_info() (mailbox.maildirmessage method)": [[259, "mailbox.MaildirMessage.get_info"]], "get_labels() (mailbox.babyl method)": [[259, "mailbox.Babyl.get_labels"]], "get_labels() (mailbox.babylmessage method)": [[259, "mailbox.BabylMessage.get_labels"]], "get_message() (mailbox.mailbox method)": [[259, "mailbox.Mailbox.get_message"]], "get_sequences() (mailbox.mh method)": [[259, "mailbox.MH.get_sequences"]], "get_sequences() (mailbox.mhmessage method)": [[259, "mailbox.MHMessage.get_sequences"]], "get_string() (mailbox.mailbox method)": [[259, "mailbox.Mailbox.get_string"]], "get_subdir() (mailbox.maildirmessage method)": [[259, "mailbox.MaildirMessage.get_subdir"]], "get_visible() (mailbox.babylmessage method)": [[259, "mailbox.BabylMessage.get_visible"]], "items() (mailbox.mailbox method)": [[259, "mailbox.Mailbox.items"]], "iteritems() (mailbox.mailbox method)": [[259, "mailbox.Mailbox.iteritems"]], "iterkeys() (mailbox.mailbox method)": [[259, "mailbox.Mailbox.iterkeys"]], "itervalues() (mailbox.mailbox method)": [[259, "mailbox.Mailbox.itervalues"]], "keys() (mailbox.mailbox method)": [[259, "mailbox.Mailbox.keys"]], "list_folders() (mailbox.mh method)": [[259, "mailbox.MH.list_folders"]], "list_folders() (mailbox.maildir method)": [[259, "mailbox.Maildir.list_folders"]], "lock() (mailbox.babyl method)": [[259, "mailbox.Babyl.lock"]], "lock() (mailbox.mh method)": [[259, "mailbox.MH.lock"]], "lock() (mailbox.mmdf method)": [[259, "mailbox.MMDF.lock"]], "lock() (mailbox.mailbox method)": [[259, "mailbox.Mailbox.lock"]], "lock() (mailbox.maildir method)": [[259, "mailbox.Maildir.lock"]], "lock() (mailbox.mbox method)": [[259, "mailbox.mbox.lock"]], "mailbox": [[259, "module-mailbox"]], "mbox (class in mailbox)": [[259, "mailbox.mbox"]], "mboxmessage (class in mailbox)": [[259, "mailbox.mboxMessage"]], "pack() (mailbox.mh method)": [[259, "mailbox.MH.pack"]], "pop() (mailbox.mailbox method)": [[259, "mailbox.Mailbox.pop"]], "popitem() (mailbox.mailbox method)": [[259, "mailbox.Mailbox.popitem"]], "remove() (mailbox.mh method)": [[259, "mailbox.MH.remove"]], "remove() (mailbox.mailbox method)": [[259, "mailbox.Mailbox.remove"]], "remove_flag() (mailbox.mmdfmessage method)": [[259, "mailbox.MMDFMessage.remove_flag"]], "remove_flag() (mailbox.maildirmessage method)": [[259, "mailbox.MaildirMessage.remove_flag"]], "remove_flag() (mailbox.mboxmessage method)": [[259, "mailbox.mboxMessage.remove_flag"]], "remove_folder() (mailbox.mh method)": [[259, "mailbox.MH.remove_folder"]], "remove_folder() (mailbox.maildir method)": [[259, "mailbox.Maildir.remove_folder"]], "remove_label() (mailbox.babylmessage method)": [[259, "mailbox.BabylMessage.remove_label"]], "remove_sequence() (mailbox.mhmessage method)": [[259, "mailbox.MHMessage.remove_sequence"]], "set_date() (mailbox.maildirmessage method)": [[259, "mailbox.MaildirMessage.set_date"]], "set_flags() (mailbox.mmdfmessage method)": [[259, "mailbox.MMDFMessage.set_flags"]], "set_flags() (mailbox.maildirmessage method)": [[259, "mailbox.MaildirMessage.set_flags"]], "set_flags() (mailbox.mboxmessage method)": [[259, "mailbox.mboxMessage.set_flags"]], "set_from() (mailbox.mmdfmessage method)": [[259, "mailbox.MMDFMessage.set_from"]], "set_from() (mailbox.mboxmessage method)": [[259, "mailbox.mboxMessage.set_from"]], "set_info() (mailbox.maildirmessage method)": [[259, "mailbox.MaildirMessage.set_info"]], "set_labels() (mailbox.babylmessage method)": [[259, "mailbox.BabylMessage.set_labels"]], "set_sequences() (mailbox.mh method)": [[259, "mailbox.MH.set_sequences"]], "set_sequences() (mailbox.mhmessage method)": [[259, "mailbox.MHMessage.set_sequences"]], "set_subdir() (mailbox.maildirmessage method)": [[259, "mailbox.MaildirMessage.set_subdir"]], "set_visible() (mailbox.babylmessage method)": [[259, "mailbox.BabylMessage.set_visible"]], "unlock() (mailbox.babyl method)": [[259, "mailbox.Babyl.unlock"]], "unlock() (mailbox.mh method)": [[259, "mailbox.MH.unlock"]], "unlock() (mailbox.mmdf method)": [[259, "mailbox.MMDF.unlock"]], "unlock() (mailbox.mailbox method)": [[259, "mailbox.Mailbox.unlock"]], "unlock() (mailbox.maildir method)": [[259, "mailbox.Maildir.unlock"]], "unlock() (mailbox.mbox method)": [[259, "mailbox.mbox.unlock"]], "update() (mailbox.mailbox method)": [[259, "mailbox.Mailbox.update"]], "update() (mailbox.maildir method)": [[259, "mailbox.Maildir.update"]], "update_visible() (mailbox.babylmessage method)": [[259, "mailbox.BabylMessage.update_visible"]], "values() (mailbox.mailbox method)": [[259, "mailbox.Mailbox.values"]], "dump() (in module marshal)": [[261, "marshal.dump"]], "dumps() (in module marshal)": [[261, "marshal.dumps"]], "load() (in module marshal)": [[261, "marshal.load"]], "loads() (in module marshal)": [[261, "marshal.loads"]], "marshal": [[261, "module-marshal"]], "shelve": [[261, "index-0"], [312, "module-shelve"]], "version (in module marshal)": [[261, "marshal.version"]], "acos() (in module math)": [[262, "math.acos"]], "acosh() (in module math)": [[262, "math.acosh"]], "asin() (in module math)": [[262, "math.asin"]], "asinh() (in module math)": [[262, "math.asinh"]], "atan() (in module math)": [[262, "math.atan"]], "atan2() (in module math)": [[262, "math.atan2"]], "atanh() (in module math)": [[262, "math.atanh"]], "cbrt() (in module math)": [[262, "math.cbrt"]], "ceil() (in module math)": [[262, "math.ceil"], [324, "index-15"]], "comb() (in module math)": [[262, "math.comb"]], "copysign() (in module math)": [[262, "math.copysign"]], "cos() (in module math)": [[262, "math.cos"]], "cosh() (in module math)": [[262, "math.cosh"]], "degrees() (in module math)": [[262, "math.degrees"]], "dist() (in module math)": [[262, "math.dist"]], "e (in module math)": [[262, "math.e"]], "erf() (in module math)": [[262, "math.erf"]], "erfc() (in module math)": [[262, "math.erfc"]], "exp() (in module math)": [[262, "math.exp"]], "exp2() (in module math)": [[262, "math.exp2"]], "expm1() (in module math)": [[262, "math.expm1"]], "fabs() (in module math)": [[262, "math.fabs"]], "factorial() (in module math)": [[262, "math.factorial"]], "floor() (in module math)": [[262, "math.floor"], [324, "index-15"]], "fmod() (in module math)": [[262, "math.fmod"]], "frexp() (in module math)": [[262, "math.frexp"]], "fsum() (in module math)": [[262, "math.fsum"]], "gamma() (in module math)": [[262, "math.gamma"]], "gcd() (in module math)": [[262, "math.gcd"]], "hypot() (in module math)": [[262, "math.hypot"]], "inf (in module math)": [[262, "math.inf"]], "isclose() (in module math)": [[262, "math.isclose"]], "isfinite() (in module math)": [[262, "math.isfinite"]], "isinf() (in module math)": [[262, "math.isinf"]], "isnan() (in module math)": [[262, "math.isnan"]], "isqrt() (in module math)": [[262, "math.isqrt"]], "lcm() (in module math)": [[262, "math.lcm"]], "ldexp() (in module math)": [[262, "math.ldexp"]], "lgamma() (in module math)": [[262, "math.lgamma"]], "log() (in module math)": [[262, "math.log"]], "log10() (in module math)": [[262, "math.log10"]], "log1p() (in module math)": [[262, "math.log1p"]], "log2() (in module math)": [[262, "math.log2"]], "modf() (in module math)": [[262, "math.modf"]], "nan (in module math)": [[262, "math.nan"]], "nextafter() (in module math)": [[262, "math.nextafter"]], "perm() (in module math)": [[262, "math.perm"]], "pi (in module math)": [[262, "math.pi"]], "pow() (in module math)": [[262, "math.pow"]], "prod() (in module math)": [[262, "math.prod"]], "radians() (in module math)": [[262, "math.radians"]], "remainder() (in module math)": [[262, "math.remainder"]], "sin() (in module math)": [[262, "math.sin"]], "sinh() (in module math)": [[262, "math.sinh"]], "sqrt() (in module math)": [[262, "math.sqrt"]], "sumprod() (in module math)": [[262, "math.sumprod"]], "tan() (in module math)": [[262, "math.tan"]], "tanh() (in module math)": [[262, "math.tanh"]], "tau (in module math)": [[262, "math.tau"]], "trunc() (in module math)": [[262, "math.trunc"], [324, "index-15"]], "ulp() (in module math)": [[262, "math.ulp"]], "mimetypes (class in mimetypes)": [[263, "mimetypes.MimeTypes"]], "add_type() (in module mimetypes)": [[263, "mimetypes.add_type"]], "common_types (in module mimetypes)": [[263, "mimetypes.common_types"]], "content type": [[263, "index-0"]], "encodings_map (in module mimetypes)": [[263, "mimetypes.encodings_map"]], "encodings_map (mimetypes.mimetypes attribute)": [[263, "mimetypes.MimeTypes.encodings_map"]], "guess_all_extensions() (in module mimetypes)": [[263, "mimetypes.guess_all_extensions"]], "guess_all_extensions() (mimetypes.mimetypes method)": [[263, "mimetypes.MimeTypes.guess_all_extensions"]], "guess_extension() (in module mimetypes)": [[263, "mimetypes.guess_extension"]], "guess_extension() (mimetypes.mimetypes method)": [[263, "mimetypes.MimeTypes.guess_extension"]], "guess_type() (in module mimetypes)": [[263, "mimetypes.guess_type"]], "guess_type() (mimetypes.mimetypes method)": [[263, "mimetypes.MimeTypes.guess_type"]], "headers": [[263, "index-1"]], "init() (in module mimetypes)": [[263, "mimetypes.init"]], "inited (in module mimetypes)": [[263, "mimetypes.inited"]], "knownfiles (in module mimetypes)": [[263, "mimetypes.knownfiles"]], "mime.types": [[263, "index-2"]], "mimetypes": [[263, "module-mimetypes"]], "read() (mimetypes.mimetypes method)": [[263, "mimetypes.MimeTypes.read"]], "read_mime_types() (in module mimetypes)": [[263, "mimetypes.read_mime_types"]], "read_windows_registry() (mimetypes.mimetypes method)": [[263, "mimetypes.MimeTypes.read_windows_registry"]], "readfp() (mimetypes.mimetypes method)": [[263, "mimetypes.MimeTypes.readfp"]], "suffix_map (in module mimetypes)": [[263, "mimetypes.suffix_map"]], "suffix_map (mimetypes.mimetypes attribute)": [[263, "mimetypes.MimeTypes.suffix_map"]], "types_map (in module mimetypes)": [[263, "mimetypes.types_map"]], "types_map (mimetypes.mimetypes attribute)": [[263, "mimetypes.MimeTypes.types_map"]], "types_map_inv (mimetypes.mimetypes attribute)": [[263, "mimetypes.MimeTypes.types_map_inv"]], "madv_autosync (in module mmap)": [[265, "mmap.MADV_AUTOSYNC"]], "madv_core (in module mmap)": [[265, "mmap.MADV_CORE"]], "madv_dodump (in module mmap)": [[265, "mmap.MADV_DODUMP"]], "madv_dofork (in module mmap)": [[265, "mmap.MADV_DOFORK"]], "madv_dontdump (in module mmap)": [[265, "mmap.MADV_DONTDUMP"]], "madv_dontfork (in module mmap)": [[265, "mmap.MADV_DONTFORK"]], "madv_dontneed (in module mmap)": [[265, "mmap.MADV_DONTNEED"]], "madv_free (in module mmap)": [[265, "mmap.MADV_FREE"]], "madv_free_reusable (in module mmap)": [[265, "mmap.MADV_FREE_REUSABLE"]], "madv_free_reuse (in module mmap)": [[265, "mmap.MADV_FREE_REUSE"]], "madv_hugepage (in module mmap)": [[265, "mmap.MADV_HUGEPAGE"]], "madv_hwpoison (in module mmap)": [[265, "mmap.MADV_HWPOISON"]], "madv_mergeable (in module mmap)": [[265, "mmap.MADV_MERGEABLE"]], "madv_nocore (in module mmap)": [[265, "mmap.MADV_NOCORE"]], "madv_nohugepage (in module mmap)": [[265, "mmap.MADV_NOHUGEPAGE"]], "madv_normal (in module mmap)": [[265, "mmap.MADV_NORMAL"]], "madv_nosync (in module mmap)": [[265, "mmap.MADV_NOSYNC"]], "madv_protect (in module mmap)": [[265, "mmap.MADV_PROTECT"]], "madv_random (in module mmap)": [[265, "mmap.MADV_RANDOM"]], "madv_remove (in module mmap)": [[265, "mmap.MADV_REMOVE"]], "madv_sequential (in module mmap)": [[265, "mmap.MADV_SEQUENTIAL"]], "madv_soft_offline (in module mmap)": [[265, "mmap.MADV_SOFT_OFFLINE"]], "madv_unmergeable (in module mmap)": [[265, "mmap.MADV_UNMERGEABLE"]], "madv_willneed (in module mmap)": [[265, "mmap.MADV_WILLNEED"]], "map_aligned_super (in module mmap)": [[265, "mmap.MAP_ALIGNED_SUPER"]], "map_anon (in module mmap)": [[265, "mmap.MAP_ANON"]], "map_anonymous (in module mmap)": [[265, "mmap.MAP_ANONYMOUS"]], "map_conceal (in module mmap)": [[265, "mmap.MAP_CONCEAL"]], "map_denywrite (in module mmap)": [[265, "mmap.MAP_DENYWRITE"]], "map_executable (in module mmap)": [[265, "mmap.MAP_EXECUTABLE"]], "map_populate (in module mmap)": [[265, "mmap.MAP_POPULATE"]], "map_private (in module mmap)": [[265, "mmap.MAP_PRIVATE"]], "map_shared (in module mmap)": [[265, "mmap.MAP_SHARED"]], "map_stack (in module mmap)": [[265, "mmap.MAP_STACK"]], "close() (mmap.mmap method)": [[265, "mmap.mmap.close"]], "closed (mmap.mmap attribute)": [[265, "mmap.mmap.closed"]], "find() (mmap.mmap method)": [[265, "mmap.mmap.find"]], "flush() (mmap.mmap method)": [[265, "mmap.mmap.flush"]], "madvise() (mmap.mmap method)": [[265, "mmap.mmap.madvise"]], "mmap": [[265, "module-mmap"]], "mmap (class in mmap)": [[265, "mmap.mmap"]], "move() (mmap.mmap method)": [[265, "mmap.mmap.move"]], "read() (mmap.mmap method)": [[265, "mmap.mmap.read"]], "read_byte() (mmap.mmap method)": [[265, "mmap.mmap.read_byte"]], "readline() (mmap.mmap method)": [[265, "mmap.mmap.readline"]], "resize() (mmap.mmap method)": [[265, "mmap.mmap.resize"]], "rfind() (mmap.mmap method)": [[265, "mmap.mmap.rfind"]], "seek() (mmap.mmap method)": [[265, "mmap.mmap.seek"]], "size() (mmap.mmap method)": [[265, "mmap.mmap.size"]], "tell() (mmap.mmap method)": [[265, "mmap.mmap.tell"]], "write() (mmap.mmap method)": [[265, "mmap.mmap.write"]], "write_byte() (mmap.mmap method)": [[265, "mmap.mmap.write_byte"]], "addpackagepath() (in module modulefinder)": [[266, "modulefinder.AddPackagePath"]], "modulefinder (class in modulefinder)": [[266, "modulefinder.ModuleFinder"]], "replacepackage() (in module modulefinder)": [[266, "modulefinder.ReplacePackage"]], "modulefinder": [[266, "module-modulefinder"]], "modules (modulefinder.modulefinder attribute)": [[266, "modulefinder.ModuleFinder.modules"]], "report() (modulefinder.modulefinder method)": [[266, "modulefinder.ModuleFinder.report"]], "run_script() (modulefinder.modulefinder method)": [[266, "modulefinder.ModuleFinder.run_script"]], "crtdbg_mode_debug (in module msvcrt)": [[268, "msvcrt.CRTDBG_MODE_DEBUG"]], "crtdbg_mode_file (in module msvcrt)": [[268, "msvcrt.CRTDBG_MODE_FILE"]], "crtdbg_mode_wndw (in module msvcrt)": [[268, "msvcrt.CRTDBG_MODE_WNDW"]], "crtdbg_report_mode (in module msvcrt)": [[268, "msvcrt.CRTDBG_REPORT_MODE"]], "crt_assert (in module msvcrt)": [[268, "msvcrt.CRT_ASSERT"]], "crt_error (in module msvcrt)": [[268, "msvcrt.CRT_ERROR"]], "crt_warn (in module msvcrt)": [[268, "msvcrt.CRT_WARN"]], "crtsetreportfile() (in module msvcrt)": [[268, "msvcrt.CrtSetReportFile"]], "crtsetreportmode() (in module msvcrt)": [[268, "msvcrt.CrtSetReportMode"]], "lk_lock (in module msvcrt)": [[268, "msvcrt.LK_LOCK"]], "lk_nblck (in module msvcrt)": [[268, "msvcrt.LK_NBLCK"]], "lk_nbrlck (in module msvcrt)": [[268, "msvcrt.LK_NBRLCK"]], "lk_rlck (in module msvcrt)": [[268, "msvcrt.LK_RLCK"]], "lk_unlck (in module msvcrt)": [[268, "msvcrt.LK_UNLCK"]], "out_to_default (in module msvcrt)": [[268, "msvcrt.OUT_TO_DEFAULT"]], "out_to_msgbox (in module msvcrt)": [[268, "msvcrt.OUT_TO_MSGBOX"]], "out_to_stderr (in module msvcrt)": [[268, "msvcrt.OUT_TO_STDERR"]], "report_errmode (in module msvcrt)": [[268, "msvcrt.REPORT_ERRMODE"]], "get_osfhandle() (in module msvcrt)": [[268, "msvcrt.get_osfhandle"]], "getch() (in module msvcrt)": [[268, "msvcrt.getch"]], "getche() (in module msvcrt)": [[268, "msvcrt.getche"]], "getwch() (in module msvcrt)": [[268, "msvcrt.getwch"]], "getwche() (in module msvcrt)": [[268, "msvcrt.getwche"]], "heapmin() (in module msvcrt)": [[268, "msvcrt.heapmin"]], "kbhit() (in module msvcrt)": [[268, "msvcrt.kbhit"]], "locking() (in module msvcrt)": [[268, "msvcrt.locking"]], "msvcrt": [[268, "module-msvcrt"]], "open_osfhandle() (in module msvcrt)": [[268, "msvcrt.open_osfhandle"]], "putch() (in module msvcrt)": [[268, "msvcrt.putch"]], "putwch() (in module msvcrt)": [[268, "msvcrt.putwch"]], "set_error_mode() (in module msvcrt)": [[268, "msvcrt.set_error_mode"]], "setmode() (in module msvcrt)": [[268, "msvcrt.setmode"]], "ungetch() (in module msvcrt)": [[268, "msvcrt.ungetch"]], "ungetwch() (in module msvcrt)": [[268, "msvcrt.ungetwch"]], "array() (in module multiprocessing)": [[269, "multiprocessing.Array"]], "array() (in module multiprocessing.sharedctypes)": [[269, "multiprocessing.sharedctypes.Array"]], "array() (multiprocessing.managers.syncmanager method)": [[269, "multiprocessing.managers.SyncManager.Array"]], "asyncresult (class in multiprocessing.pool)": [[269, "multiprocessing.pool.AsyncResult"]], "authenticationerror": [[269, "multiprocessing.AuthenticationError"]], "barrier (class in multiprocessing)": [[269, "multiprocessing.Barrier"]], "barrier() (multiprocessing.managers.syncmanager method)": [[269, "multiprocessing.managers.SyncManager.Barrier"]], "basemanager (class in multiprocessing.managers)": [[269, "multiprocessing.managers.BaseManager"]], "baseproxy (class in multiprocessing.managers)": [[269, "multiprocessing.managers.BaseProxy"]], "boundedsemaphore (class in multiprocessing)": [[269, "multiprocessing.BoundedSemaphore"]], "boundedsemaphore() (multiprocessing.managers.syncmanager method)": [[269, "multiprocessing.managers.SyncManager.BoundedSemaphore"]], "buffertooshort": [[269, "multiprocessing.BufferTooShort"]], "client() (in module multiprocessing.connection)": [[269, "multiprocessing.connection.Client"]], "condition (class in multiprocessing)": [[269, "multiprocessing.Condition"]], "condition() (multiprocessing.managers.syncmanager method)": [[269, "multiprocessing.managers.SyncManager.Condition"]], "connection (class in multiprocessing.connection)": [[269, "multiprocessing.connection.Connection"]], "event (class in multiprocessing)": [[269, "multiprocessing.Event"]], "event() (multiprocessing.managers.syncmanager method)": [[269, "multiprocessing.managers.SyncManager.Event"]], "joinablequeue (class in multiprocessing)": [[269, "multiprocessing.JoinableQueue"]], "listener (class in multiprocessing.connection)": [[269, "multiprocessing.connection.Listener"]], "lock (class in multiprocessing)": [[269, "multiprocessing.Lock"]], "lock() (multiprocessing.managers.syncmanager method)": [[269, "multiprocessing.managers.SyncManager.Lock"]], "namespace (class in multiprocessing.managers)": [[269, "multiprocessing.managers.Namespace"]], "namespace() (multiprocessing.managers.syncmanager method)": [[269, "multiprocessing.managers.SyncManager.Namespace"]], "pipe() (in module multiprocessing)": [[269, "multiprocessing.Pipe"]], "pool (class in multiprocessing.pool)": [[269, "multiprocessing.pool.Pool"]], "process (class in multiprocessing)": [[269, "multiprocessing.Process"]], "processerror": [[269, "multiprocessing.ProcessError"]], "queue (class in multiprocessing)": [[269, "multiprocessing.Queue"]], "queue() (multiprocessing.managers.syncmanager method)": [[269, "multiprocessing.managers.SyncManager.Queue"]], "rlock (class in multiprocessing)": [[269, "multiprocessing.RLock"]], "rlock() (multiprocessing.managers.syncmanager method)": [[269, "multiprocessing.managers.SyncManager.RLock"]], "rawarray() (in module multiprocessing.sharedctypes)": [[269, "multiprocessing.sharedctypes.RawArray"]], "rawvalue() (in module multiprocessing.sharedctypes)": [[269, "multiprocessing.sharedctypes.RawValue"]], "semaphore (class in multiprocessing)": [[269, "multiprocessing.Semaphore"]], "semaphore() (multiprocessing.managers.syncmanager method)": [[269, "multiprocessing.managers.SyncManager.Semaphore"]], "simplequeue (class in multiprocessing)": [[269, "multiprocessing.SimpleQueue"]], "syncmanager (class in multiprocessing.managers)": [[269, "multiprocessing.managers.SyncManager"]], "threadpool (class in multiprocessing.pool)": [[269, "multiprocessing.pool.ThreadPool"]], "value() (in module multiprocessing)": [[269, "multiprocessing.Value"]], "value() (in module multiprocessing.sharedctypes)": [[269, "multiprocessing.sharedctypes.Value"]], "value() (multiprocessing.managers.syncmanager method)": [[269, "multiprocessing.managers.SyncManager.Value"]], "__repr__() (multiprocessing.managers.baseproxy method)": [[269, "multiprocessing.managers.BaseProxy.__repr__"]], "__str__() (multiprocessing.managers.baseproxy method)": [[269, "multiprocessing.managers.BaseProxy.__str__"]], "_callmethod() (multiprocessing.managers.baseproxy method)": [[269, "multiprocessing.managers.BaseProxy._callmethod"]], "_getvalue() (multiprocessing.managers.baseproxy method)": [[269, "multiprocessing.managers.BaseProxy._getvalue"]], "accept() (multiprocessing.connection.listener method)": [[269, "multiprocessing.connection.Listener.accept"]], "acquire() (multiprocessing.lock method)": [[269, "multiprocessing.Lock.acquire"]], "acquire() (multiprocessing.rlock method)": [[269, "multiprocessing.RLock.acquire"]], "active_children() (in module multiprocessing)": [[269, "multiprocessing.active_children"]], "address (multiprocessing.connection.listener attribute)": [[269, "multiprocessing.connection.Listener.address"]], "address (multiprocessing.managers.basemanager attribute)": [[269, "multiprocessing.managers.BaseManager.address"]], "answer_challenge() (in module multiprocessing.connection)": [[269, "multiprocessing.connection.answer_challenge"]], "apply() (multiprocessing.pool.pool method)": [[269, "multiprocessing.pool.Pool.apply"]], "apply_async() (multiprocessing.pool.pool method)": [[269, "multiprocessing.pool.Pool.apply_async"]], "authkey (multiprocessing.process attribute)": [[269, "multiprocessing.Process.authkey"]], "cancel_join_thread() (multiprocessing.queue method)": [[269, "multiprocessing.Queue.cancel_join_thread"]], "close() (multiprocessing.process method)": [[269, "multiprocessing.Process.close"]], "close() (multiprocessing.queue method)": [[269, "multiprocessing.Queue.close"]], "close() (multiprocessing.simplequeue method)": [[269, "multiprocessing.SimpleQueue.close"]], "close() (multiprocessing.connection.connection method)": [[269, "multiprocessing.connection.Connection.close"]], "close() (multiprocessing.connection.listener method)": [[269, "multiprocessing.connection.Listener.close"]], "close() (multiprocessing.pool.pool method)": [[269, "multiprocessing.pool.Pool.close"]], "connect() (multiprocessing.managers.basemanager method)": [[269, "multiprocessing.managers.BaseManager.connect"]], "copy() (in module multiprocessing.sharedctypes)": [[269, "multiprocessing.sharedctypes.copy"]], "cpu_count() (in module multiprocessing)": [[269, "multiprocessing.cpu_count"]], "current_process() (in module multiprocessing)": [[269, "multiprocessing.current_process"]], "daemon (multiprocessing.process attribute)": [[269, "multiprocessing.Process.daemon"]], "deliver_challenge() (in module multiprocessing.connection)": [[269, "multiprocessing.connection.deliver_challenge"]], "dict() (multiprocessing.managers.syncmanager method)": [[269, "multiprocessing.managers.SyncManager.dict"]], "empty() (multiprocessing.queue method)": [[269, "multiprocessing.Queue.empty"]], "empty() (multiprocessing.simplequeue method)": [[269, "multiprocessing.SimpleQueue.empty"]], "exitcode (multiprocessing.process attribute)": [[269, "multiprocessing.Process.exitcode"]], "fileno() (multiprocessing.connection.connection method)": [[269, "multiprocessing.connection.Connection.fileno"]], "freeze_support() (in module multiprocessing)": [[269, "multiprocessing.freeze_support"]], "full() (multiprocessing.queue method)": [[269, "multiprocessing.Queue.full"]], "get() (multiprocessing.queue method)": [[269, "multiprocessing.Queue.get"]], "get() (multiprocessing.simplequeue method)": [[269, "multiprocessing.SimpleQueue.get"]], "get() (multiprocessing.pool.asyncresult method)": [[269, "multiprocessing.pool.AsyncResult.get"]], "get_all_start_methods() (in module multiprocessing)": [[269, "multiprocessing.get_all_start_methods"]], "get_context() (in module multiprocessing)": [[269, "multiprocessing.get_context"]], "get_logger() (in module multiprocessing)": [[269, "multiprocessing.get_logger"]], "get_nowait() (multiprocessing.queue method)": [[269, "multiprocessing.Queue.get_nowait"]], "get_server() (multiprocessing.managers.basemanager method)": [[269, "multiprocessing.managers.BaseManager.get_server"]], "get_start_method() (in module multiprocessing)": [[269, "multiprocessing.get_start_method"]], "imap() (multiprocessing.pool.pool method)": [[269, "multiprocessing.pool.Pool.imap"]], "imap_unordered() (multiprocessing.pool.pool method)": [[269, "multiprocessing.pool.Pool.imap_unordered"]], "is_alive() (multiprocessing.process method)": [[269, "multiprocessing.Process.is_alive"]], "join() (multiprocessing.joinablequeue method)": [[269, "multiprocessing.JoinableQueue.join"]], "join() (multiprocessing.process method)": [[269, "multiprocessing.Process.join"]], "join() (multiprocessing.pool.pool method)": [[269, "multiprocessing.pool.Pool.join"]], "join_thread() (multiprocessing.queue method)": [[269, "multiprocessing.Queue.join_thread"]], "kill() (multiprocessing.process method)": [[269, "multiprocessing.Process.kill"]], "last_accepted (multiprocessing.connection.listener attribute)": [[269, "multiprocessing.connection.Listener.last_accepted"]], "list() (multiprocessing.managers.syncmanager method)": [[269, "multiprocessing.managers.SyncManager.list"]], "log_to_stderr() (in module multiprocessing)": [[269, "multiprocessing.log_to_stderr"]], "map() (multiprocessing.pool.pool method)": [[269, "multiprocessing.pool.Pool.map"]], "map_async() (multiprocessing.pool.pool method)": [[269, "multiprocessing.pool.Pool.map_async"]], "multiprocessing": [[269, "module-multiprocessing"]], "multiprocessing.manager()": [[269, "multiprocessing.Manager"]], "multiprocessing.connection": [[269, "module-multiprocessing.connection"]], "multiprocessing.dummy": [[269, "module-multiprocessing.dummy"]], "multiprocessing.managers": [[269, "module-multiprocessing.managers"]], "multiprocessing.pool": [[269, "module-multiprocessing.pool"]], "multiprocessing.sharedctypes": [[269, "module-multiprocessing.sharedctypes"]], "name (multiprocessing.process attribute)": [[269, "multiprocessing.Process.name"]], "parent_process() (in module multiprocessing)": [[269, "multiprocessing.parent_process"]], "pid (multiprocessing.process attribute)": [[269, "multiprocessing.Process.pid"]], "poll() (multiprocessing.connection.connection method)": [[269, "multiprocessing.connection.Connection.poll"]], "put() (multiprocessing.queue method)": [[269, "multiprocessing.Queue.put"]], "put() (multiprocessing.simplequeue method)": [[269, "multiprocessing.SimpleQueue.put"]], "put_nowait() (multiprocessing.queue method)": [[269, "multiprocessing.Queue.put_nowait"]], "qsize() (multiprocessing.queue method)": [[269, "multiprocessing.Queue.qsize"]], "ready() (multiprocessing.pool.asyncresult method)": [[269, "multiprocessing.pool.AsyncResult.ready"]], "recv() (multiprocessing.connection.connection method)": [[269, "multiprocessing.connection.Connection.recv"]], "recv_bytes() (multiprocessing.connection.connection method)": [[269, "multiprocessing.connection.Connection.recv_bytes"]], "recv_bytes_into() (multiprocessing.connection.connection method)": [[269, "multiprocessing.connection.Connection.recv_bytes_into"]], "register() (multiprocessing.managers.basemanager method)": [[269, "multiprocessing.managers.BaseManager.register"]], "release() (multiprocessing.lock method)": [[269, "multiprocessing.Lock.release"]], "release() (multiprocessing.rlock method)": [[269, "multiprocessing.RLock.release"]], "run() (multiprocessing.process method)": [[269, "multiprocessing.Process.run"]], "send() (multiprocessing.connection.connection method)": [[269, "multiprocessing.connection.Connection.send"]], "send_bytes() (multiprocessing.connection.connection method)": [[269, "multiprocessing.connection.Connection.send_bytes"]], "sentinel (multiprocessing.process attribute)": [[269, "multiprocessing.Process.sentinel"]], "set_executable() (in module multiprocessing)": [[269, "multiprocessing.set_executable"]], "set_forkserver_preload() (in module multiprocessing)": [[269, "multiprocessing.set_forkserver_preload"]], "set_start_method() (in module multiprocessing)": [[269, "multiprocessing.set_start_method"]], "shutdown() (multiprocessing.managers.basemanager method)": [[269, "multiprocessing.managers.BaseManager.shutdown"]], "starmap() (multiprocessing.pool.pool method)": [[269, "multiprocessing.pool.Pool.starmap"]], "starmap_async() (multiprocessing.pool.pool method)": [[269, "multiprocessing.pool.Pool.starmap_async"]], "start() (multiprocessing.process method)": [[269, "multiprocessing.Process.start"]], "start() (multiprocessing.managers.basemanager method)": [[269, "multiprocessing.managers.BaseManager.start"]], "successful() (multiprocessing.pool.asyncresult method)": [[269, "multiprocessing.pool.AsyncResult.successful"]], "synchronized() (in module multiprocessing.sharedctypes)": [[269, "multiprocessing.sharedctypes.synchronized"]], "task_done() (multiprocessing.joinablequeue method)": [[269, "multiprocessing.JoinableQueue.task_done"]], "terminate() (multiprocessing.process method)": [[269, "multiprocessing.Process.terminate"]], "terminate() (multiprocessing.pool.pool method)": [[269, "multiprocessing.pool.Pool.terminate"]], "wait() (in module multiprocessing.connection)": [[269, "multiprocessing.connection.wait"]], "wait() (multiprocessing.pool.asyncresult method)": [[269, "multiprocessing.pool.AsyncResult.wait"]], "named shared memory": [[270, "index-0"]], "posix shared memory": [[270, "index-0"]], "shareablelist (class in multiprocessing.shared_memory)": [[270, "multiprocessing.shared_memory.ShareableList"]], "shareablelist() (multiprocessing.managers.sharedmemorymanager method)": [[270, "multiprocessing.managers.SharedMemoryManager.ShareableList"]], "shared memory": [[270, "index-0"]], "sharedmemory (class in multiprocessing.shared_memory)": [[270, "multiprocessing.shared_memory.SharedMemory"]], "sharedmemory() (multiprocessing.managers.sharedmemorymanager method)": [[270, "multiprocessing.managers.SharedMemoryManager.SharedMemory"]], "sharedmemorymanager (class in multiprocessing.managers)": [[270, "multiprocessing.managers.SharedMemoryManager"]], "buf (multiprocessing.shared_memory.sharedmemory attribute)": [[270, "multiprocessing.shared_memory.SharedMemory.buf"]], "close() (multiprocessing.shared_memory.sharedmemory method)": [[270, "multiprocessing.shared_memory.SharedMemory.close"]], "count() (multiprocessing.shared_memory.shareablelist method)": [[270, "multiprocessing.shared_memory.ShareableList.count"]], "format (multiprocessing.shared_memory.shareablelist attribute)": [[270, "multiprocessing.shared_memory.ShareableList.format"]], "index() (multiprocessing.shared_memory.shareablelist method)": [[270, "multiprocessing.shared_memory.ShareableList.index"]], "multiprocessing.shared_memory": [[270, "module-multiprocessing.shared_memory"]], "name (multiprocessing.shared_memory.sharedmemory attribute)": [[270, "multiprocessing.shared_memory.SharedMemory.name"]], "shm (multiprocessing.shared_memory.shareablelist attribute)": [[270, "multiprocessing.shared_memory.ShareableList.shm"]], "size (multiprocessing.shared_memory.sharedmemory attribute)": [[270, "multiprocessing.shared_memory.SharedMemory.size"]], "unlink() (multiprocessing.shared_memory.sharedmemory method)": [[270, "multiprocessing.shared_memory.SharedMemory.unlink"]], "netrcparseerror": [[272, "netrc.NetrcParseError"]], "__repr__() (netrc.netrc method)": [[272, "netrc.netrc.__repr__"]], "authenticators() (netrc.netrc method)": [[272, "netrc.netrc.authenticators"]], "filename (netrc.netrcparseerror attribute)": [[272, "netrc.NetrcParseError.filename"]], "hosts (netrc.netrc attribute)": [[272, "netrc.netrc.hosts"]], "lineno (netrc.netrcparseerror attribute)": [[272, "netrc.NetrcParseError.lineno"]], "macros (netrc.netrc attribute)": [[272, "netrc.netrc.macros"]], "msg (netrc.netrcparseerror attribute)": [[272, "netrc.NetrcParseError.msg"]], "netrc": [[272, "module-netrc"]], "netrc (class in netrc)": [[272, "netrc.netrc"]], "complex (class in numbers)": [[273, "numbers.Complex"]], "integral (class in numbers)": [[273, "numbers.Integral"]], "number (class in numbers)": [[273, "numbers.Number"]], "rational (class in numbers)": [[273, "numbers.Rational"]], "real (class in numbers)": [[273, "numbers.Real"]], "conjugate() (numbers.complex method)": [[273, "numbers.Complex.conjugate"]], "denominator (numbers.rational attribute)": [[273, "numbers.Rational.denominator"]], "imag (numbers.complex attribute)": [[273, "numbers.Complex.imag"]], "numbers": [[273, "module-numbers"]], "numerator (numbers.rational attribute)": [[273, "numbers.Rational.numerator"]], "real (numbers.complex attribute)": [[273, "numbers.Complex.real"]], "__abs__() (in module operator)": [[275, "operator.__abs__"]], "__add__() (in module operator)": [[275, "operator.__add__"]], "__and__() (in module operator)": [[275, "operator.__and__"]], "__call__() (in module operator)": [[275, "operator.__call__"]], "__concat__() (in module operator)": [[275, "operator.__concat__"]], "__contains__() (in module operator)": [[275, "operator.__contains__"]], "__delitem__() (in module operator)": [[275, "operator.__delitem__"]], "__eq__() (in module operator)": [[275, "operator.__eq__"]], "__floordiv__() (in module operator)": [[275, "operator.__floordiv__"]], "__ge__() (in module operator)": [[275, "operator.__ge__"]], "__getitem__() (in module operator)": [[275, "operator.__getitem__"]], "__gt__() (in module operator)": [[275, "operator.__gt__"]], "__iadd__() (in module operator)": [[275, "operator.__iadd__"]], "__iand__() (in module operator)": [[275, "operator.__iand__"]], "__iconcat__() (in module operator)": [[275, "operator.__iconcat__"]], "__ifloordiv__() (in module operator)": [[275, "operator.__ifloordiv__"]], "__ilshift__() (in module operator)": [[275, "operator.__ilshift__"]], "__imatmul__() (in module operator)": [[275, "operator.__imatmul__"]], "__imod__() (in module operator)": [[275, "operator.__imod__"]], "__imul__() (in module operator)": [[275, "operator.__imul__"]], "__index__() (in module operator)": [[275, "operator.__index__"]], "__inv__() (in module operator)": [[275, "operator.__inv__"]], "__invert__() (in module operator)": [[275, "operator.__invert__"]], "__ior__() (in module operator)": [[275, "operator.__ior__"]], "__ipow__() (in module operator)": [[275, "operator.__ipow__"]], "__irshift__() (in module operator)": [[275, "operator.__irshift__"]], "__isub__() (in module operator)": [[275, "operator.__isub__"]], "__itruediv__() (in module operator)": [[275, "operator.__itruediv__"]], "__ixor__() (in module operator)": [[275, "operator.__ixor__"]], "__le__() (in module operator)": [[275, "operator.__le__"]], "__lshift__() (in module operator)": [[275, "operator.__lshift__"]], "__lt__() (in module operator)": [[275, "operator.__lt__"]], "__matmul__() (in module operator)": [[275, "operator.__matmul__"]], "__mod__() (in module operator)": [[275, "operator.__mod__"]], "__mul__() (in module operator)": [[275, "operator.__mul__"]], "__ne__() (in module operator)": [[275, "operator.__ne__"]], "__neg__() (in module operator)": [[275, "operator.__neg__"]], "__not__() (in module operator)": [[275, "operator.__not__"]], "__or__() (in module operator)": [[275, "operator.__or__"]], "__pos__() (in module operator)": [[275, "operator.__pos__"]], "__pow__() (in module operator)": [[275, "operator.__pow__"]], "__rshift__() (in module operator)": [[275, "operator.__rshift__"]], "__setitem__() (in module operator)": [[275, "operator.__setitem__"]], "__sub__() (in module operator)": [[275, "operator.__sub__"]], "__truediv__() (in module operator)": [[275, "operator.__truediv__"]], "__xor__() (in module operator)": [[275, "operator.__xor__"]], "abs() (in module operator)": [[275, "operator.abs"]], "add() (in module operator)": [[275, "operator.add"]], "and_() (in module operator)": [[275, "operator.and_"]], "attrgetter() (in module operator)": [[275, "operator.attrgetter"]], "call() (in module operator)": [[275, "operator.call"]], "concat() (in module operator)": [[275, "operator.concat"]], "contains() (in module operator)": [[275, "operator.contains"]], "countof() (in module operator)": [[275, "operator.countOf"]], "delitem() (in module operator)": [[275, "operator.delitem"]], "eq() (in module operator)": [[275, "operator.eq"]], "floordiv() (in module operator)": [[275, "operator.floordiv"]], "ge() (in module operator)": [[275, "operator.ge"]], "getitem() (in module operator)": [[275, "operator.getitem"]], "gt() (in module operator)": [[275, "operator.gt"]], "iadd() (in module operator)": [[275, "operator.iadd"]], "iand() (in module operator)": [[275, "operator.iand"]], "iconcat() (in module operator)": [[275, "operator.iconcat"]], "ifloordiv() (in module operator)": [[275, "operator.ifloordiv"]], "ilshift() (in module operator)": [[275, "operator.ilshift"]], "imatmul() (in module operator)": [[275, "operator.imatmul"]], "imod() (in module operator)": [[275, "operator.imod"]], "imul() (in module operator)": [[275, "operator.imul"]], "index() (in module operator)": [[275, "operator.index"]], "indexof() (in module operator)": [[275, "operator.indexOf"]], "inv() (in module operator)": [[275, "operator.inv"]], "invert() (in module operator)": [[275, "operator.invert"]], "ior() (in module operator)": [[275, "operator.ior"]], "ipow() (in module operator)": [[275, "operator.ipow"]], "irshift() (in module operator)": [[275, "operator.irshift"]], "is_() (in module operator)": [[275, "operator.is_"]], "is_not() (in module operator)": [[275, "operator.is_not"]], "isub() (in module operator)": [[275, "operator.isub"]], "itemgetter() (in module operator)": [[275, "operator.itemgetter"]], "itruediv() (in module operator)": [[275, "operator.itruediv"]], "ixor() (in module operator)": [[275, "operator.ixor"]], "le() (in module operator)": [[275, "operator.le"]], "length_hint() (in module operator)": [[275, "operator.length_hint"]], "lshift() (in module operator)": [[275, "operator.lshift"]], "lt() (in module operator)": [[275, "operator.lt"]], "matmul() (in module operator)": [[275, "operator.matmul"]], "methodcaller() (in module operator)": [[275, "operator.methodcaller"]], "mod() (in module operator)": [[275, "operator.mod"]], "mul() (in module operator)": [[275, "operator.mul"]], "ne() (in module operator)": [[275, "operator.ne"]], "neg() (in module operator)": [[275, "operator.neg"]], "not_() (in module operator)": [[275, "operator.not_"]], "operator": [[275, "module-operator"], [324, "index-10"], [324, "index-13"], [324, "index-16"], [324, "index-20"], [324, "index-4"], [324, "index-6"], [324, "index-7"], [403, "index-69"], [405, "index-58"], [405, "index-60"], [405, "index-61"], [405, "index-62"], [405, "index-65"], [405, "index-66"], [405, "index-67"], [405, "index-68"], [405, "index-69"], [405, "index-70"], [405, "index-71"], [405, "index-74"], [405, "index-75"], [405, "index-76"], [405, "index-77"], [405, "index-80"], [405, "index-81"], [405, "index-83"], [405, "index-84"], [405, "index-85"], [405, "index-88"], [405, "index-97"]], "or_() (in module operator)": [[275, "operator.or_"]], "pos() (in module operator)": [[275, "operator.pos"]], "pow() (in module operator)": [[275, "operator.pow"]], "rshift() (in module operator)": [[275, "operator.rshift"]], "setitem() (in module operator)": [[275, "operator.setitem"]], "sub() (in module operator)": [[275, "operator.sub"]], "truediv() (in module operator)": [[275, "operator.truediv"]], "truth() (in module operator)": [[275, "operator.truth"]], "xor() (in module operator)": [[275, "operator.xor"]], "actions (optparse.option attribute)": [[276, "optparse.Option.ACTIONS"]], "always_typed_actions (optparse.option attribute)": [[276, "optparse.Option.ALWAYS_TYPED_ACTIONS"]], "ambiguousoptionerror": [[276, "optparse.AmbiguousOptionError"]], "badoptionerror": [[276, "optparse.BadOptionError"]], "option (class in optparse)": [[276, "optparse.Option"]], "optionconflicterror": [[276, "optparse.OptionConflictError"]], "optionerror": [[276, "optparse.OptionError"]], "optiongroup (class in optparse)": [[276, "optparse.OptionGroup"]], "optionparser (class in optparse)": [[276, "optparse.OptionParser"]], "optionvalueerror": [[276, "optparse.OptionValueError"]], "store_actions (optparse.option attribute)": [[276, "optparse.Option.STORE_ACTIONS"]], "typed_actions (optparse.option attribute)": [[276, "optparse.Option.TYPED_ACTIONS"]], "types (optparse.option attribute)": [[276, "optparse.Option.TYPES"]], "type_checker (optparse.option attribute)": [[276, "optparse.Option.TYPE_CHECKER"]], "values (class in optparse)": [[276, "optparse.Values"]], "action (optparse.option attribute)": [[276, "optparse.Option.action"]], "add_option() (optparse.optionparser method)": [[276, "optparse.OptionParser.add_option"]], "callback (optparse.option attribute)": [[276, "optparse.Option.callback"]], "callback_args (optparse.option attribute)": [[276, "optparse.Option.callback_args"]], "callback_kwargs (optparse.option attribute)": [[276, "optparse.Option.callback_kwargs"]], "choices (optparse.option attribute)": [[276, "optparse.Option.choices"]], "const (optparse.option attribute)": [[276, "optparse.Option.const"]], "default (optparse.option attribute)": [[276, "optparse.Option.default"]], "dest (optparse.option attribute)": [[276, "optparse.Option.dest"]], "disable_interspersed_args() (optparse.optionparser method)": [[276, "optparse.OptionParser.disable_interspersed_args"]], "enable_interspersed_args() (optparse.optionparser method)": [[276, "optparse.OptionParser.enable_interspersed_args"]], "get_option() (optparse.optionparser method)": [[276, "optparse.OptionParser.get_option"]], "get_option_group() (optparse.optionparser method)": [[276, "optparse.OptionParser.get_option_group"]], "get_usage() (optparse.optionparser method)": [[276, "optparse.OptionParser.get_usage"]], "get_version() (optparse.optionparser method)": [[276, "optparse.OptionParser.get_version"]], "has_option() (optparse.optionparser method)": [[276, "optparse.OptionParser.has_option"]], "help (optparse.option attribute)": [[276, "optparse.Option.help"]], "metavar (optparse.option attribute)": [[276, "optparse.Option.metavar"]], "nargs (optparse.option attribute)": [[276, "optparse.Option.nargs"]], "optparse": [[276, "module-optparse"]], "parse_args() (optparse.optionparser method)": [[276, "optparse.OptionParser.parse_args"]], "print_usage() (optparse.optionparser method)": [[276, "optparse.OptionParser.print_usage"]], "print_version() (optparse.optionparser method)": [[276, "optparse.OptionParser.print_version"]], "remove_option() (optparse.optionparser method)": [[276, "optparse.OptionParser.remove_option"]], "set_defaults() (optparse.optionparser method)": [[276, "optparse.OptionParser.set_defaults"]], "set_usage() (optparse.optionparser method)": [[276, "optparse.OptionParser.set_usage"]], "type (optparse.option attribute)": [[276, "optparse.Option.type"]], "..": [[277, "index-46"]], "/ (slash)": [[277, "index-47"], [277, "index-49"], [324, "index-13"], [402, "index-32"], [405, "index-67"]], ": (colon)": [[277, "index-51"], [320, "index-7"], [325, "index-2"], [402, "index-16"], [402, "index-18"], [402, "index-28"], [402, "index-3"], [402, "index-34"], [402, "index-4"], [402, "index-40"], [402, "index-6"], [402, "index-9"], [405, "index-17"], [405, "index-44"], [405, "index-90"], [410, "index-25"], [411, "index-15"], [416, "index-6"]], "; (semicolon)": [[277, "index-51"], [402, "index-1"]], "cld_continued (in module os)": [[277, "os.CLD_CONTINUED"]], "cld_dumped (in module os)": [[277, "os.CLD_DUMPED"]], "cld_exited (in module os)": [[277, "os.CLD_EXITED"]], "cld_killed (in module os)": [[277, "os.CLD_KILLED"]], "cld_stopped (in module os)": [[277, "os.CLD_STOPPED"]], "cld_trapped (in module os)": [[277, "os.CLD_TRAPPED"]], "clone_files (in module os)": [[277, "os.CLONE_FILES"]], "clone_fs (in module os)": [[277, "os.CLONE_FS"]], "clone_newcgroup (in module os)": [[277, "os.CLONE_NEWCGROUP"]], "clone_newipc (in module os)": [[277, "os.CLONE_NEWIPC"]], "clone_newnet (in module os)": [[277, "os.CLONE_NEWNET"]], "clone_newns (in module os)": [[277, "os.CLONE_NEWNS"]], "clone_newpid (in module os)": [[277, "os.CLONE_NEWPID"]], "clone_newtime (in module os)": [[277, "os.CLONE_NEWTIME"]], "clone_newuser (in module os)": [[277, "os.CLONE_NEWUSER"]], "clone_newuts (in module os)": [[277, "os.CLONE_NEWUTS"]], "clone_sighand (in module os)": [[277, "os.CLONE_SIGHAND"]], "clone_sysvsem (in module os)": [[277, "os.CLONE_SYSVSEM"]], "clone_thread (in module os)": [[277, "os.CLONE_THREAD"]], "clone_vm (in module os)": [[277, "os.CLONE_VM"]], "comspec": [[277, "index-43"], [328, "index-3"]], "direntry (class in os)": [[277, "os.DirEntry"]], "efd_cloexec (in module os)": [[277, "os.EFD_CLOEXEC"]], "efd_nonblock (in module os)": [[277, "os.EFD_NONBLOCK"]], "efd_semaphore (in module os)": [[277, "os.EFD_SEMAPHORE"]], "ex_cantcreat (in module os)": [[277, "os.EX_CANTCREAT"]], "ex_config (in module os)": [[277, "os.EX_CONFIG"]], "ex_dataerr (in module os)": [[277, "os.EX_DATAERR"]], "ex_ioerr (in module os)": [[277, "os.EX_IOERR"]], "ex_nohost (in module os)": [[277, "os.EX_NOHOST"]], "ex_noinput (in module os)": [[277, "os.EX_NOINPUT"]], "ex_noperm (in module os)": [[277, "os.EX_NOPERM"]], "ex_notfound (in module os)": [[277, "os.EX_NOTFOUND"]], "ex_nouser (in module os)": [[277, "os.EX_NOUSER"]], "ex_ok (in module os)": [[277, "os.EX_OK"]], "ex_oserr (in module os)": [[277, "os.EX_OSERR"]], "ex_osfile (in module os)": [[277, "os.EX_OSFILE"]], "ex_protocol (in module os)": [[277, "os.EX_PROTOCOL"]], "ex_software (in module os)": [[277, "os.EX_SOFTWARE"]], "ex_tempfail (in module os)": [[277, "os.EX_TEMPFAIL"]], "ex_unavailable (in module os)": [[277, "os.EX_UNAVAILABLE"]], "ex_usage (in module os)": [[277, "os.EX_USAGE"]], "f_lock (in module os)": [[277, "os.F_LOCK"]], "f_ok (in module os)": [[277, "os.F_OK"]], "f_test (in module os)": [[277, "os.F_TEST"]], "f_tlock (in module os)": [[277, "os.F_TLOCK"]], "f_ulock (in module os)": [[277, "os.F_ULOCK"]], "grnd_nonblock (in module os)": [[277, "os.GRND_NONBLOCK"]], "grnd_random (in module os)": [[277, "os.GRND_RANDOM"]], "mfd_allow_sealing (in module os)": [[277, "os.MFD_ALLOW_SEALING"]], "mfd_cloexec (in module os)": [[277, "os.MFD_CLOEXEC"]], "mfd_hugetlb (in module os)": [[277, "os.MFD_HUGETLB"]], "mfd_huge_16gb (in module os)": [[277, "os.MFD_HUGE_16GB"]], "mfd_huge_16mb (in module os)": [[277, "os.MFD_HUGE_16MB"]], "mfd_huge_1gb (in module os)": [[277, "os.MFD_HUGE_1GB"]], "mfd_huge_1mb (in module os)": [[277, "os.MFD_HUGE_1MB"]], "mfd_huge_256mb (in module os)": [[277, "os.MFD_HUGE_256MB"]], "mfd_huge_2gb (in module os)": [[277, "os.MFD_HUGE_2GB"]], "mfd_huge_2mb (in module os)": [[277, "os.MFD_HUGE_2MB"]], "mfd_huge_32mb (in module os)": [[277, "os.MFD_HUGE_32MB"]], "mfd_huge_512kb (in module os)": [[277, "os.MFD_HUGE_512KB"]], "mfd_huge_512mb (in module os)": [[277, "os.MFD_HUGE_512MB"]], "mfd_huge_64kb (in module os)": [[277, "os.MFD_HUGE_64KB"]], "mfd_huge_8mb (in module os)": [[277, "os.MFD_HUGE_8MB"]], "mfd_huge_mask (in module os)": [[277, "os.MFD_HUGE_MASK"]], "mfd_huge_shift (in module os)": [[277, "os.MFD_HUGE_SHIFT"]], "o_append (in module os)": [[277, "os.O_APPEND"]], "o_async (in module os)": [[277, "os.O_ASYNC"]], "o_binary (in module os)": [[277, "os.O_BINARY"]], "o_cloexec (in module os)": [[277, "os.O_CLOEXEC"]], "o_creat (in module os)": [[277, "os.O_CREAT"]], "o_direct (in module os)": [[277, "os.O_DIRECT"]], "o_directory (in module os)": [[277, "os.O_DIRECTORY"]], "o_dsync (in module os)": [[277, "os.O_DSYNC"]], "o_evtonly (in module os)": [[277, "os.O_EVTONLY"]], "o_excl (in module os)": [[277, "os.O_EXCL"]], "o_exlock (in module os)": [[277, "os.O_EXLOCK"]], "o_fsync (in module os)": [[277, "os.O_FSYNC"]], "o_ndelay (in module os)": [[277, "os.O_NDELAY"]], "o_noatime (in module os)": [[277, "os.O_NOATIME"]], "o_noctty (in module os)": [[277, "os.O_NOCTTY"]], "o_nofollow (in module os)": [[277, "os.O_NOFOLLOW"]], "o_nofollow_any (in module os)": [[277, "os.O_NOFOLLOW_ANY"]], "o_noinherit (in module os)": [[277, "os.O_NOINHERIT"]], "o_nonblock (in module os)": [[277, "os.O_NONBLOCK"]], "o_path (in module os)": [[277, "os.O_PATH"]], "o_random (in module os)": [[277, "os.O_RANDOM"]], "o_rdonly (in module os)": [[277, "os.O_RDONLY"]], "o_rdwr (in module os)": [[277, "os.O_RDWR"]], "o_rsync (in module os)": [[277, "os.O_RSYNC"]], "o_sequential (in module os)": [[277, "os.O_SEQUENTIAL"]], "o_shlock (in module os)": [[277, "os.O_SHLOCK"]], "o_short_lived (in module os)": [[277, "os.O_SHORT_LIVED"]], "o_symlink (in module os)": [[277, "os.O_SYMLINK"]], "o_sync (in module os)": [[277, "os.O_SYNC"]], "o_temporary (in module os)": [[277, "os.O_TEMPORARY"]], "o_text (in module os)": [[277, "os.O_TEXT"]], "o_tmpfile (in module os)": [[277, "os.O_TMPFILE"]], "o_trunc (in module os)": [[277, "os.O_TRUNC"]], "o_wronly (in module os)": [[277, "os.O_WRONLY"]], "pep 524": [[277, "index-53"], [455, "index-1"], [455, "index-31"], [455, "index-32"]], "pidfd_nonblock (in module os)": [[277, "os.PIDFD_NONBLOCK"]], "posix_fadv_dontneed (in module os)": [[277, "os.POSIX_FADV_DONTNEED"]], "posix_fadv_noreuse (in module os)": [[277, "os.POSIX_FADV_NOREUSE"]], "posix_fadv_normal (in module os)": [[277, "os.POSIX_FADV_NORMAL"]], "posix_fadv_random (in module os)": [[277, "os.POSIX_FADV_RANDOM"]], "posix_fadv_sequential (in module os)": [[277, "os.POSIX_FADV_SEQUENTIAL"]], "posix_fadv_willneed (in module os)": [[277, "os.POSIX_FADV_WILLNEED"]], "posix_spawn_close (in module os)": [[277, "os.POSIX_SPAWN_CLOSE"]], "posix_spawn_dup2 (in module os)": [[277, "os.POSIX_SPAWN_DUP2"]], "posix_spawn_open (in module os)": [[277, "os.POSIX_SPAWN_OPEN"]], "prio_darwin_bg (in module os)": [[277, "os.PRIO_DARWIN_BG"]], "prio_darwin_nonui (in module os)": [[277, "os.PRIO_DARWIN_NONUI"]], "prio_darwin_process (in module os)": [[277, "os.PRIO_DARWIN_PROCESS"]], "prio_darwin_thread (in module os)": [[277, "os.PRIO_DARWIN_THREAD"]], "prio_pgrp (in module os)": [[277, "os.PRIO_PGRP"]], "prio_process (in module os)": [[277, "os.PRIO_PROCESS"]], "prio_user (in module os)": [[277, "os.PRIO_USER"]], "p_all (in module os)": [[277, "os.P_ALL"]], "p_detach (in module os)": [[277, "os.P_DETACH"]], "p_nowait (in module os)": [[277, "os.P_NOWAIT"]], "p_nowaito (in module os)": [[277, "os.P_NOWAITO"]], "p_overlay (in module os)": [[277, "os.P_OVERLAY"]], "p_pgid (in module os)": [[277, "os.P_PGID"]], "p_pid (in module os)": [[277, "os.P_PID"]], "p_pidfd (in module os)": [[277, "os.P_PIDFD"]], "p_wait (in module os)": [[277, "os.P_WAIT"]], "pathlike (class in os)": [[277, "os.PathLike"]], "rtld_deepbind (in module os)": [[277, "os.RTLD_DEEPBIND"]], "rtld_global (in module os)": [[277, "os.RTLD_GLOBAL"]], "rtld_lazy (in module os)": [[277, "os.RTLD_LAZY"]], "rtld_local (in module os)": [[277, "os.RTLD_LOCAL"]], "rtld_nodelete (in module os)": [[277, "os.RTLD_NODELETE"]], "rtld_noload (in module os)": [[277, "os.RTLD_NOLOAD"]], "rtld_now (in module os)": [[277, "os.RTLD_NOW"]], "rwf_append (in module os)": [[277, "os.RWF_APPEND"]], "rwf_dsync (in module os)": [[277, "os.RWF_DSYNC"]], "rwf_hipri (in module os)": [[277, "os.RWF_HIPRI"]], "rwf_nowait (in module os)": [[277, "os.RWF_NOWAIT"]], "rwf_sync (in module os)": [[277, "os.RWF_SYNC"]], "r_ok (in module os)": [[277, "os.R_OK"]], "sched_batch (in module os)": [[277, "os.SCHED_BATCH"]], "sched_fifo (in module os)": [[277, "os.SCHED_FIFO"]], "sched_idle (in module os)": [[277, "os.SCHED_IDLE"]], "sched_other (in module os)": [[277, "os.SCHED_OTHER"]], "sched_reset_on_fork (in module os)": [[277, "os.SCHED_RESET_ON_FORK"]], "sched_rr (in module os)": [[277, "os.SCHED_RR"]], "sched_sporadic (in module os)": [[277, "os.SCHED_SPORADIC"]], "seek_cur (in module os)": [[277, "os.SEEK_CUR"]], "seek_data (in module os)": [[277, "os.SEEK_DATA"]], "seek_end (in module os)": [[277, "os.SEEK_END"]], "seek_hole (in module os)": [[277, "os.SEEK_HOLE"]], "seek_set (in module os)": [[277, "os.SEEK_SET"]], "sf_mnowait (in module os)": [[277, "os.SF_MNOWAIT"]], "sf_nocache (in module os)": [[277, "os.SF_NOCACHE"]], "sf_nodiskio (in module os)": [[277, "os.SF_NODISKIO"]], "sf_sync (in module os)": [[277, "os.SF_SYNC"]], "splice_f_more (in module os)": [[277, "os.SPLICE_F_MORE"]], "splice_f_move (in module os)": [[277, "os.SPLICE_F_MOVE"]], "splice_f_nonblock (in module os)": [[277, "os.SPLICE_F_NONBLOCK"]], "unc paths": [[277, "index-28"]], "wcontinued (in module os)": [[277, "os.WCONTINUED"]], "wcoredump() (in module os)": [[277, "os.WCOREDUMP"]], "wexited (in module os)": [[277, "os.WEXITED"]], "wexitstatus() (in module os)": [[277, "os.WEXITSTATUS"]], "wifcontinued() (in module os)": [[277, "os.WIFCONTINUED"]], "wifexited() (in module os)": [[277, "os.WIFEXITED"]], "wifsignaled() (in module os)": [[277, "os.WIFSIGNALED"]], "wifstopped() (in module os)": [[277, "os.WIFSTOPPED"]], "wnohang (in module os)": [[277, "os.WNOHANG"]], "wnowait (in module os)": [[277, "os.WNOWAIT"]], "wstopped (in module os)": [[277, "os.WSTOPPED"]], "wstopsig() (in module os)": [[277, "os.WSTOPSIG"]], "wtermsig() (in module os)": [[277, "os.WTERMSIG"]], "wuntraced (in module os)": [[277, "os.WUNTRACED"]], "w_ok (in module os)": [[277, "os.W_OK"]], "xattr_create (in module os)": [[277, "os.XATTR_CREATE"]], "xattr_replace (in module os)": [[277, "os.XATTR_REPLACE"]], "xattr_size_max (in module os)": [[277, "os.XATTR_SIZE_MAX"]], "x_ok (in module os)": [[277, "os.X_OK"]], "__fspath__() (os.pathlike method)": [[277, "os.PathLike.__fspath__"]], "_exit() (in module os)": [[277, "os._exit"]], "abort() (in module os)": [[277, "os.abort"]], "access() (in module os)": [[277, "os.access"]], "add_dll_directory() (in module os)": [[277, "os.add_dll_directory"]], "altsep (in module os)": [[277, "os.altsep"]], "and os.makedirs()": [[277, "index-28"]], "changing": [[277, "index-26"]], "chdir() (in module os)": [[277, "os.chdir"]], "chflags() (in module os)": [[277, "os.chflags"]], "chmod() (in module os)": [[277, "os.chmod"]], "chown() (in module os)": [[277, "os.chown"]], "chroot() (in module os)": [[277, "os.chroot"]], "close() (os.scandir method)": [[277, "os.scandir.close"]], "closerange() (in module os)": [[277, "os.closerange"]], "columns (os.terminal_size attribute)": [[277, "os.terminal_size.columns"]], "confstr() (in module os)": [[277, "os.confstr"]], "confstr_names (in module os)": [[277, "os.confstr_names"]], "copy_file_range() (in module os)": [[277, "os.copy_file_range"]], "cpu_count() (in module os)": [[277, "os.cpu_count"]], "creating": [[277, "index-28"]], "ctermid() (in module os)": [[277, "os.ctermid"]], "curdir (in module os)": [[277, "os.curdir"]], "defpath (in module os)": [[277, "os.defpath"]], "deleting": [[277, "index-21"], [277, "index-29"], [314, "index-1"]], "device_encoding() (in module os)": [[277, "os.device_encoding"]], "devnull (in module os)": [[277, "os.devnull"]], "dup() (in module os)": [[277, "os.dup"]], "dup2() (in module os)": [[277, "os.dup2"]], "effective id": [[277, "index-8"]], "environ (in module os)": [[277, "os.environ"]], "environb (in module os)": [[277, "os.environb"]], "environment variables": [[277, "index-17"], [277, "index-21"]], "eventfd() (in module os)": [[277, "os.eventfd"]], "eventfd_read() (in module os)": [[277, "os.eventfd_read"]], "eventfd_write() (in module os)": [[277, "os.eventfd_write"]], "execl() (in module os)": [[277, "os.execl"]], "execle() (in module os)": [[277, "os.execle"]], "execlp() (in module os)": [[277, "os.execlp"]], "execlpe() (in module os)": [[277, "os.execlpe"]], "execv() (in module os)": [[277, "os.execv"]], "execve() (in module os)": [[277, "os.execve"]], "execvp() (in module os)": [[277, "os.execvp"]], "execvpe() (in module os)": [[277, "os.execvpe"]], "extsep (in module os)": [[277, "os.extsep"]], "fchdir() (in module os)": [[277, "os.fchdir"]], "fchmod() (in module os)": [[277, "os.fchmod"]], "fchown() (in module os)": [[277, "os.fchown"]], "fdatasync() (in module os)": [[277, "os.fdatasync"]], "fdopen() (in module os)": [[277, "os.fdopen"]], "fork() (in module os)": [[277, "os.fork"]], "forkpty() (in module os)": [[277, "os.forkpty"]], "fpathconf() (in module os)": [[277, "os.fpathconf"]], "fsdecode() (in module os)": [[277, "os.fsdecode"]], "fsencode() (in module os)": [[277, "os.fsencode"]], "fspath() (in module os)": [[277, "os.fspath"]], "fstat() (in module os)": [[277, "os.fstat"]], "fstatvfs() (in module os)": [[277, "os.fstatvfs"]], "fsync() (in module os)": [[277, "os.fsync"]], "ftruncate() (in module os)": [[277, "os.ftruncate"]], "fwalk() (in module os)": [[277, "os.fwalk"]], "get_blocking() (in module os)": [[277, "os.get_blocking"]], "get_exec_path() (in module os)": [[277, "os.get_exec_path"]], "get_handle_inheritable() (in module os)": [[277, "os.get_handle_inheritable"]], "get_inheritable() (in module os)": [[277, "os.get_inheritable"]], "get_terminal_size() (in module os)": [[277, "os.get_terminal_size"]], "getcwd() (in module os)": [[277, "os.getcwd"]], "getcwdb() (in module os)": [[277, "os.getcwdb"]], "getegid() (in module os)": [[277, "os.getegid"]], "getenv() (in module os)": [[277, "os.getenv"]], "getenvb() (in module os)": [[277, "os.getenvb"]], "geteuid() (in module os)": [[277, "os.geteuid"]], "getgid() (in module os)": [[277, "os.getgid"]], "getgrouplist() (in module os)": [[277, "os.getgrouplist"]], "getgroups() (in module os)": [[277, "os.getgroups"]], "gethostbyaddr() (in module socket)": [[277, "index-20"], [318, "socket.gethostbyaddr"]], "gethostname() (in module socket)": [[277, "index-20"], [318, "socket.gethostname"]], "getloadavg() (in module os)": [[277, "os.getloadavg"]], "getlogin() (in module os)": [[277, "os.getlogin"]], "getpgid() (in module os)": [[277, "os.getpgid"]], "getpgrp() (in module os)": [[277, "os.getpgrp"]], "getpid() (in module os)": [[277, "os.getpid"]], "getppid() (in module os)": [[277, "os.getppid"]], "getpriority() (in module os)": [[277, "os.getpriority"]], "getrandom() (in module os)": [[277, "os.getrandom"]], "getresgid() (in module os)": [[277, "os.getresgid"]], "getresuid() (in module os)": [[277, "os.getresuid"]], "getsid() (in module os)": [[277, "os.getsid"]], "getuid() (in module os)": [[277, "os.getuid"]], "getxattr() (in module os)": [[277, "os.getxattr"]], "group": [[277, "index-12"], [277, "index-9"]], "id": [[277, "index-13"], [277, "index-16"], [403, "index-1"]], "id of parent": [[277, "index-14"]], "id, setting": [[277, "index-19"]], "in pathnames": [[277, "index-45"], [277, "index-46"], [277, "index-47"], [277, "index-49"], [277, "index-50"]], "in pathnames (windows)": [[277, "index-48"]], "initgroups() (in module os)": [[277, "os.initgroups"]], "inode() (os.direntry method)": [[277, "os.DirEntry.inode"]], "is_dir() (os.direntry method)": [[277, "os.DirEntry.is_dir"]], "is_file() (os.direntry method)": [[277, "os.DirEntry.is_file"]], "is_junction() (os.direntry method)": [[277, "os.DirEntry.is_junction"]], "is_symlink() (os.direntry method)": [[277, "os.DirEntry.is_symlink"]], "isatty() (in module os)": [[277, "os.isatty"]], "kill() (in module os)": [[277, "os.kill"]], "killing": [[277, "index-37"], [277, "index-38"]], "killpg() (in module os)": [[277, "os.killpg"]], "lchflags() (in module os)": [[277, "os.lchflags"]], "lchmod() (in module os)": [[277, "os.lchmod"]], "lchown() (in module os)": [[277, "os.lchown"]], "lines (os.terminal_size attribute)": [[277, "os.terminal_size.lines"]], "linesep (in module os)": [[277, "os.linesep"]], "link() (in module os)": [[277, "os.link"]], "listdir() (in module os)": [[277, "os.listdir"]], "listdrives() (in module os)": [[277, "os.listdrives"]], "listmounts() (in module os)": [[277, "os.listmounts"]], "listvolumes() (in module os)": [[277, "os.listvolumes"]], "listxattr() (in module os)": [[277, "os.listxattr"]], "lockf() (in module os)": [[277, "os.lockf"]], "login_tty() (in module os)": [[277, "os.login_tty"]], "lseek() (in module os)": [[277, "os.lseek"]], "lstat() (in module os)": [[277, "os.lstat"]], "major() (in module os)": [[277, "os.major"]], "makedev() (in module os)": [[277, "os.makedev"]], "makedirs() (in module os)": [[277, "os.makedirs"]], "memfd_create() (in module os)": [[277, "os.memfd_create"]], "minor() (in module os)": [[277, "os.minor"]], "mkdir() (in module os)": [[277, "os.mkdir"]], "mkfifo() (in module os)": [[277, "os.mkfifo"]], "mknod() (in module os)": [[277, "os.mknod"]], "name (in module os)": [[277, "os.name"]], "name (os.direntry attribute)": [[277, "os.DirEntry.name"]], "nice() (in module os)": [[277, "os.nice"]], "open() (in module os)": [[277, "os.open"]], "openpty() (in module os)": [[277, "os.openpty"]], "os": [[277, "module-os"], [288, "index-0"]], "pardir (in module os)": [[277, "os.pardir"]], "path (os.direntry attribute)": [[277, "os.DirEntry.path"]], "path separator (posix)": [[277, "index-51"]], "pathconf() (in module os)": [[277, "os.pathconf"]], "pathconf_names (in module os)": [[277, "os.pathconf_names"]], "pathsep (in module os)": [[277, "os.pathsep"]], "pidfd_open() (in module os)": [[277, "os.pidfd_open"]], "pipe() (in module os)": [[277, "os.pipe"]], "pipe2() (in module os)": [[277, "os.pipe2"]], "plock() (in module os)": [[277, "os.plock"]], "popen() (in module os)": [[277, "os.popen"], [310, "index-1"], [403, "index-54"]], "posix_fadvise() (in module os)": [[277, "os.posix_fadvise"]], "posix_fallocate() (in module os)": [[277, "os.posix_fallocate"]], "posix_spawn() (in module os)": [[277, "os.posix_spawn"]], "posix_spawnp() (in module os)": [[277, "os.posix_spawnp"]], "pread() (in module os)": [[277, "os.pread"]], "preadv() (in module os)": [[277, "os.preadv"]], "process": [[277, "index-12"], [277, "index-13"], [277, "index-14"], [277, "index-15"], [277, "index-18"], [277, "index-37"], [277, "index-38"], [277, "index-9"]], "pty": [[277, "index-23"], [291, "module-pty"]], "putenv() (in module os)": [[277, "os.putenv"]], "pwrite() (in module os)": [[277, "os.pwrite"]], "pwritev() (in module os)": [[277, "os.pwritev"]], "read() (in module os)": [[277, "os.read"]], "readlink() (in module os)": [[277, "os.readlink"]], "readv() (in module os)": [[277, "os.readv"]], "register_at_fork() (in module os)": [[277, "os.register_at_fork"]], "remove() (in module os)": [[277, "os.remove"]], "removedirs() (in module os)": [[277, "os.removedirs"]], "removexattr() (in module os)": [[277, "os.removexattr"]], "rename() (in module os)": [[277, "os.rename"]], "renames() (in module os)": [[277, "os.renames"]], "replace() (in module os)": [[277, "os.replace"]], "rmdir() (in module os)": [[277, "os.rmdir"]], "scandir() (in module os)": [[277, "os.scandir"]], "sched_get_priority_max() (in module os)": [[277, "os.sched_get_priority_max"]], "sched_get_priority_min() (in module os)": [[277, "os.sched_get_priority_min"]], "sched_getaffinity() (in module os)": [[277, "os.sched_getaffinity"]], "sched_getparam() (in module os)": [[277, "os.sched_getparam"]], "sched_getscheduler() (in module os)": [[277, "os.sched_getscheduler"]], "sched_param (class in os)": [[277, "os.sched_param"]], "sched_priority (os.sched_param attribute)": [[277, "os.sched_param.sched_priority"]], "sched_rr_get_interval() (in module os)": [[277, "os.sched_rr_get_interval"]], "sched_setaffinity() (in module os)": [[277, "os.sched_setaffinity"]], "sched_setparam() (in module os)": [[277, "os.sched_setparam"]], "sched_setscheduler() (in module os)": [[277, "os.sched_setscheduler"]], "sched_yield() (in module os)": [[277, "os.sched_yield"]], "scheduling priority": [[277, "index-15"], [277, "index-18"]], "sendfile() (in module os)": [[277, "os.sendfile"]], "sep (in module os)": [[277, "os.sep"]], "set_blocking() (in module os)": [[277, "os.set_blocking"]], "set_handle_inheritable() (in module os)": [[277, "os.set_handle_inheritable"]], "set_inheritable() (in module os)": [[277, "os.set_inheritable"]], "setegid() (in module os)": [[277, "os.setegid"]], "seteuid() (in module os)": [[277, "os.seteuid"]], "setgid() (in module os)": [[277, "os.setgid"]], "setgroups() (in module os)": [[277, "os.setgroups"]], "setns() (in module os)": [[277, "os.setns"]], "setpgid() (in module os)": [[277, "os.setpgid"]], "setpgrp() (in module os)": [[277, "os.setpgrp"]], "setpriority() (in module os)": [[277, "os.setpriority"]], "setregid() (in module os)": [[277, "os.setregid"]], "setresgid() (in module os)": [[277, "os.setresgid"]], "setresuid() (in module os)": [[277, "os.setresuid"]], "setreuid() (in module os)": [[277, "os.setreuid"]], "setsid() (in module os)": [[277, "os.setsid"]], "setting": [[277, "index-17"]], "setuid() (in module os)": [[277, "os.setuid"]], "setxattr() (in module os)": [[277, "os.setxattr"]], "signalling": [[277, "index-37"], [277, "index-38"]], "spawnl() (in module os)": [[277, "os.spawnl"]], "spawnle() (in module os)": [[277, "os.spawnle"]], "spawnlp() (in module os)": [[277, "os.spawnlp"]], "spawnlpe() (in module os)": [[277, "os.spawnlpe"]], "spawnv() (in module os)": [[277, "os.spawnv"]], "spawnve() (in module os)": [[277, "os.spawnve"]], "spawnvp() (in module os)": [[277, "os.spawnvp"]], "spawnvpe() (in module os)": [[277, "os.spawnvpe"]], "splice() (in module os)": [[277, "os.splice"]], "st_atime (os.stat_result attribute)": [[277, "os.stat_result.st_atime"]], "st_atime_ns (os.stat_result attribute)": [[277, "os.stat_result.st_atime_ns"]], "st_birthtime (os.stat_result attribute)": [[277, "os.stat_result.st_birthtime"]], "st_birthtime_ns (os.stat_result attribute)": [[277, "os.stat_result.st_birthtime_ns"]], "st_blksize (os.stat_result attribute)": [[277, "os.stat_result.st_blksize"]], "st_blocks (os.stat_result attribute)": [[277, "os.stat_result.st_blocks"]], "st_creator (os.stat_result attribute)": [[277, "os.stat_result.st_creator"]], "st_ctime (os.stat_result attribute)": [[277, "os.stat_result.st_ctime"]], "st_ctime_ns (os.stat_result attribute)": [[277, "os.stat_result.st_ctime_ns"]], "st_dev (os.stat_result attribute)": [[277, "os.stat_result.st_dev"]], "st_file_attributes (os.stat_result attribute)": [[277, "os.stat_result.st_file_attributes"]], "st_flags (os.stat_result attribute)": [[277, "os.stat_result.st_flags"]], "st_fstype (os.stat_result attribute)": [[277, "os.stat_result.st_fstype"]], "st_gen (os.stat_result attribute)": [[277, "os.stat_result.st_gen"]], "st_gid (os.stat_result attribute)": [[277, "os.stat_result.st_gid"]], "st_ino (os.stat_result attribute)": [[277, "os.stat_result.st_ino"]], "st_mode (os.stat_result attribute)": [[277, "os.stat_result.st_mode"]], "st_mtime (os.stat_result attribute)": [[277, "os.stat_result.st_mtime"]], "st_mtime_ns (os.stat_result attribute)": [[277, "os.stat_result.st_mtime_ns"]], "st_nlink (os.stat_result attribute)": [[277, "os.stat_result.st_nlink"]], "st_rdev (os.stat_result attribute)": [[277, "os.stat_result.st_rdev"]], "st_reparse_tag (os.stat_result attribute)": [[277, "os.stat_result.st_reparse_tag"]], "st_rsize (os.stat_result attribute)": [[277, "os.stat_result.st_rsize"]], "st_size (os.stat_result attribute)": [[277, "os.stat_result.st_size"]], "st_type (os.stat_result attribute)": [[277, "os.stat_result.st_type"]], "st_uid (os.stat_result attribute)": [[277, "os.stat_result.st_uid"]], "startfile() (in module os)": [[277, "os.startfile"]], "stat": [[277, "index-30"], [322, "module-stat"]], "stat() (in module os)": [[277, "os.stat"]], "stat() (os.direntry method)": [[277, "os.DirEntry.stat"]], "stat_result (class in os)": [[277, "os.stat_result"]], "statvfs() (in module os)": [[277, "os.statvfs"]], "strerror() (in module os)": [[277, "os.strerror"]], "supports_bytes_environ (in module os)": [[277, "os.supports_bytes_environ"]], "supports_dir_fd (in module os)": [[277, "os.supports_dir_fd"]], "supports_effective_ids (in module os)": [[277, "os.supports_effective_ids"]], "supports_fd (in module os)": [[277, "os.supports_fd"]], "supports_follow_symlinks (in module os)": [[277, "os.supports_follow_symlinks"]], "symlink() (in module os)": [[277, "os.symlink"]], "sync() (in module os)": [[277, "os.sync"]], "sysconf() (in module os)": [[277, "os.sysconf"]], "sysconf_names (in module os)": [[277, "os.sysconf_names"]], "system() (in module os)": [[277, "os.system"]], "tcgetpgrp() (in module os)": [[277, "os.tcgetpgrp"]], "tcsetpgrp() (in module os)": [[277, "os.tcsetpgrp"]], "terminal_size (class in os)": [[277, "os.terminal_size"]], "times() (in module os)": [[277, "os.times"]], "traversal": [[277, "index-31"], [277, "index-32"]], "truncate() (in module os)": [[277, "os.truncate"]], "ttyname() (in module os)": [[277, "os.ttyname"]], "umask() (in module os)": [[277, "os.umask"]], "uname() (in module os)": [[277, "os.uname"]], "unlink() (in module os)": [[277, "os.unlink"]], "unsetenv() (in module os)": [[277, "os.unsetenv"]], "unshare() (in module os)": [[277, "os.unshare"]], "urandom() (in module os)": [[277, "os.urandom"]], "utime() (in module os)": [[277, "os.utime"]], "wait() (in module os)": [[277, "os.wait"]], "wait3() (in module os)": [[277, "os.wait3"]], "wait4() (in module os)": [[277, "os.wait4"]], "waitid() (in module os)": [[277, "os.waitid"]], "waitpid() (in module os)": [[277, "os.waitpid"]], "waitstatus_to_exitcode() (in module os)": [[277, "os.waitstatus_to_exitcode"]], "walk() (in module os)": [[277, "os.walk"]], "walking": [[277, "index-31"], [277, "index-32"]], "write() (in module os)": [[277, "os.write"]], "writev() (in module os)": [[277, "os.writev"]], "home": [[278, "index-3"], [278, "index-8"], [347, "index-1"], [457, "index-14"], [457, "index-21"]], "homedrive": [[278, "index-6"]], "homepath": [[278, "index-5"]], "userprofile": [[278, "index-4"], [457, "index-13"], [457, "index-20"]], "abspath() (in module os.path)": [[278, "os.path.abspath"]], "basename() (in module os.path)": [[278, "os.path.basename"]], "commonpath() (in module os.path)": [[278, "os.path.commonpath"]], "commonprefix() (in module os.path)": [[278, "os.path.commonprefix"]], "dirname() (in module os.path)": [[278, "os.path.dirname"]], "environment variables expansion": [[278, "index-9"]], "environment variables expansion (windows)": [[278, "index-9"], [381, "index-0"]], "exists() (in module os.path)": [[278, "os.path.exists"]], "expanduser() (in module os.path)": [[278, "os.path.expanduser"]], "expandvars() (in module os.path)": [[278, "os.path.expandvars"]], "getatime() (in module os.path)": [[278, "os.path.getatime"]], "getctime() (in module os.path)": [[278, "os.path.getctime"]], "getmtime() (in module os.path)": [[278, "os.path.getmtime"]], "getsize() (in module os.path)": [[278, "os.path.getsize"]], "home directory expansion": [[278, "index-1"]], "isabs() (in module os.path)": [[278, "os.path.isabs"]], "isdevdrive() (in module os.path)": [[278, "os.path.isdevdrive"]], "isdir() (in module os.path)": [[278, "os.path.isdir"]], "isfile() (in module os.path)": [[278, "os.path.isfile"]], "isjunction() (in module os.path)": [[278, "os.path.isjunction"]], "islink() (in module os.path)": [[278, "os.path.islink"]], "ismount() (in module os.path)": [[278, "os.path.ismount"]], "join() (in module os.path)": [[278, "os.path.join"]], "lexists() (in module os.path)": [[278, "os.path.lexists"]], "normcase() (in module os.path)": [[278, "os.path.normcase"]], "normpath() (in module os.path)": [[278, "os.path.normpath"]], "operations": [[278, "index-0"], [279, "index-0"], [324, "index-1"], [324, "index-16"], [324, "index-5"]], "os.path": [[278, "module-os.path"]], "pwd": [[278, "index-2"], [292, "module-pwd"]], "realpath() (in module os.path)": [[278, "os.path.realpath"]], "relpath() (in module os.path)": [[278, "os.path.relpath"]], "samefile() (in module os.path)": [[278, "os.path.samefile"]], "sameopenfile() (in module os.path)": [[278, "os.path.sameopenfile"]], "samestat() (in module os.path)": [[278, "os.path.samestat"]], "split() (in module os.path)": [[278, "os.path.split"]], "splitdrive() (in module os.path)": [[278, "os.path.splitdrive"]], "splitext() (in module os.path)": [[278, "os.path.splitext"]], "splitroot() (in module os.path)": [[278, "os.path.splitroot"]], "supports_unicode_filenames (in module os.path)": [[278, "os.path.supports_unicode_filenames"]], "~ (tilde)": [[278, "index-1"], [324, "index-16"], [405, "index-62"]], "pep 428": [[279, "index-1"], [453, "index-30"], [453, "index-7"]], "path (class in pathlib)": [[279, "pathlib.Path"]], "posixpath (class in pathlib)": [[279, "pathlib.PosixPath"]], "purepath (class in pathlib)": [[279, "pathlib.PurePath"]], "pureposixpath (class in pathlib)": [[279, "pathlib.PurePosixPath"]], "purewindowspath (class in pathlib)": [[279, "pathlib.PureWindowsPath"]], "windowspath (class in pathlib)": [[279, "pathlib.WindowsPath"]], "absolute() (pathlib.path method)": [[279, "pathlib.Path.absolute"]], "anchor (pathlib.purepath attribute)": [[279, "pathlib.PurePath.anchor"]], "as_posix() (pathlib.purepath method)": [[279, "pathlib.PurePath.as_posix"]], "as_uri() (pathlib.purepath method)": [[279, "pathlib.PurePath.as_uri"]], "chmod() (pathlib.path method)": [[279, "pathlib.Path.chmod"]], "cwd() (pathlib.path class method)": [[279, "pathlib.Path.cwd"]], "drive (pathlib.purepath attribute)": [[279, "pathlib.PurePath.drive"]], "exists() (pathlib.path method)": [[279, "pathlib.Path.exists"]], "expanduser() (pathlib.path method)": [[279, "pathlib.Path.expanduser"]], "glob() (pathlib.path method)": [[279, "pathlib.Path.glob"]], "group() (pathlib.path method)": [[279, "pathlib.Path.group"]], "hardlink_to() (pathlib.path method)": [[279, "pathlib.Path.hardlink_to"]], "home() (pathlib.path class method)": [[279, "pathlib.Path.home"]], "is_absolute() (pathlib.purepath method)": [[279, "pathlib.PurePath.is_absolute"]], "is_block_device() (pathlib.path method)": [[279, "pathlib.Path.is_block_device"]], "is_char_device() (pathlib.path method)": [[279, "pathlib.Path.is_char_device"]], "is_dir() (pathlib.path method)": [[279, "pathlib.Path.is_dir"]], "is_fifo() (pathlib.path method)": [[279, "pathlib.Path.is_fifo"]], "is_file() (pathlib.path method)": [[279, "pathlib.Path.is_file"]], "is_junction() (pathlib.path method)": [[279, "pathlib.Path.is_junction"]], "is_mount() (pathlib.path method)": [[279, "pathlib.Path.is_mount"]], "is_relative_to() (pathlib.purepath method)": [[279, "pathlib.PurePath.is_relative_to"]], "is_reserved() (pathlib.purepath method)": [[279, "pathlib.PurePath.is_reserved"]], "is_socket() (pathlib.path method)": [[279, "pathlib.Path.is_socket"]], "is_symlink() (pathlib.path method)": [[279, "pathlib.Path.is_symlink"]], "iterdir() (pathlib.path method)": [[279, "pathlib.Path.iterdir"]], "joinpath() (pathlib.purepath method)": [[279, "pathlib.PurePath.joinpath"]], "lchmod() (pathlib.path method)": [[279, "pathlib.Path.lchmod"]], "lstat() (pathlib.path method)": [[279, "pathlib.Path.lstat"]], "match() (pathlib.purepath method)": [[279, "pathlib.PurePath.match"]], "mkdir() (pathlib.path method)": [[279, "pathlib.Path.mkdir"]], "name (pathlib.purepath attribute)": [[279, "pathlib.PurePath.name"]], "open() (pathlib.path method)": [[279, "pathlib.Path.open"]], "owner() (pathlib.path method)": [[279, "pathlib.Path.owner"]], "parent (pathlib.purepath attribute)": [[279, "pathlib.PurePath.parent"]], "parents (pathlib.purepath attribute)": [[279, "pathlib.PurePath.parents"]], "parts (pathlib.purepath attribute)": [[279, "pathlib.PurePath.parts"]], "pathlib": [[279, "module-pathlib"]], "pathmod (pathlib.purepath attribute)": [[279, "pathlib.PurePath.pathmod"]], "read_bytes() (pathlib.path method)": [[279, "pathlib.Path.read_bytes"]], "read_text() (pathlib.path method)": [[279, "pathlib.Path.read_text"]], "readlink() (pathlib.path method)": [[279, "pathlib.Path.readlink"]], "relative_to() (pathlib.purepath method)": [[279, "pathlib.PurePath.relative_to"]], "rename() (pathlib.path method)": [[279, "pathlib.Path.rename"]], "replace() (pathlib.path method)": [[279, "pathlib.Path.replace"]], "resolve() (pathlib.path method)": [[279, "pathlib.Path.resolve"]], "rglob() (pathlib.path method)": [[279, "pathlib.Path.rglob"]], "rmdir() (pathlib.path method)": [[279, "pathlib.Path.rmdir"]], "root (pathlib.purepath attribute)": [[279, "pathlib.PurePath.root"]], "samefile() (pathlib.path method)": [[279, "pathlib.Path.samefile"]], "stat() (pathlib.path method)": [[279, "pathlib.Path.stat"]], "stem (pathlib.purepath attribute)": [[279, "pathlib.PurePath.stem"]], "suffix (pathlib.purepath attribute)": [[279, "pathlib.PurePath.suffix"]], "suffixes (pathlib.purepath attribute)": [[279, "pathlib.PurePath.suffixes"]], "symlink_to() (pathlib.path method)": [[279, "pathlib.Path.symlink_to"]], "touch() (pathlib.path method)": [[279, "pathlib.Path.touch"]], "unlink() (pathlib.path method)": [[279, "pathlib.Path.unlink"]], "walk() (pathlib.path method)": [[279, "pathlib.Path.walk"]], "with_name() (pathlib.purepath method)": [[279, "pathlib.PurePath.with_name"]], "with_segments() (pathlib.purepath method)": [[279, "pathlib.PurePath.with_segments"]], "with_stem() (pathlib.purepath method)": [[279, "pathlib.PurePath.with_stem"]], "with_suffix() (pathlib.purepath method)": [[279, "pathlib.PurePath.with_suffix"]], "write_bytes() (pathlib.path method)": [[279, "pathlib.Path.write_bytes"]], "write_text() (pathlib.path method)": [[279, "pathlib.Path.write_text"]], "! (pdb command)": [[280, "pdbcommand-0"]], ".pdbrc": [[280, "index-2"]], "pdb (class in pdb)": [[280, "index-1"], [280, "pdb.Pdb"]], "alias (pdb command)": [[280, "pdbcommand-alias"]], "args (pdb command)": [[280, "pdbcommand-args"]], "break (pdb command)": [[280, "pdbcommand-break"]], "clear (pdb command)": [[280, "pdbcommand-clear"]], "commands (pdb command)": [[280, "pdbcommand-commands"]], "condition (pdb command)": [[280, "pdbcommand-condition"]], "continue (pdb command)": [[280, "pdbcommand-continue"]], "debug (pdb command)": [[280, "pdbcommand-debug"]], "debugging": [[280, "index-0"], [411, "index-18"]], "disable (pdb command)": [[280, "pdbcommand-disable"]], "display (pdb command)": [[280, "pdbcommand-display"]], "down (pdb command)": [[280, "pdbcommand-down"]], "enable (pdb command)": [[280, "pdbcommand-enable"]], "exceptions (pdb command)": [[280, "pdbcommand-exceptions"]], "help (pdb command)": [[280, "pdbcommand-help"]], "ignore (pdb command)": [[280, "pdbcommand-ignore"]], "interact (pdb command)": [[280, "pdbcommand-interact"]], "jump (pdb command)": [[280, "pdbcommand-jump"]], "list (pdb command)": [[280, "pdbcommand-list"]], "ll (pdb command)": [[280, "pdbcommand-ll"]], "next (pdb command)": [[280, "pdbcommand-next"]], "p (pdb command)": [[280, "pdbcommand-p"]], "pdb": [[280, "module-pdb"]], "pm() (in module pdb)": [[280, "pdb.pm"]], "post_mortem() (in module pdb)": [[280, "pdb.post_mortem"]], "pp (pdb command)": [[280, "pdbcommand-pp"]], "quit (pdb command)": [[280, "pdbcommand-quit"]], "restart (pdb command)": [[280, "pdbcommand-restart"]], "return (pdb command)": [[280, "pdbcommand-return"]], "retval (pdb command)": [[280, "pdbcommand-retval"]], "run (pdb command)": [[280, "pdbcommand-run"]], "run() (in module pdb)": [[280, "pdb.run"]], "run() (pdb.pdb method)": [[280, "pdb.Pdb.run"]], "runcall() (in module pdb)": [[280, "pdb.runcall"]], "runcall() (pdb.pdb method)": [[280, "pdb.Pdb.runcall"]], "runeval() (in module pdb)": [[280, "pdb.runeval"]], "runeval() (pdb.pdb method)": [[280, "pdb.Pdb.runeval"]], "set_trace() (in module pdb)": [[280, "pdb.set_trace"]], "set_trace() (pdb.pdb method)": [[280, "pdb.Pdb.set_trace"]], "source (pdb command)": [[280, "pdbcommand-source"]], "step (pdb command)": [[280, "pdbcommand-step"]], "tbreak (pdb command)": [[280, "pdbcommand-tbreak"]], "unalias (pdb command)": [[280, "pdbcommand-unalias"]], "undisplay (pdb command)": [[280, "pdbcommand-undisplay"]], "until (pdb command)": [[280, "pdbcommand-until"]], "up (pdb command)": [[280, "pdbcommand-up"]], "whatis (pdb command)": [[280, "pdbcommand-whatis"]], "where (pdb command)": [[280, "pdbcommand-where"]], "default_protocol (in module pickle)": [[282, "pickle.DEFAULT_PROTOCOL"]], "external data representation": [[282, "index-1"]], "highest_protocol (in module pickle)": [[282, "pickle.HIGHEST_PROTOCOL"]], "pep 307": [[282, "index-2"], [440, "index-21"], [440, "index-22"], [440, "index-23"]], "pep 3154": [[282, "index-3"], [453, "index-12"], [453, "index-39"]], "pep 574": [[282, "index-4"], [282, "index-8"], [457, "index-9"]], "picklebuffer (class in pickle)": [[282, "pickle.PickleBuffer"]], "pickleerror": [[282, "pickle.PickleError"]], "pickler (class in pickle)": [[282, "pickle.Pickler"]], "picklingerror": [[282, "pickle.PicklingError"]], "unpickler (class in pickle)": [[282, "pickle.Unpickler"]], "unpicklingerror": [[282, "pickle.UnpicklingError"]], "__getnewargs__() (object method)": [[282, "object.__getnewargs__"]], "__getnewargs_ex__() (object method)": [[282, "object.__getnewargs_ex__"]], "__getstate__() (copy protocol)": [[282, "index-7"]], "__getstate__() (object method)": [[282, "object.__getstate__"]], "__reduce__() (object method)": [[282, "object.__reduce__"]], "__reduce_ex__() (object method)": [[282, "object.__reduce_ex__"]], "__setstate__() (copy protocol)": [[282, "index-7"]], "__setstate__() (object method)": [[282, "object.__setstate__"]], "dispatch_table (pickle.pickler attribute)": [[282, "pickle.Pickler.dispatch_table"]], "dump() (in module pickle)": [[282, "pickle.dump"]], "dump() (pickle.pickler method)": [[282, "pickle.Pickler.dump"]], "dumps() (in module pickle)": [[282, "pickle.dumps"]], "fast (pickle.pickler attribute)": [[282, "pickle.Pickler.fast"]], "find_class() (pickle protocol)": [[282, "index-9"]], "find_class() (pickle.unpickler method)": [[282, "pickle.Unpickler.find_class"]], "flattening": [[282, "index-0"]], "load() (in module pickle)": [[282, "pickle.load"]], "load() (pickle.unpickler method)": [[282, "pickle.Unpickler.load"]], "loads() (in module pickle)": [[282, "pickle.loads"]], "marshalling": [[282, "index-0"]], "objects": [[282, "index-0"], [324, "index-8"]], "persistence": [[282, "index-0"]], "persistent": [[282, "index-0"]], "persistent_id (pickle protocol)": [[282, "index-6"]], "persistent_id() (pickle.pickler method)": [[282, "pickle.Pickler.persistent_id"]], "persistent_load (pickle protocol)": [[282, "index-6"]], "persistent_load() (pickle.unpickler method)": [[282, "pickle.Unpickler.persistent_load"]], "pickling": [[282, "index-0"]], "raw() (pickle.picklebuffer method)": [[282, "pickle.PickleBuffer.raw"]], "reducer_override() (pickle.pickler method)": [[282, "pickle.Pickler.reducer_override"]], "release() (pickle.picklebuffer method)": [[282, "pickle.PickleBuffer.release"]], "serializing": [[282, "index-0"]], "--annotate": [[283, "cmdoption-pickletools-a"]], "--indentlevel": [[283, "cmdoption-pickletools-l"]], "--memo": [[283, "cmdoption-pickletools-m"]], "--preamble": [[283, "cmdoption-pickletools-p"]], "dis() (in module pickletools)": [[283, "pickletools.dis"]], "genops() (in module pickletools)": [[283, "pickletools.genops"]], "optimize() (in module pickletools)": [[283, "pickletools.optimize"]], "pickletools": [[283, "module-pickletools"]], "pickletools command line option": [[283, "cmdoption-pickletools-a"], [283, "cmdoption-pickletools-l"], [283, "cmdoption-pickletools-m"], [283, "cmdoption-pickletools-o"], [283, "cmdoption-pickletools-p"]], "moduleinfo (class in pkgutil)": [[284, "pkgutil.ModuleInfo"]], "extend_path() (in module pkgutil)": [[284, "pkgutil.extend_path"]], "find_loader() (in module pkgutil)": [[284, "pkgutil.find_loader"]], "get_data() (in module pkgutil)": [[284, "pkgutil.get_data"]], "get_importer() (in module pkgutil)": [[284, "pkgutil.get_importer"]], "get_loader() (in module pkgutil)": [[284, "pkgutil.get_loader"]], "iter_importers() (in module pkgutil)": [[284, "pkgutil.iter_importers"]], "iter_modules() (in module pkgutil)": [[284, "pkgutil.iter_modules"]], "pkgutil": [[284, "module-pkgutil"]], "resolve_name() (in module pkgutil)": [[284, "pkgutil.resolve_name"]], "walk_packages() (in module pkgutil)": [[284, "pkgutil.walk_packages"]], "architecture() (in module platform)": [[285, "platform.architecture"]], "freedesktop_os_release() (in module platform)": [[285, "platform.freedesktop_os_release"]], "java_ver() (in module platform)": [[285, "platform.java_ver"]], "libc_ver() (in module platform)": [[285, "platform.libc_ver"]], "mac_ver() (in module platform)": [[285, "platform.mac_ver"]], "machine() (in module platform)": [[285, "platform.machine"]], "node() (in module platform)": [[285, "platform.node"]], "platform": [[285, "module-platform"]], "platform() (in module platform)": [[285, "platform.platform"]], "processor() (in module platform)": [[285, "platform.processor"]], "python_branch() (in module platform)": [[285, "platform.python_branch"]], "python_build() (in module platform)": [[285, "platform.python_build"]], "python_compiler() (in module platform)": [[285, "platform.python_compiler"]], "python_implementation() (in module platform)": [[285, "platform.python_implementation"]], "python_revision() (in module platform)": [[285, "platform.python_revision"]], "python_version() (in module platform)": [[285, "platform.python_version"]], "python_version_tuple() (in module platform)": [[285, "platform.python_version_tuple"]], "release() (in module platform)": [[285, "platform.release"]], "system() (in module platform)": [[285, "platform.system"]], "system_alias() (in module platform)": [[285, "platform.system_alias"]], "uname() (in module platform)": [[285, "platform.uname"]], "version() (in module platform)": [[285, "platform.version"]], "win32_edition() (in module platform)": [[285, "platform.win32_edition"]], "win32_is_iot() (in module platform)": [[285, "platform.win32_is_iot"]], "win32_ver() (in module platform)": [[285, "platform.win32_ver"]], "fmt_binary (in module plistlib)": [[286, "plistlib.FMT_BINARY"]], "fmt_xml (in module plistlib)": [[286, "plistlib.FMT_XML"]], "uid (class in plistlib)": [[286, "plistlib.UID"]], "dump() (in module plistlib)": [[286, "plistlib.dump"]], "dumps() (in module plistlib)": [[286, "plistlib.dumps"]], "load() (in module plistlib)": [[286, "plistlib.load"]], "loads() (in module plistlib)": [[286, "plistlib.loads"]], "plist": [[286, "index-0"]], "plistlib": [[286, "module-plistlib"]], "property list": [[286, "index-0"]], "pop3": [[287, "index-0"]], "pop3 (class in poplib)": [[287, "poplib.POP3"]], "pop3_ssl (class in poplib)": [[287, "poplib.POP3_SSL"]], "rfc 1939": [[287, "index-1"], [287, "index-2"]], "rfc 2449": [[287, "index-4"]], "rfc 2595": [[287, "index-3"], [287, "index-6"]], "rfc 6856": [[287, "index-5"], [454, "index-36"]], "apop() (poplib.pop3 method)": [[287, "poplib.POP3.apop"]], "capa() (poplib.pop3 method)": [[287, "poplib.POP3.capa"]], "dele() (poplib.pop3 method)": [[287, "poplib.POP3.dele"]], "getwelcome() (poplib.pop3 method)": [[287, "poplib.POP3.getwelcome"]], "list() (poplib.pop3 method)": [[287, "poplib.POP3.list"]], "noop() (poplib.pop3 method)": [[287, "poplib.POP3.noop"]], "pass_() (poplib.pop3 method)": [[287, "poplib.POP3.pass_"]], "poplib": [[287, "module-poplib"]], "quit() (poplib.pop3 method)": [[287, "poplib.POP3.quit"]], "retr() (poplib.pop3 method)": [[287, "poplib.POP3.retr"]], "rpop() (poplib.pop3 method)": [[287, "poplib.POP3.rpop"]], "rset() (poplib.pop3 method)": [[287, "poplib.POP3.rset"]], "set_debuglevel() (poplib.pop3 method)": [[287, "poplib.POP3.set_debuglevel"]], "stat() (poplib.pop3 method)": [[287, "poplib.POP3.stat"]], "stls() (poplib.pop3 method)": [[287, "poplib.POP3.stls"]], "top() (poplib.pop3 method)": [[287, "poplib.POP3.top"]], "uidl() (poplib.pop3 method)": [[287, "poplib.POP3.uidl"]], "user() (poplib.pop3 method)": [[287, "poplib.POP3.user"]], "utf8() (poplib.pop3 method)": [[287, "poplib.POP3.utf8"]], "environ (in module posix)": [[288, "posix.environ"]], "large files": [[288, "index-1"]], "prettyprinter (class in pprint)": [[289, "pprint.PrettyPrinter"]], "eval": [[289, "index-1"], [289, "index-2"], [324, "index-64"], [411, "index-44"], [412, "index-6"]], "format() (pprint.prettyprinter method)": [[289, "pprint.PrettyPrinter.format"]], "isreadable() (in module pprint)": [[289, "pprint.isreadable"]], "isreadable() (pprint.prettyprinter method)": [[289, "pprint.PrettyPrinter.isreadable"]], "isrecursive() (in module pprint)": [[289, "pprint.isrecursive"]], "isrecursive() (pprint.prettyprinter method)": [[289, "pprint.PrettyPrinter.isrecursive"]], "pformat() (in module pprint)": [[289, "pprint.pformat"]], "pformat() (pprint.prettyprinter method)": [[289, "pprint.PrettyPrinter.pformat"]], "placeholder": [[289, "index-0"], [303, "index-0"], [342, "index-0"]], "pp() (in module pprint)": [[289, "pprint.pp"]], "pprint": [[289, "module-pprint"]], "pprint() (in module pprint)": [[289, "pprint.pprint"]], "pprint() (pprint.prettyprinter method)": [[289, "pprint.PrettyPrinter.pprint"]], "saferepr() (in module pprint)": [[289, "pprint.saferepr"]], "profile (class in profile)": [[290, "profile.Profile"]], "stats (class in pstats)": [[290, "pstats.Stats"]], "add() (pstats.stats method)": [[290, "pstats.Stats.add"]], "cprofile": [[290, "module-cProfile"]], "create_stats() (profile.profile method)": [[290, "profile.Profile.create_stats"]], "deterministic profiling": [[290, "index-0"]], "disable() (profile.profile method)": [[290, "profile.Profile.disable"]], "dump_stats() (profile.profile method)": [[290, "profile.Profile.dump_stats"]], "dump_stats() (pstats.stats method)": [[290, "pstats.Stats.dump_stats"]], "enable() (profile.profile method)": [[290, "profile.Profile.enable"]], "get_stats_profile() (pstats.stats method)": [[290, "pstats.Stats.get_stats_profile"]], "print_callees() (pstats.stats method)": [[290, "pstats.Stats.print_callees"]], "print_callers() (pstats.stats method)": [[290, "pstats.Stats.print_callers"]], "print_stats() (profile.profile method)": [[290, "profile.Profile.print_stats"]], "print_stats() (pstats.stats method)": [[290, "pstats.Stats.print_stats"]], "profile": [[290, "module-profile"]], "profiling, deterministic": [[290, "index-0"]], "pstats": [[290, "module-pstats"]], "reverse_order() (pstats.stats method)": [[290, "pstats.Stats.reverse_order"]], "run() (in module profile)": [[290, "profile.run"]], "run() (profile.profile method)": [[290, "profile.Profile.run"]], "runcall() (profile.profile method)": [[290, "profile.Profile.runcall"]], "runctx() (in module profile)": [[290, "profile.runctx"]], "runctx() (profile.profile method)": [[290, "profile.Profile.runctx"]], "sort_stats() (pstats.stats method)": [[290, "pstats.Stats.sort_stats"]], "strip_dirs() (pstats.stats method)": [[290, "pstats.Stats.strip_dirs"]], "fork() (in module pty)": [[291, "pty.fork"]], "openpty() (in module pty)": [[291, "pty.openpty"]], "spawn() (in module pty)": [[291, "pty.spawn"]], "getpwall() (in module pwd)": [[292, "pwd.getpwall"]], "getpwnam() (in module pwd)": [[292, "pwd.getpwnam"]], "getpwuid() (in module pwd)": [[292, "pwd.getpwuid"]], "-": [[293, "cmdoption-python-m-py_compile"]], "--quiet": [[293, "cmdoption-python-m-py_compile-q"]], "<file>": [[293, "cmdoption-python-m-py_compile-arg-file"]], "checked_hash (py_compile.pycinvalidationmode attribute)": [[293, "py_compile.PycInvalidationMode.CHECKED_HASH"]], "pycompileerror": [[293, "py_compile.PyCompileError"]], "pycinvalidationmode (class in py_compile)": [[293, "py_compile.PycInvalidationMode"]], "timestamp (py_compile.pycinvalidationmode attribute)": [[293, "py_compile.PycInvalidationMode.TIMESTAMP"]], "unchecked_hash (py_compile.pycinvalidationmode attribute)": [[293, "py_compile.PycInvalidationMode.UNCHECKED_HASH"]], "byte-code": [[293, "index-0"]], "compile() (in module py_compile)": [[293, "py_compile.compile"]], "py_compile": [[293, "module-py_compile"]], "python--m-py_compile command line option": [[293, "cmdoption-python-m-py_compile"], [293, "cmdoption-python-m-py_compile-arg-file"], [293, "cmdoption-python-m-py_compile-q"]], "children (pyclbr.class attribute)": [[294, "pyclbr.Class.children"]], "children (pyclbr.function attribute)": [[294, "pyclbr.Function.children"]], "file (pyclbr.class attribute)": [[294, "pyclbr.Class.file"]], "file (pyclbr.function attribute)": [[294, "pyclbr.Function.file"]], "is_async (pyclbr.function attribute)": [[294, "pyclbr.Function.is_async"]], "lineno (pyclbr.class attribute)": [[294, "pyclbr.Class.lineno"]], "lineno (pyclbr.function attribute)": [[294, "pyclbr.Function.lineno"]], "methods (pyclbr.class attribute)": [[294, "pyclbr.Class.methods"]], "module (pyclbr.class attribute)": [[294, "pyclbr.Class.module"]], "module (pyclbr.function attribute)": [[294, "pyclbr.Function.module"]], "name (pyclbr.class attribute)": [[294, "pyclbr.Class.name"]], "name (pyclbr.function attribute)": [[294, "pyclbr.Function.name"]], "parent (pyclbr.class attribute)": [[294, "pyclbr.Class.parent"]], "parent (pyclbr.function attribute)": [[294, "pyclbr.Function.parent"]], "pyclbr": [[294, "module-pyclbr"]], "readmodule() (in module pyclbr)": [[294, "pyclbr.readmodule"]], "readmodule_ex() (in module pyclbr)": [[294, "pyclbr.readmodule_ex"]], "super (pyclbr.class attribute)": [[294, "pyclbr.Class.super"]], "pager": [[295, "index-1"]], "pythondocs": [[295, "index-2"]], "documentation": [[295, "index-0"]], "generation": [[295, "index-0"]], "help": [[295, "index-0"], [426, "index-0"]], "online": [[295, "index-0"]], "pydoc": [[295, "module-pydoc"]], "attlistdeclhandler() (xml.parsers.expat.xmlparser method)": [[296, "xml.parsers.expat.xmlparser.AttlistDeclHandler"]], "characterdatahandler() (xml.parsers.expat.xmlparser method)": [[296, "xml.parsers.expat.xmlparser.CharacterDataHandler"]], "commenthandler() (xml.parsers.expat.xmlparser method)": [[296, "xml.parsers.expat.xmlparser.CommentHandler"]], "currentbyteindex (xml.parsers.expat.xmlparser attribute)": [[296, "xml.parsers.expat.xmlparser.CurrentByteIndex"]], "currentcolumnnumber (xml.parsers.expat.xmlparser attribute)": [[296, "xml.parsers.expat.xmlparser.CurrentColumnNumber"]], "currentlinenumber (xml.parsers.expat.xmlparser attribute)": [[296, "xml.parsers.expat.xmlparser.CurrentLineNumber"]], "defaulthandler() (xml.parsers.expat.xmlparser method)": [[296, "xml.parsers.expat.xmlparser.DefaultHandler"]], "defaulthandlerexpand() (xml.parsers.expat.xmlparser method)": [[296, "xml.parsers.expat.xmlparser.DefaultHandlerExpand"]], "elementdeclhandler() (xml.parsers.expat.xmlparser method)": [[296, "xml.parsers.expat.xmlparser.ElementDeclHandler"]], "endcdatasectionhandler() (xml.parsers.expat.xmlparser method)": [[296, "xml.parsers.expat.xmlparser.EndCdataSectionHandler"]], "enddoctypedeclhandler() (xml.parsers.expat.xmlparser method)": [[296, "xml.parsers.expat.xmlparser.EndDoctypeDeclHandler"]], "endelementhandler() (xml.parsers.expat.xmlparser method)": [[296, "xml.parsers.expat.xmlparser.EndElementHandler"]], "endnamespacedeclhandler() (xml.parsers.expat.xmlparser method)": [[296, "xml.parsers.expat.xmlparser.EndNamespaceDeclHandler"]], "entitydeclhandler() (xml.parsers.expat.xmlparser method)": [[296, "xml.parsers.expat.xmlparser.EntityDeclHandler"]], "errorbyteindex (xml.parsers.expat.xmlparser attribute)": [[296, "xml.parsers.expat.xmlparser.ErrorByteIndex"]], "errorcode (xml.parsers.expat.xmlparser attribute)": [[296, "xml.parsers.expat.xmlparser.ErrorCode"]], "errorcolumnnumber (xml.parsers.expat.xmlparser attribute)": [[296, "xml.parsers.expat.xmlparser.ErrorColumnNumber"]], "errorlinenumber (xml.parsers.expat.xmlparser attribute)": [[296, "xml.parsers.expat.xmlparser.ErrorLineNumber"]], "errorstring() (in module xml.parsers.expat)": [[296, "xml.parsers.expat.ErrorString"]], "expat": [[296, "index-0"]], "expaterror": [[296, "xml.parsers.expat.ExpatError"]], "externalentityparsercreate() (xml.parsers.expat.xmlparser method)": [[296, "xml.parsers.expat.xmlparser.ExternalEntityParserCreate"]], "externalentityrefhandler() (xml.parsers.expat.xmlparser method)": [[296, "xml.parsers.expat.xmlparser.ExternalEntityRefHandler"]], "getbase() (xml.parsers.expat.xmlparser method)": [[296, "xml.parsers.expat.xmlparser.GetBase"]], "getinputcontext() (xml.parsers.expat.xmlparser method)": [[296, "xml.parsers.expat.xmlparser.GetInputContext"]], "notstandalonehandler() (xml.parsers.expat.xmlparser method)": [[296, "xml.parsers.expat.xmlparser.NotStandaloneHandler"]], "notationdeclhandler() (xml.parsers.expat.xmlparser method)": [[296, "xml.parsers.expat.xmlparser.NotationDeclHandler"]], "parse() (xml.parsers.expat.xmlparser method)": [[296, "xml.parsers.expat.xmlparser.Parse"]], "parsefile() (xml.parsers.expat.xmlparser method)": [[296, "xml.parsers.expat.xmlparser.ParseFile"]], "parsercreate() (in module xml.parsers.expat)": [[296, "xml.parsers.expat.ParserCreate"]], "processinginstructionhandler() (xml.parsers.expat.xmlparser method)": [[296, "xml.parsers.expat.xmlparser.ProcessingInstructionHandler"]], "setbase() (xml.parsers.expat.xmlparser method)": [[296, "xml.parsers.expat.xmlparser.SetBase"]], "setparamentityparsing() (xml.parsers.expat.xmlparser method)": [[296, "xml.parsers.expat.xmlparser.SetParamEntityParsing"]], "startcdatasectionhandler() (xml.parsers.expat.xmlparser method)": [[296, "xml.parsers.expat.xmlparser.StartCdataSectionHandler"]], "startdoctypedeclhandler() (xml.parsers.expat.xmlparser method)": [[296, "xml.parsers.expat.xmlparser.StartDoctypeDeclHandler"]], "startelementhandler() (xml.parsers.expat.xmlparser method)": [[296, "xml.parsers.expat.xmlparser.StartElementHandler"]], "startnamespacedeclhandler() (xml.parsers.expat.xmlparser method)": [[296, "xml.parsers.expat.xmlparser.StartNamespaceDeclHandler"]], "unparsedentitydeclhandler() (xml.parsers.expat.xmlparser method)": [[296, "xml.parsers.expat.xmlparser.UnparsedEntityDeclHandler"]], "useforeigndtd() (xml.parsers.expat.xmlparser method)": [[296, "xml.parsers.expat.xmlparser.UseForeignDTD"]], "xmlparsertype (in module xml.parsers.expat)": [[296, "xml.parsers.expat.XMLParserType"]], "xml_error_aborted (in module xml.parsers.expat.errors)": [[296, "xml.parsers.expat.errors.XML_ERROR_ABORTED"]], "xml_error_amplification_limit_breach (in module xml.parsers.expat.errors)": [[296, "xml.parsers.expat.errors.XML_ERROR_AMPLIFICATION_LIMIT_BREACH"]], "xml_error_async_entity (in module xml.parsers.expat.errors)": [[296, "xml.parsers.expat.errors.XML_ERROR_ASYNC_ENTITY"]], "xml_error_attribute_external_entity_ref (in module xml.parsers.expat.errors)": [[296, "xml.parsers.expat.errors.XML_ERROR_ATTRIBUTE_EXTERNAL_ENTITY_REF"]], "xml_error_bad_char_ref (in module xml.parsers.expat.errors)": [[296, "xml.parsers.expat.errors.XML_ERROR_BAD_CHAR_REF"]], "xml_error_binary_entity_ref (in module xml.parsers.expat.errors)": [[296, "xml.parsers.expat.errors.XML_ERROR_BINARY_ENTITY_REF"]], "xml_error_cant_change_feature_once_parsing (in module xml.parsers.expat.errors)": [[296, "xml.parsers.expat.errors.XML_ERROR_CANT_CHANGE_FEATURE_ONCE_PARSING"]], "xml_error_duplicate_attribute (in module xml.parsers.expat.errors)": [[296, "xml.parsers.expat.errors.XML_ERROR_DUPLICATE_ATTRIBUTE"]], "xml_error_entity_declared_in_pe (in module xml.parsers.expat.errors)": [[296, "xml.parsers.expat.errors.XML_ERROR_ENTITY_DECLARED_IN_PE"]], "xml_error_external_entity_handling (in module xml.parsers.expat.errors)": [[296, "xml.parsers.expat.errors.XML_ERROR_EXTERNAL_ENTITY_HANDLING"]], "xml_error_feature_requires_xml_dtd (in module xml.parsers.expat.errors)": [[296, "xml.parsers.expat.errors.XML_ERROR_FEATURE_REQUIRES_XML_DTD"]], "xml_error_finished (in module xml.parsers.expat.errors)": [[296, "xml.parsers.expat.errors.XML_ERROR_FINISHED"]], "xml_error_incomplete_pe (in module xml.parsers.expat.errors)": [[296, "xml.parsers.expat.errors.XML_ERROR_INCOMPLETE_PE"]], "xml_error_incorrect_encoding (in module xml.parsers.expat.errors)": [[296, "xml.parsers.expat.errors.XML_ERROR_INCORRECT_ENCODING"]], "xml_error_invalid_argument (in module xml.parsers.expat.errors)": [[296, "xml.parsers.expat.errors.XML_ERROR_INVALID_ARGUMENT"]], "xml_error_invalid_token (in module xml.parsers.expat.errors)": [[296, "xml.parsers.expat.errors.XML_ERROR_INVALID_TOKEN"]], "xml_error_junk_after_doc_element (in module xml.parsers.expat.errors)": [[296, "xml.parsers.expat.errors.XML_ERROR_JUNK_AFTER_DOC_ELEMENT"]], "xml_error_misplaced_xml_pi (in module xml.parsers.expat.errors)": [[296, "xml.parsers.expat.errors.XML_ERROR_MISPLACED_XML_PI"]], "xml_error_not_standalone (in module xml.parsers.expat.errors)": [[296, "xml.parsers.expat.errors.XML_ERROR_NOT_STANDALONE"]], "xml_error_not_suspended (in module xml.parsers.expat.errors)": [[296, "xml.parsers.expat.errors.XML_ERROR_NOT_SUSPENDED"]], "xml_error_no_buffer (in module xml.parsers.expat.errors)": [[296, "xml.parsers.expat.errors.XML_ERROR_NO_BUFFER"]], "xml_error_no_elements (in module xml.parsers.expat.errors)": [[296, "xml.parsers.expat.errors.XML_ERROR_NO_ELEMENTS"]], "xml_error_no_memory (in module xml.parsers.expat.errors)": [[296, "xml.parsers.expat.errors.XML_ERROR_NO_MEMORY"]], "xml_error_param_entity_ref (in module xml.parsers.expat.errors)": [[296, "xml.parsers.expat.errors.XML_ERROR_PARAM_ENTITY_REF"]], "xml_error_partial_char (in module xml.parsers.expat.errors)": [[296, "xml.parsers.expat.errors.XML_ERROR_PARTIAL_CHAR"]], "xml_error_publicid (in module xml.parsers.expat.errors)": [[296, "xml.parsers.expat.errors.XML_ERROR_PUBLICID"]], "xml_error_recursive_entity_ref (in module xml.parsers.expat.errors)": [[296, "xml.parsers.expat.errors.XML_ERROR_RECURSIVE_ENTITY_REF"]], "xml_error_reserved_namespace_uri (in module xml.parsers.expat.errors)": [[296, "xml.parsers.expat.errors.XML_ERROR_RESERVED_NAMESPACE_URI"]], "xml_error_reserved_prefix_xml (in module xml.parsers.expat.errors)": [[296, "xml.parsers.expat.errors.XML_ERROR_RESERVED_PREFIX_XML"]], "xml_error_reserved_prefix_xmlns (in module xml.parsers.expat.errors)": [[296, "xml.parsers.expat.errors.XML_ERROR_RESERVED_PREFIX_XMLNS"]], "xml_error_suspended (in module xml.parsers.expat.errors)": [[296, "xml.parsers.expat.errors.XML_ERROR_SUSPENDED"]], "xml_error_suspend_pe (in module xml.parsers.expat.errors)": [[296, "xml.parsers.expat.errors.XML_ERROR_SUSPEND_PE"]], "xml_error_syntax (in module xml.parsers.expat.errors)": [[296, "xml.parsers.expat.errors.XML_ERROR_SYNTAX"]], "xml_error_tag_mismatch (in module xml.parsers.expat.errors)": [[296, "xml.parsers.expat.errors.XML_ERROR_TAG_MISMATCH"]], "xml_error_text_decl (in module xml.parsers.expat.errors)": [[296, "xml.parsers.expat.errors.XML_ERROR_TEXT_DECL"]], "xml_error_unbound_prefix (in module xml.parsers.expat.errors)": [[296, "xml.parsers.expat.errors.XML_ERROR_UNBOUND_PREFIX"]], "xml_error_unclosed_cdata_section (in module xml.parsers.expat.errors)": [[296, "xml.parsers.expat.errors.XML_ERROR_UNCLOSED_CDATA_SECTION"]], "xml_error_unclosed_token (in module xml.parsers.expat.errors)": [[296, "xml.parsers.expat.errors.XML_ERROR_UNCLOSED_TOKEN"]], "xml_error_undeclaring_prefix (in module xml.parsers.expat.errors)": [[296, "xml.parsers.expat.errors.XML_ERROR_UNDECLARING_PREFIX"]], "xml_error_undefined_entity (in module xml.parsers.expat.errors)": [[296, "xml.parsers.expat.errors.XML_ERROR_UNDEFINED_ENTITY"]], "xml_error_unexpected_state (in module xml.parsers.expat.errors)": [[296, "xml.parsers.expat.errors.XML_ERROR_UNEXPECTED_STATE"]], "xml_error_unknown_encoding (in module xml.parsers.expat.errors)": [[296, "xml.parsers.expat.errors.XML_ERROR_UNKNOWN_ENCODING"]], "xml_error_xml_decl (in module xml.parsers.expat.errors)": [[296, "xml.parsers.expat.errors.XML_ERROR_XML_DECL"]], "xmldeclhandler() (xml.parsers.expat.xmlparser method)": [[296, "xml.parsers.expat.xmlparser.XmlDeclHandler"]], "buffer_size (xml.parsers.expat.xmlparser attribute)": [[296, "xml.parsers.expat.xmlparser.buffer_size"]], "buffer_text (xml.parsers.expat.xmlparser attribute)": [[296, "xml.parsers.expat.xmlparser.buffer_text"]], "buffer_used (xml.parsers.expat.xmlparser attribute)": [[296, "xml.parsers.expat.xmlparser.buffer_used"]], "code (xml.parsers.expat.expaterror attribute)": [[296, "xml.parsers.expat.ExpatError.code"]], "codes (in module xml.parsers.expat.errors)": [[296, "xml.parsers.expat.errors.codes"]], "lineno (xml.parsers.expat.expaterror attribute)": [[296, "xml.parsers.expat.ExpatError.lineno"]], "messages (in module xml.parsers.expat.errors)": [[296, "xml.parsers.expat.errors.messages"]], "offset (xml.parsers.expat.expaterror attribute)": [[296, "xml.parsers.expat.ExpatError.offset"]], "ordered_attributes (xml.parsers.expat.xmlparser attribute)": [[296, "xml.parsers.expat.xmlparser.ordered_attributes"]], "pyexpat": [[296, "index-1"]], "specified_attributes (xml.parsers.expat.xmlparser attribute)": [[296, "xml.parsers.expat.xmlparser.specified_attributes"]], "xml.parsers.expat": [[296, "module-xml.parsers.expat"]], "xml.parsers.expat.errors": [[296, "module-xml.parsers.expat.errors"]], "xml.parsers.expat.model": [[296, "module-xml.parsers.expat.model"]], "empty": [[298, "queue.Empty"], [403, "index-20"], [405, "index-15"], [405, "index-9"]], "full": [[298, "queue.Full"]], "lifoqueue (class in queue)": [[298, "queue.LifoQueue"]], "priorityqueue (class in queue)": [[298, "queue.PriorityQueue"]], "queue (class in queue)": [[298, "queue.Queue"]], "simplequeue (class in queue)": [[298, "queue.SimpleQueue"]], "empty() (queue.queue method)": [[298, "queue.Queue.empty"]], "empty() (queue.simplequeue method)": [[298, "queue.SimpleQueue.empty"]], "full() (queue.queue method)": [[298, "queue.Queue.full"]], "get() (queue.queue method)": [[298, "queue.Queue.get"]], "get() (queue.simplequeue method)": [[298, "queue.SimpleQueue.get"]], "get_nowait() (queue.queue method)": [[298, "queue.Queue.get_nowait"]], "get_nowait() (queue.simplequeue method)": [[298, "queue.SimpleQueue.get_nowait"]], "join() (queue.queue method)": [[298, "queue.Queue.join"]], "put() (queue.queue method)": [[298, "queue.Queue.put"]], "put() (queue.simplequeue method)": [[298, "queue.SimpleQueue.put"]], "put_nowait() (queue.queue method)": [[298, "queue.Queue.put_nowait"]], "put_nowait() (queue.simplequeue method)": [[298, "queue.SimpleQueue.put_nowait"]], "qsize() (queue.queue method)": [[298, "queue.Queue.qsize"]], "qsize() (queue.simplequeue method)": [[298, "queue.SimpleQueue.qsize"]], "queue": [[298, "module-queue"]], "task_done() (queue.queue method)": [[298, "queue.Queue.task_done"]], "decode() (in module quopri)": [[299, "quopri.decode"]], "decodestring() (in module quopri)": [[299, "quopri.decodestring"]], "encode() (in module quopri)": [[299, "quopri.encode"]], "encodestring() (in module quopri)": [[299, "quopri.encodestring"]], "quopri": [[299, "module-quopri"]], "quoted-printable": [[299, "index-0"]], "quoted-printable encoding": [[299, "index-0"]], "random (class in random)": [[300, "random.Random"]], "systemrandom (class in random)": [[300, "random.SystemRandom"]], "betavariate() (in module random)": [[300, "random.betavariate"]], "binomialvariate() (in module random)": [[300, "random.binomialvariate"]], "choice() (in module random)": [[300, "random.choice"]], "choices() (in module random)": [[300, "random.choices"]], "expovariate() (in module random)": [[300, "random.expovariate"]], "gammavariate() (in module random)": [[300, "random.gammavariate"]], "gauss() (in module random)": [[300, "random.gauss"]], "getrandbits() (in module random)": [[300, "random.getrandbits"]], "getstate() (in module random)": [[300, "random.getstate"]], "lognormvariate() (in module random)": [[300, "random.lognormvariate"]], "normalvariate() (in module random)": [[300, "random.normalvariate"]], "paretovariate() (in module random)": [[300, "random.paretovariate"]], "randbytes() (in module random)": [[300, "random.randbytes"]], "randint() (in module random)": [[300, "random.randint"]], "random": [[300, "module-random"]], "random() (in module random)": [[300, "random.random"]], "randrange() (in module random)": [[300, "random.randrange"]], "sample() (in module random)": [[300, "random.sample"]], "seed() (in module random)": [[300, "random.seed"]], "setstate() (in module random)": [[300, "random.setstate"]], "shuffle() (in module random)": [[300, "random.shuffle"]], "triangular() (in module random)": [[300, "random.triangular"]], "uniform() (in module random)": [[300, "random.uniform"]], "vonmisesvariate() (in module random)": [[300, "random.vonmisesvariate"]], "weibullvariate() (in module random)": [[300, "random.weibullvariate"]], "() (parentheses)": [[301, "index-15"], [324, "index-36"], [324, "index-46"], [402, "index-28"], [402, "index-40"], [405, "index-22"], [405, "index-47"], [405, "index-8"], [411, "index-6"]], "(?": [[301, "index-16"]], "(?!": [[301, "index-22"]], "(?#": [[301, "index-20"]], "(?(": [[301, "index-25"]], "(?:": [[301, "index-17"]], "(?<!": [[301, "index-24"]], "(?<=": [[301, "index-23"]], "(?=": [[301, "index-21"]], "(?p<": [[301, "index-18"]], "(?p=": [[301, "index-19"]], "*+": [[301, "index-7"]], "*?": [[301, "index-6"]], "++": [[301, "index-7"]], "+?": [[301, "index-6"]], "?+": [[301, "index-7"]], "??": [[301, "index-6"]], "a (in module re)": [[301, "re.A"]], "ascii (in module re)": [[301, "re.ASCII"]], "debug (in module re)": [[301, "re.DEBUG"]], "dotall (in module re)": [[301, "re.DOTALL"]], "i (in module re)": [[301, "re.I"]], "ignorecase (in module re)": [[301, "re.IGNORECASE"]], "l (in module re)": [[301, "re.L"]], "locale (in module re)": [[301, "re.LOCALE"]], "m (in module re)": [[301, "re.M"]], "multiline (in module re)": [[301, "re.MULTILINE"]], "match (class in re)": [[301, "re.Match"]], "noflag (in module re)": [[301, "re.NOFLAG"]], "pattern (class in re)": [[301, "re.Pattern"]], "regexflag (class in re)": [[301, "re.RegexFlag"]], "s (in module re)": [[301, "re.S"]], "u (in module re)": [[301, "re.U"]], "unicode (in module re)": [[301, "re.UNICODE"]], "verbose (in module re)": [[301, "re.VERBOSE"]], "x (in module re)": [[301, "re.X"]], "\\a": [[301, "index-27"], [301, "index-37"], [410, "index-23"]], "\\b": [[301, "index-29"], [301, "index-28"], [301, "index-37"], [410, "index-23"]], "\\d": [[301, "index-31"], [301, "index-30"]], "\\s": [[301, "index-33"], [301, "index-32"]], "\\w": [[301, "index-35"], [301, "index-34"]], "\\z": [[301, "index-36"]], "\\\\": [[301, "index-37"], [410, "index-23"]], "\\f": [[301, "index-37"], [410, "index-23"]], "\\g": [[301, "index-39"]], "\\r": [[301, "index-37"], [410, "index-23"]], "\\t": [[301, "index-37"], [410, "index-23"]], "\\v": [[301, "index-37"], [410, "index-23"]], "__getitem__() (re.match method)": [[301, "re.Match.__getitem__"]], "colno (re.error attribute)": [[301, "re.error.colno"]], "compile() (in module re)": [[301, "re.compile"]], "end() (re.match method)": [[301, "re.Match.end"]], "endpos (re.match attribute)": [[301, "re.Match.endpos"]], "escape() (in module re)": [[301, "re.escape"]], "expand() (re.match method)": [[301, "re.Match.expand"]], "findall() (in module re)": [[301, "re.findall"]], "findall() (re.pattern method)": [[301, "re.Pattern.findall"]], "finditer() (in module re)": [[301, "re.finditer"]], "finditer() (re.pattern method)": [[301, "re.Pattern.finditer"]], "flags (re.pattern attribute)": [[301, "re.Pattern.flags"]], "fullmatch() (in module re)": [[301, "re.fullmatch"]], "fullmatch() (re.pattern method)": [[301, "re.Pattern.fullmatch"]], "group() (re.match method)": [[301, "re.Match.group"]], "groupdict() (re.match method)": [[301, "re.Match.groupdict"]], "groupindex (re.pattern attribute)": [[301, "re.Pattern.groupindex"]], "groups (re.pattern attribute)": [[301, "re.Pattern.groups"]], "groups() (re.match method)": [[301, "re.Match.groups"]], "in regular expressions": [[301, "index-0"], [301, "index-1"], [301, "index-10"], [301, "index-11"], [301, "index-12"], [301, "index-13"], [301, "index-14"], [301, "index-15"], [301, "index-16"], [301, "index-17"], [301, "index-18"], [301, "index-19"], [301, "index-2"], [301, "index-20"], [301, "index-21"], [301, "index-22"], [301, "index-23"], [301, "index-24"], [301, "index-25"], [301, "index-26"], [301, "index-27"], [301, "index-28"], [301, "index-29"], [301, "index-3"], [301, "index-30"], [301, "index-31"], [301, "index-32"], [301, "index-33"], [301, "index-34"], [301, "index-35"], [301, "index-36"], [301, "index-37"], [301, "index-38"], [301, "index-39"], [301, "index-4"], [301, "index-5"], [301, "index-6"], [301, "index-7"], [301, "index-8"], [301, "index-9"]], "lastgroup (re.match attribute)": [[301, "re.Match.lastgroup"]], "lastindex (re.match attribute)": [[301, "re.Match.lastindex"]], "lineno (re.error attribute)": [[301, "re.error.lineno"]], "match() (in module re)": [[301, "re.match"]], "match() (re.pattern method)": [[301, "re.Pattern.match"]], "msg (re.error attribute)": [[301, "re.error.msg"]], "pattern (re.pattern attribute)": [[301, "re.Pattern.pattern"]], "pattern (re.error attribute)": [[301, "re.error.pattern"]], "pos (re.match attribute)": [[301, "re.Match.pos"]], "pos (re.error attribute)": [[301, "re.error.pos"]], "purge() (in module re)": [[301, "re.purge"]], "re (re.match attribute)": [[301, "re.Match.re"]], "scanf()": [[301, "index-40"]], "search() (in module re)": [[301, "re.search"]], "search() (re.pattern method)": [[301, "re.Pattern.search"]], "span() (re.match method)": [[301, "re.Match.span"]], "split() (in module re)": [[301, "re.split"]], "split() (re.pattern method)": [[301, "re.Pattern.split"]], "start() (re.match method)": [[301, "re.Match.start"]], "string (re.match attribute)": [[301, "re.Match.string"]], "sub() (in module re)": [[301, "re.sub"]], "sub() (re.pattern method)": [[301, "re.Pattern.sub"]], "subn() (in module re)": [[301, "re.subn"]], "subn() (re.pattern method)": [[301, "re.Pattern.subn"]], "{} (curly brackets)": [[301, "index-8"], [325, "index-2"], [405, "index-16"], [405, "index-17"], [410, "index-25"]], "| (vertical bar)": [[301, "index-14"], [324, "index-16"], [405, "index-76"]], "add_history() (in module readline)": [[302, "readline.add_history"]], "append_history_file() (in module readline)": [[302, "readline.append_history_file"]], "clear_history() (in module readline)": [[302, "readline.clear_history"]], "get_begidx() (in module readline)": [[302, "readline.get_begidx"]], "get_completer() (in module readline)": [[302, "readline.get_completer"]], "get_completer_delims() (in module readline)": [[302, "readline.get_completer_delims"]], "get_completion_type() (in module readline)": [[302, "readline.get_completion_type"]], "get_current_history_length() (in module readline)": [[302, "readline.get_current_history_length"]], "get_endidx() (in module readline)": [[302, "readline.get_endidx"]], "get_history_item() (in module readline)": [[302, "readline.get_history_item"]], "get_history_length() (in module readline)": [[302, "readline.get_history_length"]], "get_line_buffer() (in module readline)": [[302, "readline.get_line_buffer"]], "insert_text() (in module readline)": [[302, "readline.insert_text"]], "parse_and_bind() (in module readline)": [[302, "readline.parse_and_bind"]], "read_history_file() (in module readline)": [[302, "readline.read_history_file"]], "read_init_file() (in module readline)": [[302, "readline.read_init_file"]], "readline": [[302, "module-readline"]], "redisplay() (in module readline)": [[302, "readline.redisplay"]], "remove_history_item() (in module readline)": [[302, "readline.remove_history_item"]], "replace_history_item() (in module readline)": [[302, "readline.replace_history_item"]], "set_auto_history() (in module readline)": [[302, "readline.set_auto_history"]], "set_completer() (in module readline)": [[302, "readline.set_completer"]], "set_completer_delims() (in module readline)": [[302, "readline.set_completer_delims"]], "set_completion_display_matches_hook() (in module readline)": [[302, "readline.set_completion_display_matches_hook"]], "set_history_length() (in module readline)": [[302, "readline.set_history_length"]], "set_pre_input_hook() (in module readline)": [[302, "readline.set_pre_input_hook"]], "set_startup_hook() (in module readline)": [[302, "readline.set_startup_hook"]], "write_history_file() (in module readline)": [[302, "readline.write_history_file"]], "repr (class in reprlib)": [[303, "reprlib.Repr"]], "arepr (in module reprlib)": [[303, "reprlib.aRepr"]], "fillvalue (reprlib.repr attribute)": [[303, "reprlib.Repr.fillvalue"]], "indent (reprlib.repr attribute)": [[303, "reprlib.Repr.indent"]], "maxarray (reprlib.repr attribute)": [[303, "reprlib.Repr.maxarray"]], "maxdeque (reprlib.repr attribute)": [[303, "reprlib.Repr.maxdeque"]], "maxdict (reprlib.repr attribute)": [[303, "reprlib.Repr.maxdict"]], "maxfrozenset (reprlib.repr attribute)": [[303, "reprlib.Repr.maxfrozenset"]], "maxlevel (reprlib.repr attribute)": [[303, "reprlib.Repr.maxlevel"]], "maxlist (reprlib.repr attribute)": [[303, "reprlib.Repr.maxlist"]], "maxlong (reprlib.repr attribute)": [[303, "reprlib.Repr.maxlong"]], "maxother (reprlib.repr attribute)": [[303, "reprlib.Repr.maxother"]], "maxset (reprlib.repr attribute)": [[303, "reprlib.Repr.maxset"]], "maxstring (reprlib.repr attribute)": [[303, "reprlib.Repr.maxstring"]], "maxtuple (reprlib.repr attribute)": [[303, "reprlib.Repr.maxtuple"]], "recursive_repr() (in module reprlib)": [[303, "reprlib.recursive_repr"]], "repr() (in module reprlib)": [[303, "reprlib.repr"]], "repr() (reprlib.repr method)": [[303, "reprlib.Repr.repr"]], "repr1() (reprlib.repr method)": [[303, "reprlib.Repr.repr1"]], "reprlib": [[303, "module-reprlib"]], "rlimit_as (in module resource)": [[304, "resource.RLIMIT_AS"]], "rlimit_core (in module resource)": [[304, "resource.RLIMIT_CORE"]], "rlimit_cpu (in module resource)": [[304, "resource.RLIMIT_CPU"]], "rlimit_data (in module resource)": [[304, "resource.RLIMIT_DATA"]], "rlimit_fsize (in module resource)": [[304, "resource.RLIMIT_FSIZE"]], "rlimit_kqueues (in module resource)": [[304, "resource.RLIMIT_KQUEUES"]], "rlimit_memlock (in module resource)": [[304, "resource.RLIMIT_MEMLOCK"]], "rlimit_msgqueue (in module resource)": [[304, "resource.RLIMIT_MSGQUEUE"]], "rlimit_nice (in module resource)": [[304, "resource.RLIMIT_NICE"]], "rlimit_nofile (in module resource)": [[304, "resource.RLIMIT_NOFILE"]], "rlimit_nproc (in module resource)": [[304, "resource.RLIMIT_NPROC"]], "rlimit_npts (in module resource)": [[304, "resource.RLIMIT_NPTS"]], "rlimit_ofile (in module resource)": [[304, "resource.RLIMIT_OFILE"]], "rlimit_rss (in module resource)": [[304, "resource.RLIMIT_RSS"]], "rlimit_rtprio (in module resource)": [[304, "resource.RLIMIT_RTPRIO"]], "rlimit_rttime (in module resource)": [[304, "resource.RLIMIT_RTTIME"]], "rlimit_sbsize (in module resource)": [[304, "resource.RLIMIT_SBSIZE"]], "rlimit_sigpending (in module resource)": [[304, "resource.RLIMIT_SIGPENDING"]], "rlimit_stack (in module resource)": [[304, "resource.RLIMIT_STACK"]], "rlimit_swap (in module resource)": [[304, "resource.RLIMIT_SWAP"]], "rlimit_vmem (in module resource)": [[304, "resource.RLIMIT_VMEM"]], "rlim_infinity (in module resource)": [[304, "resource.RLIM_INFINITY"]], "rusage_both (in module resource)": [[304, "resource.RUSAGE_BOTH"]], "rusage_children (in module resource)": [[304, "resource.RUSAGE_CHILDREN"]], "rusage_self (in module resource)": [[304, "resource.RUSAGE_SELF"]], "rusage_thread (in module resource)": [[304, "resource.RUSAGE_THREAD"]], "getpagesize() (in module resource)": [[304, "resource.getpagesize"]], "getrlimit() (in module resource)": [[304, "resource.getrlimit"]], "getrusage() (in module resource)": [[304, "resource.getrusage"]], "prlimit() (in module resource)": [[304, "resource.prlimit"]], "resource": [[304, "module-resource"]], "setrlimit() (in module resource)": [[304, "resource.setrlimit"]], "complete() (rlcompleter.completer method)": [[305, "rlcompleter.Completer.complete"]], "rlcompleter": [[305, "module-rlcompleter"]], "pep 338": [[306, "index-6"], [407, "index-25"], [430, "index-1"], [442, "index-7"]], "run_module() (in module runpy)": [[306, "runpy.run_module"]], "run_path() (in module runpy)": [[306, "runpy.run_path"]], "runpy": [[306, "module-runpy"]], "cancel() (sched.scheduler method)": [[307, "sched.scheduler.cancel"]], "empty() (sched.scheduler method)": [[307, "sched.scheduler.empty"]], "enter() (sched.scheduler method)": [[307, "sched.scheduler.enter"]], "enterabs() (sched.scheduler method)": [[307, "sched.scheduler.enterabs"]], "event scheduling": [[307, "index-0"]], "queue (sched.scheduler attribute)": [[307, "sched.scheduler.queue"]], "run() (sched.scheduler method)": [[307, "sched.scheduler.run"]], "sched": [[307, "module-sched"]], "scheduler (class in sched)": [[307, "sched.scheduler"]], "pep 506": [[308, "index-0"], [455, "index-28"]], "systemrandom (class in secrets)": [[308, "secrets.SystemRandom"]], "choice() (in module secrets)": [[308, "secrets.choice"]], "compare_digest() (in module secrets)": [[308, "secrets.compare_digest"]], "randbelow() (in module secrets)": [[308, "secrets.randbelow"]], "randbits() (in module secrets)": [[308, "secrets.randbits"]], "secrets": [[308, "module-secrets"]], "token_bytes() (in module secrets)": [[308, "secrets.token_bytes"]], "token_hex() (in module secrets)": [[308, "secrets.token_hex"]], "token_urlsafe() (in module secrets)": [[308, "secrets.token_urlsafe"]], "security considerations": [[309, "index-0"]], "pipe_buf (in module select)": [[310, "select.PIPE_BUF"]], "winsock": [[310, "index-2"]], "close() (select.devpoll method)": [[310, "select.devpoll.close"]], "close() (select.epoll method)": [[310, "select.epoll.close"]], "close() (select.kqueue method)": [[310, "select.kqueue.close"]], "closed (select.devpoll attribute)": [[310, "select.devpoll.closed"]], "closed (select.epoll attribute)": [[310, "select.epoll.closed"]], "closed (select.kqueue attribute)": [[310, "select.kqueue.closed"]], "control() (select.kqueue method)": [[310, "select.kqueue.control"]], "data (select.kevent attribute)": [[310, "select.kevent.data"]], "devpoll() (in module select)": [[310, "select.devpoll"]], "epoll() (in module select)": [[310, "select.epoll"]], "fflags (select.kevent attribute)": [[310, "select.kevent.fflags"]], "fileno() (select.devpoll method)": [[310, "select.devpoll.fileno"]], "fileno() (select.epoll method)": [[310, "select.epoll.fileno"]], "fileno() (select.kqueue method)": [[310, "select.kqueue.fileno"]], "filter (select.kevent attribute)": [[310, "select.kevent.filter"]], "flags (select.kevent attribute)": [[310, "select.kevent.flags"]], "fromfd() (select.epoll method)": [[310, "select.epoll.fromfd"]], "fromfd() (select.kqueue method)": [[310, "select.kqueue.fromfd"]], "ident (select.kevent attribute)": [[310, "select.kevent.ident"]], "kevent() (in module select)": [[310, "select.kevent"]], "kqueue() (in module select)": [[310, "select.kqueue"]], "modify() (select.devpoll method)": [[310, "select.devpoll.modify"]], "modify() (select.epoll method)": [[310, "select.epoll.modify"]], "modify() (select.poll method)": [[310, "select.poll.modify"]], "poll() (in module select)": [[310, "select.poll"]], "poll() (select.devpoll method)": [[310, "select.devpoll.poll"]], "poll() (select.epoll method)": [[310, "select.epoll.poll"]], "poll() (select.poll method)": [[310, "select.poll.poll"]], "register() (select.devpoll method)": [[310, "select.devpoll.register"]], "register() (select.epoll method)": [[310, "select.epoll.register"]], "register() (select.poll method)": [[310, "select.poll.register"]], "select": [[310, "module-select"]], "select() (in module select)": [[310, "select.select"]], "socket() (in module socket)": [[310, "index-1"]], "udata (select.kevent attribute)": [[310, "select.kevent.udata"]], "unregister() (select.devpoll method)": [[310, "select.devpoll.unregister"]], "unregister() (select.epoll method)": [[310, "select.epoll.unregister"]], "unregister() (select.poll method)": [[310, "select.poll.unregister"]], "baseselector (class in selectors)": [[311, "selectors.BaseSelector"]], "defaultselector (class in selectors)": [[311, "selectors.DefaultSelector"]], "devpollselector (class in selectors)": [[311, "selectors.DevpollSelector"]], "event_read (in module selectors)": [[311, "selectors.EVENT_READ"]], "event_write (in module selectors)": [[311, "selectors.EVENT_WRITE"]], "epollselector (class in selectors)": [[311, "selectors.EpollSelector"]], "kqueueselector (class in selectors)": [[311, "selectors.KqueueSelector"]], "pollselector (class in selectors)": [[311, "selectors.PollSelector"]], "selectselector (class in selectors)": [[311, "selectors.SelectSelector"]], "selectorkey (class in selectors)": [[311, "selectors.SelectorKey"]], "close() (selectors.baseselector method)": [[311, "selectors.BaseSelector.close"]], "data (selectors.selectorkey attribute)": [[311, "selectors.SelectorKey.data"]], "events (selectors.selectorkey attribute)": [[311, "selectors.SelectorKey.events"]], "fd (selectors.selectorkey attribute)": [[311, "selectors.SelectorKey.fd"]], "fileno() (selectors.devpollselector method)": [[311, "selectors.DevpollSelector.fileno"]], "fileno() (selectors.epollselector method)": [[311, "selectors.EpollSelector.fileno"]], "fileno() (selectors.kqueueselector method)": [[311, "selectors.KqueueSelector.fileno"]], "fileobj (selectors.selectorkey attribute)": [[311, "selectors.SelectorKey.fileobj"]], "get_key() (selectors.baseselector method)": [[311, "selectors.BaseSelector.get_key"]], "get_map() (selectors.baseselector method)": [[311, "selectors.BaseSelector.get_map"]], "modify() (selectors.baseselector method)": [[311, "selectors.BaseSelector.modify"]], "register() (selectors.baseselector method)": [[311, "selectors.BaseSelector.register"]], "select() (selectors.baseselector method)": [[311, "selectors.BaseSelector.select"]], "selectors": [[311, "module-selectors"]], "unregister() (selectors.baseselector method)": [[311, "selectors.BaseSelector.unregister"]], "bsddbshelf (class in shelve)": [[312, "shelve.BsdDbShelf"]], "dbfilenameshelf (class in shelve)": [[312, "shelve.DbfilenameShelf"]], "shelf (class in shelve)": [[312, "shelve.Shelf"]], "close() (shelve.shelf method)": [[312, "shelve.Shelf.close"]], "open() (in module shelve)": [[312, "shelve.open"]], "sync() (shelve.shelf method)": [[312, "shelve.Shelf.sync"]], "commenters (shlex.shlex attribute)": [[313, "shlex.shlex.commenters"]], "debug (shlex.shlex attribute)": [[313, "shlex.shlex.debug"]], "eof (shlex.shlex attribute)": [[313, "shlex.shlex.eof"]], "error_leader() (shlex.shlex method)": [[313, "shlex.shlex.error_leader"]], "escape (shlex.shlex attribute)": [[313, "shlex.shlex.escape"]], "escapedquotes (shlex.shlex attribute)": [[313, "shlex.shlex.escapedquotes"]], "get_token() (shlex.shlex method)": [[313, "shlex.shlex.get_token"]], "infile (shlex.shlex attribute)": [[313, "shlex.shlex.infile"]], "instream (shlex.shlex attribute)": [[313, "shlex.shlex.instream"]], "join() (in module shlex)": [[313, "shlex.join"]], "lineno (shlex.shlex attribute)": [[313, "shlex.shlex.lineno"]], "pop_source() (shlex.shlex method)": [[313, "shlex.shlex.pop_source"]], "punctuation_chars (shlex.shlex attribute)": [[313, "shlex.shlex.punctuation_chars"]], "push_source() (shlex.shlex method)": [[313, "shlex.shlex.push_source"]], "push_token() (shlex.shlex method)": [[313, "shlex.shlex.push_token"]], "quote() (in module shlex)": [[313, "shlex.quote"]], "quotes (shlex.shlex attribute)": [[313, "shlex.shlex.quotes"]], "read_token() (shlex.shlex method)": [[313, "shlex.shlex.read_token"]], "shlex": [[313, "module-shlex"]], "shlex (class in shlex)": [[313, "shlex.shlex"]], "source (shlex.shlex attribute)": [[313, "shlex.shlex.source"]], "sourcehook() (shlex.shlex method)": [[313, "shlex.shlex.sourcehook"]], "split() (in module shlex)": [[313, "shlex.split"]], "token (shlex.shlex attribute)": [[313, "shlex.shlex.token"]], "whitespace (shlex.shlex attribute)": [[313, "shlex.shlex.whitespace"]], "whitespace_split (shlex.shlex attribute)": [[313, "shlex.shlex.whitespace_split"]], "wordchars (shlex.shlex attribute)": [[313, "shlex.shlex.wordchars"]], "samefileerror": [[314, "shutil.SameFileError"]], "avoids_symlink_attacks (shutil.rmtree attribute)": [[314, "shutil.rmtree.avoids_symlink_attacks"]], "chown() (in module shutil)": [[314, "shutil.chown"]], "copy() (in module shutil)": [[314, "shutil.copy"]], "copy2() (in module shutil)": [[314, "shutil.copy2"]], "copyfile() (in module shutil)": [[314, "shutil.copyfile"]], "copyfileobj() (in module shutil)": [[314, "shutil.copyfileobj"]], "copying": [[314, "index-0"]], "copying files": [[314, "index-0"]], "copymode() (in module shutil)": [[314, "shutil.copymode"]], "copystat() (in module shutil)": [[314, "shutil.copystat"]], "copytree() (in module shutil)": [[314, "shutil.copytree"]], "disk_usage() (in module shutil)": [[314, "shutil.disk_usage"]], "get_archive_formats() (in module shutil)": [[314, "shutil.get_archive_formats"]], "get_terminal_size() (in module shutil)": [[314, "shutil.get_terminal_size"]], "get_unpack_formats() (in module shutil)": [[314, "shutil.get_unpack_formats"]], "ignore_patterns() (in module shutil)": [[314, "shutil.ignore_patterns"]], "make_archive() (in module shutil)": [[314, "shutil.make_archive"]], "move() (in module shutil)": [[314, "shutil.move"]], "register_archive_format() (in module shutil)": [[314, "shutil.register_archive_format"]], "register_unpack_format() (in module shutil)": [[314, "shutil.register_unpack_format"]], "rmtree() (in module shutil)": [[314, "shutil.rmtree"]], "shutil": [[314, "module-shutil"]], "unpack_archive() (in module shutil)": [[314, "shutil.unpack_archive"]], "unregister_archive_format() (in module shutil)": [[314, "shutil.unregister_archive_format"]], "unregister_unpack_format() (in module shutil)": [[314, "shutil.unregister_unpack_format"]], "which() (in module shutil)": [[314, "shutil.which"]], "ctrl_break_event (in module signal)": [[315, "signal.CTRL_BREAK_EVENT"]], "ctrl_c_event (in module signal)": [[315, "signal.CTRL_C_EVENT"]], "handlers (class in signal)": [[315, "signal.Handlers"]], "itimer_prof (in module signal)": [[315, "signal.ITIMER_PROF"]], "itimer_real (in module signal)": [[315, "signal.ITIMER_REAL"]], "itimer_virtual (in module signal)": [[315, "signal.ITIMER_VIRTUAL"]], "itimererror": [[315, "signal.ItimerError"]], "nsig (in module signal)": [[315, "signal.NSIG"]], "sigabrt (in module signal)": [[315, "signal.SIGABRT"]], "sigalrm (in module signal)": [[315, "signal.SIGALRM"]], "sigbreak (in module signal)": [[315, "signal.SIGBREAK"]], "sigbus (in module signal)": [[315, "signal.SIGBUS"]], "sigchld (in module signal)": [[315, "signal.SIGCHLD"]], "sigcld (in module signal)": [[315, "signal.SIGCLD"]], "sigcont (in module signal)": [[315, "signal.SIGCONT"]], "sigfpe (in module signal)": [[315, "signal.SIGFPE"]], "sighup (in module signal)": [[315, "signal.SIGHUP"]], "sigill (in module signal)": [[315, "signal.SIGILL"]], "sigint (in module signal)": [[315, "signal.SIGINT"]], "sigkill (in module signal)": [[315, "signal.SIGKILL"]], "sigpipe (in module signal)": [[315, "signal.SIGPIPE"]], "sigsegv (in module signal)": [[315, "signal.SIGSEGV"]], "sigstkflt (in module signal)": [[315, "signal.SIGSTKFLT"]], "sigterm (in module signal)": [[315, "signal.SIGTERM"]], "sigusr1 (in module signal)": [[315, "signal.SIGUSR1"]], "sigusr2 (in module signal)": [[315, "signal.SIGUSR2"]], "sigwinch (in module signal)": [[315, "signal.SIGWINCH"]], "sig_block (in module signal)": [[315, "signal.SIG_BLOCK"]], "sig_dfl (in module signal)": [[315, "signal.SIG_DFL"]], "sig_ign (in module signal)": [[315, "signal.SIG_IGN"]], "sig_setmask (in module signal)": [[315, "signal.SIG_SETMASK"]], "sig_unblock (in module signal)": [[315, "signal.SIG_UNBLOCK"]], "sigmasks (class in signal)": [[315, "signal.Sigmasks"]], "signals (class in signal)": [[315, "signal.Signals"]], "alarm() (in module signal)": [[315, "signal.alarm"]], "getitimer() (in module signal)": [[315, "signal.getitimer"]], "getsignal() (in module signal)": [[315, "signal.getsignal"]], "pause() (in module signal)": [[315, "signal.pause"]], "pidfd_send_signal() (in module signal)": [[315, "signal.pidfd_send_signal"]], "pthread_kill() (in module signal)": [[315, "signal.pthread_kill"]], "pthread_sigmask() (in module signal)": [[315, "signal.pthread_sigmask"]], "raise_signal() (in module signal)": [[315, "signal.raise_signal"]], "set_wakeup_fd() (in module signal)": [[315, "signal.set_wakeup_fd"]], "setitimer() (in module signal)": [[315, "signal.setitimer"]], "siginterrupt() (in module signal)": [[315, "signal.siginterrupt"]], "signal() (in module signal)": [[315, "signal.signal"]], "sigpending() (in module signal)": [[315, "signal.sigpending"]], "sigtimedwait() (in module signal)": [[315, "signal.sigtimedwait"]], "sigwait() (in module signal)": [[315, "signal.sigwait"]], "sigwaitinfo() (in module signal)": [[315, "signal.sigwaitinfo"]], "strsignal() (in module signal)": [[315, "signal.strsignal"]], "valid_signals() (in module signal)": [[315, "signal.valid_signals"]], "--user-base": [[316, "cmdoption-site-user-base"]], "--user-site": [[316, "cmdoption-site-user-site"]], "enable_user_site (in module site)": [[316, "site.ENABLE_USER_SITE"]], "pep 370": [[316, "index-11"], [430, "index-19"], [430, "index-41"], [430, "index-42"], [443, "index-7"]], "prefixes (in module site)": [[316, "site.PREFIXES"]], "pythonuserbase": [[316, "index-10"], [316, "index-9"], [430, "envvar-PYTHONUSERBASE"], [443, "index-4"]], "user_base (in module site)": [[316, "site.USER_BASE"]], "user_site (in module site)": [[316, "site.USER_SITE"]], "addsitedir() (in module site)": [[316, "site.addsitedir"]], "comment": [[316, "index-2"], [410, "index-4"], [424, "index-0"]], "getsitepackages() (in module site)": [[316, "site.getsitepackages"]], "getuserbase() (in module site)": [[316, "site.getuserbase"]], "getusersitepackages() (in module site)": [[316, "site.getusersitepackages"]], "main() (in module site)": [[316, "site.main"]], "site": [[316, "module-site"]], "site command line option": [[316, "cmdoption-site-user-base"], [316, "cmdoption-site-user-site"]], "site-packages": [[316, "index-1"]], "sitecustomize": [[316, "index-5"], [413, "index-2"], [413, "index-4"]], "usercustomize": [[316, "index-6"], [413, "index-3"], [413, "index-5"]], "lmtp (class in smtplib)": [[317, "smtplib.LMTP"]], "rfc 1869": [[317, "index-2"], [317, "index-5"]], "rfc 4954": [[317, "index-7"], [317, "index-8"]], "rfc 821": [[317, "index-1"], [317, "index-4"]], "smtp": [[317, "index-0"]], "smtp (class in smtplib)": [[317, "smtplib.SMTP"]], "smtpauthenticationerror": [[317, "smtplib.SMTPAuthenticationError"]], "smtpconnecterror": [[317, "smtplib.SMTPConnectError"]], "smtpdataerror": [[317, "smtplib.SMTPDataError"]], "smtpexception": [[317, "smtplib.SMTPException"]], "smtpheloerror": [[317, "smtplib.SMTPHeloError"]], "smtpnotsupportederror": [[317, "smtplib.SMTPNotSupportedError"]], "smtprecipientsrefused": [[317, "smtplib.SMTPRecipientsRefused"]], "smtpresponseexception": [[317, "smtplib.SMTPResponseException"]], "smtpsenderrefused": [[317, "smtplib.SMTPSenderRefused"]], "smtpserverdisconnected": [[317, "smtplib.SMTPServerDisconnected"]], "smtp_ssl (class in smtplib)": [[317, "smtplib.SMTP_SSL"]], "simple mail transfer protocol": [[317, "index-0"]], "auth() (smtplib.smtp method)": [[317, "smtplib.SMTP.auth"]], "connect() (smtplib.smtp method)": [[317, "smtplib.SMTP.connect"]], "docmd() (smtplib.smtp method)": [[317, "smtplib.SMTP.docmd"]], "ehlo() (smtplib.smtp method)": [[317, "smtplib.SMTP.ehlo"]], "ehlo_or_helo_if_needed() (smtplib.smtp method)": [[317, "smtplib.SMTP.ehlo_or_helo_if_needed"]], "has_extn() (smtplib.smtp method)": [[317, "smtplib.SMTP.has_extn"]], "helo() (smtplib.smtp method)": [[317, "smtplib.SMTP.helo"]], "login() (smtplib.smtp method)": [[317, "smtplib.SMTP.login"]], "quit() (smtplib.smtp method)": [[317, "smtplib.SMTP.quit"]], "send_message() (smtplib.smtp method)": [[317, "smtplib.SMTP.send_message"]], "sendmail() (smtplib.smtp method)": [[317, "smtplib.SMTP.sendmail"]], "set_debuglevel() (smtplib.smtp method)": [[317, "smtplib.SMTP.set_debuglevel"]], "smtplib": [[317, "module-smtplib"]], "starttls() (smtplib.smtp method)": [[317, "smtplib.SMTP.starttls"]], "verify() (smtplib.smtp method)": [[317, "smtplib.SMTP.verify"]], "af_alg (in module socket)": [[318, "socket.AF_ALG"]], "af_can (in module socket)": [[318, "socket.AF_CAN"]], "af_divert (in module socket)": [[318, "socket.AF_DIVERT"]], "af_hyperv (in module socket)": [[318, "socket.AF_HYPERV"]], "af_inet (in module socket)": [[318, "socket.AF_INET"]], "af_inet6 (in module socket)": [[318, "socket.AF_INET6"]], "af_link (in module socket)": [[318, "socket.AF_LINK"]], "af_packet (in module socket)": [[318, "socket.AF_PACKET"]], "af_qipcrtr (in module socket)": [[318, "socket.AF_QIPCRTR"]], "af_rds (in module socket)": [[318, "socket.AF_RDS"]], "af_unix (in module socket)": [[318, "socket.AF_UNIX"]], "af_vsock (in module socket)": [[318, "socket.AF_VSOCK"]], "bdaddr_any (in module socket)": [[318, "socket.BDADDR_ANY"]], "bdaddr_local (in module socket)": [[318, "socket.BDADDR_LOCAL"]], "can_bcm (in module socket)": [[318, "socket.CAN_BCM"]], "can_isotp (in module socket)": [[318, "socket.CAN_ISOTP"]], "can_j1939 (in module socket)": [[318, "socket.CAN_J1939"]], "can_raw_fd_frames (in module socket)": [[318, "socket.CAN_RAW_FD_FRAMES"]], "can_raw_join_filters (in module socket)": [[318, "socket.CAN_RAW_JOIN_FILTERS"]], "cmsg_len() (in module socket)": [[318, "socket.CMSG_LEN"]], "cmsg_space() (in module socket)": [[318, "socket.CMSG_SPACE"]], "ethertype_arp (in module socket)": [[318, "socket.ETHERTYPE_ARP"]], "ethertype_ip (in module socket)": [[318, "socket.ETHERTYPE_IP"]], "ethertype_ipv6 (in module socket)": [[318, "socket.ETHERTYPE_IPV6"]], "ethertype_vlan (in module socket)": [[318, "socket.ETHERTYPE_VLAN"]], "eth_p_all (in module socket)": [[318, "socket.ETH_P_ALL"]], "hci_data_dir (in module socket)": [[318, "socket.HCI_DATA_DIR"]], "hci_filter (in module socket)": [[318, "socket.HCI_FILTER"]], "hci_time_stamp (in module socket)": [[318, "socket.HCI_TIME_STAMP"]], "hvsocket_address_flag_passthru (in module socket)": [[318, "socket.HVSOCKET_ADDRESS_FLAG_PASSTHRU"]], "hvsocket_connected_suspend (in module socket)": [[318, "socket.HVSOCKET_CONNECTED_SUSPEND"]], "hvsocket_connect_timeout (in module socket)": [[318, "socket.HVSOCKET_CONNECT_TIMEOUT"]], "hvsocket_connect_timeout_max (in module socket)": [[318, "socket.HVSOCKET_CONNECT_TIMEOUT_MAX"]], "hv_guid_broadcast (in module socket)": [[318, "socket.HV_GUID_BROADCAST"]], "hv_guid_children (in module socket)": [[318, "socket.HV_GUID_CHILDREN"]], "hv_guid_loopback (in module socket)": [[318, "socket.HV_GUID_LOOPBACK"]], "hv_guid_parent (in module socket)": [[318, "socket.HV_GUID_PARENT"]], "hv_guid_wildcard (in module socket)": [[318, "socket.HV_GUID_WILDCARD"]], "hv_guid_zero (in module socket)": [[318, "socket.HV_GUID_ZERO"]], "hv_protocol_raw (in module socket)": [[318, "socket.HV_PROTOCOL_RAW"]], "ioctl_vm_sockets_get_local_cid (in module socket)": [[318, "socket.IOCTL_VM_SOCKETS_GET_LOCAL_CID"]], "local_creds (in module socket)": [[318, "socket.LOCAL_CREDS"]], "local_creds_persistent (in module socket)": [[318, "socket.LOCAL_CREDS_PERSISTENT"]], "pf_can (in module socket)": [[318, "socket.PF_CAN"]], "pf_divert (in module socket)": [[318, "socket.PF_DIVERT"]], "pf_packet (in module socket)": [[318, "socket.PF_PACKET"]], "pf_rds (in module socket)": [[318, "socket.PF_RDS"]], "rfc 3493": [[318, "index-15"]], "rfc 3542": [[318, "index-3"]], "scm_creds2 (in module socket)": [[318, "socket.SCM_CREDS2"]], "sio_keepalive_vals (in module socket)": [[318, "socket.SIO_KEEPALIVE_VALS"]], "sio_loopback_fast_path (in module socket)": [[318, "socket.SIO_LOOPBACK_FAST_PATH"]], "sio_rcvall (in module socket)": [[318, "socket.SIO_RCVALL"]], "sock_cloexec (in module socket)": [[318, "socket.SOCK_CLOEXEC"]], "sock_dgram (in module socket)": [[318, "socket.SOCK_DGRAM"]], "sock_nonblock (in module socket)": [[318, "socket.SOCK_NONBLOCK"]], "sock_raw (in module socket)": [[318, "socket.SOCK_RAW"]], "sock_rdm (in module socket)": [[318, "socket.SOCK_RDM"]], "sock_seqpacket (in module socket)": [[318, "socket.SOCK_SEQPACKET"]], "sock_stream (in module socket)": [[318, "socket.SOCK_STREAM"]], "sol_alg (in module socket)": [[318, "socket.SOL_ALG"]], "sol_rds (in module socket)": [[318, "socket.SOL_RDS"]], "somaxconn (in module socket)": [[318, "socket.SOMAXCONN"]], "so_incoming_cpu (in module socket)": [[318, "socket.SO_INCOMING_CPU"]], "sockettype (in module socket)": [[318, "socket.SocketType"]], "accept() (socket.socket method)": [[318, "socket.socket.accept"]], "bind() (socket.socket method)": [[318, "socket.socket.bind"]], "close() (in module socket)": [[318, "socket.close"]], "close() (socket.socket method)": [[318, "socket.socket.close"]], "connect() (socket.socket method)": [[318, "socket.socket.connect"]], "connect_ex() (socket.socket method)": [[318, "socket.socket.connect_ex"]], "create_connection() (in module socket)": [[318, "socket.create_connection"]], "create_server() (in module socket)": [[318, "socket.create_server"]], "detach() (socket.socket method)": [[318, "socket.socket.detach"]], "dup() (socket.socket method)": [[318, "socket.socket.dup"]], "family (socket.socket attribute)": [[318, "socket.socket.family"]], "fileno() (socket.socket method)": [[318, "socket.socket.fileno"]], "fromfd() (in module socket)": [[318, "socket.fromfd"]], "fromshare() (in module socket)": [[318, "socket.fromshare"]], "gaierror": [[318, "socket.gaierror"]], "get_inheritable() (socket.socket method)": [[318, "socket.socket.get_inheritable"]], "getaddrinfo() (in module socket)": [[318, "socket.getaddrinfo"]], "getblocking() (socket.socket method)": [[318, "socket.socket.getblocking"]], "getdefaulttimeout() (in module socket)": [[318, "socket.getdefaulttimeout"]], "getfqdn() (in module socket)": [[318, "socket.getfqdn"]], "gethostbyname() (in module socket)": [[318, "socket.gethostbyname"]], "gethostbyname_ex() (in module socket)": [[318, "socket.gethostbyname_ex"]], "getnameinfo() (in module socket)": [[318, "socket.getnameinfo"]], "getpeername() (socket.socket method)": [[318, "socket.socket.getpeername"]], "getprotobyname() (in module socket)": [[318, "socket.getprotobyname"]], "getservbyname() (in module socket)": [[318, "socket.getservbyname"]], "getservbyport() (in module socket)": [[318, "socket.getservbyport"]], "getsockname() (socket.socket method)": [[318, "socket.socket.getsockname"]], "getsockopt() (socket.socket method)": [[318, "socket.socket.getsockopt"]], "gettimeout() (socket.socket method)": [[318, "socket.socket.gettimeout"]], "has_dualstack_ipv6() (in module socket)": [[318, "socket.has_dualstack_ipv6"]], "has_ipv6 (in module socket)": [[318, "socket.has_ipv6"]], "herror": [[318, "socket.herror"]], "htonl() (in module socket)": [[318, "socket.htonl"]], "htons() (in module socket)": [[318, "socket.htons"]], "if_indextoname() (in module socket)": [[318, "socket.if_indextoname"]], "if_nameindex() (in module socket)": [[318, "socket.if_nameindex"]], "if_nametoindex() (in module socket)": [[318, "socket.if_nametoindex"]], "inet_aton() (in module socket)": [[318, "socket.inet_aton"]], "inet_ntoa() (in module socket)": [[318, "socket.inet_ntoa"]], "inet_ntop() (in module socket)": [[318, "socket.inet_ntop"]], "inet_pton() (in module socket)": [[318, "socket.inet_pton"]], "ioctl() (socket.socket method)": [[318, "socket.socket.ioctl"]], "listen() (socket.socket method)": [[318, "socket.socket.listen"]], "makefile() (socket.socket method)": [[318, "socket.socket.makefile"]], "ntohl() (in module socket)": [[318, "socket.ntohl"]], "ntohs() (in module socket)": [[318, "socket.ntohs"]], "proto (socket.socket attribute)": [[318, "socket.socket.proto"]], "recv() (socket.socket method)": [[318, "socket.socket.recv"]], "recv_fds() (in module socket)": [[318, "socket.recv_fds"]], "recv_into() (socket.socket method)": [[318, "socket.socket.recv_into"]], "recvfrom() (socket.socket method)": [[318, "socket.socket.recvfrom"]], "recvfrom_into() (socket.socket method)": [[318, "socket.socket.recvfrom_into"]], "recvmsg() (socket.socket method)": [[318, "socket.socket.recvmsg"]], "recvmsg_into() (socket.socket method)": [[318, "socket.socket.recvmsg_into"]], "send() (socket.socket method)": [[318, "socket.socket.send"]], "send_fds() (in module socket)": [[318, "socket.send_fds"]], "sendall() (socket.socket method)": [[318, "socket.socket.sendall"]], "sendfile() (socket.socket method)": [[318, "socket.socket.sendfile"]], "sendmsg() (socket.socket method)": [[318, "socket.socket.sendmsg"]], "sendmsg_afalg() (socket.socket method)": [[318, "socket.socket.sendmsg_afalg"]], "sendto() (socket.socket method)": [[318, "socket.socket.sendto"]], "set_inheritable() (socket.socket method)": [[318, "socket.socket.set_inheritable"]], "setblocking() (socket.socket method)": [[318, "socket.socket.setblocking"]], "setdefaulttimeout() (in module socket)": [[318, "socket.setdefaulttimeout"]], "sethostname() (in module socket)": [[318, "socket.sethostname"]], "setsockopt() (socket.socket method)": [[318, "socket.socket.setsockopt"]], "settimeout() (socket.socket method)": [[318, "socket.socket.settimeout"]], "share() (socket.socket method)": [[318, "socket.socket.share"]], "shutdown() (socket.socket method)": [[318, "socket.socket.shutdown"]], "socket (class in socket)": [[318, "socket.socket"]], "socketpair() (in module socket)": [[318, "socket.socketpair"]], "struct": [[318, "index-14"], [327, "module-struct"]], "timeout": [[318, "socket.timeout"]], "type (socket.socket attribute)": [[318, "socket.socket.type"]], "baserequesthandler (class in socketserver)": [[319, "socketserver.BaseRequestHandler"]], "baseserver (class in socketserver)": [[319, "socketserver.BaseServer"]], "datagramrequesthandler (class in socketserver)": [[319, "socketserver.DatagramRequestHandler"]], "forkingmixin (class in socketserver)": [[319, "socketserver.ForkingMixIn"]], "forkingtcpserver (class in socketserver)": [[319, "socketserver.ForkingTCPServer"]], "forkingudpserver (class in socketserver)": [[319, "socketserver.ForkingUDPServer"]], "forkingunixdatagramserver (class in socketserver)": [[319, "socketserver.ForkingUnixDatagramServer"]], "forkingunixstreamserver (class in socketserver)": [[319, "socketserver.ForkingUnixStreamServer"]], "requesthandlerclass (socketserver.baseserver attribute)": [[319, "socketserver.BaseServer.RequestHandlerClass"]], "streamrequesthandler (class in socketserver)": [[319, "socketserver.StreamRequestHandler"]], "tcpserver (class in socketserver)": [[319, "socketserver.TCPServer"]], "threadingmixin (class in socketserver)": [[319, "socketserver.ThreadingMixIn"]], "threadingtcpserver (class in socketserver)": [[319, "socketserver.ThreadingTCPServer"]], "threadingudpserver (class in socketserver)": [[319, "socketserver.ThreadingUDPServer"]], "threadingunixdatagramserver (class in socketserver)": [[319, "socketserver.ThreadingUnixDatagramServer"]], "threadingunixstreamserver (class in socketserver)": [[319, "socketserver.ThreadingUnixStreamServer"]], "udpserver (class in socketserver)": [[319, "socketserver.UDPServer"]], "unixdatagramserver (class in socketserver)": [[319, "socketserver.UnixDatagramServer"]], "unixstreamserver (class in socketserver)": [[319, "socketserver.UnixStreamServer"]], "address_family (socketserver.baseserver attribute)": [[319, "socketserver.BaseServer.address_family"]], "allow_reuse_address (socketserver.baseserver attribute)": [[319, "socketserver.BaseServer.allow_reuse_address"]], "fileno() (socketserver.baseserver method)": [[319, "socketserver.BaseServer.fileno"]], "finish() (socketserver.baserequesthandler method)": [[319, "socketserver.BaseRequestHandler.finish"]], "finish_request() (socketserver.baseserver method)": [[319, "socketserver.BaseServer.finish_request"]], "get_request() (socketserver.baseserver method)": [[319, "socketserver.BaseServer.get_request"]], "handle() (socketserver.baserequesthandler method)": [[319, "socketserver.BaseRequestHandler.handle"]], "handle_error() (socketserver.baseserver method)": [[319, "socketserver.BaseServer.handle_error"]], "handle_request() (socketserver.baseserver method)": [[319, "socketserver.BaseServer.handle_request"]], "handle_timeout() (socketserver.baseserver method)": [[319, "socketserver.BaseServer.handle_timeout"]], "process_request() (socketserver.baseserver method)": [[319, "socketserver.BaseServer.process_request"]], "request_queue_size (socketserver.baseserver attribute)": [[319, "socketserver.BaseServer.request_queue_size"]], "serve_forever() (socketserver.baseserver method)": [[319, "socketserver.BaseServer.serve_forever"]], "server_activate() (socketserver.baseserver method)": [[319, "socketserver.BaseServer.server_activate"]], "server_address (socketserver.baseserver attribute)": [[319, "socketserver.BaseServer.server_address"]], "server_bind() (socketserver.baseserver method)": [[319, "socketserver.BaseServer.server_bind"]], "server_close() (socketserver.baseserver method)": [[319, "socketserver.BaseServer.server_close"]], "service_actions() (socketserver.baseserver method)": [[319, "socketserver.BaseServer.service_actions"]], "setup() (socketserver.baserequesthandler method)": [[319, "socketserver.BaseRequestHandler.setup"]], "shutdown() (socketserver.baseserver method)": [[319, "socketserver.BaseServer.shutdown"]], "socket (socketserver.baseserver attribute)": [[319, "socketserver.BaseServer.socket"]], "socket_type (socketserver.baseserver attribute)": [[319, "socketserver.BaseServer.socket_type"]], "socketserver": [[319, "module-socketserver"]], "timeout (socketserver.baseserver attribute)": [[319, "socketserver.BaseServer.timeout"]], "verify_request() (socketserver.baseserver method)": [[319, "socketserver.BaseServer.verify_request"]], "--version": [[320, "cmdoption-python-m-sqlite3-h-v-filename-sql-v"], [357, "cmdoption-trace-version"], [430, "cmdoption-version"]], "blob (class in sqlite3)": [[320, "sqlite3.Blob"]], "connection (class in sqlite3)": [[320, "sqlite3.Connection"]], "cursor (class in sqlite3)": [[320, "sqlite3.Cursor"]], "dataerror": [[320, "sqlite3.DataError"]], "databaseerror": [[320, "sqlite3.DatabaseError"]], "integrityerror": [[320, "sqlite3.IntegrityError"]], "interfaceerror": [[320, "sqlite3.InterfaceError"]], "internalerror": [[320, "sqlite3.InternalError"]], "legacy_transaction_control (in module sqlite3)": [[320, "sqlite3.LEGACY_TRANSACTION_CONTROL"]], "notsupportederror": [[320, "sqlite3.NotSupportedError"]], "operationalerror": [[320, "sqlite3.OperationalError"]], "parse_colnames (in module sqlite3)": [[320, "sqlite3.PARSE_COLNAMES"]], "parse_decltypes (in module sqlite3)": [[320, "sqlite3.PARSE_DECLTYPES"]], "pep 246": [[320, "index-8"]], "pep 249": [[320, "index-0"], [320, "index-1"], [320, "index-10"], [320, "index-11"], [320, "index-12"], [320, "index-2"], [320, "index-3"], [320, "index-4"], [320, "index-5"], [320, "index-9"], [442, "index-24"], [442, "index-25"], [449, "index-24"]], "prepareprotocol (class in sqlite3)": [[320, "sqlite3.PrepareProtocol"]], "programmingerror": [[320, "sqlite3.ProgrammingError"]], "row (class in sqlite3)": [[320, "sqlite3.Row"]], "sqlite_dbconfig_defensive (in module sqlite3)": [[320, "sqlite3.SQLITE_DBCONFIG_DEFENSIVE"]], "sqlite_dbconfig_dqs_ddl (in module sqlite3)": [[320, "sqlite3.SQLITE_DBCONFIG_DQS_DDL"]], "sqlite_dbconfig_dqs_dml (in module sqlite3)": [[320, "sqlite3.SQLITE_DBCONFIG_DQS_DML"]], "sqlite_dbconfig_enable_fkey (in module sqlite3)": [[320, "sqlite3.SQLITE_DBCONFIG_ENABLE_FKEY"]], "sqlite_dbconfig_enable_fts3_tokenizer (in module sqlite3)": [[320, "sqlite3.SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER"]], "sqlite_dbconfig_enable_load_extension (in module sqlite3)": [[320, "sqlite3.SQLITE_DBCONFIG_ENABLE_LOAD_EXTENSION"]], "sqlite_dbconfig_enable_qpsg (in module sqlite3)": [[320, "sqlite3.SQLITE_DBCONFIG_ENABLE_QPSG"]], "sqlite_dbconfig_enable_trigger (in module sqlite3)": [[320, "sqlite3.SQLITE_DBCONFIG_ENABLE_TRIGGER"]], "sqlite_dbconfig_enable_view (in module sqlite3)": [[320, "sqlite3.SQLITE_DBCONFIG_ENABLE_VIEW"]], "sqlite_dbconfig_legacy_alter_table (in module sqlite3)": [[320, "sqlite3.SQLITE_DBCONFIG_LEGACY_ALTER_TABLE"]], "sqlite_dbconfig_legacy_file_format (in module sqlite3)": [[320, "sqlite3.SQLITE_DBCONFIG_LEGACY_FILE_FORMAT"]], "sqlite_dbconfig_no_ckpt_on_close (in module sqlite3)": [[320, "sqlite3.SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE"]], "sqlite_dbconfig_reset_database (in module sqlite3)": [[320, "sqlite3.SQLITE_DBCONFIG_RESET_DATABASE"]], "sqlite_dbconfig_trigger_eqp (in module sqlite3)": [[320, "sqlite3.SQLITE_DBCONFIG_TRIGGER_EQP"]], "sqlite_dbconfig_trusted_schema (in module sqlite3)": [[320, "sqlite3.SQLITE_DBCONFIG_TRUSTED_SCHEMA"]], "sqlite_dbconfig_writable_schema (in module sqlite3)": [[320, "sqlite3.SQLITE_DBCONFIG_WRITABLE_SCHEMA"]], "sqlite_deny (in module sqlite3)": [[320, "sqlite3.SQLITE_DENY"]], "sqlite_ignore (in module sqlite3)": [[320, "sqlite3.SQLITE_IGNORE"]], "sqlite_ok (in module sqlite3)": [[320, "sqlite3.SQLITE_OK"]], "apilevel (in module sqlite3)": [[320, "sqlite3.apilevel"]], "arraysize (sqlite3.cursor attribute)": [[320, "sqlite3.Cursor.arraysize"]], "autocommit (sqlite3.connection attribute)": [[320, "sqlite3.Connection.autocommit"]], "backup() (sqlite3.connection method)": [[320, "sqlite3.Connection.backup"]], "blobopen() (sqlite3.connection method)": [[320, "sqlite3.Connection.blobopen"]], "close() (sqlite3.blob method)": [[320, "sqlite3.Blob.close"]], "close() (sqlite3.connection method)": [[320, "sqlite3.Connection.close"]], "close() (sqlite3.cursor method)": [[320, "sqlite3.Cursor.close"]], "commit() (sqlite3.connection method)": [[320, "sqlite3.Connection.commit"]], "complete_statement() (in module sqlite3)": [[320, "sqlite3.complete_statement"]], "connect() (in module sqlite3)": [[320, "sqlite3.connect"]], "connection (sqlite3.cursor attribute)": [[320, "sqlite3.Cursor.connection"]], "create_aggregate() (sqlite3.connection method)": [[320, "sqlite3.Connection.create_aggregate"]], "create_collation() (sqlite3.connection method)": [[320, "sqlite3.Connection.create_collation"]], "create_function() (sqlite3.connection method)": [[320, "sqlite3.Connection.create_function"]], "create_window_function() (sqlite3.connection method)": [[320, "sqlite3.Connection.create_window_function"]], "cursor() (sqlite3.connection method)": [[320, "sqlite3.Connection.cursor"]], "description (sqlite3.cursor attribute)": [[320, "sqlite3.Cursor.description"]], "deserialize() (sqlite3.connection method)": [[320, "sqlite3.Connection.deserialize"]], "enable_callback_tracebacks() (in module sqlite3)": [[320, "sqlite3.enable_callback_tracebacks"]], "enable_load_extension() (sqlite3.connection method)": [[320, "sqlite3.Connection.enable_load_extension"]], "execute() (sqlite3.connection method)": [[320, "sqlite3.Connection.execute"]], "execute() (sqlite3.cursor method)": [[320, "sqlite3.Cursor.execute"]], "executemany() (sqlite3.connection method)": [[320, "sqlite3.Connection.executemany"]], "executemany() (sqlite3.cursor method)": [[320, "sqlite3.Cursor.executemany"]], "executescript() (sqlite3.connection method)": [[320, "sqlite3.Connection.executescript"]], "executescript() (sqlite3.cursor method)": [[320, "sqlite3.Cursor.executescript"]], "fetchall() (sqlite3.cursor method)": [[320, "sqlite3.Cursor.fetchall"]], "fetchmany() (sqlite3.cursor method)": [[320, "sqlite3.Cursor.fetchmany"]], "fetchone() (sqlite3.cursor method)": [[320, "sqlite3.Cursor.fetchone"]], "getconfig() (sqlite3.connection method)": [[320, "sqlite3.Connection.getconfig"]], "getlimit() (sqlite3.connection method)": [[320, "sqlite3.Connection.getlimit"]], "in sql statements": [[320, "index-6"], [320, "index-7"]], "in_transaction (sqlite3.connection attribute)": [[320, "sqlite3.Connection.in_transaction"]], "interrupt() (sqlite3.connection method)": [[320, "sqlite3.Connection.interrupt"]], "isolation_level (sqlite3.connection attribute)": [[320, "sqlite3.Connection.isolation_level"]], "iterdump() (sqlite3.connection method)": [[320, "sqlite3.Connection.iterdump"]], "keys() (sqlite3.row method)": [[320, "sqlite3.Row.keys"]], "lastrowid (sqlite3.cursor attribute)": [[320, "sqlite3.Cursor.lastrowid"]], "load_extension() (sqlite3.connection method)": [[320, "sqlite3.Connection.load_extension"]], "paramstyle (in module sqlite3)": [[320, "sqlite3.paramstyle"]], "python--m-sqlite3-[-h]-[-v]-[filename]-[sql] command line option": [[320, "cmdoption-python-m-sqlite3-h-v-filename-sql-h"], [320, "cmdoption-python-m-sqlite3-h-v-filename-sql-v"]], "read() (sqlite3.blob method)": [[320, "sqlite3.Blob.read"]], "register_adapter() (in module sqlite3)": [[320, "sqlite3.register_adapter"]], "register_converter() (in module sqlite3)": [[320, "sqlite3.register_converter"]], "rollback() (sqlite3.connection method)": [[320, "sqlite3.Connection.rollback"]], "row_factory (sqlite3.connection attribute)": [[320, "sqlite3.Connection.row_factory"]], "row_factory (sqlite3.cursor attribute)": [[320, "sqlite3.Cursor.row_factory"]], "rowcount (sqlite3.cursor attribute)": [[320, "sqlite3.Cursor.rowcount"]], "seek() (sqlite3.blob method)": [[320, "sqlite3.Blob.seek"]], "serialize() (sqlite3.connection method)": [[320, "sqlite3.Connection.serialize"]], "set_authorizer() (sqlite3.connection method)": [[320, "sqlite3.Connection.set_authorizer"]], "set_progress_handler() (sqlite3.connection method)": [[320, "sqlite3.Connection.set_progress_handler"]], "set_trace_callback() (sqlite3.connection method)": [[320, "sqlite3.Connection.set_trace_callback"]], "setconfig() (sqlite3.connection method)": [[320, "sqlite3.Connection.setconfig"]], "setinputsizes() (sqlite3.cursor method)": [[320, "sqlite3.Cursor.setinputsizes"]], "setlimit() (sqlite3.connection method)": [[320, "sqlite3.Connection.setlimit"]], "setoutputsize() (sqlite3.cursor method)": [[320, "sqlite3.Cursor.setoutputsize"]], "sqlite3": [[320, "module-sqlite3"]], "sqlite_errorcode (sqlite3.error attribute)": [[320, "sqlite3.Error.sqlite_errorcode"]], "sqlite_errorname (sqlite3.error attribute)": [[320, "sqlite3.Error.sqlite_errorname"]], "sqlite_version (in module sqlite3)": [[320, "sqlite3.sqlite_version"]], "sqlite_version_info (in module sqlite3)": [[320, "sqlite3.sqlite_version_info"]], "tell() (sqlite3.blob method)": [[320, "sqlite3.Blob.tell"]], "text_factory (sqlite3.connection attribute)": [[320, "sqlite3.Connection.text_factory"]], "threadsafety (in module sqlite3)": [[320, "sqlite3.threadsafety"]], "total_changes (sqlite3.connection attribute)": [[320, "sqlite3.Connection.total_changes"]], "version (in module sqlite3)": [[320, "sqlite3.version"]], "version_info (in module sqlite3)": [[320, "sqlite3.version_info"]], "write() (sqlite3.blob method)": [[320, "sqlite3.Blob.write"]], "(use in module ssl)": [[321, "index-0"]], "alert_description_handshake_failure (in module ssl)": [[321, "ssl.ALERT_DESCRIPTION_HANDSHAKE_FAILURE"]], "alert_description_internal_error (in module ssl)": [[321, "ssl.ALERT_DESCRIPTION_INTERNAL_ERROR"]], "alertdescription (class in ssl)": [[321, "ssl.AlertDescription"]], "cert_none (in module ssl)": [[321, "ssl.CERT_NONE"]], "cert_optional (in module ssl)": [[321, "ssl.CERT_OPTIONAL"]], "cert_required (in module ssl)": [[321, "ssl.CERT_REQUIRED"]], "channel_binding_types (in module ssl)": [[321, "ssl.CHANNEL_BINDING_TYPES"]], "certificateerror": [[321, "ssl.CertificateError"]], "der_cert_to_pem_cert() (in module ssl)": [[321, "ssl.DER_cert_to_PEM_cert"]], "has_alpn (in module ssl)": [[321, "ssl.HAS_ALPN"]], "has_ecdh (in module ssl)": [[321, "ssl.HAS_ECDH"]], "has_never_check_common_name (in module ssl)": [[321, "ssl.HAS_NEVER_CHECK_COMMON_NAME"]], "has_npn (in module ssl)": [[321, "ssl.HAS_NPN"]], "has_sni (in module ssl)": [[321, "ssl.HAS_SNI"]], "has_sslv2 (in module ssl)": [[321, "ssl.HAS_SSLv2"]], "has_sslv3 (in module ssl)": [[321, "ssl.HAS_SSLv3"]], "has_tlsv1 (in module ssl)": [[321, "ssl.HAS_TLSv1"]], "has_tlsv1_1 (in module ssl)": [[321, "ssl.HAS_TLSv1_1"]], "has_tlsv1_2 (in module ssl)": [[321, "ssl.HAS_TLSv1_2"]], "has_tlsv1_3 (in module ssl)": [[321, "ssl.HAS_TLSv1_3"]], "maximum_supported (ssl.tlsversion attribute)": [[321, "ssl.TLSVersion.MAXIMUM_SUPPORTED"]], "minimum_supported (ssl.tlsversion attribute)": [[321, "ssl.TLSVersion.MINIMUM_SUPPORTED"]], "memorybio (class in ssl)": [[321, "ssl.MemoryBIO"]], "openssl_version (in module ssl)": [[321, "ssl.OPENSSL_VERSION"]], "openssl_version_info (in module ssl)": [[321, "ssl.OPENSSL_VERSION_INFO"]], "openssl_version_number (in module ssl)": [[321, "ssl.OPENSSL_VERSION_NUMBER"]], "op_all (in module ssl)": [[321, "ssl.OP_ALL"]], "op_cipher_server_preference (in module ssl)": [[321, "ssl.OP_CIPHER_SERVER_PREFERENCE"]], "op_enable_ktls (in module ssl)": [[321, "ssl.OP_ENABLE_KTLS"]], "op_enable_middlebox_compat (in module ssl)": [[321, "ssl.OP_ENABLE_MIDDLEBOX_COMPAT"]], "op_ignore_unexpected_eof (in module ssl)": [[321, "ssl.OP_IGNORE_UNEXPECTED_EOF"]], "op_legacy_server_connect (in module ssl)": [[321, "ssl.OP_LEGACY_SERVER_CONNECT"]], "op_no_compression (in module ssl)": [[321, "ssl.OP_NO_COMPRESSION"]], "op_no_renegotiation (in module ssl)": [[321, "ssl.OP_NO_RENEGOTIATION"]], "op_no_sslv2 (in module ssl)": [[321, "ssl.OP_NO_SSLv2"]], "op_no_sslv3 (in module ssl)": [[321, "ssl.OP_NO_SSLv3"]], "op_no_ticket (in module ssl)": [[321, "ssl.OP_NO_TICKET"]], "op_no_tlsv1 (in module ssl)": [[321, "ssl.OP_NO_TLSv1"]], "op_no_tlsv1_1 (in module ssl)": [[321, "ssl.OP_NO_TLSv1_1"]], "op_no_tlsv1_2 (in module ssl)": [[321, "ssl.OP_NO_TLSv1_2"]], "op_no_tlsv1_3 (in module ssl)": [[321, "ssl.OP_NO_TLSv1_3"]], "op_single_dh_use (in module ssl)": [[321, "ssl.OP_SINGLE_DH_USE"]], "op_single_ecdh_use (in module ssl)": [[321, "ssl.OP_SINGLE_ECDH_USE"]], "options (class in ssl)": [[321, "ssl.Options"]], "pem_cert_to_der_cert() (in module ssl)": [[321, "ssl.PEM_cert_to_DER_cert"]], "pep 644": [[321, "index-2"], [447, "index-29"], [447, "index-30"], [447, "index-35"], [447, "index-9"], [449, "index-34"]], "protocol_sslv23 (in module ssl)": [[321, "ssl.PROTOCOL_SSLv23"]], "protocol_sslv3 (in module ssl)": [[321, "ssl.PROTOCOL_SSLv3"]], "protocol_tls (in module ssl)": [[321, "ssl.PROTOCOL_TLS"]], "protocol_tls_client (in module ssl)": [[321, "ssl.PROTOCOL_TLS_CLIENT"]], "protocol_tls_server (in module ssl)": [[321, "ssl.PROTOCOL_TLS_SERVER"]], "protocol_tlsv1 (in module ssl)": [[321, "ssl.PROTOCOL_TLSv1"]], "protocol_tlsv1_1 (in module ssl)": [[321, "ssl.PROTOCOL_TLSv1_1"]], "protocol_tlsv1_2 (in module ssl)": [[321, "ssl.PROTOCOL_TLSv1_2"]], "purpose.client_auth (in module ssl)": [[321, "ssl.Purpose.CLIENT_AUTH"]], "purpose.server_auth (in module ssl)": [[321, "ssl.Purpose.SERVER_AUTH"]], "rand_add() (in module ssl)": [[321, "ssl.RAND_add"]], "rand_bytes() (in module ssl)": [[321, "ssl.RAND_bytes"]], "rand_status() (in module ssl)": [[321, "ssl.RAND_status"]], "rfc 1422": [[321, "index-16"], [321, "index-17"]], "rfc 1750": [[321, "index-5"]], "rfc 3280": [[321, "index-10"]], "rfc 4086": [[321, "index-18"]], "rfc 5246": [[321, "index-20"], [321, "index-9"]], "rfc 5280": [[321, "index-19"], [321, "index-6"], [454, "index-41"], [454, "index-51"]], "rfc 5929": [[321, "index-11"]], "rfc 6066": [[321, "index-13"], [321, "index-21"], [321, "index-8"]], "rfc 7301": [[321, "index-12"], [321, "index-7"], [454, "index-40"]], "rfc 7525": [[321, "index-22"]], "ssl": [[321, "index-1"], [321, "module-ssl"]], "sslcertverificationerror": [[321, "ssl.SSLCertVerificationError"]], "sslcontext (class in ssl)": [[321, "ssl.SSLContext"]], "ssleoferror": [[321, "ssl.SSLEOFError"]], "sslerror": [[321, "ssl.SSLError"]], "sslerrornumber (class in ssl)": [[321, "ssl.SSLErrorNumber"]], "sslkeylogfile": [[321, "index-3"], [321, "index-4"]], "sslobject (class in ssl)": [[321, "ssl.SSLObject"]], "sslsession (class in ssl)": [[321, "ssl.SSLSession"]], "sslsocket (class in ssl)": [[321, "ssl.SSLSocket"]], "sslsyscallerror": [[321, "ssl.SSLSyscallError"]], "sslwantreaderror": [[321, "ssl.SSLWantReadError"]], "sslwantwriteerror": [[321, "ssl.SSLWantWriteError"]], "sslzeroreturnerror": [[321, "ssl.SSLZeroReturnError"]], "sslv3 (ssl.tlsversion attribute)": [[321, "ssl.TLSVersion.SSLv3"]], "secure sockets layer": [[321, "index-1"]], "tls": [[321, "index-1"]], "tlsversion (class in ssl)": [[321, "ssl.TLSVersion"]], "tlsv1 (ssl.tlsversion attribute)": [[321, "ssl.TLSVersion.TLSv1"]], "tlsv1_1 (ssl.tlsversion attribute)": [[321, "ssl.TLSVersion.TLSv1_1"]], "tlsv1_2 (ssl.tlsversion attribute)": [[321, "ssl.TLSVersion.TLSv1_2"]], "tlsv1_3 (ssl.tlsversion attribute)": [[321, "ssl.TLSVersion.TLSv1_3"]], "transport layer security": [[321, "index-1"]], "verify_allow_proxy_certs (in module ssl)": [[321, "ssl.VERIFY_ALLOW_PROXY_CERTS"]], "verify_crl_check_chain (in module ssl)": [[321, "ssl.VERIFY_CRL_CHECK_CHAIN"]], "verify_crl_check_leaf (in module ssl)": [[321, "ssl.VERIFY_CRL_CHECK_LEAF"]], "verify_default (in module ssl)": [[321, "ssl.VERIFY_DEFAULT"]], "verify_x509_partial_chain (in module ssl)": [[321, "ssl.VERIFY_X509_PARTIAL_CHAIN"]], "verify_x509_strict (in module ssl)": [[321, "ssl.VERIFY_X509_STRICT"]], "verify_x509_trusted_first (in module ssl)": [[321, "ssl.VERIFY_X509_TRUSTED_FIRST"]], "verifyflags (class in ssl)": [[321, "ssl.VerifyFlags"]], "verifymode (class in ssl)": [[321, "ssl.VerifyMode"]], "x509 certificate": [[321, "index-15"]], "cert_store_stats() (ssl.sslcontext method)": [[321, "ssl.SSLContext.cert_store_stats"]], "cert_time_to_seconds() (in module ssl)": [[321, "ssl.cert_time_to_seconds"]], "certificates": [[321, "index-14"]], "check_hostname (ssl.sslcontext attribute)": [[321, "ssl.SSLContext.check_hostname"]], "cipher() (ssl.sslsocket method)": [[321, "ssl.SSLSocket.cipher"]], "compression() (ssl.sslsocket method)": [[321, "ssl.SSLSocket.compression"]], "context (ssl.sslsocket attribute)": [[321, "ssl.SSLSocket.context"]], "create_default_context() (in module ssl)": [[321, "ssl.create_default_context"]], "do_handshake() (ssl.sslsocket method)": [[321, "ssl.SSLSocket.do_handshake"]], "enum_certificates() (in module ssl)": [[321, "ssl.enum_certificates"]], "enum_crls() (in module ssl)": [[321, "ssl.enum_crls"]], "eof (ssl.memorybio attribute)": [[321, "ssl.MemoryBIO.eof"]], "get_ca_certs() (ssl.sslcontext method)": [[321, "ssl.SSLContext.get_ca_certs"]], "get_channel_binding() (ssl.sslsocket method)": [[321, "ssl.SSLSocket.get_channel_binding"]], "get_ciphers() (ssl.sslcontext method)": [[321, "ssl.SSLContext.get_ciphers"]], "get_default_verify_paths() (in module ssl)": [[321, "ssl.get_default_verify_paths"]], "get_server_certificate() (in module ssl)": [[321, "ssl.get_server_certificate"]], "get_unverified_chain() (ssl.sslsocket method)": [[321, "ssl.SSLSocket.get_unverified_chain"]], "get_verified_chain() (ssl.sslsocket method)": [[321, "ssl.SSLSocket.get_verified_chain"]], "getpeercert() (ssl.sslsocket method)": [[321, "ssl.SSLSocket.getpeercert"]], "has_ticket (ssl.sslsession attribute)": [[321, "ssl.SSLSession.has_ticket"]], "hostname_checks_common_name (ssl.sslcontext attribute)": [[321, "ssl.SSLContext.hostname_checks_common_name"]], "id (ssl.sslsession attribute)": [[321, "ssl.SSLSession.id"]], "keylog_filename (ssl.sslcontext attribute)": [[321, "ssl.SSLContext.keylog_filename"]], "library (ssl.sslerror attribute)": [[321, "ssl.SSLError.library"]], "load_cert_chain() (ssl.sslcontext method)": [[321, "ssl.SSLContext.load_cert_chain"]], "load_default_certs() (ssl.sslcontext method)": [[321, "ssl.SSLContext.load_default_certs"]], "load_dh_params() (ssl.sslcontext method)": [[321, "ssl.SSLContext.load_dh_params"]], "load_verify_locations() (ssl.sslcontext method)": [[321, "ssl.SSLContext.load_verify_locations"]], "maximum_version (ssl.sslcontext attribute)": [[321, "ssl.SSLContext.maximum_version"]], "minimum_version (ssl.sslcontext attribute)": [[321, "ssl.SSLContext.minimum_version"]], "num_tickets (ssl.sslcontext attribute)": [[321, "ssl.SSLContext.num_tickets"]], "options (ssl.sslcontext attribute)": [[321, "ssl.SSLContext.options"]], "pending (ssl.memorybio attribute)": [[321, "ssl.MemoryBIO.pending"]], "pending() (ssl.sslsocket method)": [[321, "ssl.SSLSocket.pending"]], "post_handshake_auth (ssl.sslcontext attribute)": [[321, "ssl.SSLContext.post_handshake_auth"]], "protocol (ssl.sslcontext attribute)": [[321, "ssl.SSLContext.protocol"]], "read() (ssl.memorybio method)": [[321, "ssl.MemoryBIO.read"]], "read() (ssl.sslsocket method)": [[321, "ssl.SSLSocket.read"]], "reason (ssl.sslerror attribute)": [[321, "ssl.SSLError.reason"]], "security_level (ssl.sslcontext attribute)": [[321, "ssl.SSLContext.security_level"]], "selected_alpn_protocol() (ssl.sslsocket method)": [[321, "ssl.SSLSocket.selected_alpn_protocol"]], "selected_npn_protocol() (ssl.sslsocket method)": [[321, "ssl.SSLSocket.selected_npn_protocol"]], "server_hostname (ssl.sslsocket attribute)": [[321, "ssl.SSLSocket.server_hostname"]], "server_side (ssl.sslsocket attribute)": [[321, "ssl.SSLSocket.server_side"]], "session (ssl.sslsocket attribute)": [[321, "ssl.SSLSocket.session"]], "session_reused (ssl.sslsocket attribute)": [[321, "ssl.SSLSocket.session_reused"]], "session_stats() (ssl.sslcontext method)": [[321, "ssl.SSLContext.session_stats"]], "set_alpn_protocols() (ssl.sslcontext method)": [[321, "ssl.SSLContext.set_alpn_protocols"]], "set_ciphers() (ssl.sslcontext method)": [[321, "ssl.SSLContext.set_ciphers"]], "set_default_verify_paths() (ssl.sslcontext method)": [[321, "ssl.SSLContext.set_default_verify_paths"]], "set_ecdh_curve() (ssl.sslcontext method)": [[321, "ssl.SSLContext.set_ecdh_curve"]], "set_npn_protocols() (ssl.sslcontext method)": [[321, "ssl.SSLContext.set_npn_protocols"]], "set_servername_callback (ssl.sslcontext attribute)": [[321, "ssl.SSLContext.set_servername_callback"]], "shared_ciphers() (ssl.sslsocket method)": [[321, "ssl.SSLSocket.shared_ciphers"]], "sni_callback (ssl.sslcontext attribute)": [[321, "ssl.SSLContext.sni_callback"]], "sslobject_class (ssl.sslcontext attribute)": [[321, "ssl.SSLContext.sslobject_class"]], "sslsocket_class (ssl.sslcontext attribute)": [[321, "ssl.SSLContext.sslsocket_class"]], "ticket_lifetime_hint (ssl.sslsession attribute)": [[321, "ssl.SSLSession.ticket_lifetime_hint"]], "time (ssl.sslsession attribute)": [[321, "ssl.SSLSession.time"]], "timeout (ssl.sslsession attribute)": [[321, "ssl.SSLSession.timeout"]], "unwrap() (ssl.sslsocket method)": [[321, "ssl.SSLSocket.unwrap"]], "verify_client_post_handshake() (ssl.sslsocket method)": [[321, "ssl.SSLSocket.verify_client_post_handshake"]], "verify_code (ssl.sslcertverificationerror attribute)": [[321, "ssl.SSLCertVerificationError.verify_code"]], "verify_flags (ssl.sslcontext attribute)": [[321, "ssl.SSLContext.verify_flags"]], "verify_message (ssl.sslcertverificationerror attribute)": [[321, "ssl.SSLCertVerificationError.verify_message"]], "verify_mode (ssl.sslcontext attribute)": [[321, "ssl.SSLContext.verify_mode"]], "version() (ssl.sslsocket method)": [[321, "ssl.SSLSocket.version"]], "wrap_bio() (ssl.sslcontext method)": [[321, "ssl.SSLContext.wrap_bio"]], "wrap_socket() (ssl.sslcontext method)": [[321, "ssl.SSLContext.wrap_socket"]], "write() (ssl.memorybio method)": [[321, "ssl.MemoryBIO.write"]], "write() (ssl.sslsocket method)": [[321, "ssl.SSLSocket.write"]], "write_eof() (ssl.memorybio method)": [[321, "ssl.MemoryBIO.write_eof"]], "file_attribute_archive (in module stat)": [[322, "stat.FILE_ATTRIBUTE_ARCHIVE"]], "file_attribute_compressed (in module stat)": [[322, "stat.FILE_ATTRIBUTE_COMPRESSED"]], "file_attribute_device (in module stat)": [[322, "stat.FILE_ATTRIBUTE_DEVICE"]], "file_attribute_directory (in module stat)": [[322, "stat.FILE_ATTRIBUTE_DIRECTORY"]], "file_attribute_encrypted (in module stat)": [[322, "stat.FILE_ATTRIBUTE_ENCRYPTED"]], "file_attribute_hidden (in module stat)": [[322, "stat.FILE_ATTRIBUTE_HIDDEN"]], "file_attribute_integrity_stream (in module stat)": [[322, "stat.FILE_ATTRIBUTE_INTEGRITY_STREAM"]], "file_attribute_normal (in module stat)": [[322, "stat.FILE_ATTRIBUTE_NORMAL"]], "file_attribute_not_content_indexed (in module stat)": [[322, "stat.FILE_ATTRIBUTE_NOT_CONTENT_INDEXED"]], "file_attribute_no_scrub_data (in module stat)": [[322, "stat.FILE_ATTRIBUTE_NO_SCRUB_DATA"]], "file_attribute_offline (in module stat)": [[322, "stat.FILE_ATTRIBUTE_OFFLINE"]], "file_attribute_readonly (in module stat)": [[322, "stat.FILE_ATTRIBUTE_READONLY"]], "file_attribute_reparse_point (in module stat)": [[322, "stat.FILE_ATTRIBUTE_REPARSE_POINT"]], "file_attribute_sparse_file (in module stat)": [[322, "stat.FILE_ATTRIBUTE_SPARSE_FILE"]], "file_attribute_system (in module stat)": [[322, "stat.FILE_ATTRIBUTE_SYSTEM"]], "file_attribute_temporary (in module stat)": [[322, "stat.FILE_ATTRIBUTE_TEMPORARY"]], "file_attribute_virtual (in module stat)": [[322, "stat.FILE_ATTRIBUTE_VIRTUAL"]], "io_reparse_tag_appexeclink (in module stat)": [[322, "stat.IO_REPARSE_TAG_APPEXECLINK"]], "io_reparse_tag_mount_point (in module stat)": [[322, "stat.IO_REPARSE_TAG_MOUNT_POINT"]], "io_reparse_tag_symlink (in module stat)": [[322, "stat.IO_REPARSE_TAG_SYMLINK"]], "sf_append (in module stat)": [[322, "stat.SF_APPEND"]], "sf_archived (in module stat)": [[322, "stat.SF_ARCHIVED"]], "sf_immutable (in module stat)": [[322, "stat.SF_IMMUTABLE"]], "sf_nounlink (in module stat)": [[322, "stat.SF_NOUNLINK"]], "sf_snapshot (in module stat)": [[322, "stat.SF_SNAPSHOT"]], "st_atime (in module stat)": [[322, "stat.ST_ATIME"]], "st_ctime (in module stat)": [[322, "stat.ST_CTIME"]], "st_dev (in module stat)": [[322, "stat.ST_DEV"]], "st_gid (in module stat)": [[322, "stat.ST_GID"]], "st_ino (in module stat)": [[322, "stat.ST_INO"]], "st_mode (in module stat)": [[322, "stat.ST_MODE"]], "st_mtime (in module stat)": [[322, "stat.ST_MTIME"]], "st_nlink (in module stat)": [[322, "stat.ST_NLINK"]], "st_size (in module stat)": [[322, "stat.ST_SIZE"]], "st_uid (in module stat)": [[322, "stat.ST_UID"]], "s_enfmt (in module stat)": [[322, "stat.S_ENFMT"]], "s_iexec (in module stat)": [[322, "stat.S_IEXEC"]], "s_ifblk (in module stat)": [[322, "stat.S_IFBLK"]], "s_ifchr (in module stat)": [[322, "stat.S_IFCHR"]], "s_ifdir (in module stat)": [[322, "stat.S_IFDIR"]], "s_ifdoor (in module stat)": [[322, "stat.S_IFDOOR"]], "s_ififo (in module stat)": [[322, "stat.S_IFIFO"]], "s_iflnk (in module stat)": [[322, "stat.S_IFLNK"]], "s_ifmt() (in module stat)": [[322, "stat.S_IFMT"]], "s_ifport (in module stat)": [[322, "stat.S_IFPORT"]], "s_ifreg (in module stat)": [[322, "stat.S_IFREG"]], "s_ifsock (in module stat)": [[322, "stat.S_IFSOCK"]], "s_ifwht (in module stat)": [[322, "stat.S_IFWHT"]], "s_imode() (in module stat)": [[322, "stat.S_IMODE"]], "s_iread (in module stat)": [[322, "stat.S_IREAD"]], "s_irgrp (in module stat)": [[322, "stat.S_IRGRP"]], "s_iroth (in module stat)": [[322, "stat.S_IROTH"]], "s_irusr (in module stat)": [[322, "stat.S_IRUSR"]], "s_irwxg (in module stat)": [[322, "stat.S_IRWXG"]], "s_irwxo (in module stat)": [[322, "stat.S_IRWXO"]], "s_irwxu (in module stat)": [[322, "stat.S_IRWXU"]], "s_isblk() (in module stat)": [[322, "stat.S_ISBLK"]], "s_ischr() (in module stat)": [[322, "stat.S_ISCHR"]], "s_isdir() (in module stat)": [[322, "stat.S_ISDIR"]], "s_isdoor() (in module stat)": [[322, "stat.S_ISDOOR"]], "s_isfifo() (in module stat)": [[322, "stat.S_ISFIFO"]], "s_isgid (in module stat)": [[322, "stat.S_ISGID"]], "s_islnk() (in module stat)": [[322, "stat.S_ISLNK"]], "s_isport() (in module stat)": [[322, "stat.S_ISPORT"]], "s_isreg() (in module stat)": [[322, "stat.S_ISREG"]], "s_issock() (in module stat)": [[322, "stat.S_ISSOCK"]], "s_isuid (in module stat)": [[322, "stat.S_ISUID"]], "s_isvtx (in module stat)": [[322, "stat.S_ISVTX"]], "s_iswht() (in module stat)": [[322, "stat.S_ISWHT"]], "s_iwgrp (in module stat)": [[322, "stat.S_IWGRP"]], "s_iwoth (in module stat)": [[322, "stat.S_IWOTH"]], "s_iwrite (in module stat)": [[322, "stat.S_IWRITE"]], "s_iwusr (in module stat)": [[322, "stat.S_IWUSR"]], "s_ixgrp (in module stat)": [[322, "stat.S_IXGRP"]], "s_ixoth (in module stat)": [[322, "stat.S_IXOTH"]], "s_ixusr (in module stat)": [[322, "stat.S_IXUSR"]], "uf_append (in module stat)": [[322, "stat.UF_APPEND"]], "uf_compressed (in module stat)": [[322, "stat.UF_COMPRESSED"]], "uf_hidden (in module stat)": [[322, "stat.UF_HIDDEN"]], "uf_immutable (in module stat)": [[322, "stat.UF_IMMUTABLE"]], "uf_nodump (in module stat)": [[322, "stat.UF_NODUMP"]], "uf_nounlink (in module stat)": [[322, "stat.UF_NOUNLINK"]], "uf_opaque (in module stat)": [[322, "stat.UF_OPAQUE"]], "filemode() (in module stat)": [[322, "stat.filemode"]], "normaldist (class in statistics)": [[323, "statistics.NormalDist"]], "statisticserror": [[323, "statistics.StatisticsError"]], "cdf() (statistics.normaldist method)": [[323, "statistics.NormalDist.cdf"]], "correlation() (in module statistics)": [[323, "statistics.correlation"]], "covariance() (in module statistics)": [[323, "statistics.covariance"]], "fmean() (in module statistics)": [[323, "statistics.fmean"]], "from_samples() (statistics.normaldist class method)": [[323, "statistics.NormalDist.from_samples"]], "geometric_mean() (in module statistics)": [[323, "statistics.geometric_mean"]], "harmonic_mean() (in module statistics)": [[323, "statistics.harmonic_mean"]], "inv_cdf() (statistics.normaldist method)": [[323, "statistics.NormalDist.inv_cdf"]], "linear_regression() (in module statistics)": [[323, "statistics.linear_regression"]], "mean (statistics.normaldist attribute)": [[323, "statistics.NormalDist.mean"]], "mean() (in module statistics)": [[323, "statistics.mean"]], "median (statistics.normaldist attribute)": [[323, "statistics.NormalDist.median"]], "median() (in module statistics)": [[323, "statistics.median"]], "median_grouped() (in module statistics)": [[323, "statistics.median_grouped"]], "median_high() (in module statistics)": [[323, "statistics.median_high"]], "median_low() (in module statistics)": [[323, "statistics.median_low"]], "mode (statistics.normaldist attribute)": [[323, "statistics.NormalDist.mode"]], "mode() (in module statistics)": [[323, "statistics.mode"]], "multimode() (in module statistics)": [[323, "statistics.multimode"]], "overlap() (statistics.normaldist method)": [[323, "statistics.NormalDist.overlap"]], "pdf() (statistics.normaldist method)": [[323, "statistics.NormalDist.pdf"]], "pstdev() (in module statistics)": [[323, "statistics.pstdev"]], "pvariance() (in module statistics)": [[323, "statistics.pvariance"]], "quantiles() (in module statistics)": [[323, "statistics.quantiles"]], "quantiles() (statistics.normaldist method)": [[323, "statistics.NormalDist.quantiles"]], "samples() (statistics.normaldist method)": [[323, "statistics.NormalDist.samples"]], "statistics": [[323, "module-statistics"]], "stdev (statistics.normaldist attribute)": [[323, "statistics.NormalDist.stdev"]], "stdev() (in module statistics)": [[323, "statistics.stdev"]], "variance (statistics.normaldist attribute)": [[323, "statistics.NormalDist.variance"]], "variance() (in module statistics)": [[323, "statistics.variance"]], "zscore() (statistics.normaldist method)": [[323, "statistics.NormalDist.zscore"]], "!=": [[324, "index-7"], [405, "index-77"]], "& (ampersand)": [[324, "index-16"], [405, "index-74"]], "(see also string)": [[324, "index-28"]], "//": [[324, "index-13"], [405, "index-67"]], "< (less)": [[324, "index-7"], [325, "index-3"], [327, "index-1"], [405, "index-77"]], "<<": [[324, "index-16"], [405, "index-71"]], "<=": [[324, "index-7"], [405, "index-77"]], "==": [[324, "index-7"], [405, "index-77"]], "> (greater)": [[324, "index-7"], [325, "index-3"], [327, "index-1"], [405, "index-77"]], ">=": [[324, "index-7"], [405, "index-77"]], ">>": [[324, "index-16"], [405, "index-71"]], "alias": [[324, "index-56"]], "c": [[324, "index-11"], [327, "index-0"], [403, "index-13"], [403, "index-4"], [403, "index-41"], [405, "index-77"], [410, "index-23"]], "false": [[324, "index-17"], [324, "index-4"], [324, "index-1"], [403, "index-12"]], "false (built-in object)": [[324, "index-3"]], "generic": [[324, "index-56"], [403, "index-5"]], "genericalias": [[324, "index-56"]], "none (built-in object)": [[324, "index-3"]], "pep 237": [[324, "index-38"], [324, "index-48"], [439, "index-10"], [441, "index-1"], [441, "index-16"], [445, "index-1"]], "pep 3118": [[324, "index-50"], [443, "index-15"], [445, "index-33"], [452, "index-31"], [452, "index-4"], [452, "index-5"], [457, "index-8"]], "pep 461": [[324, "index-49"], [454, "index-7"], [454, "index-8"]], "true": [[324, "index-17"], [324, "index-4"], [324, "index-2"], [403, "index-12"]], "union": [[324, "index-59"], [324, "index-59"]], "__args__ (genericalias attribute)": [[324, "genericalias.__args__"]], "__bases__ (class attribute)": [[324, "class.__bases__"], [403, "index-49"]], "__class__ (instance attribute)": [[324, "instance.__class__"], [403, "index-53"]], "__code__ (function object attribute)": [[324, "index-63"]], "__dict__ (object attribute)": [[324, "object.__dict__"]], "__enter__() (contextmanager method)": [[324, "contextmanager.__enter__"]], "__eq__() (instance method)": [[324, "index-9"]], "__eq__() (memoryview method)": [[324, "memoryview.__eq__"]], "__exit__() (contextmanager method)": [[324, "contextmanager.__exit__"]], "__ge__() (instance method)": [[324, "index-9"]], "__gt__() (instance method)": [[324, "index-9"]], "__iter__() (container method)": [[324, "container.__iter__"]], "__iter__() (iterator method)": [[324, "iterator.__iter__"]], "__le__() (instance method)": [[324, "index-9"]], "__lt__() (instance method)": [[324, "index-9"]], "__missing__()": [[324, "index-53"]], "__mro__ (class attribute)": [[324, "class.__mro__"]], "__name__ (definition attribute)": [[324, "definition.__name__"]], "__ne__() (instance method)": [[324, "index-9"]], "__next__() (iterator method)": [[324, "iterator.__next__"]], "__origin__ (genericalias attribute)": [[324, "genericalias.__origin__"]], "__parameters__ (genericalias attribute)": [[324, "genericalias.__parameters__"]], "__qualname__ (definition attribute)": [[324, "definition.__qualname__"]], "__subclasses__() (class method)": [[324, "class.__subclasses__"]], "__type_params__ (definition attribute)": [[324, "definition.__type_params__"]], "__unpacked__ (genericalias attribute)": [[324, "genericalias.__unpacked__"]], "add() (frozenset method)": [[324, "frozenset.add"]], "and": [[324, "index-4"], [324, "index-6"], [405, "index-74"], [405, "index-84"]], "append() (sequence method)": [[324, "index-24"]], "arithmetic": [[324, "index-13"], [405, "index-1"], [405, "index-59"], [405, "index-64"]], "as_integer_ratio() (float method)": [[324, "float.as_integer_ratio"]], "as_integer_ratio() (int method)": [[324, "int.as_integer_ratio"]], "assignment": [[324, "index-24"], [403, "index-22"], [403, "index-47"], [403, "index-51"], [411, "index-12"], [411, "index-14"], [411, "index-15"], [411, "index-4"], [411, "index-6"], [411, "index-8"], [411, "index-9"]], "binary": [[324, "index-12"], [327, "index-0"], [405, "index-64"], [405, "index-73"]], "binary operator": [[324, "index-13"], [405, "index-69"], [405, "index-70"]], "binary sequence types": [[324, "index-39"]], "bit_count() (int method)": [[324, "int.bit_count"]], "bit_length() (int method)": [[324, "int.bit_length"]], "bitwise": [[324, "index-16"], [405, "index-59"], [405, "index-73"], [405, "index-74"], [405, "index-75"], [405, "index-76"]], "built-in": [[324, "index-0"], [403, "index-42"]], "bytearray (%)": [[324, "index-45"]], "bytearray (built-in class)": [[324, "bytearray"]], "bytearray.splitlines method": [[324, "index-44"]], "bytes (%)": [[324, "index-45"]], "bytes (built-in class)": [[324, "bytes"]], "bytes.splitlines method": [[324, "index-44"]], "c_contiguous (memoryview attribute)": [[324, "memoryview.c_contiguous"]], "capitalize() (bytearray method)": [[324, "bytearray.capitalize"]], "capitalize() (bytes method)": [[324, "bytes.capitalize"]], "capitalize() (str method)": [[324, "str.capitalize"]], "casefold() (str method)": [[324, "str.casefold"]], "cast() (memoryview method)": [[324, "memoryview.cast"]], "center() (bytearray method)": [[324, "bytearray.center"]], "center() (bytes method)": [[324, "bytes.center"]], "center() (str method)": [[324, "str.center"]], "chaining": [[324, "index-7"], [405, "index-78"], [411, "index-29"]], "clear() (dict method)": [[324, "dict.clear"]], "clear() (frozenset method)": [[324, "frozenset.clear"]], "clear() (sequence method)": [[324, "index-24"]], "comparing": [[324, "index-8"]], "comparison": [[324, "index-7"], [405, "index-77"]], "comparisons": [[324, "index-7"], [403, "index-77"], [405, "index-78"]], "complex": [[324, "index-13"], [403, "index-102"], [403, "index-14"]], "concatenation": [[324, "index-20"]], "conjugate() (complex number method)": [[324, "index-14"]], "container": [[324, "index-18"], [403, "index-3"], [403, "index-46"]], "context management": [[324, "index-54"]], "context management protocol": [[324, "index-54"]], "contiguous (memoryview attribute)": [[324, "memoryview.contiguous"]], "conversions": [[324, "index-15"]], "copy() (dict method)": [[324, "dict.copy"]], "copy() (frozenset method)": [[324, "frozenset.copy"]], "copy() (sequence method)": [[324, "index-24"]], "count() (bytearray method)": [[324, "bytearray.count"]], "count() (bytes method)": [[324, "bytes.count"]], "count() (sequence method)": [[324, "index-20"]], "count() (str method)": [[324, "str.count"]], "decode() (bytearray method)": [[324, "bytearray.decode"]], "decode() (bytes method)": [[324, "bytes.decode"]], "del": [[324, "index-24"], [324, "index-52"], [403, "index-72"], [411, "index-21"]], "dict (built-in class)": [[324, "dict"]], "difference() (frozenset method)": [[324, "frozenset.difference"]], "difference_update() (frozenset method)": [[324, "frozenset.difference_update"]], "discard() (frozenset method)": [[324, "frozenset.discard"]], "encode() (str method)": [[324, "str.encode"]], "endswith() (bytearray method)": [[324, "bytearray.endswith"]], "endswith() (bytes method)": [[324, "bytes.endswith"]], "endswith() (str method)": [[324, "str.endswith"]], "expandtabs() (bytearray method)": [[324, "bytearray.expandtabs"]], "expandtabs() (bytes method)": [[324, "bytes.expandtabs"]], "expandtabs() (str method)": [[324, "str.expandtabs"]], "extend() (sequence method)": [[324, "index-24"]], "f_contiguous (memoryview attribute)": [[324, "memoryview.f_contiguous"]], "find() (bytearray method)": [[324, "bytearray.find"]], "find() (bytes method)": [[324, "bytes.find"]], "find() (str method)": [[324, "str.find"]], "format (memoryview attribute)": [[324, "memoryview.format"]], "format() (str method)": [[324, "str.format"]], "format_map() (str method)": [[324, "str.format_map"]], "formatting": [[324, "index-45"]], "formatting, printf": [[324, "index-35"]], "formatting, string (%)": [[324, "index-35"]], "from_bytes() (int class method)": [[324, "int.from_bytes"]], "fromhex() (bytearray class method)": [[324, "bytearray.fromhex"]], "fromhex() (bytes class method)": [[324, "bytes.fromhex"]], "fromhex() (float class method)": [[324, "float.fromhex"]], "fromkeys() (dict class method)": [[324, "dict.fromkeys"]], "frozenset (built-in class)": [[324, "frozenset"]], "get() (dict method)": [[324, "dict.get"]], "hex() (bytearray method)": [[324, "bytearray.hex"]], "hex() (bytes method)": [[324, "bytes.hex"]], "hex() (float method)": [[324, "float.hex"]], "hex() (memoryview method)": [[324, "memoryview.hex"]], "hexadecimal": [[324, "index-12"]], "if": [[324, "index-1"], [402, "index-18"], [402, "index-3"], [405, "index-12"], [405, "index-88"]], "in": [[324, "index-10"], [324, "index-20"], [402, "index-6"], [405, "index-80"]], "in printf-style formatting": [[324, "index-36"], [324, "index-37"], [324, "index-46"], [324, "index-47"]], "index() (bytearray method)": [[324, "bytearray.index"]], "index() (bytes method)": [[324, "bytes.index"]], "index() (sequence method)": [[324, "index-20"]], "index() (str method)": [[324, "str.index"]], "insert() (sequence method)": [[324, "index-24"]], "interpolation": [[324, "index-45"]], "interpolation, printf": [[324, "index-35"]], "interpolation, string (%)": [[324, "index-35"]], "intersection() (frozenset method)": [[324, "frozenset.intersection"]], "intersection_update() (frozenset method)": [[324, "frozenset.intersection_update"]], "io.stringio": [[324, "index-29"]], "is": [[324, "index-7"], [405, "index-81"]], "is not": [[324, "index-7"], [405, "index-81"]], "is_integer() (float method)": [[324, "float.is_integer"]], "is_integer() (int method)": [[324, "int.is_integer"]], "isalnum() (bytearray method)": [[324, "bytearray.isalnum"]], "isalnum() (bytes method)": [[324, "bytes.isalnum"]], "isalnum() (str method)": [[324, "str.isalnum"]], "isalpha() (bytearray method)": [[324, "bytearray.isalpha"]], "isalpha() (bytes method)": [[324, "bytes.isalpha"]], "isalpha() (str method)": [[324, "str.isalpha"]], "isascii() (bytearray method)": [[324, "bytearray.isascii"]], "isascii() (bytes method)": [[324, "bytes.isascii"]], "isascii() (str method)": [[324, "str.isascii"]], "isdecimal() (str method)": [[324, "str.isdecimal"]], "isdigit() (bytearray method)": [[324, "bytearray.isdigit"]], "isdigit() (bytes method)": [[324, "bytes.isdigit"]], "isdigit() (str method)": [[324, "str.isdigit"]], "isdisjoint() (frozenset method)": [[324, "frozenset.isdisjoint"]], "isidentifier() (str method)": [[324, "str.isidentifier"]], "islower() (bytearray method)": [[324, "bytearray.islower"]], "islower() (bytes method)": [[324, "bytes.islower"]], "islower() (str method)": [[324, "str.islower"]], "isnumeric() (str method)": [[324, "str.isnumeric"]], "isprintable() (str method)": [[324, "str.isprintable"]], "isspace() (bytearray method)": [[324, "bytearray.isspace"]], "isspace() (bytes method)": [[324, "bytes.isspace"]], "isspace() (str method)": [[324, "str.isspace"]], "issubset() (frozenset method)": [[324, "frozenset.issubset"]], "issuperset() (frozenset method)": [[324, "frozenset.issuperset"]], "istitle() (bytearray method)": [[324, "bytearray.istitle"]], "istitle() (bytes method)": [[324, "bytes.istitle"]], "istitle() (str method)": [[324, "str.istitle"]], "isupper() (bytearray method)": [[324, "bytearray.isupper"]], "isupper() (bytes method)": [[324, "bytes.isupper"]], "isupper() (str method)": [[324, "str.isupper"]], "items() (dict method)": [[324, "dict.items"]], "itemsize (memoryview attribute)": [[324, "memoryview.itemsize"]], "iteration": [[324, "index-18"]], "iteration over": [[324, "index-18"]], "iterator protocol": [[324, "index-18"]], "join() (bytearray method)": [[324, "bytearray.join"]], "join() (bytes method)": [[324, "bytes.join"]], "join() (str method)": [[324, "str.join"]], "keys() (dict method)": [[324, "dict.keys"]], "list (built-in class)": [[324, "list"]], "literals": [[324, "index-12"]], "ljust() (bytearray method)": [[324, "bytearray.ljust"]], "ljust() (bytes method)": [[324, "bytes.ljust"]], "ljust() (str method)": [[324, "str.ljust"]], "loop": [[324, "index-21"], [402, "index-4"], [402, "index-6"], [411, "index-30"], [411, "index-33"]], "loop over": [[324, "index-21"]], "lower() (bytearray method)": [[324, "bytearray.lower"]], "lower() (bytes method)": [[324, "bytes.lower"]], "lower() (str method)": [[324, "str.lower"]], "lstrip() (bytearray method)": [[324, "bytearray.lstrip"]], "lstrip() (bytes method)": [[324, "bytes.lstrip"]], "lstrip() (str method)": [[324, "str.lstrip"]], "maketrans() (bytearray static method)": [[324, "bytearray.maketrans"]], "maketrans() (bytes static method)": [[324, "bytes.maketrans"]], "maketrans() (str static method)": [[324, "str.maketrans"]], "masking": [[324, "index-16"]], "max": [[324, "index-20"]], "memoryview (built-in class)": [[324, "memoryview"]], "methods": [[324, "index-32"], [324, "index-43"]], "min": [[324, "index-20"]], "mro() (class method)": [[324, "class.mro"]], "mutable sequence": [[324, "index-21"], [403, "index-22"]], "nbytes (memoryview attribute)": [[324, "memoryview.nbytes"]], "ndim (memoryview attribute)": [[324, "memoryview.ndim"]], "not": [[324, "index-6"], [405, "index-83"]], "not in": [[324, "index-10"], [324, "index-20"], [405, "index-80"]], "obj (memoryview attribute)": [[324, "memoryview.obj"]], "octal": [[324, "index-12"]], "operation": [[324, "index-20"], [405, "index-58"], [405, "index-59"], [405, "index-64"], [405, "index-71"], [405, "index-73"], [405, "index-82"], [411, "index-20"]], "operations on": [[324, "index-14"], [324, "index-16"], [324, "index-20"], [324, "index-24"], [324, "index-52"]], "or": [[324, "index-4"], [324, "index-6"], [405, "index-75"], [405, "index-76"], [405, "index-85"]], "over mutable sequence": [[324, "index-21"]], "partition() (bytearray method)": [[324, "bytearray.partition"]], "partition() (bytes method)": [[324, "bytes.partition"]], "partition() (str method)": [[324, "str.partition"]], "pop() (dict method)": [[324, "dict.pop"]], "pop() (frozenset method)": [[324, "frozenset.pop"]], "pop() (sequence method)": [[324, "index-24"]], "popitem() (dict method)": [[324, "dict.popitem"]], "printf-style formatting": [[324, "index-35"], [324, "index-45"]], "range": [[324, "index-27"], [402, "index-8"]], "range (built-in class)": [[324, "range"]], "readonly (memoryview attribute)": [[324, "memoryview.readonly"]], "release() (memoryview method)": [[324, "memoryview.release"]], "remove() (frozenset method)": [[324, "frozenset.remove"]], "remove() (sequence method)": [[324, "index-24"]], "removeprefix() (bytearray method)": [[324, "bytearray.removeprefix"]], "removeprefix() (bytes method)": [[324, "bytes.removeprefix"]], "removeprefix() (str method)": [[324, "str.removeprefix"]], "removesuffix() (bytearray method)": [[324, "bytearray.removesuffix"]], "removesuffix() (bytes method)": [[324, "bytes.removesuffix"]], "removesuffix() (str method)": [[324, "str.removesuffix"]], "repetition": [[324, "index-20"]], "replace() (bytearray method)": [[324, "bytearray.replace"]], "replace() (bytes method)": [[324, "bytes.replace"]], "replace() (str method)": [[324, "str.replace"]], "reverse() (sequence method)": [[324, "index-24"]], "rfind() (bytearray method)": [[324, "bytearray.rfind"]], "rfind() (bytes method)": [[324, "bytes.rfind"]], "rfind() (str method)": [[324, "str.rfind"]], "rindex() (bytearray method)": [[324, "bytearray.rindex"]], "rindex() (bytes method)": [[324, "bytes.rindex"]], "rindex() (str method)": [[324, "str.rindex"]], "rjust() (bytearray method)": [[324, "bytearray.rjust"]], "rjust() (bytes method)": [[324, "bytes.rjust"]], "rjust() (str method)": [[324, "str.rjust"]], "rpartition() (bytearray method)": [[324, "bytearray.rpartition"]], "rpartition() (bytes method)": [[324, "bytes.rpartition"]], "rpartition() (str method)": [[324, "str.rpartition"]], "rsplit() (bytearray method)": [[324, "bytearray.rsplit"]], "rsplit() (bytes method)": [[324, "bytes.rsplit"]], "rsplit() (str method)": [[324, "str.rsplit"]], "rstrip() (bytearray method)": [[324, "bytearray.rstrip"]], "rstrip() (bytes method)": [[324, "bytes.rstrip"]], "rstrip() (str method)": [[324, "str.rstrip"]], "set (built-in class)": [[324, "set"]], "setdefault() (dict method)": [[324, "dict.setdefault"]], "shape (memoryview attribute)": [[324, "memoryview.shape"]], "shifting": [[324, "index-16"], [405, "index-71"]], "sort() (list method)": [[324, "list.sort"]], "space": [[324, "index-37"], [324, "index-47"], [325, "index-4"], [410, "index-8"]], "split() (bytearray method)": [[324, "bytearray.split"]], "split() (bytes method)": [[324, "bytes.split"]], "split() (str method)": [[324, "str.split"]], "splitlines() (bytearray method)": [[324, "bytearray.splitlines"]], "splitlines() (bytes method)": [[324, "bytes.splitlines"]], "splitlines() (str method)": [[324, "str.splitlines"]], "sprintf-style formatting": [[324, "index-35"], [324, "index-45"]], "start (range attribute)": [[324, "range.start"]], "startswith() (bytearray method)": [[324, "bytearray.startswith"]], "startswith() (bytes method)": [[324, "bytes.startswith"]], "startswith() (str method)": [[324, "str.startswith"]], "step (range attribute)": [[324, "range.step"]], "stop (range attribute)": [[324, "range.stop"]], "str (built-in class)": [[324, "index-28"], [324, "index-30"], [324, "index-31"], [324, "str"]], "str.splitlines method": [[324, "index-34"]], "strides (memoryview attribute)": [[324, "memoryview.strides"]], "strip() (bytearray method)": [[324, "bytearray.strip"]], "strip() (bytes method)": [[324, "bytes.strip"]], "strip() (str method)": [[324, "str.strip"]], "suboffsets (memoryview attribute)": [[324, "memoryview.suboffsets"]], "subscript": [[324, "index-20"], [324, "index-24"]], "swapcase() (bytearray method)": [[324, "bytearray.swapcase"]], "swapcase() (bytes method)": [[324, "bytes.swapcase"]], "swapcase() (str method)": [[324, "str.swapcase"]], "symmetric_difference() (frozenset method)": [[324, "frozenset.symmetric_difference"]], "symmetric_difference_update() (frozenset method)": [[324, "frozenset.symmetric_difference_update"]], "text sequence type": [[324, "index-28"]], "title() (bytearray method)": [[324, "bytearray.title"]], "title() (bytes method)": [[324, "bytes.title"]], "title() (str method)": [[324, "str.title"]], "to_bytes() (int method)": [[324, "int.to_bytes"]], "tobytes() (memoryview method)": [[324, "memoryview.tobytes"]], "tolist() (memoryview method)": [[324, "memoryview.tolist"]], "toreadonly() (memoryview method)": [[324, "memoryview.toreadonly"]], "translate() (bytearray method)": [[324, "bytearray.translate"]], "translate() (bytes method)": [[324, "bytes.translate"]], "translate() (str method)": [[324, "str.translate"]], "truth": [[324, "index-1"]], "tuple (built-in class)": [[324, "tuple"]], "type annotation; type hint": [[324, "index-55"]], "types": [[324, "index-0"], [324, "index-14"], [324, "index-16"], [324, "index-20"], [324, "index-22"], [324, "index-23"], [324, "index-24"], [324, "index-52"], [324, "index-65"], [362, "module-types"]], "unary operator": [[324, "index-13"], [405, "index-60"], [405, "index-61"]], "union() (frozenset method)": [[324, "frozenset.union"]], "update() (dict method)": [[324, "dict.update"]], "update() (frozenset method)": [[324, "frozenset.update"]], "upper() (bytearray method)": [[324, "bytearray.upper"]], "upper() (bytes method)": [[324, "bytes.upper"]], "upper() (str method)": [[324, "str.upper"]], "value": [[324, "index-1"], [402, "index-31"], [405, "index-17"]], "values": [[324, "index-17"], [411, "index-3"]], "values() (dict method)": [[324, "dict.values"]], "while": [[324, "index-1"], [402, "index-4"], [411, "index-30"], [411, "index-33"]], "zfill() (bytearray method)": [[324, "bytearray.zfill"]], "zfill() (bytes method)": [[324, "bytes.zfill"]], "zfill() (str method)": [[324, "str.zfill"]], ", (comma)": [[325, "index-8"], [402, "index-16"], [402, "index-28"], [402, "index-40"], [405, "index-10"], [405, "index-15"], [405, "index-16"], [405, "index-17"], [405, "index-44"], [405, "index-47"], [405, "index-91"], [411, "index-18"], [411, "index-34"], [411, "index-43"], [411, "index-45"], [411, "index-6"]], "= (equals)": [[325, "index-3"], [327, "index-1"], [402, "index-31"], [403, "index-84"], [405, "index-47"], [410, "index-25"], [411, "index-4"]], "formatter (class in string)": [[325, "string.Formatter"]], "pep 292": [[325, "index-12"], [441, "index-3"]], "pep 3101": [[325, "index-0"], [325, "index-1"], [443, "index-9"], [445, "index-23"], [445, "index-24"]], "pep 378": [[325, "index-9"], [444, "index-3"], [446, "index-1"]], "pep 682": [[325, "index-6"], [448, "index-22"]], "template (class in string)": [[325, "string.Template"]], "ascii_letters (in module string)": [[325, "string.ascii_letters"]], "ascii_lowercase (in module string)": [[325, "string.ascii_lowercase"]], "ascii_uppercase (in module string)": [[325, "string.ascii_uppercase"]], "capwords() (in module string)": [[325, "string.capwords"]], "check_unused_args() (string.formatter method)": [[325, "string.Formatter.check_unused_args"]], "convert_field() (string.formatter method)": [[325, "string.Formatter.convert_field"]], "digits (in module string)": [[325, "string.digits"]], "format() (string.formatter method)": [[325, "string.Formatter.format"]], "format_field() (string.formatter method)": [[325, "string.Formatter.format_field"]], "get_field() (string.formatter method)": [[325, "string.Formatter.get_field"]], "get_identifiers() (string.template method)": [[325, "string.Template.get_identifiers"]], "get_value() (string.formatter method)": [[325, "string.Formatter.get_value"]], "hexdigits (in module string)": [[325, "string.hexdigits"]], "in string formatting": [[325, "index-10"], [325, "index-2"], [325, "index-3"], [325, "index-4"], [325, "index-5"], [325, "index-7"], [325, "index-8"]], "in template strings": [[325, "index-13"]], "is_valid() (string.template method)": [[325, "string.Template.is_valid"]], "octdigits (in module string)": [[325, "string.octdigits"]], "parse() (string.formatter method)": [[325, "string.Formatter.parse"]], "printable (in module string)": [[325, "string.printable"]], "punctuation (in module string)": [[325, "string.punctuation"]], "safe_substitute() (string.template method)": [[325, "string.Template.safe_substitute"]], "substitute() (string.template method)": [[325, "string.Template.substitute"]], "template (string.template attribute)": [[325, "string.Template.template"]], "vformat() (string.formatter method)": [[325, "string.Formatter.vformat"]], "whitespace (in module string)": [[325, "string.whitespace"]], "z": [[325, "index-5"]], "rfc 3454": [[326, "index-0"], [326, "index-1"]], "in_table_a1() (in module stringprep)": [[326, "stringprep.in_table_a1"]], "in_table_b1() (in module stringprep)": [[326, "stringprep.in_table_b1"]], "in_table_c11() (in module stringprep)": [[326, "stringprep.in_table_c11"]], "in_table_c11_c12() (in module stringprep)": [[326, "stringprep.in_table_c11_c12"]], "in_table_c12() (in module stringprep)": [[326, "stringprep.in_table_c12"]], "in_table_c21() (in module stringprep)": [[326, "stringprep.in_table_c21"]], "in_table_c21_c22() (in module stringprep)": [[326, "stringprep.in_table_c21_c22"]], "in_table_c22() (in module stringprep)": [[326, "stringprep.in_table_c22"]], "in_table_c3() (in module stringprep)": [[326, "stringprep.in_table_c3"]], "in_table_c4() (in module stringprep)": [[326, "stringprep.in_table_c4"]], "in_table_c5() (in module stringprep)": [[326, "stringprep.in_table_c5"]], "in_table_c6() (in module stringprep)": [[326, "stringprep.in_table_c6"]], "in_table_c7() (in module stringprep)": [[326, "stringprep.in_table_c7"]], "in_table_c8() (in module stringprep)": [[326, "stringprep.in_table_c8"]], "in_table_c9() (in module stringprep)": [[326, "stringprep.in_table_c9"]], "in_table_d1() (in module stringprep)": [[326, "stringprep.in_table_d1"]], "in_table_d2() (in module stringprep)": [[326, "stringprep.in_table_d2"]], "map_table_b2() (in module stringprep)": [[326, "stringprep.map_table_b2"]], "map_table_b3() (in module stringprep)": [[326, "stringprep.map_table_b3"]], "stringprep": [[326, "module-stringprep"]], "@ (at)": [[327, "index-1"], [402, "index-29"], [402, "index-41"], [405, "index-66"]], "struct (class in struct)": [[327, "struct.Struct"]], "calcsize() (in module struct)": [[327, "struct.calcsize"]], "format (struct.struct attribute)": [[327, "struct.Struct.format"]], "in struct format strings": [[327, "index-1"], [327, "index-2"], [327, "index-3"]], "iter_unpack() (in module struct)": [[327, "struct.iter_unpack"]], "iter_unpack() (struct.struct method)": [[327, "struct.Struct.iter_unpack"]], "pack() (in module struct)": [[327, "struct.pack"]], "pack() (struct.struct method)": [[327, "struct.Struct.pack"]], "pack_into() (in module struct)": [[327, "struct.pack_into"]], "pack_into() (struct.struct method)": [[327, "struct.Struct.pack_into"]], "packing": [[327, "index-0"]], "size (struct.struct attribute)": [[327, "struct.Struct.size"]], "structures": [[327, "index-0"]], "unpack() (in module struct)": [[327, "struct.unpack"]], "unpack() (struct.struct method)": [[327, "struct.Struct.unpack"]], "unpack_from() (in module struct)": [[327, "struct.unpack_from"]], "unpack_from() (struct.struct method)": [[327, "struct.Struct.unpack_from"]], "above_normal_priority_class (in module subprocess)": [[328, "subprocess.ABOVE_NORMAL_PRIORITY_CLASS"]], "below_normal_priority_class (in module subprocess)": [[328, "subprocess.BELOW_NORMAL_PRIORITY_CLASS"]], "create_breakaway_from_job (in module subprocess)": [[328, "subprocess.CREATE_BREAKAWAY_FROM_JOB"]], "create_default_error_mode (in module subprocess)": [[328, "subprocess.CREATE_DEFAULT_ERROR_MODE"]], "create_new_console (in module subprocess)": [[328, "subprocess.CREATE_NEW_CONSOLE"]], "create_new_process_group (in module subprocess)": [[328, "subprocess.CREATE_NEW_PROCESS_GROUP"]], "create_no_window (in module subprocess)": [[328, "subprocess.CREATE_NO_WINDOW"]], "calledprocesserror": [[328, "subprocess.CalledProcessError"]], "completedprocess (class in subprocess)": [[328, "subprocess.CompletedProcess"]], "detached_process (in module subprocess)": [[328, "subprocess.DETACHED_PROCESS"]], "devnull (in module subprocess)": [[328, "subprocess.DEVNULL"]], "high_priority_class (in module subprocess)": [[328, "subprocess.HIGH_PRIORITY_CLASS"]], "idle_priority_class (in module subprocess)": [[328, "subprocess.IDLE_PRIORITY_CLASS"]], "normal_priority_class (in module subprocess)": [[328, "subprocess.NORMAL_PRIORITY_CLASS"]], "pep 324": [[328, "index-0"], [441, "index-8"]], "pipe (in module subprocess)": [[328, "subprocess.PIPE"]], "popen (class in subprocess)": [[328, "subprocess.Popen"]], "realtime_priority_class (in module subprocess)": [[328, "subprocess.REALTIME_PRIORITY_CLASS"]], "startf_useshowwindow (in module subprocess)": [[328, "subprocess.STARTF_USESHOWWINDOW"]], "startf_usestdhandles (in module subprocess)": [[328, "subprocess.STARTF_USESTDHANDLES"]], "startupinfo (class in subprocess)": [[328, "subprocess.STARTUPINFO"]], "stdout (in module subprocess)": [[328, "subprocess.STDOUT"]], "std_error_handle (in module subprocess)": [[328, "subprocess.STD_ERROR_HANDLE"]], "std_input_handle (in module subprocess)": [[328, "subprocess.STD_INPUT_HANDLE"]], "std_output_handle (in module subprocess)": [[328, "subprocess.STD_OUTPUT_HANDLE"]], "sw_hide (in module subprocess)": [[328, "subprocess.SW_HIDE"]], "subprocesserror": [[328, "subprocess.SubprocessError"]], "systemroot": [[328, "index-4"]], "timeoutexpired": [[328, "subprocess.TimeoutExpired"]], "args (subprocess.completedprocess attribute)": [[328, "subprocess.CompletedProcess.args"]], "args (subprocess.popen attribute)": [[328, "subprocess.Popen.args"]], "call() (in module subprocess)": [[328, "subprocess.call"]], "check_call() (in module subprocess)": [[328, "subprocess.check_call"]], "check_output() (in module subprocess)": [[328, "subprocess.check_output"]], "check_returncode() (subprocess.completedprocess method)": [[328, "subprocess.CompletedProcess.check_returncode"]], "cmd (subprocess.calledprocesserror attribute)": [[328, "subprocess.CalledProcessError.cmd"]], "cmd (subprocess.timeoutexpired attribute)": [[328, "subprocess.TimeoutExpired.cmd"]], "communicate() (subprocess.popen method)": [[328, "subprocess.Popen.communicate"]], "dwflags (subprocess.startupinfo attribute)": [[328, "subprocess.STARTUPINFO.dwFlags"]], "getoutput() (in module subprocess)": [[328, "subprocess.getoutput"]], "getstatusoutput() (in module subprocess)": [[328, "subprocess.getstatusoutput"]], "hstderror (subprocess.startupinfo attribute)": [[328, "subprocess.STARTUPINFO.hStdError"]], "hstdinput (subprocess.startupinfo attribute)": [[328, "subprocess.STARTUPINFO.hStdInput"]], "hstdoutput (subprocess.startupinfo attribute)": [[328, "subprocess.STARTUPINFO.hStdOutput"]], "kill() (subprocess.popen method)": [[328, "subprocess.Popen.kill"]], "lpattributelist (subprocess.startupinfo attribute)": [[328, "subprocess.STARTUPINFO.lpAttributeList"]], "output (subprocess.calledprocesserror attribute)": [[328, "subprocess.CalledProcessError.output"]], "output (subprocess.timeoutexpired attribute)": [[328, "subprocess.TimeoutExpired.output"]], "pid (subprocess.popen attribute)": [[328, "subprocess.Popen.pid"]], "poll() (subprocess.popen method)": [[328, "subprocess.Popen.poll"]], "returncode (subprocess.calledprocesserror attribute)": [[328, "subprocess.CalledProcessError.returncode"]], "returncode (subprocess.completedprocess attribute)": [[328, "subprocess.CompletedProcess.returncode"]], "returncode (subprocess.popen attribute)": [[328, "subprocess.Popen.returncode"]], "run() (in module subprocess)": [[328, "subprocess.run"]], "send_signal() (subprocess.popen method)": [[328, "subprocess.Popen.send_signal"]], "stderr (subprocess.calledprocesserror attribute)": [[328, "subprocess.CalledProcessError.stderr"]], "stderr (subprocess.completedprocess attribute)": [[328, "subprocess.CompletedProcess.stderr"]], "stderr (subprocess.popen attribute)": [[328, "subprocess.Popen.stderr"]], "stderr (subprocess.timeoutexpired attribute)": [[328, "subprocess.TimeoutExpired.stderr"]], "stdin (subprocess.popen attribute)": [[328, "subprocess.Popen.stdin"]], "stdout (subprocess.calledprocesserror attribute)": [[328, "subprocess.CalledProcessError.stdout"]], "stdout (subprocess.completedprocess attribute)": [[328, "subprocess.CompletedProcess.stdout"]], "stdout (subprocess.popen attribute)": [[328, "subprocess.Popen.stdout"]], "stdout (subprocess.timeoutexpired attribute)": [[328, "subprocess.TimeoutExpired.stdout"]], "subprocess": [[328, "module-subprocess"]], "subprocess module": [[328, "index-1"]], "terminate() (subprocess.popen method)": [[328, "subprocess.Popen.terminate"]], "timeout (subprocess.timeoutexpired attribute)": [[328, "subprocess.TimeoutExpired.timeout"]], "wshowwindow (subprocess.startupinfo attribute)": [[328, "subprocess.STARTUPINFO.wShowWindow"]], "wait() (subprocess.popen method)": [[328, "subprocess.Popen.wait"]], "class (class in symtable)": [[330, "symtable.Class"]], "function (class in symtable)": [[330, "symtable.Function"]], "symbol (class in symtable)": [[330, "symtable.Symbol"]], "symboltable (class in symtable)": [[330, "symtable.SymbolTable"]], "get_children() (symtable.symboltable method)": [[330, "symtable.SymbolTable.get_children"]], "get_frees() (symtable.function method)": [[330, "symtable.Function.get_frees"]], "get_globals() (symtable.function method)": [[330, "symtable.Function.get_globals"]], "get_id() (symtable.symboltable method)": [[330, "symtable.SymbolTable.get_id"]], "get_identifiers() (symtable.symboltable method)": [[330, "symtable.SymbolTable.get_identifiers"]], "get_lineno() (symtable.symboltable method)": [[330, "symtable.SymbolTable.get_lineno"]], "get_locals() (symtable.function method)": [[330, "symtable.Function.get_locals"]], "get_methods() (symtable.class method)": [[330, "symtable.Class.get_methods"]], "get_name() (symtable.symbol method)": [[330, "symtable.Symbol.get_name"]], "get_name() (symtable.symboltable method)": [[330, "symtable.SymbolTable.get_name"]], "get_namespace() (symtable.symbol method)": [[330, "symtable.Symbol.get_namespace"]], "get_namespaces() (symtable.symbol method)": [[330, "symtable.Symbol.get_namespaces"]], "get_nonlocals() (symtable.function method)": [[330, "symtable.Function.get_nonlocals"]], "get_parameters() (symtable.function method)": [[330, "symtable.Function.get_parameters"]], "get_symbols() (symtable.symboltable method)": [[330, "symtable.SymbolTable.get_symbols"]], "get_type() (symtable.symboltable method)": [[330, "symtable.SymbolTable.get_type"]], "has_children() (symtable.symboltable method)": [[330, "symtable.SymbolTable.has_children"]], "is_annotated() (symtable.symbol method)": [[330, "symtable.Symbol.is_annotated"]], "is_assigned() (symtable.symbol method)": [[330, "symtable.Symbol.is_assigned"]], "is_declared_global() (symtable.symbol method)": [[330, "symtable.Symbol.is_declared_global"]], "is_free() (symtable.symbol method)": [[330, "symtable.Symbol.is_free"]], "is_global() (symtable.symbol method)": [[330, "symtable.Symbol.is_global"]], "is_imported() (symtable.symbol method)": [[330, "symtable.Symbol.is_imported"]], "is_local() (symtable.symbol method)": [[330, "symtable.Symbol.is_local"]], "is_namespace() (symtable.symbol method)": [[330, "symtable.Symbol.is_namespace"]], "is_nested() (symtable.symboltable method)": [[330, "symtable.SymbolTable.is_nested"]], "is_nonlocal() (symtable.symbol method)": [[330, "symtable.Symbol.is_nonlocal"]], "is_optimized() (symtable.symboltable method)": [[330, "symtable.SymbolTable.is_optimized"]], "is_parameter() (symtable.symbol method)": [[330, "symtable.Symbol.is_parameter"]], "is_referenced() (symtable.symbol method)": [[330, "symtable.Symbol.is_referenced"]], "lookup() (symtable.symboltable method)": [[330, "symtable.SymbolTable.lookup"]], "symtable": [[330, "module-symtable"]], "symtable() (in module symtable)": [[330, "symtable.symtable"]], "pep 3149": [[331, "index-0"], [451, "index-6"]], "pep 421": [[331, "index-15"], [331, "index-16"], [452, "index-19"]], "__breakpointhook__ (in module sys)": [[331, "sys.__breakpointhook__"]], "__displayhook__ (in module sys)": [[331, "sys.__displayhook__"]], "__excepthook__ (in module sys)": [[331, "sys.__excepthook__"]], "__interactivehook__ (in module sys)": [[331, "sys.__interactivehook__"]], "__stderr__ (in module sys)": [[331, "sys.__stderr__"]], "__stdin__ (in module sys)": [[331, "sys.__stdin__"]], "__stdout__ (in module sys)": [[331, "sys.__stdout__"]], "__unraisablehook__ (in module sys)": [[331, "sys.__unraisablehook__"]], "_clear_type_cache() (in module sys)": [[331, "sys._clear_type_cache"]], "_current_exceptions() (in module sys)": [[331, "sys._current_exceptions"]], "_current_frames() (in module sys)": [[331, "sys._current_frames"]], "_debugmallocstats() (in module sys)": [[331, "sys._debugmallocstats"]], "_emscripten_info (in module sys)": [[331, "sys._emscripten_info"]], "_enablelegacywindowsfsencoding() (in module sys)": [[331, "sys._enablelegacywindowsfsencoding"]], "_getframe() (in module sys)": [[331, "sys._getframe"]], "_getframemodulename() (in module sys)": [[331, "sys._getframemodulename"]], "_xoptions (in module sys)": [[331, "sys._xoptions"]], "abiflags (in module sys)": [[331, "sys.abiflags"]], "activate_stack_trampoline() (in module sys)": [[331, "sys.activate_stack_trampoline"]], "addaudithook() (in module sys)": [[331, "sys.addaudithook"]], "algorithm (sys.hash_info attribute)": [[331, "sys.hash_info.algorithm"]], "api_version (in module sys)": [[331, "sys.api_version"]], "audit() (in module sys)": [[331, "sys.audit"]], "auditing": [[331, "index-2"]], "base_exec_prefix (in module sys)": [[331, "sys.base_exec_prefix"]], "base_prefix (in module sys)": [[331, "sys.base_prefix"]], "bits_per_digit (sys.int_info attribute)": [[331, "sys.int_info.bits_per_digit"]], "breakpointhook() (in module sys)": [[331, "sys.breakpointhook"]], "builtin_module_names (in module sys)": [[331, "sys.builtin_module_names"]], "byteorder (in module sys)": [[331, "sys.byteorder"]], "bytes_warning (sys.flags attribute)": [[331, "sys.flags.bytes_warning"]], "call_tracing() (in module sys)": [[331, "sys.call_tracing"]], "deactivate_stack_trampoline() (in module sys)": [[331, "sys.deactivate_stack_trampoline"]], "debug (sys.flags attribute)": [[331, "sys.flags.debug"]], "default_max_str_digits (sys.int_info attribute)": [[331, "sys.int_info.default_max_str_digits"]], "dev_mode (sys.flags attribute)": [[331, "sys.flags.dev_mode"]], "dig (sys.float_info attribute)": [[331, "sys.float_info.dig"]], "displayhook() (in module sys)": [[331, "sys.displayhook"]], "dllhandle (in module sys)": [[331, "sys.dllhandle"]], "dont_write_bytecode (in module sys)": [[331, "sys.dont_write_bytecode"]], "dont_write_bytecode (sys.flags attribute)": [[331, "sys.flags.dont_write_bytecode"]], "emscripten_version (sys._emscripten_info attribute)": [[331, "sys._emscripten_info.emscripten_version"]], "epsilon (sys.float_info attribute)": [[331, "sys.float_info.epsilon"]], "excepthook() (in module sys)": [[331, "sys.excepthook"]], "exception() (in module sys)": [[331, "sys.exception"]], "exec_prefix (in module sys)": [[331, "sys.exec_prefix"]], "exit() (in module sys)": [[331, "sys.exit"]], "flags (in module sys)": [[331, "sys.flags"]], "float_info (in module sys)": [[331, "sys.float_info"]], "float_repr_style (in module sys)": [[331, "sys.float_repr_style"]], "get_asyncgen_hooks() (in module sys)": [[331, "sys.get_asyncgen_hooks"]], "get_coroutine_origin_tracking_depth() (in module sys)": [[331, "sys.get_coroutine_origin_tracking_depth"]], "get_int_max_str_digits() (in module sys)": [[331, "sys.get_int_max_str_digits"]], "getallocatedblocks() (in module sys)": [[331, "sys.getallocatedblocks"]], "getandroidapilevel() (in module sys)": [[331, "sys.getandroidapilevel"]], "getdefaultencoding() (in module sys)": [[331, "sys.getdefaultencoding"]], "getdlopenflags() (in module sys)": [[331, "sys.getdlopenflags"]], "getfilesystemencodeerrors() (in module sys)": [[331, "sys.getfilesystemencodeerrors"]], "getfilesystemencoding() (in module sys)": [[331, "sys.getfilesystemencoding"]], "getprofile() (in module sys)": [[331, "sys.getprofile"]], "getrecursionlimit() (in module sys)": [[331, "sys.getrecursionlimit"]], "getrefcount() (in module sys)": [[331, "sys.getrefcount"]], "getsizeof() (in module sys)": [[331, "sys.getsizeof"]], "getswitchinterval() (in module sys)": [[331, "sys.getswitchinterval"]], "gettrace() (in module sys)": [[331, "sys.gettrace"]], "getunicodeinternedsize() (in module sys)": [[331, "sys.getunicodeinternedsize"]], "getwindowsversion() (in module sys)": [[331, "sys.getwindowsversion"]], "hash_bits (sys.hash_info attribute)": [[331, "sys.hash_info.hash_bits"]], "hash_info (in module sys)": [[331, "sys.hash_info"]], "hash_randomization (sys.flags attribute)": [[331, "sys.flags.hash_randomization"]], "hexversion (in module sys)": [[331, "sys.hexversion"]], "ignore_environment (sys.flags attribute)": [[331, "sys.flags.ignore_environment"]], "imag (sys.hash_info attribute)": [[331, "sys.hash_info.imag"]], "implementation (in module sys)": [[331, "sys.implementation"]], "inf (sys.hash_info attribute)": [[331, "sys.hash_info.inf"]], "inspect (sys.flags attribute)": [[331, "sys.flags.inspect"]], "int_info (in module sys)": [[331, "sys.int_info"]], "int_max_str_digits (sys.flags attribute)": [[331, "sys.flags.int_max_str_digits"]], "interactive (sys.flags attribute)": [[331, "sys.flags.interactive"]], "intern() (in module sys)": [[331, "sys.intern"]], "interpreter prompts": [[331, "index-27"]], "is_finalizing() (in module sys)": [[331, "sys.is_finalizing"]], "is_stack_trampoline_active() (in module sys)": [[331, "sys.is_stack_trampoline_active"]], "isolated (sys.flags attribute)": [[331, "sys.flags.isolated"]], "last_exc (in module sys)": [[331, "sys.last_exc"]], "last_traceback (in module sys)": [[331, "sys.last_traceback"], [403, "index-64"]], "last_type (in module sys)": [[331, "sys.last_type"]], "last_value (in module sys)": [[331, "sys.last_value"]], "lock (sys.thread_info attribute)": [[331, "sys.thread_info.lock"]], "mant_dig (sys.float_info attribute)": [[331, "sys.float_info.mant_dig"]], "max (sys.float_info attribute)": [[331, "sys.float_info.max"]], "max_10_exp (sys.float_info attribute)": [[331, "sys.float_info.max_10_exp"]], "max_exp (sys.float_info attribute)": [[331, "sys.float_info.max_exp"]], "maxsize (in module sys)": [[331, "sys.maxsize"]], "maxunicode (in module sys)": [[331, "sys.maxunicode"]], "meta_path (in module sys)": [[331, "sys.meta_path"]], "min (sys.float_info attribute)": [[331, "sys.float_info.min"]], "min_10_exp (sys.float_info attribute)": [[331, "sys.float_info.min_10_exp"]], "min_exp (sys.float_info attribute)": [[331, "sys.float_info.min_exp"]], "modulus (sys.hash_info attribute)": [[331, "sys.hash_info.modulus"]], "name (sys.thread_info attribute)": [[331, "sys.thread_info.name"]], "nan (sys.hash_info attribute)": [[331, "sys.hash_info.nan"]], "no_site (sys.flags attribute)": [[331, "sys.flags.no_site"]], "no_user_site (sys.flags attribute)": [[331, "sys.flags.no_user_site"]], "optimize (sys.flags attribute)": [[331, "sys.flags.optimize"]], "orig_argv (in module sys)": [[331, "sys.orig_argv"]], "path_hooks (in module sys)": [[331, "sys.path_hooks"]], "path_importer_cache (in module sys)": [[331, "sys.path_importer_cache"]], "platlibdir (in module sys)": [[331, "sys.platlibdir"]], "prefix (in module sys)": [[331, "sys.prefix"]], "profile function": [[331, "index-10"], [331, "index-28"], [343, "index-2"], [343, "index-3"]], "profiler": [[331, "index-10"], [331, "index-28"]], "prompts, interpreter": [[331, "index-27"]], "ps1 (in module sys)": [[331, "sys.ps1"]], "ps2 (in module sys)": [[331, "sys.ps2"]], "pthreads (sys._emscripten_info attribute)": [[331, "sys._emscripten_info.pthreads"]], "pycache_prefix (in module sys)": [[331, "sys.pycache_prefix"]], "quiet (sys.flags attribute)": [[331, "sys.flags.quiet"]], "radix (sys.float_info attribute)": [[331, "sys.float_info.radix"]], "rounds (sys.float_info attribute)": [[331, "sys.float_info.rounds"]], "runtime (sys._emscripten_info attribute)": [[331, "sys._emscripten_info.runtime"]], "safe_path (sys.flags attribute)": [[331, "sys.flags.safe_path"]], "seed_bits (sys.hash_info attribute)": [[331, "sys.hash_info.seed_bits"]], "set_asyncgen_hooks() (in module sys)": [[331, "sys.set_asyncgen_hooks"]], "set_coroutine_origin_tracking_depth() (in module sys)": [[331, "sys.set_coroutine_origin_tracking_depth"]], "set_int_max_str_digits() (in module sys)": [[331, "sys.set_int_max_str_digits"]], "setdlopenflags() (in module sys)": [[331, "sys.setdlopenflags"]], "setprofile() (in module sys)": [[331, "sys.setprofile"]], "setrecursionlimit() (in module sys)": [[331, "sys.setrecursionlimit"]], "settrace() (in module sys)": [[331, "sys.settrace"]], "shared_memory (sys._emscripten_info attribute)": [[331, "sys._emscripten_info.shared_memory"]], "sizeof_digit (sys.int_info attribute)": [[331, "sys.int_info.sizeof_digit"]], "stdlib_module_names (in module sys)": [[331, "sys.stdlib_module_names"]], "str_digits_check_threshold (sys.int_info attribute)": [[331, "sys.int_info.str_digits_check_threshold"]], "thread_info (in module sys)": [[331, "sys.thread_info"]], "trace function": [[331, "index-11"], [331, "index-29"], [343, "index-0"], [343, "index-1"]], "traceback": [[331, "index-8"], [358, "index-0"], [358, "module-traceback"], [402, "index-11"], [403, "index-64"], [411, "index-28"]], "tracebacklimit (in module sys)": [[331, "sys.tracebacklimit"]], "unraisablehook() (in module sys)": [[331, "sys.unraisablehook"]], "utf8_mode (sys.flags attribute)": [[331, "sys.flags.utf8_mode"]], "verbose (sys.flags attribute)": [[331, "sys.flags.verbose"]], "version (sys.thread_info attribute)": [[331, "sys.thread_info.version"]], "version_info (in module sys)": [[331, "sys.version_info"]], "warn_default_encoding (sys.flags attribute)": [[331, "sys.flags.warn_default_encoding"]], "warnoptions (in module sys)": [[331, "sys.warnoptions"]], "width (sys.hash_info attribute)": [[331, "sys.hash_info.width"]], "winver (in module sys)": [[331, "sys.winver"]], "pep 380#use-of-stopiteration-to-return-values": [[332, "index-0"]], "free_tool_id() (in module sys.monitoring)": [[332, "sys.monitoring.free_tool_id"]], "get_events() (in module sys.monitoring)": [[332, "sys.monitoring.get_events"]], "get_local_events() (in module sys.monitoring)": [[332, "sys.monitoring.get_local_events"]], "get_tool() (in module sys.monitoring)": [[332, "sys.monitoring.get_tool"]], "register_callback() (in module sys.monitoring)": [[332, "sys.monitoring.register_callback"]], "set_events() (in module sys.monitoring)": [[332, "sys.monitoring.set_events"]], "set_local_events() (in module sys.monitoring)": [[332, "sys.monitoring.set_local_events"]], "sys.monitoring": [[332, "module-sys.monitoring"]], "use_tool_id() (in module sys.monitoring)": [[332, "sys.monitoring.use_tool_id"]], "_get_preferred_schemes() (in module sysconfig)": [[334, "sysconfig._get_preferred_schemes"]], "configuration information": [[334, "index-0"]], "get_config_h_filename() (in module sysconfig)": [[334, "sysconfig.get_config_h_filename"]], "get_config_var() (in module sysconfig)": [[334, "sysconfig.get_config_var"]], "get_config_vars() (in module sysconfig)": [[334, "sysconfig.get_config_vars"]], "get_default_scheme() (in module sysconfig)": [[334, "sysconfig.get_default_scheme"]], "get_makefile_filename() (in module sysconfig)": [[334, "sysconfig.get_makefile_filename"]], "get_path() (in module sysconfig)": [[334, "sysconfig.get_path"]], "get_path_names() (in module sysconfig)": [[334, "sysconfig.get_path_names"]], "get_paths() (in module sysconfig)": [[334, "sysconfig.get_paths"]], "get_platform() (in module sysconfig)": [[334, "sysconfig.get_platform"]], "get_preferred_scheme() (in module sysconfig)": [[334, "sysconfig.get_preferred_scheme"]], "get_python_version() (in module sysconfig)": [[334, "sysconfig.get_python_version"]], "get_scheme_names() (in module sysconfig)": [[334, "sysconfig.get_scheme_names"]], "is_python_build() (in module sysconfig)": [[334, "sysconfig.is_python_build"]], "parse_config_h() (in module sysconfig)": [[334, "sysconfig.parse_config_h"]], "sysconfig": [[334, "module-sysconfig"]], "closelog() (in module syslog)": [[335, "syslog.closelog"]], "openlog() (in module syslog)": [[335, "syslog.openlog"]], "setlogmask() (in module syslog)": [[335, "syslog.setlogmask"]], "syslog": [[335, "module-syslog"]], "syslog() (in module syslog)": [[335, "syslog.syslog"]], "nannynag": [[336, "tabnanny.NannyNag"]], "check() (in module tabnanny)": [[336, "tabnanny.check"]], "filename_only (in module tabnanny)": [[336, "tabnanny.filename_only"]], "process_tokens() (in module tabnanny)": [[336, "tabnanny.process_tokens"]], "tabnanny": [[336, "module-tabnanny"]], "verbose (in module tabnanny)": [[336, "tabnanny.verbose"]], "--create": [[337, "cmdoption-tarfile-create"], [397, "cmdoption-zipfile-create"]], "--extract": [[337, "cmdoption-tarfile-extract"], [397, "cmdoption-zipfile-extract"]], "--filter": [[337, "cmdoption-tarfile-filter"]], "--list": [[337, "cmdoption-tarfile-list"], [397, "cmdoption-zipfile-list"]], "--test": [[337, "cmdoption-tarfile-test"], [397, "cmdoption-zipfile-test"]], "absolutelinkerror": [[337, "tarfile.AbsoluteLinkError"]], "absolutepatherror": [[337, "tarfile.AbsolutePathError"]], "compressionerror": [[337, "tarfile.CompressionError"]], "default_format (in module tarfile)": [[337, "tarfile.DEFAULT_FORMAT"]], "encoding (in module tarfile)": [[337, "tarfile.ENCODING"]], "extracterror": [[337, "tarfile.ExtractError"]], "filtererror": [[337, "tarfile.FilterError"]], "gnu_format (in module tarfile)": [[337, "tarfile.GNU_FORMAT"]], "headererror": [[337, "tarfile.HeaderError"]], "linkoutsidedestinationerror": [[337, "tarfile.LinkOutsideDestinationError"]], "outsidedestinationerror": [[337, "tarfile.OutsideDestinationError"]], "pax_format (in module tarfile)": [[337, "tarfile.PAX_FORMAT"]], "pep 706": [[337, "index-0"], [449, "index-22"]], "readerror": [[337, "tarfile.ReadError"]], "specialfileerror": [[337, "tarfile.SpecialFileError"]], "streamerror": [[337, "tarfile.StreamError"]], "tarerror": [[337, "tarfile.TarError"]], "tarfile (class in tarfile)": [[337, "tarfile.TarFile"]], "tarinfo (class in tarfile)": [[337, "tarfile.TarInfo"]], "ustar_format (in module tarfile)": [[337, "tarfile.USTAR_FORMAT"]], "add() (tarfile.tarfile method)": [[337, "tarfile.TarFile.add"]], "addfile() (tarfile.tarfile method)": [[337, "tarfile.TarFile.addfile"]], "close() (tarfile.tarfile method)": [[337, "tarfile.TarFile.close"]], "data_filter() (in module tarfile)": [[337, "tarfile.data_filter"]], "errorlevel (tarfile.tarfile attribute)": [[337, "tarfile.TarFile.errorlevel"]], "extract() (tarfile.tarfile method)": [[337, "tarfile.TarFile.extract"]], "extractall() (tarfile.tarfile method)": [[337, "tarfile.TarFile.extractall"]], "extractfile() (tarfile.tarfile method)": [[337, "tarfile.TarFile.extractfile"]], "extraction_filter (tarfile.tarfile attribute)": [[337, "tarfile.TarFile.extraction_filter"]], "frombuf() (tarfile.tarinfo class method)": [[337, "tarfile.TarInfo.frombuf"]], "fromtarfile() (tarfile.tarinfo class method)": [[337, "tarfile.TarInfo.fromtarfile"]], "fully_trusted_filter() (in module tarfile)": [[337, "tarfile.fully_trusted_filter"]], "getmember() (tarfile.tarfile method)": [[337, "tarfile.TarFile.getmember"]], "getmembers() (tarfile.tarfile method)": [[337, "tarfile.TarFile.getmembers"]], "getnames() (tarfile.tarfile method)": [[337, "tarfile.TarFile.getnames"]], "gettarinfo() (tarfile.tarfile method)": [[337, "tarfile.TarFile.gettarinfo"]], "gid (tarfile.tarinfo attribute)": [[337, "tarfile.TarInfo.gid"]], "gname (tarfile.tarinfo attribute)": [[337, "tarfile.TarInfo.gname"]], "is_tarfile() (in module tarfile)": [[337, "tarfile.is_tarfile"]], "isblk() (tarfile.tarinfo method)": [[337, "tarfile.TarInfo.isblk"]], "ischr() (tarfile.tarinfo method)": [[337, "tarfile.TarInfo.ischr"]], "isdev() (tarfile.tarinfo method)": [[337, "tarfile.TarInfo.isdev"]], "isdir() (tarfile.tarinfo method)": [[337, "tarfile.TarInfo.isdir"]], "isfifo() (tarfile.tarinfo method)": [[337, "tarfile.TarInfo.isfifo"]], "isfile() (tarfile.tarinfo method)": [[337, "tarfile.TarInfo.isfile"]], "islnk() (tarfile.tarinfo method)": [[337, "tarfile.TarInfo.islnk"]], "isreg() (tarfile.tarinfo method)": [[337, "tarfile.TarInfo.isreg"]], "issym() (tarfile.tarinfo method)": [[337, "tarfile.TarInfo.issym"]], "linkname (tarfile.tarinfo attribute)": [[337, "tarfile.TarInfo.linkname"]], "list() (tarfile.tarfile method)": [[337, "tarfile.TarFile.list"]], "mode (tarfile.tarinfo attribute)": [[337, "tarfile.TarInfo.mode"]], "mtime (tarfile.tarinfo attribute)": [[337, "tarfile.TarInfo.mtime"]], "name (tarfile.tarinfo attribute)": [[337, "tarfile.TarInfo.name"]], "next() (tarfile.tarfile method)": [[337, "tarfile.TarFile.next"]], "open() (in module tarfile)": [[337, "tarfile.open"]], "open() (tarfile.tarfile class method)": [[337, "tarfile.TarFile.open"]], "pax_headers (tarfile.tarfile attribute)": [[337, "tarfile.TarFile.pax_headers"]], "pax_headers (tarfile.tarinfo attribute)": [[337, "tarfile.TarInfo.pax_headers"]], "size (tarfile.tarinfo attribute)": [[337, "tarfile.TarInfo.size"]], "tar_filter() (in module tarfile)": [[337, "tarfile.tar_filter"]], "tarfile": [[337, "module-tarfile"]], "tarfile command line option": [[337, "cmdoption-tarfile-c"], [337, "cmdoption-tarfile-create"], [337, "cmdoption-tarfile-e"], [337, "cmdoption-tarfile-extract"], [337, "cmdoption-tarfile-filter"], [337, "cmdoption-tarfile-l"], [337, "cmdoption-tarfile-list"], [337, "cmdoption-tarfile-t"], [337, "cmdoption-tarfile-test"], [337, "cmdoption-tarfile-v"]], "tarinfo (tarfile.filtererror attribute)": [[337, "tarfile.FilterError.tarinfo"]], "tobuf() (tarfile.tarinfo method)": [[337, "tarfile.TarInfo.tobuf"]], "type (tarfile.tarinfo attribute)": [[337, "tarfile.TarInfo.type"]], "uid (tarfile.tarinfo attribute)": [[337, "tarfile.TarInfo.uid"]], "uname (tarfile.tarinfo attribute)": [[337, "tarfile.TarInfo.uname"]], "namedtemporaryfile() (in module tempfile)": [[338, "tempfile.NamedTemporaryFile"]], "spooledtemporaryfile (class in tempfile)": [[338, "tempfile.SpooledTemporaryFile"]], "temp": [[338, "index-2"], [436, "index-7"]], "tmp": [[338, "index-3"]], "tmpdir": [[338, "index-1"]], "temporarydirectory (class in tempfile)": [[338, "tempfile.TemporaryDirectory"]], "temporaryfile() (in module tempfile)": [[338, "tempfile.TemporaryFile"]], "file name": [[338, "index-0"]], "gettempdir() (in module tempfile)": [[338, "tempfile.gettempdir"]], "gettempdirb() (in module tempfile)": [[338, "tempfile.gettempdirb"]], "gettempprefix() (in module tempfile)": [[338, "tempfile.gettempprefix"]], "gettempprefixb() (in module tempfile)": [[338, "tempfile.gettempprefixb"]], "mkdtemp() (in module tempfile)": [[338, "tempfile.mkdtemp"]], "mkstemp() (in module tempfile)": [[338, "tempfile.mkstemp"]], "mktemp() (in module tempfile)": [[338, "tempfile.mktemp"]], "tempdir (in module tempfile)": [[338, "tempfile.tempdir"]], "tempfile": [[338, "module-tempfile"]], "temporary": [[338, "index-0"]], "tcdrain() (in module termios)": [[339, "termios.tcdrain"]], "tcflow() (in module termios)": [[339, "termios.tcflow"]], "tcflush() (in module termios)": [[339, "termios.tcflush"]], "tcgetattr() (in module termios)": [[339, "termios.tcgetattr"]], "tcgetwinsize() (in module termios)": [[339, "termios.tcgetwinsize"]], "tcsendbreak() (in module termios)": [[339, "termios.tcsendbreak"]], "tcsetattr() (in module termios)": [[339, "termios.tcsetattr"]], "tcsetwinsize() (in module termios)": [[339, "termios.tcsetwinsize"]], "termios": [[339, "module-termios"]], "tty": [[339, "index-0"], [360, "module-tty"]], "always_eq (in module test.support)": [[340, "test.support.ALWAYS_EQ"]], "bytecodetestcase (class in test.support.bytecode_helper)": [[340, "test.support.bytecode_helper.BytecodeTestCase"]], "cleanimport (class in test.support.import_helper)": [[340, "test.support.import_helper.CleanImport"]], "dirsonsyspath (class in test.support.import_helper)": [[340, "test.support.import_helper.DirsOnSysPath"]], "environmentvarguard (class in test.support.os_helper)": [[340, "test.support.os_helper.EnvironmentVarGuard"]], "fs_nonascii (in module test.support.os_helper)": [[340, "test.support.os_helper.FS_NONASCII"]], "fakepath (class in test.support.os_helper)": [[340, "test.support.os_helper.FakePath"]], "have_docstrings (in module test.support)": [[340, "test.support.HAVE_DOCSTRINGS"]], "internet_timeout (in module test.support)": [[340, "test.support.INTERNET_TIMEOUT"]], "ipv6_enabled (in module test.support.socket_helper)": [[340, "test.support.socket_helper.IPV6_ENABLED"]], "largest (in module test.support)": [[340, "test.support.LARGEST"]], "long_timeout (in module test.support)": [[340, "test.support.LONG_TIMEOUT"]], "loopback_timeout (in module test.support)": [[340, "test.support.LOOPBACK_TIMEOUT"]], "max_py_ssize_t (in module test.support)": [[340, "test.support.MAX_Py_ssize_t"]], "missing_c_docstrings (in module test.support)": [[340, "test.support.MISSING_C_DOCSTRINGS"]], "matcher (class in test.support)": [[340, "test.support.Matcher"]], "never_eq (in module test.support)": [[340, "test.support.NEVER_EQ"]], "pgo (in module test.support)": [[340, "test.support.PGO"]], "pipe_max_size (in module test.support)": [[340, "test.support.PIPE_MAX_SIZE"]], "pythonusersite": [[340, "index-2"]], "py_debug (in module test.support)": [[340, "test.support.Py_DEBUG"]], "resourcedenied": [[340, "test.support.ResourceDenied"]], "savedcwd (in module test.support.os_helper)": [[340, "test.support.os_helper.SAVEDCWD"]], "short_timeout (in module test.support)": [[340, "test.support.SHORT_TIMEOUT"]], "smallest (in module test.support)": [[340, "test.support.SMALLEST"]], "sock_max_size (in module test.support)": [[340, "test.support.SOCK_MAX_SIZE"]], "savesignals (class in test.support)": [[340, "test.support.SaveSignals"]], "suppresscrashreport (class in test.support)": [[340, "test.support.SuppressCrashReport"]], "testfn (in module test.support.os_helper)": [[340, "test.support.os_helper.TESTFN"]], "testfn_nonascii (in module test.support.os_helper)": [[340, "test.support.os_helper.TESTFN_NONASCII"]], "testfn_undecodable (in module test.support.os_helper)": [[340, "test.support.os_helper.TESTFN_UNDECODABLE"]], "testfn_unencodable (in module test.support.os_helper)": [[340, "test.support.os_helper.TESTFN_UNENCODABLE"]], "testfn_unicode (in module test.support.os_helper)": [[340, "test.support.os_helper.TESTFN_UNICODE"]], "test_data_dir (in module test.support)": [[340, "test.support.TEST_DATA_DIR"]], "test_home_dir (in module test.support)": [[340, "test.support.TEST_HOME_DIR"]], "test_http_url (in module test.support)": [[340, "test.support.TEST_HTTP_URL"]], "test_support_dir (in module test.support)": [[340, "test.support.TEST_SUPPORT_DIR"]], "testfailed": [[340, "test.support.TestFailed"]], "warningsrecorder (class in test.support.warnings_helper)": [[340, "test.support.warnings_helper.WarningsRecorder"]], "adjust_int_max_str_digits() (in module test.support)": [[340, "test.support.adjust_int_max_str_digits"]], "anticipate_failure() (in module test.support)": [[340, "test.support.anticipate_failure"]], "args_from_interpreter_flags() (in module test.support)": [[340, "test.support.args_from_interpreter_flags"]], "assertinbytecode() (test.support.bytecode_helper.bytecodetestcase method)": [[340, "test.support.bytecode_helper.BytecodeTestCase.assertInBytecode"]], "assertnotinbytecode() (test.support.bytecode_helper.bytecodetestcase method)": [[340, "test.support.bytecode_helper.BytecodeTestCase.assertNotInBytecode"]], "assert_python_failure() (in module test.support.script_helper)": [[340, "test.support.script_helper.assert_python_failure"]], "assert_python_ok() (in module test.support.script_helper)": [[340, "test.support.script_helper.assert_python_ok"]], "bigaddrspacetest() (in module test.support)": [[340, "test.support.bigaddrspacetest"]], "bigmemtest() (in module test.support)": [[340, "test.support.bigmemtest"]], "bind_port() (in module test.support.socket_helper)": [[340, "test.support.socket_helper.bind_port"]], "bind_unix_socket() (in module test.support.socket_helper)": [[340, "test.support.socket_helper.bind_unix_socket"]], "busy_retry() (in module test.support)": [[340, "test.support.busy_retry"]], "calcobjsize() (in module test.support)": [[340, "test.support.calcobjsize"]], "calcvobjsize() (in module test.support)": [[340, "test.support.calcvobjsize"]], "can_symlink() (in module test.support.os_helper)": [[340, "test.support.os_helper.can_symlink"]], "can_xattr() (in module test.support.os_helper)": [[340, "test.support.os_helper.can_xattr"]], "captured_stderr() (in module test.support)": [[340, "test.support.captured_stderr"]], "captured_stdin() (in module test.support)": [[340, "test.support.captured_stdin"]], "captured_stdout() (in module test.support)": [[340, "test.support.captured_stdout"]], "catch_threading_exception() (in module test.support.threading_helper)": [[340, "test.support.threading_helper.catch_threading_exception"]], "catch_unraisable_exception() (in module test.support)": [[340, "test.support.catch_unraisable_exception"]], "change_cwd() (in module test.support.os_helper)": [[340, "test.support.os_helper.change_cwd"]], "check__all__() (in module test.support)": [[340, "test.support.check__all__"]], "check_disallow_instantiation() (in module test.support)": [[340, "test.support.check_disallow_instantiation"]], "check_free_after_iterating() (in module test.support)": [[340, "test.support.check_free_after_iterating"]], "check_impl_detail() (in module test.support)": [[340, "test.support.check_impl_detail"]], "check_no_resource_warning() (in module test.support.warnings_helper)": [[340, "test.support.warnings_helper.check_no_resource_warning"]], "check_syntax_error() (in module test.support)": [[340, "test.support.check_syntax_error"]], "check_syntax_warning() (in module test.support.warnings_helper)": [[340, "test.support.warnings_helper.check_syntax_warning"]], "check_warnings() (in module test.support.warnings_helper)": [[340, "test.support.warnings_helper.check_warnings"]], "checksizeof() (in module test.support)": [[340, "test.support.checksizeof"]], "cpython_only() (in module test.support)": [[340, "test.support.cpython_only"]], "create_empty_file() (in module test.support.os_helper)": [[340, "test.support.os_helper.create_empty_file"]], "detect_api_mismatch() (in module test.support)": [[340, "test.support.detect_api_mismatch"]], "disable_faulthandler() (in module test.support)": [[340, "test.support.disable_faulthandler"]], "disable_gc() (in module test.support)": [[340, "test.support.disable_gc"]], "fd_count() (in module test.support.os_helper)": [[340, "test.support.os_helper.fd_count"]], "find_unused_port() (in module test.support.socket_helper)": [[340, "test.support.socket_helper.find_unused_port"]], "findfile() (in module test.support)": [[340, "test.support.findfile"]], "flush_std_streams() (in module test.support)": [[340, "test.support.flush_std_streams"]], "forget() (in module test.support.import_helper)": [[340, "test.support.import_helper.forget"]], "fs_is_case_insensitive() (in module test.support.os_helper)": [[340, "test.support.os_helper.fs_is_case_insensitive"]], "gc_collect() (in module test.support)": [[340, "test.support.gc_collect"]], "get_attribute() (in module test.support)": [[340, "test.support.get_attribute"]], "get_disassembly_as_string() (test.support.bytecode_helper.bytecodetestcase method)": [[340, "test.support.bytecode_helper.BytecodeTestCase.get_disassembly_as_string"]], "get_original_stdout() (in module test.support)": [[340, "test.support.get_original_stdout"]], "get_pagesize() (in module test.support)": [[340, "test.support.get_pagesize"]], "ignore_warnings() (in module test.support.warnings_helper)": [[340, "test.support.warnings_helper.ignore_warnings"]], "impl_detail() (in module test.support)": [[340, "test.support.impl_detail"]], "import_fresh_module() (in module test.support.import_helper)": [[340, "test.support.import_helper.import_fresh_module"]], "import_module() (in module test.support.import_helper)": [[340, "test.support.import_helper.import_module"]], "interpreter_requires_environment() (in module test.support.script_helper)": [[340, "test.support.script_helper.interpreter_requires_environment"]], "is_android (in module test.support)": [[340, "test.support.is_android"]], "is_jython (in module test.support)": [[340, "test.support.is_jython"]], "is_resource_enabled() (in module test.support)": [[340, "test.support.is_resource_enabled"]], "join_thread() (in module test.support.threading_helper)": [[340, "test.support.threading_helper.join_thread"]], "kill_python() (in module test.support.script_helper)": [[340, "test.support.script_helper.kill_python"]], "load_package_tests() (in module test.support)": [[340, "test.support.load_package_tests"]], "make_bad_fd() (in module test.support.os_helper)": [[340, "test.support.os_helper.make_bad_fd"]], "make_legacy_pyc() (in module test.support.import_helper)": [[340, "test.support.import_helper.make_legacy_pyc"]], "make_pkg() (in module test.support.script_helper)": [[340, "test.support.script_helper.make_pkg"]], "make_script() (in module test.support.script_helper)": [[340, "test.support.script_helper.make_script"]], "make_zip_pkg() (in module test.support.script_helper)": [[340, "test.support.script_helper.make_zip_pkg"]], "make_zip_script() (in module test.support.script_helper)": [[340, "test.support.script_helper.make_zip_script"]], "match_test() (in module test.support)": [[340, "test.support.match_test"]], "match_value() (test.support.matcher method)": [[340, "test.support.Matcher.match_value"]], "matches() (test.support.matcher method)": [[340, "test.support.Matcher.matches"]], "max_memuse (in module test.support)": [[340, "test.support.max_memuse"]], "missing_compiler_executable() (in module test.support)": [[340, "test.support.missing_compiler_executable"]], "modules_cleanup() (in module test.support.import_helper)": [[340, "test.support.import_helper.modules_cleanup"]], "modules_setup() (in module test.support.import_helper)": [[340, "test.support.import_helper.modules_setup"]], "no_tracing() (in module test.support)": [[340, "test.support.no_tracing"]], "open_urlresource() (in module test.support)": [[340, "test.support.open_urlresource"]], "optim_args_from_interpreter_flags() (in module test.support)": [[340, "test.support.optim_args_from_interpreter_flags"]], "patch() (in module test.support)": [[340, "test.support.patch"]], "print_warning() (in module test.support)": [[340, "test.support.print_warning"]], "python_is_optimized() (in module test.support)": [[340, "test.support.python_is_optimized"]], "real_max_memuse (in module test.support)": [[340, "test.support.real_max_memuse"]], "reap_children() (in module test.support)": [[340, "test.support.reap_children"]], "reap_threads() (in module test.support.threading_helper)": [[340, "test.support.threading_helper.reap_threads"]], "record_original_stdout() (in module test.support)": [[340, "test.support.record_original_stdout"]], "refcount_test() (in module test.support)": [[340, "test.support.refcount_test"]], "requires() (in module test.support)": [[340, "test.support.requires"]], "requires_ieee_754() (in module test.support)": [[340, "test.support.requires_IEEE_754"]], "requires_bz2() (in module test.support)": [[340, "test.support.requires_bz2"]], "requires_docstrings() (in module test.support)": [[340, "test.support.requires_docstrings"]], "requires_freebsd_version() (in module test.support)": [[340, "test.support.requires_freebsd_version"]], "requires_gzip() (in module test.support)": [[340, "test.support.requires_gzip"]], "requires_limited_api() (in module test.support)": [[340, "test.support.requires_limited_api"]], "requires_linux_version() (in module test.support)": [[340, "test.support.requires_linux_version"]], "requires_lzma() (in module test.support)": [[340, "test.support.requires_lzma"]], "requires_mac_version() (in module test.support)": [[340, "test.support.requires_mac_version"]], "requires_resource() (in module test.support)": [[340, "test.support.requires_resource"]], "requires_zlib() (in module test.support)": [[340, "test.support.requires_zlib"]], "restore() (test.support.savesignals method)": [[340, "test.support.SaveSignals.restore"]], "rmdir() (in module test.support.os_helper)": [[340, "test.support.os_helper.rmdir"]], "rmtree() (in module test.support.os_helper)": [[340, "test.support.os_helper.rmtree"]], "run_doctest() (in module test.support)": [[340, "test.support.run_doctest"]], "run_in_subinterp() (in module test.support)": [[340, "test.support.run_in_subinterp"]], "run_python_until_end() (in module test.support.script_helper)": [[340, "test.support.script_helper.run_python_until_end"]], "run_unittest() (in module test.support)": [[340, "test.support.run_unittest"]], "run_with_locale() (in module test.support)": [[340, "test.support.run_with_locale"]], "run_with_tz() (in module test.support)": [[340, "test.support.run_with_tz"]], "save() (test.support.savesignals method)": [[340, "test.support.SaveSignals.save"]], "set() (test.support.os_helper.environmentvarguard method)": [[340, "test.support.os_helper.EnvironmentVarGuard.set"]], "set_match_tests() (in module test.support)": [[340, "test.support.set_match_tests"]], "set_memlimit() (in module test.support)": [[340, "test.support.set_memlimit"]], "setswitchinterval() (in module test.support)": [[340, "test.support.setswitchinterval"]], "skip_if_broken_multiprocessing_synchronize() (in module test.support)": [[340, "test.support.skip_if_broken_multiprocessing_synchronize"]], "skip_unless_bind_unix_socket() (in module test.support.socket_helper)": [[340, "test.support.socket_helper.skip_unless_bind_unix_socket"]], "skip_unless_symlink() (in module test.support.os_helper)": [[340, "test.support.os_helper.skip_unless_symlink"]], "skip_unless_xattr() (in module test.support.os_helper)": [[340, "test.support.os_helper.skip_unless_xattr"]], "sleeping_retry() (in module test.support)": [[340, "test.support.sleeping_retry"]], "sortdict() (in module test.support)": [[340, "test.support.sortdict"]], "spawn_python() (in module test.support.script_helper)": [[340, "test.support.script_helper.spawn_python"]], "start_threads() (in module test.support.threading_helper)": [[340, "test.support.threading_helper.start_threads"]], "swap_attr() (in module test.support)": [[340, "test.support.swap_attr"]], "swap_item() (in module test.support)": [[340, "test.support.swap_item"]], "system_must_validate_cert() (in module test.support)": [[340, "test.support.system_must_validate_cert"]], "temp_cwd() (in module test.support.os_helper)": [[340, "test.support.os_helper.temp_cwd"]], "temp_dir() (in module test.support.os_helper)": [[340, "test.support.os_helper.temp_dir"]], "temp_umask() (in module test.support.os_helper)": [[340, "test.support.os_helper.temp_umask"]], "test": [[340, "module-test"], [405, "index-80"], [405, "index-81"]], "test.support": [[340, "module-test.support"]], "test.support.bytecode_helper": [[340, "module-test.support.bytecode_helper"]], "test.support.import_helper": [[340, "module-test.support.import_helper"]], "test.support.os_helper": [[340, "module-test.support.os_helper"]], "test.support.script_helper": [[340, "module-test.support.script_helper"]], "test.support.socket_helper": [[340, "module-test.support.socket_helper"]], "test.support.threading_helper": [[340, "module-test.support.threading_helper"]], "test.support.warnings_helper": [[340, "module-test.support.warnings_helper"]], "threading_cleanup() (in module test.support.threading_helper)": [[340, "test.support.threading_helper.threading_cleanup"]], "threading_setup() (in module test.support.threading_helper)": [[340, "test.support.threading_helper.threading_setup"]], "transient_internet() (in module test.support.socket_helper)": [[340, "test.support.socket_helper.transient_internet"]], "unix_shell (in module test.support)": [[340, "test.support.unix_shell"]], "unlink() (in module test.support.os_helper)": [[340, "test.support.os_helper.unlink"]], "unload() (in module test.support.import_helper)": [[340, "test.support.import_helper.unload"]], "unset() (test.support.os_helper.environmentvarguard method)": [[340, "test.support.os_helper.EnvironmentVarGuard.unset"]], "verbose (in module test.support)": [[340, "test.support.verbose"]], "wait_process() (in module test.support)": [[340, "test.support.wait_process"]], "wait_threads_exit() (in module test.support.threading_helper)": [[340, "test.support.threading_helper.wait_threads_exit"]], "with_pymalloc() (in module test.support)": [[340, "test.support.with_pymalloc"]], "textwrapper (class in textwrap)": [[342, "textwrap.TextWrapper"]], "break_long_words (textwrap.textwrapper attribute)": [[342, "textwrap.TextWrapper.break_long_words"]], "break_on_hyphens (textwrap.textwrapper attribute)": [[342, "textwrap.TextWrapper.break_on_hyphens"]], "dedent() (in module textwrap)": [[342, "textwrap.dedent"]], "drop_whitespace (textwrap.textwrapper attribute)": [[342, "textwrap.TextWrapper.drop_whitespace"]], "expand_tabs (textwrap.textwrapper attribute)": [[342, "textwrap.TextWrapper.expand_tabs"]], "fill() (in module textwrap)": [[342, "textwrap.fill"]], "fill() (textwrap.textwrapper method)": [[342, "textwrap.TextWrapper.fill"]], "fix_sentence_endings (textwrap.textwrapper attribute)": [[342, "textwrap.TextWrapper.fix_sentence_endings"]], "indent() (in module textwrap)": [[342, "textwrap.indent"]], "initial_indent (textwrap.textwrapper attribute)": [[342, "textwrap.TextWrapper.initial_indent"]], "max_lines (textwrap.textwrapper attribute)": [[342, "textwrap.TextWrapper.max_lines"]], "placeholder (textwrap.textwrapper attribute)": [[342, "textwrap.TextWrapper.placeholder"]], "replace_whitespace (textwrap.textwrapper attribute)": [[342, "textwrap.TextWrapper.replace_whitespace"]], "shorten() (in module textwrap)": [[342, "textwrap.shorten"]], "subsequent_indent (textwrap.textwrapper attribute)": [[342, "textwrap.TextWrapper.subsequent_indent"]], "tabsize (textwrap.textwrapper attribute)": [[342, "textwrap.TextWrapper.tabsize"]], "textwrap": [[342, "module-textwrap"]], "width (textwrap.textwrapper attribute)": [[342, "textwrap.TextWrapper.width"]], "wrap() (in module textwrap)": [[342, "textwrap.wrap"]], "wrap() (textwrap.textwrapper method)": [[342, "textwrap.TextWrapper.wrap"]], "barrier (class in threading)": [[343, "threading.Barrier"]], "boundedsemaphore (class in threading)": [[343, "threading.BoundedSemaphore"]], "condition (class in threading)": [[343, "threading.Condition"]], "event (class in threading)": [[343, "threading.Event"]], "lock (class in threading)": [[343, "threading.Lock"]], "rlock (class in threading)": [[343, "threading.RLock"]], "semaphore (class in threading)": [[343, "threading.Semaphore"]], "timeout_max (in module threading)": [[343, "threading.TIMEOUT_MAX"]], "thread (class in threading)": [[343, "threading.Thread"]], "timer (class in threading)": [[343, "threading.Timer"]], "__excepthook__ (in module threading)": [[343, "threading.__excepthook__"]], "abort() (threading.barrier method)": [[343, "threading.Barrier.abort"]], "acquire() (threading.condition method)": [[343, "threading.Condition.acquire"]], "acquire() (threading.lock method)": [[343, "threading.Lock.acquire"]], "acquire() (threading.rlock method)": [[343, "threading.RLock.acquire"]], "acquire() (threading.semaphore method)": [[343, "threading.Semaphore.acquire"]], "active_count() (in module threading)": [[343, "threading.active_count"]], "broken (threading.barrier attribute)": [[343, "threading.Barrier.broken"]], "cancel() (threading.timer method)": [[343, "threading.Timer.cancel"]], "clear() (threading.event method)": [[343, "threading.Event.clear"]], "current_thread() (in module threading)": [[343, "threading.current_thread"]], "daemon (threading.thread attribute)": [[343, "threading.Thread.daemon"]], "enumerate() (in module threading)": [[343, "threading.enumerate"]], "excepthook() (in module threading)": [[343, "threading.excepthook"]], "getname() (threading.thread method)": [[343, "threading.Thread.getName"]], "get_ident() (in module threading)": [[343, "threading.get_ident"]], "get_native_id() (in module threading)": [[343, "threading.get_native_id"]], "getprofile() (in module threading)": [[343, "threading.getprofile"]], "gettrace() (in module threading)": [[343, "threading.gettrace"]], "ident (threading.thread attribute)": [[343, "threading.Thread.ident"]], "isdaemon() (threading.thread method)": [[343, "threading.Thread.isDaemon"]], "is_alive() (threading.thread method)": [[343, "threading.Thread.is_alive"]], "is_set() (threading.event method)": [[343, "threading.Event.is_set"]], "join() (threading.thread method)": [[343, "threading.Thread.join"]], "local (class in threading)": [[343, "threading.local"]], "locked() (threading.lock method)": [[343, "threading.Lock.locked"]], "main_thread() (in module threading)": [[343, "threading.main_thread"]], "n_waiting (threading.barrier attribute)": [[343, "threading.Barrier.n_waiting"]], "name (threading.thread attribute)": [[343, "threading.Thread.name"]], "native_id (threading.thread attribute)": [[343, "threading.Thread.native_id"]], "notify() (threading.condition method)": [[343, "threading.Condition.notify"]], "notify_all() (threading.condition method)": [[343, "threading.Condition.notify_all"]], "parties (threading.barrier attribute)": [[343, "threading.Barrier.parties"]], "release() (threading.condition method)": [[343, "threading.Condition.release"]], "release() (threading.lock method)": [[343, "threading.Lock.release"]], "release() (threading.rlock method)": [[343, "threading.RLock.release"]], "release() (threading.semaphore method)": [[343, "threading.Semaphore.release"]], "reset() (threading.barrier method)": [[343, "threading.Barrier.reset"]], "run() (threading.thread method)": [[343, "threading.Thread.run"]], "set() (threading.event method)": [[343, "threading.Event.set"]], "setdaemon() (threading.thread method)": [[343, "threading.Thread.setDaemon"]], "setname() (threading.thread method)": [[343, "threading.Thread.setName"]], "setprofile() (in module threading)": [[343, "threading.setprofile"]], "setprofile_all_threads() (in module threading)": [[343, "threading.setprofile_all_threads"]], "settrace() (in module threading)": [[343, "threading.settrace"]], "settrace_all_threads() (in module threading)": [[343, "threading.settrace_all_threads"]], "stack_size() (in module threading)": [[343, "threading.stack_size"]], "start() (threading.thread method)": [[343, "threading.Thread.start"]], "threading": [[343, "module-threading"]], "wait() (threading.barrier method)": [[343, "threading.Barrier.wait"]], "wait() (threading.condition method)": [[343, "threading.Condition.wait"]], "wait() (threading.event method)": [[343, "threading.Event.wait"]], "wait_for() (threading.condition method)": [[343, "threading.Condition.wait_for"]], "2-digit years": [[344, "index-3"]], "clock_boottime (in module time)": [[344, "time.CLOCK_BOOTTIME"]], "clock_highres (in module time)": [[344, "time.CLOCK_HIGHRES"]], "clock_monotonic (in module time)": [[344, "time.CLOCK_MONOTONIC"]], "clock_monotonic_raw (in module time)": [[344, "time.CLOCK_MONOTONIC_RAW"]], "clock_process_cputime_id (in module time)": [[344, "time.CLOCK_PROCESS_CPUTIME_ID"]], "clock_prof (in module time)": [[344, "time.CLOCK_PROF"]], "clock_realtime (in module time)": [[344, "time.CLOCK_REALTIME"]], "clock_tai (in module time)": [[344, "time.CLOCK_TAI"]], "clock_thread_cputime_id (in module time)": [[344, "time.CLOCK_THREAD_CPUTIME_ID"]], "clock_uptime (in module time)": [[344, "time.CLOCK_UPTIME"]], "clock_uptime_raw (in module time)": [[344, "time.CLOCK_UPTIME_RAW"]], "cpu time": [[344, "index-12"], [344, "index-7"]], "coordinated universal time": [[344, "index-4"]], "daylight saving time": [[344, "index-5"]], "greenwich mean time": [[344, "index-4"]], "rfc 1123": [[344, "index-21"]], "tz": [[344, "index-13"], [344, "index-14"], [344, "index-15"], [344, "index-16"], [344, "index-17"], [344, "index-18"]], "utc": [[344, "index-4"]], "year 2038": [[344, "index-2"]], "altzone (in module time)": [[344, "time.altzone"]], "asctime() (in module time)": [[344, "time.asctime"]], "benchmarking": [[344, "index-12"], [344, "index-6"], [344, "index-7"], [345, "index-0"]], "clock_getres() (in module time)": [[344, "time.clock_getres"]], "clock_gettime() (in module time)": [[344, "time.clock_gettime"]], "clock_gettime_ns() (in module time)": [[344, "time.clock_gettime_ns"]], "clock_settime() (in module time)": [[344, "time.clock_settime"]], "clock_settime_ns() (in module time)": [[344, "time.clock_settime_ns"]], "ctime() (in module time)": [[344, "time.ctime"]], "daylight (in module time)": [[344, "time.daylight"]], "epoch": [[344, "index-0"]], "get_clock_info() (in module time)": [[344, "time.get_clock_info"]], "gmtime() (in module time)": [[344, "time.gmtime"]], "localtime() (in module time)": [[344, "time.localtime"]], "mktime() (in module time)": [[344, "time.mktime"]], "monotonic() (in module time)": [[344, "time.monotonic"]], "monotonic_ns() (in module time)": [[344, "time.monotonic_ns"]], "perf_counter() (in module time)": [[344, "time.perf_counter"]], "perf_counter_ns() (in module time)": [[344, "time.perf_counter_ns"]], "process_time() (in module time)": [[344, "time.process_time"]], "process_time_ns() (in module time)": [[344, "time.process_time_ns"]], "processor time": [[344, "index-12"], [344, "index-7"]], "pthread_getcpuclockid() (in module time)": [[344, "time.pthread_getcpuclockid"]], "seconds since the epoch": [[344, "index-1"]], "sleep() (in module time)": [[344, "time.sleep"]], "strftime() (in module time)": [[344, "time.strftime"]], "strptime() (in module time)": [[344, "time.strptime"]], "struct_time (class in time)": [[344, "time.struct_time"]], "thread_time() (in module time)": [[344, "time.thread_time"]], "thread_time_ns() (in module time)": [[344, "time.thread_time_ns"]], "time": [[344, "module-time"]], "time() (in module time)": [[344, "time.time"]], "time_ns() (in module time)": [[344, "time.time_ns"]], "timezone (in module time)": [[344, "time.timezone"]], "tzname (in module time)": [[344, "time.tzname"]], "tzset() (in module time)": [[344, "time.tzset"]], "--number": [[345, "cmdoption-timeit-n"]], "--process": [[345, "cmdoption-timeit-p"]], "--repeat": [[345, "cmdoption-timeit-r"]], "--setup": [[345, "cmdoption-timeit-s"]], "--unit": [[345, "cmdoption-timeit-u"]], "-n": [[345, "cmdoption-timeit-n"], [374, "cmdoption-uuid-N"], [374, "cmdoption-uuid-n"]], "-u": [[345, "cmdoption-timeit-u"], [374, "cmdoption-uuid-u"], [430, "cmdoption-u"]], "performance": [[345, "index-0"]], "timer (class in timeit)": [[345, "timeit.Timer"]], "autorange() (timeit.timer method)": [[345, "timeit.Timer.autorange"]], "default_timer() (in module timeit)": [[345, "timeit.default_timer"]], "print_exc() (timeit.timer method)": [[345, "timeit.Timer.print_exc"]], "repeat() (in module timeit)": [[345, "timeit.repeat"]], "repeat() (timeit.timer method)": [[345, "timeit.Timer.repeat"]], "timeit": [[345, "module-timeit"]], "timeit command line option": [[345, "cmdoption-timeit-h"], [345, "cmdoption-timeit-n"], [345, "cmdoption-timeit-p"], [345, "cmdoption-timeit-r"], [345, "cmdoption-timeit-s"], [345, "cmdoption-timeit-u"], [345, "cmdoption-timeit-v"]], "timeit() (in module timeit)": [[345, "timeit.timeit"]], "timeit() (timeit.timer method)": [[345, "timeit.Timer.timeit"]], "gui": [[346, "index-0"]], "graphical user interface": [[346, "index-0"]], "tk": [[346, "index-0"]], "tkinter": [[346, "index-0"], [347, "module-tkinter"]], "display": [[347, "index-0"], [405, "index-15"], [405, "index-16"], [405, "index-17"]], "exception (in module tkinter)": [[347, "tkinter.EXCEPTION"]], "readable (in module tkinter)": [[347, "tkinter.READABLE"]], "tcl() (in module tkinter)": [[347, "tkinter.Tcl"]], "tk (class in tkinter)": [[347, "tkinter.Tk"]], "tk option data types": [[347, "index-4"]], "writable (in module tkinter)": [[347, "tkinter.WRITABLE"]], "bind (widgets)": [[347, "index-5"]], "children (tkinter.tk attribute)": [[347, "tkinter.Tk.children"]], "createfilehandler() (tkinter.widget.tk method)": [[347, "tkinter.Widget.tk.createfilehandler"]], "deletefilehandler() (tkinter.widget.tk method)": [[347, "tkinter.Widget.tk.deletefilehandler"]], "events (widgets)": [[347, "index-5"]], "master (tkinter.tk attribute)": [[347, "tkinter.Tk.master"]], "packing (widgets)": [[347, "index-2"]], "tk (tkinter.tk attribute)": [[347, "tkinter.Tk.tk"]], "window manager (widgets)": [[347, "index-3"]], "chooser (class in tkinter.colorchooser)": [[348, "tkinter.colorchooser.Chooser"]], "askcolor() (in module tkinter.colorchooser)": [[348, "tkinter.colorchooser.askcolor"]], "tkinter.colorchooser": [[348, "module-tkinter.colorchooser"]], "dndhandler (class in tkinter.dnd)": [[349, "tkinter.dnd.DndHandler"]], "cancel() (tkinter.dnd.dndhandler method)": [[349, "tkinter.dnd.DndHandler.cancel"]], "dnd_start() (in module tkinter.dnd)": [[349, "tkinter.dnd.dnd_start"]], "finish() (tkinter.dnd.dndhandler method)": [[349, "tkinter.dnd.DndHandler.finish"]], "on_motion() (tkinter.dnd.dndhandler method)": [[349, "tkinter.dnd.DndHandler.on_motion"]], "on_release() (tkinter.dnd.dndhandler method)": [[349, "tkinter.dnd.DndHandler.on_release"]], "tkinter.dnd": [[349, "module-tkinter.dnd"]], "bold (in module tkinter.font)": [[350, "tkinter.font.BOLD"]], "font (class in tkinter.font)": [[350, "tkinter.font.Font"]], "italic (in module tkinter.font)": [[350, "tkinter.font.ITALIC"]], "normal (in module tkinter.font)": [[350, "tkinter.font.NORMAL"]], "roman (in module tkinter.font)": [[350, "tkinter.font.ROMAN"]], "actual() (tkinter.font.font method)": [[350, "tkinter.font.Font.actual"]], "cget() (tkinter.font.font method)": [[350, "tkinter.font.Font.cget"]], "config() (tkinter.font.font method)": [[350, "tkinter.font.Font.config"]], "copy() (tkinter.font.font method)": [[350, "tkinter.font.Font.copy"]], "families() (in module tkinter.font)": [[350, "tkinter.font.families"]], "measure() (tkinter.font.font method)": [[350, "tkinter.font.Font.measure"]], "metrics() (tkinter.font.font method)": [[350, "tkinter.font.Font.metrics"]], "names() (in module tkinter.font)": [[350, "tkinter.font.names"]], "nametofont() (in module tkinter.font)": [[350, "tkinter.font.nametofont"]], "tkinter.font": [[350, "module-tkinter.font"]], "message (class in tkinter.messagebox)": [[351, "tkinter.messagebox.Message"]], "askokcancel() (in module tkinter.messagebox)": [[351, "tkinter.messagebox.askokcancel"]], "askquestion() (in module tkinter.messagebox)": [[351, "tkinter.messagebox.askquestion"]], "askretrycancel() (in module tkinter.messagebox)": [[351, "tkinter.messagebox.askretrycancel"]], "askyesno() (in module tkinter.messagebox)": [[351, "tkinter.messagebox.askyesno"]], "askyesnocancel() (in module tkinter.messagebox)": [[351, "tkinter.messagebox.askyesnocancel"]], "showerror() (in module tkinter.messagebox)": [[351, "tkinter.messagebox.showerror"]], "showinfo() (in module tkinter.messagebox)": [[351, "tkinter.messagebox.showinfo"]], "showwarning() (in module tkinter.messagebox)": [[351, "tkinter.messagebox.showwarning"]], "tkinter.messagebox": [[351, "module-tkinter.messagebox"]], "scrolledtext (class in tkinter.scrolledtext)": [[352, "tkinter.scrolledtext.ScrolledText"]], "frame (tkinter.scrolledtext.scrolledtext attribute)": [[352, "tkinter.scrolledtext.ScrolledText.frame"]], "tkinter.scrolledtext": [[352, "module-tkinter.scrolledtext"]], "vbar (tkinter.scrolledtext.scrolledtext attribute)": [[352, "tkinter.scrolledtext.ScrolledText.vbar"]], "combobox (class in tkinter.ttk)": [[353, "tkinter.ttk.Combobox"]], "notebook (class in tkinter.ttk)": [[353, "tkinter.ttk.Notebook"]], "progressbar (class in tkinter.ttk)": [[353, "tkinter.ttk.Progressbar"]], "spinbox (class in tkinter.ttk)": [[353, "tkinter.ttk.Spinbox"]], "style (class in tkinter.ttk)": [[353, "tkinter.ttk.Style"]], "treeview (class in tkinter.ttk)": [[353, "tkinter.ttk.Treeview"]], "widget (class in tkinter.ttk)": [[353, "tkinter.ttk.Widget"]], "add() (tkinter.ttk.notebook method)": [[353, "tkinter.ttk.Notebook.add"]], "bbox() (tkinter.ttk.treeview method)": [[353, "tkinter.ttk.Treeview.bbox"]], "column() (tkinter.ttk.treeview method)": [[353, "tkinter.ttk.Treeview.column"]], "configure() (tkinter.ttk.style method)": [[353, "tkinter.ttk.Style.configure"]], "current() (tkinter.ttk.combobox method)": [[353, "tkinter.ttk.Combobox.current"]], "delete() (tkinter.ttk.treeview method)": [[353, "tkinter.ttk.Treeview.delete"]], "detach() (tkinter.ttk.treeview method)": [[353, "tkinter.ttk.Treeview.detach"]], "element_create() (tkinter.ttk.style method)": [[353, "tkinter.ttk.Style.element_create"]], "element_names() (tkinter.ttk.style method)": [[353, "tkinter.ttk.Style.element_names"]], "element_options() (tkinter.ttk.style method)": [[353, "tkinter.ttk.Style.element_options"]], "enable_traversal() (tkinter.ttk.notebook method)": [[353, "tkinter.ttk.Notebook.enable_traversal"]], "exists() (tkinter.ttk.treeview method)": [[353, "tkinter.ttk.Treeview.exists"]], "focus() (tkinter.ttk.treeview method)": [[353, "tkinter.ttk.Treeview.focus"]], "forget() (tkinter.ttk.notebook method)": [[353, "tkinter.ttk.Notebook.forget"]], "get() (tkinter.ttk.combobox method)": [[353, "tkinter.ttk.Combobox.get"]], "get() (tkinter.ttk.spinbox method)": [[353, "tkinter.ttk.Spinbox.get"]], "get_children() (tkinter.ttk.treeview method)": [[353, "tkinter.ttk.Treeview.get_children"]], "heading() (tkinter.ttk.treeview method)": [[353, "tkinter.ttk.Treeview.heading"]], "hide() (tkinter.ttk.notebook method)": [[353, "tkinter.ttk.Notebook.hide"]], "identify() (tkinter.ttk.notebook method)": [[353, "tkinter.ttk.Notebook.identify"]], "identify() (tkinter.ttk.treeview method)": [[353, "tkinter.ttk.Treeview.identify"]], "identify() (tkinter.ttk.widget method)": [[353, "tkinter.ttk.Widget.identify"]], "identify_column() (tkinter.ttk.treeview method)": [[353, "tkinter.ttk.Treeview.identify_column"]], "identify_element() (tkinter.ttk.treeview method)": [[353, "tkinter.ttk.Treeview.identify_element"]], "identify_region() (tkinter.ttk.treeview method)": [[353, "tkinter.ttk.Treeview.identify_region"]], "identify_row() (tkinter.ttk.treeview method)": [[353, "tkinter.ttk.Treeview.identify_row"]], "index() (tkinter.ttk.notebook method)": [[353, "tkinter.ttk.Notebook.index"]], "index() (tkinter.ttk.treeview method)": [[353, "tkinter.ttk.Treeview.index"]], "insert() (tkinter.ttk.notebook method)": [[353, "tkinter.ttk.Notebook.insert"]], "insert() (tkinter.ttk.treeview method)": [[353, "tkinter.ttk.Treeview.insert"]], "instate() (tkinter.ttk.widget method)": [[353, "tkinter.ttk.Widget.instate"]], "item() (tkinter.ttk.treeview method)": [[353, "tkinter.ttk.Treeview.item"]], "layout() (tkinter.ttk.style method)": [[353, "tkinter.ttk.Style.layout"]], "lookup() (tkinter.ttk.style method)": [[353, "tkinter.ttk.Style.lookup"]], "map() (tkinter.ttk.style method)": [[353, "tkinter.ttk.Style.map"]], "move() (tkinter.ttk.treeview method)": [[353, "tkinter.ttk.Treeview.move"]], "next() (tkinter.ttk.treeview method)": [[353, "tkinter.ttk.Treeview.next"]], "parent() (tkinter.ttk.treeview method)": [[353, "tkinter.ttk.Treeview.parent"]], "prev() (tkinter.ttk.treeview method)": [[353, "tkinter.ttk.Treeview.prev"]], "reattach() (tkinter.ttk.treeview method)": [[353, "tkinter.ttk.Treeview.reattach"]], "see() (tkinter.ttk.treeview method)": [[353, "tkinter.ttk.Treeview.see"]], "select() (tkinter.ttk.notebook method)": [[353, "tkinter.ttk.Notebook.select"]], "selection() (tkinter.ttk.treeview method)": [[353, "tkinter.ttk.Treeview.selection"]], "selection_add() (tkinter.ttk.treeview method)": [[353, "tkinter.ttk.Treeview.selection_add"]], "selection_remove() (tkinter.ttk.treeview method)": [[353, "tkinter.ttk.Treeview.selection_remove"]], "selection_set() (tkinter.ttk.treeview method)": [[353, "tkinter.ttk.Treeview.selection_set"]], "selection_toggle() (tkinter.ttk.treeview method)": [[353, "tkinter.ttk.Treeview.selection_toggle"]], "set() (tkinter.ttk.combobox method)": [[353, "tkinter.ttk.Combobox.set"]], "set() (tkinter.ttk.spinbox method)": [[353, "tkinter.ttk.Spinbox.set"]], "set() (tkinter.ttk.treeview method)": [[353, "tkinter.ttk.Treeview.set"]], "set_children() (tkinter.ttk.treeview method)": [[353, "tkinter.ttk.Treeview.set_children"]], "start() (tkinter.ttk.progressbar method)": [[353, "tkinter.ttk.Progressbar.start"]], "state() (tkinter.ttk.widget method)": [[353, "tkinter.ttk.Widget.state"]], "step() (tkinter.ttk.progressbar method)": [[353, "tkinter.ttk.Progressbar.step"]], "stop() (tkinter.ttk.progressbar method)": [[353, "tkinter.ttk.Progressbar.stop"]], "tab() (tkinter.ttk.notebook method)": [[353, "tkinter.ttk.Notebook.tab"]], "tabs() (tkinter.ttk.notebook method)": [[353, "tkinter.ttk.Notebook.tabs"]], "tag_bind() (tkinter.ttk.treeview method)": [[353, "tkinter.ttk.Treeview.tag_bind"]], "tag_configure() (tkinter.ttk.treeview method)": [[353, "tkinter.ttk.Treeview.tag_configure"]], "tag_has() (tkinter.ttk.treeview method)": [[353, "tkinter.ttk.Treeview.tag_has"]], "theme_create() (tkinter.ttk.style method)": [[353, "tkinter.ttk.Style.theme_create"]], "theme_names() (tkinter.ttk.style method)": [[353, "tkinter.ttk.Style.theme_names"]], "theme_settings() (tkinter.ttk.style method)": [[353, "tkinter.ttk.Style.theme_settings"]], "theme_use() (tkinter.ttk.style method)": [[353, "tkinter.ttk.Style.theme_use"]], "tkinter.ttk": [[353, "module-tkinter.ttk"]], "ttk": [[353, "index-0"]], "xview() (tkinter.ttk.treeview method)": [[353, "tkinter.ttk.Treeview.xview"]], "yview() (tkinter.ttk.treeview method)": [[353, "tkinter.ttk.Treeview.yview"]], "amper (in module token)": [[354, "token.AMPER"]], "amperequal (in module token)": [[354, "token.AMPEREQUAL"]], "at (in module token)": [[354, "token.AT"]], "atequal (in module token)": [[354, "token.ATEQUAL"]], "circumflex (in module token)": [[354, "token.CIRCUMFLEX"]], "circumflexequal (in module token)": [[354, "token.CIRCUMFLEXEQUAL"]], "colon (in module token)": [[354, "token.COLON"]], "colonequal (in module token)": [[354, "token.COLONEQUAL"]], "comma (in module token)": [[354, "token.COMMA"]], "comment (in module token)": [[354, "token.COMMENT"]], "dedent (in module token)": [[354, "token.DEDENT"]], "dot (in module token)": [[354, "token.DOT"]], "doubleslash (in module token)": [[354, "token.DOUBLESLASH"]], "doubleslashequal (in module token)": [[354, "token.DOUBLESLASHEQUAL"]], "doublestar (in module token)": [[354, "token.DOUBLESTAR"]], "doublestarequal (in module token)": [[354, "token.DOUBLESTAREQUAL"]], "ellipsis (in module token)": [[354, "token.ELLIPSIS"]], "encoding (in module token)": [[354, "token.ENCODING"]], "endmarker (in module token)": [[354, "token.ENDMARKER"]], "eqequal (in module token)": [[354, "token.EQEQUAL"]], "equal (in module token)": [[354, "token.EQUAL"]], "errortoken (in module token)": [[354, "token.ERRORTOKEN"]], "exclamation (in module token)": [[354, "token.EXCLAMATION"]], "fstring_end (in module token)": [[354, "token.FSTRING_END"]], "fstring_middle (in module token)": [[354, "token.FSTRING_MIDDLE"]], "fstring_start (in module token)": [[354, "token.FSTRING_START"]], "greater (in module token)": [[354, "token.GREATER"]], "greaterequal (in module token)": [[354, "token.GREATEREQUAL"]], "indent (in module token)": [[354, "token.INDENT"]], "iseof() (in module token)": [[354, "token.ISEOF"]], "isnonterminal() (in module token)": [[354, "token.ISNONTERMINAL"]], "isterminal() (in module token)": [[354, "token.ISTERMINAL"]], "lbrace (in module token)": [[354, "token.LBRACE"]], "leftshift (in module token)": [[354, "token.LEFTSHIFT"]], "leftshiftequal (in module token)": [[354, "token.LEFTSHIFTEQUAL"]], "less (in module token)": [[354, "token.LESS"]], "lessequal (in module token)": [[354, "token.LESSEQUAL"]], "lpar (in module token)": [[354, "token.LPAR"]], "lsqb (in module token)": [[354, "token.LSQB"]], "minequal (in module token)": [[354, "token.MINEQUAL"]], "minus (in module token)": [[354, "token.MINUS"]], "name (in module token)": [[354, "token.NAME"]], "newline (in module token)": [[354, "token.NEWLINE"]], "nl (in module token)": [[354, "token.NL"]], "notequal (in module token)": [[354, "token.NOTEQUAL"]], "nt_offset (in module token)": [[354, "token.NT_OFFSET"]], "number (in module token)": [[354, "token.NUMBER"]], "n_tokens (in module token)": [[354, "token.N_TOKENS"]], "op (in module token)": [[354, "token.OP"]], "percent (in module token)": [[354, "token.PERCENT"]], "percentequal (in module token)": [[354, "token.PERCENTEQUAL"]], "plus (in module token)": [[354, "token.PLUS"]], "plusequal (in module token)": [[354, "token.PLUSEQUAL"]], "rarrow (in module token)": [[354, "token.RARROW"]], "rbrace (in module token)": [[354, "token.RBRACE"]], "rightshift (in module token)": [[354, "token.RIGHTSHIFT"]], "rightshiftequal (in module token)": [[354, "token.RIGHTSHIFTEQUAL"]], "rpar (in module token)": [[354, "token.RPAR"]], "rsqb (in module token)": [[354, "token.RSQB"]], "semi (in module token)": [[354, "token.SEMI"]], "slash (in module token)": [[354, "token.SLASH"]], "slashequal (in module token)": [[354, "token.SLASHEQUAL"]], "soft_keyword (in module token)": [[354, "token.SOFT_KEYWORD"]], "star (in module token)": [[354, "token.STAR"]], "starequal (in module token)": [[354, "token.STAREQUAL"]], "string (in module token)": [[354, "token.STRING"]], "tilde (in module token)": [[354, "token.TILDE"]], "type_comment (in module token)": [[354, "token.TYPE_COMMENT"]], "type_ignore (in module token)": [[354, "token.TYPE_IGNORE"]], "vbar (in module token)": [[354, "token.VBAR"]], "vbarequal (in module token)": [[354, "token.VBAREQUAL"]], "tok_name (in module token)": [[354, "token.tok_name"]], "token": [[354, "module-token"], [410, "index-0"]], "--exact": [[355, "cmdoption-tokenize-e"]], "tokenerror": [[355, "tokenize.TokenError"]], "detect_encoding() (in module tokenize)": [[355, "tokenize.detect_encoding"]], "generate_tokens() (in module tokenize)": [[355, "tokenize.generate_tokens"]], "open() (in module tokenize)": [[355, "tokenize.open"]], "tokenize": [[355, "module-tokenize"]], "tokenize command line option": [[355, "cmdoption-tokenize-e"], [355, "cmdoption-tokenize-h"]], "tokenize() (in module tokenize)": [[355, "tokenize.tokenize"]], "untokenize() (in module tokenize)": [[355, "tokenize.untokenize"]], "tomldecodeerror": [[356, "tomllib.TOMLDecodeError"]], "load() (in module tomllib)": [[356, "tomllib.load"]], "loads() (in module tomllib)": [[356, "tomllib.loads"]], "tomllib": [[356, "module-tomllib"]], "--count": [[357, "cmdoption-trace-c"]], "--coverdir": [[357, "cmdoption-trace-C"]], "--file": [[357, "cmdoption-trace-f"]], "--ignore-dir": [[357, "cmdoption-trace-ignore-dir"]], "--ignore-module": [[357, "cmdoption-trace-ignore-module"]], "--listfuncs": [[357, "cmdoption-trace-l"]], "--missing": [[357, "cmdoption-trace-m"]], "--no-report": [[357, "cmdoption-trace-R"]], "--report": [[357, "cmdoption-trace-r"]], "--summary": [[357, "cmdoption-trace-s"]], "--timing": [[357, "cmdoption-trace-g"]], "--trace": [[357, "cmdoption-trace-t"]], "--trackcalls": [[357, "cmdoption-trace-T"]], "-g": [[357, "cmdoption-trace-g"]], "coverageresults (class in trace)": [[357, "trace.CoverageResults"]], "trace (class in trace)": [[357, "trace.Trace"]], "results() (trace.trace method)": [[357, "trace.Trace.results"]], "run() (trace.trace method)": [[357, "trace.Trace.run"]], "runctx() (trace.trace method)": [[357, "trace.Trace.runctx"]], "runfunc() (trace.trace method)": [[357, "trace.Trace.runfunc"]], "trace": [[357, "module-trace"], [403, "index-64"]], "trace command line option": [[357, "cmdoption-trace-C"], [357, "cmdoption-trace-R"], [357, "cmdoption-trace-T"], [357, "cmdoption-trace-c"], [357, "cmdoption-trace-f"], [357, "cmdoption-trace-g"], [357, "cmdoption-trace-help"], [357, "cmdoption-trace-ignore-dir"], [357, "cmdoption-trace-ignore-module"], [357, "cmdoption-trace-l"], [357, "cmdoption-trace-m"], [357, "cmdoption-trace-r"], [357, "cmdoption-trace-s"], [357, "cmdoption-trace-t"], [357, "cmdoption-trace-version"]], "update() (trace.coverageresults method)": [[357, "trace.CoverageResults.update"]], "write_results() (trace.coverageresults method)": [[357, "trace.CoverageResults.write_results"]], "framesummary (class in traceback)": [[358, "traceback.FrameSummary"]], "stacksummary (class in traceback)": [[358, "traceback.StackSummary"]], "tracebackexception (class in traceback)": [[358, "traceback.TracebackException"]], "__cause__ (traceback.tracebackexception attribute)": [[358, "traceback.TracebackException.__cause__"]], "__context__ (traceback.tracebackexception attribute)": [[358, "traceback.TracebackException.__context__"]], "__notes__ (traceback.tracebackexception attribute)": [[358, "traceback.TracebackException.__notes__"]], "__suppress_context__ (traceback.tracebackexception attribute)": [[358, "traceback.TracebackException.__suppress_context__"]], "clear_frames() (in module traceback)": [[358, "traceback.clear_frames"]], "end_lineno (traceback.tracebackexception attribute)": [[358, "traceback.TracebackException.end_lineno"]], "end_offset (traceback.tracebackexception attribute)": [[358, "traceback.TracebackException.end_offset"]], "exc_type (traceback.tracebackexception attribute)": [[358, "traceback.TracebackException.exc_type"]], "exceptions (traceback.tracebackexception attribute)": [[358, "traceback.TracebackException.exceptions"]], "extract() (traceback.stacksummary class method)": [[358, "traceback.StackSummary.extract"]], "extract_stack() (in module traceback)": [[358, "traceback.extract_stack"]], "extract_tb() (in module traceback)": [[358, "traceback.extract_tb"]], "filename (traceback.tracebackexception attribute)": [[358, "traceback.TracebackException.filename"]], "format() (traceback.stacksummary method)": [[358, "traceback.StackSummary.format"]], "format() (traceback.tracebackexception method)": [[358, "traceback.TracebackException.format"]], "format_exc() (in module traceback)": [[358, "traceback.format_exc"]], "format_exception() (in module traceback)": [[358, "traceback.format_exception"]], "format_exception_only() (in module traceback)": [[358, "traceback.format_exception_only"]], "format_exception_only() (traceback.tracebackexception method)": [[358, "traceback.TracebackException.format_exception_only"]], "format_frame_summary() (traceback.stacksummary method)": [[358, "traceback.StackSummary.format_frame_summary"]], "format_list() (in module traceback)": [[358, "traceback.format_list"]], "format_stack() (in module traceback)": [[358, "traceback.format_stack"]], "format_tb() (in module traceback)": [[358, "traceback.format_tb"]], "from_exception() (traceback.tracebackexception class method)": [[358, "traceback.TracebackException.from_exception"]], "from_list() (traceback.stacksummary class method)": [[358, "traceback.StackSummary.from_list"]], "lineno (traceback.tracebackexception attribute)": [[358, "traceback.TracebackException.lineno"]], "msg (traceback.tracebackexception attribute)": [[358, "traceback.TracebackException.msg"]], "offset (traceback.tracebackexception attribute)": [[358, "traceback.TracebackException.offset"]], "print() (traceback.tracebackexception method)": [[358, "traceback.TracebackException.print"]], "print_exc() (in module traceback)": [[358, "traceback.print_exc"]], "print_exception() (in module traceback)": [[358, "traceback.print_exception"]], "print_last() (in module traceback)": [[358, "traceback.print_last"]], "print_stack() (in module traceback)": [[358, "traceback.print_stack"]], "print_tb() (in module traceback)": [[358, "traceback.print_tb"]], "stack (traceback.tracebackexception attribute)": [[358, "traceback.TracebackException.stack"]], "text (traceback.tracebackexception attribute)": [[358, "traceback.TracebackException.text"]], "walk_stack() (in module traceback)": [[358, "traceback.walk_stack"]], "walk_tb() (in module traceback)": [[358, "traceback.walk_tb"]], "domainfilter (class in tracemalloc)": [[359, "tracemalloc.DomainFilter"]], "filter (class in tracemalloc)": [[359, "tracemalloc.Filter"]], "frame (class in tracemalloc)": [[359, "tracemalloc.Frame"]], "snapshot (class in tracemalloc)": [[359, "tracemalloc.Snapshot"]], "statistic (class in tracemalloc)": [[359, "tracemalloc.Statistic"]], "statisticdiff (class in tracemalloc)": [[359, "tracemalloc.StatisticDiff"]], "trace (class in tracemalloc)": [[359, "tracemalloc.Trace"]], "traceback (class in tracemalloc)": [[359, "tracemalloc.Traceback"]], "all_frames (tracemalloc.filter attribute)": [[359, "tracemalloc.Filter.all_frames"]], "clear_traces() (in module tracemalloc)": [[359, "tracemalloc.clear_traces"]], "compare_to() (tracemalloc.snapshot method)": [[359, "tracemalloc.Snapshot.compare_to"]], "count (tracemalloc.statistic attribute)": [[359, "tracemalloc.Statistic.count"]], "count (tracemalloc.statisticdiff attribute)": [[359, "tracemalloc.StatisticDiff.count"]], "count_diff (tracemalloc.statisticdiff attribute)": [[359, "tracemalloc.StatisticDiff.count_diff"]], "domain (tracemalloc.domainfilter attribute)": [[359, "tracemalloc.DomainFilter.domain"]], "domain (tracemalloc.filter attribute)": [[359, "tracemalloc.Filter.domain"]], "domain (tracemalloc.trace attribute)": [[359, "tracemalloc.Trace.domain"]], "dump() (tracemalloc.snapshot method)": [[359, "tracemalloc.Snapshot.dump"]], "filename (tracemalloc.frame attribute)": [[359, "tracemalloc.Frame.filename"]], "filename_pattern (tracemalloc.filter attribute)": [[359, "tracemalloc.Filter.filename_pattern"]], "filter_traces() (tracemalloc.snapshot method)": [[359, "tracemalloc.Snapshot.filter_traces"]], "format() (tracemalloc.traceback method)": [[359, "tracemalloc.Traceback.format"]], "get_object_traceback() (in module tracemalloc)": [[359, "tracemalloc.get_object_traceback"]], "get_traceback_limit() (in module tracemalloc)": [[359, "tracemalloc.get_traceback_limit"]], "get_traced_memory() (in module tracemalloc)": [[359, "tracemalloc.get_traced_memory"]], "get_tracemalloc_memory() (in module tracemalloc)": [[359, "tracemalloc.get_tracemalloc_memory"]], "inclusive (tracemalloc.domainfilter attribute)": [[359, "tracemalloc.DomainFilter.inclusive"]], "inclusive (tracemalloc.filter attribute)": [[359, "tracemalloc.Filter.inclusive"]], "is_tracing() (in module tracemalloc)": [[359, "tracemalloc.is_tracing"]], "lineno (tracemalloc.filter attribute)": [[359, "tracemalloc.Filter.lineno"]], "lineno (tracemalloc.frame attribute)": [[359, "tracemalloc.Frame.lineno"]], "load() (tracemalloc.snapshot class method)": [[359, "tracemalloc.Snapshot.load"]], "reset_peak() (in module tracemalloc)": [[359, "tracemalloc.reset_peak"]], "size (tracemalloc.statistic attribute)": [[359, "tracemalloc.Statistic.size"]], "size (tracemalloc.statisticdiff attribute)": [[359, "tracemalloc.StatisticDiff.size"]], "size (tracemalloc.trace attribute)": [[359, "tracemalloc.Trace.size"]], "size_diff (tracemalloc.statisticdiff attribute)": [[359, "tracemalloc.StatisticDiff.size_diff"]], "start() (in module tracemalloc)": [[359, "tracemalloc.start"]], "statistics() (tracemalloc.snapshot method)": [[359, "tracemalloc.Snapshot.statistics"]], "stop() (in module tracemalloc)": [[359, "tracemalloc.stop"]], "take_snapshot() (in module tracemalloc)": [[359, "tracemalloc.take_snapshot"]], "total_nframe (tracemalloc.traceback attribute)": [[359, "tracemalloc.Traceback.total_nframe"]], "traceback (tracemalloc.statistic attribute)": [[359, "tracemalloc.Statistic.traceback"]], "traceback (tracemalloc.statisticdiff attribute)": [[359, "tracemalloc.StatisticDiff.traceback"]], "traceback (tracemalloc.trace attribute)": [[359, "tracemalloc.Trace.traceback"]], "traceback_limit (tracemalloc.snapshot attribute)": [[359, "tracemalloc.Snapshot.traceback_limit"]], "tracemalloc": [[359, "module-tracemalloc"]], "traces (tracemalloc.snapshot attribute)": [[359, "tracemalloc.Snapshot.traces"]], "cfmakecbreak() (in module tty)": [[360, "tty.cfmakecbreak"]], "cfmakeraw() (in module tty)": [[360, "tty.cfmakeraw"]], "setcbreak() (in module tty)": [[360, "tty.setcbreak"]], "setraw() (in module tty)": [[360, "tty.setraw"]], "rawpen (class in turtle)": [[361, "turtle.RawPen"]], "rawturtle (class in turtle)": [[361, "turtle.RawTurtle"]], "screen (class in turtle)": [[361, "turtle.Screen"]], "scrolledcanvas (class in turtle)": [[361, "turtle.ScrolledCanvas"]], "shape (class in turtle)": [[361, "turtle.Shape"]], "turtle (class in turtle)": [[361, "turtle.Turtle"]], "turtlescreen (class in turtle)": [[361, "turtle.TurtleScreen"]], "vec2d (class in turtle)": [[361, "turtle.Vec2D"]], "addcomponent() (turtle.shape method)": [[361, "turtle.Shape.addcomponent"]], "addshape() (in module turtle)": [[361, "turtle.addshape"]], "back() (in module turtle)": [[361, "turtle.back"]], "backward() (in module turtle)": [[361, "turtle.backward"]], "begin_fill() (in module turtle)": [[361, "turtle.begin_fill"]], "begin_poly() (in module turtle)": [[361, "turtle.begin_poly"]], "bgcolor() (in module turtle)": [[361, "turtle.bgcolor"]], "bgpic() (in module turtle)": [[361, "turtle.bgpic"]], "bk() (in module turtle)": [[361, "turtle.bk"]], "bye() (in module turtle)": [[361, "turtle.bye"]], "circle() (in module turtle)": [[361, "turtle.circle"]], "clear() (in module turtle)": [[361, "turtle.clear"]], "clearscreen() (in module turtle)": [[361, "turtle.clearscreen"]], "clearstamp() (in module turtle)": [[361, "turtle.clearstamp"]], "clearstamps() (in module turtle)": [[361, "turtle.clearstamps"]], "clone() (in module turtle)": [[361, "turtle.clone"]], "color() (in module turtle)": [[361, "turtle.color"]], "colormode() (in module turtle)": [[361, "turtle.colormode"]], "degrees() (in module turtle)": [[361, "turtle.degrees"]], "delay() (in module turtle)": [[361, "turtle.delay"]], "distance() (in module turtle)": [[361, "turtle.distance"]], "done() (in module turtle)": [[361, "turtle.done"]], "dot() (in module turtle)": [[361, "turtle.dot"]], "down() (in module turtle)": [[361, "turtle.down"]], "end_fill() (in module turtle)": [[361, "turtle.end_fill"]], "end_poly() (in module turtle)": [[361, "turtle.end_poly"]], "exitonclick() (in module turtle)": [[361, "turtle.exitonclick"]], "fd() (in module turtle)": [[361, "turtle.fd"]], "fillcolor() (in module turtle)": [[361, "turtle.fillcolor"]], "filling() (in module turtle)": [[361, "turtle.filling"]], "forward() (in module turtle)": [[361, "turtle.forward"]], "get_poly() (in module turtle)": [[361, "turtle.get_poly"]], "get_shapepoly() (in module turtle)": [[361, "turtle.get_shapepoly"]], "getcanvas() (in module turtle)": [[361, "turtle.getcanvas"]], "getpen() (in module turtle)": [[361, "turtle.getpen"]], "getscreen() (in module turtle)": [[361, "turtle.getscreen"]], "getshapes() (in module turtle)": [[361, "turtle.getshapes"]], "getturtle() (in module turtle)": [[361, "turtle.getturtle"]], "goto() (in module turtle)": [[361, "turtle.goto"]], "heading() (in module turtle)": [[361, "turtle.heading"]], "hideturtle() (in module turtle)": [[361, "turtle.hideturtle"]], "home() (in module turtle)": [[361, "turtle.home"]], "ht() (in module turtle)": [[361, "turtle.ht"]], "isdown() (in module turtle)": [[361, "turtle.isdown"]], "isvisible() (in module turtle)": [[361, "turtle.isvisible"]], "left() (in module turtle)": [[361, "turtle.left"]], "listen() (in module turtle)": [[361, "turtle.listen"]], "lt() (in module turtle)": [[361, "turtle.lt"]], "mainloop() (in module turtle)": [[361, "turtle.mainloop"]], "mode() (in module turtle)": [[361, "turtle.mode"]], "numinput() (in module turtle)": [[361, "turtle.numinput"]], "onclick() (in module turtle)": [[361, "turtle.onclick"]], "ondrag() (in module turtle)": [[361, "turtle.ondrag"]], "onkey() (in module turtle)": [[361, "turtle.onkey"]], "onkeypress() (in module turtle)": [[361, "turtle.onkeypress"]], "onkeyrelease() (in module turtle)": [[361, "turtle.onkeyrelease"]], "onrelease() (in module turtle)": [[361, "turtle.onrelease"]], "onscreenclick() (in module turtle)": [[361, "turtle.onscreenclick"]], "ontimer() (in module turtle)": [[361, "turtle.ontimer"]], "pd() (in module turtle)": [[361, "turtle.pd"]], "pen() (in module turtle)": [[361, "turtle.pen"]], "pencolor() (in module turtle)": [[361, "turtle.pencolor"]], "pendown() (in module turtle)": [[361, "turtle.pendown"]], "pensize() (in module turtle)": [[361, "turtle.pensize"]], "penup() (in module turtle)": [[361, "turtle.penup"]], "pos() (in module turtle)": [[361, "turtle.pos"]], "position() (in module turtle)": [[361, "turtle.position"]], "pu() (in module turtle)": [[361, "turtle.pu"]], "radians() (in module turtle)": [[361, "turtle.radians"]], "register_shape() (in module turtle)": [[361, "turtle.register_shape"]], "reset() (in module turtle)": [[361, "turtle.reset"]], "resetscreen() (in module turtle)": [[361, "turtle.resetscreen"]], "resizemode() (in module turtle)": [[361, "turtle.resizemode"]], "right() (in module turtle)": [[361, "turtle.right"]], "rt() (in module turtle)": [[361, "turtle.rt"]], "screensize() (in module turtle)": [[361, "turtle.screensize"]], "seth() (in module turtle)": [[361, "turtle.seth"]], "setheading() (in module turtle)": [[361, "turtle.setheading"]], "setpos() (in module turtle)": [[361, "turtle.setpos"]], "setposition() (in module turtle)": [[361, "turtle.setposition"]], "setundobuffer() (in module turtle)": [[361, "turtle.setundobuffer"]], "setup() (in module turtle)": [[361, "turtle.setup"]], "setworldcoordinates() (in module turtle)": [[361, "turtle.setworldcoordinates"]], "setx() (in module turtle)": [[361, "turtle.setx"]], "sety() (in module turtle)": [[361, "turtle.sety"]], "shape() (in module turtle)": [[361, "turtle.shape"]], "shapesize() (in module turtle)": [[361, "turtle.shapesize"]], "shapetransform() (in module turtle)": [[361, "turtle.shapetransform"]], "shearfactor() (in module turtle)": [[361, "turtle.shearfactor"]], "showturtle() (in module turtle)": [[361, "turtle.showturtle"]], "speed() (in module turtle)": [[361, "turtle.speed"]], "st() (in module turtle)": [[361, "turtle.st"]], "stamp() (in module turtle)": [[361, "turtle.stamp"]], "teleport() (in module turtle)": [[361, "turtle.teleport"]], "textinput() (in module turtle)": [[361, "turtle.textinput"]], "tilt() (in module turtle)": [[361, "turtle.tilt"]], "tiltangle() (in module turtle)": [[361, "turtle.tiltangle"]], "title() (in module turtle)": [[361, "turtle.title"]], "towards() (in module turtle)": [[361, "turtle.towards"]], "tracer() (in module turtle)": [[361, "turtle.tracer"]], "turtle": [[361, "module-turtle"]], "turtledemo": [[361, "module-turtledemo"]], "turtles() (in module turtle)": [[361, "turtle.turtles"]], "turtlesize() (in module turtle)": [[361, "turtle.turtlesize"]], "undo() (in module turtle)": [[361, "turtle.undo"]], "undobufferentries() (in module turtle)": [[361, "turtle.undobufferentries"]], "up() (in module turtle)": [[361, "turtle.up"]], "update() (in module turtle)": [[361, "turtle.update"]], "width() (in module turtle)": [[361, "turtle.width"]], "window_height() (in module turtle)": [[361, "turtle.window_height"]], "window_width() (in module turtle)": [[361, "turtle.window_width"]], "write() (in module turtle)": [[361, "turtle.write"]], "write_docstringdict() (in module turtle)": [[361, "turtle.write_docstringdict"]], "xcor() (in module turtle)": [[361, "turtle.xcor"]], "ycor() (in module turtle)": [[361, "turtle.ycor"]], "asyncgeneratortype (in module types)": [[362, "types.AsyncGeneratorType"]], "builtinfunctiontype (in module types)": [[362, "types.BuiltinFunctionType"]], "builtinmethodtype (in module types)": [[362, "types.BuiltinMethodType"]], "capsuletype (class in types)": [[362, "types.CapsuleType"]], "celltype (in module types)": [[362, "types.CellType"]], "classmethoddescriptortype (in module types)": [[362, "types.ClassMethodDescriptorType"]], "codetype (class in types)": [[362, "types.CodeType"]], "coroutinetype (in module types)": [[362, "types.CoroutineType"]], "dynamicclassattribute() (in module types)": [[362, "types.DynamicClassAttribute"]], "ellipsistype (in module types)": [[362, "types.EllipsisType"]], "frametype (in module types)": [[362, "types.FrameType"]], "functiontype (in module types)": [[362, "types.FunctionType"]], "generatortype (in module types)": [[362, "types.GeneratorType"]], "genericalias (class in types)": [[362, "types.GenericAlias"]], "getsetdescriptortype (in module types)": [[362, "types.GetSetDescriptorType"]], "lambdatype (in module types)": [[362, "types.LambdaType"]], "mappingproxytype (class in types)": [[362, "types.MappingProxyType"]], "memberdescriptortype (in module types)": [[362, "types.MemberDescriptorType"]], "methoddescriptortype (in module types)": [[362, "types.MethodDescriptorType"]], "methodwrappertype (in module types)": [[362, "types.MethodWrapperType"]], "moduletype (class in types)": [[362, "types.ModuleType"]], "nonetype (in module types)": [[362, "types.NoneType"]], "notimplementedtype (in module types)": [[362, "types.NotImplementedType"]], "pep 3115": [[362, "index-0"], [402, "index-43"], [403, "index-88"], [445, "index-14"], [452, "index-29"]], "pep 560": [[362, "index-1"], [362, "index-2"], [362, "index-3"], [403, "index-85"], [403, "index-94"], [456, "index-21"], [456, "index-33"]], "simplenamespace (class in types)": [[362, "types.SimpleNamespace"]], "tracebacktype (class in types)": [[362, "types.TracebackType"]], "uniontype (class in types)": [[362, "types.UnionType"]], "wrapperdescriptortype (in module types)": [[362, "types.WrapperDescriptorType"]], "__doc__ (types.moduletype attribute)": [[362, "types.ModuleType.__doc__"]], "__loader__ (types.moduletype attribute)": [[362, "types.ModuleType.__loader__"]], "__name__ (types.moduletype attribute)": [[362, "types.ModuleType.__name__"]], "__package__ (types.moduletype attribute)": [[362, "types.ModuleType.__package__"]], "__spec__ (types.moduletype attribute)": [[362, "types.ModuleType.__spec__"]], "copy() (types.mappingproxytype method)": [[362, "types.MappingProxyType.copy"]], "coroutine() (in module types)": [[362, "types.coroutine"]], "get() (types.mappingproxytype method)": [[362, "types.MappingProxyType.get"]], "get_original_bases() (in module types)": [[362, "types.get_original_bases"]], "items() (types.mappingproxytype method)": [[362, "types.MappingProxyType.items"]], "keys() (types.mappingproxytype method)": [[362, "types.MappingProxyType.keys"]], "new_class() (in module types)": [[362, "types.new_class"]], "prepare_class() (in module types)": [[362, "types.prepare_class"]], "replace() (types.codetype method)": [[362, "types.CodeType.replace"]], "resolve_bases() (in module types)": [[362, "types.resolve_bases"]], "values() (types.mappingproxytype method)": [[362, "types.MappingProxyType.values"]], "abstractset (class in typing)": [[363, "typing.AbstractSet"]], "annotated (in module typing)": [[363, "typing.Annotated"]], "any (in module typing)": [[363, "typing.Any"]], "anystr (in module typing)": [[363, "typing.AnyStr"]], "asynccontextmanager (class in typing)": [[363, "typing.AsyncContextManager"]], "asyncgenerator (class in typing)": [[363, "typing.AsyncGenerator"]], "asynciterable (class in typing)": [[363, "typing.AsyncIterable"]], "asynciterator (class in typing)": [[363, "typing.AsyncIterator"]], "awaitable (class in typing)": [[363, "typing.Awaitable"]], "binaryio (class in typing)": [[363, "typing.BinaryIO"]], "bytestring (class in typing)": [[363, "typing.ByteString"]], "callable (in module typing)": [[363, "typing.Callable"]], "chainmap (class in typing)": [[363, "typing.ChainMap"]], "classvar (in module typing)": [[363, "typing.ClassVar"]], "collection (class in typing)": [[363, "typing.Collection"]], "concatenate (in module typing)": [[363, "typing.Concatenate"]], "container (class in typing)": [[363, "typing.Container"]], "contextmanager (class in typing)": [[363, "typing.ContextManager"]], "coroutine (class in typing)": [[363, "typing.Coroutine"]], "counter (class in typing)": [[363, "typing.Counter"]], "defaultdict (class in typing)": [[363, "typing.DefaultDict"]], "deque (class in typing)": [[363, "typing.Deque"]], "dict (class in typing)": [[363, "typing.Dict"]], "final (in module typing)": [[363, "typing.Final"]], "forwardref (class in typing)": [[363, "typing.ForwardRef"]], "frozenset (class in typing)": [[363, "typing.FrozenSet"]], "generator (class in typing)": [[363, "typing.Generator"]], "generic (class in typing)": [[363, "typing.Generic"]], "hashable (class in typing)": [[363, "typing.Hashable"]], "io (class in typing)": [[363, "typing.IO"]], "itemsview (class in typing)": [[363, "typing.ItemsView"]], "iterable (class in typing)": [[363, "typing.Iterable"]], "iterator (class in typing)": [[363, "typing.Iterator"]], "keysview (class in typing)": [[363, "typing.KeysView"]], "list (class in typing)": [[363, "typing.List"]], "literal (in module typing)": [[363, "typing.Literal"]], "literalstring (in module typing)": [[363, "typing.LiteralString"]], "mapping (class in typing)": [[363, "typing.Mapping"]], "mappingview (class in typing)": [[363, "typing.MappingView"]], "match (class in typing)": [[363, "typing.Match"]], "mutablemapping (class in typing)": [[363, "typing.MutableMapping"]], "mutablesequence (class in typing)": [[363, "typing.MutableSequence"]], "mutableset (class in typing)": [[363, "typing.MutableSet"]], "namedtuple (class in typing)": [[363, "typing.NamedTuple"]], "never (in module typing)": [[363, "typing.Never"]], "newtype (class in typing)": [[363, "typing.NewType"]], "noreturn (in module typing)": [[363, "typing.NoReturn"]], "notrequired (in module typing)": [[363, "typing.NotRequired"]], "optional (in module typing)": [[363, "typing.Optional"]], "ordereddict (class in typing)": [[363, "typing.OrderedDict"]], "pep 544": [[363, "index-28"], [363, "index-5"], [363, "index-50"], [457, "index-18"]], "pep 586": [[363, "index-34"], [363, "index-7"], [447, "index-31"], [457, "index-16"], [458, "index-27"]], "pep 589": [[363, "index-51"], [363, "index-8"], [457, "index-15"]], "pep 591": [[363, "index-36"], [363, "index-55"], [363, "index-9"], [457, "index-17"]], "pep 593": [[363, "index-10"], [363, "index-39"], [363, "index-58"], [458, "index-17"], [458, "index-5"]], "pep 612": [[363, "index-12"], [363, "index-24"], [363, "index-25"], [363, "index-33"], [363, "index-48"], [363, "index-94"], [447, "index-22"], [447, "index-6"]], "pep 613": [[363, "index-13"], [363, "index-32"], [447, "index-24"], [447, "index-7"]], "pep 646": [[363, "index-14"], [363, "index-45"], [448, "index-13"], [448, "index-14"]], "pep 647": [[363, "index-15"], [363, "index-40"], [447, "index-25"], [447, "index-8"]], "pep 655": [[363, "index-16"], [363, "index-37"], [363, "index-38"], [363, "index-52"], [448, "index-15"]], "pep 673": [[363, "index-17"], [363, "index-31"], [448, "index-17"]], "pep 675": [[363, "index-18"], [363, "index-30"], [448, "index-18"]], "pep 681": [[363, "index-19"], [363, "index-53"], [448, "index-19"]], "pep 692": [[363, "index-20"], [363, "index-41"], [449, "index-17"], [449, "index-18"]], "pep 695": [[363, "index-100"], [363, "index-21"], [363, "index-29"], [363, "index-43"], [363, "index-44"], [363, "index-46"], [363, "index-47"], [404, "index-12"], [411, "index-48"], [449, "index-29"], [449, "index-4"], [449, "index-5"]], "pep 698": [[363, "index-22"], [363, "index-56"], [449, "index-19"]], "paramspec (class in typing)": [[363, "typing.ParamSpec"]], "paramspecargs (in module typing)": [[363, "typing.ParamSpecArgs"]], "paramspeckwargs (in module typing)": [[363, "typing.ParamSpecKwargs"]], "pattern (class in typing)": [[363, "typing.Pattern"]], "protocol (class in typing)": [[363, "typing.Protocol"]], "required (in module typing)": [[363, "typing.Required"]], "reversible (class in typing)": [[363, "typing.Reversible"]], "self (in module typing)": [[363, "typing.Self"]], "sequence (class in typing)": [[363, "typing.Sequence"]], "set (class in typing)": [[363, "typing.Set"]], "sized (class in typing)": [[363, "typing.Sized"]], "supportsabs (class in typing)": [[363, "typing.SupportsAbs"]], "supportsbytes (class in typing)": [[363, "typing.SupportsBytes"]], "supportscomplex (class in typing)": [[363, "typing.SupportsComplex"]], "supportsfloat (class in typing)": [[363, "typing.SupportsFloat"]], "supportsindex (class in typing)": [[363, "typing.SupportsIndex"]], "supportsint (class in typing)": [[363, "typing.SupportsInt"]], "supportsround (class in typing)": [[363, "typing.SupportsRound"]], "type_checking (in module typing)": [[363, "typing.TYPE_CHECKING"]], "text (class in typing)": [[363, "typing.Text"]], "textio (class in typing)": [[363, "typing.TextIO"]], "tuple (in module typing)": [[363, "typing.Tuple"]], "type (class in typing)": [[363, "typing.Type"]], "typealias (in module typing)": [[363, "typing.TypeAlias"]], "typealiastype (class in typing)": [[363, "typing.TypeAliasType"]], "typeguard (in module typing)": [[363, "typing.TypeGuard"]], "typevar (class in typing)": [[363, "typing.TypeVar"]], "typevartuple (class in typing)": [[363, "typing.TypeVarTuple"]], "typeddict (class in typing)": [[363, "typing.TypedDict"]], "union (in module typing)": [[363, "typing.Union"]], "unpack (in module typing)": [[363, "typing.Unpack"]], "valuesview (class in typing)": [[363, "typing.ValuesView"]], "__bound__ (typing.typevar attribute)": [[363, "typing.TypeVar.__bound__"]], "__constraints__ (typing.typevar attribute)": [[363, "typing.TypeVar.__constraints__"]], "__contravariant__ (typing.typevar attribute)": [[363, "typing.TypeVar.__contravariant__"]], "__covariant__ (typing.typevar attribute)": [[363, "typing.TypeVar.__covariant__"]], "__infer_variance__ (typing.typevar attribute)": [[363, "typing.TypeVar.__infer_variance__"]], "__module__ (typing.newtype attribute)": [[363, "typing.NewType.__module__"]], "__module__ (typing.typealiastype attribute)": [[363, "typing.TypeAliasType.__module__"]], "__name__ (typing.newtype attribute)": [[363, "typing.NewType.__name__"]], "__name__ (typing.paramspec attribute)": [[363, "typing.ParamSpec.__name__"]], "__name__ (typing.typealiastype attribute)": [[363, "typing.TypeAliasType.__name__"]], "__name__ (typing.typevar attribute)": [[363, "typing.TypeVar.__name__"]], "__name__ (typing.typevartuple attribute)": [[363, "typing.TypeVarTuple.__name__"]], "__optional_keys__ (typing.typeddict attribute)": [[363, "typing.TypedDict.__optional_keys__"]], "__required_keys__ (typing.typeddict attribute)": [[363, "typing.TypedDict.__required_keys__"]], "__supertype__ (typing.newtype attribute)": [[363, "typing.NewType.__supertype__"]], "__total__ (typing.typeddict attribute)": [[363, "typing.TypedDict.__total__"]], "__type_params__ (typing.typealiastype attribute)": [[363, "typing.TypeAliasType.__type_params__"]], "__value__ (typing.typealiastype attribute)": [[363, "typing.TypeAliasType.__value__"]], "args (typing.paramspec attribute)": [[363, "typing.ParamSpec.args"]], "assert_never() (in module typing)": [[363, "typing.assert_never"]], "assert_type() (in module typing)": [[363, "typing.assert_type"]], "cast() (in module typing)": [[363, "typing.cast"]], "clear_overloads() (in module typing)": [[363, "typing.clear_overloads"]], "dataclass_transform() (in module typing)": [[363, "typing.dataclass_transform"]], "final() (in module typing)": [[363, "typing.final"]], "get_args() (in module typing)": [[363, "typing.get_args"]], "get_origin() (in module typing)": [[363, "typing.get_origin"]], "get_overloads() (in module typing)": [[363, "typing.get_overloads"]], "get_protocol_members() (in module typing)": [[363, "typing.get_protocol_members"]], "get_type_hints() (in module typing)": [[363, "typing.get_type_hints"]], "is_protocol() (in module typing)": [[363, "typing.is_protocol"]], "is_typeddict() (in module typing)": [[363, "typing.is_typeddict"]], "kwargs (typing.paramspec attribute)": [[363, "typing.ParamSpec.kwargs"]], "no_type_check() (in module typing)": [[363, "typing.no_type_check"]], "no_type_check_decorator() (in module typing)": [[363, "typing.no_type_check_decorator"]], "overload() (in module typing)": [[363, "typing.overload"]], "override() (in module typing)": [[363, "typing.override"]], "reveal_type() (in module typing)": [[363, "typing.reveal_type"]], "runtime_checkable() (in module typing)": [[363, "typing.runtime_checkable"]], "type_check_only() (in module typing)": [[363, "typing.type_check_only"]], "typing": [[363, "module-typing"]], "bidirectional() (in module unicodedata)": [[364, "unicodedata.bidirectional"]], "category() (in module unicodedata)": [[364, "unicodedata.category"]], "character": [[364, "index-0"], [403, "index-19"], [405, "index-43"]], "combining() (in module unicodedata)": [[364, "unicodedata.combining"]], "database": [[364, "index-0"]], "decimal() (in module unicodedata)": [[364, "unicodedata.decimal"]], "decomposition() (in module unicodedata)": [[364, "unicodedata.decomposition"]], "digit() (in module unicodedata)": [[364, "unicodedata.digit"]], "east_asian_width() (in module unicodedata)": [[364, "unicodedata.east_asian_width"]], "is_normalized() (in module unicodedata)": [[364, "unicodedata.is_normalized"]], "lookup() (in module unicodedata)": [[364, "unicodedata.lookup"]], "mirrored() (in module unicodedata)": [[364, "unicodedata.mirrored"]], "name() (in module unicodedata)": [[364, "unicodedata.name"]], "normalize() (in module unicodedata)": [[364, "unicodedata.normalize"]], "numeric() (in module unicodedata)": [[364, "unicodedata.numeric"]], "ucd_3_2_0 (in module unicodedata)": [[364, "unicodedata.ucd_3_2_0"]], "unicodedata": [[364, "module-unicodedata"]], "unidata_version (in module unicodedata)": [[364, "unicodedata.unidata_version"]], "--buffer": [[365, "cmdoption-unittest-b"]], "--catch": [[365, "cmdoption-unittest-c"]], "--durations": [[365, "cmdoption-unittest-durations"]], "--failfast": [[365, "cmdoption-unittest-f"]], "--locals": [[365, "cmdoption-unittest-locals"]], "--pattern": [[365, "cmdoption-unittest-discover-p"]], "--start-directory": [[365, "cmdoption-unittest-discover-s"]], "--top-level-directory": [[365, "cmdoption-unittest-discover-t"]], "-k": [[365, "cmdoption-unittest-k"]], "functiontestcase (class in unittest)": [[365, "unittest.FunctionTestCase"]], "isolatedasynciotestcase (class in unittest)": [[365, "unittest.IsolatedAsyncioTestCase"]], "skiptest": [[365, "unittest.SkipTest"]], "testcase (class in unittest)": [[365, "unittest.TestCase"]], "testloader (class in unittest)": [[365, "unittest.TestLoader"]], "testresult (class in unittest)": [[365, "unittest.TestResult"]], "testsuite (class in unittest)": [[365, "unittest.TestSuite"]], "texttestresult (class in unittest)": [[365, "unittest.TextTestResult"]], "texttestrunner (class in unittest)": [[365, "unittest.TextTestRunner"]], "__iter__() (unittest.testsuite method)": [[365, "unittest.TestSuite.__iter__"]], "_makeresult() (unittest.texttestrunner method)": [[365, "unittest.TextTestRunner._makeResult"]], "addasynccleanup() (unittest.isolatedasynciotestcase method)": [[365, "unittest.IsolatedAsyncioTestCase.addAsyncCleanup"]], "addclasscleanup() (unittest.testcase class method)": [[365, "unittest.TestCase.addClassCleanup"]], "addcleanup() (unittest.testcase method)": [[365, "unittest.TestCase.addCleanup"]], "addduration() (unittest.testresult method)": [[365, "unittest.TestResult.addDuration"]], "adderror() (unittest.testresult method)": [[365, "unittest.TestResult.addError"]], "addexpectedfailure() (unittest.testresult method)": [[365, "unittest.TestResult.addExpectedFailure"]], "addfailure() (unittest.testresult method)": [[365, "unittest.TestResult.addFailure"]], "addmodulecleanup() (in module unittest)": [[365, "unittest.addModuleCleanup"]], "addskip() (unittest.testresult method)": [[365, "unittest.TestResult.addSkip"]], "addsubtest() (unittest.testresult method)": [[365, "unittest.TestResult.addSubTest"]], "addsuccess() (unittest.testresult method)": [[365, "unittest.TestResult.addSuccess"]], "addtest() (unittest.testsuite method)": [[365, "unittest.TestSuite.addTest"]], "addtests() (unittest.testsuite method)": [[365, "unittest.TestSuite.addTests"]], "addtypeequalityfunc() (unittest.testcase method)": [[365, "unittest.TestCase.addTypeEqualityFunc"]], "addunexpectedsuccess() (unittest.testresult method)": [[365, "unittest.TestResult.addUnexpectedSuccess"]], "assertalmostequal() (unittest.testcase method)": [[365, "unittest.TestCase.assertAlmostEqual"]], "assertcountequal() (unittest.testcase method)": [[365, "unittest.TestCase.assertCountEqual"]], "assertdictequal() (unittest.testcase method)": [[365, "unittest.TestCase.assertDictEqual"]], "assertequal() (unittest.testcase method)": [[365, "unittest.TestCase.assertEqual"]], "assertfalse() (unittest.testcase method)": [[365, "unittest.TestCase.assertFalse"]], "assertgreater() (unittest.testcase method)": [[365, "unittest.TestCase.assertGreater"]], "assertgreaterequal() (unittest.testcase method)": [[365, "unittest.TestCase.assertGreaterEqual"]], "assertin() (unittest.testcase method)": [[365, "unittest.TestCase.assertIn"]], "assertis() (unittest.testcase method)": [[365, "unittest.TestCase.assertIs"]], "assertisinstance() (unittest.testcase method)": [[365, "unittest.TestCase.assertIsInstance"]], "assertisnone() (unittest.testcase method)": [[365, "unittest.TestCase.assertIsNone"]], "assertisnot() (unittest.testcase method)": [[365, "unittest.TestCase.assertIsNot"]], "assertisnotnone() (unittest.testcase method)": [[365, "unittest.TestCase.assertIsNotNone"]], "assertless() (unittest.testcase method)": [[365, "unittest.TestCase.assertLess"]], "assertlessequal() (unittest.testcase method)": [[365, "unittest.TestCase.assertLessEqual"]], "assertlistequal() (unittest.testcase method)": [[365, "unittest.TestCase.assertListEqual"]], "assertlogs() (unittest.testcase method)": [[365, "unittest.TestCase.assertLogs"]], "assertmultilineequal() (unittest.testcase method)": [[365, "unittest.TestCase.assertMultiLineEqual"]], "assertnologs() (unittest.testcase method)": [[365, "unittest.TestCase.assertNoLogs"]], "assertnotalmostequal() (unittest.testcase method)": [[365, "unittest.TestCase.assertNotAlmostEqual"]], "assertnotequal() (unittest.testcase method)": [[365, "unittest.TestCase.assertNotEqual"]], "assertnotin() (unittest.testcase method)": [[365, "unittest.TestCase.assertNotIn"]], "assertnotisinstance() (unittest.testcase method)": [[365, "unittest.TestCase.assertNotIsInstance"]], "assertnotregex() (unittest.testcase method)": [[365, "unittest.TestCase.assertNotRegex"]], "assertraises() (unittest.testcase method)": [[365, "unittest.TestCase.assertRaises"]], "assertraisesregex() (unittest.testcase method)": [[365, "unittest.TestCase.assertRaisesRegex"]], "assertregex() (unittest.testcase method)": [[365, "unittest.TestCase.assertRegex"]], "assertsequenceequal() (unittest.testcase method)": [[365, "unittest.TestCase.assertSequenceEqual"]], "assertsetequal() (unittest.testcase method)": [[365, "unittest.TestCase.assertSetEqual"]], "asserttrue() (unittest.testcase method)": [[365, "unittest.TestCase.assertTrue"]], "asserttupleequal() (unittest.testcase method)": [[365, "unittest.TestCase.assertTupleEqual"]], "assertwarns() (unittest.testcase method)": [[365, "unittest.TestCase.assertWarns"]], "assertwarnsregex() (unittest.testcase method)": [[365, "unittest.TestCase.assertWarnsRegex"]], "asyncsetup() (unittest.isolatedasynciotestcase method)": [[365, "unittest.IsolatedAsyncioTestCase.asyncSetUp"]], "asyncteardown() (unittest.isolatedasynciotestcase method)": [[365, "unittest.IsolatedAsyncioTestCase.asyncTearDown"]], "buffer (unittest.testresult attribute)": [[365, "unittest.TestResult.buffer"]], "collecteddurations (unittest.testresult attribute)": [[365, "unittest.TestResult.collectedDurations"]], "counttestcases() (unittest.testcase method)": [[365, "unittest.TestCase.countTestCases"]], "counttestcases() (unittest.testsuite method)": [[365, "unittest.TestSuite.countTestCases"]], "debug() (unittest.testcase method)": [[365, "unittest.TestCase.debug"]], "debug() (unittest.testsuite method)": [[365, "unittest.TestSuite.debug"]], "defaulttestloader (in module unittest)": [[365, "unittest.defaultTestLoader"]], "defaulttestresult() (unittest.testcase method)": [[365, "unittest.TestCase.defaultTestResult"]], "discover() (unittest.testloader method)": [[365, "unittest.TestLoader.discover"]], "doclasscleanups() (unittest.testcase class method)": [[365, "unittest.TestCase.doClassCleanups"]], "docleanups() (unittest.testcase method)": [[365, "unittest.TestCase.doCleanups"]], "domodulecleanups() (in module unittest)": [[365, "unittest.doModuleCleanups"]], "enterasynccontext() (unittest.isolatedasynciotestcase method)": [[365, "unittest.IsolatedAsyncioTestCase.enterAsyncContext"]], "enterclasscontext() (unittest.testcase class method)": [[365, "unittest.TestCase.enterClassContext"]], "entercontext() (unittest.testcase method)": [[365, "unittest.TestCase.enterContext"]], "entermodulecontext() (in module unittest)": [[365, "unittest.enterModuleContext"]], "errors (unittest.testloader attribute)": [[365, "unittest.TestLoader.errors"]], "errors (unittest.testresult attribute)": [[365, "unittest.TestResult.errors"]], "expectedfailure() (in module unittest)": [[365, "unittest.expectedFailure"]], "expectedfailures (unittest.testresult attribute)": [[365, "unittest.TestResult.expectedFailures"]], "fail() (unittest.testcase method)": [[365, "unittest.TestCase.fail"]], "failfast (unittest.testresult attribute)": [[365, "unittest.TestResult.failfast"]], "failureexception (unittest.testcase attribute)": [[365, "unittest.TestCase.failureException"]], "failures (unittest.testresult attribute)": [[365, "unittest.TestResult.failures"]], "gettestcasenames() (unittest.testloader method)": [[365, "unittest.TestLoader.getTestCaseNames"]], "id() (unittest.testcase method)": [[365, "unittest.TestCase.id"]], "installhandler() (in module unittest)": [[365, "unittest.installHandler"]], "loadtestsfrommodule() (unittest.testloader method)": [[365, "unittest.TestLoader.loadTestsFromModule"]], "loadtestsfromname() (unittest.testloader method)": [[365, "unittest.TestLoader.loadTestsFromName"]], "loadtestsfromnames() (unittest.testloader method)": [[365, "unittest.TestLoader.loadTestsFromNames"]], "loadtestsfromtestcase() (unittest.testloader method)": [[365, "unittest.TestLoader.loadTestsFromTestCase"]], "longmessage (unittest.testcase attribute)": [[365, "unittest.TestCase.longMessage"]], "main() (in module unittest)": [[365, "unittest.main"]], "maxdiff (unittest.testcase attribute)": [[365, "unittest.TestCase.maxDiff"]], "output (unittest.testcase attribute)": [[365, "unittest.TestCase.output"]], "records (unittest.testcase attribute)": [[365, "unittest.TestCase.records"]], "registerresult() (in module unittest)": [[365, "unittest.registerResult"]], "removehandler() (in module unittest)": [[365, "unittest.removeHandler"]], "removeresult() (in module unittest)": [[365, "unittest.removeResult"]], "run() (unittest.isolatedasynciotestcase method)": [[365, "unittest.IsolatedAsyncioTestCase.run"]], "run() (unittest.testcase method)": [[365, "unittest.TestCase.run"]], "run() (unittest.testsuite method)": [[365, "unittest.TestSuite.run"]], "run() (unittest.texttestrunner method)": [[365, "unittest.TextTestRunner.run"]], "setup() (unittest.testcase method)": [[365, "unittest.TestCase.setUp"]], "setupclass() (unittest.testcase method)": [[365, "unittest.TestCase.setUpClass"]], "shortdescription() (unittest.testcase method)": [[365, "unittest.TestCase.shortDescription"]], "shouldstop (unittest.testresult attribute)": [[365, "unittest.TestResult.shouldStop"]], "skip() (in module unittest)": [[365, "unittest.skip"]], "skipif() (in module unittest)": [[365, "unittest.skipIf"]], "skiptest() (unittest.testcase method)": [[365, "unittest.TestCase.skipTest"]], "skipunless() (in module unittest)": [[365, "unittest.skipUnless"]], "skipped (unittest.testresult attribute)": [[365, "unittest.TestResult.skipped"]], "sorttestmethodsusing (unittest.testloader attribute)": [[365, "unittest.TestLoader.sortTestMethodsUsing"]], "starttest() (unittest.testresult method)": [[365, "unittest.TestResult.startTest"]], "starttestrun() (unittest.testresult method)": [[365, "unittest.TestResult.startTestRun"]], "stop() (unittest.testresult method)": [[365, "unittest.TestResult.stop"]], "stoptest() (unittest.testresult method)": [[365, "unittest.TestResult.stopTest"]], "stoptestrun() (unittest.testresult method)": [[365, "unittest.TestResult.stopTestRun"]], "subtest() (unittest.testcase method)": [[365, "unittest.TestCase.subTest"]], "suiteclass (unittest.testloader attribute)": [[365, "unittest.TestLoader.suiteClass"]], "tb_locals (unittest.testresult attribute)": [[365, "unittest.TestResult.tb_locals"]], "teardown() (unittest.testcase method)": [[365, "unittest.TestCase.tearDown"]], "teardownclass() (unittest.testcase method)": [[365, "unittest.TestCase.tearDownClass"]], "testmethodprefix (unittest.testloader attribute)": [[365, "unittest.TestLoader.testMethodPrefix"]], "testnamepatterns (unittest.testloader attribute)": [[365, "unittest.TestLoader.testNamePatterns"]], "testsrun (unittest.testresult attribute)": [[365, "unittest.TestResult.testsRun"]], "unexpectedsuccesses (unittest.testresult attribute)": [[365, "unittest.TestResult.unexpectedSuccesses"]], "unittest": [[365, "module-unittest"]], "unittest command line option": [[365, "cmdoption-unittest-b"], [365, "cmdoption-unittest-c"], [365, "cmdoption-unittest-durations"], [365, "cmdoption-unittest-f"], [365, "cmdoption-unittest-k"], [365, "cmdoption-unittest-locals"]], "unittest-discover command line option": [[365, "cmdoption-unittest-discover-p"], [365, "cmdoption-unittest-discover-s"], [365, "cmdoption-unittest-discover-t"], [365, "cmdoption-unittest-discover-v"]], "wassuccessful() (unittest.testresult method)": [[365, "unittest.TestResult.wasSuccessful"]], "any (in module unittest.mock)": [[366, "unittest.mock.ANY"]], "asyncmock (class in unittest.mock)": [[366, "unittest.mock.AsyncMock"]], "default (in module unittest.mock)": [[366, "unittest.mock.DEFAULT"]], "default_timeout (unittest.mock.threadingmock attribute)": [[366, "unittest.mock.ThreadingMock.DEFAULT_TIMEOUT"]], "filter_dir (in module unittest.mock)": [[366, "unittest.mock.FILTER_DIR"]], "magicmock (class in unittest.mock)": [[366, "unittest.mock.MagicMock"]], "mock (class in unittest.mock)": [[366, "unittest.mock.Mock"]], "noncallablemagicmock (class in unittest.mock)": [[366, "unittest.mock.NonCallableMagicMock"]], "noncallablemock (class in unittest.mock)": [[366, "unittest.mock.NonCallableMock"]], "propertymock (class in unittest.mock)": [[366, "unittest.mock.PropertyMock"]], "threadingmock (class in unittest.mock)": [[366, "unittest.mock.ThreadingMock"]], "__class__ (unittest.mock.mock attribute)": [[366, "unittest.mock.Mock.__class__"]], "__dir__() (unittest.mock.mock method)": [[366, "unittest.mock.Mock.__dir__"]], "_get_child_mock() (unittest.mock.mock method)": [[366, "unittest.mock.Mock._get_child_mock"]], "assert_any_await() (unittest.mock.asyncmock method)": [[366, "unittest.mock.AsyncMock.assert_any_await"]], "assert_any_call() (unittest.mock.mock method)": [[366, "unittest.mock.Mock.assert_any_call"]], "assert_awaited() (unittest.mock.asyncmock method)": [[366, "unittest.mock.AsyncMock.assert_awaited"]], "assert_awaited_once() (unittest.mock.asyncmock method)": [[366, "unittest.mock.AsyncMock.assert_awaited_once"]], "assert_awaited_once_with() (unittest.mock.asyncmock method)": [[366, "unittest.mock.AsyncMock.assert_awaited_once_with"]], "assert_awaited_with() (unittest.mock.asyncmock method)": [[366, "unittest.mock.AsyncMock.assert_awaited_with"]], "assert_called() (unittest.mock.mock method)": [[366, "unittest.mock.Mock.assert_called"]], "assert_called_once() (unittest.mock.mock method)": [[366, "unittest.mock.Mock.assert_called_once"]], "assert_called_once_with() (unittest.mock.mock method)": [[366, "unittest.mock.Mock.assert_called_once_with"]], "assert_called_with() (unittest.mock.mock method)": [[366, "unittest.mock.Mock.assert_called_with"]], "assert_has_awaits() (unittest.mock.asyncmock method)": [[366, "unittest.mock.AsyncMock.assert_has_awaits"]], "assert_has_calls() (unittest.mock.mock method)": [[366, "unittest.mock.Mock.assert_has_calls"]], "assert_not_awaited() (unittest.mock.asyncmock method)": [[366, "unittest.mock.AsyncMock.assert_not_awaited"]], "assert_not_called() (unittest.mock.mock method)": [[366, "unittest.mock.Mock.assert_not_called"]], "attach_mock() (unittest.mock.mock method)": [[366, "unittest.mock.Mock.attach_mock"]], "await_args (unittest.mock.asyncmock attribute)": [[366, "unittest.mock.AsyncMock.await_args"]], "await_args_list (unittest.mock.asyncmock attribute)": [[366, "unittest.mock.AsyncMock.await_args_list"]], "await_count (unittest.mock.asyncmock attribute)": [[366, "unittest.mock.AsyncMock.await_count"]], "call() (in module unittest.mock)": [[366, "unittest.mock.call"]], "call_args (unittest.mock.mock attribute)": [[366, "unittest.mock.Mock.call_args"]], "call_args_list (unittest.mock.mock attribute)": [[366, "unittest.mock.Mock.call_args_list"]], "call_count (unittest.mock.mock attribute)": [[366, "unittest.mock.Mock.call_count"]], "call_list() (unittest.mock.call method)": [[366, "unittest.mock.call.call_list"]], "called (unittest.mock.mock attribute)": [[366, "unittest.mock.Mock.called"]], "configure_mock() (unittest.mock.mock method)": [[366, "unittest.mock.Mock.configure_mock"]], "create_autospec() (in module unittest.mock)": [[366, "unittest.mock.create_autospec"]], "method_calls (unittest.mock.mock attribute)": [[366, "unittest.mock.Mock.method_calls"]], "mock_add_spec() (unittest.mock.mock method)": [[366, "unittest.mock.Mock.mock_add_spec"]], "mock_calls (unittest.mock.mock attribute)": [[366, "unittest.mock.Mock.mock_calls"]], "mock_open() (in module unittest.mock)": [[366, "unittest.mock.mock_open"]], "patch() (in module unittest.mock)": [[366, "unittest.mock.patch"]], "patch.dict() (in module unittest.mock)": [[366, "unittest.mock.patch.dict"]], "patch.multiple() (in module unittest.mock)": [[366, "unittest.mock.patch.multiple"]], "patch.object() (in module unittest.mock)": [[366, "unittest.mock.patch.object"]], "patch.stopall() (in module unittest.mock)": [[366, "unittest.mock.patch.stopall"]], "reset_mock() (unittest.mock.asyncmock method)": [[366, "unittest.mock.AsyncMock.reset_mock"]], "reset_mock() (unittest.mock.mock method)": [[366, "unittest.mock.Mock.reset_mock"]], "return_value (unittest.mock.mock attribute)": [[366, "unittest.mock.Mock.return_value"]], "seal() (in module unittest.mock)": [[366, "unittest.mock.seal"]], "sentinel (in module unittest.mock)": [[366, "unittest.mock.sentinel"]], "side_effect (unittest.mock.mock attribute)": [[366, "unittest.mock.Mock.side_effect"]], "unittest.mock": [[366, "module-unittest.mock"]], "wait_until_any_call_with() (unittest.mock.threadingmock method)": [[366, "unittest.mock.ThreadingMock.wait_until_any_call_with"]], "wait_until_called() (unittest.mock.threadingmock method)": [[366, "unittest.mock.ThreadingMock.wait_until_called"]], "urllib": [[369, "module-urllib"]], "contenttooshorterror": [[370, "urllib.error.ContentTooShortError"]], "httperror": [[370, "urllib.error.HTTPError"]], "urlerror": [[370, "urllib.error.URLError"]], "code (urllib.error.httperror attribute)": [[370, "urllib.error.HTTPError.code"]], "content (urllib.error.contenttooshorterror attribute)": [[370, "urllib.error.ContentTooShortError.content"]], "fp (urllib.error.httperror attribute)": [[370, "urllib.error.HTTPError.fp"]], "headers (urllib.error.httperror attribute)": [[370, "urllib.error.HTTPError.headers"]], "reason (urllib.error.httperror attribute)": [[370, "urllib.error.HTTPError.reason"]], "reason (urllib.error.urlerror attribute)": [[370, "urllib.error.URLError.reason"]], "url (urllib.error.httperror attribute)": [[370, "urllib.error.HTTPError.url"]], "urllib.error": [[370, "module-urllib.error"]], "defragresult (class in urllib.parse)": [[371, "urllib.parse.DefragResult"]], "defragresultbytes (class in urllib.parse)": [[371, "urllib.parse.DefragResultBytes"]], "parseresult (class in urllib.parse)": [[371, "urllib.parse.ParseResult"]], "parseresultbytes (class in urllib.parse)": [[371, "urllib.parse.ParseResultBytes"]], "rfc 1738": [[371, "index-13"]], "rfc 1808": [[371, "index-1"], [371, "index-12"], [454, "index-43"]], "rfc 2368": [[371, "index-11"]], "rfc 2396": [[371, "index-10"], [371, "index-3"], [371, "index-6"], [454, "index-44"], [456, "index-34"]], "rfc 2732": [[371, "index-9"], [444, "index-11"], [451, "index-13"]], "splitresult (class in urllib.parse)": [[371, "urllib.parse.SplitResult"]], "splitresultbytes (class in urllib.parse)": [[371, "urllib.parse.SplitResultBytes"]], "geturl() (urllib.parse.urllib.parse.splitresult method)": [[371, "urllib.parse.urllib.parse.SplitResult.geturl"]], "parse_qs() (in module urllib.parse)": [[371, "urllib.parse.parse_qs"]], "parse_qsl() (in module urllib.parse)": [[371, "urllib.parse.parse_qsl"]], "parsing": [[371, "index-0"]], "quote() (in module urllib.parse)": [[371, "urllib.parse.quote"]], "quote_from_bytes() (in module urllib.parse)": [[371, "urllib.parse.quote_from_bytes"]], "quote_plus() (in module urllib.parse)": [[371, "urllib.parse.quote_plus"]], "relative": [[371, "index-0"], [411, "index-39"]], "unquote() (in module urllib.parse)": [[371, "urllib.parse.unquote"]], "unquote_plus() (in module urllib.parse)": [[371, "urllib.parse.unquote_plus"]], "unquote_to_bytes() (in module urllib.parse)": [[371, "urllib.parse.unquote_to_bytes"]], "unwrap() (in module urllib.parse)": [[371, "urllib.parse.unwrap"]], "urldefrag() (in module urllib.parse)": [[371, "urllib.parse.urldefrag"]], "urlencode() (in module urllib.parse)": [[371, "urllib.parse.urlencode"]], "urljoin() (in module urllib.parse)": [[371, "urllib.parse.urljoin"]], "urllib.parse": [[371, "module-urllib.parse"]], "urlparse() (in module urllib.parse)": [[371, "urllib.parse.urlparse"]], "urlsplit() (in module urllib.parse)": [[371, "urllib.parse.urlsplit"]], "urlunparse() (in module urllib.parse)": [[371, "urllib.parse.urlunparse"]], "urlunsplit() (in module urllib.parse)": [[371, "urllib.parse.urlunsplit"]], "abstractbasicauthhandler (class in urllib.request)": [[372, "urllib.request.AbstractBasicAuthHandler"]], "abstractdigestauthhandler (class in urllib.request)": [[372, "urllib.request.AbstractDigestAuthHandler"]], "basehandler (class in urllib.request)": [[372, "urllib.request.BaseHandler"]], "cacheftphandler (class in urllib.request)": [[372, "urllib.request.CacheFTPHandler"]], "datahandler (class in urllib.request)": [[372, "urllib.request.DataHandler"]], "ftphandler (class in urllib.request)": [[372, "urllib.request.FTPHandler"]], "fancyurlopener (class in urllib.request)": [[372, "urllib.request.FancyURLopener"]], "filehandler (class in urllib.request)": [[372, "urllib.request.FileHandler"]], "httpbasicauthhandler (class in urllib.request)": [[372, "urllib.request.HTTPBasicAuthHandler"]], "httpcookieprocessor (class in urllib.request)": [[372, "urllib.request.HTTPCookieProcessor"]], "httpdefaulterrorhandler (class in urllib.request)": [[372, "urllib.request.HTTPDefaultErrorHandler"]], "httpdigestauthhandler (class in urllib.request)": [[372, "urllib.request.HTTPDigestAuthHandler"]], "httperrorprocessor (class in urllib.request)": [[372, "urllib.request.HTTPErrorProcessor"]], "httphandler (class in urllib.request)": [[372, "urllib.request.HTTPHandler"]], "httppasswordmgr (class in urllib.request)": [[372, "urllib.request.HTTPPasswordMgr"]], "httppasswordmgrwithdefaultrealm (class in urllib.request)": [[372, "urllib.request.HTTPPasswordMgrWithDefaultRealm"]], "httppasswordmgrwithpriorauth (class in urllib.request)": [[372, "urllib.request.HTTPPasswordMgrWithPriorAuth"]], "httpredirecthandler (class in urllib.request)": [[372, "urllib.request.HTTPRedirectHandler"]], "httpshandler (class in urllib.request)": [[372, "urllib.request.HTTPSHandler"]], "openerdirector (class in urllib.request)": [[372, "urllib.request.OpenerDirector"]], "proxybasicauthhandler (class in urllib.request)": [[372, "urllib.request.ProxyBasicAuthHandler"]], "proxydigestauthhandler (class in urllib.request)": [[372, "urllib.request.ProxyDigestAuthHandler"]], "proxyhandler (class in urllib.request)": [[372, "urllib.request.ProxyHandler"]], "rfc 2397": [[372, "index-8"]], "request (class in urllib.request)": [[372, "urllib.request.Request"]], "urlopener (class in urllib.request)": [[372, "urllib.request.URLopener"]], "unknownhandler (class in urllib.request)": [[372, "urllib.request.UnknownHandler"]], "add_handler() (urllib.request.openerdirector method)": [[372, "urllib.request.OpenerDirector.add_handler"]], "add_header() (urllib.request.request method)": [[372, "urllib.request.Request.add_header"]], "add_parent() (urllib.request.basehandler method)": [[372, "urllib.request.BaseHandler.add_parent"]], "add_password() (urllib.request.httppasswordmgr method)": [[372, "urllib.request.HTTPPasswordMgr.add_password"]], "add_password() (urllib.request.httppasswordmgrwithpriorauth method)": [[372, "urllib.request.HTTPPasswordMgrWithPriorAuth.add_password"]], "add_unredirected_header() (urllib.request.request method)": [[372, "urllib.request.Request.add_unredirected_header"]], "addinfourl (class in urllib.response)": [[372, "urllib.response.addinfourl"]], "build_opener() (in module urllib.request)": [[372, "urllib.request.build_opener"]], "close() (urllib.request.basehandler method)": [[372, "urllib.request.BaseHandler.close"]], "code (urllib.response.addinfourl attribute)": [[372, "urllib.response.addinfourl.code"]], "cookiejar (urllib.request.httpcookieprocessor attribute)": [[372, "urllib.request.HTTPCookieProcessor.cookiejar"]], "data (urllib.request.request attribute)": [[372, "urllib.request.Request.data"]], "data_open() (urllib.request.datahandler method)": [[372, "urllib.request.DataHandler.data_open"]], "default_open() (urllib.request.basehandler method)": [[372, "urllib.request.BaseHandler.default_open"]], "error() (urllib.request.openerdirector method)": [[372, "urllib.request.OpenerDirector.error"]], "file_open() (urllib.request.filehandler method)": [[372, "urllib.request.FileHandler.file_open"]], "find_user_password() (urllib.request.httppasswordmgr method)": [[372, "urllib.request.HTTPPasswordMgr.find_user_password"]], "find_user_password() (urllib.request.httppasswordmgrwithpriorauth method)": [[372, "urllib.request.HTTPPasswordMgrWithPriorAuth.find_user_password"]], "ftp_open() (urllib.request.ftphandler method)": [[372, "urllib.request.FTPHandler.ftp_open"]], "full_url (urllib.request.request attribute)": [[372, "urllib.request.Request.full_url"]], "get_full_url() (urllib.request.request method)": [[372, "urllib.request.Request.get_full_url"]], "get_header() (urllib.request.request method)": [[372, "urllib.request.Request.get_header"]], "get_method() (urllib.request.request method)": [[372, "urllib.request.Request.get_method"]], "getcode() (urllib.response.addinfourl method)": [[372, "urllib.response.addinfourl.getcode"]], "getproxies() (in module urllib.request)": [[372, "urllib.request.getproxies"]], "geturl() (urllib.response.addinfourl method)": [[372, "urllib.response.addinfourl.geturl"]], "has_header() (urllib.request.request method)": [[372, "urllib.request.Request.has_header"]], "header_items() (urllib.request.request method)": [[372, "urllib.request.Request.header_items"]], "headers (urllib.response.addinfourl attribute)": [[372, "urllib.response.addinfourl.headers"]], "host (urllib.request.request attribute)": [[372, "urllib.request.Request.host"]], "http_error_301() (urllib.request.httpredirecthandler method)": [[372, "urllib.request.HTTPRedirectHandler.http_error_301"]], "http_error_302() (urllib.request.httpredirecthandler method)": [[372, "urllib.request.HTTPRedirectHandler.http_error_302"]], "http_error_303() (urllib.request.httpredirecthandler method)": [[372, "urllib.request.HTTPRedirectHandler.http_error_303"]], "http_error_307() (urllib.request.httpredirecthandler method)": [[372, "urllib.request.HTTPRedirectHandler.http_error_307"]], "http_error_308() (urllib.request.httpredirecthandler method)": [[372, "urllib.request.HTTPRedirectHandler.http_error_308"]], "http_error_401() (urllib.request.httpbasicauthhandler method)": [[372, "urllib.request.HTTPBasicAuthHandler.http_error_401"]], "http_error_401() (urllib.request.httpdigestauthhandler method)": [[372, "urllib.request.HTTPDigestAuthHandler.http_error_401"]], "http_error_407() (urllib.request.proxybasicauthhandler method)": [[372, "urllib.request.ProxyBasicAuthHandler.http_error_407"]], "http_error_407() (urllib.request.proxydigestauthhandler method)": [[372, "urllib.request.ProxyDigestAuthHandler.http_error_407"]], "http_error_auth_reqed() (urllib.request.abstractbasicauthhandler method)": [[372, "urllib.request.AbstractBasicAuthHandler.http_error_auth_reqed"]], "http_error_auth_reqed() (urllib.request.abstractdigestauthhandler method)": [[372, "urllib.request.AbstractDigestAuthHandler.http_error_auth_reqed"]], "http_error_default() (urllib.request.basehandler method)": [[372, "urllib.request.BaseHandler.http_error_default"]], "http_open() (urllib.request.httphandler method)": [[372, "urllib.request.HTTPHandler.http_open"]], "http_response() (urllib.request.httperrorprocessor method)": [[372, "urllib.request.HTTPErrorProcessor.http_response"]], "https_open() (urllib.request.httpshandler method)": [[372, "urllib.request.HTTPSHandler.https_open"]], "https_response() (urllib.request.httperrorprocessor method)": [[372, "urllib.request.HTTPErrorProcessor.https_response"]], "info() (urllib.response.addinfourl method)": [[372, "urllib.response.addinfourl.info"]], "install_opener() (in module urllib.request)": [[372, "urllib.request.install_opener"]], "is_authenticated() (urllib.request.httppasswordmgrwithpriorauth method)": [[372, "urllib.request.HTTPPasswordMgrWithPriorAuth.is_authenticated"]], "method (urllib.request.request attribute)": [[372, "urllib.request.Request.method"]], "no_proxy": [[372, "index-4"]], "open() (urllib.request.openerdirector method)": [[372, "urllib.request.OpenerDirector.open"]], "open() (urllib.request.urlopener method)": [[372, "urllib.request.URLopener.open"]], "open_unknown() (urllib.request.urlopener method)": [[372, "urllib.request.URLopener.open_unknown"]], "origin_req_host (urllib.request.request attribute)": [[372, "urllib.request.Request.origin_req_host"]], "parent (urllib.request.basehandler attribute)": [[372, "urllib.request.BaseHandler.parent"]], "pathname2url() (in module urllib.request)": [[372, "urllib.request.pathname2url"]], "prompt_user_passwd() (urllib.request.fancyurlopener method)": [[372, "urllib.request.FancyURLopener.prompt_user_passwd"]], "redirect_request() (urllib.request.httpredirecthandler method)": [[372, "urllib.request.HTTPRedirectHandler.redirect_request"]], "remove_header() (urllib.request.request method)": [[372, "urllib.request.Request.remove_header"]], "retrieve() (urllib.request.urlopener method)": [[372, "urllib.request.URLopener.retrieve"]], "selector (urllib.request.request attribute)": [[372, "urllib.request.Request.selector"]], "setmaxconns() (urllib.request.cacheftphandler method)": [[372, "urllib.request.CacheFTPHandler.setMaxConns"]], "settimeout() (urllib.request.cacheftphandler method)": [[372, "urllib.request.CacheFTPHandler.setTimeout"]], "set_proxy() (urllib.request.request method)": [[372, "urllib.request.Request.set_proxy"]], "status (urllib.response.addinfourl attribute)": [[372, "urllib.response.addinfourl.status"]], "type (urllib.request.request attribute)": [[372, "urllib.request.Request.type"]], "unknown_open() (urllib.request.basehandler method)": [[372, "urllib.request.BaseHandler.unknown_open"]], "unknown_open() (urllib.request.unknownhandler method)": [[372, "urllib.request.UnknownHandler.unknown_open"]], "unverifiable (urllib.request.request attribute)": [[372, "urllib.request.Request.unverifiable"]], "update_authenticated() (urllib.request.httppasswordmgrwithpriorauth method)": [[372, "urllib.request.HTTPPasswordMgrWithPriorAuth.update_authenticated"]], "url (urllib.response.addinfourl attribute)": [[372, "urllib.response.addinfourl.url"]], "url2pathname() (in module urllib.request)": [[372, "urllib.request.url2pathname"]], "urlcleanup() (in module urllib.request)": [[372, "urllib.request.urlcleanup"]], "urllib.response": [[372, "module-urllib.response"]], "urlopen() (in module urllib.request)": [[372, "urllib.request.urlopen"]], "urlretrieve() (in module urllib.request)": [[372, "urllib.request.urlretrieve"]], "version (urllib.request.urlopener attribute)": [[372, "urllib.request.URLopener.version"]], "robotfileparser (class in urllib.robotparser)": [[373, "urllib.robotparser.RobotFileParser"]], "can_fetch() (urllib.robotparser.robotfileparser method)": [[373, "urllib.robotparser.RobotFileParser.can_fetch"]], "crawl_delay() (urllib.robotparser.robotfileparser method)": [[373, "urllib.robotparser.RobotFileParser.crawl_delay"]], "modified() (urllib.robotparser.robotfileparser method)": [[373, "urllib.robotparser.RobotFileParser.modified"]], "mtime() (urllib.robotparser.robotfileparser method)": [[373, "urllib.robotparser.RobotFileParser.mtime"]], "parse() (urllib.robotparser.robotfileparser method)": [[373, "urllib.robotparser.RobotFileParser.parse"]], "read() (urllib.robotparser.robotfileparser method)": [[373, "urllib.robotparser.RobotFileParser.read"]], "request_rate() (urllib.robotparser.robotfileparser method)": [[373, "urllib.robotparser.RobotFileParser.request_rate"]], "robots.txt": [[373, "index-0"]], "set_url() (urllib.robotparser.robotfileparser method)": [[373, "urllib.robotparser.RobotFileParser.set_url"]], "site_maps() (urllib.robotparser.robotfileparser method)": [[373, "urllib.robotparser.RobotFileParser.site_maps"]], "urllib.robotparser": [[373, "module-urllib.robotparser"]], "--name": [[374, "cmdoption-uuid-name"]], "--namespace": [[374, "cmdoption-uuid-namespace"]], "--uuid": [[374, "cmdoption-uuid-uuid"]], "namespace_dns (in module uuid)": [[374, "uuid.NAMESPACE_DNS"]], "namespace_oid (in module uuid)": [[374, "uuid.NAMESPACE_OID"]], "namespace_url (in module uuid)": [[374, "uuid.NAMESPACE_URL"]], "namespace_x500 (in module uuid)": [[374, "uuid.NAMESPACE_X500"]], "reserved_future (in module uuid)": [[374, "uuid.RESERVED_FUTURE"]], "reserved_microsoft (in module uuid)": [[374, "uuid.RESERVED_MICROSOFT"]], "reserved_ncs (in module uuid)": [[374, "uuid.RESERVED_NCS"]], "rfc_4122 (in module uuid)": [[374, "uuid.RFC_4122"]], "safeuuid (class in uuid)": [[374, "uuid.SafeUUID"]], "uuid (class in uuid)": [[374, "uuid.UUID"]], "bytes (uuid.uuid attribute)": [[374, "uuid.UUID.bytes"]], "bytes_le (uuid.uuid attribute)": [[374, "uuid.UUID.bytes_le"]], "clock_seq (uuid.uuid attribute)": [[374, "uuid.UUID.clock_seq"]], "clock_seq_hi_variant (uuid.uuid attribute)": [[374, "uuid.UUID.clock_seq_hi_variant"]], "clock_seq_low (uuid.uuid attribute)": [[374, "uuid.UUID.clock_seq_low"]], "fields (uuid.uuid attribute)": [[374, "uuid.UUID.fields"]], "getnode": [[374, "index-5"]], "getnode() (in module uuid)": [[374, "uuid.getnode"]], "hex (uuid.uuid attribute)": [[374, "uuid.UUID.hex"]], "int (uuid.uuid attribute)": [[374, "uuid.UUID.int"]], "is_safe (uuid.uuid attribute)": [[374, "uuid.UUID.is_safe"]], "node (uuid.uuid attribute)": [[374, "uuid.UUID.node"]], "safe (uuid.safeuuid attribute)": [[374, "uuid.SafeUUID.safe"]], "time (uuid.uuid attribute)": [[374, "uuid.UUID.time"]], "time_hi_version (uuid.uuid attribute)": [[374, "uuid.UUID.time_hi_version"]], "time_low (uuid.uuid attribute)": [[374, "uuid.UUID.time_low"]], "time_mid (uuid.uuid attribute)": [[374, "uuid.UUID.time_mid"]], "unknown (uuid.safeuuid attribute)": [[374, "uuid.SafeUUID.unknown"]], "unsafe (uuid.safeuuid attribute)": [[374, "uuid.SafeUUID.unsafe"]], "urn (uuid.uuid attribute)": [[374, "uuid.UUID.urn"]], "uuid": [[374, "module-uuid"]], "uuid command line option": [[374, "cmdoption-uuid-N"], [374, "cmdoption-uuid-h"], [374, "cmdoption-uuid-n"], [374, "cmdoption-uuid-name"], [374, "cmdoption-uuid-namespace"], [374, "cmdoption-uuid-u"], [374, "cmdoption-uuid-uuid"]], "uuid1": [[374, "index-6"]], "uuid1() (in module uuid)": [[374, "uuid.uuid1"]], "uuid3": [[374, "index-7"]], "uuid3() (in module uuid)": [[374, "uuid.uuid3"]], "uuid4": [[374, "index-8"]], "uuid4() (in module uuid)": [[374, "uuid.uuid4"]], "uuid5": [[374, "index-9"]], "uuid5() (in module uuid)": [[374, "uuid.uuid5"]], "variant (uuid.uuid attribute)": [[374, "uuid.UUID.variant"]], "version (uuid.uuid attribute)": [[374, "uuid.UUID.version"]], "envbuilder (class in venv)": [[375, "venv.EnvBuilder"]], "environments": [[375, "index-0"]], "pep 405": [[375, "index-1"], [452, "index-1"]], "create() (in module venv)": [[375, "venv.create"]], "create() (venv.envbuilder method)": [[375, "venv.EnvBuilder.create"]], "create_configuration() (venv.envbuilder method)": [[375, "venv.EnvBuilder.create_configuration"]], "create_git_ignore_file() (venv.envbuilder method)": [[375, "venv.EnvBuilder.create_git_ignore_file"]], "ensure_directories() (venv.envbuilder method)": [[375, "venv.EnvBuilder.ensure_directories"]], "install_scripts() (venv.envbuilder method)": [[375, "venv.EnvBuilder.install_scripts"]], "post_setup() (venv.envbuilder method)": [[375, "venv.EnvBuilder.post_setup"]], "setup_python() (venv.envbuilder method)": [[375, "venv.EnvBuilder.setup_python"]], "setup_scripts() (venv.envbuilder method)": [[375, "venv.EnvBuilder.setup_scripts"]], "upgrade_dependencies() (venv.envbuilder method)": [[375, "venv.EnvBuilder.upgrade_dependencies"]], "venv": [[375, "module-venv"]], "virtual": [[375, "index-0"]], "catch_warnings (class in warnings)": [[376, "warnings.catch_warnings"]], "filterwarnings() (in module warnings)": [[376, "warnings.filterwarnings"]], "formatwarning() (in module warnings)": [[376, "warnings.formatwarning"]], "resetwarnings() (in module warnings)": [[376, "warnings.resetwarnings"]], "showwarning() (in module warnings)": [[376, "warnings.showwarning"]], "simplefilter() (in module warnings)": [[376, "warnings.simplefilter"]], "warn() (in module warnings)": [[376, "warnings.warn"]], "warn_explicit() (in module warnings)": [[376, "warnings.warn_explicit"]], "warnings": [[376, "index-0"], [376, "module-warnings"]], "wave_read (class in wave)": [[377, "wave.Wave_read"]], "wave_write (class in wave)": [[377, "wave.Wave_write"]], "close() (wave.wave_read method)": [[377, "wave.Wave_read.close"]], "close() (wave.wave_write method)": [[377, "wave.Wave_write.close"]], "getcompname() (wave.wave_read method)": [[377, "wave.Wave_read.getcompname"]], "getcomptype() (wave.wave_read method)": [[377, "wave.Wave_read.getcomptype"]], "getframerate() (wave.wave_read method)": [[377, "wave.Wave_read.getframerate"]], "getmark() (wave.wave_read method)": [[377, "wave.Wave_read.getmark"]], "getmarkers() (wave.wave_read method)": [[377, "wave.Wave_read.getmarkers"]], "getnchannels() (wave.wave_read method)": [[377, "wave.Wave_read.getnchannels"]], "getnframes() (wave.wave_read method)": [[377, "wave.Wave_read.getnframes"]], "getparams() (wave.wave_read method)": [[377, "wave.Wave_read.getparams"]], "getsampwidth() (wave.wave_read method)": [[377, "wave.Wave_read.getsampwidth"]], "open() (in module wave)": [[377, "wave.open"]], "readframes() (wave.wave_read method)": [[377, "wave.Wave_read.readframes"]], "rewind() (wave.wave_read method)": [[377, "wave.Wave_read.rewind"]], "setcomptype() (wave.wave_write method)": [[377, "wave.Wave_write.setcomptype"]], "setframerate() (wave.wave_write method)": [[377, "wave.Wave_write.setframerate"]], "setnchannels() (wave.wave_write method)": [[377, "wave.Wave_write.setnchannels"]], "setnframes() (wave.wave_write method)": [[377, "wave.Wave_write.setnframes"]], "setparams() (wave.wave_write method)": [[377, "wave.Wave_write.setparams"]], "setpos() (wave.wave_read method)": [[377, "wave.Wave_read.setpos"]], "setsampwidth() (wave.wave_write method)": [[377, "wave.Wave_write.setsampwidth"]], "tell() (wave.wave_read method)": [[377, "wave.Wave_read.tell"]], "tell() (wave.wave_write method)": [[377, "wave.Wave_write.tell"]], "wave": [[377, "module-wave"]], "writeframes() (wave.wave_write method)": [[377, "wave.Wave_write.writeframes"]], "writeframesraw() (wave.wave_write method)": [[377, "wave.Wave_write.writeframesraw"]], "callableproxytype (in module weakref)": [[378, "weakref.CallableProxyType"]], "pep 205": [[378, "index-2"], [438, "index-9"]], "proxytype (in module weakref)": [[378, "weakref.ProxyType"]], "proxytypes (in module weakref)": [[378, "weakref.ProxyTypes"]], "referencetype (in module weakref)": [[378, "weakref.ReferenceType"]], "weakkeydictionary (class in weakref)": [[378, "weakref.WeakKeyDictionary"]], "weakmethod (class in weakref)": [[378, "weakref.WeakMethod"]], "weakset (class in weakref)": [[378, "weakref.WeakSet"]], "weakvaluedictionary (class in weakref)": [[378, "weakref.WeakValueDictionary"]], "__call__() (weakref.finalize method)": [[378, "weakref.finalize.__call__"]], "__callback__ (weakref.ref attribute)": [[378, "weakref.ref.__callback__"]], "alive (weakref.finalize attribute)": [[378, "weakref.finalize.alive"]], "atexit (weakref.finalize attribute)": [[378, "weakref.finalize.atexit"]], "detach() (weakref.finalize method)": [[378, "weakref.finalize.detach"]], "finalize (class in weakref)": [[378, "weakref.finalize"]], "getweakrefcount() (in module weakref)": [[378, "weakref.getweakrefcount"]], "getweakrefs() (in module weakref)": [[378, "weakref.getweakrefs"]], "keyrefs() (weakref.weakkeydictionary method)": [[378, "weakref.WeakKeyDictionary.keyrefs"]], "peek() (weakref.finalize method)": [[378, "weakref.finalize.peek"]], "proxy() (in module weakref)": [[378, "weakref.proxy"]], "ref (class in weakref)": [[378, "weakref.ref"]], "valuerefs() (weakref.weakvaluedictionary method)": [[378, "weakref.WeakValueDictionary.valuerefs"]], "weakref": [[378, "module-weakref"]], "browser": [[379, "index-0"], [379, "index-1"]], "get() (in module webbrowser)": [[379, "webbrowser.get"]], "name (webbrowser.controller attribute)": [[379, "webbrowser.controller.name"]], "open() (in module webbrowser)": [[379, "webbrowser.open"]], "open() (webbrowser.controller method)": [[379, "webbrowser.controller.open"]], "open_new() (in module webbrowser)": [[379, "webbrowser.open_new"]], "open_new() (webbrowser.controller method)": [[379, "webbrowser.controller.open_new"]], "open_new_tab() (in module webbrowser)": [[379, "webbrowser.open_new_tab"]], "open_new_tab() (webbrowser.controller method)": [[379, "webbrowser.controller.open_new_tab"]], "register() (in module webbrowser)": [[379, "webbrowser.register"]], "webbrowser": [[379, "module-webbrowser"]], "close() (winreg.pyhkey method)": [[381, "winreg.PyHKEY.Close"]], "closekey() (in module winreg)": [[381, "winreg.CloseKey"]], "connectregistry() (in module winreg)": [[381, "winreg.ConnectRegistry"]], "createkey() (in module winreg)": [[381, "winreg.CreateKey"]], "createkeyex() (in module winreg)": [[381, "winreg.CreateKeyEx"]], "deletekey() (in module winreg)": [[381, "winreg.DeleteKey"]], "deletekeyex() (in module winreg)": [[381, "winreg.DeleteKeyEx"]], "deletevalue() (in module winreg)": [[381, "winreg.DeleteValue"]], "detach() (winreg.pyhkey method)": [[381, "winreg.PyHKEY.Detach"]], "disablereflectionkey() (in module winreg)": [[381, "winreg.DisableReflectionKey"]], "enablereflectionkey() (in module winreg)": [[381, "winreg.EnableReflectionKey"]], "enumkey() (in module winreg)": [[381, "winreg.EnumKey"]], "enumvalue() (in module winreg)": [[381, "winreg.EnumValue"]], "expandenvironmentstrings() (in module winreg)": [[381, "winreg.ExpandEnvironmentStrings"]], "flushkey() (in module winreg)": [[381, "winreg.FlushKey"]], "hkey_classes_root (in module winreg)": [[381, "winreg.HKEY_CLASSES_ROOT"]], "hkey_current_config (in module winreg)": [[381, "winreg.HKEY_CURRENT_CONFIG"]], "hkey_current_user (in module winreg)": [[381, "winreg.HKEY_CURRENT_USER"]], "hkey_dyn_data (in module winreg)": [[381, "winreg.HKEY_DYN_DATA"]], "hkey_local_machine (in module winreg)": [[381, "winreg.HKEY_LOCAL_MACHINE"]], "hkey_performance_data (in module winreg)": [[381, "winreg.HKEY_PERFORMANCE_DATA"]], "hkey_users (in module winreg)": [[381, "winreg.HKEY_USERS"]], "key_all_access (in module winreg)": [[381, "winreg.KEY_ALL_ACCESS"]], "key_create_link (in module winreg)": [[381, "winreg.KEY_CREATE_LINK"]], "key_create_sub_key (in module winreg)": [[381, "winreg.KEY_CREATE_SUB_KEY"]], "key_enumerate_sub_keys (in module winreg)": [[381, "winreg.KEY_ENUMERATE_SUB_KEYS"]], "key_execute (in module winreg)": [[381, "winreg.KEY_EXECUTE"]], "key_notify (in module winreg)": [[381, "winreg.KEY_NOTIFY"]], "key_query_value (in module winreg)": [[381, "winreg.KEY_QUERY_VALUE"]], "key_read (in module winreg)": [[381, "winreg.KEY_READ"]], "key_set_value (in module winreg)": [[381, "winreg.KEY_SET_VALUE"]], "key_wow64_32key (in module winreg)": [[381, "winreg.KEY_WOW64_32KEY"]], "key_wow64_64key (in module winreg)": [[381, "winreg.KEY_WOW64_64KEY"]], "key_write (in module winreg)": [[381, "winreg.KEY_WRITE"]], "loadkey() (in module winreg)": [[381, "winreg.LoadKey"]], "openkey() (in module winreg)": [[381, "winreg.OpenKey"]], "openkeyex() (in module winreg)": [[381, "winreg.OpenKeyEx"]], "queryinfokey() (in module winreg)": [[381, "winreg.QueryInfoKey"]], "queryreflectionkey() (in module winreg)": [[381, "winreg.QueryReflectionKey"]], "queryvalue() (in module winreg)": [[381, "winreg.QueryValue"]], "queryvalueex() (in module winreg)": [[381, "winreg.QueryValueEx"]], "reg_binary (in module winreg)": [[381, "winreg.REG_BINARY"]], "reg_dword (in module winreg)": [[381, "winreg.REG_DWORD"]], "reg_dword_big_endian (in module winreg)": [[381, "winreg.REG_DWORD_BIG_ENDIAN"]], "reg_dword_little_endian (in module winreg)": [[381, "winreg.REG_DWORD_LITTLE_ENDIAN"]], "reg_expand_sz (in module winreg)": [[381, "winreg.REG_EXPAND_SZ"]], "reg_full_resource_descriptor (in module winreg)": [[381, "winreg.REG_FULL_RESOURCE_DESCRIPTOR"]], "reg_link (in module winreg)": [[381, "winreg.REG_LINK"]], "reg_multi_sz (in module winreg)": [[381, "winreg.REG_MULTI_SZ"]], "reg_none (in module winreg)": [[381, "winreg.REG_NONE"]], "reg_qword (in module winreg)": [[381, "winreg.REG_QWORD"]], "reg_qword_little_endian (in module winreg)": [[381, "winreg.REG_QWORD_LITTLE_ENDIAN"]], "reg_resource_list (in module winreg)": [[381, "winreg.REG_RESOURCE_LIST"]], "reg_resource_requirements_list (in module winreg)": [[381, "winreg.REG_RESOURCE_REQUIREMENTS_LIST"]], "reg_sz (in module winreg)": [[381, "winreg.REG_SZ"]], "savekey() (in module winreg)": [[381, "winreg.SaveKey"]], "setvalue() (in module winreg)": [[381, "winreg.SetValue"]], "setvalueex() (in module winreg)": [[381, "winreg.SetValueEx"]], "__enter__() (winreg.pyhkey method)": [[381, "winreg.PyHKEY.__enter__"]], "__exit__() (winreg.pyhkey method)": [[381, "winreg.PyHKEY.__exit__"]], "winreg": [[381, "module-winreg"]], "beep() (in module winsound)": [[382, "winsound.Beep"]], "mb_iconasterisk (in module winsound)": [[382, "winsound.MB_ICONASTERISK"]], "mb_iconexclamation (in module winsound)": [[382, "winsound.MB_ICONEXCLAMATION"]], "mb_iconhand (in module winsound)": [[382, "winsound.MB_ICONHAND"]], "mb_iconquestion (in module winsound)": [[382, "winsound.MB_ICONQUESTION"]], "mb_ok (in module winsound)": [[382, "winsound.MB_OK"]], "messagebeep() (in module winsound)": [[382, "winsound.MessageBeep"]], "playsound() (in module winsound)": [[382, "winsound.PlaySound"]], "snd_alias (in module winsound)": [[382, "winsound.SND_ALIAS"]], "snd_async (in module winsound)": [[382, "winsound.SND_ASYNC"]], "snd_filename (in module winsound)": [[382, "winsound.SND_FILENAME"]], "snd_loop (in module winsound)": [[382, "winsound.SND_LOOP"]], "snd_memory (in module winsound)": [[382, "winsound.SND_MEMORY"]], "snd_nodefault (in module winsound)": [[382, "winsound.SND_NODEFAULT"]], "snd_nostop (in module winsound)": [[382, "winsound.SND_NOSTOP"]], "snd_nowait (in module winsound)": [[382, "winsound.SND_NOWAIT"]], "snd_purge (in module winsound)": [[382, "winsound.SND_PURGE"]], "winsound": [[382, "module-winsound"]], "basecgihandler (class in wsgiref.handlers)": [[383, "wsgiref.handlers.BaseCGIHandler"]], "basehandler (class in wsgiref.handlers)": [[383, "wsgiref.handlers.BaseHandler"]], "cgihandler (class in wsgiref.handlers)": [[383, "wsgiref.handlers.CGIHandler"]], "errorstream (class in wsgiref.types)": [[383, "wsgiref.types.ErrorStream"]], "filewrapper (class in wsgiref.types)": [[383, "wsgiref.types.FileWrapper"]], "filewrapper (class in wsgiref.util)": [[383, "wsgiref.util.FileWrapper"]], "headers (class in wsgiref.headers)": [[383, "wsgiref.headers.Headers"]], "iiscgihandler (class in wsgiref.handlers)": [[383, "wsgiref.handlers.IISCGIHandler"]], "inputstream (class in wsgiref.types)": [[383, "wsgiref.types.InputStream"]], "pep 3333": [[383, "index-0"], [383, "index-1"], [383, "index-11"], [383, "index-12"], [383, "index-13"], [383, "index-14"], [383, "index-15"], [383, "index-16"], [383, "index-17"], [383, "index-18"], [383, "index-2"], [383, "index-3"], [383, "index-4"], [383, "index-6"], [383, "index-7"], [383, "index-8"], [383, "index-9"], [448, "index-25"], [451, "index-9"]], "simplehandler (class in wsgiref.handlers)": [[383, "wsgiref.handlers.SimpleHandler"]], "startresponse (class in wsgiref.types)": [[383, "wsgiref.types.StartResponse"]], "wsgiapplication (in module wsgiref.types)": [[383, "wsgiref.types.WSGIApplication"]], "wsgienvironment (in module wsgiref.types)": [[383, "wsgiref.types.WSGIEnvironment"]], "wsgirequesthandler (class in wsgiref.simple_server)": [[383, "wsgiref.simple_server.WSGIRequestHandler"]], "wsgiserver (class in wsgiref.simple_server)": [[383, "wsgiref.simple_server.WSGIServer"]], "_flush() (wsgiref.handlers.basehandler method)": [[383, "wsgiref.handlers.BaseHandler._flush"]], "_write() (wsgiref.handlers.basehandler method)": [[383, "wsgiref.handlers.BaseHandler._write"]], "add_cgi_vars() (wsgiref.handlers.basehandler method)": [[383, "wsgiref.handlers.BaseHandler.add_cgi_vars"]], "add_header() (wsgiref.headers.headers method)": [[383, "wsgiref.headers.Headers.add_header"]], "application_uri() (in module wsgiref.util)": [[383, "wsgiref.util.application_uri"]], "demo_app() (in module wsgiref.simple_server)": [[383, "wsgiref.simple_server.demo_app"]], "error_body (wsgiref.handlers.basehandler attribute)": [[383, "wsgiref.handlers.BaseHandler.error_body"]], "error_headers (wsgiref.handlers.basehandler attribute)": [[383, "wsgiref.handlers.BaseHandler.error_headers"]], "error_output() (wsgiref.handlers.basehandler method)": [[383, "wsgiref.handlers.BaseHandler.error_output"]], "error_status (wsgiref.handlers.basehandler attribute)": [[383, "wsgiref.handlers.BaseHandler.error_status"]], "get_all() (wsgiref.headers.headers method)": [[383, "wsgiref.headers.Headers.get_all"]], "get_app() (wsgiref.simple_server.wsgiserver method)": [[383, "wsgiref.simple_server.WSGIServer.get_app"]], "get_environ() (wsgiref.simple_server.wsgirequesthandler method)": [[383, "wsgiref.simple_server.WSGIRequestHandler.get_environ"]], "get_scheme() (wsgiref.handlers.basehandler method)": [[383, "wsgiref.handlers.BaseHandler.get_scheme"]], "get_stderr() (wsgiref.handlers.basehandler method)": [[383, "wsgiref.handlers.BaseHandler.get_stderr"]], "get_stderr() (wsgiref.simple_server.wsgirequesthandler method)": [[383, "wsgiref.simple_server.WSGIRequestHandler.get_stderr"]], "get_stdin() (wsgiref.handlers.basehandler method)": [[383, "wsgiref.handlers.BaseHandler.get_stdin"]], "guess_scheme() (in module wsgiref.util)": [[383, "wsgiref.util.guess_scheme"]], "handle() (wsgiref.simple_server.wsgirequesthandler method)": [[383, "wsgiref.simple_server.WSGIRequestHandler.handle"]], "http_version (wsgiref.handlers.basehandler attribute)": [[383, "wsgiref.handlers.BaseHandler.http_version"]], "is_hop_by_hop() (in module wsgiref.util)": [[383, "wsgiref.util.is_hop_by_hop"]], "log_exception() (wsgiref.handlers.basehandler method)": [[383, "wsgiref.handlers.BaseHandler.log_exception"]], "make_server() (in module wsgiref.simple_server)": [[383, "wsgiref.simple_server.make_server"]], "origin_server (wsgiref.handlers.basehandler attribute)": [[383, "wsgiref.handlers.BaseHandler.origin_server"]], "os_environ (wsgiref.handlers.basehandler attribute)": [[383, "wsgiref.handlers.BaseHandler.os_environ"]], "read_environ() (in module wsgiref.handlers)": [[383, "wsgiref.handlers.read_environ"]], "request_uri() (in module wsgiref.util)": [[383, "wsgiref.util.request_uri"]], "run() (wsgiref.handlers.basehandler method)": [[383, "wsgiref.handlers.BaseHandler.run"]], "sendfile() (wsgiref.handlers.basehandler method)": [[383, "wsgiref.handlers.BaseHandler.sendfile"]], "server_software (wsgiref.handlers.basehandler attribute)": [[383, "wsgiref.handlers.BaseHandler.server_software"]], "set_app() (wsgiref.simple_server.wsgiserver method)": [[383, "wsgiref.simple_server.WSGIServer.set_app"]], "setup_environ() (wsgiref.handlers.basehandler method)": [[383, "wsgiref.handlers.BaseHandler.setup_environ"]], "setup_testing_defaults() (in module wsgiref.util)": [[383, "wsgiref.util.setup_testing_defaults"]], "shift_path_info() (in module wsgiref.util)": [[383, "wsgiref.util.shift_path_info"]], "traceback_limit (wsgiref.handlers.basehandler attribute)": [[383, "wsgiref.handlers.BaseHandler.traceback_limit"]], "validator() (in module wsgiref.validate)": [[383, "wsgiref.validate.validator"]], "wsgi_file_wrapper (wsgiref.handlers.basehandler attribute)": [[383, "wsgiref.handlers.BaseHandler.wsgi_file_wrapper"]], "wsgi_multiprocess (wsgiref.handlers.basehandler attribute)": [[383, "wsgiref.handlers.BaseHandler.wsgi_multiprocess"]], "wsgi_multithread (wsgiref.handlers.basehandler attribute)": [[383, "wsgiref.handlers.BaseHandler.wsgi_multithread"]], "wsgi_run_once (wsgiref.handlers.basehandler attribute)": [[383, "wsgiref.handlers.BaseHandler.wsgi_run_once"]], "wsgiref": [[383, "module-wsgiref"]], "wsgiref.handlers": [[383, "module-wsgiref.handlers"]], "wsgiref.headers": [[383, "module-wsgiref.headers"]], "wsgiref.simple_server": [[383, "module-wsgiref.simple_server"]], "wsgiref.types": [[383, "module-wsgiref.types"]], "wsgiref.util": [[383, "module-wsgiref.util"]], "wsgiref.validate": [[383, "module-wsgiref.validate"]], "xml": [[384, "module-xml"]], "domexception": [[385, "xml.dom.DOMException"]], "domstringsizeerr": [[385, "xml.dom.DomstringSizeErr"]], "empty_namespace (in module xml.dom)": [[385, "xml.dom.EMPTY_NAMESPACE"]], "hierarchyrequesterr": [[385, "xml.dom.HierarchyRequestErr"]], "indexsizeerr": [[385, "xml.dom.IndexSizeErr"]], "inuseattributeerr": [[385, "xml.dom.InuseAttributeErr"]], "invalidaccesserr": [[385, "xml.dom.InvalidAccessErr"]], "invalidcharactererr": [[385, "xml.dom.InvalidCharacterErr"]], "invalidmodificationerr": [[385, "xml.dom.InvalidModificationErr"]], "invalidstateerr": [[385, "xml.dom.InvalidStateErr"]], "namespaceerr": [[385, "xml.dom.NamespaceErr"]], "nodataallowederr": [[385, "xml.dom.NoDataAllowedErr"]], "nomodificationallowederr": [[385, "xml.dom.NoModificationAllowedErr"]], "notfounderr": [[385, "xml.dom.NotFoundErr"]], "notsupportederr": [[385, "xml.dom.NotSupportedErr"]], "python_dom": [[385, "index-0"]], "syntaxerr": [[385, "xml.dom.SyntaxErr"]], "wrongdocumenterr": [[385, "xml.dom.WrongDocumentErr"]], "xhtml_namespace (in module xml.dom)": [[385, "xml.dom.XHTML_NAMESPACE"]], "xmlns_namespace (in module xml.dom)": [[385, "xml.dom.XMLNS_NAMESPACE"]], "xml_namespace (in module xml.dom)": [[385, "xml.dom.XML_NAMESPACE"]], "appendchild() (xml.dom.node method)": [[385, "xml.dom.Node.appendChild"]], "attributes (xml.dom.node attribute)": [[385, "xml.dom.Node.attributes"]], "childnodes (xml.dom.node attribute)": [[385, "xml.dom.Node.childNodes"]], "clonenode() (xml.dom.node method)": [[385, "xml.dom.Node.cloneNode"]], "createattribute() (xml.dom.document method)": [[385, "xml.dom.Document.createAttribute"]], "createattributens() (xml.dom.document method)": [[385, "xml.dom.Document.createAttributeNS"]], "createcomment() (xml.dom.document method)": [[385, "xml.dom.Document.createComment"]], "createdocument() (xml.dom.domimplementation method)": [[385, "xml.dom.DOMImplementation.createDocument"]], "createdocumenttype() (xml.dom.domimplementation method)": [[385, "xml.dom.DOMImplementation.createDocumentType"]], "createelement() (xml.dom.document method)": [[385, "xml.dom.Document.createElement"]], "createelementns() (xml.dom.document method)": [[385, "xml.dom.Document.createElementNS"]], "createprocessinginstruction() (xml.dom.document method)": [[385, "xml.dom.Document.createProcessingInstruction"]], "createtextnode() (xml.dom.document method)": [[385, "xml.dom.Document.createTextNode"]], "data (xml.dom.comment attribute)": [[385, "xml.dom.Comment.data"]], "data (xml.dom.processinginstruction attribute)": [[385, "xml.dom.ProcessingInstruction.data"]], "data (xml.dom.text attribute)": [[385, "xml.dom.Text.data"]], "documentelement (xml.dom.document attribute)": [[385, "xml.dom.Document.documentElement"]], "entities (xml.dom.documenttype attribute)": [[385, "xml.dom.DocumentType.entities"]], "firstchild (xml.dom.node attribute)": [[385, "xml.dom.Node.firstChild"]], "getattribute() (xml.dom.element method)": [[385, "xml.dom.Element.getAttribute"]], "getattributens() (xml.dom.element method)": [[385, "xml.dom.Element.getAttributeNS"]], "getattributenode() (xml.dom.element method)": [[385, "xml.dom.Element.getAttributeNode"]], "getattributenodens() (xml.dom.element method)": [[385, "xml.dom.Element.getAttributeNodeNS"]], "getdomimplementation() (in module xml.dom)": [[385, "xml.dom.getDOMImplementation"]], "getelementsbytagname() (xml.dom.document method)": [[385, "xml.dom.Document.getElementsByTagName"]], "getelementsbytagname() (xml.dom.element method)": [[385, "xml.dom.Element.getElementsByTagName"]], "getelementsbytagnamens() (xml.dom.document method)": [[385, "xml.dom.Document.getElementsByTagNameNS"]], "getelementsbytagnamens() (xml.dom.element method)": [[385, "xml.dom.Element.getElementsByTagNameNS"]], "hasattribute() (xml.dom.element method)": [[385, "xml.dom.Element.hasAttribute"]], "hasattributens() (xml.dom.element method)": [[385, "xml.dom.Element.hasAttributeNS"]], "hasattributes() (xml.dom.node method)": [[385, "xml.dom.Node.hasAttributes"]], "haschildnodes() (xml.dom.node method)": [[385, "xml.dom.Node.hasChildNodes"]], "hasfeature() (xml.dom.domimplementation method)": [[385, "xml.dom.DOMImplementation.hasFeature"]], "insertbefore() (xml.dom.node method)": [[385, "xml.dom.Node.insertBefore"]], "internalsubset (xml.dom.documenttype attribute)": [[385, "xml.dom.DocumentType.internalSubset"]], "issamenode() (xml.dom.node method)": [[385, "xml.dom.Node.isSameNode"]], "item() (xml.dom.namednodemap method)": [[385, "xml.dom.NamedNodeMap.item"]], "item() (xml.dom.nodelist method)": [[385, "xml.dom.NodeList.item"]], "lastchild (xml.dom.node attribute)": [[385, "xml.dom.Node.lastChild"]], "length (xml.dom.namednodemap attribute)": [[385, "xml.dom.NamedNodeMap.length"]], "length (xml.dom.nodelist attribute)": [[385, "xml.dom.NodeList.length"]], "localname (xml.dom.attr attribute)": [[385, "xml.dom.Attr.localName"]], "localname (xml.dom.node attribute)": [[385, "xml.dom.Node.localName"]], "name (xml.dom.attr attribute)": [[385, "xml.dom.Attr.name"]], "name (xml.dom.documenttype attribute)": [[385, "xml.dom.DocumentType.name"]], "namespaceuri (xml.dom.node attribute)": [[385, "xml.dom.Node.namespaceURI"]], "nextsibling (xml.dom.node attribute)": [[385, "xml.dom.Node.nextSibling"]], "nodename (xml.dom.node attribute)": [[385, "xml.dom.Node.nodeName"]], "nodetype (xml.dom.node attribute)": [[385, "xml.dom.Node.nodeType"]], "nodevalue (xml.dom.node attribute)": [[385, "xml.dom.Node.nodeValue"]], "normalize() (xml.dom.node method)": [[385, "xml.dom.Node.normalize"]], "notations (xml.dom.documenttype attribute)": [[385, "xml.dom.DocumentType.notations"]], "parentnode (xml.dom.node attribute)": [[385, "xml.dom.Node.parentNode"]], "prefix (xml.dom.attr attribute)": [[385, "xml.dom.Attr.prefix"]], "prefix (xml.dom.node attribute)": [[385, "xml.dom.Node.prefix"]], "previoussibling (xml.dom.node attribute)": [[385, "xml.dom.Node.previousSibling"]], "publicid (xml.dom.documenttype attribute)": [[385, "xml.dom.DocumentType.publicId"]], "registerdomimplementation() (in module xml.dom)": [[385, "xml.dom.registerDOMImplementation"]], "removeattribute() (xml.dom.element method)": [[385, "xml.dom.Element.removeAttribute"]], "removeattributens() (xml.dom.element method)": [[385, "xml.dom.Element.removeAttributeNS"]], "removeattributenode() (xml.dom.element method)": [[385, "xml.dom.Element.removeAttributeNode"]], "removechild() (xml.dom.node method)": [[385, "xml.dom.Node.removeChild"]], "replacechild() (xml.dom.node method)": [[385, "xml.dom.Node.replaceChild"]], "setattribute() (xml.dom.element method)": [[385, "xml.dom.Element.setAttribute"]], "setattributens() (xml.dom.element method)": [[385, "xml.dom.Element.setAttributeNS"]], "setattributenode() (xml.dom.element method)": [[385, "xml.dom.Element.setAttributeNode"]], "setattributenodens() (xml.dom.element method)": [[385, "xml.dom.Element.setAttributeNodeNS"]], "systemid (xml.dom.documenttype attribute)": [[385, "xml.dom.DocumentType.systemId"]], "tagname (xml.dom.element attribute)": [[385, "xml.dom.Element.tagName"]], "target (xml.dom.processinginstruction attribute)": [[385, "xml.dom.ProcessingInstruction.target"]], "value (xml.dom.attr attribute)": [[385, "xml.dom.Attr.value"]], "xml.dom": [[385, "module-xml.dom"]], "parse() (in module xml.dom.minidom)": [[386, "xml.dom.minidom.parse"]], "parsestring() (in module xml.dom.minidom)": [[386, "xml.dom.minidom.parseString"]], "toprettyxml() (xml.dom.minidom.node method)": [[386, "xml.dom.minidom.Node.toprettyxml"]], "toxml() (xml.dom.minidom.node method)": [[386, "xml.dom.minidom.Node.toxml"]], "unlink() (xml.dom.minidom.node method)": [[386, "xml.dom.minidom.Node.unlink"]], "writexml() (xml.dom.minidom.node method)": [[386, "xml.dom.minidom.Node.writexml"]], "xml.dom.minidom": [[386, "module-xml.dom.minidom"]], "domeventstream (class in xml.dom.pulldom)": [[387, "xml.dom.pulldom.DOMEventStream"]], "pulldom (class in xml.dom.pulldom)": [[387, "xml.dom.pulldom.PullDom"]], "sax2dom (class in xml.dom.pulldom)": [[387, "xml.dom.pulldom.SAX2DOM"]], "default_bufsize (in module xml.dom.pulldom)": [[387, "xml.dom.pulldom.default_bufsize"]], "expandnode() (xml.dom.pulldom.domeventstream method)": [[387, "xml.dom.pulldom.DOMEventStream.expandNode"]], "getevent() (xml.dom.pulldom.domeventstream method)": [[387, "xml.dom.pulldom.DOMEventStream.getEvent"]], "parse() (in module xml.dom.pulldom)": [[387, "xml.dom.pulldom.parse"]], "parsestring() (in module xml.dom.pulldom)": [[387, "xml.dom.pulldom.parseString"]], "reset() (xml.dom.pulldom.domeventstream method)": [[387, "xml.dom.pulldom.DOMEventStream.reset"]], "xml.dom.pulldom": [[387, "module-xml.dom.pulldom"]], "c14nwritertarget (class in xml.etree.elementtree)": [[388, "xml.etree.ElementTree.C14NWriterTarget"]], "comment() (in module xml.etree.elementtree)": [[388, "xml.etree.ElementTree.Comment"]], "element (class in xml.etree.elementtree)": [[388, "xml.etree.ElementTree.Element"]], "elementtree (class in xml.etree.elementtree)": [[388, "xml.etree.ElementTree.ElementTree"]], "parseerror (class in xml.etree.elementtree)": [[388, "xml.etree.ElementTree.ParseError"]], "processinginstruction() (in module xml.etree.elementtree)": [[388, "xml.etree.ElementTree.ProcessingInstruction"]], "qname (class in xml.etree.elementtree)": [[388, "xml.etree.ElementTree.QName"]], "subelement() (in module xml.etree.elementtree)": [[388, "xml.etree.ElementTree.SubElement"]], "treebuilder (class in xml.etree.elementtree)": [[388, "xml.etree.ElementTree.TreeBuilder"]], "xml() (in module xml.etree.elementtree)": [[388, "xml.etree.ElementTree.XML"]], "xmlid() (in module xml.etree.elementtree)": [[388, "xml.etree.ElementTree.XMLID"]], "xmlparser (class in xml.etree.elementtree)": [[388, "xml.etree.ElementTree.XMLParser"]], "xmlpullparser (class in xml.etree.elementtree)": [[388, "xml.etree.ElementTree.XMLPullParser"]], "_setroot() (xml.etree.elementtree.elementtree method)": [[388, "xml.etree.ElementTree.ElementTree._setroot"]], "append() (xml.etree.elementtree.element method)": [[388, "xml.etree.ElementTree.Element.append"]], "attrib (xml.etree.elementtree.element attribute)": [[388, "xml.etree.ElementTree.Element.attrib"]], "canonicalize() (in module xml.etree.elementtree)": [[388, "xml.etree.ElementTree.canonicalize"]], "clear() (xml.etree.elementtree.element method)": [[388, "xml.etree.ElementTree.Element.clear"]], "close() (xml.etree.elementtree.treebuilder method)": [[388, "xml.etree.ElementTree.TreeBuilder.close"]], "close() (xml.etree.elementtree.xmlparser method)": [[388, "xml.etree.ElementTree.XMLParser.close"]], "close() (xml.etree.elementtree.xmlpullparser method)": [[388, "xml.etree.ElementTree.XMLPullParser.close"]], "code (xml.etree.elementtree.parseerror attribute)": [[388, "xml.etree.ElementTree.ParseError.code"]], "comment() (xml.etree.elementtree.treebuilder method)": [[388, "xml.etree.ElementTree.TreeBuilder.comment"]], "data() (xml.etree.elementtree.treebuilder method)": [[388, "xml.etree.ElementTree.TreeBuilder.data"]], "doctype() (xml.etree.elementtree.treebuilder method)": [[388, "xml.etree.ElementTree.TreeBuilder.doctype"]], "dump() (in module xml.etree.elementtree)": [[388, "xml.etree.ElementTree.dump"]], "end() (xml.etree.elementtree.treebuilder method)": [[388, "xml.etree.ElementTree.TreeBuilder.end"]], "end_ns() (xml.etree.elementtree.treebuilder method)": [[388, "xml.etree.ElementTree.TreeBuilder.end_ns"]], "extend() (xml.etree.elementtree.element method)": [[388, "xml.etree.ElementTree.Element.extend"]], "feed() (xml.etree.elementtree.xmlparser method)": [[388, "xml.etree.ElementTree.XMLParser.feed"]], "feed() (xml.etree.elementtree.xmlpullparser method)": [[388, "xml.etree.ElementTree.XMLPullParser.feed"]], "find() (xml.etree.elementtree.element method)": [[388, "xml.etree.ElementTree.Element.find"]], "find() (xml.etree.elementtree.elementtree method)": [[388, "xml.etree.ElementTree.ElementTree.find"]], "findall() (xml.etree.elementtree.element method)": [[388, "xml.etree.ElementTree.Element.findall"]], "findall() (xml.etree.elementtree.elementtree method)": [[388, "xml.etree.ElementTree.ElementTree.findall"]], "findtext() (xml.etree.elementtree.element method)": [[388, "xml.etree.ElementTree.Element.findtext"]], "findtext() (xml.etree.elementtree.elementtree method)": [[388, "xml.etree.ElementTree.ElementTree.findtext"]], "fromstring() (in module xml.etree.elementtree)": [[388, "xml.etree.ElementTree.fromstring"]], "fromstringlist() (in module xml.etree.elementtree)": [[388, "xml.etree.ElementTree.fromstringlist"]], "get() (xml.etree.elementtree.element method)": [[388, "xml.etree.ElementTree.Element.get"]], "getroot() (xml.etree.elementtree.elementtree method)": [[388, "xml.etree.ElementTree.ElementTree.getroot"]], "indent() (in module xml.etree.elementtree)": [[388, "xml.etree.ElementTree.indent"]], "insert() (xml.etree.elementtree.element method)": [[388, "xml.etree.ElementTree.Element.insert"]], "iselement() (in module xml.etree.elementtree)": [[388, "xml.etree.ElementTree.iselement"]], "items() (xml.etree.elementtree.element method)": [[388, "xml.etree.ElementTree.Element.items"]], "iter() (xml.etree.elementtree.element method)": [[388, "xml.etree.ElementTree.Element.iter"]], "iter() (xml.etree.elementtree.elementtree method)": [[388, "xml.etree.ElementTree.ElementTree.iter"]], "iterfind() (xml.etree.elementtree.element method)": [[388, "xml.etree.ElementTree.Element.iterfind"]], "iterfind() (xml.etree.elementtree.elementtree method)": [[388, "xml.etree.ElementTree.ElementTree.iterfind"]], "iterparse() (in module xml.etree.elementtree)": [[388, "xml.etree.ElementTree.iterparse"]], "itertext() (xml.etree.elementtree.element method)": [[388, "xml.etree.ElementTree.Element.itertext"]], "keys() (xml.etree.elementtree.element method)": [[388, "xml.etree.ElementTree.Element.keys"]], "makeelement() (xml.etree.elementtree.element method)": [[388, "xml.etree.ElementTree.Element.makeelement"]], "parse() (in module xml.etree.elementtree)": [[388, "xml.etree.ElementTree.parse"]], "parse() (xml.etree.elementtree.elementtree method)": [[388, "xml.etree.ElementTree.ElementTree.parse"]], "pi() (xml.etree.elementtree.treebuilder method)": [[388, "xml.etree.ElementTree.TreeBuilder.pi"]], "position (xml.etree.elementtree.parseerror attribute)": [[388, "xml.etree.ElementTree.ParseError.position"]], "read_events() (xml.etree.elementtree.xmlpullparser method)": [[388, "xml.etree.ElementTree.XMLPullParser.read_events"]], "register_namespace() (in module xml.etree.elementtree)": [[388, "xml.etree.ElementTree.register_namespace"]], "remove() (xml.etree.elementtree.element method)": [[388, "xml.etree.ElementTree.Element.remove"]], "set() (xml.etree.elementtree.element method)": [[388, "xml.etree.ElementTree.Element.set"]], "start() (xml.etree.elementtree.treebuilder method)": [[388, "xml.etree.ElementTree.TreeBuilder.start"]], "start_ns() (xml.etree.elementtree.treebuilder method)": [[388, "xml.etree.ElementTree.TreeBuilder.start_ns"]], "tag (xml.etree.elementtree.element attribute)": [[388, "xml.etree.ElementTree.Element.tag"]], "tail (xml.etree.elementtree.element attribute)": [[388, "xml.etree.ElementTree.Element.tail"]], "text (xml.etree.elementtree.element attribute)": [[388, "xml.etree.ElementTree.Element.text"]], "tostring() (in module xml.etree.elementtree)": [[388, "xml.etree.ElementTree.tostring"]], "tostringlist() (in module xml.etree.elementtree)": [[388, "xml.etree.ElementTree.tostringlist"]], "write() (xml.etree.elementtree.elementtree method)": [[388, "xml.etree.ElementTree.ElementTree.write"]], "xml.etree.elementinclude": [[388, "module-xml.etree.ElementInclude"]], "xml.etree.elementinclude.default_loader()": [[388, "xml.etree.ElementInclude.default_loader"]], "xml.etree.elementinclude.include()": [[388, "xml.etree.ElementInclude.include"]], "xml.etree.elementtree": [[388, "module-xml.etree.ElementTree"]], "saxexception": [[389, "xml.sax.SAXException"]], "saxnotrecognizedexception": [[389, "xml.sax.SAXNotRecognizedException"]], "saxnotsupportedexception": [[389, "xml.sax.SAXNotSupportedException"]], "saxparseexception": [[389, "xml.sax.SAXParseException"]], "getexception() (xml.sax.saxexception method)": [[389, "xml.sax.SAXException.getException"]], "getmessage() (xml.sax.saxexception method)": [[389, "xml.sax.SAXException.getMessage"]], "make_parser() (in module xml.sax)": [[389, "xml.sax.make_parser"]], "parse() (in module xml.sax)": [[389, "xml.sax.parse"]], "parsestring() (in module xml.sax)": [[389, "xml.sax.parseString"]], "xml.sax": [[389, "module-xml.sax"]], "contenthandler (class in xml.sax.handler)": [[390, "xml.sax.handler.ContentHandler"]], "dtdhandler (class in xml.sax.handler)": [[390, "xml.sax.handler.DTDHandler"]], "entityresolver (class in xml.sax.handler)": [[390, "xml.sax.handler.EntityResolver"]], "errorhandler (class in xml.sax.handler)": [[390, "xml.sax.handler.ErrorHandler"]], "lexicalhandler (class in xml.sax.handler)": [[390, "xml.sax.handler.LexicalHandler"]], "all_features (in module xml.sax.handler)": [[390, "xml.sax.handler.all_features"]], "all_properties (in module xml.sax.handler)": [[390, "xml.sax.handler.all_properties"]], "characters() (xml.sax.handler.contenthandler method)": [[390, "xml.sax.handler.ContentHandler.characters"]], "comment() (xml.sax.handler.lexicalhandler method)": [[390, "xml.sax.handler.LexicalHandler.comment"]], "endcdata() (xml.sax.handler.lexicalhandler method)": [[390, "xml.sax.handler.LexicalHandler.endCDATA"]], "enddtd() (xml.sax.handler.lexicalhandler method)": [[390, "xml.sax.handler.LexicalHandler.endDTD"]], "enddocument() (xml.sax.handler.contenthandler method)": [[390, "xml.sax.handler.ContentHandler.endDocument"]], "endelement() (xml.sax.handler.contenthandler method)": [[390, "xml.sax.handler.ContentHandler.endElement"]], "endelementns() (xml.sax.handler.contenthandler method)": [[390, "xml.sax.handler.ContentHandler.endElementNS"]], "endprefixmapping() (xml.sax.handler.contenthandler method)": [[390, "xml.sax.handler.ContentHandler.endPrefixMapping"]], "error() (xml.sax.handler.errorhandler method)": [[390, "xml.sax.handler.ErrorHandler.error"]], "fatalerror() (xml.sax.handler.errorhandler method)": [[390, "xml.sax.handler.ErrorHandler.fatalError"]], "feature_external_ges (in module xml.sax.handler)": [[390, "xml.sax.handler.feature_external_ges"]], "feature_external_pes (in module xml.sax.handler)": [[390, "xml.sax.handler.feature_external_pes"]], "feature_namespace_prefixes (in module xml.sax.handler)": [[390, "xml.sax.handler.feature_namespace_prefixes"]], "feature_namespaces (in module xml.sax.handler)": [[390, "xml.sax.handler.feature_namespaces"]], "feature_string_interning (in module xml.sax.handler)": [[390, "xml.sax.handler.feature_string_interning"]], "feature_validation (in module xml.sax.handler)": [[390, "xml.sax.handler.feature_validation"]], "ignorablewhitespace() (xml.sax.handler.contenthandler method)": [[390, "xml.sax.handler.ContentHandler.ignorableWhitespace"]], "notationdecl() (xml.sax.handler.dtdhandler method)": [[390, "xml.sax.handler.DTDHandler.notationDecl"]], "processinginstruction() (xml.sax.handler.contenthandler method)": [[390, "xml.sax.handler.ContentHandler.processingInstruction"]], "property_declaration_handler (in module xml.sax.handler)": [[390, "xml.sax.handler.property_declaration_handler"]], "property_dom_node (in module xml.sax.handler)": [[390, "xml.sax.handler.property_dom_node"]], "property_lexical_handler (in module xml.sax.handler)": [[390, "xml.sax.handler.property_lexical_handler"]], "property_xml_string (in module xml.sax.handler)": [[390, "xml.sax.handler.property_xml_string"]], "resolveentity() (xml.sax.handler.entityresolver method)": [[390, "xml.sax.handler.EntityResolver.resolveEntity"]], "setdocumentlocator() (xml.sax.handler.contenthandler method)": [[390, "xml.sax.handler.ContentHandler.setDocumentLocator"]], "skippedentity() (xml.sax.handler.contenthandler method)": [[390, "xml.sax.handler.ContentHandler.skippedEntity"]], "startcdata() (xml.sax.handler.lexicalhandler method)": [[390, "xml.sax.handler.LexicalHandler.startCDATA"]], "startdtd() (xml.sax.handler.lexicalhandler method)": [[390, "xml.sax.handler.LexicalHandler.startDTD"]], "startdocument() (xml.sax.handler.contenthandler method)": [[390, "xml.sax.handler.ContentHandler.startDocument"]], "startelement() (xml.sax.handler.contenthandler method)": [[390, "xml.sax.handler.ContentHandler.startElement"]], "startelementns() (xml.sax.handler.contenthandler method)": [[390, "xml.sax.handler.ContentHandler.startElementNS"]], "startprefixmapping() (xml.sax.handler.contenthandler method)": [[390, "xml.sax.handler.ContentHandler.startPrefixMapping"]], "unparsedentitydecl() (xml.sax.handler.dtdhandler method)": [[390, "xml.sax.handler.DTDHandler.unparsedEntityDecl"]], "warning() (xml.sax.handler.errorhandler method)": [[390, "xml.sax.handler.ErrorHandler.warning"]], "xml.sax.handler": [[390, "module-xml.sax.handler"]], "attributesimpl (class in xml.sax.xmlreader)": [[391, "xml.sax.xmlreader.AttributesImpl"]], "attributesnsimpl (class in xml.sax.xmlreader)": [[391, "xml.sax.xmlreader.AttributesNSImpl"]], "incrementalparser (class in xml.sax.xmlreader)": [[391, "xml.sax.xmlreader.IncrementalParser"]], "inputsource (class in xml.sax.xmlreader)": [[391, "xml.sax.xmlreader.InputSource"]], "locator (class in xml.sax.xmlreader)": [[391, "xml.sax.xmlreader.Locator"]], "xmlreader (class in xml.sax.xmlreader)": [[391, "xml.sax.xmlreader.XMLReader"]], "close() (xml.sax.xmlreader.incrementalparser method)": [[391, "xml.sax.xmlreader.IncrementalParser.close"]], "feed() (xml.sax.xmlreader.incrementalparser method)": [[391, "xml.sax.xmlreader.IncrementalParser.feed"]], "getbytestream() (xml.sax.xmlreader.inputsource method)": [[391, "xml.sax.xmlreader.InputSource.getByteStream"]], "getcharacterstream() (xml.sax.xmlreader.inputsource method)": [[391, "xml.sax.xmlreader.InputSource.getCharacterStream"]], "getcolumnnumber() (xml.sax.xmlreader.locator method)": [[391, "xml.sax.xmlreader.Locator.getColumnNumber"]], "getcontenthandler() (xml.sax.xmlreader.xmlreader method)": [[391, "xml.sax.xmlreader.XMLReader.getContentHandler"]], "getdtdhandler() (xml.sax.xmlreader.xmlreader method)": [[391, "xml.sax.xmlreader.XMLReader.getDTDHandler"]], "getencoding() (xml.sax.xmlreader.inputsource method)": [[391, "xml.sax.xmlreader.InputSource.getEncoding"]], "getentityresolver() (xml.sax.xmlreader.xmlreader method)": [[391, "xml.sax.xmlreader.XMLReader.getEntityResolver"]], "geterrorhandler() (xml.sax.xmlreader.xmlreader method)": [[391, "xml.sax.xmlreader.XMLReader.getErrorHandler"]], "getfeature() (xml.sax.xmlreader.xmlreader method)": [[391, "xml.sax.xmlreader.XMLReader.getFeature"]], "getlength() (xml.sax.xmlreader.attributes method)": [[391, "xml.sax.xmlreader.Attributes.getLength"]], "getlinenumber() (xml.sax.xmlreader.locator method)": [[391, "xml.sax.xmlreader.Locator.getLineNumber"]], "getnamebyqname() (xml.sax.xmlreader.attributesns method)": [[391, "xml.sax.xmlreader.AttributesNS.getNameByQName"]], "getnames() (xml.sax.xmlreader.attributes method)": [[391, "xml.sax.xmlreader.Attributes.getNames"]], "getproperty() (xml.sax.xmlreader.xmlreader method)": [[391, "xml.sax.xmlreader.XMLReader.getProperty"]], "getpublicid() (xml.sax.xmlreader.inputsource method)": [[391, "xml.sax.xmlreader.InputSource.getPublicId"]], "getpublicid() (xml.sax.xmlreader.locator method)": [[391, "xml.sax.xmlreader.Locator.getPublicId"]], "getqnamebyname() (xml.sax.xmlreader.attributesns method)": [[391, "xml.sax.xmlreader.AttributesNS.getQNameByName"]], "getqnames() (xml.sax.xmlreader.attributesns method)": [[391, "xml.sax.xmlreader.AttributesNS.getQNames"]], "getsystemid() (xml.sax.xmlreader.inputsource method)": [[391, "xml.sax.xmlreader.InputSource.getSystemId"]], "getsystemid() (xml.sax.xmlreader.locator method)": [[391, "xml.sax.xmlreader.Locator.getSystemId"]], "gettype() (xml.sax.xmlreader.attributes method)": [[391, "xml.sax.xmlreader.Attributes.getType"]], "getvalue() (xml.sax.xmlreader.attributes method)": [[391, "xml.sax.xmlreader.Attributes.getValue"]], "getvaluebyqname() (xml.sax.xmlreader.attributesns method)": [[391, "xml.sax.xmlreader.AttributesNS.getValueByQName"]], "parse() (xml.sax.xmlreader.xmlreader method)": [[391, "xml.sax.xmlreader.XMLReader.parse"]], "reset() (xml.sax.xmlreader.incrementalparser method)": [[391, "xml.sax.xmlreader.IncrementalParser.reset"]], "setbytestream() (xml.sax.xmlreader.inputsource method)": [[391, "xml.sax.xmlreader.InputSource.setByteStream"]], "setcharacterstream() (xml.sax.xmlreader.inputsource method)": [[391, "xml.sax.xmlreader.InputSource.setCharacterStream"]], "setcontenthandler() (xml.sax.xmlreader.xmlreader method)": [[391, "xml.sax.xmlreader.XMLReader.setContentHandler"]], "setdtdhandler() (xml.sax.xmlreader.xmlreader method)": [[391, "xml.sax.xmlreader.XMLReader.setDTDHandler"]], "setencoding() (xml.sax.xmlreader.inputsource method)": [[391, "xml.sax.xmlreader.InputSource.setEncoding"]], "setentityresolver() (xml.sax.xmlreader.xmlreader method)": [[391, "xml.sax.xmlreader.XMLReader.setEntityResolver"]], "seterrorhandler() (xml.sax.xmlreader.xmlreader method)": [[391, "xml.sax.xmlreader.XMLReader.setErrorHandler"]], "setfeature() (xml.sax.xmlreader.xmlreader method)": [[391, "xml.sax.xmlreader.XMLReader.setFeature"]], "setlocale() (xml.sax.xmlreader.xmlreader method)": [[391, "xml.sax.xmlreader.XMLReader.setLocale"]], "setproperty() (xml.sax.xmlreader.xmlreader method)": [[391, "xml.sax.xmlreader.XMLReader.setProperty"]], "setpublicid() (xml.sax.xmlreader.inputsource method)": [[391, "xml.sax.xmlreader.InputSource.setPublicId"]], "setsystemid() (xml.sax.xmlreader.inputsource method)": [[391, "xml.sax.xmlreader.InputSource.setSystemId"]], "xml.sax.xmlreader": [[391, "module-xml.sax.xmlreader"]], "xmlfilterbase (class in xml.sax.saxutils)": [[392, "xml.sax.saxutils.XMLFilterBase"]], "xmlgenerator (class in xml.sax.saxutils)": [[392, "xml.sax.saxutils.XMLGenerator"]], "escape() (in module xml.sax.saxutils)": [[392, "xml.sax.saxutils.escape"]], "prepare_input_source() (in module xml.sax.saxutils)": [[392, "xml.sax.saxutils.prepare_input_source"]], "quoteattr() (in module xml.sax.saxutils)": [[392, "xml.sax.saxutils.quoteattr"]], "unescape() (in module xml.sax.saxutils)": [[392, "xml.sax.saxutils.unescape"]], "xml.sax.saxutils": [[392, "module-xml.sax.saxutils"]], "binary (class in xmlrpc.client)": [[394, "xmlrpc.client.Binary"]], "datetime (class in xmlrpc.client)": [[394, "xmlrpc.client.DateTime"]], "fault (class in xmlrpc.client)": [[394, "xmlrpc.client.Fault"]], "multicall (class in xmlrpc.client)": [[394, "xmlrpc.client.MultiCall"]], "protocolerror (class in xmlrpc.client)": [[394, "xmlrpc.client.ProtocolError"]], "rfc 2045#section-6.8": [[394, "index-0"]], "serverproxy (class in xmlrpc.client)": [[394, "xmlrpc.client.ServerProxy"]], "data (xmlrpc.client.binary attribute)": [[394, "xmlrpc.client.Binary.data"]], "decode() (xmlrpc.client.binary method)": [[394, "xmlrpc.client.Binary.decode"]], "decode() (xmlrpc.client.datetime method)": [[394, "xmlrpc.client.DateTime.decode"]], "dumps() (in module xmlrpc.client)": [[394, "xmlrpc.client.dumps"]], "encode() (xmlrpc.client.binary method)": [[394, "xmlrpc.client.Binary.encode"]], "encode() (xmlrpc.client.datetime method)": [[394, "xmlrpc.client.DateTime.encode"]], "errcode (xmlrpc.client.protocolerror attribute)": [[394, "xmlrpc.client.ProtocolError.errcode"]], "errmsg (xmlrpc.client.protocolerror attribute)": [[394, "xmlrpc.client.ProtocolError.errmsg"]], "faultcode (xmlrpc.client.fault attribute)": [[394, "xmlrpc.client.Fault.faultCode"]], "faultstring (xmlrpc.client.fault attribute)": [[394, "xmlrpc.client.Fault.faultString"]], "headers (xmlrpc.client.protocolerror attribute)": [[394, "xmlrpc.client.ProtocolError.headers"]], "listmethods() (xmlrpc.client.serverproxy.system method)": [[394, "xmlrpc.client.ServerProxy.system.listMethods"]], "loads() (in module xmlrpc.client)": [[394, "xmlrpc.client.loads"]], "methodhelp() (xmlrpc.client.serverproxy.system method)": [[394, "xmlrpc.client.ServerProxy.system.methodHelp"]], "methodsignature() (xmlrpc.client.serverproxy.system method)": [[394, "xmlrpc.client.ServerProxy.system.methodSignature"]], "url (xmlrpc.client.protocolerror attribute)": [[394, "xmlrpc.client.ProtocolError.url"]], "xmlrpc.client": [[394, "module-xmlrpc.client"]], "cgixmlrpcrequesthandler (class in xmlrpc.server)": [[395, "xmlrpc.server.CGIXMLRPCRequestHandler"]], "doccgixmlrpcrequesthandler (class in xmlrpc.server)": [[395, "xmlrpc.server.DocCGIXMLRPCRequestHandler"]], "docxmlrpcrequesthandler (class in xmlrpc.server)": [[395, "xmlrpc.server.DocXMLRPCRequestHandler"]], "docxmlrpcserver (class in xmlrpc.server)": [[395, "xmlrpc.server.DocXMLRPCServer"]], "simplexmlrpcrequesthandler (class in xmlrpc.server)": [[395, "xmlrpc.server.SimpleXMLRPCRequestHandler"]], "simplexmlrpcserver (class in xmlrpc.server)": [[395, "xmlrpc.server.SimpleXMLRPCServer"]], "handle_request() (xmlrpc.server.cgixmlrpcrequesthandler method)": [[395, "xmlrpc.server.CGIXMLRPCRequestHandler.handle_request"]], "register_function() (xmlrpc.server.cgixmlrpcrequesthandler method)": [[395, "xmlrpc.server.CGIXMLRPCRequestHandler.register_function"]], "register_function() (xmlrpc.server.simplexmlrpcserver method)": [[395, "xmlrpc.server.SimpleXMLRPCServer.register_function"]], "register_instance() (xmlrpc.server.cgixmlrpcrequesthandler method)": [[395, "xmlrpc.server.CGIXMLRPCRequestHandler.register_instance"]], "register_instance() (xmlrpc.server.simplexmlrpcserver method)": [[395, "xmlrpc.server.SimpleXMLRPCServer.register_instance"]], "register_introspection_functions() (xmlrpc.server.cgixmlrpcrequesthandler method)": [[395, "xmlrpc.server.CGIXMLRPCRequestHandler.register_introspection_functions"]], "register_introspection_functions() (xmlrpc.server.simplexmlrpcserver method)": [[395, "xmlrpc.server.SimpleXMLRPCServer.register_introspection_functions"]], "register_multicall_functions() (xmlrpc.server.cgixmlrpcrequesthandler method)": [[395, "xmlrpc.server.CGIXMLRPCRequestHandler.register_multicall_functions"]], "register_multicall_functions() (xmlrpc.server.simplexmlrpcserver method)": [[395, "xmlrpc.server.SimpleXMLRPCServer.register_multicall_functions"]], "rpc_paths (xmlrpc.server.simplexmlrpcrequesthandler attribute)": [[395, "xmlrpc.server.SimpleXMLRPCRequestHandler.rpc_paths"]], "set_server_documentation() (xmlrpc.server.doccgixmlrpcrequesthandler method)": [[395, "xmlrpc.server.DocCGIXMLRPCRequestHandler.set_server_documentation"]], "set_server_documentation() (xmlrpc.server.docxmlrpcserver method)": [[395, "xmlrpc.server.DocXMLRPCServer.set_server_documentation"]], "set_server_name() (xmlrpc.server.doccgixmlrpcrequesthandler method)": [[395, "xmlrpc.server.DocCGIXMLRPCRequestHandler.set_server_name"]], "set_server_name() (xmlrpc.server.docxmlrpcserver method)": [[395, "xmlrpc.server.DocXMLRPCServer.set_server_name"]], "set_server_title() (xmlrpc.server.doccgixmlrpcrequesthandler method)": [[395, "xmlrpc.server.DocCGIXMLRPCRequestHandler.set_server_title"]], "set_server_title() (xmlrpc.server.docxmlrpcserver method)": [[395, "xmlrpc.server.DocXMLRPCServer.set_server_title"]], "xmlrpc.server": [[395, "module-xmlrpc.server"]], "--compress": [[396, "cmdoption-zipapp-c"]], "--info": [[396, "cmdoption-zipapp-info"]], "--main": [[396, "cmdoption-zipapp-m"]], "--python": [[396, "cmdoption-zipapp-p"]], "executable zip files": [[396, "index-0"]], "create_archive() (in module zipapp)": [[396, "zipapp.create_archive"]], "get_interpreter() (in module zipapp)": [[396, "zipapp.get_interpreter"]], "zipapp": [[396, "module-zipapp"]], "zipapp command line option": [[396, "cmdoption-zipapp-c"], [396, "cmdoption-zipapp-h"], [396, "cmdoption-zipapp-info"], [396, "cmdoption-zipapp-m"], [396, "cmdoption-zipapp-o"], [396, "cmdoption-zipapp-p"]], "--metadata-encoding": [[397, "cmdoption-zipfile-metadata-encoding"]], "badzipfile": [[397, "zipfile.BadZipFile"], [397, "zipfile.BadZipfile"]], "crc (zipfile.zipinfo attribute)": [[397, "zipfile.ZipInfo.CRC"]], "largezipfile": [[397, "zipfile.LargeZipFile"]], "path (class in zipfile)": [[397, "zipfile.Path"]], "path.stem (in module zipfile)": [[397, "zipfile.Path.stem"]], "path.suffix (in module zipfile)": [[397, "zipfile.Path.suffix"]], "path.suffixes (in module zipfile)": [[397, "zipfile.Path.suffixes"]], "pyzipfile (class in zipfile)": [[397, "zipfile.PyZipFile"]], "zip_bzip2 (in module zipfile)": [[397, "zipfile.ZIP_BZIP2"]], "zip_deflated (in module zipfile)": [[397, "zipfile.ZIP_DEFLATED"]], "zip_lzma (in module zipfile)": [[397, "zipfile.ZIP_LZMA"]], "zip_stored (in module zipfile)": [[397, "zipfile.ZIP_STORED"]], "zipfile (class in zipfile)": [[397, "zipfile.ZipFile"]], "zipinfo (class in zipfile)": [[397, "zipfile.ZipInfo"]], "close() (zipfile.zipfile method)": [[397, "zipfile.ZipFile.close"]], "comment (zipfile.zipfile attribute)": [[397, "zipfile.ZipFile.comment"]], "comment (zipfile.zipinfo attribute)": [[397, "zipfile.ZipInfo.comment"]], "compress_size (zipfile.zipinfo attribute)": [[397, "zipfile.ZipInfo.compress_size"]], "compress_type (zipfile.zipinfo attribute)": [[397, "zipfile.ZipInfo.compress_type"]], "create_system (zipfile.zipinfo attribute)": [[397, "zipfile.ZipInfo.create_system"]], "create_version (zipfile.zipinfo attribute)": [[397, "zipfile.ZipInfo.create_version"]], "date_time (zipfile.zipinfo attribute)": [[397, "zipfile.ZipInfo.date_time"]], "debug (zipfile.zipfile attribute)": [[397, "zipfile.ZipFile.debug"]], "exists() (zipfile.path method)": [[397, "zipfile.Path.exists"]], "external_attr (zipfile.zipinfo attribute)": [[397, "zipfile.ZipInfo.external_attr"]], "extra (zipfile.zipinfo attribute)": [[397, "zipfile.ZipInfo.extra"]], "extract() (zipfile.zipfile method)": [[397, "zipfile.ZipFile.extract"]], "extract_version (zipfile.zipinfo attribute)": [[397, "zipfile.ZipInfo.extract_version"]], "extractall() (zipfile.zipfile method)": [[397, "zipfile.ZipFile.extractall"]], "file_size (zipfile.zipinfo attribute)": [[397, "zipfile.ZipInfo.file_size"]], "filename (zipfile.zipfile attribute)": [[397, "zipfile.ZipFile.filename"]], "filename (zipfile.zipinfo attribute)": [[397, "zipfile.ZipInfo.filename"]], "flag_bits (zipfile.zipinfo attribute)": [[397, "zipfile.ZipInfo.flag_bits"]], "from_file() (zipfile.zipinfo class method)": [[397, "zipfile.ZipInfo.from_file"]], "getinfo() (zipfile.zipfile method)": [[397, "zipfile.ZipFile.getinfo"]], "header_offset (zipfile.zipinfo attribute)": [[397, "zipfile.ZipInfo.header_offset"]], "infolist() (zipfile.zipfile method)": [[397, "zipfile.ZipFile.infolist"]], "internal_attr (zipfile.zipinfo attribute)": [[397, "zipfile.ZipInfo.internal_attr"]], "is_dir() (zipfile.path method)": [[397, "zipfile.Path.is_dir"]], "is_dir() (zipfile.zipinfo method)": [[397, "zipfile.ZipInfo.is_dir"]], "is_file() (zipfile.path method)": [[397, "zipfile.Path.is_file"]], "is_zipfile() (in module zipfile)": [[397, "zipfile.is_zipfile"]], "iterdir() (zipfile.path method)": [[397, "zipfile.Path.iterdir"]], "joinpath() (zipfile.path method)": [[397, "zipfile.Path.joinpath"]], "mkdir() (zipfile.zipfile method)": [[397, "zipfile.ZipFile.mkdir"]], "name (zipfile.path attribute)": [[397, "zipfile.Path.name"]], "namelist() (zipfile.zipfile method)": [[397, "zipfile.ZipFile.namelist"]], "open() (zipfile.path method)": [[397, "zipfile.Path.open"]], "open() (zipfile.zipfile method)": [[397, "zipfile.ZipFile.open"]], "printdir() (zipfile.zipfile method)": [[397, "zipfile.ZipFile.printdir"]], "read() (zipfile.zipfile method)": [[397, "zipfile.ZipFile.read"]], "read_bytes() (zipfile.path method)": [[397, "zipfile.Path.read_bytes"]], "read_text() (zipfile.path method)": [[397, "zipfile.Path.read_text"]], "reserved (zipfile.zipinfo attribute)": [[397, "zipfile.ZipInfo.reserved"]], "setpassword() (zipfile.zipfile method)": [[397, "zipfile.ZipFile.setpassword"]], "testzip() (zipfile.zipfile method)": [[397, "zipfile.ZipFile.testzip"]], "volume (zipfile.zipinfo attribute)": [[397, "zipfile.ZipInfo.volume"]], "write() (zipfile.zipfile method)": [[397, "zipfile.ZipFile.write"]], "writepy() (zipfile.pyzipfile method)": [[397, "zipfile.PyZipFile.writepy"]], "writestr() (zipfile.zipfile method)": [[397, "zipfile.ZipFile.writestr"]], "zipfile": [[397, "module-zipfile"]], "zipfile command line option": [[397, "cmdoption-zipfile-c"], [397, "cmdoption-zipfile-create"], [397, "cmdoption-zipfile-e"], [397, "cmdoption-zipfile-extract"], [397, "cmdoption-zipfile-l"], [397, "cmdoption-zipfile-list"], [397, "cmdoption-zipfile-metadata-encoding"], [397, "cmdoption-zipfile-t"], [397, "cmdoption-zipfile-test"]], "pep 273": [[398, "index-0"], [398, "index-1"], [440, "index-4"], [440, "index-5"]], "zipimporterror": [[398, "zipimport.ZipImportError"]], "archive (zipimport.zipimporter attribute)": [[398, "zipimport.zipimporter.archive"]], "create_module() (zipimport.zipimporter method)": [[398, "zipimport.zipimporter.create_module"]], "exec_module() (zipimport.zipimporter method)": [[398, "zipimport.zipimporter.exec_module"]], "find_spec() (zipimport.zipimporter method)": [[398, "zipimport.zipimporter.find_spec"]], "get_code() (zipimport.zipimporter method)": [[398, "zipimport.zipimporter.get_code"]], "get_data() (zipimport.zipimporter method)": [[398, "zipimport.zipimporter.get_data"]], "get_filename() (zipimport.zipimporter method)": [[398, "zipimport.zipimporter.get_filename"]], "get_source() (zipimport.zipimporter method)": [[398, "zipimport.zipimporter.get_source"]], "invalidate_caches() (zipimport.zipimporter method)": [[398, "zipimport.zipimporter.invalidate_caches"]], "is_package() (zipimport.zipimporter method)": [[398, "zipimport.zipimporter.is_package"]], "load_module() (zipimport.zipimporter method)": [[398, "zipimport.zipimporter.load_module"]], "prefix (zipimport.zipimporter attribute)": [[398, "zipimport.zipimporter.prefix"]], "zipimport": [[398, "module-zipimport"]], "zipimporter (class in zipimport)": [[398, "zipimport.zipimporter"]], "cyclic redundancy check": [[399, "index-0"]], "zlib_runtime_version (in module zlib)": [[399, "zlib.ZLIB_RUNTIME_VERSION"]], "zlib_version (in module zlib)": [[399, "zlib.ZLIB_VERSION"]], "adler32() (in module zlib)": [[399, "zlib.adler32"]], "compress() (in module zlib)": [[399, "zlib.compress"]], "compress() (zlib.compress method)": [[399, "zlib.Compress.compress"]], "compressobj() (in module zlib)": [[399, "zlib.compressobj"]], "copy() (zlib.compress method)": [[399, "zlib.Compress.copy"]], "copy() (zlib.decompress method)": [[399, "zlib.Decompress.copy"]], "crc32() (in module zlib)": [[399, "zlib.crc32"]], "decompress() (in module zlib)": [[399, "zlib.decompress"]], "decompress() (zlib.decompress method)": [[399, "zlib.Decompress.decompress"]], "decompressobj() (in module zlib)": [[399, "zlib.decompressobj"]], "eof (zlib.decompress attribute)": [[399, "zlib.Decompress.eof"]], "flush() (zlib.compress method)": [[399, "zlib.Compress.flush"]], "flush() (zlib.decompress method)": [[399, "zlib.Decompress.flush"]], "unconsumed_tail (zlib.decompress attribute)": [[399, "zlib.Decompress.unconsumed_tail"]], "unused_data (zlib.decompress attribute)": [[399, "zlib.Decompress.unused_data"]], "zlib": [[399, "module-zlib"]], "invalidtzpathwarning": [[400, "zoneinfo.InvalidTZPathWarning"]], "pep 495": [[400, "index-1"], [455, "index-17"], [455, "index-18"]], "pep 615": [[400, "index-0"], [458, "index-16"], [458, "index-9"]], "pythontzpath": [[400, "envvar-PYTHONTZPATH"], [400, "index-2"]], "tzpath (in module zoneinfo)": [[400, "zoneinfo.TZPATH"]], "zoneinfo (class in zoneinfo)": [[400, "zoneinfo.ZoneInfo"]], "zoneinfonotfounderror": [[400, "zoneinfo.ZoneInfoNotFoundError"]], "available_timezones() (in module zoneinfo)": [[400, "zoneinfo.available_timezones"]], "clear_cache() (zoneinfo.zoneinfo class method)": [[400, "zoneinfo.ZoneInfo.clear_cache"]], "from_file() (zoneinfo.zoneinfo class method)": [[400, "zoneinfo.ZoneInfo.from_file"]], "key (zoneinfo.zoneinfo attribute)": [[400, "zoneinfo.ZoneInfo.key"]], "no_cache() (zoneinfo.zoneinfo class method)": [[400, "zoneinfo.ZoneInfo.no_cache"]], "reset_tzpath() (in module zoneinfo)": [[400, "zoneinfo.reset_tzpath"]], "zoneinfo": [[400, "module-zoneinfo"]], "! patterns": [[402, "index-23"]], "->": [[402, "index-34"], [416, "index-6"]], "as pattern, or pattern, capture pattern, wildcard pattern": [[402, "index-23"]], "dedent token": [[402, "index-2"], [410, "index-9"]], "newline token": [[402, "index-2"], [410, "index-3"]], "pep 3107": [[402, "index-36"], [416, "index-7"], [445, "index-6"], [454, "index-9"], [456, "index-0"]], "pep 3129": [[402, "index-44"], [443, "index-18"]], "pep 318": [[402, "index-45"], [441, "index-12"], [441, "index-4"], [441, "index-5"]], "pep 570": [[402, "index-33"], [457, "index-1"], [457, "index-23"]], "pep 614": [[402, "index-30"], [402, "index-42"], [458, "index-15"], [458, "index-3"]], "pep 636": [[402, "index-20"], [402, "index-26"], [416, "index-1"], [447, "index-17"], [447, "index-2"]], "annotations": [[402, "index-34"], [416, "index-6"]], "as": [[402, "index-10"], [402, "index-16"], [402, "index-18"], [402, "index-9"], [411, "index-34"], [411, "index-35"]], "async": [[402, "index-47"]], "async def": [[402, "index-46"]], "async for": [[402, "index-48"], [405, "index-12"]], "async with": [[402, "index-49"]], "await": [[402, "index-47"], [405, "index-13"], [405, "index-57"]], "binding": [[402, "index-28"], [402, "index-40"], [404, "index-4"], [411, "index-34"], [411, "index-36"], [411, "index-4"], [411, "index-43"]], "break": [[402, "index-13"], [402, "index-15"], [402, "index-5"], [402, "index-7"], [411, "index-30"]], "case": [[402, "index-18"], [402, "index-18"]], "case block": [[402, "index-22"]], "class definition": [[402, "index-40"], [402, "index-41"], [403, "index-84"]], "clause": [[402, "index-1"]], "compound": [[402, "index-0"]], "compound statement": [[402, "index-16"], [402, "index-18"], [402, "index-28"], [402, "index-3"], [402, "index-4"], [402, "index-40"], [402, "index-6"], [402, "index-9"]], "continue": [[402, "index-13"], [402, "index-15"], [402, "index-5"], [402, "index-7"], [411, "index-33"]], "dangling": [[402, "index-2"]], "def": [[402, "index-28"]], "default": [[402, "index-31"]], "definition": [[402, "index-28"], [402, "index-40"], [411, "index-24"]], "elif": [[402, "index-3"]], "else": [[402, "index-13"], [402, "index-2"], [402, "index-3"], [402, "index-4"], [402, "index-6"], [402, "index-9"], [405, "index-88"], [411, "index-31"]], "except clause": [[402, "index-10"]], "except_star": [[402, "index-12"]], "execution": [[402, "index-40"], [403, "index-64"], [404, "index-13"], [404, "index-2"]], "expression list": [[402, "index-40"], [405, "index-15"], [405, "index-16"], [405, "index-91"], [411, "index-18"]], "finally": [[402, "index-14"], [402, "index-9"], [411, "index-25"], [411, "index-32"], [411, "index-33"]], "for": [[402, "index-6"], [405, "index-12"], [411, "index-30"], [411, "index-33"], [416, "index-0"]], "frame": [[402, "index-40"], [403, "index-61"], [404, "index-2"]], "function annotations": [[402, "index-34"], [416, "index-6"]], "function definition": [[402, "index-27"], [402, "index-28"], [402, "index-29"], [402, "index-31"], [402, "index-32"]], "guard": [[402, "index-21"]], "inheritance": [[402, "index-40"]], "irrefutable case block": [[402, "index-22"]], "match": [[402, "index-18"], [402, "index-18"]], "match statement": [[402, "index-18"]], "name": [[402, "index-28"], [402, "index-40"], [404, "index-4"], [405, "index-3"], [405, "index-5"], [410, "index-10"], [411, "index-22"], [411, "index-34"], [411, "index-36"], [411, "index-4"], [411, "index-43"], [415, "index-1"]], "parameter list": [[402, "index-28"]], "pattern matching": [[402, "index-18"]], "return": [[402, "index-13"], [402, "index-15"], [411, "index-24"]], "suite": [[402, "index-1"]], "target": [[402, "index-6"], [411, "index-21"], [411, "index-31"], [411, "index-5"], [411, "index-6"]], "type parameters": [[402, "index-51"]], "user-defined function": [[402, "index-28"], [403, "index-34"], [405, "index-52"]], "with": [[402, "index-16"], [403, "index-104"]], "with statement": [[402, "index-16"]], "ellipsis": [[403, "index-8"]], "java": [[403, "index-13"]], "notimplemented": [[403, "index-7"]], "pep 252": [[403, "index-83"], [439, "index-2"], [439, "index-4"]], "pep 3135": [[403, "index-91"], [445, "index-31"]], "pep 562": [[403, "index-82"], [456, "index-16"]], "__abs__() (object method)": [[403, "object.__abs__"]], "__add__() (object method)": [[403, "object.__add__"]], "__aenter__() (object method)": [[403, "object.__aenter__"]], "__aexit__() (object method)": [[403, "object.__aexit__"]], "__aiter__() (object method)": [[403, "object.__aiter__"]], "__and__() (object method)": [[403, "object.__and__"]], "__anext__() (object method)": [[403, "object.__anext__"]], "__annotations__ (class attribute)": [[403, "index-49"]], "__annotations__ (function attribute)": [[403, "index-35"]], "__annotations__ (module attribute)": [[403, "index-44"]], "__await__() (object method)": [[403, "object.__await__"]], "__bool__() (object method)": [[403, "index-96"], [403, "object.__bool__"]], "__buffer__() (object method)": [[403, "object.__buffer__"]], "__bytes__() (object method)": [[403, "object.__bytes__"]], "__call__() (object method)": [[403, "object.__call__"], [405, "index-56"]], "__ceil__() (object method)": [[403, "object.__ceil__"]], "__class__ (method cell)": [[403, "index-90"]], "__class__ (module attribute)": [[403, "index-81"]], "__class_getitem__() (object class method)": [[403, "object.__class_getitem__"]], "__classcell__ (class namespace entry)": [[403, "index-90"]], "__closure__ (function attribute)": [[403, "index-35"]], "__code__ (function attribute)": [[403, "index-35"]], "__complex__() (object method)": [[403, "object.__complex__"]], "__contains__() (object method)": [[403, "object.__contains__"]], "__defaults__ (function attribute)": [[403, "index-35"]], "__del__() (object method)": [[403, "object.__del__"]], "__delattr__() (object method)": [[403, "object.__delattr__"]], "__delete__() (object method)": [[403, "object.__delete__"]], "__delitem__() (object method)": [[403, "object.__delitem__"]], "__dict__ (class attribute)": [[403, "index-49"]], "__dict__ (function attribute)": [[403, "index-35"]], "__dict__ (instance attribute)": [[403, "index-53"]], "__dir__ (module attribute)": [[403, "index-81"]], "__dir__() (object method)": [[403, "object.__dir__"]], "__divmod__() (object method)": [[403, "object.__divmod__"]], "__doc__ (class attribute)": [[403, "index-49"]], "__doc__ (function attribute)": [[403, "index-35"]], "__doc__ (method attribute)": [[403, "index-37"]], "__enter__() (object method)": [[403, "object.__enter__"]], "__eq__() (object method)": [[403, "object.__eq__"]], "__exit__() (object method)": [[403, "object.__exit__"]], "__float__() (object method)": [[403, "object.__float__"]], "__floor__() (object method)": [[403, "object.__floor__"]], "__floordiv__() (object method)": [[403, "object.__floordiv__"]], "__format__() (object method)": [[403, "index-76"], [403, "object.__format__"]], "__func__ (method attribute)": [[403, "index-37"]], "__ge__() (object method)": [[403, "object.__ge__"]], "__get__() (object method)": [[403, "object.__get__"]], "__getattr__ (module attribute)": [[403, "index-81"]], "__getattr__() (object method)": [[403, "object.__getattr__"]], "__getattribute__() (object method)": [[403, "object.__getattribute__"]], "__getitem__() (mapping object method)": [[403, "index-69"]], "__getitem__() (object method)": [[403, "object.__getitem__"]], "__globals__ (function attribute)": [[403, "index-35"]], "__gt__() (object method)": [[403, "object.__gt__"]], "__hash__() (object method)": [[403, "object.__hash__"]], "__iadd__() (object method)": [[403, "object.__iadd__"]], "__iand__() (object method)": [[403, "object.__iand__"]], "__ifloordiv__() (object method)": [[403, "object.__ifloordiv__"]], "__ilshift__() (object method)": [[403, "object.__ilshift__"]], "__imatmul__() (object method)": [[403, "object.__imatmul__"]], "__imod__() (object method)": [[403, "object.__imod__"]], "__imul__() (object method)": [[403, "object.__imul__"]], "__index__() (object method)": [[403, "object.__index__"]], "__init__() (object method)": [[403, "object.__init__"]], "__init_subclass__() (object class method)": [[403, "object.__init_subclass__"]], "__instancecheck__() (class method)": [[403, "class.__instancecheck__"]], "__int__() (object method)": [[403, "object.__int__"]], "__invert__() (object method)": [[403, "object.__invert__"]], "__ior__() (object method)": [[403, "object.__ior__"]], "__ipow__() (object method)": [[403, "object.__ipow__"]], "__irshift__() (object method)": [[403, "object.__irshift__"]], "__isub__() (object method)": [[403, "object.__isub__"]], "__iter__() (object method)": [[403, "object.__iter__"]], "__itruediv__() (object method)": [[403, "object.__itruediv__"]], "__ixor__() (object method)": [[403, "object.__ixor__"]], "__kwdefaults__ (function attribute)": [[403, "index-35"]], "__le__() (object method)": [[403, "object.__le__"]], "__len__() (mapping object method)": [[403, "index-80"]], "__len__() (object method)": [[403, "object.__len__"]], "__length_hint__() (object method)": [[403, "object.__length_hint__"]], "__lshift__() (object method)": [[403, "object.__lshift__"]], "__lt__() (object method)": [[403, "object.__lt__"]], "__matmul__() (object method)": [[403, "object.__matmul__"]], "__missing__() (object method)": [[403, "object.__missing__"]], "__mod__() (object method)": [[403, "object.__mod__"]], "__module__ (class attribute)": [[403, "index-49"]], "__module__ (function attribute)": [[403, "index-35"]], "__module__ (method attribute)": [[403, "index-37"]], "__mro_entries__() (object method)": [[403, "object.__mro_entries__"]], "__mul__() (object method)": [[403, "object.__mul__"]], "__name__ (class attribute)": [[403, "index-49"]], "__name__ (function attribute)": [[403, "index-35"]], "__name__ (method attribute)": [[403, "index-37"]], "__ne__() (object method)": [[403, "object.__ne__"]], "__neg__() (object method)": [[403, "object.__neg__"]], "__new__() (object method)": [[403, "object.__new__"]], "__or__() (object method)": [[403, "object.__or__"]], "__pos__() (object method)": [[403, "object.__pos__"]], "__pow__() (object method)": [[403, "object.__pow__"]], "__prepare__ (metaclass method)": [[403, "index-87"]], "__radd__() (object method)": [[403, "object.__radd__"]], "__rand__() (object method)": [[403, "object.__rand__"]], "__rdivmod__() (object method)": [[403, "object.__rdivmod__"]], "__release_buffer__() (object method)": [[403, "object.__release_buffer__"]], "__repr__() (object method)": [[403, "index-73"], [403, "object.__repr__"]], "__reversed__() (object method)": [[403, "object.__reversed__"]], "__rfloordiv__() (object method)": [[403, "object.__rfloordiv__"]], "__rlshift__() (object method)": [[403, "object.__rlshift__"]], "__rmatmul__() (object method)": [[403, "object.__rmatmul__"]], "__rmod__() (object method)": [[403, "object.__rmod__"]], "__rmul__() (object method)": [[403, "object.__rmul__"]], "__ror__() (object method)": [[403, "object.__ror__"]], "__round__() (object method)": [[403, "object.__round__"]], "__rpow__() (object method)": [[403, "object.__rpow__"]], "__rrshift__() (object method)": [[403, "object.__rrshift__"]], "__rshift__() (object method)": [[403, "object.__rshift__"]], "__rsub__() (object method)": [[403, "object.__rsub__"]], "__rtruediv__() (object method)": [[403, "object.__rtruediv__"]], "__rxor__() (object method)": [[403, "object.__rxor__"]], "__self__ (method attribute)": [[403, "index-37"]], "__set__() (object method)": [[403, "object.__set__"]], "__set_name__() (object method)": [[403, "object.__set_name__"]], "__setattr__() (object method)": [[403, "object.__setattr__"]], "__setitem__() (object method)": [[403, "object.__setitem__"]], "__str__() (object method)": [[403, "index-74"], [403, "object.__str__"]], "__sub__() (object method)": [[403, "object.__sub__"]], "__subclasscheck__() (class method)": [[403, "class.__subclasscheck__"]], "__truediv__() (object method)": [[403, "object.__truediv__"]], "__trunc__() (object method)": [[403, "object.__trunc__"]], "__type_params__ (class attribute)": [[403, "index-49"]], "__type_params__ (function attribute)": [[403, "index-35"]], "__xor__() (object method)": [[403, "object.__xor__"]], "body": [[403, "index-89"]], "built-in method": [[403, "index-42"], [405, "index-53"]], "byte": [[403, "index-21"]], "call": [[403, "index-33"], [403, "index-46"], [403, "index-48"], [403, "index-95"], [405, "index-47"], [405, "index-52"], [405, "index-53"], [405, "index-54"], [405, "index-55"], [405, "index-56"], [411, "index-3"]], "chr": [[403, "index-19"]], "class instance": [[403, "index-46"], [403, "index-50"], [403, "index-51"], [405, "index-55"]], "class object": [[403, "index-46"], [403, "index-48"], [405, "index-54"]], "clear() (frame method)": [[403, "frame.clear"]], "close() (coroutine method)": [[403, "coroutine.close"]], "co_argcount (code object attribute)": [[403, "index-57"]], "co_cellvars (code object attribute)": [[403, "index-57"]], "co_code (code object attribute)": [[403, "index-57"]], "co_consts (code object attribute)": [[403, "index-57"]], "co_filename (code object attribute)": [[403, "index-57"]], "co_firstlineno (code object attribute)": [[403, "index-57"]], "co_flags (code object attribute)": [[403, "index-57"]], "co_freevars (code object attribute)": [[403, "index-57"]], "co_kwonlyargcount (code object attribute)": [[403, "index-57"]], "co_lnotab (code object attribute)": [[403, "index-57"]], "co_name (code object attribute)": [[403, "index-57"]], "co_names (code object attribute)": [[403, "index-57"]], "co_nlocals (code object attribute)": [[403, "index-57"]], "co_positions() (codeobject method)": [[403, "codeobject.co_positions"]], "co_posonlyargcount (code object attribute)": [[403, "index-57"]], "co_qualname (code object attribute)": [[403, "index-57"]], "co_stacksize (code object attribute)": [[403, "index-57"]], "co_varnames (code object attribute)": [[403, "index-57"]], "constructor": [[403, "index-71"]], "conversion": [[403, "index-76"], [405, "index-1"], [411, "index-3"]], "destructor": [[403, "index-72"], [411, "index-7"]], "documentation string": [[403, "index-59"]], "exc_info (in module sys)": [[403, "index-64"]], "extension": [[403, "index-4"]], "f_back (frame attribute)": [[403, "index-62"]], "f_builtins (frame attribute)": [[403, "index-62"]], "f_code (frame attribute)": [[403, "index-62"]], "f_globals (frame attribute)": [[403, "index-62"]], "f_lasti (frame attribute)": [[403, "index-62"]], "f_lineno (frame attribute)": [[403, "index-63"]], "f_locals (frame attribute)": [[403, "index-62"]], "f_trace (frame attribute)": [[403, "index-63"]], "f_trace_lines (frame attribute)": [[403, "index-63"]], "f_trace_opcodes (frame attribute)": [[403, "index-63"]], "finalizer": [[403, "index-72"]], "global": [[403, "index-35"], [411, "index-22"], [411, "index-43"], [411, "index-43"]], "handler": [[403, "index-64"]], "hierarchy": [[403, "index-4"]], "identity of an object": [[403, "index-1"]], "immutable object": [[403, "index-1"]], "immutable sequence": [[403, "index-17"]], "immutable sequences": [[403, "index-18"]], "immutable types": [[403, "index-70"]], "index operation": [[403, "index-15"]], "indices() (slice method)": [[403, "slice.indices"]], "instance": [[403, "index-46"], [403, "index-50"], [403, "index-95"], [405, "index-55"], [405, "index-56"]], "internal type": [[403, "index-55"]], "invocation": [[403, "index-33"]], "item selection": [[403, "index-15"]], "makefile() (socket method)": [[403, "index-54"]], "metaclass hint": [[403, "index-86"]], "mutable object": [[403, "index-1"]], "number": [[403, "index-13"], [403, "index-14"], [410, "index-27"]], "object.__match_args__ (built-in variable)": [[403, "object.__match_args__"]], "object.__slots__ (built-in variable)": [[403, "object.__slots__"]], "open": [[403, "index-54"], [421, "index-0"]], "ord": [[403, "index-19"]], "overloading": [[403, "index-69"]], "print": [[403, "index-76"]], "print() (built-in function)": [[403, "index-74"]], "reference counting": [[403, "index-2"]], "repr() (built-in function)": [[403, "index-73"]], "representation": [[403, "index-11"]], "round": [[403, "index-103"]], "send() (coroutine method)": [[403, "coroutine.send"]], "set type": [[403, "index-27"]], "singleton": [[403, "index-20"]], "slicing": [[403, "index-16"], [403, "index-22"], [405, "index-44"], [411, "index-12"]], "stack": [[403, "index-64"]], "start (slice object attribute)": [[403, "index-68"], [405, "index-46"]], "stdio": [[403, "index-54"]], "step (slice object attribute)": [[403, "index-68"], [405, "index-46"]], "stop (slice object attribute)": [[403, "index-68"], [405, "index-46"]], "subclassing": [[403, "index-70"]], "subscription": [[403, "index-15"], [403, "index-22"], [403, "index-30"], [405, "index-41"], [411, "index-9"]], "sys.exc_info": [[403, "index-64"]], "sys.exception": [[403, "index-64"]], "sys.last_traceback": [[403, "index-64"]], "sys.stderr": [[403, "index-54"]], "sys.stdin": [[403, "index-54"]], "sys.stdout": [[403, "index-54"]], "tb_frame (traceback attribute)": [[403, "index-65"]], "tb_lasti (traceback attribute)": [[403, "index-65"]], "tb_lineno (traceback attribute)": [[403, "index-65"]], "tb_next (traceback attribute)": [[403, "index-66"]], "throw() (coroutine method)": [[403, "coroutine.throw"]], "type of an object": [[403, "index-1"]], "types, internal": [[403, "index-55"]], "unreachable object": [[403, "index-2"]], "user-defined": [[403, "index-34"], [403, "index-36"], [405, "index-52"]], "user-defined method": [[403, "index-36"]], "value of an object": [[403, "index-1"]], "nameerror (built-in exception)": [[404, "index-9"]], "systemexit (built-in exception)": [[404, "index-17"]], "environment": [[404, "index-8"]], "error handling": [[404, "index-15"]], "exception handler": [[404, "index-15"]], "execution model": [[404, "index-0"]], "free": [[404, "index-6"]], "from": [[404, "index-5"], [405, "index-23"], [405, "index-25"], [411, "index-34"], [411, "index-36"]], "handle an exception": [[404, "index-15"]], "import statement": [[404, "index-5"], [411, "index-34"], [411, "index-35"], [411, "index-36"], [411, "index-37"]], "raise an exception": [[404, "index-15"]], "scope": [[404, "index-3"], [404, "index-7"]], "termination model": [[404, "index-16"]], "variable": [[404, "index-6"]], ":= (colon equals)": [[405, "index-86"]], "bnf": [[405, "index-0"], [409, "index-0"]], "conditional": [[405, "index-82"], [405, "index-88"]], "pep 308": [[405, "index-89"], [442, "index-1"], [442, "index-2"]], "pep 380": [[405, "index-28"], [452, "index-12"]], "pep 448": [[405, "index-19"], [405, "index-51"], [405, "index-94"], [454, "index-5"], [454, "index-6"]], "pep 530": [[405, "index-14"], [455, "index-11"], [455, "index-12"]], "__anext__() (agen method)": [[405, "agen.__anext__"]], "__next__() (generator method)": [[405, "generator.__next__"]], "aclose() (agen method)": [[405, "agen.aclose"]], "addition": [[405, "index-69"]], "anonymous": [[405, "index-90"]], "argument list": [[405, "index-47"]], "asend() (agen method)": [[405, "agen.asend"]], "assignment expression": [[405, "index-86"]], "asynchronous-generator": [[405, "index-35"]], "athrow() (agen method)": [[405, "agen.athrow"]], "atom": [[405, "index-2"]], "attribute reference": [[405, "index-39"]], "call semantics": [[405, "index-47"], [405, "index-48"]], "close() (generator method)": [[405, "generator.close"]], "comma": [[405, "index-10"], [405, "index-95"]], "comprehensions": [[405, "index-11"], [405, "index-15"], [405, "index-16"], [405, "index-17"]], "conditional expression": [[405, "index-88"]], "dictionary expression": [[405, "index-17"]], "division": [[405, "index-67"]], "evaluation": [[405, "index-96"]], "examples": [[405, "index-34"]], "exclusive": [[405, "index-75"]], "form": [[405, "index-90"]], "identifier": [[405, "index-3"], [410, "index-10"]], "identity": [[405, "index-81"]], "in comprehensions": [[405, "index-12"], [405, "index-13"]], "in dictionary displays": [[405, "index-17"], [405, "index-18"]], "in dictionary expressions": [[405, "index-17"]], "in expression lists": [[405, "index-93"]], "in function calls": [[405, "index-47"], [405, "index-49"], [405, "index-50"], [416, "index-3"], [416, "index-4"]], "inclusive": [[405, "index-76"]], "inversion": [[405, "index-62"]], "item": [[405, "index-42"], [405, "index-43"]], "key": [[405, "index-17"]], "key/value pair": [[405, "index-17"]], "lambda expression": [[405, "index-90"]], "list expression": [[405, "index-15"]], "literal": [[405, "index-6"], [410, "index-16"]], "mangling": [[405, "index-5"], [415, "index-1"]], "matrix multiplication": [[405, "index-66"]], "membership": [[405, "index-80"]], "minus": [[405, "index-60"]], "modulo": [[405, "index-68"]], "multiplication": [[405, "index-65"]], "named expression": [[405, "index-86"]], "names": [[405, "index-5"]], "negation": [[405, "index-60"]], "order": [[405, "index-96"]], "parenthesized form": [[405, "index-8"]], "plus": [[405, "index-61"]], "power": [[405, "index-58"]], "precedence": [[405, "index-97"]], "primary": [[405, "index-38"]], "private": [[405, "index-5"]], "reference": [[405, "index-39"]], "send() (generator method)": [[405, "generator.send"]], "set expression": [[405, "index-16"]], "subtraction": [[405, "index-70"]], "ternary": [[405, "index-88"]], "throw() (generator method)": [[405, "generator.throw"]], "trailing": [[405, "index-95"]], "tuple display": [[405, "index-8"]], "unary": [[405, "index-59"]], "unpacking": [[405, "index-18"], [405, "index-49"], [405, "index-93"]], "walrus operator": [[405, "index-86"]], "xor": [[405, "index-75"]], "yield": [[405, "index-23"], [405, "index-34"], [411, "index-26"], [452, "index-11"]], "yield from expression": [[405, "index-25"]], "pep 617": [[406, "index-0"], [447, "index-14"], [448, "index-32"], [449, "index-8"], [458, "index-14"], [458, "index-19"], [458, "index-7"]], "__cached__": [[407, "cached__"]], "__file__": [[407, "file__"]], "__loader__": [[407, "loader__"]], "__name__": [[407, "name__"]], "__package__": [[407, "package__"]], "__path__": [[407, "path__"]], "__spec__": [[407, "spec__"]], "find_spec": [[407, "index-10"]], "hooks": [[407, "index-9"]], "import hooks": [[407, "index-9"]], "import machinery": [[407, "index-0"]], "meta": [[407, "index-9"]], "meta hooks": [[407, "index-9"]], "path hooks": [[407, "index-9"]], "regular": [[407, "index-4"]], "sys.meta_path": [[407, "index-10"]], "sys.modules": [[407, "index-7"]], "sys.path": [[407, "index-17"]], "sys.path_hooks": [[407, "index-17"]], "sys.path_importer_cache": [[407, "index-17"]], "grammar": [[409, "index-0"]], "lexical definitions": [[409, "index-1"]], "notation": [[409, "index-0"]], "syntax": [[409, "index-0"]], "\" (double quote)": [[410, "index-17"]], "\"\"\"": [[410, "index-18"]], "' (single quote)": [[410, "index-17"]], "'''": [[410, "index-18"]], "0b": [[410, "index-28"]], "0o": [[410, "index-28"]], "0x": [[410, "index-28"]], "indent token": [[410, "index-9"]], "pep 3131": [[410, "index-11"], [410, "index-12"], [445, "index-5"]], "pep 414": [[410, "index-21"], [452, "index-14"]], "standard c": [[410, "index-23"]], "unicode consortium": [[410, "index-18"]], "_, identifiers": [[410, "index-15"]], "__, identifiers": [[410, "index-15"]], "b\"": [[410, "index-19"]], "b'": [[410, "index-19"]], "backslash character": [[410, "index-6"]], "binary literal": [[410, "index-27"]], "blank line": [[410, "index-7"]], "bytes literal": [[410, "index-17"], [410, "index-19"]], "complex literal": [[410, "index-27"]], "constant": [[410, "index-16"]], "decimal literal": [[410, "index-27"]], "delimiters": [[410, "index-32"]], "e": [[410, "index-29"]], "encoding declarations (source file)": [[410, "index-5"]], "f\"": [[410, "index-22"]], "f'": [[410, "index-22"]], "floating point literal": [[410, "index-27"]], "for help in debugging using string literals": [[410, "index-25"]], "formatted literal": [[410, "index-25"]], "formatted string literal": [[410, "index-22"], [410, "index-25"]], "fstring": [[410, "index-25"]], "grouping": [[410, "index-8"]], "hash character": [[410, "index-4"]], "hexadecimal literal": [[410, "index-27"]], "imaginary literal": [[410, "index-27"]], "in formatted string literal": [[410, "index-25"]], "in numeric literal": [[410, "index-28"], [410, "index-29"], [410, "index-30"]], "indentation": [[410, "index-8"]], "integer literal": [[410, "index-27"], [410, "index-28"]], "interpolated literal": [[410, "index-25"]], "interpolated string literal": [[410, "index-25"]], "j": [[410, "index-30"]], "leading whitespace": [[410, "index-8"]], "lexical analysis": [[410, "index-0"]], "line continuation": [[410, "index-6"]], "line joining": [[410, "index-3"], [410, "index-6"]], "line structure": [[410, "index-2"]], "logical line": [[410, "index-3"]], "numeric literal": [[410, "index-27"]], "octal literal": [[410, "index-27"]], "operators": [[410, "index-31"]], "parser": [[410, "index-0"]], "physical line": [[410, "index-23"], [410, "index-3"], [410, "index-6"]], "r\"": [[410, "index-20"]], "r'": [[410, "index-20"]], "raw string": [[410, "index-18"]], "raw string literal": [[410, "index-20"]], "reserved word": [[410, "index-13"]], "soft keyword": [[410, "index-14"]], "source character set": [[410, "index-5"]], "source encoding declaration": [[410, "index-5"]], "statement grouping": [[410, "index-8"]], "string literal": [[410, "index-17"], [410, "index-18"]], "tab": [[410, "index-8"]], "u\"": [[410, "index-17"]], "u'": [[410, "index-17"]], "unrecognized escape sequence": [[410, "index-24"]], "%=": [[411, "index-14"]], "&=": [[411, "index-14"]], "**=": [[411, "index-14"]], "*=": [[411, "index-14"]], "+=": [[411, "index-14"]], "-=": [[411, "index-14"]], "//=": [[411, "index-14"]], "/=": [[411, "index-14"]], "<<=": [[411, "index-14"]], ">>=": [[411, "index-14"]], "pep 236": [[411, "index-42"], [438, "index-0"], [438, "index-1"], [438, "index-3"]], "pep 3104": [[411, "index-46"], [445, "index-8"]], "pep 3132": [[411, "index-13"], [445, "index-9"]], "^=": [[411, "index-14"]], "__all__ (optional module attribute)": [[411, "index-38"]], "__cause__ (exception attribute)": [[411, "index-29"]], "__context__ (exception attribute)": [[411, "index-29"]], "__debug__": [[411, "index-19"]], "__traceback__ (exception attribute)": [[411, "index-27"]], "annotated": [[411, "index-15"]], "annotated variable": [[411, "index-15"]], "assertions": [[411, "index-18"]], "assignment statement": [[411, "index-4"]], "assignment, annotated": [[411, "index-15"]], "assignment, augmented": [[411, "index-14"]], "augmented": [[411, "index-14"]], "augmented assignment": [[411, "index-14"]], "deletion": [[411, "index-21"], [411, "index-23"]], "future": [[411, "index-40"]], "future statement": [[411, "index-40"]], "identifier list": [[411, "index-43"], [411, "index-45"]], "in assignment target list": [[411, "index-6"]], "in target list": [[411, "index-6"]], "loop control": [[411, "index-31"]], "nonlocal": [[411, "index-45"]], "null": [[411, "index-20"]], "pass": [[411, "index-20"]], "procedure": [[411, "index-3"]], "raising": [[411, "index-27"]], "rebinding": [[411, "index-4"]], "simple": [[411, "index-0"]], "standard": [[411, "index-3"]], "unbinding": [[411, "index-22"]], "writing": [[411, "index-3"]], "|=": [[411, "index-14"]], "windows": [[412, "index-4"]], "command line": [[412, "index-4"]], "interactive mode": [[412, "index-3"]], "interpreter": [[412, "index-0"]], "program": [[412, "index-1"]], "standard input": [[412, "index-4"]], "coding": [[416, "index-9"]], "docstrings": [[416, "index-2"], [416, "index-5"]], "documentation strings": [[416, "index-2"], [416, "index-5"]], "strings, documentation": [[416, "index-2"], [416, "index-5"]], "style": [[416, "index-9"]], "--check-hash-based-pycs": [[430, "cmdoption-check-hash-based-pycs"]], "--help-all": [[430, "cmdoption-help-all"]], "--help-env": [[430, "cmdoption-help-env"]], "--help-xoptions": [[430, "cmdoption-help-xoptions"]], "-?": [[430, "cmdoption-0"]], "-oo": [[430, "cmdoption-OO"]], "python*": [[430, "index-0"], [430, "index-10"], [430, "index-2"], [430, "index-5"], [453, "index-50"]], "pythondumprefsfile=filename": [[430, "envvar-PYTHONDUMPREFSFILE-FILENAME"]], "command line option": [[430, "cmdoption-0"], [430, "cmdoption-1"], [430, "cmdoption-B"], [430, "cmdoption-E"], [430, "cmdoption-I"], [430, "cmdoption-J"], [430, "cmdoption-O"], [430, "cmdoption-OO"], [430, "cmdoption-P"], [430, "cmdoption-R"], [430, "cmdoption-S"], [430, "cmdoption-V"], [430, "cmdoption-W"], [430, "cmdoption-X"], [430, "cmdoption-b"], [430, "cmdoption-c"], [430, "cmdoption-check-hash-based-pycs"], [430, "cmdoption-d"], [430, "cmdoption-h"], [430, "cmdoption-help"], [430, "cmdoption-help-all"], [430, "cmdoption-help-env"], [430, "cmdoption-help-xoptions"], [430, "cmdoption-i"], [430, "cmdoption-m"], [430, "cmdoption-q"], [430, "cmdoption-s"], [430, "cmdoption-u"], [430, "cmdoption-version"], [430, "cmdoption-x"], [431, "cmdoption-0"], [431, "cmdoption-1"], [431, "cmdoption-arg-BOLT_APPLY_FLAGS"], [431, "cmdoption-arg-BOLT_INSTRUMENT_FLAGS"], [431, "cmdoption-arg-BZIP2_CFLAGS"], [431, "cmdoption-arg-BZIP2_LIBS"], [431, "cmdoption-arg-CC"], [431, "cmdoption-arg-CFLAGS"], [431, "cmdoption-arg-CONFIG_SITE"], [431, "cmdoption-arg-CPP"], [431, "cmdoption-arg-CPPFLAGS"], [431, "cmdoption-arg-CURSES_CFLAGS"], [431, "cmdoption-arg-CURSES_LIBS"], [431, "cmdoption-arg-GDBM_CFLAGS"], [431, "cmdoption-arg-GDBM_LIBS"], [431, "cmdoption-arg-HOSTRUNNER"], [431, "cmdoption-arg-LDFLAGS"], [431, "cmdoption-arg-LIBB2_CFLAGS"], [431, "cmdoption-arg-LIBB2_LIBS"], [431, "cmdoption-arg-LIBEDIT_CFLAGS"], [431, "cmdoption-arg-LIBEDIT_LIBS"], [431, "cmdoption-arg-LIBFFI_CFLAGS"], [431, "cmdoption-arg-LIBFFI_LIBS"], [431, "cmdoption-arg-LIBLZMA_CFLAGS"], [431, "cmdoption-arg-LIBLZMA_LIBS"], [431, "cmdoption-arg-LIBREADLINE_CFLAGS"], [431, "cmdoption-arg-LIBREADLINE_LIBS"], [431, "cmdoption-arg-LIBS"], [431, "cmdoption-arg-LIBSQLITE3_CFLAGS"], [431, "cmdoption-arg-LIBSQLITE3_LIBS"], [431, "cmdoption-arg-LIBUUID_CFLAGS"], [431, "cmdoption-arg-LIBUUID_LIBS"], [431, "cmdoption-arg-MACHDEP"], [431, "cmdoption-arg-PANEL_CFLAGS"], [431, "cmdoption-arg-PANEL_LIBS"], [431, "cmdoption-arg-PKG_CONFIG"], [431, "cmdoption-arg-PKG_CONFIG_LIBDIR"], [431, "cmdoption-arg-PKG_CONFIG_PATH"], [431, "cmdoption-arg-TCLTK_CFLAGS"], [431, "cmdoption-arg-TCLTK_LIBS"], [431, "cmdoption-arg-ZLIB_CFLAGS"], [431, "cmdoption-arg-ZLIB_LIBS"], [431, "cmdoption-build"], [431, "cmdoption-disable-gil"], [431, "cmdoption-disable-ipv6"], [431, "cmdoption-disable-test-modules"], [431, "cmdoption-enable-big-digits"], [431, "cmdoption-enable-bolt"], [431, "cmdoption-enable-framework"], [431, "cmdoption-enable-loadable-sqlite-extensions"], [431, "cmdoption-enable-optimizations"], [431, "cmdoption-enable-profiling"], [431, "cmdoption-enable-pystats"], [431, "cmdoption-enable-shared"], [431, "cmdoption-enable-universalsdk"], [431, "cmdoption-enable-wasm-dynamic-linking"], [431, "cmdoption-enable-wasm-pthreads"], [431, "cmdoption-exec-prefix"], [431, "cmdoption-host"], [431, "cmdoption-prefix"], [431, "cmdoption-with-address-sanitizer"], [431, "cmdoption-with-assertions"], [431, "cmdoption-with-build-python"], [431, "cmdoption-with-builtin-hashlib-hashes"], [431, "cmdoption-with-computed-gotos"], [431, "cmdoption-with-dbmliborder"], [431, "cmdoption-with-dtrace"], [431, "cmdoption-with-emscripten-target"], [431, "cmdoption-with-ensurepip"], [431, "cmdoption-with-framework-name"], [431, "cmdoption-with-hash-algorithm"], [431, "cmdoption-with-libc"], [431, "cmdoption-with-libm"], [431, "cmdoption-with-libs"], [431, "cmdoption-with-lto"], [431, "cmdoption-with-memory-sanitizer"], [431, "cmdoption-with-openssl"], [431, "cmdoption-with-openssl-rpath"], [431, "cmdoption-with-pkg-config"], [431, "cmdoption-with-platlibdir"], [431, "cmdoption-with-pydebug"], [431, "cmdoption-with-readline"], [431, "cmdoption-with-ssl-default-suites"], [431, "cmdoption-with-strict-overflow"], [431, "cmdoption-with-suffix"], [431, "cmdoption-with-system-expat"], [431, "cmdoption-with-system-libmpdec"], [431, "cmdoption-with-trace-refs"], [431, "cmdoption-with-tzpath"], [431, "cmdoption-with-undefined-behavior-sanitizer"], [431, "cmdoption-with-universal-archs"], [431, "cmdoption-with-valgrind"], [431, "cmdoption-with-wheel-pkg-dir"], [431, "cmdoption-without-c-locale-coercion"], [431, "cmdoption-without-decimal-contextvar"], [431, "cmdoption-without-doc-strings"], [431, "cmdoption-without-freelists"], [431, "cmdoption-without-pymalloc"], [431, "cmdoption-without-readline"], [431, "cmdoption-without-static-libpython"]], "--build": [[431, "cmdoption-build"]], "--disable-gil": [[431, "cmdoption-disable-gil"]], "--disable-ipv6": [[431, "cmdoption-disable-ipv6"]], "--disable-test-modules": [[431, "cmdoption-disable-test-modules"]], "--enable-big-digits": [[431, "cmdoption-enable-big-digits"]], "--enable-bolt": [[431, "cmdoption-enable-bolt"]], "--enable-framework": [[431, "cmdoption-1"], [431, "cmdoption-enable-framework"]], "--enable-loadable-sqlite-extensions": [[431, "cmdoption-enable-loadable-sqlite-extensions"]], "--enable-optimizations": [[431, "cmdoption-enable-optimizations"]], "--enable-profiling": [[431, "cmdoption-enable-profiling"]], "--enable-pystats": [[431, "cmdoption-enable-pystats"]], "--enable-shared": [[431, "cmdoption-enable-shared"]], "--enable-universalsdk": [[431, "cmdoption-0"], [431, "cmdoption-enable-universalsdk"]], "--enable-wasm-dynamic-linking": [[431, "cmdoption-enable-wasm-dynamic-linking"]], "--enable-wasm-pthreads": [[431, "cmdoption-enable-wasm-pthreads"]], "--exec-prefix": [[431, "cmdoption-exec-prefix"]], "--host": [[431, "cmdoption-host"]], "--prefix": [[431, "cmdoption-prefix"]], "--with-address-sanitizer": [[431, "cmdoption-with-address-sanitizer"]], "--with-assertions": [[431, "cmdoption-with-assertions"]], "--with-build-python": [[431, "cmdoption-with-build-python"]], "--with-builtin-hashlib-hashes": [[431, "cmdoption-with-builtin-hashlib-hashes"]], "--with-computed-gotos": [[431, "cmdoption-with-computed-gotos"]], "--with-dbmliborder": [[431, "cmdoption-with-dbmliborder"]], "--with-dtrace": [[431, "cmdoption-with-dtrace"]], "--with-emscripten-target": [[431, "cmdoption-with-emscripten-target"]], "--with-ensurepip": [[431, "cmdoption-with-ensurepip"]], "--with-framework-name": [[431, "cmdoption-with-framework-name"]], "--with-hash-algorithm": [[431, "cmdoption-with-hash-algorithm"]], "--with-libc": [[431, "cmdoption-with-libc"]], "--with-libm": [[431, "cmdoption-with-libm"]], "--with-libs": [[431, "cmdoption-with-libs"]], "--with-lto": [[431, "cmdoption-with-lto"]], "--with-memory-sanitizer": [[431, "cmdoption-with-memory-sanitizer"]], "--with-openssl": [[431, "cmdoption-with-openssl"]], "--with-openssl-rpath": [[431, "cmdoption-with-openssl-rpath"]], "--with-pkg-config": [[431, "cmdoption-with-pkg-config"]], "--with-platlibdir": [[431, "cmdoption-with-platlibdir"]], "--with-pydebug": [[431, "cmdoption-with-pydebug"]], "--with-readline": [[431, "cmdoption-with-readline"]], "--with-ssl-default-suites": [[431, "cmdoption-with-ssl-default-suites"]], "--with-strict-overflow": [[431, "cmdoption-with-strict-overflow"]], "--with-suffix": [[431, "cmdoption-with-suffix"]], "--with-system-expat": [[431, "cmdoption-with-system-expat"]], "--with-system-libmpdec": [[431, "cmdoption-with-system-libmpdec"]], "--with-trace-refs": [[431, "cmdoption-with-trace-refs"]], "--with-tzpath": [[431, "cmdoption-with-tzpath"]], "--with-undefined-behavior-sanitizer": [[431, "cmdoption-with-undefined-behavior-sanitizer"]], "--with-universal-archs": [[431, "cmdoption-with-universal-archs"]], "--with-valgrind": [[431, "cmdoption-with-valgrind"]], "--with-wheel-pkg-dir": [[431, "cmdoption-with-wheel-pkg-dir"]], "--without-c-locale-coercion": [[431, "cmdoption-without-c-locale-coercion"]], "--without-decimal-contextvar": [[431, "cmdoption-without-decimal-contextvar"]], "--without-doc-strings": [[431, "cmdoption-without-doc-strings"]], "--without-freelists": [[431, "cmdoption-without-freelists"]], "--without-pymalloc": [[431, "cmdoption-without-pymalloc"]], "--without-readline": [[431, "cmdoption-without-readline"]], "--without-static-libpython": [[431, "cmdoption-without-static-libpython"]], "basecflags": [[431, "envvar-BASECFLAGS"]], "basecppflags": [[431, "envvar-BASECPPFLAGS"]], "bldshared": [[431, "envvar-BLDSHARED"]], "bolt_apply_flags": [[431, "cmdoption-arg-BOLT_APPLY_FLAGS"]], "bolt_instrument_flags": [[431, "cmdoption-arg-BOLT_INSTRUMENT_FLAGS"]], "bzip2_cflags": [[431, "cmdoption-arg-BZIP2_CFLAGS"]], "bzip2_libs": [[431, "cmdoption-arg-BZIP2_LIBS"]], "cc": [[431, "cmdoption-arg-CC"], [431, "envvar-CC"], [440, "index-24"]], "ccshared": [[431, "envvar-CCSHARED"]], "cflags": [[431, "cmdoption-arg-CFLAGS"], [431, "envvar-CFLAGS"], [431, "index-15"], [431, "index-16"], [431, "index-17"], [431, "index-18"], [431, "index-21"], [440, "index-25"]], "cflagsforshared": [[431, "envvar-CFLAGSFORSHARED"]], "cflags_aliasing": [[431, "envvar-CFLAGS_ALIASING"]], "cflags_nodist": [[431, "envvar-CFLAGS_NODIST"], [431, "index-14"], [431, "index-19"], [431, "index-24"]], "compileall_opts": [[431, "envvar-COMPILEALL_OPTS"]], "configure_cflags": [[431, "envvar-CONFIGURE_CFLAGS"]], "configure_cflags_nodist": [[431, "envvar-CONFIGURE_CFLAGS_NODIST"]], "configure_cppflags": [[431, "envvar-CONFIGURE_CPPFLAGS"]], "configure_ldflags": [[431, "envvar-CONFIGURE_LDFLAGS"]], "configure_ldflags_nodist": [[431, "envvar-CONFIGURE_LDFLAGS_NODIST"]], "config_site": [[431, "cmdoption-arg-CONFIG_SITE"]], "cpp": [[431, "cmdoption-arg-CPP"], [440, "index-26"]], "cppflags": [[431, "cmdoption-arg-CPPFLAGS"], [431, "envvar-CPPFLAGS"], [431, "index-11"], [431, "index-12"], [431, "index-29"], [440, "index-28"]], "curses_cflags": [[431, "cmdoption-arg-CURSES_CFLAGS"]], "curses_libs": [[431, "cmdoption-arg-CURSES_LIBS"]], "cxx": [[431, "envvar-CXX"]], "extra_cflags": [[431, "envvar-EXTRA_CFLAGS"]], "gdbm_cflags": [[431, "cmdoption-arg-GDBM_CFLAGS"]], "gdbm_libs": [[431, "cmdoption-arg-GDBM_LIBS"]], "hostrunner": [[431, "cmdoption-arg-HOSTRUNNER"]], "ldflags": [[431, "cmdoption-arg-LDFLAGS"], [431, "envvar-LDFLAGS"], [431, "index-13"], [431, "index-20"], [431, "index-22"], [431, "index-25"], [431, "index-26"], [431, "index-27"], [431, "index-30"], [440, "index-27"]], "ldflags_nodist": [[431, "envvar-LDFLAGS_NODIST"], [431, "index-23"], [431, "index-28"]], "ldshared": [[431, "envvar-LDSHARED"]], "libb2_cflags": [[431, "cmdoption-arg-LIBB2_CFLAGS"]], "libb2_libs": [[431, "cmdoption-arg-LIBB2_LIBS"]], "libedit_cflags": [[431, "cmdoption-arg-LIBEDIT_CFLAGS"]], "libedit_libs": [[431, "cmdoption-arg-LIBEDIT_LIBS"]], "libffi_cflags": [[431, "cmdoption-arg-LIBFFI_CFLAGS"]], "libffi_libs": [[431, "cmdoption-arg-LIBFFI_LIBS"]], "liblzma_cflags": [[431, "cmdoption-arg-LIBLZMA_CFLAGS"]], "liblzma_libs": [[431, "cmdoption-arg-LIBLZMA_LIBS"]], "libreadline_cflags": [[431, "cmdoption-arg-LIBREADLINE_CFLAGS"]], "libreadline_libs": [[431, "cmdoption-arg-LIBREADLINE_LIBS"]], "libs": [[431, "cmdoption-arg-LIBS"], [431, "envvar-LIBS"]], "libsqlite3_cflags": [[431, "cmdoption-arg-LIBSQLITE3_CFLAGS"]], "libsqlite3_libs": [[431, "cmdoption-arg-LIBSQLITE3_LIBS"]], "libuuid_cflags": [[431, "cmdoption-arg-LIBUUID_CFLAGS"]], "libuuid_libs": [[431, "cmdoption-arg-LIBUUID_LIBS"]], "linkcc": [[431, "envvar-LINKCC"]], "machdep": [[431, "cmdoption-arg-MACHDEP"]], "opt": [[431, "envvar-OPT"], [431, "index-10"]], "panel_cflags": [[431, "cmdoption-arg-PANEL_CFLAGS"]], "panel_libs": [[431, "cmdoption-arg-PANEL_LIBS"]], "pep 11": [[431, "index-1"], [436, "index-0"], [436, "index-38"], [445, "index-19"], [448, "index-34"], [454, "index-48"], [456, "index-5"]], "pep 703": [[431, "index-4"]], "pkg_config": [[431, "cmdoption-arg-PKG_CONFIG"]], "pkg_config_libdir": [[431, "cmdoption-arg-PKG_CONFIG_LIBDIR"]], "pkg_config_path": [[431, "cmdoption-arg-PKG_CONFIG_PATH"]], "profile_task": [[431, "envvar-PROFILE_TASK"], [431, "index-5"]], "purify": [[431, "envvar-PURIFY"]], "py_builtin_module_cflags": [[431, "envvar-PY_BUILTIN_MODULE_CFLAGS"]], "py_cflags": [[431, "envvar-PY_CFLAGS"]], "py_cflags_nodist": [[431, "envvar-PY_CFLAGS_NODIST"]], "py_core_cflags": [[431, "envvar-PY_CORE_CFLAGS"]], "py_core_ldflags": [[431, "envvar-PY_CORE_LDFLAGS"]], "py_cppflags": [[431, "envvar-PY_CPPFLAGS"]], "py_ldflags": [[431, "envvar-PY_LDFLAGS"]], "py_ldflags_nodist": [[431, "envvar-PY_LDFLAGS_NODIST"]], "py_stdmodule_cflags": [[431, "envvar-PY_STDMODULE_CFLAGS"]], "tcltk_cflags": [[431, "cmdoption-arg-TCLTK_CFLAGS"]], "tcltk_libs": [[431, "cmdoption-arg-TCLTK_LIBS"]], "zlib_cflags": [[431, "cmdoption-arg-ZLIB_CFLAGS"]], "zlib_libs": [[431, "cmdoption-arg-ZLIB_LIBS"]], "%appdata%": [[436, "index-8"]], "pathext": [[436, "index-4"], [436, "index-6"], [453, "index-51"]], "pep 397": [[436, "index-19"], [452, "index-9"], [454, "index-22"]], "pep 514": [[436, "index-21"], [448, "index-10"]], "pylauncher_allow_install": [[436, "index-29"]], "pylauncher_always_install": [[436, "index-30"]], "pylauncher_debug": [[436, "index-27"]], "pylauncher_dryrun": [[436, "index-28"], [436, "index-31"]], "pylauncher_no_search_path": [[436, "index-24"]], "py_python": [[436, "index-26"]], "pep 100": [[437, "index-3"]], "pep 201": [[437, "index-2"]], "pep 207": [[438, "index-4"], [438, "index-5"]], "pep 208": [[438, "index-13"]], "pep 217": [[438, "index-12"]], "pep 229": [[438, "index-8"]], "pep 230": [[438, "index-7"]], "pep 232": [[438, "index-10"]], "pep 241": [[438, "index-14"], [438, "index-15"], [438, "index-16"]], "pep 243": [[438, "index-17"]], "pep 234": [[439, "index-7"]], "pep 253": [[439, "index-0"], [439, "index-1"], [439, "index-3"], [439, "index-5"], [439, "index-6"]], "pep 261": [[439, "index-14"], [439, "index-15"]], "pep 264": [[439, "index-22"]], "rfc 2487": [[439, "index-18"]], "pep 218": [[440, "index-0"], [441, "index-0"], [441, "index-13"]], "pep 277": [[440, "index-7"]], "pep 279": [[440, "index-10"]], "pep 285": [[440, "index-13"], [440, "index-14"]], "pep 293": [[440, "index-15"]], "pep 301": [[440, "index-16"]], "what's new": [[440, "index-8"], [441, "index-7"], [442, "index-20"], [443, "index-13"]], "pep 322": [[441, "index-14"], [441, "index-6"]], "pep 327": [[441, "index-9"]], "pep 331": [[441, "index-11"]], "pep 288": [[442, "index-12"]], "pep 309": [[442, "index-3"]], "pep 314": [[442, "index-4"]], "pep 325": [[442, "index-13"]], "pep 333": [[442, "index-26"], [442, "index-27"]], "pep 339": [[442, "index-30"]], "pep 341": [[442, "index-8"]], "pep 347": [[442, "index-28"]], "pep 352": [[442, "index-15"], [443, "index-25"], [445, "index-25"]], "pep 356": [[442, "index-0"]], "pep 357": [[442, "index-18"]], "appdata": [[443, "index-5"]], "pep 3000": [[443, "index-1"]], "pep 3100": [[443, "index-2"]], "pep 3110": [[443, "index-11"], [445, "index-13"], [445, "index-27"]], "pep 3127": [[443, "index-17"]], "pep 361": [[443, "index-0"]], "pep 371": [[443, "index-8"]], "rfc 2033": [[443, "index-22"]], "rfc 3207": [[443, "index-23"]], "ldcxxshared": [[444, "index-12"]], "pep 3106": [[444, "index-6"]], "pep 3137": [[444, "index-7"]], "pep 372": [[444, "index-2"], [446, "index-0"]], "pep 373": [[444, "index-0"]], "pep 389": [[444, "index-4"], [451, "index-2"]], "pep 391": [[444, "index-5"], [451, "index-3"]], "pep 466": [[444, "index-17"], [444, "index-18"], [444, "index-19"], [444, "index-20"]], "pep 476": [[444, "index-25"]], "pep 477": [[444, "index-21"]], "pep 493": [[444, "index-26"]], "pythonshowalloccount": [[444, "index-15"]], "pythonshowrefcount": [[444, "index-14"]], "user_base": [[444, "index-9"]], "pep 274": [[445, "index-10"]], "pep 3102": [[445, "index-7"]], "pep 3108": [[445, "index-17"], [445, "index-20"], [445, "index-22"]], "pep 3109": [[445, "index-11"], [445, "index-26"]], "pep 3111": [[445, "index-32"]], "pep 3113": [[445, "index-15"]], "pep 3114": [[445, "index-30"]], "pep 3123": [[445, "index-35"]], "pep 3138": [[445, "index-3"]], "pep 4": [[445, "index-18"]], "pep 384": [[447, "index-39"], [451, "index-1"]], "pep 618": [[447, "index-26"], [447, "index-3"]], "pep 624": [[447, "index-12"], [448, "index-3"], [448, "index-40"]], "pep 632": [[447, "index-10"], [447, "index-28"], [449, "index-2"], [449, "index-33"]], "pep 635": [[447, "index-1"], [447, "index-16"]], "pep 652": [[447, "index-36"]], "pythonthreaddebug": [[447, "index-34"], [448, "index-33"]], "pep 11#tier-3": [[448, "index-35"]], "pep 484#annotating-instance-and-class-methods": [[448, "index-16"]], "pep 594": [[448, "index-2"], [448, "index-31"], [449, "index-31"], [449, "index-32"], [449, "index-35"], [450, "index-1"], [450, "index-10"], [450, "index-11"], [450, "index-12"], [450, "index-13"], [450, "index-14"], [450, "index-15"], [450, "index-16"], [450, "index-17"], [450, "index-18"], [450, "index-2"], [450, "index-3"], [450, "index-4"], [450, "index-5"], [450, "index-6"], [450, "index-7"], [450, "index-8"], [450, "index-9"]], "pep 624#alternative-apis": [[448, "index-41"]], "pep 654": [[448, "index-30"], [448, "index-7"], [448, "index-8"]], "pep 657": [[448, "index-27"], [448, "index-5"]], "pep 659": [[448, "index-28"], [448, "index-29"]], "pep 670": [[448, "index-36"], [448, "index-4"]], "pep 678": [[448, "index-9"], [449, "index-21"]], "pep 680": [[448, "index-0"], [448, "index-24"]], "pep 669": [[449, "index-11"]], "pep 683": [[449, "index-43"]], "pep 684": [[449, "index-44"], [449, "index-9"]], "pep 693": [[449, "index-0"]], "pep 697": [[449, "index-40"], [449, "index-42"]], "pep 699": [[449, "index-45"], [449, "index-46"]], "pep 701": [[449, "index-25"], [449, "index-27"], [449, "index-37"], [449, "index-38"], [449, "index-39"], [449, "index-6"], [449, "index-7"]], "pep 709": [[449, "index-13"], [449, "index-14"], [449, "index-28"]], "pep 385": [[451, "index-14"]], "pep 392": [[451, "index-0"]], "rfc 2818": [[451, "index-12"]], "pep 3144": [[452, "index-25"]], "pep 398": [[452, "index-0"]], "pep 409": [[452, "index-13"]], "pep 418": [[452, "index-28"]], "rfc 1870": [[452, "index-27"]], "yield from (in what's new)": [[452, "index-11"]], "pep 247": [[453, "index-37"]], "pep 3156": [[453, "index-25"], [453, "index-26"], [453, "index-31"], [453, "index-4"], [453, "index-8"]], "pep 424": [[453, "index-24"], [453, "index-38"]], "pep 429": [[453, "index-0"]], "pep 435": [[453, "index-28"], [453, "index-29"], [453, "index-6"]], "pep 445": [[453, "index-17"], [453, "index-43"], [453, "index-44"], [453, "index-52"]], "pep 446": [[453, "index-14"], [453, "index-2"], [453, "index-21"], [453, "index-22"]], "pep 450": [[453, "index-32"], [453, "index-33"], [453, "index-9"]], "pep 454": [[453, "index-10"], [453, "index-34"], [453, "index-35"]], "pep 456": [[453, "index-13"], [453, "index-47"]], "pep 441": [[454, "index-29"], [454, "index-30"]], "pep 465": [[454, "index-3"], [454, "index-4"], [454, "index-46"]], "pep 471": [[454, "index-13"], [454, "index-14"]], "pep 478": [[454, "index-0"]], "pep 486": [[454, "index-21"], [454, "index-23"]], "rfc 6152": [[454, "index-37"]], "pep 487": [[455, "index-13"], [455, "index-14"], [455, "index-15"], [455, "index-37"]], "pep 494": [[455, "index-0"]], "pep 511": [[455, "index-36"]], "pep 520": [[455, "index-23"]], "pep 628": [[455, "index-29"], [455, "index-30"]], "pep 545": [[456, "index-24"], [456, "index-25"]], "pep 553": [[456, "index-13"]], "pep 564": [[456, "index-17"], [456, "index-18"], [456, "index-32"]], "pep 596": [[458, "index-0"]], "pep 616": [[458, "index-12"], [458, "index-4"]]}})